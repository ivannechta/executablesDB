sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_480408 1 +
mov ds:dword_480404 1 +
mov ds:dword_480400 1 +
mov ds:dword_480410 1 +
jz loc_4010B0  +
mov ds:dword_480008 eax +
mov eax ds:dword_480414 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_453930  +
mov edx ds:dword_480418 +
mov ds:dword_48117C eax +
mov ds:dword_481180 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_453B70  +
cmp dword_468124 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_453BE0 +
call sub_453BD0  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_48041C +
mov dword ptr [esp+10h] offset dword_480000 +
mov dword ptr [esp+8] offset dword_480014 +
mov dword ptr [esp+4] offset dword_480018 +
mov ds:dword_480000 eax +
mov eax ds:dword_480420 +
mov dword ptr [esp] offset dword_48001C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_480010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_454930  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_480414 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_481184 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_481188 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_481188 +
test eax eax +
jz loc_401481  +
mov ds:dword_480004 1 +
mov eax ds:dword_481188 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_47DCC0 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_453EE0  +
mov [esp+88h+var_88] offset sub_453A20 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_480424 eax +
mov [esp+88h+var_88] offset dword_401000 +
call near ptr off_468148  +
call sub_4541B0  +
mov eax ds:_acmdln +
mov ds:dword_481170 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_48116C eax +
mov ebx ds:dword_480414 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_468000 eax +
mov eax ds:dword_48001C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_480018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_480018 esi +
call sub_454240  +
mov edx ds:dword_480014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_48001C +
mov ecx ds:dword_480014 +
mov edx ds:dword_480018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_465680  +
mov ecx ds:dword_480008 +
test ecx ecx +
mov ds:dword_48000C eax +
jz loc_4014AB  +
mov edx ds:dword_480004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_48000C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_481188 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_481188 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_483008 +
mov [esp+88h+var_88] offset unk_483000 +
call _initterm  +
test ebx ebx +
mov ds:dword_481188 2 +
jnz loc_401261  +
xchg ebx ds:dword_481184 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_481188 1 +
mov [esp+88h+var_84] offset unk_483018 +
mov [esp+88h+var_88] offset unk_48300C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_480414 1 +
call sub_454260  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_480414 0 +
call sub_454260  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_46CBD8 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_46CBD8 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
sub esp 14h +
test eax eax +
mov eax ds:_iob +
jz loc_4016CA  +
lea ebx [eax+40h] +
mov esi 1 +
mov [esp+14h+var_10] offset aUsageGcovOptio +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aPrintCodeCover +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aAAllBlocksShow +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aBBranchProbabi +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aCBranchCountsO +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aDDisplayProgre +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aFFunctionSumma +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aHHelpPrintThis +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aIIntermediateF +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aLLongFileNames +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aMDemangledName +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aNNoOutputDoNot +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aOObjectDirecto +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aPPreservePaths +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aRRelativeOnlyO +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aSSourcePrefixD +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aUUnconditional +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aVVersionPrintV +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_10] offset aXHashFilenames +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_C] offset aHttpsGcc_gnu_o +
mov [esp+14h+var_10] offset aForBugReportin +
mov [esp+14h+var_14] ebx +
call sub_406B60  +
mov [esp+14h+var_14] esi +
call exit  +
lea ebx [eax+20h] +
xor esi esi +
jmp loc_40157A  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [eax+1Ch] +
mov ebx [eax+18h] +
test esi esi +
jz loc_40171C  +
mov edx [ebx] +
test edx edx +
jnz loc_401702  +
jmp loc_401711  +
mov edx ebp +
mov ebp [edx+20h] +
mov [esp+24h+var_24] edx +
call free  +
test ebp ebp +
jnz loc_401700  +
add ebx 30h +
sub esi 1 +
jnz loc_4016F3  +
mov ebx [edi+18h] +
mov [esp+24h+var_24] ebx +
call free  +
mov eax [edi+24h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax ds:dword_480090 +
test eax eax +
jz loc_401749  +
mov edx [edi+4] +
mov eax [edi] +
cmp edx eax +
jz loc_40174B  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [edi] +
mov [esp+24h+var_24] eax +
call free  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov edx ds:dword_480028 +
mov ebx ds:dword_48002C +
mov ecx ds:dword_480038 +
sub ebx edx +
test ecx ecx +
jle loc_401890  +
cmp ebx eax +
mov esi eax +
jnb loc_4017F9  +
add ds:dword_480024 edx +
test ebx ebx +
jnz loc_401810  +
mov edx ds:dword_480040 +
lea eax [esi+ebx] +
mov ds:dword_480028 0 +
mov ds:dword_48002C ebx +
cmp eax edx +
ja loc_401834  +
mov eax ds:dword_480044 +
mov ecx ds:dword_480020 +
sub edx ebx +
shl edx 2 +
lea eax [eax+ebx*4] +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] eax +
call fread  +
shr eax 2 +
add eax ds:dword_48002C +
cmp esi eax +
mov ds:dword_48002C eax +
ja loc_401872  +
mov edx ds:dword_480028 +
mov eax ds:dword_480044 +
add esi edx +
mov ds:dword_480028 esi +
lea eax [eax+edx*4] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_480044 +
lea ecx ds:0[ebx*4] +
mov [esp+14h+var_C] ecx +
lea edx [eax+edx*4] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call memmove  +
jmp loc_401791  +
test edx edx +
mov ecx 400h +
cmovz edx ecx +
add edx eax +
lea eax [edx+edx] +
mov ds:dword_480040 eax +
mov eax ds:dword_480044 +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_437230  +
mov edx ds:dword_480040 +
mov ebx ds:dword_48002C +
mov ds:dword_480044 eax +
jmp loc_4017B7  +
sub esi eax +
xor eax eax +
add ds:dword_480030 esi +
mov ds:dword_48002C 0 +
jmp loc_401809  +
xor eax eax +
jmp loc_401809  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov [esp+30h+var_30] eax +
call strlen  +
add eax 1 +
mov [esp+30h+var_30] eax +
call sub_4371B0  +
mov [esp+30h+var_18] eax +
movzx eax byte ptr [esi] +
mov edi [esp+30h+var_18] +
test al al +
jz loc_401991  +
cmp byte ptr [esi+1] 3Ah +
jz loc_4019BC  +
xor ecx ecx +
test al al +
mov [esp+30h+var_14] edi +
jz loc_401956  +
cmp al 2Fh +
mov ebx esi +
jz loc_4019B5  +
cmp al 5Ch +
jnz loc_401902  +
jmp loc_4019B5  +
cmp dl 5Ch +
jz loc_40190C  +
cmp dl 2Fh +
nop   +
jz loc_40190C  +
add ebx 1 +
movzx edx byte ptr [ebx] +
test dl dl +
jnz loc_4018F6  +
mov ebp ebx +
sub ebp esi +
cmp ebp 1 +
jz loc_401965  +
cmp ebp 2 +
jz loc_401970  +
test ecx ecx +
jz loc_401924  +
mov byte ptr [edi] 2Fh +
add edi 1 +
mov [esp+30h+var_2C] esi +
mov esi ebx +
mov [esp+30h+var_30] edi +
add edi ebp +
mov [esp+30h+var_28] ebp +
call memcpy  +
mov ecx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jnz loc_40194E  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 5Ch +
jz loc_401944  +
cmp al 2Fh +
jz loc_401944  +
test al al +
jnz loc_4018E3  +
mov byte ptr [edi] 0 +
mov eax [esp+30h+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Eh +
jnz loc_40191A  +
mov esi ebx +
jmp loc_40193D  +
cmp al 2Eh +
jnz loc_40191A  +
cmp byte ptr [esi+1] 2Eh +
jnz loc_40191A  +
cmp [esp+30h+var_14] edi +
mov byte ptr [edi] 0 +
mov eax [esp+30h+var_14] +
jnz loc_40199D  +
lea eax [eax+ecx+2] +
mov [esp+30h+var_14] eax +
jmp loc_40191A  +
xor eax eax +
jmp loc_4018D9  +
cmp byte ptr [edi] 2Fh +
jz loc_4019D0  +
sub edi 1 +
cmp eax edi +
jnz loc_401998  +
mov eax [esp+30h+var_14] +
xor ecx ecx +
mov esi ebx +
cmp [esp+30h+var_18] eax +
setnz cl  +
jmp loc_40193D  +
xor ebp ebp +
jmp loc_40191A  +
mov [edi] al +
add esi 2 +
mov byte ptr [edi+1] 3Ah +
lea edi [edi+2] +
movzx eax byte ptr [esi] +
jmp loc_4018D9  +
mov eax edi +
jmp loc_4019A8  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edx ds:dword_48006C +
test edx edx +
jz loc_401A90  +
movzx ecx byte ptr [eax] +
xor edx edx +
test cl cl +
jnz loc_401A6F  +
nop   +
test dl dl +
jz loc_401ABF  +
cmp dl 2Fh +
mov ebx eax +
jnz loc_401A17  +
nop   +
jmp loc_401A8C  +
cmp cl 2Fh +
jz loc_401A21  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_401A12  +
mov esi ebx +
sub esi eax +
cmp esi 2 +
jnz loc_401A2F  +
cmp dl 2Eh +
jz loc_401A60  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ebp +
call memcpy  +
lea eax [ebp+esi+0] +
cmp byte ptr [ebx] 0 +
jnz loc_401A50  +
add esp 10h +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [eax] 23h +
lea ebp [eax+1] +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
jmp loc_401A00  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_401A2F  +
lea eax [ebp+1] +
mov byte ptr [ebp+0] 5Eh +
jmp loc_401A43  +
cmp byte ptr [eax+1] 3Ah +
mov edx ecx +
jnz loc_401A00  +
mov [ebp+0] cl +
add eax 2 +
add ebp 2 +
mov byte ptr [ebp-1] 7Eh +
movzx edx byte ptr [eax] +
jmp loc_401A00  +
xor esi esi +
jmp loc_401A2F  +
mov [esp+18h+var_18] eax +
call sub_437300  +
mov [esp+18h+var_18] eax +
mov esi eax +
call strlen  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebp +
mov [esp+18h+var_10] eax +
mov ebx eax +
call memcpy  +
add esp 10h +
lea eax [ebp+ebx+0] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax ebp +
jmp loc_401A48  +
***
mov eax [esp+8] +
mov eax [eax] +
mov [esp+8] eax +
mov eax ds:_stricmp +
jmp eax  +
***
jmp sub_401AF0  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
test eax eax +
mov eax offset aUnknown +
cmovz ebx eax +
mov eax ds:dword_4800D0 +
mov [esp+5Ch+var_4C] offset loc_401AD0 +
mov [esp+5Ch+var_50] 8 +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_54] eax +
mov eax ds:dword_4800D4 +
mov [esp+5Ch+var_58] eax +
call bsearch  +
test eax eax +
jz loc_401BA0  +
mov esi [eax+4] +
imul ebp esi +
mov eax ds:dword_4800E0 +
mov ecx ds:dword_4800B8 +
cmp [eax+ebp+4] ecx +
jg loc_401B52  +
add esp 5Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4800B4 +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aSSourceFileIsN +
mov [esp+5Ch+var_50] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+5Ch+var_5C] eax +
call sub_406B60  +
mov eax ds:dword_480064 +
test eax eax +
jz loc_401C40  +
mov eax ds:dword_4800E0 +
mov dword ptr [eax+ebp+4] 0 +
add esp 5Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi ds:dword_4800D0 +
mov eax ds:dword_4800CC +
lea edx [edi+2] +
cmp edx eax +
ja loc_401C67  +
mov eax ebx +
call sub_4018A0  +
mov [esp+5Ch+var_4C] offset loc_401AD0 +
mov [esp+5Ch+var_50] 8 +
mov edi eax +
mov [esp+5Ch+var_48] eax +
mov eax ds:dword_4800D0 +
mov [esp+5Ch+var_5C] edi +
mov [esp+5Ch+var_54] eax +
mov eax ds:dword_4800D4 +
mov [esp+5Ch+var_58] eax +
call bsearch  +
test eax eax +
mov edx eax +
jz loc_401CE0  +
mov esi [eax+4] +
imul ebp esi +
mov eax [edx] +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_58] eax +
call ds:_stricmp  +
test eax eax +
jnz loc_401CB0  +
mov eax ds:dword_4800D0 +
mov [esp+5Ch+var_50] offset loc_401E90 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] eax +
mov eax ds:dword_4800D4 +
mov [esp+5Ch+var_5C] eax +
call qsort  +
jmp loc_401B37  +
mov eax ds:_iob +
mov [esp+5Ch+var_58] offset aTheMessageIsDi +
add eax 40h +
mov [esp+5Ch+var_5C] eax +
call sub_406B60  +
mov ds:dword_480064 1 +
jmp loc_401B84  +
lea edx [eax+eax] +
shl eax 4 +
mov [esp+5Ch+var_5C] eax +
mov ds:dword_4800CC edx +
call sub_4371B0  +
mov edi ds:dword_4800D4 +
mov [esp+5Ch+var_58] edi +
mov esi eax +
mov eax ds:dword_4800D0 +
mov [esp+5Ch+var_5C] esi +
shl eax 3 +
mov [esp+5Ch+var_54] eax +
call memcpy  +
mov [esp+5Ch+var_5C] edi +
call free  +
mov ds:dword_4800D4 esi +
jmp loc_401BB6  +
mov eax ds:dword_4800D0 +
mov [esp+5Ch+var_5C] ebx +
lea edx [eax+1] +
mov ds:dword_4800D0 edx +
mov edx ds:dword_4800D4 +
lea edi [edx+eax*8] +
call sub_437310  +
mov [edi+4] esi +
mov [edi] eax +
jmp loc_401C14  +
mov esi ds:dword_4800DC +
cmp esi ds:dword_4800D8 +
jz loc_401E01  +
mov eax ds:dword_4800E0 +
imul ebp esi +
mov edx ds:dword_4800D0 +
add eax ebp +
mov edi [esp+5Ch+var_48] +
test al 1 +
mov [esp+5Ch+var_40] eax +
mov [esp+5Ch+var_44] 34h +
lea ecx [edx+1] +
mov ds:dword_4800D0 ecx +
mov ecx ds:dword_4800D4 +
lea edx [ecx+edx*8] +
lea ecx [esi+1] +
mov [edx] edi +
mov edi eax +
mov [edx+4] esi +
mov ds:dword_4800DC ecx +
jnz loc_401E52  +
test edi 2 +
jnz loc_401E65  +
mov ecx [esp+5Ch+var_44] +
xor eax eax +
shr ecx 2 +
stos   +
test byte ptr [esp+5Ch+var_44] 2 +
jz loc_401D63  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
test byte ptr [esp+5Ch+var_44] 1 +
jz loc_401D6D  +
mov byte ptr [edi] 0 +
mov ecx ds:dword_480074 +
mov edi [esp+5Ch+var_40] +
mov eax [esp+5Ch+var_48] +
test ecx ecx +
mov [edi] eax +
mov [edi+2Ch] eax +
jnz loc_401DB5  +
lea ecx [esp+5Ch+var_3C] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call ds:_stati64  +
mov edx [esp+5Ch+var_48] +
test eax eax +
jnz loc_401BFD  +
mov eax [esp+5Ch+var_18] +
mov edi [esp+5Ch+var_40] +
mov [edi+4] eax +
jmp loc_401BFD  +
mov [esp+5Ch+var_58] eax +
mov eax ds:dword_480078 +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] eax +
call ds:_strnicmp  +
mov edx [esp+5Ch+var_48] +
test eax eax +
mov eax [esp+5Ch+var_40] +
jnz loc_401DFD  +
mov ecx [eax+2Ch] +
mov eax ds:dword_480074 +
movzx edi byte ptr [ecx+eax] +
mov [esp+5Ch+var_48] eax +
mov eax edi +
cmp al 5Ch +
jz loc_401E78  +
cmp al 2Fh +
jz loc_401E78  +
mov eax [esp+5Ch+var_40] +
mov eax [eax] +
jmp loc_401D84  +
add esi esi +
mov ds:dword_4800D8 esi +
imul esi esi +
mov [esp+5Ch+var_5C] esi +
call sub_4371B0  +
mov esi ds:dword_4800DC +
mov edx ds:dword_4800E0 +
imul ebp esi +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
mov edi eax +
mov [esp+5Ch+var_44] edx +
mov [esp+5Ch+var_54] ebp +
call memcpy  +
mov edx [esp+5Ch+var_44] +
mov [esp+5Ch+var_5C] edx +
call free  +
mov eax edi +
mov ds:dword_4800E0 edi +
jmp loc_401CFA  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov [esp+5Ch+var_44] 33h +
jmp loc_401D3C  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
sub [esp+5Ch+var_44] 2 +
jmp loc_401D48  +
mov eax [esp+5Ch+var_48] +
mov edi [esp+5Ch+var_40] +
lea eax [ecx+eax+1] +
mov [edi+2Ch] eax +
mov eax [edi] +
jmp loc_401D84  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov [esp+4] eax +
mov eax ds:_stricmp +
mov [esp+8] edx +
jmp eax  +
***
sub esp 1Ch +
mov eax ds:dword_480020 +
test eax eax +
jz loc_401ED8  +
mov [esp+1Ch+var_1C] eax +
call fclose  +
mov ds:dword_480020 0 +
mov ds:dword_48002C 0 +
mov eax ds:dword_480044 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax ds:dword_480034 +
mov ds:dword_480040 0 +
mov ds:dword_480044 0 +
mov ds:dword_480038 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov edx dword ptr ds:unk_48004C +
mov esi ds:dword_480048 +
test edx edx +
jz loc_401FB0  +
xor ebx ebx +
nop   +
sub edx ebx +
add esi ebx +
mov [esp+18h+var_10] edi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] esi +
call fgets  +
test eax eax +
jz loc_401FA0  +
mov esi ds:dword_480048 +
lea eax [esi+ebx] +
mov [esp+18h+var_18] eax +
call strlen  +
test eax eax +
mov edx eax +
jz loc_401F6A  +
lea eax [ebx+eax-1] +
add eax esi +
cmp byte ptr [eax] 0Ah +
jz loc_401FD8  +
add ebx edx +
mov edx dword ptr ds:unk_48004C +
mov eax edx +
shr eax 1 +
cmp ebx eax +
jbe loc_401F30  +
add edx edx +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] esi +
mov dword ptr ds:unk_48004C edx +
call sub_437230  +
mov edx dword ptr ds:unk_48004C +
mov ds:dword_480048 eax +
mov esi eax +
jmp loc_401F30  +
test ebx ebx +
cmovnz eax ds:dword_480048 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 0C8h +
mov dword ptr ds:unk_48004C 0C8h +
call sub_4371B0  +
mov edx dword ptr ds:unk_48004C +
mov ds:dword_480048 eax +
mov esi eax +
jmp loc_401F2C  +
mov byte ptr [eax] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 0Ch +
mov eax 1 +
call sub_401760  +
test eax eax +
jz loc_402016  +
mov eax [eax] +
mov ecx ds:dword_48003C +
mov edx eax +
test ecx ecx +
bswap edx  +
cmovnz eax edx +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
call sub_401FF0  +
test eax eax +
jz loc_402034  +
add esp 0Ch +
jmp sub_401760  +
xor eax eax +
add esp 0Ch +
retn   +
***
movzx ecx byte ptr [edx+18h] +
test cl 20h +
jz loc_402060  +
mov edx [edx] +
add dword ptr [eax+14h] 1 +
mov ecx [edx+1Ch] +
or ecx [edx+18h] +
jz locret_402084  +
add dword ptr [eax+18h] 1 +
retn   +
test cl cl +
js locret_402084  +
push ebx  +
mov ecx [edx] +
add dword ptr [eax+8] 1 +
mov ebx [ecx+1Ch] +
or ebx [ecx+18h] +
jz loc_402077  +
add dword ptr [eax+0Ch] 1 +
mov ecx [edx+0Ch] +
or ecx [edx+8] +
jz loc_402083  +
add dword ptr [eax+10h] 1 +
pop ebx  +
retn   +
***
sub esp 1Ch +
push esi  +
push ebx  +
mov ebx eax +
lea eax ds:1Eh[edx*4] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea esi [esp+0Fh] +
and esi 0FFFFFFF0h +
test edx edx +
jz loc_40216C  +
lea ecx [edx+edx*2] +
shl ecx 4 +
imul eax edx +
add ecx ebx +
xor edx edx +
or byte ptr [ecx+edx-0Fh] 80h +
sub edx 30h +
cmp edx eax +
jnz loc_402160  +
mov [esi] ebx +
and byte ptr [ebx+21h] 7Fh +
mov ebx 1 +
sub ebx 1 +
mov eax [esi+ebx*4] +
mov eax [eax] +
test eax eax +
jz loc_4021A7  +
test byte ptr [eax+18h] 14h +
jnz loc_4021A0  +
mov edx [eax+4] +
movzx ecx byte ptr [edx+21h] +
test cl cl +
jns loc_4021A0  +
and ecx 7Fh +
mov [edx+21h] cl +
mov [esi+ebx*4] edx +
add ebx 1 +
mov eax [eax+20h] +
test eax eax +
jnz loc_402183  +
test ebx ebx +
jnz loc_402177  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
sub esp 8 +
call sub_401760  +
test eax eax +
jz loc_4022B0  +
mov edx ds:dword_48003C +
mov ecx [eax] +
test edx edx +
jnz loc_4022A0  +
mov edx [eax+4] +
xor ebx ebx +
add esp 8 +
or edx ebx +
mov eax ecx +
pop ebx  +
retn   +
mov edx [eax+4] +
bswap ecx  +
xor ebx ebx +
bswap edx  +
jmp loc_402293  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov dword ptr [esp+3Ch+var_24] eax +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [esp+3Ch+var_24+4] edx +
mov eax ecx +
or eax ebx +
setnz al  +
cmp dword ptr [esp+3Ch+var_24+4] ebx +
mov esi eax +
jg loc_4028FD  +
jge loc_4028F3  +
test edi edi +
js loc_40290B  +
mov eax esi +
test al al +
fldz   +
jz loc_402818  +
fstp  st +
fild  [esp+3Ch+var_24] +
mov dword ptr [esp+3Ch+var_1C] ecx +
mov dword ptr [esp+3Ch+var_1C+4] ebx +
fild  [esp+3Ch+var_1C] +
fdivp st(1) st +
test edi edi +
lea ebp [edi-1] +
jz loc_402985  +
mov eax dword ptr [esp+3Ch+var_24] +
mov esi 64h +
mov edx dword ptr [esp+3Ch+var_24+4] +
lea esi [esi+esi*4] +
sub ebp 1 +
add esi esi +
cmp ebp 0FFFFFFFFh +
jnz loc_402830  +
mov dword ptr [esp+3Ch+var_24+4] edx +
xor edx edx +
mov dword ptr [esp+3Ch+var_1C] esi +
mov dword ptr [esp+3Ch+var_1C+4] edx +
mov dword ptr [esp+3Ch+var_24] eax +
fild  [esp+3Ch+var_1C] +
fnstcw  [esp+3Ch+var_E] +
fmulp st(1) st +
movzx ebp [esp+3Ch+var_E] +
fadd  ds:flt_46E054 +
mov eax ebp +
mov ah 0Ch +
mov [esp+3Ch+var_10] ax +
fldcw  [esp+3Ch+var_10] +
fistp  [esp+3Ch+var_1C] +
fldcw  [esp+3Ch+var_E] +
mov eax dword ptr [esp+3Ch+var_1C] +
test eax eax +
mov ebp eax +
jnz loc_402961  +
mov eax dword ptr [esp+3Ch+var_24] +
or eax dword ptr [esp+3Ch+var_24+4] +
jz loc_402961  +
mov ebp 1 +
lea ebx [edi+1] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] offset a_U +
mov [esp+3Ch+var_3C] offset byte_480050 +
call sub_45A790  +
test edi edi +
jz loc_402954  +
mov edx eax +
sub edx edi +
movzx ecx ds:byte_48004F[edx+ebx] +
mov ds:byte_480050[edx+ebx] cl +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_4028C5  +
not edi  +
mov ds:byte_480050[eax+edi] 2Eh +
add esp 3Ch +
mov eax offset byte_480050 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [esp+3Ch+var_24] ecx +
jbe loc_4027F4  +
mov eax esi +
test al al +
jz loc_4027F4  +
test edi edi +
jns loc_402940  +
mov eax dword ptr [esp+3Ch+var_24] +
mov edx dword ptr [esp+3Ch+var_24+4] +
mov [esp+3Ch+var_38] offset aLld_0 +
mov [esp+3Ch+var_3C] offset byte_480050 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_30] edx +
call sub_45A790  +
add esp 3Ch +
mov eax offset byte_480050 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_38] offset aNan +
mov [esp+3Ch+var_3C] offset byte_480050 +
call sub_45A790  +
add esp 3Ch +
mov eax offset byte_480050 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_40289A  +
mov eax dword ptr [esp+3Ch+var_24+4] +
xor ecx dword ptr [esp+3Ch+var_24] +
xor eax ebx +
or ecx eax +
setnz al  +
sub esi 1 +
test al al +
cmovnz ebp esi +
jmp loc_40289A  +
fld  ds:flt_46E050 +
mov esi 64h +
jmp loc_402853  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
movzx eax byte ptr [ecx+18h] +
test al 20h +
jz loc_4029E6  +
mov eax [ecx] +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov eax edi +
or eax esi +
jnz loc_402AB0  +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] offset aCall2dNeverExe +
mov [esp+38h+var_38] ebp +
call sub_406B60  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test al al +
js loc_402A61  +
mov edx [ecx] +
mov edi [edx+18h] +
mov edx [edx+1Ch] +
mov [esp+38h+var_1C] edx +
or edx edi +
jz loc_402AF7  +
test al 8 +
mov esi offset aFallthrough_0 +
jnz loc_402A16  +
test al 10h +
mov esi offset aThrow_0 +
mov eax offset unk_46D7DF +
cmovz esi eax +
mov edx [ecx+0Ch] +
mov eax [ecx+8] +
mov ecx ds:dword_480068 +
mov [esp+38h+var_38] edi +
mov edi [esp+38h+var_1C] +
neg ecx  +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_34] edi +
call sub_4027C0  +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] offset aBranch2dTakenS +
mov [esp+38h+var_2C] eax +
call sub_406B60  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_48009C +
xor eax eax +
test edx edx +
jz loc_4029DE  +
mov edx [ecx+4] +
test byte ptr [edx+22h] 2 +
jnz loc_4029DE  +
mov eax [ecx] +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov eax edi +
or eax esi +
jnz loc_402B15  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] offset aUnconditional2 +
mov [esp+38h+var_38] ebp +
call sub_406B60  +
mov eax 1 +
jmp loc_4029DE  +
mov eax esi +
mov edx edi +
sub eax [ecx+8] +
sbb edx [ecx+0Ch] +
mov ecx ds:dword_480068 +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] edi +
neg ecx  +
mov [esp+38h+var_30] ecx +
call sub_4027C0  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] offset aCall2dReturned +
mov [esp+38h+var_2C] eax +
call sub_406B60  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] offset aBranch2dNeverE +
mov [esp+38h+var_38] ebp +
call sub_406B60  +
mov eax 1 +
jmp loc_4029DE  +
mov edx [ecx+0Ch] +
mov eax [ecx+8] +
mov ecx ds:dword_480068 +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] edi +
neg ecx  +
mov [esp+38h+var_30] ecx +
call sub_4027C0  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] offset aUnconditiona_0 +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_2C] eax +
call sub_406B60  +
mov eax 1 +
jmp loc_4029DE  +
***
sub esp 18h +
mov eax edx +
mov [esp+18h+var_18] ebx +
xor edx edx +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] 0 +
call sub_4027C0  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_14] offset aLinesExecutedS +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+18h+var_18] eax +
call sub_406B60  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+1Ch] +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] offset aSS_0 +
mov [esp+14h+var_8] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
mov eax [ebx] +
mov edx [ebx+4] +
test eax eax +
jnz loc_402D20  +
mov eax ds:_iob +
mov [esp+14h+var_10] offset aNoExecutableLi +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
mov eax ds:dword_4800A0 +
test eax eax +
jz loc_402C4A  +
mov esi [ebx+8] +
test esi esi +
jnz loc_402C50  +
mov eax ds:_iob +
mov [esp+14h+var_10] offset aNoBranches +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
mov esi [ebx+14h] +
test esi esi +
jnz loc_402CD8  +
mov eax ds:_iob +
mov [esp+14h+var_10] offset aNoCalls +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+0Ch] +
mov ecx esi +
sar ecx 1Fh +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] esi +
cdq   +
mov [esp+14h+var_C] 2 +
call sub_4027C0  +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_10] offset aBranchesExecut +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
mov esi [ebx+8] +
mov eax [ebx+10h] +
mov [esp+14h+var_C] 2 +
mov ecx esi +
sar ecx 1Fh +
cdq   +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_10] ecx +
call sub_4027C0  +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_10] offset aTakenAtLeastOn +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
mov esi [ebx+14h] +
test esi esi +
jz loc_402C32  +
mov eax [ebx+18h] +
mov ecx esi +
sar ecx 1Fh +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_10] ecx +
cdq   +
mov [esp+14h+var_C] 2 +
call sub_4027C0  +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_10] offset aCallsExecutedS +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+14h+var_14] eax +
call sub_406B60  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_402B60  +
jmp loc_402BFF  +
***
mov eax [ecx+8] +
mov edx [esp+4] +
test eax eax +
jz loc_402D5B  +
cmp eax edx +
jnz loc_402D45  +
jmp loc_402D53  +
cmp edx eax +
jz loc_402D53  +
mov eax [eax+2Ch] +
test eax eax +
jnz loc_402D41  +
lea esi [esi+0] +
retn 4  +
***
mov eax 1 +
retn 4  +
***
xor eax eax +
lea esi [esi+0] +
retn 4  +
***
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+8] +
mov [esp+5Ch+var_44] eax +
mov [esp+5Ch+var_40] edx +
mov [esp+5Ch+var_3C] 0 +
test esi esi +
mov [esp+5Ch+var_38] 0 +
jz loc_4035B8  +
mov [esp+5Ch+var_48] 0 +
lea eax [esp+5Ch+var_3C] +
mov ecx esi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_44] +
lea edx [esp+5Ch+var_30] +
mov [esp+5Ch+var_30] 0 +
mov [esp+5Ch+var_2C] 0 +
mov [esp+5Ch+var_28] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
mov eax esi +
mov [esp+5Ch+var_24] 0 +
mov [esp+5Ch+var_20] 0 +
mov [esp+5Ch+var_1C] 0 +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_402FF0  +
mov edi [esp+5Ch+var_48] +
mov ebx [esp+5Ch+var_14] +
mov ebp [esp+5Ch+var_18] +
or edi eax +
cmp ebx ebp +
mov [esp+5Ch+var_48] edi +
jz loc_40354A  +
lea esi [esi+0] +
mov eax [ebp+0] +
test eax eax +
jz loc_40353F  +
mov [esp+5Ch+var_5C] eax +
call sub_4640C0  +
add ebp 0Ch +
cmp ebx ebp +
jnz loc_403530  +
mov ebx [esp+5Ch+var_18] +
test ebx ebx +
jz loc_403556  +
mov [esp+5Ch+var_5C] ebx +
call sub_4640C0  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_403566  +
mov [esp+5Ch+var_5C] eax +
call sub_4640C0  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_403576  +
mov [esp+5Ch+var_5C] eax +
call sub_4640C0  +
mov esi [esi+2Ch] +
test esi esi +
jnz loc_4034A2  +
cmp edi 3 +
jz loc_403596  +
mov eax [esp+5Ch+var_3C] +
mov edx [esp+5Ch+var_38] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_403586  +
mov eax [esp+5Ch+var_44] +
xor edx edx +
call sub_403470  +
add eax [esp+5Ch+var_3C] +
adc edx [esp+5Ch+var_38] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
jmp loc_4035E9  +
lea eax [edx+1] +
cmp eax ecx +
jz loc_40361E  +
mov edx ecx +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ebx ds:dword_46E120[esi] +
ja loc_4035E2  +
cmp eax edx +
mov ecx edx +
jz loc_40361E  +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ds:dword_46E120[esi] ebx +
jnb loc_4035FE  +
lea eax [edx+1] +
cmp eax ecx +
jnz loc_4035E9  +
mov edx eax +
shl edx 4 +
cmp ebx ds:dword_46E120[edx] +
ja loc_403631  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset aHash_table_hig +
mov [esp+18h+var_14] 60h +
mov [esp+18h+var_18] offset a____GccGccHash +
call sub_406BF0  +
lea esi [esi+0] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_480118 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_40368B  +
jmp loc_4037AB  +
add eax 8 +
cmp esi eax +
jbe loc_4037AB  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_403680  +
cmp edx 1 +
jz loc_403680  +
test ebx ebx +
jz loc_40379E  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_4640C0  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_4640C0  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_4036D4  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_4036CD  +
cmp edx 1 +
jnz loc_403698  +
add eax 8 +
cmp esi eax +
ja loc_4036C0  +
mov ebx ds:dword_480118 +
test ebx ebx +
jz loc_403715  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_4036EF  +
sub eax 1 +
cmp edx eax +
ja loc_4036E8  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_4038D5  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_4038E4  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
mov ebx ds:dword_48011C +
test ebx ebx +
jz loc_40375D  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_403737  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_403730  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_403841  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_403850  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
mov ebx ds:dword_480100 +
test ebx ebx +
jz loc_403796  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_403778  +
sub eax 1 +
cmp edx eax +
ja loc_403771  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_4037B5  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_4037C0  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_4036A0  +
jmp loc_4036D4  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_403698  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_40378E  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_45C2E0  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_40378E  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_403966  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_40378E  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_40378E  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_403755  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_403755  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_403966  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_403755  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_403755  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_40370D  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_40370D  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_403966  +
sub ecx esi +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_40370D  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_40370D  +
call sub_467A10  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+38h+var_34] +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_4039E3  +
mov [esp+1Ch+arg_4] 1 +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
jmp sub_4371E0  +
mov [esp+1Ch+var_14] offset aGgc_internal_c +
mov [esp+1Ch+var_18] 37h +
mov [esp+1Ch+var_1C] offset a____GccGccGgcN +
call sub_406BF0  +
nop   +
jmp sub_437230  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+14h] +
test eax eax +
jz loc_403A53  +
cmp eax [ebx+10h] +
jz loc_403A53  +
sub eax 1 +
cmp [ebx+18h] eax +
jnb loc_403A53  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call feof  +
test eax eax +
jnz loc_403A4B  +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
test eax eax +
jnz loc_403A4B  +
mov ecx [ebx+10h] +
mov edx [ebx+14h] +
cmp ecx edx +
jz loc_403A82  +
mov eax [ebx+0Ch] +
mov esi ecx +
jmp loc_403AA7  +
lea eax [ecx+ecx] +
test ecx ecx +
mov esi 1000h +
cmovnz esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_437230  +
mov edx [ebx+14h] +
mov [ebx+10h] esi +
mov [ebx+0Ch] eax +
mov ecx [ebx+8] +
sub esi edx +
add edx eax +
mov [esp+14h+var_14] edx +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_8] ecx +
call fread  +
mov esi eax +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_403A4D  +
add [ebx+14h] esi +
test esi esi +
setnz al  +
jmp loc_403A4D  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
mov eax edx +
sub esp 30h +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_403B35  +
mov eax ds:dword_480124 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] eax +
call sub_40EEF0  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov eax ds:dword_480124 +
mov [esp+38h+var_38] eax +
call sub_40EF10  +
mov ecx [esp+38h+var_1C] +
mov esi eax +
cmp esi 1 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
jbe loc_403BB0  +
xor eax eax +
test cl cl +
jz loc_403BD0  +
mov [esp+38h+var_30] eax +
mov eax ds:dword_480124 +
lea edx [esp+38h+var_C] +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_40FF50  +
mov [esp+38h+var_38] ebx +
mov esi eax +
mov [esp+38h+var_2C] eax +
mov eax [esp+38h+var_C] +
mov [esp+38h+var_30] eax +
mov eax ds:dword_480124 +
mov [esp+38h+var_34] eax +
call sub_410680  +
cmp esi 1 +
mov [ebx+0Ch] edi +
jbe loc_403BB3  +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
xor eax eax +
mov edx offset aBuiltIn +
test esi esi +
cmovnz eax edx +
mov [ebx] eax +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_480124 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_410580  +
mov esi eax +
mov eax 1 +
jmp loc_403B62  +
***
sub esp 14h +
mov [esp+14h+var_14] 2C4h +
call sub_4640E0  +
lea ecx [eax+4] +
mov dword ptr [eax] 10h +
lea esi [eax+2C4h] +
mov edx ecx +
lea ebx [eax+2Ch] +
mov dword ptr [edx] 0 +
mov eax edx +
add edx 2Ch +
mov dword ptr [edx-28h] 0 +
sub eax ecx +
mov dword ptr [edx-24h] 0 +
mov dword ptr [edx-20h] 0 +
mov dword ptr [edx-1Ch] 0 +
mov dword ptr [edx-18h] 0 +
mov dword ptr [edx-14h] 0 +
mov dword ptr [edx-10h] 0 +
mov dword ptr [edx-0Ch] 0 +
mov byte ptr [edx-8] 1 +
cmp edx esi +
mov dword ptr [ebx+eax] 0 +
jnz loc_403C25  +
mov ds:dword_48012C ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_403CE6  +
mov ebx ds:dword_48012C +
test ebx ebx +
jz loc_403CF0  +
mov esi 10h +
xor ebp ebp +
nop   +
mov eax [ebx+4] +
test eax eax +
jz loc_403CCC  +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_403CCC  +
add dword ptr [ebx] 1 +
mov ebp ebx +
add ebx 2Ch +
sub esi 1 +
jnz loc_403CB0  +
test ebp ebp +
jz loc_403CE6  +
add dword ptr [ebp+0] 1 +
add esp 1Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_403C00  +
mov ebx ds:dword_48012C +
jmp loc_403CA7  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+48h+var_34] ecx +
call sub_403A30  +
mov edi [ebx+18h] +
mov eax [ebx+14h] +
sub eax edi +
jz loc_403FA0  +
add edi [ebx+0Ch] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] edi +
call memchr  +
test eax eax +
mov esi eax +
jz loc_403F69  +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
mov eax [ebx+8] +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_48] eax +
call ferror  +
mov ecx [esp+48h+var_30] +
test eax eax +
jnz loc_403FA0  +
mov eax esi +
sub eax edi +
mov [esp+48h+var_30] eax +
mov eax [ebx+18h] +
cmp eax [ebx+14h] +
mov [esp+48h+var_2C] eax +
jnb loc_403EFC  +
mov [ebp+0] edi +
mov eax [ebx+1Ch] +
lea ebp [eax+1] +
mov eax [ebx+20h] +
mov [ebx+1Ch] ebp +
cmp ebp eax +
mov [esp+48h+var_28] eax +
jbe loc_403FB0  +
test ecx ecx +
jz loc_4041D8  +
sub ecx [ebx+0Ch] +
mov [ebx+18h] ecx +
mov eax [esp+48h+var_34] +
mov esi [esp+48h+var_30] +
mov [eax] esi +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+18h] +
mov edi [ebx+0Ch] +
mov eax [ebx+14h] +
mov [esp-4+arg_0] 0Ah +
add edi edx +
sub eax edx +
mov [esp-4+arg_4] eax +
mov [esp+0] edi +
call memchr  +
test eax eax +
jnz loc_4041E3  +
mov eax ebx +
call sub_403A30  +
test al al +
jnz loc_403F40  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
mov byte ptr [ebx+24h] 1 +
add esi [ebx+14h] +
mov [esp+0] eax +
call ferror  +
test eax eax +
jnz loc_403FA0  +
test esi esi +
jz loc_4042FF  +
xor ecx ecx +
jmp loc_403EE5  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+28h] +
test edi edi +
jz loc_40432B  +
cmp dword ptr [edi+4] 63h +
ja loc_403F14  +
cmp [esp+48h+var_28] 64h +
ja loc_4040CB  +
mov eax [edi+4] +
cmp ebp eax +
jbe loc_403F14  +
sub esi [ebx+0Ch] +
test edi edi +
mov [esp+48h+var_28] esi +
jz loc_404267  +
mov esi [edi] +
mov edx [edi+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_4040A9  +
cmp byte ptr [edi+3] 0 +
jns loc_4041F1  +
mov dword ptr [ebx+28h] 0 +
lea eax [esi+1] +
mov byte ptr [esp+48h+var_1C] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax [edx+edx*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
mov [esp+48h+var_20] ecx +
mov [esp+48h+var_24] edx +
call sub_437230  +
mov edx [esp+48h+var_24] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [ebx+28h] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_20] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+48h+var_1C] 0 +
mov [eax+3] dl +
jz loc_40435E  +
lea edx [eax+8] +
add edi 8 +
lea eax [esi+esi*2] +
shl eax 2 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_24] ecx +
call memcpy  +
mov edi [ebx+28h] +
mov edx esi +
mov ecx [esp+48h+var_24] +
mov [edi+4] esi +
mov esi [esp+48h+var_2C] +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
mov [edx+8] ebp +
mov [edx+0Ch] esi +
mov esi [esp+48h+var_28] +
mov [edx+10h] esi +
jmp loc_403F14  +
mov eax [edi+4] +
test eax eax +
mov [esp+48h+var_24] eax +
jz loc_4040E9  +
imul eax ebp +
xor edx edx +
div  [esp+48h+var_28] +
cmp eax [esp+48h+var_24] +
jb loc_403F14  +
mov eax [edi] +
mov edx [esp+48h+var_24] +
sub esi [ebx+0Ch] +
and eax 7FFFFFFFh +
cmp edx eax +
jnz loc_4041B7  +
cmp byte ptr [edi+3] 0 +
jns loc_404278  +
mov eax [esp+48h+var_24] +
mov dword ptr [ebx+28h] 0 +
mov byte ptr [esp+48h+var_28] 1 +
add eax 1 +
cmp eax 4 +
mov [esp+48h+var_1C] ecx +
mov ecx 4 +
cmovb eax ecx +
mov [esp+48h+var_20] eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
call sub_437230  +
mov edx eax +
mov [ebx+28h] eax +
mov eax [esp+48h+var_20] +
mov dword ptr [edx+4] 0 +
and eax 7FFFFFFFh +
mov ecx eax +
mov eax [edx] +
and eax 80000000h +
or eax ecx +
mov ecx [esp+48h+var_1C] +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [esp+48h+var_28] 0 +
mov [edx+3] al +
jz loc_40431B  +
mov eax [esp+48h+var_24] +
add edx 8 +
add edi 8 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_28] ecx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+var_24] +
mov edi [ebx+28h] +
mov ecx [esp+48h+var_28] +
mov edx eax +
mov [edi+4] eax +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
lea eax [edx+8] +
mov [edx+8] ebp +
mov edx [esp+48h+var_2C] +
mov [eax+8] esi +
mov [eax+4] edx +
jmp loc_403F14  +
mov eax [ebx+14h] +
mov [ebx+18h] eax +
jmp loc_403F22  +
mov esi eax +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
jmp loc_403ECA  +
lea eax [esi+1] +
mov [esp+48h+var_44] eax +
mov eax [edi] +
mov [esp+48h+var_24] ecx +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_4081F0  +
mov ecx [esp+48h+var_24] +
mov esi eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_404324  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
and esi 7FFFFFFFh +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_24] ecx +
call sub_437230  +
mov ecx [esp+48h+var_24] +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_4040A9  +
mov byte ptr [esp+48h+var_1C] 0 +
xor esi esi +
mov eax 1 +
jmp loc_404016  +
test edi edi +
jz loc_404335  +
mov eax [edi+4] +
mov [esp+48h+var_28] ecx +
add eax 1 +
mov [esp+48h+var_44] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_4081F0  +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_24] eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_404357  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] ecx +
call sub_437230  +
mov ecx [esp+48h+var_24] +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_28] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_4041B7  +
mov [esp-4+arg_4] offset aGet_next_line +
mov [esp-4+arg_0] 221h +
mov dword ptr [esp+0] offset a____GccGccInpu +
call sub_406BF0  +
mov edi edx +
xor edx edx +
jmp loc_4041B7  +
xor edi edi +
jmp loc_404229  +
cmp [esp+48h+var_28] 64h +
jbe loc_404350  +
sub esi [ebx+0Ch] +
mov byte ptr [esp+48h+var_28] 0 +
mov eax 1 +
mov [esp+48h+var_24] 0 +
jmp loc_40411C  +
xor eax eax +
jmp loc_403FD3  +
xor edi edi +
jmp loc_4042BD  +
mov edi eax +
xor edx edx +
jmp loc_4040A9  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx 1 +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_2C] 20h +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_34] offset aC_0 +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_1C] eax +
call sub_45A760  +
mov [esp+38h+var_34] offset asc_46E3C1 +
mov [esp+38h+var_38] esi +
call sub_45A760  +
cmp edi 1 +
jle loc_40440B  +
mov [esp+38h+var_34] esi +
movzx ecx byte ptr [ebp+19h] +
mov eax ebx +
xor edx edx +
add ebx 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+38h+var_20] +
add eax ecx +
div  [esp+38h+var_1C] +
mov ecx eax +
mov eax 66666667h +
imul  ecx +
mov eax ecx +
sar eax 1Fh +
sar edx 2 +
sub edx eax +
lea eax [edx+edx*4] +
add eax eax +
sub ecx eax +
add ecx 30h +
mov [esp+38h+var_38] ecx +
call fputc  +
cmp ebx edi +
jnz loc_4043C5  +
mov [esp+38h+arg_0] esi +
mov [esp+38h+arg_4] offset asc_46E3C3 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45A760  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] offset aS_4 +
mov [esp+18h+var_18] eax +
call sub_45A760  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset aSource_locatio +
mov [esp+18h+var_C] eax +
call sub_45A760  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset asc_46E3C3 +
call sub_45A760  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
test eax eax +
jz loc_4044ED  +
call sub_403C90  +
test eax eax +
mov ebx eax +
jz loc_4044E8  +
mov dword ptr [eax+4] 0 +
mov eax [eax+8] +
test eax eax +
jz loc_4044AD  +
mov [esp] eax +
call fclose  +
mov eax [ebx+28h] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
test eax eax +
mov dword ptr [ebx+1Ch] 0 +
jz loc_4044D7  +
mov dword ptr [eax+4] 0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+20h] 0 +
mov byte ptr [ebx+24h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp+8] offset aDiagnostics_fi +
mov dword ptr [esp+4] 113h +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_406BF0  +
nop   +
lea esi [esi+0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov byte ptr [ecx+24h] 1 +
mov dword ptr [ecx+28h] 0 +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
test eax eax +
jz loc_40457C  +
mov [esp+18h+var_18] eax +
call fclose  +
mov dword ptr [ebx+8] 0 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_404592  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+28h] +
test eax eax +
jz loc_4045AE  +
cmp byte ptr [eax+3] 0 +
js loc_4045B3  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_48012C +
test eax eax +
jz locret_40460F  +
push esi  +
push ebx  +
sub esp 14h +
imul ebx [eax-4] +
add ebx eax +
cmp eax ebx +
jz loc_4045F5  +
sub ebx 2Ch +
nop   +
lea esi [esi+0] +
mov ecx ebx +
mov esi ebx +
call sub_404560  +
mov eax ds:dword_48012C +
sub ebx 2Ch +
cmp eax esi +
jnz loc_4045E0  +
sub eax 4 +
mov [esp+1Ch+var_1C] eax +
call sub_4640B0  +
mov ds:dword_48012C 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_404620  +
***
push esi  +
sub esp 0Ch +
mov eax [esp+0Ch+arg_0] +
call sub_403C90  +
test eax eax +
jz loc_4047C8  +
movzx eax byte ptr [eax+24h] +
add esp 0Ch +
retn   +
mov eax [esp+0Ch+arg_0] +
call sub_403D00  +
test eax eax +
jnz loc_4047C0  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 2Ch +
lea eax [esp+1Ch] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_40FF50  +
cmp eax 1 +
setz al  +
add esp 2Ch +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_403AF0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
xor ecx ecx +
sub esp 8 +
mov ebx [esp+10h] +
mov edx [esp+14h] +
mov eax ebx +
call sub_403AF0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_403AF0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_480124 +
mov ebx [esp+20h] +
mov [esp] eax +
mov [esp+4] ebx +
call sub_40FE90  +
test eax eax +
jz loc_4048C0  +
mov eax ds:dword_480124 +
mov [esp+4] ebx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_40FF50  +
mov ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_40FF50  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_480124 +
mov [esp+24h+var_24] eax +
call sub_40FBA0  +
mov ebx eax +
mov eax [esp+24h+arg_4] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_480124 +
mov [esp+24h+var_24] eax +
call sub_40FAC0  +
mov esi eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_480124 +
mov [esp+24h+var_24] eax +
call sub_40FAC0  +
mov eax ds:dword_480124 +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call sub_40F8A0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
xor eax eax +
push esi  +
mov ecx 0Dh +
push ebx  +
sub esp 50h +
lea edx [esp+1Ch] +
mov edi edx +
stos   +
mov eax ds:dword_480124 +
mov [esp+4] edx +
mov [esp] eax +
call sub_410B30  +
mov eax [esp+40h] +
mov esi [esp+3Ch] +
mov ebx [esp+24h] +
mov dword ptr [esp+4] offset aNumberOfExpand +
lea edi [esi+eax] +
add esi [esp+28h] +
add ebx eax +
add ebx [esp+38h] +
add esi eax +
mov eax [esp+2Ch] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov ecx [esp+2Ch] +
test ecx ecx +
jnz loc_404E60  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset aLineTableAlloc +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+20h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404A18  +
cmp eax 9FFFFFh +
jg loc_404E50  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdina +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+28h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404A5B  +
cmp eax 9FFFFFh +
jg loc_404E40  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapUse +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+1Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404A9E  +
cmp eax 9FFFFFh +
jg loc_404E30  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdi_0 +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+24h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404AE1  +
cmp eax 9FFFFFh +
jg loc_404E20  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapsAl +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+34h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404B24  +
cmp eax 9FFFFFh +
jg loc_404E10  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfMacroM +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+3Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404B67  +
cmp eax 9FFFFFh +
jg loc_404E00  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsUsedS +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+40h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404BAA  +
cmp eax 9FFFFFh +
jg loc_404DF0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsLocat +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
cmp edi 27FFh +
mov eax 20h +
jle loc_404BEB  +
cmp edi 9FFFFFh +
jg loc_404DE0  +
sar edi 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] edi +
mov dword ptr [esp+4] offset aMacroMapsSize5 +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+44h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404C2E  +
cmp eax 9FFFFFh +
jg loc_404DD0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aDuplicatedMaps +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
cmp ebx 27FFh +
mov eax 20h +
jle loc_404C6F  +
cmp ebx 9FFFFFh +
jg loc_404DC0  +
sar ebx 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTotalAllocated +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
cmp esi 27FFh +
mov edx 20h +
jle loc_404CB0  +
cmp esi 9FFFFFh +
jg loc_404DB0  +
sar esi 0Ah +
mov edx 6Bh +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aTotalUsedMapsS +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+48h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_404CF3  +
cmp eax 9FFFFFh +
jg loc_404DA0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aAdHocTableSize +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+4Ch] +
mov dword ptr [esp+4] offset aAdHocTableEntr +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax ds:dword_480124 +
mov eax [eax+58h] +
mov dword ptr [esp+4] offset aOptimized_rang +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax ds:dword_480124 +
mov eax [eax+5Ch] +
mov dword ptr [esp+4] offset aUnoptimized_ra +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset asc_46E3C3 +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404CF3  +
***
sar esi 14h +
mov edx 4Dh +
jmp loc_404CB0  +
***
sar ebx 14h +
mov eax 4Dh +
jmp loc_404C6F  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404C2E  +
***
sar edi 14h +
mov eax 4Dh +
jmp loc_404BEB  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404BAA  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404B67  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404B24  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404AE1  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404A9E  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404A5B  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_404A18  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aAverageNumberO +
cdq   +
idiv  ecx +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
jmp loc_4049DD  +
***
jmp loc_405122  +
mov eax ds:dword_480124 +
mov [esp+0Ch] ebx +
mov [esp+8] esi +
mov [esp+4] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sub_410680  +
mov eax [esp+44h] +
mov ebp [esp+3Ch] +
mov edi [esp+40h] +
test eax eax +
jnz loc_404FD0  +
lea eax [esp+38h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] ebp +
call sub_404620  +
test eax eax +
jz loc_405122  +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+0Ch] edi +
mov edi 1 +
mov [esp+8] ebp +
mov [esp+10h] ebx +
mov [esp+14h] eax +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aS3iLoc5i_S +
mov [esp] eax +
call sub_45A760  +
movzx ecx byte ptr [esi+18h] +
mov eax [esp+38h] +
mov [esp] ebp +
shl edi cl +
sub edi 1 +
cmp edi eax +
lea edx [eax+1] +
cmovg edi edx +
call strlen  +
cmp dword ptr [esp+24h] 3E7h +
lea ebp [eax+0Eh] +
ja loc_4050E8  +
cmp dword ptr [esp+24h] 63h +
ja loc_405104  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebx +
call sub_404370  +
mov eax [esp+70h] +
mov ecx esi +
mov dword ptr [esp+8] 1 +
mov edx ebp +
mov [esp+4] edi +
mov [esp] ebx +
call sub_404370  +
jmp loc_404FD0  +
***
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 3E8h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_404370  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 64h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_404370  +
jmp loc_4050AB  +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_46E3C3 +
mov [esp] eax +
call sub_45A760  +
mov eax ds:dword_480124 +
add dword ptr [esp+28h] 1 +
add dword ptr [esp+2Ch] 1Ch +
mov edx [eax+8] +
cmp [esp+28h] edx +
jb loc_404ED4  +
mov ebp [esp+70h] +
mov edx [eax+18h] +
mov ebx 7FFFFFFFh +
test edx edx +
jnz loc_40538E  +
mov ecx [eax+28h] +
mov edx offset aUnallocatedLoc +
mov eax ebp +
mov [esp] ebx +
call sub_404430  +
mov eax ds:dword_480124 +
mov dword ptr [esp+28h] 0 +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_40531D  +
mov [esp+70h] ebp +
mov eax [eax+10h] +
sub ebx 1 +
sub ebx [esp+28h] +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*8] +
mov edi [esi+0Ch] +
mov [esp] esi +
call sub_40FE80  +
mov [esp+8] ebx +
xor ebx ebx +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aMacroISUTokens +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_45A760  +
mov eax [esi] +
mov edx [esi+0Ch] +
mov dword ptr [esp+4] offset aSource_locatio +
mov [esp+8] eax +
add edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp] eax +
call sub_45A760  +
mov eax [esi+14h] +
mov dword ptr [esp+4] offset aExpansionPoint +
mov [esp+8] eax +
mov [esp] eax +
call sub_407A20  +
mov eax [esi] +
mov dword ptr [esp+4] offset aMapStart_locat +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aMacro_location +
mov [esp] eax +
call sub_45A760  +
mov eax [esi+0Ch] +
mov dword ptr [esp+24h] 4 +
test eax eax +
jnz loc_405280  +
jmp loc_4052EE  +
mov eax [esi] +
cmp ebp eax +
jnb loc_405355  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTokenUHasXLoca +
mov [esp] ebp +
call sub_407A20  +
add ebx 1 +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
jbe loc_4052EE  +
mov eax [esi+10h] +
mov edx [esp+24h] +
mov ebp [eax+ebx*8] +
mov edi [eax+edx] +
mov eax [esp+70h] +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aUUU +
mov [esp] eax +
call sub_45A760  +
cmp ebp edi +
jz loc_405251  +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov dword ptr [esp+4] offset aTokenUHasXLo_0 +
mov [esp] ebp +
call sub_407A20  +
mov [esp+8] ebx +
add ebx 1 +
mov [esp+0Ch] edi +
mov dword ptr [esp+4] offset aTokenUHasYLoca +
mov [esp] ebp +
call sub_407A20  +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
ja loc_405280  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_46E3C3 +
mov [esp] eax +
call sub_45A760  +
mov eax ds:dword_480124 +
add dword ptr [esp+28h] 1 +
mov ebx [eax+18h] +
cmp [esp+28h] ebx +
jb loc_405194  +
mov ebp [esp+70h] +
mov eax ebp +
mov ecx 7FFFFFFFh +
mov dword ptr [esp] 80000000h +
mov edx offset aMax_source_loc +
call sub_404430  +
mov eax ebp +
mov ecx 80000000h +
mov dword ptr [esp] 0FFFFFFFFh +
mov edx offset aAdHocLocations +
call sub_404430  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
sub edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aXLocationYLoca +
mov [esp] eax +
call sub_45A760  +
jmp loc_405273  +
***
mov edx [eax+28h] +
mov esi [eax] +
mov [esp+24h] edx +
jmp loc_404EEF  +
***
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ebx [edx] +
jmp loc_405166  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
lea eax ds:0[ebx*4] +
mov [ecx] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call sub_403980  +
xor edx edx +
test ebx ebx +
mov [edi+4] eax +
jle loc_40540F  +
mov ecx [esi+edx*4] +
mov [eax+edx*4] ecx +
add edx 1 +
cmp edx ebx +
jnz loc_405402  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_480124 +
mov [esp+1Ch+var_1C] eax +
call sub_40FF50  +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_480124 +
mov [esp+1Ch+var_1C] eax +
call sub_40FAC0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_40559F  +
mov ebx [esp+2Ch+arg_8] +
test ebx ebx +
jz loc_405583  +
mov eax [esp+2Ch+arg_0] +
mov ebx ecx +
mov [esp+2Ch+var_2C] eax +
call sub_405420  +
mov esi [ebx] +
mov edx [esi+18h] +
add dword ptr [esi+10h] 1 +
mov ecx eax +
mov ebp [esi+4] +
mov [esp+2Ch+var_18] eax +
shl edx 4 +
mov edi ds:dword_46E12C[edx] +
lea eax dword_46E120[edx] +
mov [esp+2Ch+var_1C] eax +
mov ebx edi +
mov [esp+2Ch+var_10] edi +
mov edi ds:dword_46E120[edx] +
mov [esp+2Ch+var_14] edi +
mov edi eax +
mov eax ecx +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+var_18] +
mov edi [esi] +
mov ecx edx +
mov edx eax +
sub edx ecx +
shr edx 1 +
add edx ecx +
mov ecx ebx +
shr edx cl +
mov ebx eax +
imul edx [esp+2Ch+var_14] +
sub ebx edx +
lea edx [edi+ebx*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_405553  +
cmp eax [edx] +
jz loc_405560  +
mov ecx [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_18] +
mul  dword ptr [ecx+8] +
mov ecx edx +
mov edx [esp+2Ch+var_18] +
mov eax edx +
sub edx ecx +
shr edx 1 +
add eax 1 +
add edx ecx +
movzx ecx byte ptr [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] eax +
mov eax [esi+14h] +
shr edx cl +
mov ecx [esp+2Ch+var_14] +
sub ecx 2 +
imul edx ecx +
sub [esp+2Ch+var_1C] edx +
lea ecx [eax+1] +
mov eax [esp+2Ch+var_18] +
jmp loc_40553B  +
add ecx 1 +
cmp eax [edx] +
jz loc_405560  +
add ebx [esp+2Ch+var_1C] +
mov [esi+14h] ecx +
mov edx ebx +
sub edx ebp +
cmp ebp ebx +
cmovbe ebx edx +
lea edx [edi+ebx*8] +
cmp dword ptr [edx] 0 +
jnz loc_405534  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [edx+4] +
mov esi [esp+2Ch+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
mov [esi] edx +
mov esi [esp+2Ch+arg_8] +
mov [esi] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E5h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_406BF0  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E4h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_406BF0  +
nop   +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+24h] +
mov esi [ebp+10h] +
test eax eax +
jz loc_405CF8  +
lea ecx [ebp-58h] +
call sub_412C20  +
mov edi [ebp+8] +
mov [ebp-6Ch] esi +
test edi edi +
jz loc_405CDC  +
test esi esi +
mov ebx offset aUnknownLocatio +
jnz loc_405610  +
lea ecx [ebp-58h] +
call sub_412C50  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+8] +
mov ebx offset aTrack_macro_ex +
mov [esp+0E8h+var_E8] eax +
call sub_41B370  +
cmp byte ptr [eax+2Dh] 2 +
jnz loc_4055F9  +
mov eax ds:dword_480124 +
mov ebx offset aSeenLineDirect +
cmp byte ptr [eax+50h] 0 +
jnz loc_4055F9  +
mov ebx [ebp+0Ch] +
lea eax [ebp-6Ch] +
mov dword ptr [ebp-68h] 1 +
mov [ebp-64h] eax +
test ebx ebx +
jz loc_405790  +
lea eax [ebp-64h] +
mov ecx [ebp+0Ch] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp-68h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp-6Ch] +
mov [esp+0E8h+var_E8] eax +
call sub_405460  +
mov ecx [ebp-68h] +
mov ebx ecx +
sub esp 0Ch +
test ecx ecx +
jnz loc_405795  +
xor edi edi +
xor esi esi +
xor edx edx +
test esi esi +
jnz loc_405744  +
lea ebx [edi+8] +
xor eax eax +
test edi edi +
cmovnz eax ebx +
mov ebx [ebp+14h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+8] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ebx +
lea ebx [ebp-58h] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_417B60  +
mov ebx eax +
lea esi [esi+0] +
test esi esi +
jz loc_4056D6  +
cmp byte ptr [esi+3] 0 +
js loc_405780  +
mov [esp+0E8h+var_E8] esi +
call free  +
test edi edi +
jz loc_40571C  +
mov eax [edi+4] +
test eax eax +
jz loc_40570E  +
mov eax [edi+0Ch] +
mov esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax 1 +
jmp loc_405709  +
mov eax [edi+eax*8+0Ch] +
add esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax esi +
cmp eax [edi+4] +
jb loc_4056F8  +
cmp byte ptr [edi+3] 0 +
js loc_405770  +
mov [esp+0E8h+var_E8] edi +
call free  +
test ebx ebx +
jnz loc_4055F9  +
mov eax [ebp-54h] +
cmp eax [ebp+18h] +
jle loc_405750  +
cmp eax [ebp+1Ch] +
jle loc_405760  +
cmp eax [ebp+20h] +
jg loc_405CAC  +
mov ebx offset aEnd_idxOutOfRa +
jmp loc_4055F9  +
lea edx [esi+8] +
jmp loc_405688  +
mov ebx offset aCaret_idxOutOf +
jmp loc_4055F9  +
mov ebx offset aStart_idxOutOf +
jmp loc_4055F9  +
mov dword ptr [edi+4] 0 +
jmp loc_40571C  +
mov dword ptr [esi+4] 0 +
jmp loc_4056D6  +
mov ebx 1 +
lea eax ds:8[ebx*8] +
and ebx 7FFFFFFFh +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_437230  +
mov edi eax +
mov eax [eax] +
mov dword ptr [edi+4] 0 +
and eax 80000000h +
or eax ebx +
mov ebx [ebp-68h] +
mov [edi] eax +
shr eax 18h +
and eax 7Fh +
mov [edi+3] al +
test ebx ebx +
jz loc_405D14  +
lea eax [ebx+ebx*2] +
and ebx 7FFFFFFFh +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_437230  +
mov ecx [ebp-68h] +
mov esi eax +
mov eax [eax] +
mov dword ptr [esi+4] 0 +
and eax 80000000h +
or eax ebx +
mov [esi] eax +
shr eax 18h +
and eax 7Fh +
test ecx ecx +
mov [esi+3] al +
jle loc_40567E  +
mov dword ptr [ebp-84h] 0 +
jmp loc_405A3F  +
lea eax [edx+1] +
mov byte ptr [ebp-94h] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*8] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-9Ch] edx +
mov [ebp-98h] ecx +
call sub_437230  +
mov ecx [ebp-98h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov [ebp-90h] eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov ecx edx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-94h] 0 +
mov [edx+3] al +
mov edx [ebp-9Ch] +
jz loc_405D1D  +
mov eax [ebp-90h] +
lea ecx ds:0[edx*8] +
add edi 8 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edi +
mov [ebp-94h] edx +
add eax 8 +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [ebp-90h] +
mov edx [ebp-94h] +
mov edi eax +
mov [eax+4] edx +
mov ecx edx +
lea eax [ecx+1] +
mov [edi+4] eax +
lea eax [edi+ecx*8] +
mov [eax+8] ebx +
mov ebx [ebp-8Ch] +
mov [eax+0Ch] ebx +
lea eax [ebp-5Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-7Ch] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_480124 +
mov [esp+0E8h+var_E8] eax +
call sub_40FF50  +
mov eax [ebp-80h] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-88h] +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp-5Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_480124 +
mov [esp+0E8h+var_E8] eax +
call sub_40F6F0  +
mov edx ds:dword_480124 +
lea ecx [ebp-4Ch] +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_4184D0  +
sub esp 8 +
test esi esi +
jz loc_405C33  +
mov ebx [esi] +
mov eax [esi+4] +
and ebx 7FFFFFFFh +
cmp ebx eax +
jnz loc_405A0B  +
cmp byte ptr [esi+3] 0 +
jns loc_405BD4  +
lea eax [ebx+1] +
mov byte ptr [ebp-7Ch] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-80h] ecx +
call sub_437230  +
mov ecx [ebp-80h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-7Ch] 0 +
mov [edx+3] al +
jz loc_405D26  +
lea ecx [ebx+ebx*2] +
add esi 8 +
lea eax [edx+8] +
shl ecx 2 +
mov [esp+0E8h+var_E4] esi +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
mov [ebp-7Ch] edx +
call memcpy  +
mov edx [ebp-7Ch] +
mov eax ebx +
mov [edx+4] ebx +
mov esi edx +
lea edx [eax+1] +
mov ecx [ebp-68h] +
mov [esi+4] edx +
mov edx [ebp-4Ch] +
lea eax [eax+eax*2] +
lea eax [esi+eax*4] +
add dword ptr [ebp-84h] 1 +
cmp [ebp-84h] ecx +
mov [eax+8] edx +
mov edx [ebp-48h] +
mov [eax+0Ch] edx +
mov edx [ebp-44h] +
mov [eax+10h] edx +
jge loc_405744  +
mov ebx [ebp-84h] +
mov eax [ebp-64h] +
mov eax [eax+ebx*4] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_480124 +
mov [esp+0E8h+var_E8] eax +
call sub_40FAC0  +
mov ebx ds:dword_480124 +
mov ecx 7FFFFFFFh +
mov [ebp-7Ch] edx +
mov edx [ebx+18h] +
test edx edx +
jz loc_405A7D  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_405C56  +
cmp eax 5FFFFFFFh +
ja loc_405C60  +
cmp dword ptr [ebp-7Ch] 5FFFFFFFh +
ja loc_405C70  +
xor ecx ecx +
mov edx eax +
lea eax [ebp-40h] +
call sub_403AF0  +
mov eax [ebp-3Ch] +
xor ecx ecx +
mov edx [ebp-7Ch] +
mov ebx [ebp-40h] +
mov [ebp-88h] eax +
mov eax [ebp-38h] +
mov [ebp-80h] eax +
lea eax [ebp-2Ch] +
call sub_403AF0  +
mov edx [ebp-24h] +
cmp ebx [ebp-2Ch] +
jnz loc_405C7A  +
mov ecx [ebp-88h] +
cmp ecx [ebp-28h] +
jnz loc_405C84  +
cmp [ebp-80h] edx +
mov [ebp-8Ch] edx +
jg loc_405C8E  +
lea eax [ebp-60h] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebx +
call sub_404620  +
test eax eax +
jz loc_405C98  +
mov ebx [ebp-80h] +
mov edx [ebp-8Ch] +
lea ecx [ebx-1] +
sub edx ebx +
add eax ecx +
lea ebx [edx+1] +
add ecx ebx +
cmp ecx [ebp-60h] +
jg loc_405CA2  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_43F590  +
test edi edi +
mov [ebp-8Ch] eax +
jz loc_405C43  +
mov edx [edi] +
mov ecx [edi+4] +
and edx 7FFFFFFFh +
cmp edx ecx +
jnz loc_4058E9  +
cmp byte ptr [edi+3] 0 +
js loc_405831  +
mov eax ecx +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_4081F0  +
mov ecx [edi+4] +
mov [esp+0E8h+var_E8] edi +
mov [ebp-94h] ecx +
mov edx eax +
lea eax ds:8[eax*8] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-90h] edx +
call sub_437230  +
mov edx [ebp-90h] +
mov ecx [ebp-94h] +
mov edi eax +
mov eax edx +
mov edx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] ecx +
and edx 80000000h +
or edx eax +
mov [edi] edx +
shr edx 18h +
and edx 7Fh +
mov [edi+3] dl +
jmp loc_4058E9  +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_4081F0  +
mov ebx [esi+4] +
mov [esp+0E8h+var_E8] esi +
mov edx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-7Ch] edx +
call sub_437230  +
mov edx [ebp-7Ch] +
mov esi eax +
mov eax edx +
mov edx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] ebx +
and edx 80000000h +
or edx eax +
mov eax ebx +
mov [esi] edx +
shr edx 18h +
and edx 7Fh +
mov [esi+3] dl +
jmp loc_405A0B  +
xor ebx ebx +
mov eax 1 +
mov byte ptr [ebp-7Ch] 0 +
jmp loc_40598A  +
mov byte ptr [ebp-94h] 0 +
xor edx edx +
mov eax 1 +
jmp loc_40583B  +
mov ebx offset aMacroExpansion +
jmp loc_4056C0  +
mov ebx offset aRangeStartsAft +
jmp loc_4056C0  +
mov ebx offset aRangeEndsAfter +
jmp loc_4056C0  +
mov ebx offset aRangeEndpoints +
jmp loc_4056C0  +
mov ebx offset aRangeEndpoin_0 +
jmp loc_4056C0  +
mov ebx offset aRangeEndpoin_1 +
jmp loc_4056C0  +
mov ebx offset aUnableToReadSo +
jmp loc_4056C0  +
mov ebx offset aLineIsNotWideE +
jmp loc_4056C0  +
mov eax [ebp-58h] +
mov edi [ebp+20h] +
mov ecx [eax+edi*8+4] +
mov edi [ebp+1Ch] +
mov edx [eax+edi*8] +
mov edi [ebp+18h] +
mov eax [eax+edi*8] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_404900  +
mov edi [ebp+24h] +
mov [edi] eax +
jmp loc_4055F9  +
mov [esp+0E8h+var_E0] offset aGet_substring_ +
mov [esp+0E8h+var_E4] 528h +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_406BF0  +
mov [esp+0E8h+var_E0] offset aGet_source_loc +
mov [esp+0E8h+var_E4] 5BBh +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_406BF0  +
xor ecx ecx +
xor esi esi +
jmp loc_40567E  +
mov edi ecx +
xor ecx ecx +
jmp loc_4058E9  +
mov esi edx +
xor eax eax +
jmp loc_405A0B  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+8] +
mov edi [ebp+0Ch] +
cmp ebx 1 +
jle loc_405E9A  +
test edi edi +
jz loc_405EB6  +
mov eax [edi] +
mov esi ecx +
mov [esp] eax +
call sub_405420  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 8 +
mov [ebp-1Ch] eax +
call sub_403980  +
test eax eax +
mov [ebp-28h] eax +
jz loc_405D9B  +
mov [esp+4] edi +
mov ecx eax +
mov [esp] ebx +
call sub_4053C0  +
sub esp 8 +
mov ebx [esi] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx+ecx*2] +
shl eax 2 +
cmp edx eax +
mov [ebp-2Ch] ecx +
jbe loc_405E76  +
mov eax [ebx+18h] +
mov esi [ebp-1Ch] +
add dword ptr [ebx+10h] 1 +
shl eax 4 +
lea edi dword_46E120[eax] +
mov ecx ds:dword_46E12C[eax] +
mov eax ds:dword_46E120[eax] +
mov [ebp-24h] ecx +
mov [ebp-20h] eax +
mov [ebp-30h] eax +
mov eax esi +
mul  dword ptr [edi+4] +
mov eax esi +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [ebp-20h] +
sub esi eax +
mov eax [edi+8] +
mov edi [ebx] +
lea edx [edi+esi*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_405E5D  +
mov ecx [ebp-1Ch] +
cmp ecx [edx] +
jz loc_405E66  +
mul  ecx +
lea eax [ecx+1] +
mov [ebp-20h] eax +
mov eax ecx +
movzx ecx byte ptr [ebp-24h] +
mov [ebp-24h] edi +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp-30h] +
shr eax cl +
mov ecx [ebp-2Ch] +
sub edx 2 +
imul eax edx +
sub [ebp-20h] eax +
mov eax [ebx+14h] +
lea edx [eax+1] +
jmp loc_405E40  +
mov edi [ebp-1Ch] +
add edx 1 +
cmp edi [eax] +
jz loc_405E88  +
add esi [ebp-20h] +
mov [ebx+14h] edx +
mov eax esi +
sub eax ecx +
cmp esi ecx +
cmovnb esi eax +
mov eax [ebp-24h] +
lea eax [eax+esi*8] +
mov edi [eax] +
test edi edi +
jnz loc_405E36  +
mov edx eax +
mov eax [ebp-1Ch] +
add dword ptr [ebx+8] 1 +
mov [edx] eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_45AEF0  +
mov eax [ebx+4] +
mov [ebp-2Ch] eax +
jmp loc_405DB4  +
***
mov edx eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CDh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_406BF0  +
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CEh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_406BF0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_45A7C0 +
mov dword ptr [esp] 20h +
call sub_403980  +
test eax eax +
mov ebx eax +
jz loc_405F3D  +
mov dword ptr [esp+0Ch] 1 +
mov ecx eax +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 40h +
call sub_45B1B0  +
sub esp 10h +
mov [esi] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+14h] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] eax +
call sub_40A7B0  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call sub_40B820  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_40B650  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_8] +
mov ebx [esp+2Ch+arg_10] +
test edi edi +
jz loc_4060D0  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_405FE6  +
mov esi [esp+2Ch+arg_8] +
test esi esi +
jz loc_405FEF  +
mov eax [esp+2Ch+arg_8] +
mov edi offset aDiagnostic_c +
mov [esp+2Ch+var_2C] eax +
call sub_437300  +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_405FE0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
cmp eax 13h +
jg loc_4060F4  +
mov ecx [esp+2Ch+arg_0] +
add eax 1 +
test ebx ebx +
mov [ecx] eax +
jz loc_406101  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 400Bh +
call sub_448880  +
test eax eax +
cmovnz ebx eax +
xor edi edi +
mov [esp+2Ch+var_10] eax +
mov ebp ds:off_46F178[edi*4] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call strncmp  +
test eax eax +
jnz loc_406054  +
movzx eax byte ptr [ebx+esi] +
cmp al 28h +
jz loc_4060E0  +
test al al +
jz loc_4060E0  +
add edi 1 +
cmp edi 4 +
jnz loc_40601B  +
mov edx [esp+2Ch+arg_8] +
mov eax offset a???_0 +
mov ebp eax +
mov [esp+2Ch+var_28] offset a0xLxSSD +
test edx edx +
cmovnz ebp [esp+2Ch+arg_8] +
test ebx ebx +
cmovz ebx eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_45A760  +
mov edx [esp+2Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_405FD7  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call free  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jnz loc_405FA7  +
jmp loc_405FD5  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_4060F4  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_10] 0 +
jmp loc_40605C  +
***
sub esp 2Ch +
mov edx [esp+2Ch+arg_8] +
test edx edx +
js loc_40614C  +
mov eax offset unk_46EC42 +
mov ecx eax +
jnz loc_406150  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] offset aSSS_0 +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_45A760  +
add esp 2Ch +
retn   +
mov [esp+2Ch+var_2C] edx +
call sub_448960  +
mov ecx offset asc_46EC43 +
jmp loc_406124  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4489B0  +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+30h+var_28] 5 +
mov [esp+30h+var_2C] offset aLocus +
movzx eax byte ptr [eax+27h] +
mov [esp+30h+var_14] edx +
mov [esp+30h+var_30] eax +
call sub_40D580  +
mov ebp eax +
movzx eax byte ptr [esi+27h] +
mov [esp+30h+var_30] eax +
call sub_40D5F0  +
test ebx ebx +
jz loc_406252  +
mov edi offset aBuiltIn_0 +
mov ecx 0Bh +
mov esi ebx +
cmps   +
jz loc_406232  +
mov edi [esp+30h+var_14] +
cmp byte ptr [edi] 0 +
jnz loc_406202  +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDS +
mov [esp+30h+var_24] eax +
call sub_406160  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_1C] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDDS +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_24] eax +
call sub_406160  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_24] eax +
mov [esp+30h+var_30] offset aSSS +
call sub_406160  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_24] eax +
mov eax ds:dword_480140 +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSS +
mov [esp+30h+var_28] eax +
call sub_406160  +
jmp loc_4061FA  +
***
jmp sub_406280  +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_C] +
mov eax [ebx] +
lea edx [ebx+65h] +
mov [esp+18h+var_14] ecx +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ecx +
mov ecx [esp+18h+arg_4] +
call sub_406180  +
mov edx [ebx] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_40B7F0  +
mov eax [ebx] +
mov [esp+18h+var_14] offset unk_46EC42 +
mov [esp+18h+var_18] eax +
call sub_40BE20  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_40B960  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+8] 5 +
mov dword ptr [esp+4] offset aLocus +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_40D580  +
mov esi eax +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_40D5F0  +
mov [esp+4] esi +
mov dword ptr [esp] offset aSSS_1 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_406160  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] offset aColumns +
call getenv  +
test eax eax +
jz loc_406366  +
mov [esp+18h+var_18] eax +
call atoi  +
test eax eax +
cmovg ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
mov [esp+28h+var_28] 28h +
mov ebx [ebp+arg_4] +
call sub_4371B0  +
test eax eax +
mov [esi] eax +
jz loc_4063FA  +
mov [esp+28h+var_24] 0 +
mov ecx eax +
mov [esp+28h+var_28] 0 +
call sub_40B850  +
sub esp 8 +
lea edi [esi+4] +
mov edx 38h +
test edi 1 +
jnz loc_40654F  +
test edi 2 +
jnz loc_406564  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_406431  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_406439  +
mov byte ptr [edi] 0 +
lea edi ds:0[ebx*4] +
mov byte ptr [esi+3Ch] 0 +
mov [esi+40h] ebx +
mov [esp+28h+var_28] edi +
call sub_4371B0  +
test ebx ebx +
mov [esi+44h] eax +
lea edx [eax+edi] +
jle loc_40646D  +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_406460  +
mov eax [esi] +
mov byte ptr [esi+58h] 0 +
mov eax [eax+1Ch] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call sub_406370  +
mov byte ptr [esi+60h] 5Eh +
mov byte ptr [esi+61h] 5Eh +
mov byte ptr [esi+62h] 5Eh +
mov byte ptr [esi+63h] 0 +
mov byte ptr [esi+64h] 0 +
mov byte ptr [esi+65h] 0 +
mov byte ptr [esi+66h] 0 +
mov byte ptr [esi+67h] 0 +
mov dword ptr [esi+68h] 0 +
mov byte ptr [esi+6Ch] 0 +
mov byte ptr [esi+6Dh] 0 +
mov byte ptr [esi+6Eh] 0 +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+74h] offset sub_406F90 +
mov dword ptr [esi+78h] offset sub_406280 +
mov dword ptr [esi+7Ch] offset sub_405F50 +
mov dword ptr [esi+84h] 0 +
mov dword ptr [esi+88h] 0 +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+94h] 0 +
mov dword ptr [esi+98h] 0 +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+9Ch] 0 +
mov byte ptr [esi+0A0h] 0 +
mov byte ptr [esi+0A1h] 0 +
mov byte ptr [esi+0A2h] 0 +
mov byte ptr [esi+0A3h] 0 +
mov dword ptr [esi+0A4h] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+5] +
mov dl 37h +
test edi 2 +
mov byte ptr [esi+4] 0 +
jz loc_40641A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40641A  +
***
push ebx  +
mov eax 2 +
sub esp 18h +
mov edx [esp+24h] +
test edx edx +
cmovns eax edx +
mov edx [esp+20h] +
mov ebx [edx] +
mov [esp] eax +
call sub_40D610  +
mov [ebx+27h] al +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+34h] +
test eax eax +
jz loc_4065EC  +
mov edx ds:dword_480140 +
cmp byte ptr [ebx+3Ch] 0 +
mov eax [ebx] +
mov [esp+14h+var_C] edx +
jnz loc_406646  +
mov [esp+14h+var_10] offset aSSomeWarningsB +
mov [esp+14h+var_14] eax +
call sub_40D2A0  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call sub_40D360  +
call sub_4045C0  +
mov eax [ebx+44h] +
mov [esp+14h+var_14] eax +
call free  +
mov ecx [ebx] +
mov dword ptr [ebx+44h] 0 +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call free  +
mov esi [ebx+0A4h] +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_406640  +
mov eax [esi+4] +
mov [esp+14h+var_14] eax +
call sub_448C60  +
mov [esp+14h+var_14] esi +
call sub_4640C0  +
mov dword ptr [ebx+0A4h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] offset aSAllWarningsBe +
mov [esp+14h+var_14] eax +
call sub_40D2A0  +
jmp loc_4065E2  +
***
mov eax [esp+arg_0] +
mov eax ds:dword_46F1A0[eax*4] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov eax [edi] +
cmp byte ptr [eax+25h] 0 +
jnz loc_4067D0  +
cmp ebx 1 +
jbe loc_4067C3  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_480124 +
mov [esp+3Ch+var_34] 2 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_40FF50  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_4067C3  +
cmp eax [edi+98h] +
jz loc_4067C3  +
mov [edi+98h] eax +
mov eax [eax+10h] +
test eax eax +
js loc_4067C3  +
mov edx ds:dword_480124 +
imul eax eax +
add eax [edx] +
cmp byte ptr [edi+65h] 0 +
mov [esp+3Ch+var_10] eax +
jnz loc_4067E3  +
mov ebx [eax+1Ch] +
mov edx 0FFFFFFFFh +
movzx ecx byte ptr [eax+18h] +
mov ebp [eax+8] +
mov esi [edi] +
sub ebx 1 +
sub ebx [eax] +
shl edx cl +
and edx ebx +
shr edx cl +
add edx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aInFileIncluded +
mov [esp+3Ch+var_3C] esi +
call sub_40D2A0  +
mov eax [esp+3Ch+var_10] +
mov esi 1 +
mov edx [eax+10h] +
test edx edx +
js loc_4067A7  +
nop   +
mov eax ds:dword_480124 +
imul edx edx +
add edx [eax] +
mov eax esi +
mov ebx [edx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov ebp [edx+8] +
mov [esp+3Ch+var_10] edx +
sub ebx 1 +
sub ebx [edx] +
shl eax cl +
neg eax  +
and eax ebx +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_38] offset aFromRSDR +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40D2A0  +
mov eax [esp+3Ch+var_10] +
mov edx [eax+10h] +
test edx edx +
jns loc_406750  +
mov eax [edi] +
mov [esp+3Ch+var_38] offset asc_46ED30 +
mov [esp+3Ch+var_3C] eax +
call sub_40D2A0  +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40B960  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] eax +
call sub_40B960  +
mov eax [edi] +
mov byte ptr [eax+25h] 0 +
jmp loc_406693  +
movzx esi byte ptr [eax+18h] +
mov edx 1 +
mov ebp [eax+8] +
mov ecx esi +
shl edx cl +
mov ecx [eax+1Ch] +
mov ebx edx +
sub edx 1 +
neg ebx  +
sub ecx 1 +
sub ecx [eax] +
and ebx ecx +
movzx ecx byte ptr [eax+19h] +
and edx ebx +
shr edx cl +
mov ecx esi +
mov [esp+3Ch+var_28] edx +
shr ebx cl +
add ebx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] ebx +
mov [esp+3Ch+var_38] offset aInFileInclud_0 +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40D2A0  +
jmp loc_40673E  +
***
push ebp  +
xor eax eax +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
mov esi [esp+30h] +
test ebx ebx +
js loc_4068F6  +
cmp ebx [esi+40h] +
jge loc_4068F6  +
cmp dword ptr [esp+38h] 0Dh +
jg loc_4068F6  +
mov eax [esi+44h] +
mov edx [esp+3Ch] +
lea eax [eax+ebx*4] +
test edx edx +
mov ebp [eax] +
jz loc_406900  +
test ebp ebp +
jz loc_406915  +
mov eax [esi+4Ch] +
mov ecx eax +
sub ecx 1 +
mov [esp+0Ch] eax +
mov eax [esi+48h] +
js loc_4068C2  +
lea edx [ecx+ecx*2] +
shl edx 2 +
lea edi [eax+edx] +
cmp [edi+4] ebx +
lea edx [eax+edx-0Ch] +
jnz loc_4068BA  +
jmp loc_406910  +
mov edi edx +
sub edx 0Ch +
cmp [edx+10h] ebx +
jz loc_406910  +
sub ecx 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_4068B0  +
mov edi [esp+0Ch] +
mov [esp] eax +
lea edi [edi+edi*2+3] +
shl edi 2 +
mov [esp+4] edi +
call sub_437230  +
mov [esi+48h] eax +
lea eax [eax+edi-0Ch] +
mov edi [esp+3Ch] +
mov [eax+4] ebx +
mov [eax] edi +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax ebp +
add dword ptr [esi+4Ch] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+38h] +
mov [eax] esi +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [edi+8] +
jmp loc_4068C2  +
***
mov edx [esi+88h] +
mov bp 1 +
mov eax [esi+84h] +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_40693E  +
cmp byte ptr [esi+3Ch] 1 +
sbb ebp ebp +
and ebp 2 +
add ebp 4 +
mov eax [esi+44h] +
mov [eax+ebx*4] ebp +
jmp loc_406889  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [ebx+54h] +
mov eax [ebx+50h] +
lea edx ds:4[edx*4] +
mov [esp+4] edx +
mov [esp] eax +
call sub_437230  +
mov edx [ebx+54h] +
lea ecx [edx+1] +
mov [ebx+54h] ecx +
mov ecx [ebx+4Ch] +
mov [ebx+50h] eax +
mov [eax+edx*4] ecx +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [ebx+54h] +
test eax eax +
jz loc_4069AF  +
mov edx [ebx+50h] +
sub eax 1 +
mov [ebx+54h] eax +
mov edi [edx+eax*4] +
mov eax [ebx+4Ch] +
lea esi [eax+eax*2+3] +
mov eax [ebx+48h] +
shl esi 2 +
mov [esp+4] esi +
mov [esp] eax +
call sub_437230  +
mov edx [esp+24h] +
mov [ebx+48h] eax +
lea eax [eax+esi-0Ch] +
mov [eax] edx +
mov [eax+4] edi +
mov dword ptr [eax+8] 0Fh +
add dword ptr [ebx+4Ch] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
movzx edx byte ptr [ebp+0] +
cmp dl 2Eh +
jnz loc_406AD6  +
cmp byte ptr [ebp+1] 2Eh +
jnz loc_406ACA  +
movzx eax byte ptr [ebp+2] +
cmp al 5Ch +
jnz loc_406AC2  +
mov eax ebp +
jmp loc_406A2F  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_406A45  +
movzx edx byte ptr [eax+2] +
cmp dl 5Ch +
jnz loc_406A40  +
add eax 3 +
movzx edx byte ptr [eax] +
cmp dl 2Eh +
jz loc_406A20  +
mov edi edx +
jmp loc_406A4A  +
cmp dl 2Fh +
jz loc_406A2F  +
mov edi 2Eh +
mov edx offset a____GccGccDiag +
jmp loc_406A62  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_406A6D  +
movzx esi byte ptr [edx+2] +
mov ebx esi +
cmp bl 5Ch +
jnz loc_406AB7  +
add edx 3 +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_406A51  +
mov ebx edi +
cmp bl cl +
jnz loc_406A91  +
mov ebx edi +
test bl bl +
jnz loc_406A84  +
jmp loc_406A91  +
test cl cl +
jz loc_406A91  +
add eax 1 +
add edx 1 +
movzx ecx byte ptr [eax] +
cmp cl [edx] +
jz loc_406A80  +
cmp ebp eax +
jb loc_406AA9  +
jmp loc_406AB2  +
cmp dl 2Fh +
lea esi [esi+0] +
jz loc_406AB2  +
sub eax 1 +
cmp eax ebp +
jz loc_406AB2  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_406A97  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 2Fh +
jz loc_406A62  +
lea esi [esi+0] +
jmp loc_406A6D  +
cmp al 2Fh +
jz loc_406A1B  +
mov eax ebp +
mov edi 2Eh +
jmp loc_406A4A  +
mov edi edx +
mov eax ebp +
jmp loc_406A4A  +
***
sub esp 3Ch +
lea eax [esp+44h] +
mov [esp+18h] eax +
call ds:__imp__errno  +
lea edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+28h] 0 +
mov [esp+24h] eax +
lea eax [esp+18h] +
mov [esp+20h] eax +
mov eax [esp+40h] +
mov [esp+1Ch] eax +
mov eax off_46800C +
mov eax [eax] +
mov [esp+4] edx +
mov [esp] eax +
call sub_40D250  +
mov eax off_46800C +
mov eax [eax] +
mov [esp] eax +
call sub_40D360  +
add esp 3Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_455370  +
add esp 1Ch +
retn   +
***
sub esp 14h +
sub esp 1Ch +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
cmp eax 0Dh +
ja loc_406CE5  +
jmp ds:off_46EEA0[eax*4]  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_406CE0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+6Ch] 0 +
jnz loc_406D91  +
add esp 3Ch +
retn   +
cmp eax 3 +
jz loc_406D30  +
mov [esp+3Ch+var_10] 0 +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_406CE0  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseSubmitAF +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_406B60  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jle loc_406CAA  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseIncludeT +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_406B60  +
mov eax ds:_iob +
mov [esp+3Ch+var_34] offset aHttpsGcc_gnu_o +
mov [esp+3Ch+var_38] offset aSeeSForInstruc +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_406B60  +
mov [esp+3Ch+var_3C] 4 +
call exit  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jz loc_406D01  +
call abort  +
mov [esp+3Ch+var_34] offset aDiagnostic_act +
mov [esp+3Ch+var_38] 215h +
mov [esp+3Ch+var_3C] offset a____GccGccDi_0 +
call sub_406BF0  +
mov [esp+3Ch+var_3C] eax +
call sub_4065B0  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationTer +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_406B60  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] offset sub_406110 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] 0 +
call sub_4306A0  +
mov [esp+3Ch+var_10] 0 +
test eax eax +
jz loc_406C68  +
lea edx [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_30] offset sub_406110 +
mov [esp+3Ch+var_34] offset sub_405F90 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] eax +
call sub_4307F0  +
jmp loc_406C68  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationT_0 +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_406B60  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4065B0  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
jmp sub_406DD0  +
***
sub esp 14h +
sub esp 14h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [ebp+arg_4] +
mov [esp+18h+var_18] 0 +
mov ebx [ebp+arg_0] +
mov ecx esi +
call sub_40B440  +
sub esp 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ebx +
call sub_406670  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_406E90  +
mov edx [ebx] +
mov [ebp+arg_0] edx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp sub_40B7F0  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [ebp+0Ch] +
lea esi [ebp-74h] +
mov ebx [ebp+8] +
mov ecx esi +
lea edi [ebp-98h] +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp+14h] +
mov [ebp-9Ch] eax +
lea eax [ebp-9Ch] +
sub esp 8 +
mov [esp+8] eax +
mov eax [ebp+10h] +
mov dword ptr [esp+10h] 8 +
mov [esp+0Ch] esi +
mov [esp] edi +
mov [esp+4] eax +
call sub_406E30  +
cmp byte ptr [ebx+0A0h] 0 +
jnz loc_4070B7  +
mov eax [ebx] +
mov edx [eax+8] +
mov [esp+4] edi +
mov [esp] ebx +
mov [ebp-0ACh] edx +
call sub_406E90  +
mov ecx [ebx] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_40B7F0  +
mov eax [ebx] +
mov [esp+4] edi +
mov [esp] eax +
call sub_40BE70  +
mov eax [ebx] +
mov [esp] eax +
call sub_40D1A0  +
mov eax [ebx] +
mov [esp] eax +
call sub_40B820  +
mov eax [ebx] +
mov edx [ebp-0ACh] +
mov [esp] eax +
mov [esp+4] edx +
call sub_40B7F0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_40A7B0  +
mov ecx esi +
call sub_410E50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 24h +
test eax eax +
jz loc_4071E9  +
test edx edx +
mov ebx edx +
jz loc_407205  +
mov [esp+28h+var_24] 22h +
mov [esp+28h+var_28] eax +
call sub_40B9B0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_40712C  +
jmp loc_407152  +
cmp cl 22h +
jz loc_4071A0  +
cmp cl 5Ch +
nop   +
jnz loc_407180  +
mov [esp+28h+var_24] offset asc_46EEE2 +
mov [esp+28h+var_28] esi +
call sub_40BE20  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_407152  +
cmp cl 0Ah +
jz loc_407168  +
jg loc_407102  +
cmp cl 9 +
jnz loc_407180  +
add ebx 1 +
mov [esp+28h+var_24] offset aT +
mov [esp+28h+var_28] esi +
call sub_40BE20  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_40712C  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 22h +
call sub_40B9B0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+28h+var_24] offset aN +
mov [esp+28h+var_28] esi +
call sub_40BE20  +
jmp loc_407122  +
movzx eax cl +
movsx edx cl +
test byte ptr ds:word_479A60[eax+eax] 10h +
jz loc_4071B5  +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] esi +
call sub_40B9B0  +
jmp loc_407122  +
mov [esp+28h+var_24] offset asc_46EEEB +
mov [esp+28h+var_28] esi +
call sub_40BE20  +
jmp loc_407122  +
mov eax ecx +
and eax 7 +
mov [esp+28h+var_18] eax +
mov eax ecx +
shr al 3 +
shr cl 6 +
and eax 7 +
movzx ecx cl +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] offset aOOO +
mov [esp+28h+var_28] esi +
call sub_40D2E0  +
jmp loc_407122  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C1h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_406BF0  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C2h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_406BF0  +
jmp sub_407230  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [ebp+arg_4] +
mov [esp+88h+var_88] 0 +
mov esi [ebp+arg_0] +
mov ecx edi +
call sub_40B440  +
mov edx [edi+1Ch] +
sub esp 4 +
cmp edx 0Ah +
mov [ebp+var_4C] eax +
jz loc_4072C0  +
cmp edx 6 +
jz loc_4072C0  +
mov eax edx +
cmp eax 8 +
jz loc_4074D0  +
mov ecx [esi+9Ch] +
test ecx ecx +
jle loc_4072E4  +
cmp eax 0Dh +
jz loc_40727F  +
cmp eax 3 +
jnz loc_407284  +
cmp ecx 1 +
jz loc_4072D4  +
cmp ecx 2 +
jle loc_4078FD  +
mov eax ds:_iob +
mov [esp+88h+var_84] offset aInternalCompil +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_406B60  +
mov [esp+88h+var_84] 3 +
mov [esp+88h+var_88] esi +
call sub_406C20  +
call abort  +
lea esi [esi+0] +
cmp byte ptr [esi+6Dh] 0 +
jz loc_4074F0  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
call sub_40D360  +
mov edx [ebp+var_50] +
cmp byte ptr [esi+3Ch] 0 +
jz loc_4072F4  +
cmp dword ptr [edi+1Ch] 6 +
jz loc_407548  +
mov eax [edi+20h] +
test eax eax +
jnz loc_407421  +
mov eax [edi+1Ch] +
cmp eax 8 +
jz loc_4074C0  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] esi +
mov [ebp+var_4C] edx +
call sub_406B90  +
mov eax [edi+1Ch] +
add dword ptr [esi+9Ch] 1 +
mov edx [ebp+var_4C] +
cmp eax 0Dh +
jnz loc_407861  +
mov ebx [esi+14h] +
test ebx ebx +
jle loc_407554  +
cmp byte ptr [esi+64h] 0 +
jz loc_407875  +
mov ecx [esi+80h] +
test ecx ecx +
jz loc_40736E  +
mov eax [edi] +
mov ebx [edi+4] +
mov [ebp+var_4C] edx +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ebx +
call ecx  +
mov eax [edi+1Ch] +
mov edx [ebp+var_4C] +
cmp eax 4 +
jnz loc_40737C  +
cmp edx 6 +
jz loc_407844  +
add dword ptr [esi+eax*4+4] 1 +
mov ebx [edi] +
cmp byte ptr [esi+63h] 0 +
mov [ebp+var_54] ebx +
jnz loc_407564  +
lea eax [edi+18h] +
mov [edi+0Ch] eax +
mov eax [esi] +
mov dword ptr [edi+18h] 0 +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] eax +
call sub_40BE70  +
mov eax [esi+74h] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_40D1A0  +
mov eax [esi+7Ch] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
cmp byte ptr [esi+0A3h] 0 +
jnz loc_407670  +
mov eax [edi+1Ch] +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call sub_406C20  +
mov ecx [esi+0A4h] +
mov eax [ebp+var_54] +
mov dword ptr [edi+18h] 0 +
test ecx ecx +
mov [edi] eax +
jz loc_40740D  +
mov eax [edi+14h] +
mov [esp+88h+var_88] eax +
call sub_40E8A0  +
sub esp 4 +
sub dword ptr [esi+9Ch] 1 +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esi+68h] +
jz loc_4072FF  +
mov ebx [esi+88h] +
mov ecx [esi+84h] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ebx +
call ecx  +
test eax eax +
jz loc_4072CA  +
mov ebx [esi+4Ch] +
mov edx [ebp+var_50] +
test ebx ebx +
jle loc_407826  +
sub ebx 1 +
mov [ebp+arg_4] edi +
jmp loc_407480  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_407855  +
mov edx [ebp+arg_4] +
cmp [edx+20h] ecx +
jz loc_407855  +
sub ebx 1 +
js loc_407820  +
mov ecx [esi+48h] +
lea eax [ebx+ebx*2] +
lea edi ds:0[eax*4] +
mov edx [ebp+var_4C] +
mov eax [ecx+eax*4] +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_480124 +
mov [esp+88h+var_88] eax +
call sub_4101F0  +
test eax eax +
js loc_407477  +
add edi [esi+48h] +
mov eax [edi+8] +
cmp eax 0Fh +
jnz loc_407460  +
mov ebx [edi+4] +
jmp loc_407477  +
add dword ptr [esi+9Ch] 1 +
jmp loc_40737C  +
cmp byte ptr [esi+0A0h] 0 +
jnz loc_4072CA  +
mov ecx [esi+9Ch] +
test ecx ecx +
jg loc_407275  +
jmp loc_4072E4  +
mov eax [ebp+var_4C] +
mov [ebp+var_50] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_480124 +
mov [esp+88h+var_88] eax +
call sub_40FE90  +
mov edx [ebp+var_50] +
test eax eax +
jz loc_407518  +
cmp byte ptr [esi+6Eh] 0 +
jz loc_4072CA  +
mov eax [edi+1Ch] +
cmp eax 0Ah +
jnz loc_407262  +
cmp byte ptr [esi+66h] 1 +
mov ecx [esi+9Ch] +
sbb edx edx +
and edx 2 +
add edx 4 +
test ecx ecx +
mov [edi+1Ch] edx +
mov eax edx +
jg loc_407275  +
jmp loc_4072E4  +
mov dword ptr [edi+1Ch] 4 +
jmp loc_4072F4  +
mov ecx [esi+18h] +
test ecx ecx +
jg loc_40733F  +
jmp loc_407349  +
mov ebx [edi+20h] +
mov ecx [esi+8Ch] +
mov [esp+88h+var_7C] eax +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] esi +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_407390  +
mov eax [edi+1Ch] +
mov edx ds:dword_46F1A0[eax*4] +
mov [esp+88h+var_88] edx +
mov [ebp+var_4C] edx +
call strlen  +
mov edx [ebp+var_4C] +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_80] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_40D580  +
mov [ebp+var_4C] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_40D5F0  +
mov edx [ebp+var_4C] +
mov ecx eax +
mov eax [edi] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_46EF68 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 46EF6Ah +
mov [esp+88h+var_84] 46EF6Ch +
mov [esp+88h+var_88] eax +
mov [ebp+var_50] ecx +
call sub_43F5F0  +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_454930  +
mov ecx [ebp+var_50] +
sub esp eax +
mov eax [edi] +
lea edx [esp+88h+var_59] +
and edx 0FFFFFFF0h +
mov ds:dword_481174 edx +
mov edx [ebp+var_4C] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_46EF68 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 46EF6Ah +
mov [esp+88h+var_84] 46EF6Ch +
mov [esp+88h+var_88] eax +
call sub_43F670  +
mov [edi] eax +
mov [esp+88h+var_88] ebx +
call free  +
jmp loc_407390  +
mov eax [edi+14h] +
mov [ebp+var_50] eax +
mov eax [esi] +
test eax eax +
mov ebx eax +
jz loc_4078E1  +
mov eax [ebp+var_50] +
test eax eax +
jz loc_4078C5  +
mov eax [eax+44h] +
test eax eax +
jz loc_4077A4  +
mov eax [ebp+var_50] +
mov [ebp+arg_0] esi +
mov esi ebx +
mov dword ptr [ebp-5Ch] 0FFFFFFF8h +
mov [ebp+var_4C] 0 +
add eax 44h +
mov [ebp+var_60] eax +
mov [ebp+arg_4] edi +
cmp [ebp+var_4C] 1 +
jle loc_407810  +
mov ebx [ebp+var_50] +
mov eax [ebp-5Ch] +
add eax [ebx+54h] +
mov ebx [eax] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [esp+88h+var_84] eax +
lea eax [ebp+var_40] +
mov [esp+88h+var_88] eax +
call sub_404820  +
mov eax [ebp+var_3C] +
mov [esp+88h+var_84] offset aFixIt +
mov edi [ebp+var_38] +
mov [esp+88h+var_88] esi +
mov [ebp+var_59+1] eax +
call sub_40BE20  +
mov edx [ebp+var_40] +
mov eax esi +
call sub_4070D0  +
mov eax [ebx] +
lea ecx [ebp+var_44] +
mov eax [eax+14h] +
mov [esp+88h+var_88] ecx +
mov ecx ebx +
call eax  +
sub esp 4 +
test al al +
jz loc_4077B1  +
mov eax [ebp+var_44] +
mov [esp+8Ch+var_88] eax +
lea eax [ebp+var_2C] +
mov [esp+8Ch+var_8C] eax +
call sub_404820  +
mov eax [ebp+var_24] +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_8C] esi +
add eax 1 +
mov [esp+8Ch+var_78] eax +
mov eax [ebp+var_28] +
mov [esp+8Ch+var_7C] eax +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_84] eax +
call sub_40D2E0  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4077DF  +
cmp eax 1 +
jnz loc_4077F0  +
mov edx [ebx+0Ch] +
mov eax esi +
call sub_4070D0  +
mov [esp+8Ch+var_8C] esi +
call sub_40B960  +
mov eax [ebp+var_50] +
add [ebp+var_4C] 1 +
mov ebx [ebp+var_4C] +
add dword ptr [ebp-5Ch] 4 +
cmp ebx [eax+44h] +
jb loc_4076B7  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov eax [esi] +
mov ebx eax +
mov [esp+8Ch+var_8C] ebx +
call sub_40B650  +
jmp loc_4073DA  +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] esi +
call sub_40D2E0  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_407768  +
mov edx [ebx+8] +
mov eax esi +
call sub_4070D0  +
jmp loc_40777B  +
mov [esp+8Ch+var_84] offset aPrint_parseabl +
mov [esp+8Ch+var_88] 31Bh +
mov [esp+8Ch+var_8C] offset a____GccGccDi_0 +
call sub_406BF0  +
lea esi [esi+0] +
mov eax [ebp+var_60] +
mov ebx [ebp+var_4C] +
lea eax [eax+ebx*4+4] +
jmp loc_4076CA  +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
mov ecx [edi+20h] +
mov eax [esi+44h] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_407850  +
mov [edi+1Ch] eax +
cmp eax 1 +
jnz loc_407302  +
jmp loc_4072CA  +
add dword ptr [esi+34h] 1 +
jmp loc_407381  +
mov eax [edi+1Ch] +
jmp loc_407836  +
test eax eax +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
jnz loc_407833  +
jmp loc_407826  +
cmp eax 3 +
jz loc_407334  +
lea esi [esi+0] +
jmp loc_40736E  +
mov ecx edi +
mov [esp+88h+var_88] 0 +
call sub_40B440  +
push edx  +
lea edx [ebp+var_2C] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edx +
call sub_404820  +
mov eax [ebp+var_28] +
mov [esp+88h+var_84] offset aSDConfusedByEa +
mov [esp+88h+var_7C] eax +
mov eax [ebp+var_2C] +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_406B60  +
mov [esp+88h+var_88] 4 +
call exit  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EFh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_406BF0  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EEh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_406BF0  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_40D360  +
jmp loc_40728D  +
***
sub esp 54h +
mov ebx [esp+54h+arg_10] +
cmp ebx 0Bh +
jz loc_407970  +
mov eax [esp+54h+arg_0] +
lea esi [esp+54h+var_28] +
mov [esp+54h+var_44] ebx +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_406E30  +
cmp ebx 0Ah +
jnz loc_4079B7  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_8] eax +
mov eax off_46800C +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
call sub_407230  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax off_46800C +
lea esi [esp+54h+var_28] +
cmp byte ptr [eax+67h] 1 +
mov [esp+54h+var_54] esi +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 6 +
mov [esp+54h+var_44] eax +
mov eax [esp+54h+arg_0] +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_406E30  +
mov eax off_46800C +
mov edx [eax+68h] +
mov [esp+54h+var_8] edx +
jmp loc_407958  +
cmp ebx 6 +
jz loc_40794B  +
jmp loc_407953  +
***
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_480124 +
mov [esp+88h+var_88] eax +
call sub_411170  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 8 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_407910  +
mov ecx ebx +
call sub_410E50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_407910  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax ds:dword_480128 +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
call sub_407910  +
mov ecx ebx +
mov esi eax +
call sub_410E50  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_407910  +
mov ecx ebx +
mov esi eax +
call sub_410E50  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_407BA0  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_407910  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_407910  +
mov ecx ebx +
mov esi eax +
call sub_410E50  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_407C50  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_407910  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_407910  +
mov ecx ebx +
mov esi eax +
call sub_410E50  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_407910  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
lea eax [ebp+0Ch] +
push ebx  +
sub esp 84h +
mov [ebp-68h] eax +
mov eax ds:dword_480128 +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+8] +
mov [esp] ebx +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_407910  +
mov ecx ebx +
call sub_410E50  +
mov ebx [ebp-4] +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
lea eax [ebp+10h] +
push ebx  +
sub esp 84h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_411170  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_407910  +
mov ecx ebx +
call sub_410E50  +
mov ebx [ebp-4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_407910  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_480128 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_480124 +
mov [esp+88h+var_88] eax +
call sub_411170  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 3 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_407910  +
mov [esp+88h+var_80] offset aInternal_error +
mov [esp+88h+var_84] 576h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_406BF0  +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_74] +
mov esi [ebp+arg_18] +
mov ecx ebx +
lea edi [ebp+var_98] +
mov [esp+144h+var_140] eax +
mov eax ds:dword_480124 +
mov [esp+144h+var_144] eax +
call sub_411170  +
mov eax [ebp+arg_8] +
sub esp 8 +
mov [esp+144h+var_13C] eax +
mov eax [ebp+arg_10] +
mov [esp+144h+var_140] eax +
mov eax [ebp+arg_C] +
mov [esp+144h+var_144] eax +
call sub_40EAB0  +
mov edx [ebp+arg_14] +
mov [esp+144h+var_134] esi +
mov [esp+144h+var_138] ebx +
mov [esp+144h+var_144] edi +
mov [esp+144h+var_13C] edx +
mov [esp+144h+var_140] eax +
call sub_406DD0  +
cmp esi 6 +
jnz loc_407F80  +
mov eax [ebp+arg_4] +
mov [ebp+var_78] eax +
mov eax off_46800C +
mov [esp+144h+var_140] edi +
mov [esp+144h+var_144] eax +
call sub_407230  +
mov ecx ebx +
mov esi eax +
call sub_410E50  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_407F10  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] 6 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call loc_407F10  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_407F10  +
add esp 3Ch +
retn   +
***
push ebx  +
sub esp 58h +
lea eax [esp+74h] +
mov [esp+28h] eax +
mov eax [esp+68h] +
lea ebx [esp+2Ch] +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp+4] eax +
mov eax [esp+6Ch] +
mov [esp] eax +
call sub_40EAB0  +
mov edx [esp+60h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_406DD0  +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp+4Ch] eax +
mov eax off_46800C +
mov [esp] eax +
call sub_407230  +
add esp 58h +
pop ebx  +
retn   +
***
lea eax [ebp+arg_8] +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_4] +
cmp edx eax +
jnb loc_40822E  +
test edx edx +
mov ecx 4 +
jz loc_408210  +
cmp edx 0Fh +
ja loc_408220  +
lea ecx [edx+edx] +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
lea ecx [edx+edx*2] +
shr ecx 1 +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aCalculate_allo +
mov [esp+1Ch+var_18] 0A7h +
mov [esp+1Ch+var_1C] offset a____GccGccVec_ +
call sub_406BF0  +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_46F251 +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_45A760  +
mov edx ds:dword_480258 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_4371E0  +
mov [ebp-4Ch] eax +
mov eax ds:dword_480258 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_4082B1  +
jmp loc_408625  +
add ecx 8 +
cmp edx ecx +
jbe loc_408625  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_4082A6  +
cmp ebx 1 +
jz loc_4082A6  +
xor esi esi +
test eax eax +
jz loc_408613  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_4085F3  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_4082F4  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_4082ED  +
cmp ebx 1 +
jnz loc_4082C0  +
add ecx 8 +
cmp edx ecx +
ja loc_4082E0  +
mov [ebp-48h] esi +
mov eax [ebp-48h] +
mov [esp+98h+var_8C] offset loc_45DBC0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] eax +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call qsort  +
mov edx ds:dword_480258 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_4371E0  +
mov [ebp-50h] eax +
mov eax ds:dword_480258 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_40835B  +
jmp loc_40862E  +
add ecx 8 +
cmp edx ecx +
jbe loc_40862E  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_408350  +
cmp ebx 1 +
jz loc_408350  +
xor edi edi +
lea esi [esi+0] +
test eax eax +
jz loc_408606  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_4085E0  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_4083A4  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_40839D  +
cmp ebx 1 +
jnz loc_408370  +
add ecx 8 +
cmp edx ecx +
ja loc_408390  +
mov esi [ebp-50h] +
mov [esp+98h+var_8C] offset loc_45DBC0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call qsort  +
test edi edi +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
jz loc_408450  +
lea eax [esi+edi*8] +
mov edx esi +
mov [ebp-44h] eax +
xor edi edi +
xor esi esi +
mov dword ptr [ebp-40h] 0 +
xor ebx ebx +
xor ecx ecx +
jmp loc_408416  +
mov ecx [ebp-3Ch] +
mov [ebp-40h] eax +
mov eax [edx+4] +
add edx 8 +
add ecx [eax+14h] +
add edi [eax+4] +
add esi [eax+8] +
mov [ebp-3Ch] ecx +
mov ecx [ebp-40h] +
add ecx [eax] +
add ebx [eax+10h] +
cmp edx [ebp-44h] +
mov eax ecx +
mov [ebp-30h] ecx +
mov ecx [ebp-3Ch] +
mov [ebp-2Ch] edi +
mov [ebp-28h] esi +
mov dword ptr [ebp-24h] 0 +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ecx +
jnz loc_408410  +
mov eax [ebp-50h] +
mov ebx 8Ch +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_7C] offset aPeakItems +
mov [esp+98h+var_80] offset aLeakItems +
mov [esp+98h+var_84] offset aTimes +
add eax 40h +
mov [esp+98h+var_88] offset aPeak +
mov [esp+98h+var_8C] offset aLeak +
mov [esp+98h+var_90] offset aHeapVectors +
mov [esp+98h+var_94] offset a48s11s15s10s17 +
mov [esp+98h+var_98] eax +
call sub_45A760  +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_4084A8  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov ebx [ebp-48h] +
sub ebx 1 +
js loc_40850B  +
mov edi [ebp-4Ch] +
lea esi [ebp-30h] +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*8] +
mov ecx [edi+ebx*8+4] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_45E220  +
sub esp 8 +
sub ebx 1 +
jns loc_4084F0  +
mov ebx 8Ch +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_408510  +
mov eax ds:_iob +
mov ebx 8Ch +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-20h] +
mov [esp+98h+var_90] offset aTotal +
mov [esp+98h+var_94] offset aS55li25li17li +
mov [esp+98h+var_84] eax +
mov eax [ebp-2Ch] +
mov [esp+98h+var_88] eax +
mov eax [ebp-30h] +
mov [esp+98h+var_8C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_45A760  +
nop   +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_408580  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_46F251 +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_45A760  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp-50h] +
lea esi [esi+edi*8] +
add edi 1 +
mov [esi] ecx +
mov [esi+4] ebx +
jmp loc_408387  +
mov edi [ebp-4Ch] +
lea edi [edi+esi*8] +
add esi 1 +
mov [edi] ecx +
mov [edi+4] ebx +
jmp loc_4082D7  +
test edx edx +
jnz loc_408378  +
jmp loc_4083A4  +
test edx edx +
jnz loc_4082C8  +
nop   +
lea esi [esi+0] +
jmp loc_4082F4  +
xor edx edx +
xor eax eax +
jmp loc_4082BE  +
xor edx edx +
xor eax eax +
jmp loc_408368  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
mov ecx ds:dword_48025C +
mov esi ebx +
mov [ebp-3Ch] eax +
sar esi 3 +
lea eax [ebp-38h] +
mov [esp+4] esi +
mov [esp] eax +
mov [ebp-38h] ebx +
call sub_45C860  +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_408700  +
mov ecx ds:dword_48025C +
lea edi [ebp-1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [ebp-1Ch] ebx +
call sub_45C860  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_4086B6  +
mov eax [eax+4] +
mov edx [eax] +
cmp [ebp+0Ch] edx +
ja loc_4089AF  +
sub edx [ebp+0Ch] +
cmp byte ptr [ebp-3Ch] 0 +
mov [eax] edx +
jnz loc_4086C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [ebp-1Ch] ebx +
mov ebx ds:dword_48025C +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] edi +
mov ecx ebx +
call sub_45C960  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_4086B6  +
mov dword ptr [eax] 1 +
add dword ptr [ebx+0Ch] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] 14h +
call loc_464170  +
mov dword ptr [eax] 0 +
mov edi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov [ebp-30h] eax +
mov eax ds:dword_480258 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-34h] ebx +
mov [ebp-40h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_43F310  +
mov edx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_43F310  +
mov ecx [edi+8] +
mov edx eax +
mov eax 9E3779B9h +
sub eax ecx +
mov edi edx +
sub eax edx +
sub ecx edx +
shr edi 0Dh +
xor edi eax +
mov eax edi +
sub ecx edi +
shl eax 8 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shr ecx 0Dh +
sub edi eax +
xor ecx edx +
mov edx ecx +
sub edi ecx +
shr edx 0Ch +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shl edi 10h +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
sub edx edi +
shr ecx 5 +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 3 +
sub edi ecx +
xor eax edx +
mov edx eax +
sub edi eax +
shl edx 0Ah +
sub ecx eax +
xor edx edi +
mov eax ecx +
mov ecx [ebp-40h] +
sub eax edx +
shr edx 0Fh +
xor edx eax +
lea edi [ebp-30h] +
mov [esp] edi +
mov [esp+4] edx +
call sub_45BC60  +
mov edi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_40888D  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_4640C0  +
mov edx [edi+4] +
add dword ptr [edx+0Ch] 1 +
mov eax [ebp-34h] +
lea edi [ebp-34h] +
mov ecx ds:dword_48025C +
mov [esp] edi +
mov [ebp-40h] edx +
sar eax 3 +
mov [esp+4] eax +
call sub_45C860  +
mov edx [ebp-40h] +
mov eax [eax] +
sub esp 8 +
test eax eax +
jnz loc_40867C  +
mov eax [ebp-34h] +
mov ecx ds:dword_48025C +
mov dword ptr [esp+8] 1 +
mov [esp] edi +
sar eax 3 +
mov [esp+4] eax +
mov [ebp-40h] edx +
call sub_45C960  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
mov edx [ebp-40h] +
jnz loc_40887E  +
mov ecx [ebp-34h] +
mov [eax] ecx +
mov [eax+4] edx +
mov dword ptr [eax+8] 0 +
jmp loc_40867C  +
***
mov dword ptr [esp] 18h +
call loc_464170  +
mov edi [ebp-30h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [ebp-44h] eax +
mov eax ds:dword_480258 +
mov [ebp-40h] eax +
mov eax [edi] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_43F310  +
mov ecx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-24h] ecx +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
call sub_43F310  +
mov edi [edi+8] +
mov ecx 9E3779B9h +
mov dword ptr [esp+8] 1 +
sub ecx edi +
mov edx eax +
sub ecx eax +
shr eax 0Dh +
sub edi edx +
xor eax ecx +
mov ecx edi +
mov edi eax +
sub ecx eax +
shl edi 8 +
xor edi ecx +
mov ecx edx +
sub ecx eax +
mov edx edi +
sub ecx edi +
sub eax edi +
shr edx 0Dh +
xor edx ecx +
mov ecx edx +
sub eax edx +
shr ecx 0Ch +
sub edi edx +
xor ecx eax +
mov eax edx +
mov edx ecx +
sub edi ecx +
shl edx 10h +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shr edi 5 +
sub ecx edx +
xor edi eax +
mov eax edi +
sub ecx edi +
shr eax 3 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shl ecx 0Ah +
sub edi eax +
xor ecx edx +
sub edi ecx +
shr ecx 0Fh +
xor ecx edi +
mov [esp+4] ecx +
mov ecx [ebp-40h] +
lea edi [ebp-30h] +
mov [esp] edi +
call sub_45BD80  +
mov edx [ebp-44h] +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4089A7  +
mov ecx [ebp-30h] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_40881C  +
***
call sub_467A70  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp] 14h +
call loc_464170  +
mov esi ds:dword_480258 +
mov dword ptr [eax] 0 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov eax [ebp+8] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-30h] ebx +
mov [ebp-34h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_43F310  +
mov edx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_43F310  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-30h] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_45BC60  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_408BB0  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_4640C0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-34h] +
lea ebx [ebp-34h] +
mov ecx ds:dword_48025C +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_45C860  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_408B70  +
mov eax [ebp+8] +
mov ecx ds:dword_48025C +
mov [ebp-1Ch] eax +
sar eax 3 +
mov [esp+4] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_45C860  +
mov ebx [eax] +
sub esp 8 +
test ebx ebx +
jz loc_408B67  +
mov eax [eax+4] +
mov edx [ebp+0Ch] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
ja loc_408B62  +
mov edx [ebp+10h] +
add edx [eax+10h] +
cmp edx [eax+14h] +
mov [eax+10h] edx +
jbe loc_408B58  +
mov [eax+14h] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [eax+8] edx +
jmp loc_408B47  +
***
xor eax eax +
jmp loc_408B47  +
***
mov eax [ebp-34h] +
mov ecx ds:dword_48025C +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_45C960  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_408B9E  +
mov edx [ebp-34h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
jmp loc_408B0D  +
***
mov dword ptr [esp] 18h +
call loc_464170  +
mov edx [ebp-30h] +
mov [ebp-40h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax ds:dword_480258 +
mov [ebp-3Ch] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_43F310  +
mov edx [ebp-40h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
mov [ebp-24h] ecx +
call sub_43F310  +
mov edx [ebp-40h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-3Ch] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_45BD80  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_408CC1  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_408AE9  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_480258 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_408CFB  +
jmp loc_408E1B  +
add eax 8 +
cmp esi eax +
jbe loc_408E1B  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_408CF0  +
cmp edx 1 +
jz loc_408CF0  +
test ebx ebx +
jz loc_408E0E  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_4640C0  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_4640C0  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_408D44  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_408D3D  +
cmp edx 1 +
jnz loc_408D08  +
add eax 8 +
cmp esi eax +
ja loc_408D30  +
mov ebx ds:dword_480258 +
test ebx ebx +
jz loc_408D85  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_408D5F  +
sub eax 1 +
cmp edx eax +
ja loc_408D58  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_408F45  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_408F54  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
mov ebx ds:dword_48025C +
test ebx ebx +
jz loc_408DCD  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_408DA7  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_408DA0  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_408EB1  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_408EC0  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
mov ebx ds:dword_480240 +
test ebx ebx +
jz loc_408E06  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_408DE8  +
sub eax 1 +
cmp edx eax +
ja loc_408DE1  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_408E25  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_408E30  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_408D10  +
jmp loc_408D44  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_408D08  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_408DFE  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_45C2E0  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_408DFE  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_408FD6  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_408DFE  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_408DFE  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_408DC5  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_408DC5  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_408FD6  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_408DC5  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_408DC5  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_408D7D  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_48011C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_408D7D  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_408FD6  +
sub ecx esi +
mov esi ds:dword_48011C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_45C3E0  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_408D7D  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_408D7D  +
call sub_467A70  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+38h+var_34] +
mov edx [esp+38h+var_30] +
mov eax [ecx] +
sub eax [edx] +
jnz locret_408FF4  +
mov eax [ecx+4] +
sub eax [edx+4] +
retn   +
***
push esi  +
push esi  +
mov ebx ecx +
push ebx  +
mov ebx ecx +
sub esp 14h +
lea ecx [ecx+20h] +
mov [esp+18h+var_18] 0FFFFFFFFh +
call sub_4092B0  +
mov eax [ebx+4] +
sub esp 4 +
mov [esp+18h+var_18] eax +
call sub_40B960  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov eax [ebx] +
cmp eax esi +
jle loc_409402  +
jmp loc_40940F  +
mov eax [edi+4] +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] eax +
call sub_40B9B0  +
mov eax [ebx] +
add eax 1 +
mov [ebx] eax +
cmp esi eax +
jg loc_4093E8  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
call sub_4093A0  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_409402  +
***
push edi  +
push edi  +
mov ebx eax +
sub esp 14h +
mov esi [eax+1Ch] +
test esi esi +
jle loc_40B3DC  +
cmp dword ptr [eax+18h] 1 +
jbe loc_40B3DC  +
mov eax [eax+8] +
test eax eax +
jz loc_40B3F1  +
mov [esp+14h+var_14] eax +
call strlen  +
mov edx esi +
sub edx eax +
cmp edx 1Fh +
jle loc_40B3E5  +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 20h +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_40B3D3  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ecx+10h] +
movzx eax byte ptr [ebp+10h] +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
mov eax ds:dword_480124 +
mov [esp] eax +
call sub_4111E0  +
sub esp 10h +
leave   +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
mov ebx ecx +
mov edi ebx +
mov ecx 0Bh +
sub esp 20h +
stos   +
lea esi [ebx+2Ch] +
mov edi esi +
lea edx [ebx+0E8h] +
mov cl 0Bh +
stos   +
mov eax ds:_iob +
mov [ebx+58h] ebx +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+64h] 0 +
add eax 40h +
mov [ebx+60h] eax +
lea eax [ebx+68h] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_40B4A1  +
mov [esp+28h+var_28] ebx +
mov byte ptr [ebx+0E8h] 1 +
mov [esp+28h+var_18] offset loc_40EB80 +
mov [esp+28h+var_1C] offset loc_40EB40 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_4491F0  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_18] offset loc_40EB80 +
mov [esp+28h+var_1C] offset loc_40EB40 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_4491F0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 18h +
lea eax [ecx+2Ch] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] 0 +
call sub_449360  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 0 +
call sub_449360  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EB80 +
mov ecx [ecx+4] +
call sub_40B510  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
call sub_40B540  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+4] +
mov eax [edx+58h] +
mov ecx [eax+8] +
cmp ecx [eax+4] +
jbe loc_40B5BB  +
cmp ecx [eax+10h] +
jb loc_40B5D6  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call sub_449360  +
mov edx [ebx+4] +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [eax+0Ch] ecx +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+4] +
mov ebx [edi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40B638  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [edi+58h] +
mov edx [esi+4] +
mov eax [eax+8] +
mov edx [edx+60h] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call fputs  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_40B5A0  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] ebx +
call sub_449250  +
mov eax [ebx+0Ch] +
jmp loc_40B608  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+4] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp byte ptr [eax+0E8h] 0 +
jnz loc_40B674  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call sub_40B5F0  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp loc_45A3D0  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
mov [esp] ebx +
call sub_40B5F0  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+20h] eax +
add esp 18h +
pop ebx  +
jmp loc_45A3D0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
movzx esi byte ptr [esp+34h] +
mov ebp [edi+4] +
mov ebx [ebp+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40B7D5  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [ebp+58h] +
mov ebp [eax+8] +
mov eax [edi+4] +
mov ebx [eax+60h] +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_40B735  +
jmp loc_40B7C5  +
cmp al 20h +
jz loc_40B748  +
cmp al 22h +
lea esi [esi+0] +
jz loc_40B752  +
cmp al 0Ah +
jz loc_40B764  +
mov [esp+4] ebx +
movsx eax byte ptr [ebp+0] +
add ebp 1 +
mov [esp] eax +
call fputc  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_40B7C5  +
cmp al 3Ch +
jz loc_40B748  +
jle loc_40B704  +
cmp al 5Ch +
lea esi [esi+0] +
jz loc_40B796  +
jg loc_40B7B8  +
cmp al 3Eh +
jnz loc_40B716  +
mov eax esi +
test al al +
lea esi [esi+0] +
jz loc_40B716  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_40B716  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_46F4DD +
call fwrite  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_40B716  +
***
cmp byte ptr [ebp+1] 0 +
jnz loc_40B752  +
mov dword ptr [esp+8] offset aPp_write_text_ +
mov dword ptr [esp+4] 0BEh +
mov dword ptr [esp] offset a____GccGccPret +
call sub_406BF0  +
sub eax 7Bh +
cmp al 2 +
ja loc_40B716  +
jmp loc_40B748  +
***
mov [esp+30h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40B5A0  +
***
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_449250  +
mov eax [ebx+0Ch] +
jmp loc_40B6E2  +
***
mov ebx [esp+8+arg_0] +
mov eax [esp+8+arg_4] +
mov [ebx+8] eax +
mov eax ebx +
call sub_40B3B0  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_40B83E  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov dword ptr [ecx] offset off_47EB80 +
mov [esp+14h+var_10] 0ECh +
mov [esp+14h+var_14] 1 +
call sub_4371E0  +
test eax eax +
mov esi eax +
jz loc_40B87E  +
mov ecx eax +
call sub_40B460  +
mov eax [esp+14h+arg_4] +
mov [ebx+4] esi +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov [ebx+1Ch] eax +
mov eax [esp+14h+arg_0] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax ebx +
mov byte ptr [ebx+24h] 0 +
mov byte ptr [ebx+25h] 0 +
mov byte ptr [ebx+26h] 1 +
mov byte ptr [ebx+27h] 0 +
call sub_40B3B0  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov esi [eax+4] +
mov ebx [esi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40B910  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [esi+58h] +
mov eax [eax+8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_449250  +
mov eax [ebx+0Ch] +
jmp loc_40B8F7  +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov edx [eax+58h] +
mov eax [edx+0Ch] +
cmp [edx+8] eax +
jz loc_40B946  +
sub eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax [eax+10h] +
sub eax [edx+64h] +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+4] +
mov ebx [eax+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40B994  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0Ah +
mov eax [esi+4] +
mov byte ptr [esi+25h] 0 +
mov dword ptr [eax+64h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_449250  +
mov eax [ebx+0Ch] +
jmp loc_40B977  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+1Ch] +
mov edx [esi+4] +
test eax eax +
jle loc_40B9D2  +
mov eax [esi+10h] +
sub eax [edx+64h] +
test eax eax +
jle loc_40B9F3  +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jz loc_40BA16  +
lea edx [eax+1] +
mov [edi+0Ch] edx +
mov [eax] bl +
mov eax [esi+4] +
add dword ptr [eax+64h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] esi +
call sub_40B960  +
movzx eax bl +
test byte ptr ds:word_479A60[eax+eax] 40h +
jnz loc_40B9EC  +
mov edx [esi+4] +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jnz loc_40B9DD  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edi +
call sub_449250  +
mov eax [edi+0Ch] +
jmp loc_40B9DD  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+20h] +
mov esi [edi+14h] +
test esi esi +
jle loc_40BA5A  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] edi +
call sub_40B9B0  +
cmp ebx esi +
jnz loc_40BA43  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_40BA70  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [edi+8] +
test esi esi +
jz loc_40BAF4  +
mov eax [edi+18h] +
test eax eax +
jz loc_40BB00  +
cmp eax 2 +
jnz loc_40BAF4  +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx [edi+4] +
mov edx [ebx+58h] +
mov ebp eax +
mov ecx [edx+0Ch] +
mov eax [edx+10h] +
sub eax ecx +
cmp ebp eax +
ja loc_40BB40  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_10] edx +
call memcpy  +
mov edx [esp+1Ch+var_10] +
add [edx+0Ch] ebp +
xor edx edx +
test ebp ebp +
jg loc_40BADC  +
jmp loc_40BAF0  +
add edx 1 +
add dword ptr [ebx+64h] 1 +
cmp ebp edx +
jz loc_40BAF0  +
cmp byte ptr [esi+edx] 0Ah +
jnz loc_40BAD1  +
add edx 1 +
cmp ebp edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_40BADC  +
mov byte ptr [edi+24h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+24h] 0 +
jz loc_40BB30  +
mov esi [edi+14h] +
test esi esi +
jle loc_40BAF4  +
xor ebx ebx +
nop   +
mov [esp+1Ch+var_18] 20h +
add ebx 1 +
mov [esp+1Ch+var_1C] edi +
call sub_40B9B0  +
cmp ebx esi +
jnz loc_40BB10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [edi+14h] 3 +
jmp loc_40BA8E  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_10] edx +
call sub_449250  +
mov edx [esp+1Ch+var_10] +
mov ecx [edx+0Ch] +
jmp loc_40BAAE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [ebp+4] +
mov edx [ebx+64h] +
test edx edx +
jz loc_40BBD6  +
mov ebp [ebx+58h] +
sub edi esi +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
sub eax edx +
cmp edi eax +
ja loc_40BC04  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] esi +
call memcpy  +
mov eax esi +
add [ebp+0Ch] edi +
test edi edi +
lea edx [esi+edi] +
jg loc_40BBBB  +
jmp loc_40BBCE  +
add eax 1 +
add dword ptr [ebx+64h] 1 +
cmp eax edx +
jz loc_40BBCE  +
cmp byte ptr [eax] 0Ah +
jnz loc_40BBB0  +
add eax 1 +
cmp eax edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_40BBBB  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] ebp +
call sub_40BA70  +
mov eax [ebp+1Ch] +
test eax eax +
jle loc_40BBFC  +
cmp esi edi +
jnz loc_40BBF7  +
jmp loc_40BBFC  +
add esi 1 +
cmp edi esi +
jz loc_40BBFC  +
cmp byte ptr [esi] 20h +
jz loc_40BBF0  +
mov ebx [ebp+4] +
jmp loc_40BB7D  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call sub_449250  +
mov edx [ebp+0Ch] +
jmp loc_40BB8E  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1Ch] +
cmp edx ecx +
mov [esp+28h+var_1C] eax +
jz loc_40BCB0  +
mov ebx edi +
lea esi [esi+0] +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 1 +
jnz loc_40BC5B  +
cmp al 0Ah +
jz loc_40BC5B  +
add ebx 1 +
cmp esi ebx +
jnz loc_40BC40  +
mov eax [esp+28h+var_1C] +
test eax eax +
jle loc_40BC7C  +
mov ecx [ebp+4] +
mov edx ebx +
mov eax [ebp+10h] +
sub edx edi +
sub eax [ecx+64h] +
cmp edx eax +
jl loc_40BC7C  +
mov [esp+28h+var_28] ebp +
call sub_40B960  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
call sub_40BB60  +
cmp ebx esi +
jz loc_40BCB0  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 1 +
jnz loc_40BCB8  +
cmp al 0Ah +
jz loc_40BCD9  +
cmp esi ebx +
jz loc_40BCB0  +
mov edi ebx +
jmp loc_40BC38  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 20h +
mov [esp+28h+var_28] ebp +
call sub_40B9B0  +
lea edx [ebx+1] +
cmp esi edx +
jz loc_40BCB0  +
movzx eax byte ptr [ebx+1] +
mov ebx edx +
cmp al 0Ah +
jnz loc_40BCA4  +
mov [esp+28h+var_28] ebp +
add ebx 1 +
call sub_40B960  +
jmp loc_40BCA4  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
cmp ecx 0FFFFFFFFh +
mov [esp+44h+var_2C] edx +
mov [esp+44h+var_28] ecx +
jz loc_40BE05  +
mov esi [esp+44h+var_28] +
mov eax [esp+44h+var_2C] +
test esi esi +
jz loc_40BE16  +
lea ebx [eax+1] +
mov [esp+44h+var_30] eax +
lea ebp [esp+44h+var_1F] +
jmp loc_40BD3C  +
mov edx ebp +
mov eax edi +
call sub_40BC20  +
mov [esp+44h+var_30] ebx +
add ebx 1 +
sub esi 1 +
jz loc_40BDA2  +
movzx eax byte ptr [ebx-1] +
lea ecx [ebx-1] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 10h +
jnz loc_40BD34  +
cmp ecx [esp+44h+var_30] +
ja loc_40BD87  +
mov [esp+44h+var_3C] eax +
mov [esp+44h+var_40] offset aX02x +
mov [esp+44h+var_44] ebp +
call sub_45A790  +
mov edx [edi+1Ch] +
test edx edx +
lea ecx [ebp+eax+0] +
jg loc_40BD27  +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
call sub_40BB60  +
jmp loc_40BD30  +
mov eax [edi+1Ch] +
lea ecx [ebx-2] +
test eax eax +
jle loc_40BDC8  +
mov edx [esp+44h+var_30] +
mov eax edi +
call sub_40BC20  +
movzx eax byte ptr [ebx-1] +
jmp loc_40BD56  +
mov eax [esp+44h+var_28] +
add [esp+44h+var_2C] eax +
mov eax [edi+1Ch] +
test eax eax +
jle loc_40BDE5  +
mov ecx [esp+44h+var_2C] +
mov eax edi +
mov edx [esp+44h+var_30] +
call sub_40BC20  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_40BB60  +
movzx eax byte ptr [ebx-1] +
jmp loc_40BD56  +
mov eax [esp+44h+var_2C] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_40] eax +
call sub_40BB60  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_44] edx +
call strlen  +
mov [esp+44h+var_28] eax +
jmp loc_40BD0A  +
mov [esp+44h+var_30] eax +
jmp loc_40BDAA  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea ecx [ebx+eax] +
mov eax [esi+1Ch] +
test eax eax +
jle loc_40BE50  +
add esp 14h +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
jmp sub_40BC20  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] ecx +
call sub_40BB60  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edi [ebx+18h] +
mov esi [ebx+1Ch] +
mov dword ptr [ebx+18h] 1 +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ebx +
call sub_40BE70  +
mov [esp+10h+var_10] ebx +
call sub_40D1A0  +
mov [ebx+18h] edi +
mov [ebx+1Ch] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_24] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+3Ch+var_18] eax +
lea eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] eax +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_40D250  +
add esp 3Ch +
retn   +
***
lea eax [esp+38h+arg_8] +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_14] eax +
lea eax [esp+38h+var_20] +
mov [esp+38h+var_18] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_1C] eax +
lea eax [esp+38h+var_1C] +
mov [esp+38h+var_34] eax +
call sub_40BE70  +
mov [esp+38h+var_38] ebx +
call sub_40D1A0  +
add esp 38h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_40D356  +
mov dword ptr [esp+4] 20h +
mov [esp] ebx +
call sub_40B9B0  +
mov dword ptr [ebx+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_40B960  +
mov [esp+18h+var_18] ebx +
call sub_40B650  +
mov byte ptr [ebx+25h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
jmp loc_40D390  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esp+24h] +
add [esi+14h] eax +
mov [esp] esi +
call sub_40B960  +
mov edi [esi+14h] +
test edi edi +
jle loc_40D3C9  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] esi +
call sub_40B9B0  +
cmp ebx edi +
jnz loc_40D3B2  +
mov byte ptr [esi+25h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movsx eax byte ptr [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40B9B0  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] 20h +
add esp 18h +
pop ebx  +
jmp sub_40B9B0  +
***
push ebp  +
xor ebp ebp +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov eax [esp+50h] +
mov [esp] eax +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_40D454  +
jmp loc_40D4DF  +
mov edx [esp+2Ch] +
cmp edx 1Fh +
jbe loc_40D46B  +
sub edx 7Fh +
cmp edx 20h +
jbe loc_40D46B  +
cmp eax 1 +
cmovnz edi ebp +
add ebx eax +
cmp esi ebx +
jbe loc_40D4D0  +
mov eax [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add eax ebx +
call loc_40B280  +
test eax eax +
jnz loc_40D437  +
lea eax ds:1[esi*4] +
mov [esp] eax +
call off_468014  +
mov ebx [esp+50h] +
add esi ebx +
mov edi eax +
mov ebp eax +
jmp loc_40D494  +
add ebx 1 +
add ebp 1 +
mov [ebp-1] al +
cmp ebx esi +
jz loc_40D4BD  +
movzx eax byte ptr [ebx] +
lea edx [eax-20h] +
cmp dl 5Eh +
jbe loc_40D487  +
mov [esp] ebp +
add ebx 1 +
add ebp 4 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a03o_0 +
call sub_45A790  +
cmp ebx esi +
jnz loc_40D494  +
mov byte ptr [ebp+0] 0 +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
test al al +
jnz loc_40D4DF  +
cmp ds:byte_480260 0 +
jz loc_40D4F0  +
mov eax [esp+50h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esi+esi*4] +
xor ebx ebx +
lea eax [eax+eax+1] +
mov [esp] eax +
call off_468014  +
mov [esp+1Ch] eax +
mov ebp eax +
jmp loc_40D51F  +
movzx eax byte ptr [edi] +
add ebx edx +
add ebp 1 +
mov [ebp-1] al +
cmp esi ebx +
jbe loc_40D564  +
mov edi [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add edi ebx +
mov eax edi +
call loc_40B280  +
cmp eax 1 +
mov edx eax +
jz loc_40D510  +
mov [esp+18h] eax +
mov eax [esp+2Ch] +
mov [esp] ebp +
add ebp 0Ah +
mov dword ptr [esp+4] offset aU08x +
mov [esp+8] eax +
call sub_45A790  +
mov edx [esp+18h] +
add ebx edx +
cmp esi ebx +
ja loc_40D51F  +
mov byte ptr [ebp+0] 0 +
mov eax [esp+1Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 0 +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
jz loc_40D5D8  +
mov edx off_468020 +
test edx edx +
jz loc_40D5D8  +
mov ebx offset off_468020 +
jmp loc_40D5B9  +
add ebx 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_40D5E0  +
movzx eax byte ptr [ebx+8] +
cmp eax edi +
jnz loc_40D5B0  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call memcmp  +
test eax eax +
jnz loc_40D5B0  +
mov eax [ebx+4] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax offset unk_46F6E0 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp [esp+arg_0] 0 +
mov edx offset unk_46F6E0 +
mov eax offset aMK +
cmovz eax edx +
retn   +
***
retn   +
***
mov eax [esp+4] +
sub eax [esp+8] +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_40D654  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call sub_448C60  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov eax [esp+14h+arg_0] +
lea esi [eax+eax+2] +
mov eax [ecx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_437230  +
mov [ebx+0Ch] esi +
mov [ebx+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [esp+8] offset sub_40D630 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset strcmp +
mov byte ptr [ecx] 1 +
call sub_448B70  +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
mov eax [esp+2Ch+arg_4] +
jnz loc_40D6D2  +
add esp 2Ch +
retn 8  +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_18] al +
lea eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_10] eax +
mov eax [ecx+4] +
mov [esp+2Ch+var_28] offset sub_45CF70 +
mov [esp+2Ch+var_1C] edx +
lea edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] offset sub_45CE10 +
call sub_449000  +
add esp 2Ch +
retn 8  +
***
sub esp 1Ch +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_40D7E5  +
mov [esp+28h+var_28] ebx +
mov esi ecx +
call sub_40D710  +
sub esp 4 +
test eax eax +
jz loc_40D790  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 0Ch +
call loc_464170  +
mov [eax] ebx +
mov edi eax +
mov [esp+28h+var_20] offset sub_40E050 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] offset loc_40D620 +
call sub_448B70  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov [edi+4] eax +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_448D50  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_20] offset aGet_or_insert_ +
mov [esp+28h+var_24] 169h +
mov [esp+28h+var_28] offset a____GccGccEdit +
call sub_406BF0  +
nop   +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_3C] offset sub_40E050 +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_44] offset loc_40D620 +
mov [ecx] eax +
call sub_448B70  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 9 +
mov ebx [ebp+arg_4] +
mov [esp+48h+var_44] offset aDiffHunk +
mov edi [ebp+arg_8] +
movzx eax byte ptr [eax+27h] +
sub edi ebx +
add edi 1 +
mov [esp+48h+var_48] eax +
call sub_40D580  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] offset a@@IIII@@ +
mov [esp+48h+var_48] eax +
call sub_40D2E0  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D5F0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
cmp [ebp+arg_8] ebx +
jl loc_40DB55  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_448EC0  +
test eax eax +
jz loc_40DB11  +
mov edx [eax+4] +
test edx edx +
jz loc_40DB11  +
mov edi ebx +
jmp loc_40D96E  +
mov eax [eax+4] +
test eax eax +
jz loc_40D981  +
add edi 1 +
mov eax [esi+4] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call sub_448EC0  +
test eax eax +
jnz loc_40D964  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffDelete +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D580  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
cmp edi ebx +
jle loc_40DAC0  +
mov [ebp+arg_4] ebx +
lea esi [esi+0] +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
call sub_404620  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] 2Dh +
mov [esp+48h+var_3C] ecx +
mov ecx esi +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40D850  +
sub esp 10h +
cmp ebx edi +
jnz loc_40D9C0  +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D5F0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D580  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov [ebp+var_2C] edi +
mov edi [ebp+arg_0] +
jmp loc_40DA8C  +
mov eax [eax+4] +
test eax eax +
jz loc_40DA9F  +
mov edx [eax+8] +
mov ecx esi +
add ebx 1 +
mov eax [eax+4] +
mov [esp+48h+var_44] 2Bh +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
call sub_40D850  +
sub esp 10h +
cmp ebx [ebp+var_2C] +
jz loc_40D917  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_448EC0  +
test eax eax +
jnz loc_40DA56  +
mov [esp+48h+var_40] offset aPrint_diff_hun +
mov [esp+48h+var_44] 250h +
mov [esp+48h+var_48] offset a____GccGccEdit +
call sub_406BF0  +
nop   +
lea esi [esi+0] +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D5F0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D580  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
jmp loc_40D917  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_48] eax +
call sub_404620  +
mov edx [ebp+var_1C] +
mov ecx esi +
mov [esp+48h+var_44] 20h +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40D850  +
sub esp 10h +
cmp [ebp+arg_8] ebx +
jge loc_40D93E  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
sub esp 1Ch +
mov eax [ecx+4] +
mov edx [esp+20h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_448EC0  +
test eax eax +
jz loc_40DB83  +
mov eax [eax+4] +
add esp 1Ch +
retn 4  +
***
xor eax eax +
jmp loc_40DB7D  +
***
push ebx  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 3Ch +
mov esi [ebp+arg_0] +
lea eax [ebp+var_1E+1] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] ecx +
call sub_40DB90  +
sub esp 4 +
test eax eax +
mov [ebp+var_2C] eax +
jg loc_40DC73  +
jmp loc_40DCD2  +
mov eax [eax+4] +
test eax eax +
jz loc_40DC89  +
mov eax [eax+4] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] eax +
call sub_40BE20  +
cmp [ebp+var_2C] ebx +
jle loc_40DC6B  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
call sub_40B9B0  +
add ebx 1 +
cmp [ebp+var_2C] ebx +
jl loc_40DCD2  +
mov eax [ebp+var_30] +
mov eax [eax+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_448EC0  +
test eax eax +
jnz loc_40DC40  +
mov eax [ebp+var_30] +
lea ecx [ebp+var_1E+2] +
mov eax [eax] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_404620  +
test eax eax +
jz loc_40DCFD  +
mov edx [ebp+var_1E+2] +
xor edi edi +
test edx edx +
jle loc_40DC56  +
mov [ebp+var_34] ebx +
mov ebx edi +
mov edi eax +
movsx edx byte ptr [edi+ebx] +
add ebx 1 +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edx +
call sub_40B9B0  +
cmp [ebp+var_1E+2] ebx +
jg loc_40DCB5  +
mov ebx [ebp+var_34] +
jmp loc_40DC56  +
cmp byte ptr [ebp+var_1E+1] 0 +
mov eax 1 +
jnz loc_40DCF3  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
mov [ebp+var_2C] eax +
call sub_40B9B0  +
mov eax [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
cmp [ebp+arg_4] 0 +
jnz loc_40DDEC  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_448F20  +
test eax eax +
jz loc_40DE7D  +
mov esi [eax+4] +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_40DB90  +
sub esp 4 +
test esi esi +
mov [ebp+var_30] eax +
jz loc_40DDE2  +
mov edx [esi] +
mov ecx 1 +
lea eax [edx-3] +
test eax eax +
cmovg ecx eax +
mov [ebp+var_2C] ecx +
jmp loc_40DD87  +
mov eax [eax+4] +
test eax eax +
jz loc_40DD9A  +
mov edi [esi] +
mov edx [eax] +
lea ecx [edi+3] +
lea edi [edx-3] +
cmp ecx edi +
jl loc_40DD9F  +
mov esi eax +
mov eax [ebx+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_448FA0  +
test eax eax +
jnz loc_40DD70  +
mov eax [esi] +
lea ecx [eax+3] +
mov eax [ebp+var_30] +
cmp ecx eax +
cmovg ecx eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] ecx +
mov ecx ebx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40D8B0  +
mov edx [esi] +
mov eax [ebx+4] +
sub esp 0Ch +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_448FA0  +
test eax eax +
jz loc_40DDE2  +
mov esi [eax+4] +
test esi esi +
jnz loc_40DD56  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Dh +
mov [esp+48h+var_44] offset aDiffFilename +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D580  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40D2E0  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_0 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40D2E0  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40D5F0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40BE20  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_448F20  +
test eax eax +
jnz loc_40DD38  +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_40DB90  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebx  +
push ebx  +
sub esp 14h +
mov eax [ecx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+10h] +
test eax eax +
jz loc_40DF84  +
mov edx [eax+4] +
test edx edx +
jz loc_40DF90  +
xor edx edx +
xor ebx ebx +
jmp loc_40DF6B  +
cmp ebx [eax+4] +
jnb loc_40DF90  +
mov ecx [eax+edx*4+8] +
test ecx ecx +
jz loc_40DF7B  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
add ebx 1 +
test eax eax +
mov edx ebx +
jnz loc_40DF66  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_40DFB0  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+10h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [ecx+4] +
mov ebx [ebp+arg_0] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] ebx +
call sub_448EC0  +
test eax eax +
jz loc_40DFF2  +
mov eax [eax+4] +
test eax eax +
jz loc_40DFF2  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 14h +
call loc_464170  +
mov [esp+28h+var_24] ebx +
mov edi eax +
mov eax [esi] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_40DEA0  +
mov eax [edi+4] +
sub esp 8 +
test eax eax +
jz loc_40E031  +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_448D50  +
mov eax edi +
jmp loc_40DFE8  +
mov ecx edi +
call sub_40DF40  +
mov [esp+28h+var_28] edi +
call sub_4640C0  +
xor eax eax +
jmp loc_40DFE8  +
***
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_40E070  +
mov ecx ebx +
call sub_40DF40  +
mov [esp+8+arg_0] ebx +
add esp 8 +
pop ebx  +
jmp sub_4640C0  +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov edx [ecx+10h] +
mov eax [ebp+arg_0] +
test edx edx +
jz loc_40E0C3  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_40E0C3  +
xor ecx ecx +
xor ebx ebx +
jmp loc_40E0A6  +
cmp ebx [edx+4] +
jnb loc_40E0C3  +
mov ecx [edx+ecx*4+8] +
add ebx 1 +
mov edx [ecx] +
mov edx [edx+8] +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [esi+10h] +
mov ecx ebx +
sub esp 4 +
test edx edx +
jnz loc_40E0A1  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_448EC0  +
test eax eax +
jz loc_40E105  +
mov ecx [eax+4] +
mov eax [ebp+arg_4] +
test ecx ecx +
jz locret_40E101  +
mov [esp+18h+var_18] eax +
call sub_40E080  +
sub esp 4 +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_40D710  +
mov ecx eax +
sub esp 4 +
mov eax [ebp+10h] +
test ecx ecx +
jz locret_40E13F  +
mov [esp+4] eax +
mov eax [ebp+0Ch] +
mov [esp] eax +
call sub_40E0D0  +
sub esp 8 +
leave   +
retn 0Ch  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_40E080  +
mov esi eax +
sub esp 4 +
sub esi 1 +
mov edi eax +
js loc_40E37C  +
mov eax [ebx+8] +
cmp esi eax +
jg loc_40E2C1  +
mov edx [ebp+arg_8] +
add edx eax +
cmp edx [ebx+0Ch] +
mov [ebp+var_1C] edx +
jge loc_40E2D0  +
mov edx [ebx+4] +
lea ecx [edx+esi] +
add eax edx +
cmp ecx eax +
ja loc_40E398  +
sub eax ecx +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_8] +
mov [esp+38h+var_34] ecx +
add eax esi +
add eax edx +
mov [esp+38h+var_38] eax +
call memmove  +
mov eax [ebp+arg_8] +
add esi [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_4] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebp+var_1C] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_40E3B4  +
mov eax [ebx+4] +
mov ecx [ebp+var_1C] +
mov byte ptr [eax+ecx] 0 +
mov [esp+38h+var_38] 0Ch +
call loc_464170  +
mov [eax+4] edi +
mov edi [ebx+10h] +
mov esi eax +
mov dword ptr [eax] offset off_47EB08 +
mov eax [ebp+arg_8] +
test edi edi +
mov [esi+8] eax +
jz loc_40E22C  +
mov edx [edi] +
and edx 7FFFFFFFh +
cmp edx [edi+4] +
jnz loc_40E2A5  +
cmp byte ptr [edi+3] 0 +
js loc_40E2E5  +
mov eax [ebx+10h] +
test eax eax +
jz loc_40E3C2  +
mov edi [eax+4] +
lea edx [edi+1] +
mov [esp+38h+var_34] edx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_4081F0  +
mov ecx eax +
lea edi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_40E3CF  +
mov edx [eax+4] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_437230  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov edi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] edx +
and ecx 80000000h +
or ecx eax +
mov [edi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [edi+3] cl +
jmp loc_40E2A8  +
mov edx [edi+4] +
lea eax [edx+1] +
mov [edi+4] eax +
mov eax 1 +
mov [edi+edx*4+8] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+38h+var_38] edx +
mov ecx ebx +
call sub_40D660  +
mov eax [ebx+8] +
sub esp 4 +
jmp loc_40E192  +
mov dword ptr [ebx+10h] 0 +
lea eax [edx+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_437230  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_40E3B9  +
lea ecx ds:0[edx*4] +
add eax 8 +
add edi 8 +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov edi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [edi+4] edx +
jmp loc_40E2A8  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2E6h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2EFh +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
call sub_467AB0  +
mov edi eax +
xor edx edx +
jmp loc_40E2A8  +
mov byte ptr [ebp+var_1C] 0 +
xor edx edx +
mov al 1 +
jmp loc_40E2F3  +
xor edx edx +
jmp loc_40E267  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_40DFC0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_40E418  +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40E150  +
sub esp 0Ch +
leave   +
retn 10h  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_2C] +
mov edx [ebx+4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_404820  +
mov esi [ebp+var_24] +
test esi esi +
jnz loc_40E453  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov eax [ebp+var_2C] +
mov ecx edi +
mov [esp+48h+var_48] eax +
call sub_40D760  +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_40E447  +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_40] edx +
mov edx [ebp+var_28] +
mov [esp+48h+var_3C] ecx +
mov ecx eax +
mov [esp+48h+var_48] edx +
call sub_40E3E0  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_40E080  +
mov ecx ebx +
mov esi eax +
mov eax [ebp+arg_4] +
sub esp 4 +
mov [esp+38h+var_38] eax +
call sub_40E080  +
mov edx esi +
sub esp 4 +
sub edx 1 +
mov edi eax +
mov [ebp+var_1C] edx +
lea eax [eax-1] +
js loc_40E72B  +
test eax eax +
js loc_40E747  +
cmp esi edi +
jg loc_40E666  +
mov edx [ebx+8] +
cmp [ebp+var_1C] edx +
jge loc_40E666  +
cmp eax edx +
jge loc_40E666  +
mov ecx [ebp+arg_C] +
add ecx edx +
mov [ebp+var_20] ecx +
mov ecx eax +
sub ecx [ebp+var_1C] +
add ecx 1 +
sub [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
cmp ecx [ebx+0Ch] +
jge loc_40E672  +
mov ecx [ebx+4] +
lea eax [ecx+eax+1] +
add edx ecx +
cmp eax edx +
ja loc_40E768  +
sub edx eax +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_1C] +
add eax [ebp+arg_C] +
mov [esp+38h+var_30] edx +
add ecx eax +
mov [esp+38h+var_38] ecx +
call memmove  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_1C] +
add eax [ebx+4] +
mov [esp+38h+var_30] edx +
mov edx [ebp+arg_8] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call memcpy  +
mov eax [ebp+var_20] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_40E763  +
mov edx [ebp+var_20] +
mov eax [ebx+4] +
mov byte ptr [eax+edx] 0 +
mov [esp+38h+var_38] 10h +
call loc_464170  +
mov [eax+8] edi +
not edi  +
mov edx eax +
mov [eax+4] esi +
add esi edi +
add esi [ebp+arg_C] +
mov dword ptr [eax] offset off_47EB68 +
mov [eax+0Ch] esi +
mov esi [ebx+10h] +
test esi esi +
jz loc_40E690  +
mov edi [esi] +
and edi 7FFFFFFFh +
cmp edi [esi+4] +
jnz loc_40E726  +
cmp byte ptr [esi+3] 0 +
jns loc_40E690  +
mov dword ptr [ebx+10h] 0 +
lea eax [edi+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_437230  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_40E784  +
add eax 8 +
add esi 8 +
lea ecx ds:0[edi*4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov esi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [esi+4] edi +
jmp loc_40E70D  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+38h+var_38] ecx +
mov ecx ebx +
mov [ebp+var_24] eax +
call sub_40D660  +
mov edx [ebx+8] +
mov eax [ebp+var_24] +
sub esp 4 +
jmp loc_40E521  +
mov eax [ebx+10h] +
test eax eax +
jz loc_40E791  +
mov edi [eax+4] +
mov [ebp+var_1C] edx +
lea ecx [edi+1] +
mov [esp+38h+var_34] ecx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_4081F0  +
mov edx [ebp+var_1C] +
mov ecx eax +
lea esi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_40E78A  +
mov edi [eax+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_437230  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov esi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] edi +
and ecx 80000000h +
or ecx eax +
mov [esi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [esi+3] cl +
lea eax [edi+1] +
mov [esi+4] eax +
mov eax 1 +
mov [esi+edi*4+8] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov edi [esi+4] +
jmp loc_40E70D  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 318h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 319h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
call sub_467AB0  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 329h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
mov esi eax +
xor edi edi +
jmp loc_40E70D  +
xor edi edi +
jmp loc_40E6D1  +
mov byte ptr [ebp+var_1C] 0 +
xor edi edi +
mov al 1 +
jmp loc_40E5D9  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_40DFC0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_40E7DF  +
mov eax [ebp+arg_10] +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40E4A0  +
sub esp 10h +
leave   +
retn 14h  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [ebp+arg_0] +
mov [ebp+var_54] ecx +
lea eax [ebp+var_40] +
mov ecx [ebx+4] +
mov edi [ebx+8] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ecx +
call sub_404820  +
mov eax [ebp+var_3C] +
mov [esp+68h+var_64] edi +
mov esi [ebp+var_40] +
mov [ebp+var_4C] eax +
mov eax [ebp+var_38] +
mov [ebp+var_50] eax +
lea eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call sub_404820  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_24] +
cmp eax esi +
jz loc_40E848  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov esi [ebp+var_28] +
cmp esi [ebp+var_4C] +
jnz loc_40E83C  +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_40E83C  +
test edx edx +
jz loc_40E83C  +
mov edi [ebp+var_54] +
mov [esp+68h+var_68] eax +
mov [ebp+var_4C] edx +
mov ecx edi +
call sub_40D760  +
mov edx [ebp+var_4C] +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_40E83C  +
mov ecx [ebx+0Ch] +
mov ebx [ebx+10h] +
mov [esp+68h+var_60] edx +
mov edx [ebp+var_50] +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] ecx +
mov ecx eax +
mov [esp+68h+var_58] ebx +
mov [esp+68h+var_64] edx +
call sub_40E7A0  +
sub esp 14h +
jmp loc_40E83E  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
jz loc_40E916  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+58h] 0 +
jnz loc_40E935  +
add eax 44h +
xor ebx ebx +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov edi 0FFFFFFF8h +
mov eax [eax+44h] +
test eax eax +
jz loc_40E916  +
mov [ebp+var_1C] ecx +
cmp ebx 1 +
jle loc_40E960  +
mov edx [ebp+arg_0] +
mov eax [edx+54h] +
add eax edi +
mov esi [eax] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40E920  +
cmp eax 1 +
jnz loc_40E942  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_40E7F0  +
sub esp 4 +
test al al +
jz loc_40E932  +
mov eax [ebp+arg_0] +
add ebx 1 +
add edi 4 +
cmp ebx [eax+44h] +
jb loc_40E8D3  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_40E420  +
sub esp 4 +
test al al +
jnz loc_40E908  +
mov esi [ebp+var_1C] +
mov byte ptr [esi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+38h+var_30] offset aAdd_fixits +
mov [esp+38h+var_34] 0F3h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_406BF0  +
nop   +
mov eax [ebp+var_20] +
lea eax [eax+ebx*4+4] +
jmp loc_40E8E4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp [ecx+0Ch] eax +
jle locret_40E980  +
leave   +
retn 4  +
***
leave   +
jmp sub_40D660  +
***
mov edx [ecx+4] +
mov byte ptr [edx+eax] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 40h +
lea ebx [ebp+var_30] +
mov ecx ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 0 +
call sub_40B850  +
mov ecx esi +
xor esi esi +
sub esp 8 +
mov [esp+48h+var_48] ebx +
call sub_40DC10  +
sub esp 4 +
test al al +
jz loc_40EA6B  +
mov [esp+48h+var_48] ebx +
call sub_40B8E0  +
mov [esp+48h+var_48] eax +
call sub_437310  +
mov esi eax +
mov ecx ebx +
call sub_40B540  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp byte ptr [ecx] 0 +
jz locret_40EAA3  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_40D760  +
sub esp 4 +
mov ecx eax +
call sub_40EA20  +
leave   +
retn 4  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_8] 1 +
cmovz eax [esp+arg_0] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h] +
mov [esp] eax +
call strlen  +
mov esi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_4371B0  +
mov [esp+8] esi +
mov dword ptr [esp+4] 20h +
mov ebx eax +
mov [esp] eax +
call memset  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [ecx] +
test eax eax +
jnz loc_40EB22  +
jmp loc_40EB32  +
mov eax ebx +
mov ebx [eax] +
mov [esp] eax +
call free  +
test ebx ebx +
mov [esi] ebx +
jnz loc_40EB20  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
cmp eax 10000h +
jz loc_40EB54  +
mov [esp+4] eax +
jmp sub_4371B0  +
***
mov eax ds:dword_480268 +
test eax eax +
jz loc_40EB66  +
mov edx [eax] +
mov ds:dword_480268 edx +
retn   +
***
mov dword ptr [esp+4] 10000h +
jmp sub_4371B0  +
***
mov eax [esp+4] +
mov edx [eax] +
sub edx eax +
cmp edx 10000h +
jz loc_40EBA0  +
mov [esp+4] eax +
jmp free  +
***
mov edx ds:dword_480268 +
mov [eax] edx +
mov ds:dword_480268 eax +
retn   +
***
xor eax eax +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_40EBD3  +
pop ebx  +
retn   +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jnz loc_40EBD1  +
mov ebx [edx+8] +
cmp [ecx+8] ebx +
jnz loc_40EBD1  +
mov eax [edx+0Ch] +
cmp [ecx+0Ch] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
jmp loc_40EC00  +
mov edx [esp+8] +
mov eax [esp+4] +
mov edx [edx] +
add [eax] edx +
mov eax 1 +
retn   +
***
retn 10h  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
cmp edx 4 +
setz dl  +
jnz loc_40EC58  +
mov eax [eax+18h] +
cmp [ebx+14h] eax +
jz loc_40EC80  +
mov edx [ebx+10h] +
lea ecx [eax+eax*2] +
lea esi [edx+ecx*8] +
add ebx 18h +
jmp loc_40EC68  +
mov eax [eax+8] +
cmp [ebx+4] eax +
jz loc_40EC80  +
imul esi eax +
add esi [ebx] +
add ebx 8 +
add eax 1 +
mov [ebx] eax +
mov eax edi +
mov [esi+4] al +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi [ebx+34h] +
mov eax offset sub_437230 +
test esi esi +
cmovz esi eax +
test dl dl +
mov eax [ebx+38h] +
jz loc_40ECF8  +
mov edx [ebx+14h] +
lea edx [edx+edx*2+180h] +
shl edx 4 +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [ebx+10h] +
shr edx 4 +
mov [ebx+14h] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call esi  +
mov edx [ebx+18h] +
lea ecx [edx+edx*2] +
mov [ebx+10h] eax +
lea esi [eax+ecx*8] +
mov eax [ebx+14h] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+18h] +
jmp loc_40EC53  +
mov ecx [ebx+4] +
lea edx [ecx+80h] +
imul edx edx +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 24924925h +
mov ecx [ebx] +
shr eax 2 +
mul  edx +
mov [ebx+4] edx +
imul edx edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] edx +
call esi  +
mov edx [ebx+8] +
imul esi edx +
mov [ebx] eax +
add esi eax +
mov eax [ebx+4] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
imul eax eax +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+8] +
jmp loc_40EC65  +
***
sub esp 3Ch +
mov edx [ecx+4] +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_404860  +
mov edx [esp+3Ch+arg_0] +
xor eax eax +
cmp [esp+3Ch+var_20] edx +
jz loc_40ED88  +
add esp 3Ch +
retn 8  +
mov eax [esp+3Ch+arg_4] +
cmp [esp+3Ch+var_1C] eax +
setz al  +
add esp 3Ch +
retn 8  +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_47EAC8 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_47EA68 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_47EAC8 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_47EA68 +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_47EB28 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_47EA68 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_47EB28 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_47EA68 +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx+3Ch] +
mov [esp] eax +
call sub_43EC40  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 14h +
mov esi [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_40EBC0 +
mov dword ptr [esp+4] offset loc_40EBB0 +
mov dword ptr [esp] 64h +
call sub_43EBA0  +
mov edx [esi+40h] +
test edx edx +
mov [esi+3Ch] eax +
jnz loc_40EEC3  +
jmp loc_40EEE7  +
mov eax [esi+3Ch] +
mov edx ebx +
add ebx 1 +
mov dword ptr [esp+8] 1 +
shl edx 4 +
add edx [esi+48h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_43F0F0  +
cmp [esi+40h] ebx +
ja loc_40EEC0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax] +
retn   +
***
jmp loc_40EF30  +
push edi  +
mov edx 60h +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test bl 1 +
mov edi ebx +
jnz loc_40EFB0  +
test edi 2 +
jnz loc_40EFC0  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_40EF64  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_40EF6C  +
mov byte ptr [edi] 0 +
mov dword ptr [ebx+28h] 1 +
mov dword ptr [ebx+2Ch] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_40EBC0 +
mov dword ptr [esp+4] offset loc_40EBB0 +
mov dword ptr [esp] 64h +
call sub_43EBA0  +
mov [ebx+3Ch] eax +
mov eax [esp+24h] +
mov [ebx+4Ch] eax +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
***
lea edi [ebx+1] +
mov dl 5Fh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_40EF4D  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40EF4D  +
***
jmp loc_40EFE0  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+8] +
lea ebx [eax-1] +
imul ebx ebx +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
js loc_40F030  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aLineMap_cFileS +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [ebx+10h] +
xor ebx ebx +
cmp eax 0FFFFFFFFh +
jz loc_40EFF4  +
imul ebx eax +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
jns loc_40EFFB  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+28h] +
cmp eax 5FFFFFFFh +
lea edi [eax+1] +
ja loc_40F071  +
mov ecx [ebx+54h] +
mov edx 1 +
shl edx cl +
test ecx ecx +
lea edi [edx+eax] +
jnz loc_40F180  +
cmp esi 1 +
jz loc_40F18D  +
mov edx esi +
mov eax ebx +
call sub_40EC30  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_40F096  +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
jz loc_40F115  +
cmp esi 3 +
jz loc_40F1F0  +
cmp esi 1 +
jz loc_40F12F  +
movzx eax byte ptr [esp+1Ch+arg_8] +
mov [ebp+0] edi +
mov [ebp+14h] al +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_10] +
mov [ebp+0Ch] eax +
mov eax [ebx+8] +
sub eax 1 +
test esi esi +
mov [ebx+0Ch] eax +
mov byte ptr [ebp+18h] 0 +
mov byte ptr [ebp+19h] 0 +
mov [ebx+28h] edi +
mov [ebx+2Ch] edi +
mov dword ptr [ebx+30h] 0 +
jnz loc_40F1D7  +
mov esi [ebx+20h] +
test esi esi +
jz loc_40F276  +
mov eax [ebx+8] +
sub eax 2 +
cmp byte ptr [ebx+24h] 0 +
mov [ebp+10h] eax +
lea eax [esi+1] +
mov [ebx+20h] eax +
jnz loc_40F200  +
mov eax ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 3 +
jz loc_40F1F0  +
cmp esi 1 +
mov [esp+1Ch+arg_C] offset aStdin +
jnz loc_40F0A8  +
mov ecx [ebp-0Ch] +
xor eax eax +
cmp ecx 0FFFFFFFFh +
jz loc_40F13E  +
imul eax ecx +
add eax [ebx] +
mov edx [esp+1Ch+arg_C] +
test edx edx +
jnz loc_40F0A8  +
mov ecx [eax+8] +
mov [esp+1Ch+arg_C] ecx +
mov ecx [eax+1Ch] +
mov [esp+1Ch+arg_10] ecx +
mov ecx [eax] +
sub [esp+1Ch+arg_10] ecx +
movzx ecx byte ptr [eax+18h] +
shr [esp+1Ch+arg_10] cl +
mov ecx [eax+0Ch] +
movzx eax byte ptr [eax+14h] +
add [esp+1Ch+arg_10] ecx +
mov [esp+1Ch+arg_8] eax +
jmp loc_40F0A8  +
neg edx  +
and edi edx +
cmp esi 1 +
jnz loc_40F07A  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov ebp [eax+10h] +
test ebp ebp +
jns loc_40F07A  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jz loc_40F291  +
mov edx 1 +
mov eax ebx +
call sub_40EC30  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
mov eax offset aStdin +
cmovnz eax [esp+1Ch+arg_C] +
mov [esp+1Ch+arg_C] eax +
jmp loc_40F12F  +
cmp esi 2 +
jz loc_40F246  +
cmp esi 1 +
mov eax ebp +
jz loc_40F256  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 2 +
jmp loc_40F0A8  +
mov eax ds:_iob +
mov [esp+1Ch+var_1C] 2Eh +
add eax 40h +
mov [esp+1Ch+var_18] eax +
call putc  +
sub esi 1 +
jnz loc_40F200  +
mov eax [ebp+8] +
mov [esp+1Ch+var_18] offset aS_1 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_45A760  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-0Ch] +
mov [ebp+10h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
mov ecx [ebp-0Ch] +
cmp ecx 0FFFFFFFFh +
jz loc_40F269  +
imul eax ecx +
add eax [ebx] +
mov eax [eax+10h] +
mov [ebp+10h] eax +
mov eax ebp +
jmp loc_40F1E3  +
cmp byte ptr [ebx+24h] 0 +
mov dword ptr [ebp+10h] 0FFFFFFFFh +
mov dword ptr [ebx+20h] 1 +
jnz loc_40F21D  +
mov eax ebp +
jmp loc_40F10D  +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
jmp loc_40F1E3  +
***
mov eax [esp+4] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [ebx+34h] +
test esi esi +
cmovz esi eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_40F354  +
mov ebp 7FFFFFFFh +
xor eax eax +
sub ebp [esp+1Ch+arg_C] +
mov edx 7FFFFFFFh +
cmp ebp [ebx+2Ch] +
jbe loc_40F34C  +
xor eax eax +
cmp edx ebp +
jb loc_40F34C  +
mov edx 4 +
mov eax ebx +
call sub_40EC30  +
mov [eax] ebp +
mov edi eax +
mov eax [esp+1Ch+arg_4] +
mov [edi+8] eax +
mov eax [esp+1Ch+arg_C] +
mov [edi+0Ch] eax +
lea ebp ds:0[eax*4] +
shl eax 3 +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call esi  +
mov ecx [esp+1Ch+arg_8] +
mov [edi+14h] ecx +
mov [edi+10h] eax +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [ebx+18h] +
sub eax 1 +
mov [ebx+1Ch] eax +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10h] +
lea eax [eax+eax*2-3] +
lea eax [edx+eax*8] +
mov edx [eax] +
xor eax eax +
mov ebp edx +
sub ebp [esp+1Ch+arg_C] +
cmp [ebx+2Ch] ebp +
jb loc_40F2E8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ebx [esp+arg_8] +
mov ecx [edx+10h] +
mov [ecx+eax*8] ebx +
mov ebx [esp+arg_C] +
mov ecx [edx+10h] +
mov [ecx+eax*8+4] ebx +
add eax [edx] +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_0] +
mov edx [esp+4Ch+arg_8] +
mov eax [ebx+8] +
mov edi [ebx+28h] +
mov ebp [ebx+2Ch] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov [esp+4Ch+var_28] edi +
mov edi [eax] +
mov esi [eax+0Ch] +
mov ecx edi +
mov [esp+4Ch+var_18] edi +
movzx edi byte ptr [eax+18h] +
mov [esp+4Ch+var_2C] esi +
mov esi ebp +
sub esi ecx +
mov ecx edi +
shr esi cl +
movzx ecx byte ptr [eax+19h] +
add esi [esp+4Ch+var_2C] +
mov [esp+4Ch+var_13] cl +
mov [esp+4Ch+var_20] ecx +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_1C] esi +
sub ecx esi +
mov [esp+4Ch+var_24] ecx +
js loc_40F427  +
cmp ecx 0Ah +
jle loc_40F4F1  +
imul ecx edi +
cmp ecx 3E8h +
jle loc_40F4F1  +
cmp edx 1000h +
ja loc_40F43D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40F540  +
cmp [esp+4Ch+var_28] 70000000h +
ja loc_40F531  +
mov [esp+4Ch+var_12] 0 +
xor ebp ebp +
xor esi esi +
mov [esp+4Ch+var_11] 0 +
mov [esp+4Ch+var_10] 0 +
mov edx [esp+4Ch+var_24] +
test edx edx +
js loc_40F477  +
mov edx [esp+4Ch+var_1C] +
cmp [esp+4Ch+var_2C] edx +
jz loc_40F5A0  +
mov edx [eax+8] +
mov edi [esp+4Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_3C] edi +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] ebx +
call sub_40F040  +
mov edi [eax] +
mov ecx [eax+0Ch] +
movzx edx [esp+4Ch+var_11] +
mov [eax+18h] dl +
movzx edx [esp+4Ch+var_12] +
mov [eax+19h] dl +
mov eax [esp+4Ch+arg_4] +
sub eax ecx +
mov ecx ebp +
shl eax cl +
add eax edi +
mov edx [ebx+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40F4D7  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_40F531  +
cmp eax [ebx+28h] +
mov [ebx+2Ch] eax +
jbe loc_40F4E6  +
mov [ebx+28h] eax +
mov [ebx+30h] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edi +
mov esi 1 +
sub ecx [esp+4Ch+var_20] +
shl esi cl +
cmp esi edx +
jbe loc_40F427  +
cmp ecx 9 +
jle loc_40F514  +
cmp edx 50h +
jbe loc_40F427  +
cmp [esp+4Ch+var_28] 50000000h +
ja loc_40F5E8  +
mov esi [ebx+30h] +
mov eax [esp+4Ch+var_24] +
mov ecx edi +
shl eax cl +
add eax ebp +
jmp loc_40F4BF  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+4Ch+var_28] 50000000h +
jbe loc_40F590  +
mov [esp+4Ch+var_12] 0 +
mov [esp+4Ch+var_10] 0 +
cmp edx 7Fh +
jbe loc_40F640  +
mov ecx 7 +
mov ebp 1 +
lea esi [esi+0] +
add ecx 1 +
mov esi ebp +
shl esi cl +
cmp edx esi +
jnb loc_40F570  +
mov edx [esp+4Ch+var_10] +
lea ebp [ecx+edx] +
mov edx ebp +
mov [esp+4Ch+var_11] dl +
jmp loc_40F461  +
mov esi [ebx+54h] +
mov ecx esi +
mov [esp+4Ch+var_10] esi +
mov [esp+4Ch+var_12] cl +
jmp loc_40F557  +
mov ecx edi +
mov edx 1 +
shl edx cl +
mov ecx [esp+4Ch+var_28] +
sub ecx [esp+4Ch+var_18] +
sub edx 1 +
and edx ecx +
movzx ecx [esp+4Ch+var_13] +
shr edx cl +
mov ecx ebp +
sub ecx [esp+4Ch+var_10] +
shr edx cl +
test edx edx +
jnz loc_40F477  +
mov edi [esp+4Ch+var_20] +
cmp [esp+4Ch+var_10] edi +
jl loc_40F477  +
mov ecx [esp+4Ch+var_2C] +
mov edi [esp+4Ch+var_18] +
jmp loc_40F4A3  +
cmp [esp+4Ch+var_13] 0 +
jnz loc_40F61D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40F522  +
mov ecx [ebx+30h] +
test ecx ecx +
jnz loc_40F43D  +
cmp [esp+4Ch+var_28] 6FFFFFFFh +
ja loc_40F43D  +
xor esi esi +
jmp loc_40F525  +
cmp edx 1000h +
ja loc_40F43D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40F54A  +
jmp loc_40F43D  +
mov esi 80h +
mov ecx 7 +
jmp loc_40F57B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
cmp [ebx+30h] esi +
mov edx [ebx+2Ch] +
jbe loc_40F687  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+19h] +
shl esi cl +
lea eax [edx+esi] +
cmp eax [ebx+28h] +
jb loc_40F681  +
mov [ebx+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 1000h +
jbe loc_40F697  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp edx 60000000h +
ja loc_40F68F  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+18h] +
sub edx [eax] +
shr edx cl +
add edx [eax+0Ch] +
lea eax [esi+32h] +
mov [esp+14h+var_C] eax +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ebx +
call sub_40F3B0  +
mov edx eax +
mov eax [ebx+8] +
lea ecx [eax-1] +
mov eax edx +
imul ecx ecx +
add ecx [ebx] +
cmp byte ptr [ecx+18h] 0 +
jz loc_40F681  +
mov eax ecx +
jmp loc_40F670  +
***
jmp sub_40F6F0  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
mov ebx [esp+arg_0] +
movzx ecx byte ptr [edx+18h] +
sub eax [edx+0Ch] +
shl eax cl +
add eax [edx] +
cmp eax 60000000h +
ja loc_40F726  +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi [esp+arg_C] +
shl esi cl +
add eax esi +
mov ecx [ebx+18h] +
mov edx 7FFFFFFFh +
test ecx ecx +
jz loc_40F73E  +
lea edx [ecx+ecx*2-3] +
mov ecx [ebx+10h] +
lea edx [ecx+edx*8] +
mov edx [edx] +
cmp eax edx +
lea ecx [edx-1] +
cmovnb eax ecx +
cmp eax [ebx+28h] +
jbe loc_40F74E  +
mov [ebx+28h] eax +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_40F760  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40F7E0  +
mov ecx [esi+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40F7E0  +
shl eax 4 +
mov edx [ecx+eax] +
cmp edx [esi+28h] +
ja loc_40F7F0  +
cmp edx 1 +
jbe loc_40F891  +
test esi esi +
jz loc_40F891  +
mov ecx [esi+0Ch] +
mov ebx [esi] +
mov ebp [esi+8] +
imul edi ecx +
add edi ebx +
cmp edx [edi] +
jb loc_40F855  +
lea eax [ecx+1] +
mov [esp+4+var_4] eax +
mov eax edi +
cmp ebp [esp+4+var_4] +
jz loc_40F810  +
cmp edx [edi+1Ch] +
jb loc_40F810  +
mov eax ecx +
mov ecx ebp +
jmp loc_40F871  +
xor eax eax +
test esi esi +
jz loc_40F810  +
cmp [esi+28h] edx +
jnb loc_40F799  +
nop   +
lea esi [esi+0] +
mov ecx [esi+1Ch] +
mov edi [esi+10h] +
mov ebx [esi+18h] +
lea eax [ecx+ecx*2] +
lea ebp [edi+eax*8] +
cmp [ebp+0] edx +
ja loc_40F82D  +
test ecx ecx +
mov eax ebp +
jz loc_40F810  +
cmp [ebp-18h] edx +
jbe loc_40F88A  +
nop   +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx eax +
mov ebx eax +
jnb loc_40F844  +
add eax ecx +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp [edi+ebp*8] edx +
jbe loc_40F818  +
lea ecx [eax+1] +
cmp ebx ecx +
jbe loc_40F844  +
lea eax [ecx+ebx] +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp edx [edi+ebp*8] +
jb loc_40F82A  +
cmp ecx eax +
mov ebx eax +
jb loc_40F81E  +
mov [esi+1Ch] ebx +
lea eax [ebx+ebx*2] +
add esp 4 +
pop ebx  +
lea eax [edi+eax*8] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_40F871  +
lea edi [ecx+eax] +
shr edi 1 +
imul ebp edi +
cmp edx [ebx+ebp] +
cmovb ecx edi +
cmovnb eax edi +
mov edi ecx +
sub edi eax +
cmp edi 1 +
ja loc_40F860  +
mov [esi+0Ch] eax +
imul eax eax +
add esp 4 +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx-1] +
xor ecx ecx +
jmp loc_40F82D  +
xor eax eax +
jmp loc_40F810  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_8] +
mov ebp [esp+3Ch+arg_C] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40F8CA  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov eax [esp+3Ch+arg_10] +
test eax eax +
setz dl  +
test ebx ebx +
jz loc_40F941  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_40F94F  +
cmp ebx edi +
jz loc_40F9B4  +
test dl dl +
jnz loc_40FA26  +
mov eax [esp+3Ch+arg_10] +
lea edx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_18] edi +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
mov eax [esi+3Ch] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_43F0F0  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_40F9D0  +
mov ecx [esi+48h] +
mov eax edx +
sub eax ecx +
sar eax 4 +
or eax 80000000h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test dl dl +
jnz loc_40F939  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_40F8DF  +
cmp ebx edi +
jnz loc_40F8E7  +
cmp ebx ebp +
ja loc_40F9B4  +
cmp ebx 1 +
jbe loc_40F9B4  +
cmp ebx 4FFFFFFFh +
ja loc_40F9B4  +
mov eax [esi+18h] +
test eax eax +
jz loc_40FAA1  +
mov ecx [esi+10h] +
lea eax [eax+eax*2-3] +
lea eax [ecx+eax*8] +
mov eax [eax] +
cmp ebx eax +
jnb loc_40F9B4  +
cmp ebp eax +
jnb loc_40F9B4  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] edx +
call sub_40F760  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebp +
sub eax ebx +
shl edx cl +
shr eax cl +
cmp eax edx +
mov edx [esp+3Ch+var_30] +
jnb loc_40F9B4  +
add dword ptr [esi+58h] 1 +
or eax ebx +
jmp loc_40F939  +
cmp ebx ebp +
jnz loc_40F8E7  +
test dl dl +
jz loc_40F8EF  +
mov eax ebx +
jmp loc_40F939  +
mov edi [esi+40h] +
mov eax [esi+44h] +
cmp edi eax +
jb loc_40FA30  +
mov edx [esi+34h] +
mov ecx offset sub_437230 +
mov edi [esi+48h] +
test edx edx +
cmovz edx ecx +
test eax eax +
jnz loc_40FA70  +
mov dword ptr [esi+44h] 80h +
mov ax 800h +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call edx  +
mov edx eax +
sub edx edi +
mov [esp+3Ch+var_24] edx +
sar edx 1Fh +
cmp dword ptr [esi+44h] 80h +
mov [esi+48h] eax +
mov [esp+3Ch+var_20] edx +
ja loc_40FA7E  +
mov edi [esi+40h] +
jmp loc_40FA33  +
add dword ptr [esi+5Ch] 1 +
jmp loc_40F8EF  +
mov eax [esi+48h] +
mov edx edi +
add edi 1 +
shl edx 4 +
add eax edx +
mov [ebx] eax +
mov eax [esp+3Ch+var_1C] +
mov ecx [esi+48h] +
mov [esi+40h] edi +
mov [ecx+edx] eax +
mov eax [esp+3Ch+var_18] +
mov [ecx+edx+4] eax +
mov eax [esp+3Ch+var_14] +
mov [ecx+edx+8] eax +
mov eax [esp+3Ch+var_10] +
mov [ecx+edx+0Ch] eax +
mov edx [ebx] +
jmp loc_40F92D  +
lea ecx [eax+eax] +
mov [esi+44h] ecx +
shl eax 5 +
jmp loc_40F9FD  +
mov eax [esi+3Ch] +
lea edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset loc_40EC00 +
mov [esp+3Ch+var_3C] eax +
call sub_43F250  +
mov eax [esi+48h] +
jmp loc_40FA21  +
cmp ebx 7FFFFFFEh +
ja loc_40F9B4  +
mov eax 7FFFFFFFh +
jmp loc_40F97F  +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40FAF0  +
shl edx 4 +
add edx [eax+48h] +
mov eax [edx+4] +
mov edx [edx+8] +
add esp 8 +
pop ebx  +
retn   +
cmp ebx 1 +
jbe loc_40FB40  +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40FB0D  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_40FB40  +
cmp ebx 50000000h +
ja loc_40FB40  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40F760  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebx +
shl edx cl +
sub edx 1 +
and edx ebx +
sub eax edx +
shl edx cl +
add edx eax +
jmp loc_40FAE4  +
add esp 8 +
mov eax ebx +
mov edx ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40FB70  +
add esp 8 +
pop ebx  +
retn   +
mov eax [esp+8+arg_0] +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40F760  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test eax ebx +
setz al  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40FBC0  +
shl edx 4 +
add edx [eax+48h] +
mov ebx [edx] +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40FBD8  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_40FBFA  +
cmp ebx 1 +
jbe loc_40FBFA  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40F760  +
movzx ecx byte ptr [eax+19h] +
mov eax 0FFFFFFFFh +
shl eax cl +
and ebx eax +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
jmp sub_40FC10  +
***
push esi  +
mov esi eax +
mov eax edx +
push ebx  +
and eax 7FFFFFFFh +
sub esp 8 +
cmp edx eax +
mov ebx edx +
jz loc_40FC3A  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_40FC3A  +
cmp byte ptr [eax+4] 4 +
jnz loc_40FC4A  +
mov ebx [eax+14h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40F760  +
test eax eax +
jnz loc_40FC31  +
test edi edi +
jz loc_40FC50  +
mov [edi] eax +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov ebp [ebx+8] +
mov eax [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edx ebp +
and edx 7FFFFFFFh +
mov edi eax +
cmp ebp edx +
mov [esp+2Ch+var_14] ecx +
jz loc_40FC92  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_40FCA8  +
mov eax edx +
shl eax 4 +
add eax [esi+48h] +
mov edi [eax] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_40F760  +
test eax eax +
mov edx eax +
jz loc_40FCD0  +
cmp byte ptr [eax+4] 4 +
jnz loc_40FCD0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_40F760  +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_40FCEE  +
cmp byte ptr [eax+4] 4 +
jz loc_40FCC0  +
cmp edx eax +
jnz loc_40FCC0  +
mov eax [edx] +
movzx ecx byte ptr [edx+18h] +
sub edi eax +
sub ebp eax +
mov eax ebp +
mov esi edi +
shr eax cl +
shr esi cl +
add eax [edx+0Ch] +
add esi [edx+0Ch] +
cmp eax esi +
jnz loc_40FCC0  +
mov eax 1 +
shl eax cl +
movzx ecx byte ptr [edx+19h] +
sub eax 1 +
and edi eax +
and eax ebp +
shr eax cl +
shr edi cl +
add eax 1 +
cmp edi eax +
jnz loc_40FCC0  +
mov eax [esp+2Ch+var_14] +
mov [ebx+8] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edx [ebx+10h] +
mov esi eax +
mov eax [ebx+0Ch] +
lea edx [esi+edx+1] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_437230  +
mov edi [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [ebx+0Ch] eax +
add eax [ebx+10h] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add esi [ebx+10h] +
mov [ebx+10h] esi +
mov byte ptr [eax+esi] 0 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_40FDA0  +
cmp byte ptr [eax+4] 4 +
setz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov ecx eax +
and ecx 7FFFFFFFh +
cmp eax ecx +
jz loc_40FDD2  +
mov eax ecx +
mov ecx [esp+arg_0] +
shl eax 4 +
add eax [ecx+48h] +
mov eax [eax] +
sub eax [edx] +
mov edx [edx+10h] +
mov eax [edx+eax*8] +
retn   +
***
mov edx [esp+10h+arg_4] +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] 0 +
mov ecx edx +
and ecx 7FFFFFFFh +
cmp edx ecx +
jz loc_40FE59  +
mov edx [eax+48h] +
shl ecx 4 +
add edx ecx +
mov edx [edx] +
cmp edx 1 +
jbe loc_40FE72  +
lea ecx [esp+10h+var_4] +
call sub_40FC10  +
mov eax [esp+10h+var_4] +
mov eax [eax+8] +
add esp 10h +
retn   +
xor eax eax +
jmp loc_40FE6E  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov eax [eax] +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov esi [esp+8+arg_0] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40FEB0  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
cmp ebx 1 +
jbe loc_40FF00  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] esi +
call sub_40F760  +
test eax eax +
jz loc_40FF00  +
cmp byte ptr [eax+4] 4 +
jnz loc_40FF08  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40FEDF  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
mov edx [eax+10h] +
sub ebx [eax] +
mov ebx [edx+ebx*8] +
cmp ebx 1 +
ja loc_40FEB5  +
mov ebx [eax+14h] +
mov [esp+8+var_8] esi +
mov [esp+8+var_4] ebx +
call sub_40F760  +
test eax eax +
jnz loc_40FEC5  +
nop   +
add esp 8 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [eax+14h] +
add esp 8 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+8] +
mov ecx [esp+4] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40FF42  +
shl eax 4 +
add eax [ecx+48h] +
mov edx [eax] +
cmp [ecx+28h] edx +
setb al  +
retn   +
***
xor eax eax +
test ecx ecx +
jnz loc_40FF3B  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov ecx [esp+10h+arg_8] +
mov edi [esp+10h+arg_C] +
mov eax ebx +
mov edx ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40FF7D  +
mov edx eax +
shl edx 4 +
add edx [esi+48h] +
mov edx [edx] +
cmp edx 1 +
jbe loc_40FFF3  +
cmp ecx 1 +
jz loc_40FFD4  +
cmp ecx 2 +
jz loc_410006  +
test ecx ecx +
nop   +
jz loc_410035  +
mov [esp+10h+var_8] offset aLinemap_resolv +
mov [esp+10h+var_C] 631h +
mov [esp+10h+var_10] offset a____GccLibcppL +
call sub_406BF0  +
cmp byte ptr [eax+4] 4 +
jnz loc_40FFE4  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40FFCC  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40F760  +
test eax eax +
jnz loc_40FFB2  +
test edi edi +
jz loc_40FFEA  +
mov [edi] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_40FFEA  +
mov dword ptr [edi] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ebx eax +
jz loc_410023  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_410023  +
cmp byte ptr [eax+4] 4 +
jnz loc_40FFE4  +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8+4] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40F760  +
test eax eax +
jnz loc_410014  +
jmp loc_40FFE4  +
add esp 10h +
mov ecx edi +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_40FC10  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_410190  +
mov ecx [ebx+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_410190  +
shl eax 4 +
mov ecx [ecx+eax] +
cmp [ebx+28h] ecx +
mov eax edx +
jb loc_4100A2  +
cmp edx 1 +
ja loc_4100B0  +
mov eax edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_4100A0  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] ebx +
call sub_40FF50  +
mov edx [esp+3Ch+var_10] +
movzx ebp byte ptr [edx+19h] +
mov edi [edx] +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov ecx ebp +
shl eax cl +
mov ecx eax +
mov eax esi +
add ecx esi +
cmp edi ecx +
jnb loc_4100A2  +
movzx ecx byte ptr [edx+18h] +
sub eax edi +
mov edi eax +
mov [esp+3Ch+arg_0] ebx +
shr edi cl +
mov [esp+3Ch+var_20] edi +
mov edi [edx+0Ch] +
add [esp+3Ch+var_20] edi +
mov edi 1 +
shl edi cl +
mov ecx ebp +
sub edi 1 +
and edi eax +
mov eax [ebx+8] +
shr edi cl +
sub eax 1 +
imul eax eax +
add eax [ebx] +
cmp eax edx +
jz loc_4101BA  +
nop   +
mov ebx [esp+3Ch+arg_8] +
movzx ebp cl +
shl ebx cl +
mov ecx ebx +
add ecx esi +
cmp ecx [edx+1Ch] +
jnb loc_4101A0  +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] edx +
movzx ecx byte ptr [edx+18h] +
mov eax esi +
add edi [esp+3Ch+arg_8] +
sub ecx ebp +
mov ebp 1 +
shl ebp cl +
cmp edi ebp +
jnb loc_4100A2  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] eax +
call sub_40F6F0  +
cmp eax [ebx+28h] +
mov edi eax +
jbe loc_4101C9  +
mov eax esi +
jmp loc_4100A2  +
test ebx ebx +
jz loc_41009B  +
mov ecx edx +
jmp loc_410094  +
mov ebx [esp+3Ch+var_20] +
lea ebp [edx+1Ch] +
cmp [edx+28h] ebx +
ja loc_410184  +
movzx ecx byte ptr [edx+35h] +
mov edx ebp +
cmp eax edx +
jnz loc_410130  +
mov ebx [esp+3Ch+arg_0] +
movzx ebp cl +
mov edx eax +
mov [esp+3Ch+var_10] eax +
jmp loc_41014A  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
call sub_40F760  +
cmp eax [esp+3Ch+var_10] +
jnz loc_410184  +
mov eax edi +
jmp loc_4100A2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_8] +
mov eax edi +
mov esi edi +
and eax 7FFFFFFFh +
cmp edi eax +
jz loc_410218  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax ebp +
mov edx ebp +
and eax 7FFFFFFFh +
cmp ebp eax +
jz loc_41022D  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
cmp esi edx +
jz loc_410430  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_410386  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
xor ecx ecx +
cmp eax [ebx+28h] +
ja loc_410330  +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_41036A  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
cmp eax [ebx+28h] +
ja loc_4102A5  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_410286  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_410299  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
add esp 2Ch +
mov eax edx +
pop ebx  +
sub eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_40FF50  +
mov ecx [esp+2Ch+var_10] +
cmp eax esi +
mov edx eax +
jnz loc_410273  +
test cl cl +
jz loc_410273  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_40F760  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] eax +
call sub_40F760  +
mov edx [esp+2Ch+var_10] +
test edx edx +
mov esi eax +
jz loc_4103D7  +
cmp byte ptr [edx+4] 4 +
jnz loc_4103D7  +
test eax eax +
jz loc_4103E6  +
cmp byte ptr [eax+4] 4 +
jnz loc_4103D7  +
cmp edx eax +
jnz loc_4103A8  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
sub eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
call sub_40FF50  +
mov edx [esp+2Ch+var_10] +
mov ecx 1 +
mov esi eax +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_410266  +
test ebx ebx +
jnz loc_41026E  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jnz loc_41027E  +
jmp loc_410286  +
test ebx ebx +
jnz loc_410402  +
mov eax edx +
xor ecx ecx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_410266  +
jmp loc_410273  +
cmp esi edx +
jz loc_410321  +
mov eax [esi] +
cmp [edx] eax +
lea esi [esi+0] +
jnb loc_410410  +
mov edi [edx+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] edi +
call sub_40F760  +
test eax eax +
mov edx eax +
jz loc_4103D7  +
cmp byte ptr [edx+4] 4 +
jnz loc_4103D7  +
test esi esi +
jz loc_4103E6  +
cmp byte ptr [esi+4] 4 +
jz loc_4103A0  +
cmp edx esi +
jnz loc_4103E6  +
test edx edx +
lea esi [esi+0] +
jnz loc_410321  +
mov [esp+2Ch+var_24] offset aLinemap_compar +
mov [esp+2Ch+var_28] 557h +
mov [esp+2Ch+var_2C] offset a____GccLibcppL +
call sub_406BF0  +
mov eax esi +
jmp loc_41024C  +
mov ebp [esi+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
mov [esp+2Ch+var_28] ebp +
call sub_40F760  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
jmp loc_4103C7  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov ebx [esp+20h] +
mov esi [esp+1Ch] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_4104E0  +
mov edx [esi+48h] +
shl eax 4 +
mov ebx [edx+eax] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_4104E0  +
shl eax 4 +
mov edx [edx+eax] +
xor eax eax +
cmp [esi+28h] edx +
jb loc_410483  +
jmp loc_4104D3  +
mov ebx eax +
mov [esp+4] ebx +
mov ebp ebx +
mov [esp] esi +
call sub_40F760  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_4104A5  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov ecx [eax] +
mov edi [eax+10h] +
sub ebp ecx +
mov eax [edi+ebp*8] +
mov edx eax +
mov ebp eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_4104C5  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
cmp [esi+28h] ebp +
jb loc_410481  +
sub ebx ecx +
cmp eax [edi+ebx*8+4] +
setz al  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
test esi esi +
jz loc_4104D3  +
mov edx ebx +
jmp loc_410478  +
***
push esi  +
push ebx  +
sub esp 8 +
mov eax [esp+8+arg_4] +
mov esi [esp+8+arg_8] +
mov ebx [esp+8+arg_0] +
mov edx eax +
and edx 7FFFFFFFh +
mov ebp [esi] +
cmp eax edx +
jz loc_41052C  +
mov ecx [ebx+48h] +
shl edx 4 +
mov eax [ecx+edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_41052C  +
shl edx 4 +
mov eax [ecx+edx] +
mov edx [ebp+10h] +
sub eax [ebp+0] +
mov edi [edx+eax*8] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_40F760  +
test eax eax +
jz loc_410557  +
cmp byte ptr [eax+4] 4 +
jnz loc_410557  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebp+14h] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_40F760  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_4105B2  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_40F760  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_4105CC  +
cmp byte ptr [eax+4] 4 +
jz loc_4105D6  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_40FF50  +
cmp eax 1 +
jbe loc_410601  +
mov edx [esp+2Ch+var_10] +
cmp byte ptr [edx+14h] 0 +
jz loc_4105CC  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jz loc_410652  +
cmp byte ptr [edx+4] 4 +
jnz loc_410652  +
lea ebp [esp+2Ch+var_14] +
jmp loc_41061B  +
cmp byte ptr [edx+4] 4 +
jnz loc_410652  +
cmp eax 1 +
ja loc_410670  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_4104F0  +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
mov ebx eax +
call sub_40FF50  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jnz loc_410615  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_4105CC  +
mov eax [esp+2Ch+arg_8] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
cmp byte ptr [eax+14h] 0 +
jnz loc_410620  +
jmp loc_410652  +
***
sub esp 14h +
mov edx [esp+14h+arg_C] +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
mov ebx [esp+14h+arg_8] +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jz loc_4106D3  +
mov edx esi +
shl edx 4 +
add edx [ecx+48h] +
mov esi [edx+0Ch] +
mov edx [edx] +
mov [eax+0Ch] esi +
cmp edx 1 +
jbe loc_410727  +
test ebx ebx +
jz loc_410754  +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
jz loc_410730  +
shl esi 4 +
add esi [ecx+48h] +
mov esi [esi] +
cmp [ecx+28h] esi +
jb loc_410738  +
mov ecx [ebx+8] +
sub edx [ebx] +
mov [eax] ecx +
movzx ecx byte ptr [ebx+18h] +
mov esi edx +
shr esi cl +
add esi [ebx+0Ch] +
mov [eax+4] esi +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [ebx+19h] +
sub esi 1 +
and esi edx +
shr esi cl +
cmp byte ptr [ebx+14h] 0 +
mov [eax+8] esi +
setnz byte ptr [eax+10h]  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_4106F5  +
mov esi edx +
jmp loc_4106F0  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6D5h +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_406BF0  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6CDh +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_406BF0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+70h+var_10] +
mov edi [esp+70h+var_C] +
mov eax [esp+70h+var_8] +
mov edx [esp+70h+var_4] +
test esi esi +
mov [esp+70h+var_44] offset aLc_enter +
mov [esp+70h+var_40] offset aLc_leave +
mov [esp+70h+var_3C] offset aLc_rename +
mov [esp+70h+var_38] offset aLc_rename_verb +
mov [esp+70h+var_34] offset aLc_enter_macro +
jz loc_410930  +
test dl dl +
jnz loc_410880  +
imul ebx eax +
add ebx [edi] +
movzx ebp byte ptr [ebx+4] +
mov [esp+70h+var_54] offset a??? +
mov ecx ebp +
cmp cl 4 +
ja loc_4107E2  +
movzx ebp cl +
mov ecx [esp+ebp*4+70h+var_44] +
mov [esp+70h+var_54] ecx +
test dl dl +
jnz loc_410890  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_4108F6  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aNo +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_5C] ecx +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_45A760  +
mov ebp [ebx+10h] +
cmp ebp [edi+8] +
jnb loc_410905  +
mov ecx [ebx+0Ch] +
imul edx ebp +
mov eax [ebx+8] +
add edx [edi] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_64] ecx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_54] edx +
call sub_45A760  +
mov edx [esp+70h+var_54] +
test edx edx +
jz loc_41093E  +
mov eax [edx+8] +
mov [esp+70h+var_64] eax +
mov [esp+70h+var_68] ebp +
mov [esp+70h+var_6C] offset aIncludedFromDS +
mov [esp+70h+var_70] esi +
call sub_45A760  +
jmp loc_4108DE  +
mov ecx [edi+10h] +
lea ebx [eax+eax*2] +
lea ebx [ecx+ebx*8] +
jmp loc_4107C4  +
mov edx [ebx] +
mov edi [esp+70h+var_54] +
mov [esp+70h+var_58] offset aNo +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_5C] edi +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_45A760  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov eax [eax] +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_6C] offset aMacroSUTokens +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_68] eax +
call sub_45A760  +
mov [esp+70h+var_10] esi +
mov [esp+70h+var_C] offset asc_46F959 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45A760  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aYes +
jmp loc_4107FE  +
mov edx [ebx+0Ch] +
mov eax [ebx+8] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_68] eax +
call sub_45A760  +
mov eax offset aNone +
jmp loc_410864  +
mov ecx ds:_iob +
lea esi [ecx+40h] +
jmp loc_4107B7  +
mov eax offset aNone +
jmp loc_410864  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+74h] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_410972  +
mov edi [esp+70h] +
shl eax 4 +
add eax [edi+48h] +
mov ebx [eax] +
test ebx ebx +
jnz loc_410980  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov dword ptr [esp+8] 2 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40FF50  +
mov edx [esp+4Ch] +
test edx edx +
jz loc_410A60  +
mov esi [edx+8] +
mov ebp eax +
movzx ecx byte ptr [edx+18h] +
sub ebp [edx] +
mov [esp+38h] esi +
mov esi 1 +
mov edi ebp +
shr edi cl +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi ebp +
add edi [edx+0Ch] +
shr esi cl +
xor ecx ecx +
cmp byte ptr [edx+14h] 0 +
setnz cl  +
cmp ebx eax +
mov [esp+3Ch] ecx +
jnz loc_410A46  +
mov ecx [edx+10h] +
cmp ecx 0FFFFFFFFh +
jz loc_410A52  +
mov ebp [esp+70h] +
imul ecx ecx +
add ecx [ebp+0] +
jz loc_410A52  +
mov ecx [ecx+8] +
xor ebp ebp +
mov [esp+28h] eax +
mov eax [esp+3Ch] +
mov [esp+24h] ebx +
mov [esp+20h] ebp +
mov [esp+14h] esi +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+10h] edi +
mov [esp+1Ch] edx +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
mov eax [esp+78h] +
mov dword ptr [esp+4] offset aPSFSLDCDSDMPED +
mov [esp] eax +
call sub_45A760  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp 1 +
mov ecx offset off_46F9AB +
jmp loc_4109FE  +
***
xor ebp ebp +
mov ecx offset aNull_2 +
jmp loc_4109FE  +
***
mov ecx offset unk_46F9AA +
mov ebp 0FFFFFFFFh +
mov dword ptr [esp+3Ch] 0FFFFFFFFh +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+38h] ecx +
jmp loc_4109FE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
test ebp ebp +
jz loc_410B10  +
mov esi [ebp+8] +
test esi esi +
jz loc_410B10  +
mov ebx esi +
sub ebx 1 +
js loc_410B10  +
imul esi esi +
sub esi 1Ch +
jmp loc_410AC8  +
sub esi 1Ch +
sub ebx 1 +
js loc_410B10  +
mov eax [ebp+0] +
mov eax [eax+esi+8] +
test eax eax +
jz loc_410AC0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_4493F0  +
test eax eax +
jnz loc_410AC0  +
mov eax [ebp+8] +
sub eax 1 +
cmp eax ebx +
jz loc_410B20  +
add ebx 1 +
imul ebx ebx +
add ebx [ebp+0] +
mov edx [ebx] +
sub edx 1 +
mov eax [esp+1Ch+arg_8] +
mov [eax] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+28h] +
jmp loc_410AFB  +
***
push esi  +
push ebx  +
sub esp 20h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov eax [eax+4] +
mov [esp+20h+var_18] eax +
imul eax eax +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+8] +
mov [esp+20h+var_14] eax +
imul eax eax +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+14h] +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+20h+var_8] eax +
mov eax [esp+20h+arg_0] +
mov ebp [eax+10h] +
test ebp ebp +
jz loc_410C5F  +
mov eax [eax+18h] +
mov [esp+20h+var_4] eax +
lea eax [eax+eax*2-3] +
lea eax [ebp+eax*8+0] +
cmp ebp eax +
mov [esp+20h+var_1C] eax +
ja loc_410BEA  +
xor edx edx +
mov [esp+20h+var_20] 0 +
nop   +
mov esi [ebp+0Ch] +
mov eax [esp+20h+var_20] +
lea eax [eax+esi*8] +
add esi esi +
mov [esp+20h+var_20] eax +
jz loc_410BD9  +
mov eax [ebp+10h] +
xor ecx ecx +
mov [esp+20h+arg_4] edi +
lea esi [esi+0] +
mov edi [eax+4] +
lea ebx [edx+4] +
cmp [eax] edi +
cmovz edx ebx +
add ecx 2 +
add eax 8 +
cmp ecx esi +
jb loc_410BC0  +
mov edi [esp+20h+arg_4] +
add ebp 18h +
jz loc_410BE4  +
cmp ebp [esp+20h+var_1C] +
jbe loc_410BA0  +
mov eax [esp+20h+var_4] +
jmp loc_410BF7  +
mov eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov esi [esp+20h+var_18] +
mov [edi+18h] eax +
lea eax [eax+eax*2] +
mov ecx ds:dword_480270 +
shl eax 3 +
mov [edi+20h] eax +
mov eax [esp+20h+arg_0] +
mov [edi] esi +
mov esi [esp+20h+var_14] +
mov [edi+10h] ecx +
mov ecx ds:dword_48026C +
mov [edi+28h] edx +
mov eax [eax+44h] +
mov [edi+4] esi +
mov esi [esp+20h+var_10] +
mov [edi+14h] ecx +
shl eax 4 +
mov [edi+8] esi +
mov esi [esp+20h+var_C] +
mov [edi+2Ch] eax +
mov eax [esp+20h+arg_0] +
mov [edi+0Ch] esi +
mov esi [esp+20h+var_8] +
mov eax [eax+40h] +
mov [edi+1Ch] esi +
mov esi [esp+20h+var_20] +
mov [edi+30h] eax +
mov [edi+24h] esi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+20h+arg_0] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov eax [eax+18h] +
jmp loc_410BF7  +
***
jmp loc_410C80  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov esi [esp+40h] +
mov edi [esp+48h] +
mov ebp [esp+4Ch] +
test ebx ebx +
jz loc_410D07  +
test esi esi +
jz loc_410DD1  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aOfOrdinaryMaps +
mov [esp] esi +
mov [esp+8] eax +
call sub_45A760  +
mov eax [ebx+18h] +
mov dword ptr [esp+4] offset aOfMacroMapsD +
mov [esp] esi +
mov [esp+8] eax +
call sub_45A760  +
mov eax [ebx+20h] +
mov dword ptr [esp+4] offset aIncludeStackDe +
mov [esp] esi +
mov [esp+8] eax +
call sub_45A760  +
mov eax [ebx+28h] +
mov dword ptr [esp+4] offset aHighestLocatio +
mov [esp] esi +
mov [esp+8] eax +
call sub_45A760  +
test edi edi +
jnz loc_410D70  +
test ebp ebp +
jnz loc_410D10  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] offset aMacroLineMaps +
mov [esp] esi +
call sub_45A760  +
mov eax [ebx+18h] +
test eax eax +
jz loc_410D54  +
xor edi edi +
lea esi [esi+0] +
mov [esp+8] edi +
add edi 1 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] esi +
call loc_410770  +
cmp edi ebp +
jz loc_410D54  +
cmp edi [ebx+18h] +
jb loc_410D30  +
mov [esp+40h] esi +
mov dword ptr [esp+44h] offset asc_46F959 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45A760  +
***
mov dword ptr [esp+4] offset aOrdinaryLineMa +
mov [esp] esi +
call sub_45A760  +
mov edx [ebx+8] +
test edx edx +
jz loc_410DBC  +
xor eax eax +
lea esi [esi+0] +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+1Ch] eax +
call loc_410770  +
mov eax [esp+1Ch] +
add eax 1 +
cmp eax edi +
jz loc_410DBC  +
cmp eax [ebx+8] +
jb loc_410D90  +
mov dword ptr [esp+4] offset asc_46F959 +
mov [esp] esi +
call sub_45A760  +
jmp loc_410D03  +
***
mov eax ds:_iob +
lea esi [eax+40h] +
jmp loc_410CA3  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 44h +
mov edx [ecx] +
lea eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_404860  +
mov ebx [esp+48h+var_30] +
cmp ebx [esp+48h+arg_0] +
jz loc_410E10  +
xor eax eax +
add esp 44h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebp esp +
leave   +
jmp loc_410DE0  +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [ecx+44h] +
lea edi [ecx+44h] +
test eax eax +
jz loc_410E94  +
lea esi [esi+0] +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_410E7E  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_410E89  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_410E70  +
mov eax [ebp+54h] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [ebp+24h] +
mov [esp+28h+var_28] eax +
call free  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_410ED5  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
mov eax [eax] +
retn 4  +
lea eax [ecx+eax*8+8] +
mov eax [eax] +
retn 4  +
***
mov eax [esp+4] +
cmp eax 2 +
jle loc_410EF3  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
***
lea eax [ecx+eax*8+8] +
retn 4  +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_410F13  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
lea eax [ecx+eax*8+8] +
retn 4  +
***
sub esp 38h +
mov edx [esp+38h+arg_4] +
mov ebx [esp+38h+arg_0] +
test edx edx +
jnz loc_410F60  +
cmp byte ptr [ebx+2Ch] 0 +
jz loc_410F96  +
mov edx [ebx+30h] +
mov [eax] edx +
mov edx [ebx+34h] +
mov [eax+4] edx +
mov edx [ebx+38h] +
mov [eax+8] edx +
mov edx [ebx+3Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+40h] +
mov [eax+10h] edx +
add esp 38h +
pop ebx  +
retn 8  +
cmp edx 2 +
jle loc_410F90  +
mov ecx [ebx+24h] +
lea edx [ecx+edx*8-18h] +
mov edx [edx] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_34] edx +
call sub_404860  +
mov eax [esp+38h+var_2C] +
add esp 38h +
pop ebx  +
retn 8  +
lea edx [ebx+edx*8+8] +
jmp loc_410F6C  +
mov [esp+38h+var_2C] ecx +
mov ecx [ebx+8] +
lea edx [esp+38h+var_28] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ecx +
call sub_404860  +
mov edx [esp+38h+var_28] +
mov eax [esp+38h+var_2C] +
mov [ebx+30h] edx +
mov edx [esp+38h+var_24] +
mov [ebx+34h] edx +
mov edx [esp+38h+var_20] +
mov [ebx+38h] edx +
mov edx [esp+38h+var_1C] +
mov [ebx+3Ch] edx +
mov edx [esp+38h+var_18] +
mov [ebx+40h] edx +
mov edx [ebx+28h] +
test edx edx +
jz loc_410FDE  +
mov [ebx+38h] edx +
mov byte ptr [ebx+2Ch] 1 +
jmp loc_410F38  +
***
mov eax [esp+arg_0] +
mov byte ptr [ecx+2Ch] 0 +
mov [ecx+28h] eax +
retn 4  +
***
mov eax [ecx+44h] +
test eax eax +
jz loc_411027  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_411020  +
mov edx [ecx+54h] +
lea eax [edx+eax*4-0Ch] +
mov eax [eax] +
retn   +
***
lea eax [ecx+edx*4+48h] +
mov eax [eax] +
retn   +
***
xor eax eax +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 0Ch +
mov eax [ecx+44h] +
mov byte ptr [ecx+58h] 1 +
lea edi [ecx+44h] +
test eax eax +
jz loc_411074  +
nop   +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_41105E  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_411069  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_411050  +
mov dword ptr [ebp+44h] 0 +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ecx+58h] +
test al al +
jnz locret_4110A8  +
sub esp 0Ch +
cmp dword ptr [esp+10h] 60000000h +
ja loc_4110B0  +
add esp 0Ch +
retn 4  +
***
call sub_411030  +
mov eax 1 +
jmp loc_4110A5  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_47EAC8 +
mov [esp+14h+var_14] esi +
mov [ecx+4] eax +
call sub_437310  +
mov [esp+14h+var_14] esi +
mov [ebx+8] eax +
call strlen  +
mov [ebx+0Ch] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_8] +
mov edx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_47EB28 +
mov [esp+14h+var_14] esi +
mov [ecx+8] edx +
mov [ecx+4] eax +
call sub_437310  +
mov [esp+14h+var_14] esi +
mov [ebx+0Ch] eax +
call strlen  +
mov [ebx+10h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 0Ch  +
***
push ebp  +
add ecx 4 +
mov ebp esp +
sub esp 28h +
mov eax [ebp+8] +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] al +
lea eax [ebp-10h] +
mov [esp] eax +
call sub_45CFA0  +
sub esp 4 +
leave   +
retn 8  +
***
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov [ecx-4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [ecx+24h] 0 +
mov byte ptr [ecx+28h] 0 +
mov dword ptr [ecx+40h] 0 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov dword ptr [ecx+4Ch] 0 +
mov dword ptr [ecx+50h] 0 +
mov byte ptr [ecx+54h] 0 +
mov [esp+28h+var_28] eax +
mov [ebp+var_C] 1 +
call sub_45CFA0  +
sub esp 4 +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
cmp ebx [ecx+4] +
mov edx [ebp+arg_C] +
jz loc_411220  +
cmp ebx 2 +
lea eax [ecx+ebx*8+8] +
jg loc_411217  +
mov ecx [ebp+arg_8] +
mov [eax+4] dl +
mov [eax] ecx +
test ebx ebx +
jnz loc_41120E  +
mov byte ptr [esi+2Ch] 0 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [ecx+24h] +
lea eax [eax+ebx*8-18h] +
jmp loc_4111FE  +
mov eax [ebp+arg_8] +
lea ecx [ecx+4] +
mov [ebp+var_C] dl +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov [esp+28h+var_28] eax +
call sub_45CFA0  +
sub esp 4 +
jmp loc_411206  +
***
push ebp  +
add ecx 44h +
mov ebp esp +
sub esp 18h +
lea eax [ebp+8] +
mov [esp] eax +
call sub_45D040  +
sub esp 4 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_40FAC0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_4112A9  +
cmp eax 60000000h +
mov esi eax +
ja loc_4112A2  +
mov eax [ebp+arg_4] +
mov [esp+38h+var_34] 0Ah +
mov [esp+38h+var_38] eax +
call strchr  +
test eax eax +
jz loc_4112B3  +
mov ecx ebx +
call sub_411030  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov [esp+38h+var_38] 10h +
call loc_464170  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_4110C0  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_45D040  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_411260  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_40FAC0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_4113A2  +
cmp edx 60000000h +
ja loc_4113B0  +
mov eax [ebx] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_30] 1 +
mov [ebp+var_2C] edx +
mov [esp+38h+var_38] eax +
call sub_410050  +
mov edx [ebp+var_2C] +
cmp eax edx +
mov esi eax +
jz loc_4113B0  +
mov [esp+38h+var_38] 10h +
call loc_464170  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_4110C0  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_45D040  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_411030  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_411320  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_40FBA0  +
mov [esp+48h+var_44] esi +
mov edi eax +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_40FBA0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_411454  +
cmp edi 60000000h +
ja loc_41144D  +
cmp eax 60000000h +
mov esi eax +
ja loc_41144D  +
mov eax [ebp+arg_8] +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] eax +
call strchr  +
test eax eax +
jz loc_411460  +
mov ecx ebx +
call sub_411030  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx+44h] +
test eax eax +
jz loc_4114A8  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_4114F0  +
mov edx [ebx+54h] +
lea eax [edx+eax*4-0Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_4114A8  +
mov edx [ebx] +
mov eax [ecx] +
mov [ebp+var_2C] edx +
mov edx [ebp+arg_8] +
mov eax [eax+18h] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_3C] edx +
mov edx [ebp+var_2C] +
mov [esp+48h+var_48] edx +
call eax  +
sub esp 10h +
test al al +
jnz loc_411454  +
mov [esp+58h+var_58] 14h +
call loc_464170  +
mov edx [ebp+arg_8] +
mov [esp+58h+var_58] edi +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_50] edx +
mov ecx eax +
mov [ebp+var_2C] eax +
call sub_411100  +
mov eax [ebp+var_2C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
sub esp 0Ch +
mov [esp+58h+var_58] eax +
call sub_45D040  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea eax [ebx+edx*4+48h] +
jmp loc_41147A  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov dword ptr [esp+8] offset unk_46F9AA +
mov [esp] eax +
mov [esp+4] edx +
call sub_4113F0  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_40FAC0  +
mov ecx ebx +
mov [esp+18h+var_10] offset unk_46F9AA +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_4113F0  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov [esp] eax +
call sub_411530  +
sub esp 4 +
leave   +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_40FAC0  +
mov ecx [ebp+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_4113F0  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_411590  +
sub esp 8 +
leave   +
retn 4  +
***
sub ecx 39h +
cmp ecx 9 +
ja loc_411680  +
jmp ds:off_46FAC0[ecx*4]  +
mov ecx [edx+124h] +
mov [eax] ecx +
mov ecx [edx+128h] +
mov edx [edx+12Ch] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+13Ch] +
mov [eax] ecx +
mov ecx [edx+140h] +
mov edx [edx+144h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+130h] +
mov [eax] ecx +
mov ecx [edx+134h] +
mov edx [edx+138h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+148h] +
mov [eax] ecx +
mov ecx [edx+14Ch] +
mov edx [edx+150h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+118h] +
mov [eax] ecx +
mov ecx [edx+11Ch] +
mov edx [edx+120h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov esi [esp+28h] +
mov ecx [ebx+8] +
lea edx [esi+ecx] +
cmp edx [ebx+4] +
ja loc_4116F0  +
mov eax [ebx] +
add ecx eax +
mov eax [esp+24h] +
mov [esp+8] esi +
mov [esp] ecx +
mov [esp+4] eax +
call memcpy  +
mov eax 1 +
add [ebx+8] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax edx +
shr eax 2 +
add edx eax +
mov eax [ebx] +
mov [ebx+4] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_437230  +
mov ecx [ebx+8] +
mov [ebx] eax +
jmp loc_4116CA  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax ecx +
mov [ebp+var_20] ecx +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] eax +
mov eax ds:_stricmp +
mov [ebp+var_28] edx +
mov [esp+48h+var_44] ecx +
mov [ebp+var_24] eax +
call eax  +
test eax eax +
jnz loc_411760  +
mov dword ptr [ebx] offset loc_4116B0 +
mov eax ebx +
mov dword ptr [ebx+4] 0FFFFFFFFh +
mov dword ptr [ebx+8] 0FFFFFFFFh +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_20] +
mov [esp+48h+var_48] eax +
call strlen  +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] ecx +
mov esi eax +
call strlen  +
mov edi eax +
lea eax [esi+eax+20h] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea ecx [esp+48h+var_28+3] +
mov [ebp+var_1C] ecx +
mov ecx [ebp+arg_0] +
and [ebp+var_1C] 0FFFFFFF0h +
mov esi [ebp+var_1C] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] esi +
call memcpy  +
mov edx [ebp+var_20] +
lea eax [esi+edi+1] +
mov byte ptr [esi+edi] 2Fh +
xor edi edi +
mov esi offset off_474260 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call strcpy  +
mov [ebp+var_2C] ebx +
mov ebx edi +
mov edi [ebp+var_24] +
nop   +
mov eax [esi] +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
call edi  +
test eax eax +
jz loc_411820  +
add ebx 1 +
add esi 0Ch +
cmp ebx 8 +
jnz loc_4117D0  +
mov eax [ebp+var_20] +
mov [esp+48h+var_40] offset aNoIconvImpleme +
mov ebx [ebp+var_2C] +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_38] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] eax +
call sub_41FFB0  +
jmp loc_41173B  +
mov edi ebx +
mov ebx [ebp+var_2C] +
lea eax [edi+edi*2] +
lea eax ds:474260h[eax*4] +
mov edx [eax+4] +
mov eax [eax+8] +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx] edx +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_C] +
mov eax [ebx+8] +
mov edi [ebx] +
mov esi [ebx+4] +
add edi eax +
sub esi eax +
cmp esi 3 +
ja loc_4119B0  +
cmp [esp+1Ch+arg_8] 0 +
jnz loc_411B26  +
mov eax [ebx+4] +
sub eax esi +
mov [ebx+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1Ch+arg_8] +
test ecx ecx +
jz loc_411997  +
mov eax [esp+1Ch+arg_4] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov byte ptr [esp+1Ch+var_14] al +
jbe loc_411A08  +
mov [esp+1Ch+var_10] edi +
mov ebp ecx +
movzx ecx ds:byte_4707D6[edx] +
movzx edi byte ptr [edx+4707D0h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_411A61  +
add edx 1 +
cmp edx 7 +
jnz loc_4119D6  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_4119A4  +
sub [esp+1Ch+arg_8] 1 +
add [esp+1Ch+arg_4] 1 +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jnz loc_411A4C  +
movzx eax ch +
mov [edi+1] al +
mov eax ecx +
shr eax 10h +
mov [edi+2] al +
mov eax 3 +
mov [edi] cl +
mov edx [esp+1Ch+arg_8] +
shr ecx 18h +
sub esi 4 +
mov [edi+eax] cl +
test edx edx +
jz loc_411997  +
add edi 4 +
jmp loc_411987  +
movzx eax ch +
mov [edi+2] al +
mov eax ecx +
shr eax 10h +
mov [edi+1] al +
xor eax eax +
mov [edi+3] cl +
jmp loc_411A2F  +
cmp [esp+1Ch+arg_8] edx +
mov edi [esp+1Ch+var_10] +
jnb loc_411A72  +
mov ebx 16h +
jmp loc_4119FC  +
mov eax [esp+1Ch+arg_4] +
and cl byte ptr [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] edi +
mov edi edx +
movzx ecx cl +
lea ebp [eax+1] +
jmp loc_411A9A  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax [esp+1Ch+arg_4] +
cmp eax edi +
jnb loc_411AB0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov edx eax +
and edx 0FFFFFFC0h +
cmp dl 80h +
jz loc_411A88  +
jmp loc_4119F7  +
lea eax [ecx-80h] +
mov edx edi +
mov edi [esp+1Ch+var_14] +
cmp eax 7FFFFF7Fh +
ja loc_4119F7  +
cmp ecx 7FFh +
ja loc_411AD5  +
cmp edx 2 +
ja loc_4119F7  +
cmp ecx 0FFFFh +
ja loc_411AE6  +
cmp edx 3 +
ja loc_4119F7  +
cmp ecx 1FFFFFh +
ja loc_411AF7  +
cmp edx 4 +
ja loc_4119F7  +
cmp ecx 3FFFFFFh +
ja loc_411B08  +
cmp edx 5 +
ja loc_4119F7  +
lea eax [ecx-0D800h] +
cmp eax 7FFh +
jbe loc_4119F7  +
sub [esp+1Ch+arg_8] edx +
mov [esp+1Ch+arg_4] ebp +
jmp loc_411A12  +
mov eax [ebx+4] +
add esi 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edx +
call sub_437230  +
mov edi [ebx+4] +
mov [ebx] eax +
sub eax esi +
add edi eax +
jmp loc_411987  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax [esp+28h] +
mov ecx [eax] +
mov eax [esp+2Ch] +
test ecx ecx +
mov ebp [eax] +
mov eax 16h +
jnz loc_411B90  +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx] +
mov dword ptr [esp] 2 +
movzx esi al +
cmp esi 7Fh +
mov [esp+4] al +
jbe loc_411BE0  +
mov edx [esp] +
mov [esp+8] ebx +
movzx ebx ds:byte_4707D6[edx] +
movzx edi byte ptr [edx+4707D0h] +
movzx eax bl +
not eax  +
and eax esi +
cmp eax edi +
jz loc_411CB0  +
add edx 1 +
cmp edx 7 +
jnz loc_411BAD  +
add esp 0Ch +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [esp+28h] +
lea eax [ecx-1] +
mov [edi] eax +
mov edi [esp+24h] +
lea eax [ebx+1] +
mov [edi] eax +
cmp esi 0FFFFh +
mov eax [esp+30h] +
ja loc_411C38  +
cmp dword ptr [eax] 1 +
jbe loc_411C3D  +
mov ebx [esp+20h] +
xor eax eax +
mov ecx esi +
test ebx ebx +
setnz al  +
mov [ebp+eax+0] cl +
setz al  +
mov ecx esi +
movzx eax al +
movzx edx ch +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_411B82  +
***
cmp dword ptr [eax] 3 +
ja loc_411C56  +
mov eax [esp+24h] +
mov [eax] ebx +
mov eax [esp+28h] +
mov [eax] ecx +
add esp 0Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+20h] +
lea eax [esi-10000h] +
and esi 3FFh +
shr eax 0Ah +
mov edx esi +
add eax 0D800h +
add edx 0DC00h +
test ecx ecx +
jz loc_411DC0  +
mov [ebp+1] al +
movzx eax ah +
mov [ebp+0] al +
mov eax 2 +
mov [ebp+3] dl +
movzx edx dh +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_411B82  +
***
cmp ecx edx +
mov edi ebx +
mov ebx [esp+8] +
mov [esp] edx +
mov eax 16h +
jb loc_411B82  +
mov eax edi +
and al [esp+4] +
lea edi [ebx+1] +
mov [esp+4] ecx +
movzx esi al +
add edi 1 +
movzx eax byte ptr [edi-1] +
mov ecx eax +
and ecx 0FFFFFFC0h +
cmp cl 80h +
jnz loc_411BD2  +
and eax 3Fh +
shl esi 6 +
add esi eax +
mov eax edi +
sub eax ebx +
cmp eax edx +
jb loc_411CD6  +
lea eax [esi-80h] +
mov ecx [esp+4] +
mov [esp] edx +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFFFF7Fh +
ja loc_411B82  +
cmp esi 7FFh +
ja loc_411D2A  +
cmp dword ptr [esp] 2 +
ja loc_411B82  +
cmp esi 0FFFFh +
ja loc_411D41  +
cmp dword ptr [esp] 3 +
mov eax 2Ah +
ja loc_411B82  +
cmp esi 1FFFFFh +
ja loc_411D58  +
cmp dword ptr [esp] 4 +
mov eax 2Ah +
ja loc_411B82  +
cmp esi 3FFFFFFh +
ja loc_411D6F  +
cmp dword ptr [esp] 5 +
mov eax 2Ah +
ja loc_411B82  +
lea eax [esi-0D800h] +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFh +
jbe loc_411B82  +
mov edx [esp+24h] +
mov [edx] edi +
mov edi ecx +
sub edi [esp] +
cmp esi 10FFFFh +
mov edx edi +
mov edi [esp+28h] +
mov [edi] edx +
jbe loc_411BF2  +
mov edi [esp+24h] +
mov esi [esp+28h] +
mov [edi] ebx +
mov [esi] ecx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [ebp+0] al +
movzx eax ah +
mov [ebp+1] al +
mov eax 3 +
mov [ebp+2] dl +
jmp loc_411C8F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+3Ch] +
mov eax [ebx+8] +
mov esi ebx +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
mov eax [esp+38h] +
test eax eax +
jnz loc_411E20  +
mov eax [esi+4] +
sub eax ebp +
mov [esi+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov [esp+0Fh] al +
jbe loc_411E70  +
movzx ebx ds:byte_4707D6[edx] +
movzx edi byte ptr [edx+4707D0h] +
movzx eax bl +
not eax  +
and eax ecx +
cmp eax edi +
jz loc_411F00  +
add edx 1 +
cmp edx 7 +
jnz loc_411E38  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_411E12  +
***
mov eax [esp+38h] +
lea ebx [eax-1] +
mov eax [esp+34h] +
add eax 1 +
cmp ecx 0FFFFh +
ja loc_411EC6  +
cmp ebp 1 +
jbe loc_411ECB  +
mov edi [esp+30h] +
xor edx edx +
test edi edi +
mov edi [esp+8] +
setnz dl  +
mov [edi+edx] cl +
setz dl  +
movzx ecx ch +
add dword ptr [esp+8] 2 +
movzx edx dl +
sub ebp 2 +
mov [edi+edx] cl +
test ebx ebx +
jz loc_411E05  +
mov [esp+34h] eax +
mov [esp+38h] ebx +
jmp loc_411DFD  +
***
cmp ebp 3 +
ja loc_411F10  +
mov eax [esi+4] +
add ebp 100h +
mov edx [esi] +
add eax 100h +
mov [esi+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_437230  +
mov [esi] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [esi+4] +
add [esp+8] eax +
jmp loc_411DFD  +
***
cmp edx [esp+38h] +
jbe loc_411F76  +
mov ebx 16h +
jmp loc_411E62  +
***
mov edi [esp+30h] +
lea edx [ecx-10000h] +
and ecx 3FFh +
shr edx 0Ah +
add ecx 0DC00h +
add edx 0D800h +
test edi edi +
jz loc_411F60  +
mov edi [esp+8] +
mov [edi+1] dl +
movzx edx dh +
mov [edi] dl +
mov edx 2 +
mov [edi+3] cl +
mov edi [esp+8] +
movzx ecx ch +
sub ebp 4 +
add dword ptr [esp+8] 4 +
mov [edi+edx] cl +
jmp loc_411EB1  +
***
mov edi [esp+8] +
mov [edi] dl +
movzx edx dh +
mov [edi+1] dl +
mov edx 3 +
mov [edi+2] cl +
jmp loc_411F47  +
***
mov eax [esp+34h] +
mov edi edx +
and bl [esp+0Fh] +
add eax 1 +
movzx ecx bl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 0FFFFFFC0h +
cmp dl 80h +
jnz loc_411E5D  +
mov edx eax +
and ebx 3Fh +
sub edx [esp+34h] +
shl ecx 6 +
add ecx ebx +
cmp edx edi +
jb loc_411F86  +
lea ebx [ecx-80h] +
mov edx edi +
cmp ebx 7FFFFF7Fh +
ja loc_411E5D  +
cmp ecx 7FFh +
ja loc_411FCF  +
cmp edi 2 +
ja loc_411E5D  +
cmp ecx 0FFFFh +
ja loc_411FE0  +
cmp edx 3 +
ja loc_411E5D  +
cmp ecx 1FFFFFh +
ja loc_411FF1  +
cmp edx 4 +
ja loc_411E5D  +
cmp ecx 3FFFFFFh +
ja loc_412002  +
cmp edx 5 +
ja loc_411E5D  +
lea ebx [ecx-0D800h] +
cmp ebx 7FFh +
jbe loc_411E5D  +
mov ebx [esp+38h] +
sub ebx edx +
cmp ecx 10FFFFh +
ja loc_411E5D  +
jmp loc_411E7E  +
***
push ebp  +
mov eax 7 +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov esi [esp+2Ch] +
cmp dword ptr [esi] 3 +
ja loc_412050  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov edi [eax] +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax 16h +
test ebx ebx +
jz loc_412045  +
movzx eax byte ptr [edi] +
mov edx 2 +
movzx ecx al +
cmp ecx 7Fh +
mov [esp] al +
jbe loc_4120A6  +
mov [esp+4] edi +
mov ebp ecx +
movzx ecx ds:byte_4707D6[edx] +
movzx edi byte ptr [edx+4707D0h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_41210A  +
add edx 1 +
cmp edx 7 +
jnz loc_41207E  +
mov eax 2Ah +
jmp loc_412045  +
***
mov eax [esp+24h] +
sub ebx 1 +
add edi 1 +
mov [eax] ebx +
mov eax [esp+20h] +
mov [eax] edi +
mov edx [esp+1Ch] +
mov eax [esp+28h] +
test edx edx +
mov eax [eax] +
jz loc_4120F3  +
movzx edx ch +
mov [eax+2] dl +
mov edx ecx +
shr edx 10h +
mov [eax+1] dl +
xor edx edx +
mov [eax+3] cl +
shr ecx 18h +
mov [eax+edx] cl +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
xor eax eax +
sub dword ptr [esi] 4 +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx ch +
mov [eax+1] dl +
mov edx ecx +
shr edx 10h +
mov [eax+2] dl +
mov edx 3 +
mov [eax] cl +
jmp loc_4120D9  +
***
cmp ebx edx +
mov edi [esp+4] +
mov eax 16h +
jb loc_412045  +
and cl [esp] +
lea ebp [edi+1] +
mov [esp] ebx +
movzx ecx cl +
jmp loc_412140  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax edi +
cmp eax edx +
jnb loc_412156  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ebx eax +
and ebx 0FFFFFFC0h +
cmp bl 80h +
jz loc_412130  +
jmp loc_41209F  +
***
lea edi [ecx-80h] +
mov ebx [esp] +
mov eax 2Ah +
cmp edi 7FFFFF7Fh +
ja loc_412045  +
cmp ecx 7FFh +
ja loc_41217E  +
cmp edx 2 +
ja loc_412045  +
cmp ecx 0FFFFh +
ja loc_412194  +
cmp edx 3 +
mov eax 2Ah +
ja loc_412045  +
cmp ecx 1FFFFFh +
ja loc_4121AA  +
cmp edx 4 +
mov eax 2Ah +
ja loc_412045  +
cmp ecx 3FFFFFFh +
ja loc_4121C0  +
cmp edx 5 +
mov eax 2Ah +
ja loc_412045  +
lea edi [ecx-0D800h] +
mov eax 2Ah +
cmp edi 7FFh +
jbe loc_412045  +
mov eax [esp+20h] +
sub ebx edx +
mov [eax] ebp +
mov eax [esp+24h] +
mov [eax] ebx +
jmp loc_4120B8  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+4Ch] +
mov eax [ebx+8] +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
cmp dword ptr [esp+48h] 3 +
mov esi 16h +
ja loc_412234  +
mov eax [esp+48h] +
test eax eax +
jnz loc_412290  +
mov eax [ebx+4] +
sub eax ebp +
mov [ebx+8] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+40h] +
test edx edx +
jz loc_4122A3  +
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax] +
movzx eax byte ptr [eax+1] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+2] +
shl edx 8 +
add eax edx +
mov edx 3 +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx+edx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_4122C8  +
mov esi 2Ah +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_41222C  +
***
test esi esi +
jz loc_41220B  +
cmp esi 7 +
jz loc_412386  +
jmp loc_41227E  +
***
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax+3] +
movzx eax byte ptr [eax+2] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+1] +
shl edx 8 +
add eax edx +
xor edx edx +
jmp loc_412261  +
***
cmp eax 7FFFFFFEh +
ja loc_412279  +
cmp eax 7Fh +
jbe loc_412375  +
lea edx [esp+20h] +
mov ecx 1 +
mov [esp+0Ch] ebp +
mov [esp+4Ch] ebx +
jmp loc_4122F4  +
mov ecx edi +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
lea esi [edx-1] +
mov [edx-1] bl +
lea edi [ecx+1] +
ja loc_4122F0  +
movzx ebp ds:byte_4707E2[edi] +
test eax ebp +
jnz loc_4122F0  +
mov ebp [esp+0Ch] +
lea esi [edx-2] +
or al ds:byte_4707DD[ecx] +
mov ebx [esp+4Ch] +
cmp edi ebp +
mov [edx-2] al +
ja loc_412386  +
lea eax [esp+20h] +
cmp esi eax +
jnb loc_412362  +
mov ecx [esp+8] +
mov edx esi +
nop   +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ecx 1 +
mov [ecx-1] al +
lea eax [esp+20h] +
cmp edx eax +
jnz loc_412340  +
add esi 1 +
lea eax [esp+21h] +
sub eax esi +
add [esp+8] eax +
sub ebp edi +
xor esi esi +
add dword ptr [esp+44h] 4 +
sub dword ptr [esp+48h] 4 +
jmp loc_412217  +
***
test ebp ebp +
mov edi 1 +
mov [esp+1Fh] al +
lea esi [esp+1Fh] +
jnz loc_412338  +
mov eax [ebx+4] +
add ebp 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_437230  +
mov [ebx] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [ebx+4] +
add [esp+8] eax +
jmp loc_41220B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+4Ch] +
mov eax [ebp+8] +
mov edi [ebp+0] +
mov esi [ebp+4] +
add edi eax +
mov [esp+8] edi +
sub esi eax +
cmp dword ptr [esp+48h] 1 +
jbe loc_412430  +
mov edx [esp+40h] +
mov ebx [esp+44h] +
test edx edx +
setz al  +
setnz dl  +
movzx eax al +
movzx ecx dl +
movzx eax byte ptr [ebx+eax] +
movzx ecx byte ptr [ebx+ecx] +
shl eax 8 +
lea ebp [eax+ecx] +
lea eax [ebp-0DC00h] +
cmp eax 3FFh +
ja loc_412460  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx 16h +
mov eax [esp+48h] +
test eax eax +
jnz loc_4125E6  +
mov ebp [esp+4Ch] +
mov eax [ebp+4] +
sub eax esi +
mov [ebp+8] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [ebp-0D800h] +
cmp eax 3FFh +
ja loc_412480  +
cmp dword ptr [esp+48h] 3 +
ja loc_4124E3  +
mov ebx 16h +
jmp loc_412419  +
***
cmp ebp 7Fh +
ja loc_412523  +
mov eax ebp +
test esi esi +
mov [esp+1Fh] al +
lea edi [esp+1Fh] +
mov ecx 1 +
jnz loc_41257C  +
mov eax [esp+4Ch] +
add esi 100h +
mov edx [esp+4Ch] +
mov eax [eax+4] +
mov [esp+8] eax +
add eax 100h +
mov [edx+4] eax +
mov edx [edx] +
mov [esp+4] eax +
mov [esp] edx +
call sub_437230  +
mov edx [esp+4Ch] +
mov [edx] eax +
sub eax esi +
mov [esp+8] eax +
mov eax [edx+4] +
add [esp+8] eax +
jmp loc_4123DC  +
***
test dl dl +
jnz loc_4125C0  +
mov eax [esp+44h] +
mov edx 2 +
movzx eax byte ptr [eax+3] +
shl eax 8 +
mov ebx [esp+44h] +
movzx edx byte ptr [ebx+edx] +
add eax edx +
lea edx [eax-0DC00h] +
cmp edx 3FFh +
ja loc_412414  +
mov edx ebp +
shl edx 0Ah +
lea ebp [eax+edx-35FDC00h] +
mov eax ebp +
mov ebx 1 +
lea edx [esp+20h] +
mov [esp+0Ch] ebp +
jmp loc_412538  +
mov ebx ecx +
mov edx edi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea edi [edx-1] +
lea ecx [ebx+1] +
ja loc_412534  +
movzx ebp ds:byte_4707E2[ecx] +
test eax ebp +
jnz loc_412534  +
or al ds:byte_4707DD[ebx] +
cmp ecx esi +
mov ebp [esp+0Ch] +
lea edi [edx-2] +
mov [edx-2] al +
ja loc_4124A0  +
lea eax [esp+20h] +
cmp edi eax +
jnb loc_4125A4  +
mov edx [esp+8] +
mov eax edi +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+20h] +
cmp eax ebx +
jnz loc_412582  +
add edi 1 +
lea eax [esp+21h] +
sub eax edi +
add [esp+8] eax +
sub esi ecx +
cmp ebp 0FFFFh +
jbe loc_4125D5  +
add dword ptr [esp+44h] 4 +
xor ebx ebx +
sub dword ptr [esp+48h] 4 +
jmp loc_412435  +
***
mov eax [esp+44h] +
mov edx 3 +
movzx eax byte ptr [eax+2] +
shl eax 8 +
jmp loc_4124FB  +
***
add dword ptr [esp+44h] 2 +
xor ebx ebx +
sub dword ptr [esp+48h] 2 +
jmp loc_412435  +
***
test ebx ebx +
jz loc_4123DC  +
cmp ebx 7 +
jz loc_4124A0  +
jmp loc_412419  +
***
push ebp  +
mov eax 16h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+2Ch] +
cmp dword ptr [edi] 3 +
ja loc_412620  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+24h] +
mov eax [esp+28h] +
test ecx ecx +
mov edx [eax] +
jnz loc_412670  +
movzx eax byte ptr [edx+3] +
movzx ecx byte ptr [edx+2] +
shl eax 18h +
shl ecx 10h +
add eax ecx +
movzx ecx byte ptr [edx+1] +
shl ecx 8 +
add eax ecx +
xor ecx ecx +
movzx edx byte ptr [edx+ecx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_412690  +
add esp 10h +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
shl ecx 18h +
shl eax 10h +
add eax ecx +
movzx ecx byte ptr [edx+2] +
shl ecx 8 +
add eax ecx +
mov ecx 3 +
jmp loc_412649  +
***
cmp eax 7FFFFFFEh +
ja loc_41265D  +
mov esi [esp+30h] +
cmp eax 7Fh +
mov ebp [esi] +
jbe loc_412750  +
lea edx [esp+10h] +
mov ebx 1 +
jmp loc_4126B5  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_4126B1  +
movzx edi ds:byte_4707E2[ecx] +
test eax edi +
jnz loc_4126B1  +
or al ds:byte_4707DD[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+34h] +
mov eax [eax] +
cmp ecx eax +
ja loc_412767  +
lea ebx [esp+10h] +
cmp esi ebx +
jnb loc_412726  +
mov edx esi +
mov ebx ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ebx 1 +
mov [ebx-1] al +
lea eax [esp+10h] +
cmp edx eax +
jnz loc_412700  +
lea eax [esp+11h] +
add esi 1 +
sub eax esi +
add ebp eax +
mov eax [esp+34h] +
mov eax [eax] +
mov esi [esp+34h] +
sub eax ecx +
mov [esi] eax +
mov eax [esp+30h] +
mov [eax] ebp +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
mov eax [esp+2Ch] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_412615  +
***
mov [esp+0Fh] al +
mov eax [esp+34h] +
lea esi [esp+0Fh] +
mov ecx 1 +
mov eax [eax] +
test eax eax +
jnz loc_4126F7  +
mov eax 7 +
jmp loc_412615  +
***
jmp loc_412780  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+2Ch] +
mov ebx [esp+28h] +
mov edx [eax] +
mov eax [esp+30h] +
mov ecx [eax] +
mov eax 16h +
cmp ecx 1 +
jbe loc_4127D0  +
xor eax eax +
test ebx ebx +
setz al  +
movzx eax byte ptr [edx+eax] +
shl eax 8 +
test ebx ebx +
setnz bl  +
movzx esi bl +
movzx edi byte ptr [edx+esi] +
add edi eax +
mov eax 2Ah +
lea esi [edi-0DC00h] +
cmp esi 3FFh +
ja loc_4127D8  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [edi-0D800h] +
cmp eax 3FFh +
ja loc_412890  +
cmp ecx 3 +
mov eax 16h +
jbe loc_4127D0  +
test bl bl +
jz loc_412920  +
movzx eax byte ptr [edx+2] +
mov ecx 3 +
shl eax 8 +
movzx edx byte ptr [edx+ecx] +
add edx eax +
mov eax 2Ah +
lea ecx [edx-0DC00h] +
cmp ecx 3FFh +
ja loc_4127D0  +
mov eax [esp+34h] +
shl edi 0Ah +
lea edi [edx+edi-35FDC00h] +
mov eax [eax] +
mov [esp] eax +
mov eax edi +
mov ebx 1 +
lea edx [esp+14h] +
jmp loc_412844  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_412840  +
movzx ebp ds:byte_4707E2[ecx] +
test eax ebp +
jnz loc_412840  +
or al ds:byte_4707DD[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+38h] +
mov eax [eax] +
cmp ecx eax +
jbe loc_412915  +
mov eax 7 +
jmp loc_4127D0  +
***
mov eax [esp+34h] +
cmp edi 7Fh +
mov eax [eax] +
mov [esp] eax +
ja loc_412833  +
mov eax edi +
mov ecx 1 +
mov [esp+13h] al +
mov eax [esp+38h] +
lea esi [esp+13h] +
mov eax [eax] +
test eax eax +
jz loc_412882  +
mov edx [esp] +
mov eax esi +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+14h] +
cmp eax ebx +
jnz loc_4128C0  +
lea eax [esp+15h] +
add esi 1 +
sub eax esi +
add [esp] eax +
mov eax [esp+38h] +
mov eax [eax] +
mov esi [esp+38h] +
sub eax ecx +
cmp edi 0FFFFh +
mov [esi] eax +
mov eax [esp+34h] +
mov esi [esp] +
mov [eax] esi +
mov eax [esp+2Ch] +
jbe loc_412931  +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_4127D0  +
***
lea edx [esp+14h] +
cmp esi edx +
jb loc_4128B7  +
jmp loc_4128E7  +
***
movzx eax byte ptr [edx+3] +
mov ecx 2 +
shl eax 8 +
jmp loc_412807  +
***
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_4127D0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edx [ebx+2A0h] +
mov ecx [ebx+278h] +
mov esi [ebx+27Ch] +
movzx edi byte ptr [ebx+2A6h] +
cmp edx 1Fh +
jbe loc_412AB0  +
mov edx edi +
mov eax offset aUtf32be +
test dl dl +
mov edx offset aUtf32le +
cmovz eax edx +
mov edx offset aUtf8 +
test ecx ecx +
cmovz ecx edx +
test esi esi +
cmovz esi eax +
mov [esp] edx +
lea eax [esp+10h] +
mov edx ebx +
call sub_411710  +
mov eax [esp+10h] +
mov ecx offset aUtf8 +
mov edx ebx +
mov [ebx+118h] eax +
mov eax [esp+14h] +
mov [ebx+11Ch] eax +
mov eax [ebx+298h] +
mov [ebx+120h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_411710  +
mov eax [esp+10h] +
mov [ebx+124h] eax +
mov eax [esp+14h] +
mov [ebx+128h] eax +
mov eax [ebx+298h] +
mov [ebx+12Ch] eax +
mov eax edi +
test al al +
jz loc_412AD4  +
mov ecx offset aUtf16be +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_411710  +
mov eax [esp+10h] +
mov ecx offset aUtf32be +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_411710  +
mov eax [esp+10h] +
mov ecx esi +
mov edx ebx +
mov [ebx+13Ch] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+144h] 20h +
mov [ebx+140h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_411710  +
mov eax [esp+10h] +
mov [ebx+148h] eax +
mov eax [esp+14h] +
mov [ebx+14Ch] eax +
mov eax [ebx+2A0h] +
mov [ebx+150h] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp edx 0Fh +
mov eax offset aUtf8 +
jbe loc_41298D  +
mov edx edi +
mov eax offset aUtf16be +
test dl dl +
mov edx offset aUtf16le +
cmovz eax edx +
jmp loc_41298D  +
***
mov ecx offset aUtf16le +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_411710  +
mov eax [esp+10h] +
mov ecx offset aUtf32le +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
jmp loc_412A45  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+34h] +
mov esi [esp+30h] +
cmp ebx 7Eh +
ja loc_412BC0  +
mov dword ptr [esp] 1 +
mov [esp+13h] bl +
mov dword ptr [esp+18h] 1 +
call sub_4371B0  +
mov edx [esi+11Ch] +
lea ecx [esp+14h] +
mov dword ptr [esp+1Ch] 0 +
mov [esp+14h] eax +
mov eax [esi+118h] +
mov [esp+0Ch] ecx +
lea ecx [esp+13h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
test al al +
jz loc_412BE4  +
cmp dword ptr [esp+1Ch] 1 +
jz loc_412C04  +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xLxI +
mov dword ptr [esp+4] 4 +
call sub_41FFB0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xL_0 +
mov dword ptr [esp+4] 4 +
call sub_41FFB0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aConvertingToEx +
mov dword ptr [esp+4] 4 +
call sub_4202B0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+14h] +
movzx ebx byte ptr [edx] +
mov [esp] edx +
call free  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] 40h +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 8 +
call sub_4371B0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
retn   +
***
sub esp 18h +
mov edx [ecx+4] +
mov eax [ecx+8] +
cmp edx eax +
jge loc_412CA0  +
mov eax [ecx] +
lea ecx [edx+1] +
mov [ebx+4] ecx +
mov ebx [esp+18h+arg_4] +
mov ecx [esp+18h+arg_0] +
mov [eax+edx*8+4] ebx +
mov [eax+edx*8] ecx +
add esp 18h +
pop ebx  +
retn 8  +
lea edx [eax+eax] +
mov [ecx+8] edx +
mov edx [ecx] +
shl eax 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_437230  +
mov edx [ebx+4] +
mov [ebx] eax +
jmp loc_412C82  +
***
push edi  +
mov edi ecx +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
test eax eax +
jle loc_412D00  +
mov eax [ebx] +
cmp eax 60000000h +
ja loc_412CE7  +
mov ecx [ebx+4] +
add ecx eax +
mov [ebx] ecx +
mov [esp+28h+var_28] eax +
mov ecx edi +
add esi 1 +
mov [esp+28h+var_24] eax +
call sub_412C70  +
sub esp 8 +
cmp esi [ebp+arg_0] +
jnz loc_412CD7  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_18] +
mov ebx [esp+2Ch+arg_1C] +
mov eax [eax] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+248h] 0 +
jnz loc_412E40  +
cmp byte ptr [eax+268h] 0 +
jz loc_412F63  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+28Ah] 0 +
jle loc_412E40  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aC99SUniversalC +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
mov eax [esp+2Ch+var_10] +
movzx edx byte ptr [eax-1] +
mov eax 4 +
cmp dl 75h +
jz loc_412DAE  +
cmp dl 55h +
mov al 8 +
jz loc_412DAE  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aIn_cpp_valid_u +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
mov eax 4 +
mov ebp [esp+2Ch+var_10] +
xor edi edi +
mov [esp+2Ch+var_14] eax +
movzx edx byte ptr [ebp+0] +
test byte ptr ds:(word_479A60+1)[edx+edx] 1 +
jz loc_412E06  +
add ebp 1 +
test ebx ebx +
jz loc_412DE9  +
test esi esi +
jz loc_41314E  +
mov ecx [ebx] +
cmp ecx 60000000h +
ja loc_412DE6  +
mov eax [ebx+4] +
add eax ecx +
mov [ebx] eax +
mov [esi+4] ecx +
movzx edx ds:byte_47B600[edx] +
shl edi 4 +
add edi edx +
sub [esp+2Ch+var_14] 1 +
jz loc_412E90  +
cmp ebp [esp+2Ch+arg_8] +
jb loc_412DB8  +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
setnz cl  +
test ebx ebx +
setnz dl  +
test cl cl +
mov eax edx +
jz loc_4132ED  +
test dl dl +
jz loc_4132ED  +
mov eax [esp+2Ch+arg_14] +
mov dword ptr [eax] 0 +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jz loc_412D74  +
mov edi [esp+2Ch+arg_C] +
test edi edi +
jnz loc_412D74  +
mov eax [esp+2Ch+var_10] +
movzx eax byte ptr [eax-1] +
mov [esp+2Ch+var_24] offset aTheMeaningOfCI +
mov [esp+2Ch+var_28] 6 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41FFF0  +
jmp loc_412D74  +
mov eax [esp+2Ch+arg_C] +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
test eax eax +
setnz al  +
sub esi 2 +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
cmp edi 9Fh +
jbe loc_412F06  +
test edi edi +
js loc_412EC4  +
lea edx [edi-0D800h] +
cmp edx 7FFh +
ja loc_412F22  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset a_SIsNotAValidU +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_20] ebp +
mov eax [esp+2Ch+arg_0] +
mov edi 1 +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
mov eax [esp+2Ch+arg_14] +
mov [eax] edi +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+248h] 0 +
jnz loc_412EB2  +
cmp edi 24h +
jz loc_412EB2  +
cmp edi 40h +
jz loc_412EB2  +
cmp edi 60h +
jnz loc_412EC4  +
cmp edi 24h +
jz loc_412F80  +
test al al +
jz loc_412EF3  +
cmp edi 10FFFFh +
jbe loc_412FC0  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalChara +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
jmp loc_412EF3  +
mov [esp+2Ch+var_24] offset aUniversalCha_0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
jmp loc_412D74  +
test al al +
jz loc_412EF3  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+262h] 0 +
jz loc_412FC0  +
cmp byte ptr [eax+264h] 0 +
jz loc_412FA8  +
cmp byte ptr [eax+0Ah] 0 +
jz loc_41318D  +
mov eax [esp+2Ch+arg_10] +
mov edi 24h +
mov dword ptr [eax] 24h +
mov byte ptr [eax+4] 0 +
jmp loc_412EF3  +
xor edx edx +
mov ecx 73Ch +
lea eax [edx+ecx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
cmp ds:dword_470804[eax*8] edi +
jb loc_4130C0  +
cmp edx eax +
mov ecx eax +
jnz loc_412FC7  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4130D5  +
mov eax [esp+2Ch+arg_0] +
mov ecx 8 +
cmp byte ptr [eax+274h] 0 +
jnz loc_413023  +
cmp byte ptr [eax+268h] 0 +
mov cl 1 +
jnz loc_413023  +
cmp byte ptr [eax+248h] 0 +
jz loc_4130D5  +
mov cl 4 +
movzx eax ds:word_470800[edx*8] +
test ax cx +
jz loc_412F37  +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+274h] 0 +
jnz loc_413144  +
mov ebx [esp+2Ch+arg_0] +
mov ecx eax +
xor esi esi +
and ecx 2 +
cmp byte ptr [ebx+268h] 0 +
cmovnz esi ecx +
movzx ebx ds:byte_470802[edx*8] +
test bl bl +
jz loc_4130DF  +
mov ecx [esp+2Ch+arg_10] +
cmp bl [ecx+4] +
jnb loc_4130DF  +
mov dword ptr [ecx+8] 3 +
mov eax [esp+2Ch+arg_10] +
test si si +
mov [eax+4] bl +
jz loc_412EF3  +
cmp [esp+2Ch+arg_C] 1 +
jnz loc_412EF3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalCha_1 +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
jmp loc_412EF3  +
lea edx [eax+1] +
cmp ecx edx +
jnz loc_412FC7  +
nop   +
lea esi [esi+0] +
jmp loc_412FE6  +
mov ecx 0Dh +
jmp loc_413023  +
test ah 1 +
jz loc_41316A  +
mov eax [esp+2Ch+arg_10] +
mov ecx [eax] +
lea eax [edi-1161h] +
cmp eax 14h +
mov [esp+2Ch+var_10] eax +
ja loc_4131B1  +
sub ecx 1100h +
cmp ecx 12h +
lea eax [edi-11A8h] +
ja loc_413131  +
cmp eax 1Ah +
jbe loc_4131E5  +
cmp [esp+2Ch+var_10] 14h +
jbe loc_4131E5  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
test bl bl +
jnz loc_413076  +
mov eax [esp+2Ch+arg_10] +
mov [eax] edi +
jmp loc_413076  +
mov esi eax +
and esi 10h +
jmp loc_41305A  +
mov [esp+2Ch+var_24] offset a_cpp_valid_ucn +
mov [esp+2Ch+var_28] 434h +
mov [esp+2Ch+var_2C] offset a____GccLibcppC +
call sub_406BF0  +
test al 80h +
jnz loc_413131  +
test al 40h +
jz loc_4131FE  +
mov ecx [esp+2Ch+arg_10] +
mov eax 1 +
mov edx [ecx+8] +
test edx edx +
cmovg eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_413131  +
mov byte ptr [eax+264h] 0 +
mov [esp+2Ch+var_24] offset aInIdentifierOr +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
jmp loc_412FA8  +
lea eax [edi-11A8h] +
cmp eax 1Ah +
ja loc_41321F  +
sub ecx 0AC00h +
cmp ecx 2BA3h +
ja loc_413131  +
mov eax ecx +
mov edx 24924925h +
shr eax 2 +
mul  edx +
imul edx edx +
cmp ecx edx +
jnz loc_413131  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_413131  +
test al 20h +
jz loc_4132DD  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_413131  +
cmp edi 338h +
jz loc_413131  +
ja loc_41378F  +
cmp edi 311h +
jz loc_41377C  +
lea esi [esi+0] +
ja loc_41369C  +
cmp edi 307h +
jz loc_413655  +
ja loc_414625  +
cmp edi 302h +
jz loc_4145DC  +
jbe loc_4150C7  +
cmp edi 304h +
jz loc_4135F3  +
jb loc_4134B1  +
cmp edi 306h +
jnz loc_41340B  +
cmp ecx 3A5h +
jz loc_413112  +
ja loc_413375  +
cmp ecx 65h +
jz loc_413112  +
ja loc_41333F  +
cmp ecx 49h +
lea esi [esi+0] +
jz loc_413112  +
ja loc_41331F  +
cmp ecx 45h +
nop   +
lea esi [esi+0] +
jz loc_413112  +
cmp ecx 47h +
jz loc_413112  +
cmp ecx 41h +
jnz loc_413131  +
jmp loc_413112  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
jmp loc_413131  +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
sub esi 2 +
test cl cl +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
jz loc_412EAA  +
mov eax ebp +
sub eax esi +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_24] offset aIncompleteUniv +
jmp loc_412EDA  +
cmp ecx 55h +
jz loc_413112  +
cmp ecx 61h +
jz loc_413112  +
cmp ecx 4Fh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 75h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
ja loc_4133BE  +
cmp ecx 69h +
jz loc_413112  +
cmp ecx 6Fh +
nop   +
jz loc_413112  +
cmp ecx 67h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 430h +
jz loc_413112  +
ja loc_413430  +
cmp ecx 410h +
jz loc_413112  +
ja loc_4133E5  +
cmp ecx 3B9h +
jz loc_413112  +
cmp ecx 3C5h +
jz loc_413112  +
cmp ecx 3B1h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jz loc_413112  +
ja loc_413466  +
sub ecx 228h +
cmp ecx 1 +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 418h +
jz loc_413112  +
ja loc_4134FB  +
sub ecx 415h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] offset aCharacterXMigh +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
jmp loc_413131  +
cmp ecx 443h +
jz loc_413112  +
lea esi [esi+0] +
jbe loc_413488  +
cmp ecx 1FB3h +
jz loc_413112  +
nop   +
ja loc_413477  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 399h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FBCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 435h +
jb loc_413131  +
cmp ecx 436h +
jbe loc_413112  +
cmp ecx 438h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 76h +
ja loc_413545  +
cmp ecx 75h +
lea esi [esi+0] +
jnb loc_413112  +
cmp ecx 56h +
ja loc_41351D  +
cmp ecx 55h +
nop   +
jnb loc_413112  +
cmp ecx 49h +
jz loc_413112  +
nop   +
ja loc_41350C  +
cmp ecx 41h +
jz loc_413112  +
cmp ecx 45h +
nop   +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 423h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 65h +
jz loc_413112  +
ja loc_41358B  +
cmp ecx 59h +
nop   +
lea esi [esi+0] +
jz loc_413112  +
cmp ecx 61h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 0F4h +
jz loc_413112  +
ja loc_4135C7  +
cmp ecx 0CAh +
jz loc_413112  +
nop   +
jbe loc_4135AD  +
cmp ecx 0E2h +
jz loc_413112  +
cmp ecx 0EAh +
jz loc_413112  +
cmp ecx 0D4h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 69h +
nop   +
jz loc_413112  +
jb loc_413131  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 79h +
jz loc_413112  +
cmp ecx 0C2h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1A1h +
ja loc_41514B  +
cmp ecx 1A0h +
jnb loc_413112  +
sub ecx 102h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0F6h +
ja loc_414D50  +
cmp ecx 0F5h +
jnb loc_413112  +
cmp ecx 69h +
jz loc_413112  +
ja loc_414D15  +
cmp ecx 4Fh +
lea esi [esi+0] +
jz loc_413112  +
jbe loc_414CEC  +
cmp ecx 61h +
nop   +
jz loc_413112  +
ja loc_414CD5  +
cmp ecx 55h +
nop   +
jz loc_413112  +
cmp ecx 59h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 70h +
ja loc_41380F  +
cmp ecx 6Dh +
jnb loc_413112  +
cmp ecx 54h +
ja loc_413759  +
cmp ecx 52h +
jnb loc_413112  +
cmp ecx 41h +
jb loc_413131  +
cmp ecx 49h +
jbe loc_413112  +
sub ecx 4Dh +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 326h +
jz loc_41504C  +
ja loc_414FE9  +
cmp edi 31Bh +
jz loc_415F85  +
jbe loc_414C65  +
cmp edi 324h +
jz loc_414555  +
lea esi [esi+0] +
ja loc_414501  +
cmp edi 323h +
jnz loc_41340B  +
cmp ecx 17Eh +
ja loc_414108  +
cmp ecx 174h +
jnb loc_413112  +
cmp ecx 0F6h +
ja loc_4140AC  +
cmp ecx 0F1h +
jnb loc_413112  +
cmp ecx 69h +
ja loc_413898  +
cmp ecx 68h +
jnb loc_413112  +
cmp ecx 4Fh +
ja loc_413879  +
cmp ecx 4Bh +
jnb loc_413112  +
cmp ecx 45h +
ja loc_413846  +
cmp ecx 44h +
jnb loc_413112  +
sub ecx 41h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 57h +
jb loc_413131  +
cmp ecx 5Ah +
jbe loc_413112  +
sub ecx 61h +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 41h +
cmp ecx 34h +
ja loc_413131  +
jmp ds:off_46FDD8[ecx*4]  +
cmp edi 0C56h +
jz loc_413DE4  +
nop   +
lea esi [esi+0] +
ja loc_413D91  +
cmp edi 9BEh +
jz loc_414006  +
ja loc_413995  +
cmp edi 653h +
jz loc_413A45  +
jbe loc_4139DC  +
cmp edi 655h +
jz loc_413AD7  +
jb loc_41395A  +
cmp edi 93Ch +
jnz loc_41340B  +
sub ecx 915h +
cmp ecx 1Eh +
ja loc_413131  +
mov edx 1 +
shl edx cl +
and edx 4C483087h +
jz loc_413131  +
jmp loc_413112  +
cmp ecx 15Bh +
ja loc_413857  +
cmp ecx 15Ah +
jnb loc_413112  +
cmp ecx 72h +
jb loc_413131  +
cmp ecx 74h +
jbe loc_413112  +
sub ecx 77h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 48h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 17Fh +
jz loc_413112  +
ja loc_4138CF  +
sub ecx 160h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 5Ah +
ja loc_4138E5  +
cmp ecx 59h +
jnb loc_413112  +
sub ecx 52h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0CFh +
ja loc_41392E  +
cmp ecx 0C8h +
jnb loc_413112  +
cmp ecx 77h +
ja loc_413908  +
cmp ecx 72h +
jnb loc_413112  +
sub ecx 6Bh +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1E62h +
cmp ecx 1 +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 61h +
jb loc_413131  +
cmp ecx 62h +
jbe loc_413112  +
sub ecx 64h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 79h +
jb loc_413131  +
cmp ecx 7Ah +
jbe loc_413112  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0DDh +
ja loc_413AFB  +
cmp ecx 0D9h +
jnb loc_413112  +
sub ecx 0D1h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 64Ah +
jz loc_413112  +
jbe loc_414017  +
cmp ecx 6D2h +
jz loc_413112  +
cmp ecx 6D5h +
jz loc_413112  +
cmp ecx 6C1h +
jnz loc_413131  +
jmp loc_413112  +
cmp edi 0B56h +
jz loc_41408A  +
jbe loc_414065  +
cmp edi 0BBEh +
jz loc_414051  +
cmp edi 0BD7h +
jz loc_414034  +
cmp edi 0B57h +
jnz loc_41340B  +
cmp ecx 0B47h +
jz loc_413112  +
jmp loc_413131  +
cmp edi 342h +
jz loc_413B27  +
cmp edi 345h +
jnz loc_41340B  +
cmp ecx 1F0Fh +
ja loc_413A96  +
cmp ecx 1F00h +
jnb loc_413112  +
cmp ecx 3AEh +
jz loc_413112  +
ja loc_413A67  +
cmp ecx 397h +
jz loc_413112  +
jbe loc_413A56  +
cmp ecx 3A9h +
jz loc_413112  +
cmp ecx 3ACh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 627h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 391h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B7h +
jz loc_413112  +
jbe loc_413B8F  +
cmp ecx 3C9h +
jz loc_413112  +
cmp ecx 3CEh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1F74h +
jz loc_413112  +
jbe loc_413D25  +
cmp ecx 1FB6h +
jz loc_413112  +
jbe loc_413D13  +
cmp ecx 1FC6h +
jz loc_413112  +
cmp ecx 1FF6h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 622h +
cmp ecx 5 +
ja loc_413131  +
mov edx 1 +
shl edx cl +
and edx 23h +
jz loc_413131  +
jmp loc_413112  +
cmp ecx 0E0h +
jb loc_413131  +
cmp ecx 0E5h +
jbe loc_413112  +
sub ecx 0E8h +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F59h +
jz loc_413112  +
ja loc_413C26  +
cmp ecx 1F09h +
ja loc_413BE2  +
cmp ecx 1F08h +
jnb loc_413112  +
cmp ecx 3C5h +
jz loc_413112  +
ja loc_413BB6  +
cmp ecx 3B1h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
jbe loc_413BA5  +
cmp ecx 3B7h +
jz loc_413112  +
cmp ecx 3B9h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B1h +
jnz loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 0A8h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3C9h +
jb loc_413131  +
cmp ecx 3CBh +
jbe loc_413112  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F31h +
ja loc_413C7E  +
cmp ecx 1F30h +
jnb loc_413112  +
cmp ecx 1F20h +
jb loc_413131  +
cmp ecx 1F21h +
jbe loc_413112  +
sub ecx 1F28h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F99h +
ja loc_413CD6  +
cmp ecx 1F98h +
jnb loc_413112  +
cmp ecx 1F81h +
ja loc_413CAA  +
cmp ecx 1F80h +
jnb loc_413112  +
cmp ecx 1F60h +
jb loc_413131  +
cmp ecx 1F61h +
jbe loc_413112  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F38h +
jb loc_413131  +
cmp ecx 1F39h +
jbe loc_413112  +
sub ecx 1F50h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F88h +
jb loc_413131  +
cmp ecx 1F89h +
jbe loc_413112  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jz loc_413112  +
jbe loc_413D65  +
cmp ecx 1FC3h +
jz loc_413112  +
jbe loc_413D51  +
cmp ecx 1FF3h +
jz loc_413112  +
cmp ecx 1FFEh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1F7Ch +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 1F20h +
jb loc_413131  +
cmp ecx 1F2Fh +
jbe loc_413112  +
sub ecx 1F60h +
cmp ecx 10h +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FBFh +
jnz loc_413131  +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 1FA0h +
jb loc_413131  +
cmp ecx 1FA1h +
jbe loc_413112  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 0DCFh +
jz loc_413F67  +
lea esi [esi+0] +
jbe loc_413F29  +
cmp edi 3099h +
jz loc_413E79  +
ja loc_413E1C  +
cmp edi 102Eh +
jz loc_413E0B  +
cmp edi 1B35h +
jz loc_413DF5  +
cmp edi 0DDFh +
jnz loc_41340B  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0C46h +
jz loc_413112  +
jmp loc_413131  +
sub ecx 1B05h +
cmp ecx 3Dh +
ja loc_413131  +
jmp ds:off_46FEAC[ecx*4]  +
cmp ecx 1025h +
jz loc_413112  +
jmp loc_413131  +
cmp edi 110BAh +
jz loc_413EE5  +
cmp edi 11127h +
jz loc_413ED0  +
cmp edi 309Ah +
jnz loc_41340B  +
cmp ecx 307Bh +
jz loc_413112  +
ja loc_413EA5  +
cmp ecx 3072h +
jz loc_413112  +
jbe loc_413E92  +
cmp ecx 3075h +
jz loc_413112  +
cmp ecx 3078h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 3046h +
cmp ecx 0B7h +
ja loc_413131  +
jmp ds:off_46FFA4[ecx*4]  +
cmp ecx 306Fh +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 30D5h +
jz loc_413112  +
ja loc_413F0C  +
cmp ecx 30CFh +
jz loc_413112  +
cmp ecx 30D2h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 11131h +
cmp ecx 1 +
ja loc_413131  +
nop   +
jmp loc_413112  +
sub ecx 11099h +
cmp ecx 0Ch +
ja loc_413131  +
mov edx 1 +
shl edx cl +
and edx 1005h +
jz loc_413131  +
jmp loc_413112  +
cmp ecx 30D8h +
jz loc_413112  +
cmp ecx 30DBh +
jnz loc_413131  +
jmp loc_413112  +
cmp edi 0CD6h +
jz loc_413FE4  +
jbe loc_413FA9  +
cmp edi 0D57h +
jz loc_413F98  +
cmp edi 0DCAh +
jz loc_413F7B  +
cmp edi 0D3Eh +
jnz loc_41340B  +
sub ecx 0D46h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0DD9h +
jz loc_413112  +
cmp ecx 0DDCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0D46h +
jz loc_413112  +
jmp loc_413131  +
cmp edi 0CC2h +
jz loc_413FF5  +
cmp edi 0CD5h +
jnz loc_41340B  +
sub ecx 0CBFh +
cmp ecx 0Bh +
ja loc_413131  +
mov edx 1 +
shl edx cl +
and edx 881h +
jz loc_413131  +
jmp loc_413112  +
cmp ecx 0CC6h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 0CC6h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 9C7h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 627h +
jz loc_413112  +
cmp ecx 648h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0B92h +
jz loc_413112  +
cmp ecx 0BC6h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 0BC6h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 9D7h +
jz loc_41409B  +
cmp edi 0B3Eh +
jnz loc_41340B  +
cmp ecx 0B47h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 0B47h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 9C7h +
jz loc_413112  +
jmp loc_413131  +
cmp ecx 13Eh +
ja loc_41445D  +
cmp ecx 13Dh +
jnb loc_413112  +
cmp ecx 11Bh +
ja loc_414435  +
cmp ecx 11Ah +
jnb loc_413112  +
cmp ecx 103h +
ja loc_414174  +
cmp ecx 0FFh +
jnb loc_413112  +
sub ecx 0F9h +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E45h +
ja loc_414225  +
cmp ecx 1E44h +
jnb loc_413112  +
cmp ecx 227h +
ja loc_4141E1  +
cmp ecx 226h +
jnb loc_413112  +
cmp ecx 1E1h +
ja loc_4141B5  +
cmp ecx 1DEh +
jnb loc_413112  +
cmp ecx 1B0h +
ja loc_4141A0  +
cmp ecx 1AFh +
jnb loc_413112  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 10Eh +
jb loc_413131  +
cmp ecx 10Fh +
jbe loc_413112  +
sub ecx 112h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 1FBh +
ja loc_414279  +
cmp ecx 1F8h +
jnb loc_413112  +
sub ecx 1E8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E17h +
ja loc_4143B5  +
cmp ecx 1E14h +
jnb loc_413112  +
cmp ecx 1E03h +
ja loc_4143A1  +
cmp ecx 1E02h +
jnb loc_413112  +
sub ecx 22Ah +
cmp ecx 9 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E99h +
ja loc_4142E1  +
cmp ecx 1E97h +
jnb loc_413112  +
cmp ecx 1E67h +
ja loc_4142B9  +
cmp ecx 1E64h +
jnb loc_413112  +
cmp ecx 1E59h +
ja loc_4142A5  +
cmp ecx 1E58h +
jnb loc_413112  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 200h +
jb loc_413131  +
cmp ecx 217h +
jbe loc_413112  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E7Dh +
ja loc_414321  +
cmp ecx 1E78h +
jnb loc_413112  +
sub ecx 1E6Ah +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1ED7h +
ja loc_414379  +
cmp ecx 1ECEh +
jnb loc_413112  +
cmp ecx 1EB5h +
ja loc_41434D  +
cmp ecx 1EAEh +
jnb loc_413112  +
sub ecx 1EA2h +
cmp ecx 9 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E80h +
jb loc_413131  +
cmp ecx 1E87h +
jbe loc_413112  +
sub ecx 1E8Eh +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EBAh +
jb loc_413131  +
cmp ecx 1EC5h +
jbe loc_413112  +
sub ecx 1EC8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EEFh +
ja loc_4143DD  +
cmp ecx 1EE6h +
jnb loc_413112  +
sub ecx 1EDAh +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E27h +
ja loc_414409  +
cmp ecx 1E26h +
jnb loc_413112  +
sub ecx 1E22h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EF2h +
jb loc_413131  +
cmp ecx 1EF3h +
jbe loc_413112  +
sub ecx 1EF6h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E2Eh +
jb loc_413131  +
cmp ecx 1E31h +
jbe loc_413112  +
sub ecx 1E3Eh +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 12Dh +
ja loc_414499  +
cmp ecx 128h +
jnb loc_413112  +
sub ecx 124h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 155h +
ja loc_4144D5  +
cmp ecx 154h +
jnb loc_413112  +
cmp ecx 148h +
ja loc_4144BF  +
cmp ecx 147h +
jnb loc_413112  +
sub ecx 143h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 130h +
jz loc_413112  +
jb loc_413131  +
sub ecx 139h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 161h +
ja loc_41459C  +
cmp ecx 160h +
jnb loc_413112  +
sub ecx 158h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E1h +
ja loc_414F15  +
cmp ecx 1DEh +
jnb loc_413112  +
cmp ecx 0E5h +
ja loc_414EE9  +
cmp ecx 0E0h +
jnb loc_413112  +
cmp ecx 61h +
jz loc_413112  +
ja loc_4145C8  +
cmp ecx 41h +
jnz loc_413131  +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 171h +
ja loc_414F69  +
cmp ecx 168h +
jnb loc_413112  +
cmp ecx 0DCh +
ja loc_414F55  +
cmp ecx 0D9h +
jnb loc_413112  +
cmp ecx 55h +
jz loc_413112  +
cmp ecx 75h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 164h +
jb loc_413131  +
cmp ecx 165h +
jbe loc_413112  +
sub ecx 168h +
cmp ecx 9 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 65h +
jz loc_413112  +
ja loc_415A85  +
cmp ecx 53h +
nop   +
jz loc_413112  +
ja loc_414C3A  +
cmp ecx 45h +
nop   +
jz loc_413112  +
ja loc_414695  +
cmp ecx 41h +
nop   +
jz loc_413112  +
cmp ecx 43h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp edi 30Ah +
jz loc_4148AC  +
jbe loc_414732  +
cmp edi 30Ch +
jz loc_414795  +
jb loc_4146FD  +
cmp edi 30Fh +
jnz loc_41340B  +
cmp ecx 61h +
jz loc_413112  +
nop   +
ja loc_4146CC  +
cmp ecx 49h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
jbe loc_4146B5  +
cmp ecx 52h +
jz loc_413112  +
cmp ecx 55h +
nop   +
jz loc_413112  +
cmp ecx 4Fh +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 47h +
jb loc_413131  +
cmp ecx 4Ah +
jbe loc_413112  +
cmp ecx 4Fh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 41h +
jz loc_413112  +
cmp ecx 45h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 72h +
nop   +
jz loc_413112  +
ja loc_4147D5  +
cmp ecx 69h +
nop   +
jz loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
cmp ecx 65h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
jbe loc_4148BF  +
cmp ecx 423h +
jz loc_413112  +
cmp ecx 443h +
jz loc_413112  +
cmp ecx 75h +
jnz loc_413131  +
jmp loc_413112  +
cmp edi 308h +
jz loc_414973  +
cmp edi 309h +
jnz loc_41340B  +
cmp ecx 79h +
jz loc_413112  +
ja loc_41492D  +
cmp ecx 59h +
lea esi [esi+0] +
jz loc_413112  +
ja loc_414905  +
cmp ecx 49h +
nop   +
jz loc_413112  +
ja loc_4148EB  +
cmp ecx 41h +
nop   +
jz loc_413112  +
cmp ecx 45h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 61h +
jz loc_413112  +
nop   +
jbe loc_41483F  +
cmp ecx 75h +
jbe loc_414817  +
cmp ecx 0FCh +
jz loc_413112  +
ja loc_4147FA  +
cmp ecx 7Ah +
jz loc_413112  +
cmp ecx 0DCh +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 75h +
jz loc_413112  +
nop   +
jb loc_413131  +
sub ecx 474h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1B7h +
jz loc_413112  +
cmp ecx 292h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 72h +
jnb loc_413112  +
cmp ecx 6Ch +
ja loc_41486B  +
cmp ecx 67h +
jnb loc_413112  +
sub ecx 63h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 4Ch +
ja loc_41488D  +
cmp ecx 4Bh +
jnb loc_413112  +
cmp ecx 45h +
ja loc_41487C  +
cmp ecx 43h +
jnb loc_413112  +
cmp ecx 41h +
nop   +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 47h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 55h +
ja loc_4148DB  +
cmp ecx 52h +
jnb loc_413112  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 41h +
cmp ecx 38h +
ja loc_413131  +
jmp ds:off_470284[ecx*4]  +
cmp ecx 4Fh +
jz loc_413112  +
cmp ecx 55h +
nop   +
lea esi [esi+0] +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 5Ah +
nop   +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 4Fh +
nop   +
jz loc_413112  +
cmp ecx 55h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 69h +
jz loc_413112  +
nop   +
ja loc_4149C5  +
cmp ecx 61h +
jz loc_413112  +
cmp ecx 65h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0F4h +
jz loc_413112  +
ja loc_414A6D  +
cmp ecx 0D4h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
ja loc_414A50  +
cmp ecx 0C2h +
jz loc_413112  +
cmp ecx 0CAh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B9h +
jz loc_413112  +
nop   +
ja loc_414A99  +
cmp ecx 69h +
ja loc_414A15  +
cmp ecx 68h +
jnb loc_413112  +
cmp ecx 4Fh +
jz loc_413112  +
jbe loc_4149F5  +
cmp ecx 59h +
ja loc_4149DC  +
cmp ecx 57h +
nop   +
lea esi [esi+0] +
jnb loc_413112  +
cmp ecx 55h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
cmp ecx 75h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 61h +
nop   +
jz loc_413112  +
cmp ecx 65h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 45h +
jz loc_413112  +
nop   +
ja loc_414B0B  +
cmp ecx 41h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 0D5h +
jz loc_413112  +
jbe loc_414B30  +
cmp ecx 16Bh +
ja loc_414AEE  +
cmp ecx 16Ah +
jnb loc_413112  +
cmp ecx 0F5h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0E2h +
jz loc_413112  +
cmp ecx 0EAh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1A1h +
ja loc_414B1C  +
cmp ecx 1A0h +
jnb loc_413112  +
sub ecx 102h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 430h +
jz loc_413112  +
ja loc_414B99  +
cmp ecx 418h +
ja loc_414B6E  +
cmp ecx 415h +
jnb loc_413112  +
cmp ecx 3D2h +
jz loc_413112  +
jbe loc_414B4C  +
cmp ecx 406h +
jz loc_413112  +
cmp ecx 410h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 399h +
jz loc_413112  +
cmp ecx 3A5h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 48h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 75h +
ja loc_414B5D  +
cmp ecx 74h +
jnb loc_413112  +
cmp ecx 6Fh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3C5h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 77h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 427h +
jz loc_413112  +
ja loc_414BD2  +
cmp ecx 41Eh +
jz loc_413112  +
cmp ecx 423h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 44Bh +
jz loc_413112  +
ja loc_414C05  +
cmp ecx 43Eh +
jz loc_413112  +
jbe loc_414BEF  +
cmp ecx 443h +
jz loc_413112  +
cmp ecx 447h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 42Bh +
jz loc_413112  +
cmp ecx 42Dh +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 435h +
cmp ecx 3 +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 4D9h +
ja loc_415AC5  +
cmp ecx 4D8h +
jnb loc_413112  +
cmp ecx 44Dh +
jz loc_413112  +
cmp ecx 456h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 5Ah +
ja loc_416BD1  +
cmp ecx 59h +
jnb loc_413112  +
cmp ecx 55h +
nop   +
jz loc_413112  +
cmp ecx 57h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp edi 313h +
jz loc_415D83  +
cmp edi 314h +
jnz loc_41340B  +
cmp ecx 3B7h +
jz loc_413112  +
ja loc_415D46  +
cmp ecx 39Fh +
jz loc_413112  +
nop   +
lea esi [esi+0] +
ja loc_415DF4  +
cmp ecx 395h +
jz loc_413112  +
jbe loc_415B96  +
cmp ecx 397h +
jz loc_413112  +
cmp ecx 399h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 65h +
jz loc_413112  +
cmp ecx 67h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 45h +
nop   +
jz loc_413112  +
jbe loc_414D9F  +
cmp ecx 47h +
nop   +
jz loc_413112  +
cmp ecx 49h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 0C6h +
jz loc_413112  +
ja loc_414E95  +
cmp ecx 75h +
jz loc_413112  +
jbe loc_414E86  +
cmp ecx 79h +
jz loc_413112  +
cmp ecx 0C4h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B9h +
jz loc_413112  +
lea esi [esi+0] +
ja loc_414DF4  +
cmp ecx 22Fh +
ja loc_414DC9  +
cmp ecx 22Eh +
jnb loc_413112  +
cmp ecx 1EBh +
ja loc_414DB5  +
cmp ecx 1EAh +
jnb loc_413112  +
cmp ecx 0FCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 41h +
jnz loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
sub ecx 226h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 399h +
jz loc_413112  +
jbe loc_414E33  +
cmp ecx 3A5h +
jz loc_413112  +
cmp ecx 3B1h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1E37h +
ja loc_414E62  +
cmp ecx 1E36h +
jnb loc_413112  +
cmp ecx 423h +
jz loc_413112  +
ja loc_414E45  +
cmp ecx 3C5h +
jz loc_413112  +
cmp ecx 418h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 438h +
jz loc_413112  +
cmp ecx 443h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jz loc_413112  +
nop   +
ja loc_414EC0  +
sub ecx 1E5Ah +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 6Fh +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 0DCh +
jz loc_413112  +
jbe loc_414ED5  +
cmp ecx 0E4h +
jz loc_413112  +
cmp ecx 0E6h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FBCh +
jnz loc_413131  +
lea esi [esi+0] +
jmp loc_413112  +
sub ecx 0D5h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 100h +
jb loc_413131  +
cmp ecx 103h +
jbe loc_413112  +
sub ecx 1CDh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 227h +
ja loc_414F91  +
cmp ecx 226h +
jnb loc_413112  +
cmp ecx 1FAh +
jb loc_413131  +
cmp ecx 1FBh +
jbe loc_413112  +
sub ecx 200h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 217h +
ja loc_414FBD  +
cmp ecx 214h +
jnb loc_413112  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EA2h +
jb loc_413131  +
cmp ecx 1EABh +
jbe loc_413112  +
sub ecx 1EAEh +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E78h +
jb loc_413131  +
cmp ecx 1E7Bh +
jbe loc_413112  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 32Dh +
jz loc_4168FA  +
jbe loc_415B16  +
cmp edi 330h +
jz loc_416967  +
cmp edi 331h +
jz loc_415CE4  +
cmp edi 32Eh +
jnz loc_41340B  +
cmp ecx 21Fh +
ja loc_41509B  +
cmp ecx 21Eh +
jnb loc_413112  +
cmp ecx 68h +
jz loc_413112  +
ja loc_415087  +
cmp ecx 48h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 165h +
ja loc_416A5F  +
cmp ecx 164h +
jnb loc_413112  +
cmp ecx 74h +
ja loc_4164DB  +
cmp ecx 73h +
jnb loc_413112  +
sub ecx 53h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 124h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E22h +
jb loc_413131  +
cmp ecx 1E23h +
jbe loc_413112  +
sub ecx 1E26h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 300h +
jz loc_415458  +
cmp edi 301h +
jnz loc_41340B  +
cmp ecx 39Fh +
jz loc_413112  +
ja loc_4153E1  +
cmp ecx 0CAh +
jz loc_413112  +
lea esi [esi+0] +
ja loc_4151EF  +
cmp ecx 63h +
jz loc_413112  +
nop   +
ja loc_4151AD  +
cmp ecx 50h +
ja loc_41517B  +
cmp ecx 4Bh +
nop   +
jnb loc_413112  +
cmp ecx 45h +
jz loc_413112  +
nop   +
ja loc_41515F  +
cmp ecx 41h +
jz loc_413112  +
cmp ecx 43h +
nop   +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 47h +
jz loc_413112  +
cmp ecx 49h +
nop   +
lea esi [esi+0] +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 57h +
nop   +
jz loc_413112  +
ja loc_41524C  +
cmp ecx 52h +
nop   +
jb loc_413131  +
cmp ecx 53h +
jbe loc_413112  +
cmp ecx 55h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 75h +
jz loc_413112  +
ja loc_415375  +
cmp ecx 70h +
nop   +
ja loc_41535F  +
cmp ecx 6Bh +
jnb loc_413112  +
cmp ecx 67h +
jz loc_413112  +
cmp ecx 69h +
jz loc_413112  +
cmp ecx 65h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 103h +
ja loc_4152BB  +
cmp ecx 102h +
jnb loc_413112  +
cmp ecx 0E7h +
ja loc_41528A  +
cmp ecx 0E5h +
jnb loc_413112  +
cmp ecx 0D5h +
jbe loc_41526D  +
cmp ecx 0DCh +
jz loc_413112  +
cmp ecx 0E2h +
jz loc_413112  +
cmp ecx 0D8h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 59h +
nop   +
jb loc_413131  +
cmp ecx 5Ah +
jbe loc_413112  +
cmp ecx 61h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0D4h +
jnb loc_413112  +
cmp ecx 0CFh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0F5h +
ja loc_4152F7  +
cmp ecx 0F4h +
jnb loc_413112  +
cmp ecx 0EAh +
jz loc_413112  +
cmp ecx 0EFh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1A1h +
ja loc_415328  +
cmp ecx 1A0h +
jnb loc_413112  +
cmp ecx 14Dh +
ja loc_415314  +
cmp ecx 14Ch +
jnb loc_413112  +
sub ecx 112h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0F8h +
jz loc_413112  +
cmp ecx 0FCh +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 168h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jz loc_413112  +
jbe loc_4153A7  +
cmp ecx 397h +
jz loc_413112  +
cmp ecx 399h +
jz loc_413112  +
cmp ecx 395h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 72h +
cmp ecx 1 +
ja loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 0A8h +
jz loc_413112  +
ja loc_4153BB  +
cmp ecx 77h +
jz loc_413112  +
lea esi [esi+0] +
jb loc_413131  +
sub ecx 79h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0C2h +
jz loc_413112  +
jb loc_413131  +
sub ecx 0C5h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F39h +
ja loc_415A15  +
cmp ecx 1F38h +
jnb loc_413112  +
cmp ecx 43Ah +
jz loc_413112  +
ja loc_4159D5  +
cmp ecx 3BFh +
jz loc_413112  +
ja loc_4154E2  +
cmp ecx 3B1h +
jz loc_413112  +
jbe loc_4154C5  +
cmp ecx 3B7h +
jz loc_413112  +
cmp ecx 3B9h +
jz loc_413112  +
cmp ecx 3B5h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 415h +
jz loc_413112  +
ja loc_415667  +
cmp ecx 0FCh +
jz loc_413112  +
ja loc_415613  +
cmp ecx 6Fh +
nop   +
ja loc_41557D  +
cmp ecx 6Eh +
jnb loc_413112  +
cmp ecx 55h +
jz loc_413112  +
jbe loc_41555B  +
cmp ecx 61h +
jz loc_413112  +
ja loc_41551B  +
cmp ecx 57h +
lea esi [esi+0] +
jz loc_413112  +
cmp ecx 59h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 3A5h +
jz loc_413112  +
cmp ecx 3A9h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3D2h +
jz loc_413112  +
nop   +
jbe loc_415535  +
cmp ecx 41Ah +
jz loc_413112  +
cmp ecx 433h +
jz loc_413112  +
cmp ecx 413h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 65h +
nop   +
jz loc_413112  +
cmp ecx 69h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 3C5h +
jz loc_413112  +
jb loc_413131  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 49h +
jz loc_413112  +
ja loc_4155B5  +
cmp ecx 41h +
jz loc_413112  +
cmp ecx 45h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0CAh +
jz loc_413112  +
ja loc_4155E3  +
cmp ecx 79h +
nop   +
jz loc_413112  +
ja loc_4155C6  +
cmp ecx 75h +
nop   +
lea esi [esi+0] +
jz loc_413112  +
cmp ecx 77h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0A8h +
jz loc_413112  +
cmp ecx 0C2h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0E2h +
jz loc_413112  +
nop   +
ja loc_4156DE  +
cmp ecx 0D4h +
jz loc_413112  +
cmp ecx 0DCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 397h +
jz loc_413112  +
nop   +
jbe loc_415743  +
cmp ecx 3B5h +
jz loc_413112  +
ja loc_415718  +
cmp ecx 3A5h +
jz loc_413112  +
ja loc_4156FB  +
cmp ecx 399h +
jz loc_413112  +
cmp ecx 39Fh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1F51h +
ja loc_415875  +
cmp ecx 1F50h +
jnb loc_413112  +
cmp ecx 1F21h +
ja loc_415831  +
cmp ecx 1F20h +
jnb loc_413112  +
cmp ecx 1F09h +
ja loc_415805  +
cmp ecx 1F08h +
jnb loc_413112  +
cmp ecx 438h +
jz loc_413112  +
ja loc_4157EF  +
cmp ecx 418h +
jz loc_413112  +
cmp ecx 435h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0EAh +
jz loc_413112  +
cmp ecx 0F4h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3A9h +
jz loc_413112  +
cmp ecx 3B1h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3BFh +
jz loc_413112  +
ja loc_415773  +
cmp ecx 3B7h +
jz loc_413112  +
cmp ecx 3B9h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 14Dh +
jbe loc_4157B7  +
cmp ecx 1B0h +
ja loc_41579A  +
cmp ecx 1AFh +
jnb loc_413112  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 3C5h +
jz loc_413112  +
nop   +
jb loc_413131  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jz loc_413112  +
cmp ecx 395h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 14Ch +
jnb loc_413112  +
cmp ecx 102h +
jb loc_413131  +
cmp ecx 103h +
jbe loc_413112  +
sub ecx 112h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 1F10h +
jb loc_413131  +
cmp ecx 1F11h +
jbe loc_413112  +
sub ecx 1F18h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F39h +
ja loc_4158CB  +
cmp ecx 1F38h +
jnb loc_413112  +
cmp ecx 1F28h +
jb loc_413131  +
cmp ecx 1F29h +
jbe loc_413112  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F99h +
jbe loc_41593C  +
cmp ecx 1FBCh +
jz loc_413112  +
jbe loc_415914  +
cmp ecx 1FCCh +
jz loc_413112  +
nop   +
jbe loc_4158F7  +
cmp ecx 1FFCh +
jz loc_413112  +
cmp ecx 1FFEh +
jz loc_413112  +
cmp ecx 1FF3h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1F40h +
jb loc_413131  +
cmp ecx 1F41h +
jbe loc_413112  +
sub ecx 1F48h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FBFh +
jz loc_413112  +
cmp ecx 1FC3h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FA9h +
ja loc_415981  +
cmp ecx 1FA8h +
jnb loc_413112  +
sub ecx 1FA0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F98h +
jnb loc_413112  +
cmp ecx 1F81h +
ja loc_4159A9  +
cmp ecx 1F80h +
jnb loc_413112  +
cmp ecx 1F61h +
ja loc_415995  +
cmp ecx 1F60h +
jnb loc_413112  +
cmp ecx 1F59h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jnz loc_413131  +
lea esi [esi+0] +
jmp loc_413112  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F88h +
jb loc_413131  +
cmp ecx 1F89h +
jbe loc_413112  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F19h +
ja loc_415BA7  +
cmp ecx 1F18h +
jnb loc_413112  +
cmp ecx 1F09h +
ja loc_415A71  +
cmp ecx 1F08h +
jnb loc_413112  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F91h +
ja loc_415C34  +
cmp ecx 1F90h +
jnb loc_413112  +
cmp ecx 1F61h +
ja loc_415C0C  +
cmp ecx 1F60h +
jnb loc_413112  +
cmp ecx 1F49h +
ja loc_415BCF  +
cmp ecx 1F48h +
jnb loc_413112  +
sub ecx 1F40h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1F10h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 7Ah +
ja loc_415AEA  +
cmp ecx 79h +
lea esi [esi+0] +
jnb loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
nop   +
jbe loc_415AD9  +
cmp ecx 75h +
jz loc_413112  +
cmp ecx 77h +
nop   +
jz loc_413112  +
cmp ecx 73h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
sub ecx 4E8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 67h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EB9h +
ja loc_416E2A  +
cmp ecx 1EB8h +
jnb loc_413112  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp edi 327h +
jz loc_416068  +
cmp edi 328h +
jnz loc_41340B  +
cmp ecx 130h +
jz loc_413112  +
ja loc_41600C  +
cmp ecx 0DCh +
ja loc_41676F  +
cmp ecx 0D9h +
jnb loc_413112  +
cmp ecx 69h +
jz loc_413112  +
ja loc_415FDD  +
cmp ecx 4Fh +
jz loc_413112  +
ja loc_415E1F  +
cmp ecx 45h +
jz loc_413112  +
cmp ecx 49h +
jz loc_413112  +
cmp ecx 41h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1F29h +
ja loc_415BF8  +
cmp ecx 1F28h +
jnb loc_413112  +
sub ecx 1F20h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F50h +
jb loc_413131  +
cmp ecx 1F51h +
jbe loc_413112  +
cmp ecx 1F59h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F81h +
ja loc_415C7B  +
cmp ecx 1F80h +
jnb loc_413112  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jz loc_413112  +
jbe loc_415CB8  +
cmp ecx 1FCCh +
jz loc_413112  +
nop   +
ja loc_415C8F  +
cmp ecx 1FBFh +
jz loc_413112  +
cmp ecx 1FC3h +
jz loc_413112  +
cmp ecx 1FBCh +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 1F88h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FFCh +
jz loc_413112  +
cmp ecx 1FFEh +
jz loc_413112  +
cmp ecx 1FF3h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FA1h +
ja loc_4169CB  +
cmp ecx 1FA0h +
jnb loc_413112  +
sub ecx 1F98h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 155h +
ja loc_41659A  +
cmp ecx 154h +
jnb loc_413112  +
cmp ecx 72h +
jz loc_413112  +
ja loc_41654D  +
cmp ecx 54h +
nop   +
jz loc_413112  +
ja loc_41651E  +
cmp ecx 4Ch +
nop   +
ja loc_416507  +
cmp ecx 4Bh +
jnb loc_413112  +
cmp ecx 42h +
jz loc_413112  +
cmp ecx 44h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jz loc_413112  +
ja loc_415E62  +
cmp ecx 3C1h +
jz loc_413112  +
ja loc_415DD7  +
cmp ecx 3B9h +
jz loc_413112  +
cmp ecx 3BFh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B9h +
jz loc_413112  +
nop   +
ja loc_415EEF  +
cmp ecx 39Fh +
jz loc_413112  +
ja loc_415EC2  +
cmp ecx 395h +
jz loc_413112  +
jbe loc_415E8F  +
cmp ecx 397h +
jz loc_413112  +
cmp ecx 399h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3C5h +
jz loc_413112  +
cmp ecx 3C9h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3A9h +
jz loc_413112  +
ja loc_415E45  +
cmp ecx 3A1h +
jz loc_413112  +
cmp ecx 3A5h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 61h +
jz loc_413112  +
cmp ecx 65h +
nop   +
lea esi [esi+0] +
jz loc_413112  +
cmp ecx 55h +
jnz loc_413131  +
nop   +
jmp loc_413112  +
cmp ecx 3B1h +
jz loc_413112  +
cmp ecx 3B5h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FCCh +
jz loc_413112  +
nop   +
ja loc_415EA5  +
cmp ecx 1FBCh +
jz loc_413112  +
cmp ecx 1FC3h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 391h +
jnz loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 1FF3h +
jz loc_413112  +
cmp ecx 1FFCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3B1h +
jz loc_413112  +
nop   +
jbe loc_415F2F  +
cmp ecx 3B5h +
jz loc_413112  +
cmp ecx 3B7h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FB3h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
ja loc_415F56  +
cmp ecx 3C1h +
jz loc_413112  +
nop   +
jbe loc_415F45  +
cmp ecx 3C5h +
jz loc_413112  +
cmp ecx 3C9h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 3A9h +
jnz loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 3BFh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1FCCh +
jz loc_413112  +
ja loc_416E6A  +
cmp ecx 1FBCh +
jz loc_413112  +
cmp ecx 1FC3h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 171h +
ja loc_41683A  +
cmp ecx 168h +
jnb loc_413112  +
cmp ecx 0DCh +
ja loc_41680E  +
cmp ecx 0D9h +
jnb loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
nop   +
ja loc_4167AB  +
cmp ecx 4Fh +
jz loc_413112  +
cmp ecx 55h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0C5h +
ja loc_4160CD  +
cmp ecx 0C0h +
jnb loc_413112  +
cmp ecx 6Fh +
jz loc_413112  +
cmp ecx 75h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 217h +
ja loc_416135  +
cmp ecx 214h +
jnb loc_413112  +
cmp ecx 1B0h +
ja loc_41610D  +
cmp ecx 1AFh +
jnb loc_413112  +
cmp ecx 171h +
ja loc_4160F9  +
cmp ecx 168h +
jnb loc_413112  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 148h +
ja loc_41624D  +
cmp ecx 147h +
jnb loc_413112  +
cmp ecx 0CBh +
ja loc_4161FD  +
cmp ecx 0C8h +
jnb loc_413112  +
cmp ecx 54h +
ja loc_4162D5  +
cmp ecx 52h +
jnb loc_413112  +
cmp ecx 48h +
ja loc_4161DD  +
cmp ecx 47h +
jnb loc_413112  +
sub ecx 43h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0C8h +
jb loc_413131  +
cmp ecx 0CFh +
jbe loc_413112  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E1h +
ja loc_416171  +
cmp ecx 1DEh +
jnb loc_413112  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E1Bh +
ja loc_4161B1  +
cmp ecx 1E14h +
jnb loc_413112  +
cmp ecx 231h +
ja loc_41619D  +
cmp ecx 22Ah +
jnb loc_413112  +
sub ecx 226h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FAh +
jb loc_413131  +
cmp ecx 1FBh +
jbe loc_413112  +
sub ecx 200h +
cmp ecx 0Fh +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1E00h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E53h +
ja loc_416309  +
cmp ecx 1E4Ch +
jnb loc_413112  +
sub ecx 1E2Ch +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 4Bh +
jb loc_413131  +
cmp ecx 4Ch +
jbe loc_413112  +
cmp ecx 4Eh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 121h +
ja loc_416357  +
cmp ecx 11Ah +
jnb loc_413112  +
cmp ecx 0F1h +
jz loc_413112  +
ja loc_4162A9  +
cmp ecx 0D1h +
jz loc_413112  +
jb loc_413131  +
sub ecx 0E8h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 21Bh +
ja loc_4163FF  +
cmp ecx 218h +
jnb loc_413112  +
cmp ecx 1E9h +
ja loc_4163D7  +
cmp ecx 1E6h +
jnb loc_413112  +
cmp ecx 15Dh +
ja loc_41637F  +
cmp ecx 158h +
jnb loc_413112  +
sub ecx 154h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 106h +
jb loc_413131  +
cmp ecx 10Fh +
jbe loc_413112  +
sub ecx 112h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 6Ch +
ja loc_416335  +
cmp ecx 6Bh +
lea esi [esi+0] +
jnb loc_413112  +
cmp ecx 63h +
jb loc_413131  +
cmp ecx 65h +
jbe loc_413112  +
sub ecx 67h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E72h +
jb loc_413131  +
cmp ecx 1E7Bh +
jbe loc_413112  +
sub ecx 1EA0h +
cmp ecx 51h +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 6Eh +
jz loc_413112  +
nop   +
jb loc_413131  +
sub ecx 72h +
cmp ecx 2 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 13Ah +
ja loc_4163AB  +
cmp ecx 139h +
jnb loc_413112  +
sub ecx 124h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 160h +
jb loc_413131  +
cmp ecx 161h +
jbe loc_413112  +
sub ecx 164h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 13Dh +
jb loc_413131  +
cmp ecx 13Eh +
jbe loc_413112  +
sub ecx 143h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F9h +
ja loc_41643F  +
cmp ecx 1F8h +
jnb loc_413112  +
sub ecx 1F4h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E2Bh +
ja loc_416497  +
cmp ecx 1E2Ah +
jnb loc_413112  +
cmp ecx 1E0Fh +
ja loc_41646B  +
cmp ecx 1E0Ah +
jnb loc_413112  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 204h +
jb loc_413131  +
cmp ecx 207h +
jbe loc_413112  +
sub ecx 210h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E12h +
jb loc_413131  +
cmp ecx 1E1Bh +
jbe loc_413112  +
sub ecx 1E20h +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E71h +
ja loc_416ACF  +
cmp ecx 1E58h +
jnb loc_413112  +
cmp ecx 1E30h +
jb loc_413131  +
cmp ecx 1E3Dh +
jbe loc_413112  +
sub ecx 1E44h +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 15Ah +
jb loc_413131  +
cmp ecx 15Dh +
jbe loc_413112  +
sub ecx 160h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 4Eh +
jz loc_413112  +
cmp ecx 52h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 68h +
jz loc_413112  +
ja loc_4165EE  +
cmp ecx 62h +
jz loc_413112  +
cmp ecx 64h +
jz loc_413112  +
cmp ecx 5Ah +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 13Ah +
ja loc_41670A  +
cmp ecx 139h +
jnb loc_413112  +
cmp ecx 0F1h +
jz loc_413112  +
ja loc_4166E1  +
cmp ecx 7Ah +
jz loc_413112  +
cmp ecx 0D1h +
jz loc_413112  +
cmp ecx 74h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1E03h +
ja loc_41664A  +
cmp ecx 1E02h +
jnb loc_413112  +
cmp ecx 1E9h +
ja loc_416622  +
cmp ecx 1E8h +
jnb loc_413112  +
cmp ecx 165h +
ja loc_41660E  +
cmp ecx 164h +
jnb loc_413112  +
sub ecx 158h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 6Bh +
jb loc_413131  +
cmp ecx 6Ch +
jbe loc_413112  +
cmp ecx 6Eh +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 179h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 213h +
ja loc_416692  +
cmp ecx 210h +
jnb loc_413112  +
sub ecx 1F8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E45h +
ja loc_4166B9  +
cmp ecx 1E44h +
jnb loc_413112  +
cmp ecx 1E23h +
jz loc_413112  +
jbe loc_4166A5  +
cmp ecx 1E27h +
jz loc_413112  +
jb loc_413131  +
sub ecx 1E30h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 21Fh +
jnz loc_413131  +
nop   +
jmp loc_413112  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E6Bh +
ja loc_416732  +
cmp ecx 1E6Ah +
jnb loc_413112  +
sub ecx 1E58h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 10Eh +
jb loc_413131  +
cmp ecx 10Fh +
jbe loc_413112  +
cmp ecx 125h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 144h +
ja loc_41675B  +
cmp ecx 143h +
jnb loc_413112  +
sub ecx 13Dh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E90h +
jb loc_413131  +
cmp ecx 1E91h +
jbe loc_413112  +
cmp ecx 1E97h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 147h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0FCh +
ja loc_4167E2  +
cmp ecx 0F9h +
jnb loc_413112  +
cmp ecx 0EFh +
ja loc_4167CE  +
cmp ecx 0E8h +
jnb loc_413112  +
sub ecx 0E0h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 75h +
jz loc_413112  +
jb loc_413131  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 117h +
ja loc_41687A  +
cmp ecx 112h +
jnb loc_413112  +
sub ecx 100h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 0FCh +
ja loc_4168A6  +
cmp ecx 0F9h +
jnb loc_413112  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 231h +
ja loc_4168CE  +
cmp ecx 22Ah +
jnb loc_413112  +
cmp ecx 20Fh +
ja loc_4168BA  +
cmp ecx 20Ch +
jnb loc_413112  +
sub ecx 1D1h +
cmp ecx 0Bh +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 11Ah +
jb loc_413131  +
cmp ecx 11Bh +
jbe loc_413112  +
sub ecx 128h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 214h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E7Bh +
ja loc_416E3E  +
cmp ecx 1E72h +
jnb loc_413112  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 13Eh +
ja loc_416C6A  +
cmp ecx 13Dh +
jnb loc_413112  +
cmp ecx 0D1h +
jz loc_413112  +
ja loc_416C26  +
cmp ecx 65h +
ja loc_416BFC  +
cmp ecx 64h +
jnb loc_413112  +
cmp ecx 4Ch +
jz loc_413112  +
nop   +
jbe loc_416BEB  +
cmp ecx 4Eh +
jz loc_413112  +
nop   +
jb loc_413131  +
sub ecx 54h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 171h +
ja loc_416A8B  +
cmp ecx 168h +
jnb loc_413112  +
cmp ecx 0EFh +
ja loc_416A1B  +
cmp ecx 0E8h +
jnb loc_413112  +
cmp ecx 69h +
jz loc_413112  +
ja loc_4169F5  +
cmp ecx 49h +
jz loc_413112  +
nop   +
lea esi [esi+0] +
jbe loc_4169DF  +
cmp ecx 55h +
jz loc_413112  +
cmp ecx 65h +
nop   +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 45h +
jnz loc_413131  +
nop   +
lea esi [esi+0] +
jmp loc_413112  +
cmp ecx 0CFh +
ja loc_416B24  +
cmp ecx 0C8h +
jnb loc_413112  +
cmp ecx 75h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 11Bh +
ja loc_416AFB  +
cmp ecx 11Ah +
jnb loc_413112  +
cmp ecx 0F9h +
jb loc_413131  +
cmp ecx 0FCh +
jbe loc_413112  +
sub ecx 112h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E67h +
ja loc_416B38  +
cmp ecx 1E64h +
jnb loc_413112  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E17h +
ja loc_416B8D  +
cmp ecx 1E14h +
jnb loc_413112  +
cmp ecx 1DCh +
ja loc_416B61  +
cmp ecx 1D3h +
jnb loc_413112  +
sub ecx 1CFh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E96h +
jb loc_413131  +
cmp ecx 1E97h +
jbe loc_413112  +
sub ecx 1EB8h +
cmp ecx 0Fh +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 128h +
jb loc_413131  +
cmp ecx 12Dh +
jbe loc_413112  +
cmp ecx 130h +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E6Ah +
jb loc_413131  +
cmp ecx 1E6Bh +
jbe loc_413112  +
cmp ecx 1E97h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 204h +
jb loc_413131  +
cmp ecx 20Bh +
jbe loc_413112  +
sub ecx 214h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EC5h +
ja loc_416E87  +
cmp ecx 1EBAh +
jnb loc_413112  +
cmp ecx 1E2Eh +
jb loc_413131  +
cmp ecx 1E2Fh +
jbe loc_413112  +
sub ecx 1E78h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 61h +
jz loc_413112  +
cmp ecx 63h +
lea esi [esi+0] +
jnz loc_413131  +
jmp loc_413112  +
sub ecx 44h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 75h +
nop   +
ja loc_416CBE  +
cmp ecx 74h +
jnb loc_413112  +
cmp ecx 6Ch +
jz loc_413112  +
cmp ecx 6Eh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 10Fh +
ja loc_416DDA  +
cmp ecx 10Eh +
jnb loc_413112  +
cmp ecx 0EBh +
ja loc_416DB3  +
cmp ecx 0E8h +
jnb loc_413112  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 217h +
ja loc_416D0E  +
cmp ecx 214h +
jnb loc_413112  +
cmp ecx 171h +
ja loc_416CE6  +
cmp ecx 168h +
jnb loc_413112  +
cmp ecx 148h +
ja loc_416CD2  +
cmp ecx 147h +
jnb loc_413112  +
sub ecx 143h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 0C8h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 164h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1F9h +
ja loc_416D4A  +
cmp ecx 1F8h +
jnb loc_413112  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1E6Bh +
ja loc_416D72  +
cmp ecx 1E6Ah +
jnb loc_413112  +
cmp ecx 1E17h +
ja loc_416D5E  +
cmp ecx 1E14h +
jnb loc_413112  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 204h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1E44h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1EC5h +
ja loc_416E02  +
cmp ecx 1EBAh +
jnb loc_413112  +
cmp ecx 1E78h +
jb loc_413131  +
cmp ecx 1E7Bh +
jbe loc_413112  +
cmp ecx 1E97h +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 0F1h +
jz loc_413112  +
nop   +
jb loc_413131  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 11Bh +
ja loc_416E16  +
cmp ecx 11Ah +
jnb loc_413112  +
sub ecx 112h +
cmp ecx 5 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 139h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
sub ecx 1ECCh +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1ECCh +
jb loc_413131  +
cmp ecx 1ED9h +
jbe loc_413112  +
sub ecx 1EE4h +
cmp ecx 3 +
ja loc_413131  +
jmp loc_413112  +
cmp ecx 1FF3h +
jz loc_413112  +
cmp ecx 1FFCh +
jnz loc_413131  +
jmp loc_413112  +
cmp ecx 1EC8h +
jb loc_413131  +
cmp ecx 1EC9h +
jbe loc_413112  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_413131  +
jmp loc_413112  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 0DCh +
mov edx eax +
mov esi [ebp+arg_8] +
mov [ebp+var_C0] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_98] eax +
lea eax [ebp+var_44] +
call sub_4115F0  +
mov eax [ebp+var_44] +
test esi esi +
mov edx [ebp+arg_C] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_40] +
mov [ebp+var_90] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_B0] eax +
setnz al  +
test edx edx +
setnz cl  +
mov [ebp+var_A6] al +
xor al cl +
mov [ebp+var_A5] cl +
mov [ebp+var_A7] al +
jnz loc_417B02  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_416F56  +
cmp dword ptr [ebx] 100h +
mov eax 100h +
cmovnb eax [ebx] +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_4C] eax +
call sub_4371B0  +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
mov edi [ebp+var_C0] +
test edi edi +
jz loc_417A94  +
mov edi [ebp+var_B0] +
mov eax 1 +
mov edx 0FFFFFFFFh +
mov [ebp+var_B4] esi +
mov [ebp+var_AC] ebx +
mov [ebp+var_B8] 0 +
mov ecx edi +
shl eax cl +
sub eax 1 +
cmp edi 1Fh +
mov edi edx +
cmovbe edi eax +
xor esi esi +
mov [ebp+var_BC] edi +
mov [ebp+var_A4] edi +
mov [ebp+var_7C] esi +
mov eax [ebp+var_7C] +
cmp [ebp+var_A6] 0 +
cmovnz eax [ebp+var_B4] +
mov [ebp+var_7C] eax +
mov eax [ebp+var_AC] +
mov esi [eax+4] +
movzx eax byte ptr [esi] +
cmp al 75h +
jz loc_417901  +
cmp al 55h +
jz loc_416FDC  +
cmp al 4Ch +
mov ecx esi +
jnz loc_416FE3  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 52h +
jz loc_417817  +
cmp al 27h +
jnz loc_4179FE  +
mov eax [ebp+var_7C] +
lea ebx [ecx+1] +
test eax eax +
jz loc_41700E  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41700E  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_AC] +
mov eax [eax] +
lea esi [esi+eax-1] +
mov edi esi +
lea esi [esi+0] +
cmp ebx edi +
jnb loc_4171BA  +
cmp byte ptr [ebx] 5Ch +
mov esi ebx +
jnz loc_41703A  +
jmp loc_4170AD  +
cmp byte ptr [esi] 5Ch +
jz loc_4176C0  +
add esi 1 +
cmp esi edi +
nop   +
jnz loc_417031  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_417075  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4179A3  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_4170A5  +
cmp [ebp+var_8C] offset loc_4116B0 +
jnz loc_417A9B  +
mov eax [ebp+var_7C] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E4] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E8] eax +
call sub_412CC0  +
sub esp 8 +
cmp edi esi +
jbe loc_4171BA  +
mov eax [ebp+arg_0] +
xor ecx ecx +
lea ebx [esi+1] +
test eax eax +
lea eax [ebp+var_50] +
cmovz eax ecx +
mov [ebp+var_88] eax +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_4170E7  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_80] eax +
ja loc_4170DE  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov [ebp+var_84] eax +
movzx ecx byte ptr [esi+1] +
lea eax [ecx-22h] +
cmp al 59h +
mov byte ptr [ebp+var_6D] cl +
ja loc_41710E  +
movzx eax al +
jmp ds:off_47054C[eax*4]  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_417140  +
test byte ptr ds:word_479A60[ecx+ecx] 0ACh +
jz loc_4176F3  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aUnknownEscapeS +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
nop   +
mov eax [ebp+var_88] +
test eax eax +
jz loc_417176  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6D] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] 1 +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4176D0  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_4171AF  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_84] eax +
ja loc_417194  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_84] +
mov [esp+0E8h+var_E4] eax +
call sub_412C70  +
sub esp 8 +
lea ebx [esi+2] +
cmp ebx edi +
jb loc_417028  +
add [ebp+var_B8] 1 +
mov eax [ebp+var_C0] +
add [ebp+var_AC] 8 +
add [ebp+var_B4] 0Ch +
cmp [ebp+var_B8] eax +
jnz loc_416FAA  +
mov esi [ebp+var_7C] +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_417234  +
mov ecx [ebp+var_98] +
mov eax [ecx+298h] +
lea edx [ecx+2A6h] +
mov ecx [ebp+var_B0] +
mov [esp+0E8h+var_E4] ecx +
lea ecx [ebp+var_50] +
mov [esp+0E8h+var_E8] ecx +
xor ecx ecx +
call sub_411850  +
mov eax [ebp+var_48] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call sub_437230  +
mov ecx [ebp+arg_0] +
mov [ebp+var_50] eax +
mov [ecx+4] eax +
mov eax [ebp+var_48] +
mov [ecx] eax +
test esi esi +
jz loc_417A6C  +
mov eax [esi] +
cmp eax 60000000h +
ja loc_41724C  +
mov edx [esi+4] +
add edx eax +
mov [esi] edx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] eax +
call sub_412C70  +
mov [ebp+var_A7] 1 +
movzx eax [ebp+var_A7] +
sub esp 8 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+var_7C] +
movzx eax [ebp+var_A5] +
mov edx [ebp+var_84] +
test ecx ecx +
setnz cl  +
cmp cl al +
mov byte ptr [ebp+var_94] cl +
jnz loc_417A78  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4177B0  +
cmp byte ptr [ebp+var_94] 0 +
lea ebx [esi+2] +
jz loc_4172CE  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4172CC  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov edx eax +
cmp edi ebx +
jbe loc_4179DB  +
movzx eax byte ptr [esi+2] +
movzx eax ds:byte_47B600[eax] +
cmp al 63h +
jz loc_4179DB  +
xor esi esi +
xor ecx ecx +
mov [ebp+var_9C] edi +
mov edi edx +
mov [ebp+var_A0] esi +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_94] 0 +
jz loc_41732A  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_417328  +
mov edi [ebp+var_7C] +
mov esi [edi+4] +
add esi edx +
mov edi esi +
mov esi [ebp+var_7C] +
mov [esi] edi +
mov edi edx +
mov edx ecx +
shl ecx 4 +
and edx 0F0000000h +
add ecx eax +
or [ebp+var_A0] edx +
cmp ebx [ebp+var_9C] +
jz loc_417353  +
movzx eax byte ptr [ebx] +
movzx eax ds:byte_47B600[eax] +
cmp al 63h +
jnz loc_417300  +
mov edx [ebp+var_BC] +
xor eax eax +
mov esi [ebp+var_A0] +
mov [ebp+var_94] edi +
mov edi [ebp+var_9C] +
and edx ecx +
cmp ecx edx +
setnz al  +
or eax esi +
jnz loc_41794F  +
mov esi [ebp+var_88] +
test esi esi +
jz loc_4173B6  +
mov edx [ebp+var_98] +
mov eax [edx+298h] +
add edx 2A6h +
mov [esp+0E8h+var_E8] esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_411850  +
cmp [ebp+var_A5] 0 +
jz loc_417020  +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_E4] eax +
call sub_412C70  +
sub esp 8 +
jmp loc_417020  +
mov byte ptr [ebp+var_6D] 0Bh +
jmp loc_417140  +
mov byte ptr [ebp+var_6D] 9 +
jmp loc_417140  +
mov byte ptr [ebp+var_6D] 0Dh +
jmp loc_417140  +
mov byte ptr [ebp+var_6D] 0Ah +
jmp loc_417140  +
mov byte ptr [ebp+var_6D] 0Ch +
jmp loc_417140  +
mov byte ptr [ebp+var_6D] 8 +
jmp loc_417140  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4177D9  +
mov byte ptr [ebp+var_6D] 7 +
jmp loc_417140  +
mov eax [ebp+var_80] +
mov [ebp+var_6D+1] ebx +
mov ebx [ebp+var_7C] +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_59+1] eax +
mov eax [ebp+var_84] +
test ebx ebx +
setnz cl  +
mov [ebp+var_30] 0 +
mov [ebp+var_54] eax +
movzx eax [ebp+var_A5] +
mov byte ptr [ebp+var_94] cl +
cmp cl al +
jnz loc_417AB7  +
add esi 2 +
cmp byte ptr [ebp+var_94] 0 +
mov [ebp+var_6D+1] esi +
jz loc_41749E  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41749B  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov [ebp+var_54] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_CC] eax +
lea eax [ebp+var_59+1] +
mov [esp+0E8h+var_D0] eax +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_D4] eax +
lea eax [ebp+var_38] +
mov [esp+0E8h+var_D8] eax +
lea eax [ebp+var_6D+1] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E8] eax +
call sub_412D10  +
mov eax [ebp+var_68] +
cmp eax 7Fh +
ja loc_417731  +
mov byte ptr [ebp+var_59] al +
mov ebx 1 +
lea edx [ebp+var_59] +
lea ecx [ebp+var_64] +
jmp loc_4174FA  +
movzx eax byte ptr [edx] +
add ecx 1 +
add edx 1 +
mov [ecx-1] al +
lea eax [ebp+var_59+1] +
cmp edx eax +
jb loc_4174F7  +
mov eax [ebp+var_88] +
test eax eax +
jz loc_41753C  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_64] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_417980  +
cmp byte ptr [ebp+var_94] 0 +
jz loc_41757A  +
test ebx ebx +
jle loc_41757A  +
xor esi esi +
mov [ebp+var_88] edi +
mov edi esi +
mov esi [ebp+arg_C] +
mov eax [ebp+var_59+1] +
mov ecx esi +
add edi 1 +
mov edx [ebp+var_54] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
call sub_412C70  +
sub esp 8 +
cmp ebx edi +
jnz loc_417556  +
mov edi [ebp+var_88] +
mov ebx [ebp+var_6D+1] +
jmp loc_417020  +
mov eax [ebp+var_84] +
mov edx [ebp+var_7C] +
mov [ebp+var_94] eax +
movzx eax [ebp+var_A5] +
test edx edx +
setnz dl  +
mov byte ptr [ebp+var_9C] dl +
cmp dl al +
jnz loc_417A34  +
xor edx edx +
cmp edi ebx +
jbe loc_41765C  +
mov edx [ebp+var_84] +
lea eax [esi+4] +
mov [ebp+var_A0] eax +
xor eax eax +
mov [ebp+var_94] ecx +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_9C] 0 +
jz loc_4175F8  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_4175F8  +
mov esi [ebp+var_7C] +
mov ecx [esi+4] +
add ecx edx +
mov esi ecx +
mov ecx [ebp+var_7C] +
mov [ecx] esi +
mov ecx [ebp+var_94] +
cmp ebx edi +
lea eax [ecx+eax*8-30h] +
jz loc_417620  +
cmp ebx [ebp+var_A0] +
jz loc_417620  +
movzx ecx byte ptr [ebx] +
lea esi [ecx-30h] +
cmp esi 7 +
mov [ebp+var_94] ecx +
jbe loc_4175D0  +
nop   +
mov [ebp+var_94] edx +
mov edx [ebp+var_A4] +
and edx eax +
cmp eax edx +
jz loc_41765C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aOctalEscapeSeq +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
mov edx [ebp+var_9C] +
mov ecx [ebp+var_88] +
test ecx ecx +
jz loc_4173B6  +
mov esi [ebp+var_98] +
mov eax [esi+298h] +
add esi 2A6h +
mov [esp+0E8h+var_E8] ecx +
mov ecx edx +
mov edx esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_411850  +
jmp loc_4173B6  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4177F6  +
mov byte ptr [ebp+var_6D] 1Bh +
jmp loc_417140  +
cmp ebx esi +
jnb loc_4170A5  +
jmp loc_417042  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingEsca +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_4202B0  +
jmp loc_417176  +
lea ebx [ebp+var_38] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] offset a03o +
mov [esp+0E8h+var_E8] ebx +
call sub_45A790  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ebx +
mov [esp+0E8h+var_E0] offset aUnknownEscap_0 +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
jmp loc_417140  +
lea edx [ebp+var_59+1] +
mov ecx 1 +
mov [ebp+var_9C] edi +
jmp loc_417745  +
mov ecx ebx +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] bl +
lea esi [edx-1] +
lea ebx [ecx+1] +
ja loc_417741  +
movzx edi ds:byte_4707E2[ebx] +
test eax edi +
jnz loc_417741  +
or al ds:byte_4707DD[ecx] +
cmp ebx 6 +
mov edi [ebp+var_9C] +
mov [edx-2] al +
jbe loc_417AD3  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUcnT +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_4202B0  +
jmp loc_41757A  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfXI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_9C] edx +
call sub_41FFF0  +
mov edx [ebp+var_9C] +
jmp loc_4172AA  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfAI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFF0  +
jmp loc_41742C  +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aNonIsoStandard +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
jmp loc_4176B6  +
mov eax [ebp+var_7C] +
add ecx 2 +
test eax eax +
jz loc_41783F  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41783F  +
mov edi [ebp+var_7C] +
mov edx [edi+4] +
add eax edx +
cmp eax 60000000h +
mov [edi] eax +
ja loc_41783F  +
add eax edx +
mov [edi] eax +
mov eax [ebp+var_7C] +
mov edx ecx +
cmp byte ptr [edx] 28h +
jz loc_417864  +
add edx 1 +
test eax eax +
jz loc_417844  +
mov ebx [eax] +
cmp ebx 60000000h +
ja loc_417844  +
add ebx [eax+4] +
mov [eax] ebx +
cmp byte ptr [edx] 28h +
jnz loc_417849  +
mov eax [ebp+var_7C] +
lea ebx [edx+1] +
test eax eax +
jz loc_41787F  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41787F  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
mov eax [ebp+var_AC] +
add esi [eax] +
mov eax ebx +
sub eax ecx +
lea edx [ebx+eax+1] +
cmp esi edx +
jb loc_417897  +
not eax  +
add esi eax +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_4178CA  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4179A3  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_4171BA  +
cmp [ebp+var_8C] offset loc_4116B0 +
jnz loc_417AE6  +
mov eax [ebp+var_7C] +
sub esi ebx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] eax +
call sub_412CC0  +
sub esp 8 +
jmp loc_4171BA  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_417919  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_417919  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 38h +
jnz loc_416FE3  +
mov ebx [ebp+var_7C] +
lea ecx [esi+2] +
test ebx ebx +
jz loc_417946  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_417946  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
movzx eax byte ptr [esi+2] +
jmp loc_416FE3  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aHexEscapeSeque +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
mov edx [ebp+var_9C] +
mov ecx edx +
jmp loc_41737C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUc_0 +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_4202B0  +
jmp loc_41753C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingToEx +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_4202B0  +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call free  +
movzx eax [ebp+var_A7] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aXUsedWithNoFol +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
jmp loc_417020  +
cmp al 22h +
jz loc_416FF3  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_417A50  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aMissingOpenQuo +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41FFB0  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_4179C1  +
jmp loc_4179CC  +
mov [esp+0E8h+var_E0] offset aConvert_oct +
mov [esp+0E8h+var_E4] 540h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 64Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
mov [ebp+var_A7] 1 +
jmp loc_4179CC  +
mov [esp+0E8h+var_E0] offset aConvert_hex +
mov [esp+0E8h+var_E4] 4F9h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
xor esi esi +
jmp loc_4171E4  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 66Ch +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
mov [esp+0E8h+var_E0] offset aConvert_ucn +
mov [esp+0E8h+var_E4] 48Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
sub edx 2 +
lea ecx [ebp+var_59+1] +
cmp edx ecx +
jnb loc_41750A  +
jmp loc_4174F2  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 641h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 5FCh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_406BF0  +
nop   +
push esi  +
push ebx  +
mov ebx [esp+0F0h+var_D8] +
mov esi [esp+0F0h+var_D4] +
mov eax [esp+0F0h+var_E4] +
mov edx [esp+0F0h+var_E0] +
mov ecx [esp+0F0h+var_DC] +
mov [esp+0F0h+var_D8] 0 +
mov [esp+0F0h+var_DC] 0 +
mov [esp+0F0h+var_E0] esi +
mov [esp+0F0h+var_E4] ebx +
pop ebx  +
pop esi  +
jmp sub_416EC0  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
lea eax [esp+24h+var_10] +
mov ecx [esp+24h+arg_14] +
mov edx ebx +
call sub_4115F0  +
mov eax offset aExecutionChara +
cmp [esp+24h+var_10] offset loc_4116B0 +
jz loc_417B90  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_10] +
mov esi [ebx+210h] +
mov dword ptr [ebx+210h] offset loc_4116A0 +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_C] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_14] +
mov [esp+24h+var_20] eax +
mov eax ebx +
call sub_416EC0  +
mov [ebx+210h] esi +
mov edx eax +
xor eax eax +
test dl dl +
mov edx offset aCpp_interpre_0 +
cmovz eax edx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_8] +
mov edx [esp+1Ch+arg_4] +
mov eax [ebx+298h] +
mov esi [ebx+120h] +
mov ebp [ebx+118h] +
mov edi [ebx+11Ch] +
mov [ebx+120h] eax +
mov eax [esp+1Ch+arg_C] +
mov dword ptr [ebx+118h] offset loc_4116B0 +
mov dword ptr [ebx+11Ch] 0FFFFFFFFh +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 3Eh +
call sub_416EC0  +
mov [ebx+118h] ebp +
mov [ebx+11Ch] edi +
mov [ebx+120h] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_4] +
mov [esp+6Ch+var_20] 0 +
mov [esp+6Ch+var_1C] 0 +
movzx eax byte ptr [eax+4] +
mov edx eax +
and edx 0FFFFFFFBh +
cmp dl 38h +
setnz bl  +
xor ecx ecx +
cmp al 3Ch +
movzx edx bl +
setz cl  +
lea edx [edx+ecx*2+2] +
cmp [esi+8] edx +
jz loc_417E07  +
mov esi [esp+6Ch+arg_4] +
mov ecx 1 +
mov [esp+6Ch+var_68] eax +
lea eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_60] 0 +
lea edx [esi+8] +
mov [esp+6Ch+var_64] 0 +
call sub_416EC0  +
test al al +
jz loc_417E26  +
test bl bl +
jz loc_417E50  +
mov eax [esp+6Ch+arg_4] +
mov edx [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+4] +
mov ecx eax +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_44] eax +
mov eax [esp+6Ch+var_1C] +
mov [esp+6Ch+var_40] eax +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A6h] +
mov [esp+6Ch+var_31] al +
lea eax [esp+6Ch+var_18] +
call sub_4115F0  +
mov esi [esp+6Ch+arg_0] +
mov eax [esp+6Ch+var_10] +
mov esi [esi+298h] +
cmp eax 1Fh +
mov [esp+6Ch+var_48] eax +
mov [esp+6Ch+var_54] esi +
ja loc_417F60  +
movzx ecx byte ptr [esp+6Ch+var_48] +
mov eax 1 +
shl eax cl +
sub eax 1 +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] eax +
jbe loc_417F73  +
mov ebp 0FFFFFFFFh +
mov eax [esp+6Ch+var_48] +
xor edx edx +
mov ecx [esp+6Ch+var_44] +
div  [esp+6Ch+var_54] +
lea esi [eax+eax] +
sub ecx esi +
test eax eax +
mov [esp+6Ch+var_38] esi +
jz loc_417F87  +
mov edi [esp+6Ch+var_40] +
lea esi [ecx+eax] +
xor ebx ebx +
mov [esp+6Ch+var_50] eax +
xor edx edx +
movzx eax [esp+6Ch+var_31] +
add ecx edi +
add esi edi +
mov [esp+6Ch+var_4C] ecx +
jmp loc_417DFD  +
mov edi [esp+6Ch+var_4C] +
movzx edi byte ptr [edi+edx] +
movzx ecx byte ptr [esp+6Ch+var_54] +
and edi ebp +
add edx 1 +
sub esi 1 +
shl ebx cl +
mov ecx ebx +
mov ebx edi +
or ebx ecx +
cmp edx [esp+6Ch+var_50] +
jz loc_417F90  +
test al al +
jnz loc_417DD6  +
movzx edi byte ptr [esi-1] +
jmp loc_417DDE  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aEmptyCharacter +
mov [esp+6Ch+var_68] 3 +
mov [esp+6Ch+var_6C] eax +
call sub_41FFB0  +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov edi [esp+6Ch+var_20] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+298h] +
mov eax [eax+29Ch] +
mov [esp+6Ch+var_50] eax +
div  ecx +
cmp ecx 1Fh +
mov [esp+6Ch+var_54] eax +
ja loc_417F53  +
mov ebp 1 +
shl ebp cl +
sub ebp 1 +
sub edi 1 +
jz loc_4180F2  +
xor edx edx +
xor eax eax +
jmp loc_417EA2  +
mov edx ebx +
movzx ebx byte ptr [esi+eax] +
and ebx ebp +
cmp ecx 1Fh +
ja loc_417EB1  +
shl edx cl +
or ebx edx +
add eax 1 +
cmp eax edi +
jnz loc_417EA0  +
cmp [esp+6Ch+var_54] edi +
jb loc_418017  +
cmp edi 1 +
jbe loc_418090  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_50] +
cmp byte ptr [eax+259h] 0 +
jnz loc_4180C4  +
xor eax eax +
mov byte ptr [esp+6Ch+var_54] 0 +
cmp ecx 1Fh +
ja loc_417F17  +
mov edx 1 +
mov ebp edx +
shl ebp cl +
sub ebp 1 +
cmp byte ptr [esp+6Ch+var_54] 0 +
jnz loc_418010  +
sub ecx 1 +
shl edx cl +
test ebx edx +
jz loc_418010  +
not ebp  +
or ebx ebp +
mov ecx [esp+6Ch+arg_8] +
mov [ecx] edi +
mov edi [esp+6Ch+arg_C] +
mov [edi] eax +
mov edi [esp+6Ch+arg_4] +
mov eax ebx +
cmp [edi+0Ch] esi +
jz loc_417E42  +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_54] ebx +
call free  +
mov eax [esp+6Ch+var_54] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp 0FFFFFFFFh +
jmp loc_417E8A  +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] 0FFFFFFFFh +
ja loc_417D94  +
movzx ecx byte ptr [esp+6Ch+var_54] +
mov eax 1 +
shl eax cl +
lea ebp [eax-1] +
jmp loc_417D99  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [esp+6Ch+var_44] +
cmp [esp+6Ch+var_38] eax +
mov esi [esp+6Ch+var_40] +
jb loc_418060  +
mov eax [esp+6Ch+var_3C] +
sub eax 3Ah +
cmp [esp+6Ch+var_48] 1Fh +
ja loc_417FCD  +
cmp eax 1 +
jbe loc_417FC9  +
mov edi [esp+6Ch+arg_0] +
cmp byte ptr [edi+2A5h] 0 +
jz loc_4180A7  +
and ebx [esp+6Ch+var_30] +
cmp eax 1 +
jbe loc_418001  +
mov eax [esp+6Ch+arg_0] +
cmp byte ptr [eax+2A5h] 0 +
jnz loc_418001  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_417F29  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 1 +
jmp loc_417FEF  +
and ebx ebp +
jmp loc_417F17  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_50] ecx +
mov [esp+6Ch+var_6C] eax +
call sub_41FFB0  +
mov ecx [esp+6Ch+var_50] +
cmp [esp+6Ch+var_54] 1 +
jbe loc_418088  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov ecx [eax+29Ch] +
jmp loc_417EE3  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_41FFB0  +
mov esi [esp+6Ch+var_1C] +
jmp loc_417FA2  +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A4h] +
mov byte ptr [esp+6Ch+var_54] al +
jmp loc_417EEA  +
mov edx [esp+6Ch+var_48] +
sub edx 1 +
bt ebx edx +
jnb loc_417FC9  +
mov eax [esp+6Ch+var_30] +
not eax  +
or ebx eax +
jmp loc_417FE2  +
mov [esp+6Ch+var_64] offset aMultiCharacter +
mov [esp+6Ch+var_68] 5 +
mov [esp+6Ch+var_6C] eax +
call sub_41FFF0  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+29Ch] +
jmp loc_417EE3  +
xor ebx ebx +
jmp loc_418090  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_8] +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea eax [esp+48h+var_29] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_8] +
and [ebp+var_30] 0FFFFFFF0h +
test eax eax +
jz loc_41830C  +
mov eax [ebp+var_30] +
xor edi edi +
mov [ebp-2Ch] eax +
jmp loc_418157  +
mov esi [ebp-2Ch] +
add edi 1 +
mov [esi] al +
lea eax [esi+1] +
mov [ebp-2Ch] eax +
cmp [ebp+arg_8] edi +
jbe loc_418226  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax+edi] +
cmp al 5Ch +
jnz loc_418140  +
mov ecx [ebp+arg_4] +
lea esi [edi+2] +
lea eax [edi+1] +
cmp byte ptr [ecx+edi+1] 75h +
setnz cl  +
cmp [ebp+arg_8] esi +
movzx ecx cl +
lea ecx ds:4[ecx*4] +
jbe loc_4182E9  +
mov edx [ebp+arg_4] +
movzx ebx byte ptr [edx+edi+2] +
test byte ptr ds:(word_479A60+1)[ebx+ebx] 1 +
jz loc_4182E9  +
xor edx edx +
jmp loc_4181B7  +
test ecx ecx +
jz loc_4181D0  +
mov ebx [ebp+arg_4] +
movzx ebx byte ptr [ebx+eax] +
test byte ptr ds:(word_479A60+1)[ebx+ebx] 1 +
jz loc_4181D0  +
mov esi eax +
movzx eax ds:byte_47B600[ebx] +
shl edx 4 +
sub ecx 1 +
add edx eax +
lea eax [esi+1] +
cmp [ebp+arg_8] eax +
mov edi eax +
ja loc_4181A0  +
cmp edx 24h +
jnz loc_4181E6  +
mov eax [ebp-2Ch] +
mov byte ptr [eax] 24h +
add eax 1 +
mov [ebp-2Ch] eax +
jmp loc_41814E  +
cmp edx 7Fh +
ja loc_418258  +
mov eax [ebp+var_30] +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jnz loc_418301  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] offset aConvertingUcnT +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] eax +
call sub_4202B0  +
mov eax [ebp-2Ch] +
sub eax [ebp+var_30] +
mov edi [ebp+arg_0] +
mov edx [edi+234h] +
mov [esp+48h+var_40] eax +
mov eax [ebp+var_30] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
call sub_420760  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_19+1] +
mov edi 1 +
mov [ebp+var_34] eax +
jmp loc_418269  +
mov edi ebx +
mov ecx eax +
mov ebx edx +
and ebx 3Fh +
shr edx 6 +
or ebx 0FFFFFF80h +
cmp edx 3Eh +
mov [ecx-1] bl +
lea eax [ecx-1] +
lea ebx [edi+1] +
ja loc_418265  +
movzx esi ds:byte_4707E2[ebx] +
test edx esi +
jnz loc_418265  +
or dl ds:byte_4707DD[edi] +
lea esi [ecx-2] +
mov eax [ebp+var_34] +
mov [ebp+var_34] esi +
mov [ecx-2] dl +
mov edx [ebp+var_30] +
sub edx [ebp-2Ch] +
add edx [ebp+arg_8] +
cmp edx ebx +
jb loc_4181FF  +
lea edi [ebp+var_19+1] +
cmp esi edi +
jnb loc_4182E2  +
mov edx [ebp+var_34] +
mov ecx [ebp-2Ch] +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx-1] +
add ecx 1 +
lea edi [ebp+var_19+1] +
cmp edx edi +
mov [ecx-1] bl +
jnz loc_4182C0  +
mov edi [ebp+var_34] +
lea edx [ebp+var_19+2] +
add edi 1 +
sub edx edi +
add [ebp-2Ch] edx +
mov edi eax +
jmp loc_41814E  +
mov esi eax +
mov eax [ebp+var_30] +
xor edx edx +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jz loc_4181FF  +
lea eax [ebp+var_19] +
mov [ebp+var_34] eax +
lea eax [esi+1] +
jmp loc_4182B7  +
xor eax eax +
jmp loc_41822C  +
***
push edi  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
mov [ecx+8] ebx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_40FAC0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] eax +
call sub_40FF50  +
mov [esp+18h+var_18] ebx +
mov [esi] eax +
mov [esp+18h+var_14] eax +
call sub_40F760  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
mov [esi+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov edx [ecx] +
cmp edx 60000000h +
ja loc_418541  +
mov eax [ecx+4] +
add eax edx +
mov [ecx] eax +
mov eax edx +
retn   +
***
mov eax [esp+8] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D67Fh +
mov eax 1 +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
test eax eax +
jnz loc_418589  +
jmp loc_4185A2  +
mov ebx [ebx] +
add esi 1 +
test ebx ebx +
jz loc_4185A2  +
cmp byte ptr [ebx+8] 0 +
jz loc_418580  +
mov eax [ebx+0Ch] +
call sub_418570  +
mov ebx [ebx] +
add esi eax +
add esi 1 +
test ebx ebx +
jnz loc_418589  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_424E10  +
movzx ecx byte ptr [eax+4] +
cmp cl 35h +
jz loc_418600  +
test byte ptr [eax+6] 10h +
jnz loc_418680  +
cmp cl 16h +
jz loc_418634  +
mov [esp+18h+var_10] offset aMacroNamesMust +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41FFB0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
mov eax esi +
test al al +
jz loc_418625  +
cmp [ebx+2ACh] edx +
jz loc_4186A8  +
cmp [ebx+2BCh] edx +
jz loc_41865E  +
cmp [ebx+2C0h] edx +
jz loc_41865E  +
xor eax eax +
test byte ptr [edx+14h] 80h +
cmovz eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aNoMacroNameGiv +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_41FFB0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset a__has_include_ +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41FFB0  +
xor eax eax +
jmp loc_4185F3  +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+18h+var_10] offset aSCannotBeUsedA +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_41FFB0  +
xor eax eax +
jmp loc_4185F3  +
mov [esp+18h+var_10] offset aDefinedCannotB +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41FFB0  +
xor eax eax +
jmp loc_4185F3  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_424E10  +
mov ecx eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_418700  +
xor edx edx +
cmp al 16h +
jnz loc_418706  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ecx+8] 1 +
jz loc_418738  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] ebx +
call sub_425030  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aInvalidFlagSIn +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_41FFB0  +
add esp 14h +
xor edx edx +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+0Ch] +
movzx edx byte ptr [eax] +
sub edx 30h +
cmp edx esi +
jbe loc_418706  +
cmp edx 4 +
ja loc_418706  +
cmp edx 4 +
jnz loc_418754  +
cmp esi 3 +
jnz loc_418706  +
cmp edx 2 +
jnz loc_4186F1  +
test esi esi +
jnz loc_418706  +
lea esi [esi+0] +
jmp loc_4186F1  +
***
mov ebx eax +
sub esp 14h +
mov [esp+14h+var_14] ebx +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_418777  +
cmp dl 16h +
jz loc_4187E3  +
cmp dl 14h +
jnz loc_4187B2  +
mov [esp+14h+var_14] ebx +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
mov esi eax +
cmp dl 53h +
jz loc_418792  +
cmp dl 16h +
jz loc_418801  +
sub edx 3Eh +
cmp dl 4 +
jbe loc_4187C0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ebx +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_4187C0  +
cmp dl 16h +
jz loc_418817  +
cmp dl 15h +
jnz loc_4187B2  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_41CF60  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_41878D  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_41CF60  +
movzx edx byte ptr [esi+4] +
jmp loc_4187AA  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_41CF60  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_4187D6  +
***
sub esp 18h +
mov eax [eax+4Ch] +
mov edx [eax+4] +
test edx edx +
jz loc_418862  +
mov [esp+18h+var_18] ebx +
call sub_41CDD0  +
mov eax [ebx+4Ch] +
mov eax [eax+4] +
test eax eax +
jnz loc_418850  +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_41887E  +
nop   +
mov [esp+18h+var_18] ebx +
call sub_424E10  +
cmp byte ptr [eax+4] 16h +
jnz loc_418870  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov byte ptr [esi+0Fh] 1 +
jmp loc_4188AE  +
cmp dl 35h +
jnz loc_4188D0  +
mov ebx [eax+8] +
test byte ptr [ebx+14h] 80h +
jz loc_4188F2  +
mov [esp+14h+var_14] esi +
call sub_424E10  +
movzx edx byte ptr [eax+4] +
cmp dl 16h +
jnz loc_4188A0  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] offset aInvalidPragmaG +
mov [esp+14h+var_10] 3 +
call sub_41FFB0  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41890D  +
mov [esp+14h+var_14] ebx +
call sub_41EE80  +
or word ptr [ebx+14h] 280h +
jmp loc_4188AE  +
mov eax [ebx] +
mov [esp+14h+var_C] offset aPoisoningExist +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] eax +
call sub_41FFB0  +
jmp loc_4188FD  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
add byte ptr [ebx+10h] 1 +
mov dword ptr [edx] 0 +
mov [esp+48h+var_48] ebx +
mov [ebp+var_28] edx +
call sub_41EE00  +
mov [ebp+var_20] eax +
movzx eax byte ptr [eax+4] +
cmp al 16h +
jz loc_418B52  +
cmp al 35h +
mov eax [ebp+var_20] +
jnz loc_418A40  +
mov edi [eax] +
mov [esp+48h+var_48] ebx +
call sub_41EE00  +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_418A74  +
cmp esi 4 +
jz loc_418B03  +
cmp esi 11h +
jnz loc_418994  +
cmp al 16h +
jz loc_4189E2  +
mov [esp+48h+var_38] offset aMissingAfterPr +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_4200B0  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_418B35  +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [eax+4] edi +
mov edi [ebp+var_28] +
mov dword ptr [eax] 0 +
mov [edi] eax +
mov ecx [ebp+var_20] +
mov eax [ecx+8] +
mov edx [eax+4] +
lea eax [edx+1Fh] +
lea edi [edx+1] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea esi [esp-4+arg_1F] +
and esi 0FFFFFFF0h +
mov byte ptr [esi] 23h +
mov eax [ecx+8] +
mov ecx [eax] +
lea eax [esi+1] +
mov [esp-4+arg_4] edx +
mov [esp+0] eax +
mov [esp-4+arg_0] ecx +
call memcpy  +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_0] esi +
mov [esp+0] ebx +
call sub_425480  +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_38] offset aPredicateMustB +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 3 +
call sub_4200B0  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 18h +
xor edi edi +
lea eax [ebx+24h] +
mov [ebp+var_2C] eax +
mov [ebp+var_1C] esi +
jmp loc_418AB4  +
mov esi [eax] +
mov edx edi +
shl edx 4 +
add edx ecx +
test edi edi +
mov [edx+8] esi +
mov esi [eax+4] +
mov [edx+0Ch] esi +
mov esi [eax+8] +
mov [edx+10h] esi +
mov eax [eax+0Ch] +
mov [edx+14h] eax +
jnz loc_418AAD  +
and word ptr [ecx+0Eh] 0FFFEh +
add [ebp+var_1C] 10h +
add edi 1 +
mov [esp+48h+var_48] ebx +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 15h +
jz loc_4189C6  +
cmp dl 16h +
jz loc_418B18  +
mov edx [ebx+24h] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
sub edx ecx +
cmp edx [ebp+var_1C] +
jnb loc_418A86  +
mov [ebp+var_24] eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] 18h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4228C0  +
mov edx [ebx+24h] +
mov eax [ebp+var_24] +
mov ecx [edx+8] +
jmp loc_418A86  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_41CF60  +
jmp loc_4189E2  +
mov [esp+48h+var_40] offset aMissingToCompl +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_41FFB0  +
jmp loc_4189B8  +
mov [esp-4+arg_4] offset aPredicateSAnsw +
mov [esp-4+arg_0] 3 +
mov [esp+0] ebx +
call sub_41FFB0  +
jmp loc_4189B8  +
mov [esp+48h+var_40] offset aAssertionWitho +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_41FFB0  +
xor eax eax +
jmp loc_4189BA  +
***
jmp sub_418B80  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [eax+18h] +
mov [esp+1Ch+var_10] edx +
lea edx [eax+18h] +
mov [esp+1Ch+var_14] edx +
test ebp ebp +
jnz loc_418BB0  +
jmp loc_418BF7  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
mov ebp [eax] +
mov [esp+1Ch+var_14] eax +
test ebp ebp +
jz loc_418BF7  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebp+4] +
cmp eax [ecx+4] +
jnz loc_418BA0  +
test eax eax +
jz loc_418BF7  +
mov eax [esp+1Ch+var_10] +
lea edi [ebp+8] +
xor ebx ebx +
lea esi [eax+8] +
jmp loc_418BE0  +
mov eax [ebp+4] +
add ebx 1 +
add edi 10h +
add esi 10h +
cmp eax ebx +
jbe loc_418BF3  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_4221E0  +
test eax eax +
jnz loc_418BD0  +
mov eax [ebp+4] +
cmp eax ebx +
jnz loc_418BA0  +
mov eax [esp+1Ch+var_14] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0F0h] +
mov edx [esp+30h+arg_0] +
mov ebp [eax-10h] +
xor eax eax +
test edx edx +
jz loc_418CF4  +
mov eax [ebx+50h] +
mov eax [eax+4] +
add byte ptr [ebx+10h] 1 +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_14] ecx +
call sub_4225B0  +
mov ecx [esp+30h+var_14] +
sub byte ptr [ebx+10h] 1 +
mov [esp+30h+var_20] offset aS_5 +
test ecx ecx +
mov [esp+30h+var_24] 0 +
mov edi eax +
setnz al  +
cmp esi 1 +
mov [esp+30h+var_1C] edi +
mov [esp+30h+var_28] ebp +
jz loc_418D74  +
test esi esi +
jz loc_418D54  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] ebx +
call sub_4200B0  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_418D38  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_420100  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_418D34  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_4201A0  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov eax [esp+4] +
mov ecx 12h +
mov edx 1 +
mov dword ptr [esp+4] 1 +
jmp sub_418CD0  +
***
mov eax [esp+4] +
xor ecx ecx +
mov edx 3 +
mov dword ptr [esp+4] 1 +
jmp sub_418CD0  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_20] 0 +
add byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41EE70  +
mov edi eax +
mov eax [eax] +
mov edx [edi+0Ch] +
cmp byte ptr [edi+4] 35h +
mov [esp+4Ch+var_1C] eax +
mov eax [edi+4] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
mov eax [edi+8] +
mov [esp+4Ch+var_14] eax +
jz loc_418E68  +
cmp dword ptr [esi+1FCh] 0 +
mov eax 1 +
jz loc_418E56  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41CF60  +
mov edx [esi+20h] +
mov eax [esi+1FCh] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edx +
call eax  +
movzx eax byte ptr [esi+10h] +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esi+1DCh] +
test ebx ebx +
jnz loc_418E7A  +
jmp loc_418E2A  +
mov ebx [ebx] +
test ebx ebx +
jz loc_418E2A  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_418E74  +
cmp byte ptr [ebx+8] 0 +
jz loc_418EC2  +
movzx edx byte ptr [ebx+0Bh] +
test dl dl +
jz loc_418E94  +
sub byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_30] edx +
call sub_41EE00  +
mov edx [esp+4Ch+var_30] +
cmp byte ptr [eax+4] 35h +
mov ebp eax +
jz loc_418F50  +
xor ebx ebx +
test dl dl +
jz loc_418EBA  +
add byte ptr [esi+10h] 1 +
test ebx ebx +
jz loc_418F77  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_418F07  +
mov eax [esp+4Ch+var_20] +
mov byte ptr [esi+58h] 51h +
mov [esi+54h] eax +
movzx eax word ptr [edi+6] +
mov [esi+5Ah] ax +
mov eax [ebx+0Ch] +
mov byte ptr [esi+18h] 1 +
mov [esi+5Ch] eax +
movzx eax byte ptr [ebx+0Bh] +
mov [esi+19h] al +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_418EF9  +
add eax 1 +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1E0h] +
test eax eax +
jz loc_418F22  +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] esi +
call eax  +
cmp byte ptr [ebx+0Bh] 0 +
jz loc_418F2C  +
sub byte ptr [esi+10h] 1 +
mov eax [ebx+0Ch] +
mov [esp+4Ch+var_4C] esi +
call eax  +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_418EF6  +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+0Ch] +
mov eax [eax+8] +
test ebx ebx +
jnz loc_418F6A  +
jmp loc_418EB2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_418EB2  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_418F60  +
jmp loc_418EB2  +
cmp dword ptr [esi+1FCh] 0 +
jz loc_418E56  +
mov eax [esi+4Ch] +
mov eax [eax+4] +
test eax eax +
jz loc_419000  +
mov [esp+4Ch+var_4C] 20h +
call sub_4371B0  +
mov edx [esp+4Ch+var_1C] +
mov [eax] edx +
mov edx [esp+4Ch+var_18] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_14] +
or word ptr [eax+6] 400h +
mov [eax+8] edx +
mov edx [esp+4Ch+var_10] +
mov [eax+0Ch] edx +
mov edx [ebp+0] +
mov [eax+10h] edx +
mov edx [ebp+4] +
mov [eax+14h] edx +
mov edx [ebp+8] +
mov [eax+18h] edx +
mov edx [ebp+0Ch] +
or word ptr [eax+16h] 400h +
mov [eax+1Ch] edx +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_41CB60  +
jmp loc_418E44  +
mov eax 2 +
jmp loc_418E38  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [eax] +
mov [esp+2Ch+var_14] ecx +
mov ecx [eax+1BCh] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_1C] ebx +
mov ebx [eax+1C0h] +
mov edx ebx +
sub edx ecx +
cmp edx 13h +
jbe loc_4190F0  +
mov edx [eax+1B8h] +
add ecx 14h +
mov [eax+1BCh] ecx +
cmp ecx edx +
jz loc_419130  +
mov edi [eax+1C8h] +
mov esi ebx +
add ecx edi +
not edi  +
and ecx edi +
mov edi [eax+1B4h] +
mov ebp ecx +
mov [eax+1BCh] ecx +
sub ebp edi +
sub esi edi +
cmp ebp esi +
jbe loc_419081  +
mov [eax+1BCh] ebx +
mov ecx ebx +
mov [eax+1B8h] ecx +
mov esi [esp+2Ch+var_1C] +
mov ecx [eax+20h] +
mov [edx+4] ecx +
mov ecx [esi+34h] +
mov [edx] ecx +
mov ecx 1 +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_4190AA  +
mov ebx [esp+2Ch+var_18] +
test ebx ebx +
setz cl  +
mov [edx+0Ch] cl +
mov esi [esp+2Ch+var_14] +
cmp byte ptr [eax+0Ah] 0 +
setnz byte ptr [edx+0Dh]  +
cmp byte ptr [eax+0ECh] 0 +
mov [edx+10h] esi +
jz loc_4190CF  +
mov ecx [eax+0E4h] +
test ecx ecx +
jz loc_419120  +
mov dword ptr [edx+8] 0 +
movzx ebx byte ptr [esp+2Ch+var_18] +
mov [eax+0Ah] bl +
mov eax [esp+2Ch+var_1C] +
mov [eax+34h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1B0h] +
mov [esp+2Ch+var_28] 14h +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call sub_449250  +
mov eax [esp+2Ch+var_10] +
mov ecx [eax+1BCh] +
mov ebx [eax+1C0h] +
jmp loc_41903E  +
mov ecx [esp+2Ch+arg_0] +
mov [edx+8] ecx +
jmp loc_4190D6  +
or byte ptr [eax+1D8h] 2 +
jmp loc_419055  +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_419169  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] ebx +
call sub_4282D0  +
xor eax 1 +
movzx edx al +
mov eax [ebx+0E8h] +
mov ecx 4 +
mov [esp+18h+arg_0] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_419010  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_4185B0  +
test eax eax +
mov esi eax +
jz loc_4191F5  +
mov eax [ebx+21Ch] +
cmp byte ptr [ebx+24Ch] 0 +
setz byte ptr [ebx+0Dh]  +
test eax eax +
jz loc_4191C5  +
mov [esp+18h+var_18] ebx +
call eax  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_41EFA0  +
test al al +
jz loc_4191EF  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_4191EF  +
mov edx [ebx+20h] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] edx +
call eax  +
and word ptr [esi+14h] 0DFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
sub esp 18h +
cmp byte ptr [eax+270h] 0 +
jz loc_419320  +
cmp byte ptr [eax+18h] 0 +
jnz loc_4192E9  +
sub byte ptr [eax+10h] 1 +
cmp dword ptr [ebx+50h] offset off_474C80 +
jz loc_4192FA  +
mov [esp+18h+var_18] ebx +
call sub_42B640  +
cmp byte ptr [ebx+24Bh] 0 +
mov byte ptr [ebx+8] 0 +
mov byte ptr [ebx+0Ch] 0 +
setz byte ptr [ebx+0Dh]  +
mov byte ptr [ebx+0Bh] 0 +
mov dword ptr [ebx+50h] 0 +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [eax+18h] 0 +
jnz loc_4192FA  +
test edx edx +
jz loc_4192FA  +
call sub_418840  +
mov eax [ebx+10Ch] +
test eax eax +
jnz loc_4192FA  +
lea eax [ebx+0F4h] +
mov [ebx+104h] eax +
mov eax [ebx+0FCh] +
mov [ebx+0F0h] eax +
jmp loc_4192FA  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
test edx edx +
jnz loc_4193A4  +
jmp loc_4193C0  +
mov edi [esi] +
add esi 4 +
mov [esp+28h+var_28] edi +
call strlen  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_20] eax +
call sub_425480  +
mov [ebx+4] eax +
mov eax [esi-4] +
mov [esp+28h+var_28] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4193C0  +
cmp byte ptr [ebx+8] 0 +
jz loc_419373  +
mov edx [ebx+0Ch] +
mov ecx esi +
mov eax ebp +
call sub_419360  +
mov esi eax +
jmp loc_419373  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
test eax eax +
jnz loc_419408  +
jmp loc_41941C  +
mov eax [ebx+4] +
lea edi [esi+4] +
mov edx [eax+4] +
mov eax [eax] +
lea ecx [edx+1] +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_43F590  +
mov [esi] eax +
mov ebx [ebx] +
test ebx ebx +
jz loc_419420  +
mov esi edi +
cmp byte ptr [ebx+8] 0 +
jz loc_4193E0  +
mov eax [ebx+0Ch] +
mov edx esi +
call sub_4193D0  +
mov esi eax +
jmp loc_4193E0  +
mov edi edx +
nop   +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_419475  +
test dl dl +
mov esi ecx +
mov [esp+14h+var_14] ebx +
jnz loc_419480  +
call sub_424E10  +
cmp byte ptr [eax+4] 16h +
jz loc_419475  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+14h+var_C] offset aExtraTokensAtE +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_420030  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_41EE00  +
jmp loc_419451  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_41EE00  +
cmp byte ptr [eax+4] 3Eh +
jnz loc_4194D2  +
mov edx [ebx+1F8h] +
test edx edx +
jz loc_4194C3  +
mov ecx [ebx+20h] +
add eax 8 +
mov [esp+8] eax +
mov [esp] ebx +
mov [esp+4] ecx +
call edx  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_419430  +
***
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp] ebx +
mov dword ptr [esp+8] offset aInvalidSDirect +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41FFB0  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_419430  +
***
push ebp  +
mov ecx 10h +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
lea edx [esp+1Ch] +
mov eax esi +
call sub_418930  +
test eax eax +
mov ebx eax +
jz loc_419596  +
mov edx [esp+1Ch] +
mov dword ptr [edx] 0 +
movzx eax byte ptr [eax+14h] +
mov edi edx +
and eax 3Fh +
cmp al 2 +
jz loc_4195A8  +
mov eax [edi+4] +
shl eax 4 +
lea ebp [eax+8] +
mov eax [esi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_4195A0  +
mov [esp] ebp +
call eax  +
mov [esp+4] edi +
mov [esp+8] ebp +
mov [esp] eax +
mov [esp+1Ch] eax +
call memcpy  +
mov edi [esp+1Ch] +
movzx edx byte ptr [ebx+14h] +
xor ecx ecx +
mov eax esi +
mov [ebx+18h] edi +
and edx 0FFFFFFC0h +
or edx 2 +
mov [ebx+14h] dl +
xor edx edx +
call sub_419430  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+24h] +
add [eax+8] ebp +
jmp loc_41957B  +
***
mov eax ebx +
call sub_418B80  +
mov eax [eax] +
test eax eax +
jz loc_4195D8  +
mov eax [ebx] +
mov dword ptr [esp+8] offset aSReAsserted +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
add eax 1 +
mov [esp+0Ch] eax +
call sub_41FFB0  +
jmp loc_419596  +
***
mov edi [esp+1Ch] +
mov eax [ebx+18h] +
mov [edi] eax +
jmp loc_419548  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
lea esi [esi+0] +
mov [esp+38h+var_38] ebx +
call sub_41EE00  +
cmp byte ptr [eax+4] 53h +
jz loc_419600  +
mov edx eax +
mov ecx [eax] +
mov eax [esp+38h+arg_0] +
mov [eax] ecx +
movzx eax byte ptr [edx+4] +
cmp al 3Eh +
jz loc_419673  +
cmp al 44h +
jz loc_41967B  +
cmp al 3 +
jnz loc_4196E0  +
mov eax ebx +
nop   +
call sub_418C10  +
cmp dword ptr [ebx+50h] offset off_474D04 +
mov dword ptr [edi] 1 +
mov esi eax +
jz loc_4196D3  +
test ebp ebp +
jz loc_41965B  +
cmp byte ptr [ebx+24Bh] 0 +
jz loc_419717  +
mov eax ebx +
xor ecx ecx +
mov edx 1 +
call sub_419430  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
cmp byte ptr [eax] 52h +
jz loc_4196E0  +
mov eax [edx+8] +
mov [esp+38h+var_28] edx +
sub eax 1 +
mov [esp+38h+var_38] eax +
call sub_4371B0  +
mov edx [esp+38h+var_28] +
mov esi eax +
mov eax [edx+8] +
lea ecx [eax-2] +
mov eax [edx+0Ch] +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] esi +
add eax 1 +
mov [esp+38h+var_34] eax +
call memcpy  +
mov edx [esp+38h+var_28] +
mov eax [edx+8] +
mov byte ptr [esi+eax-2] 0 +
xor eax eax +
cmp byte ptr [edx+4] 44h +
setz al  +
cmp dword ptr [ebx+50h] offset off_474D04 +
mov [edi] eax +
jnz loc_41964A  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
cmp eax offset off_474D04 +
jz loc_4197E4  +
mov eax [eax+4] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aSExpectsFilena +
mov [esp+38h+var_34] 3 +
call sub_41FFB0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] 20h +
call sub_4371B0  +
mov [esp+38h+var_28] eax +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_4197E0  +
mov [esp+38h+var_24] 8 +
xor edi edi +
mov [esp+38h+var_38] ebx +
call sub_424E10  +
movzx edx byte ptr [eax+4] +
mov ecx eax +
cmp dl 16h +
jz loc_4197C5  +
cmp dl 4Fh +
jz loc_419780  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+38h+var_30] offset aExtraTokensAtE +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
call sub_41FFB0  +
jmp loc_419741  +
lea edx [edi+1] +
cmp edx [esp+38h+var_24] +
jnb loc_419794  +
mov eax [esp+38h+var_28] +
mov [eax+edi*4] ecx +
mov edi edx +
jmp loc_419741  +
shl [esp+38h+var_24] 1 +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_1C] edx +
shl eax 2 +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+var_28] +
mov [esp+38h+var_38] eax +
call sub_437230  +
mov edx [esp+38h+var_1C] +
mov ecx [esp+38h+var_20] +
mov [esp+38h+var_28] eax +
jmp loc_419789  +
shl edi 2 +
mov eax [esp+38h+var_28] +
mov dword ptr [eax+edi] 0 +
mov [ebp+0] eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_4197C8  +
mov eax offset aPragmaDependen +
jmp loc_4196F1  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp byte ptr [eax+24Bh] 0 +
lea ecx [esp+44h+var_1C] +
lea edx [esp+44h+var_20] +
setz byte ptr [eax+0Dh]  +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
mov eax ebx +
mov [esp+44h+var_1C] 0 +
call sub_4195F0  +
test eax eax +
mov esi eax +
jz loc_4198A6  +
cmp byte ptr [eax] 0 +
jz loc_4198E0  +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 0C7h +
ja loc_4198C0  +
mov eax ebx +
call sub_418840  +
mov eax [ebx+1ECh] +
test eax eax +
jz loc_41987E  +
mov edx [ebx+50h] +
mov ebp [esp+44h+var_1C] +
mov ecx [edx+4] +
mov edx [ebx+20h] +
mov [esp+44h+var_30] ebp +
mov ebp [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] ebp +
mov [esp+44h+var_44] ebx +
call eax  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_38] edi +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_3C] eax +
call sub_42E530  +
mov [esp+44h+var_44] esi +
call free  +
mov eax [esp+44h+var_1C] +
test eax eax +
jz loc_4198B6  +
mov [esp+44h+var_44] eax +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_3C] offset aIncludeNestedT +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_44] ebx +
call sub_41FFB0  +
jmp loc_41989E  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+44h+var_34] offset aEmptyFilenameI +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_30] eax +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_3C] eax +
call sub_4200B0  +
jmp loc_41989E  +
***
mov eax [esp+arg_0] +
mov edx 2 +
jmp sub_4197F0  +
***
push ebx  +
mov edx 1 +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_419951  +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_4197F0  +
***
mov [esp] ebx +
mov dword ptr [esp+8] offset aInclude_nextIn +
mov dword ptr [esp+4] 0 +
call sub_41FFB0  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor edx edx +
jmp sub_4197F0  +
***
mov eax [esp+4] +
xor edx edx +
jmp sub_4197F0  +
***
push esi  +
xor ecx ecx +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
lea eax [esp+1Ch] +
mov [esp] eax +
lea edx [esp+18h] +
mov eax ebx +
call sub_4195F0  +
test eax eax +
mov esi eax +
jz loc_419A21  +
mov eax [esp+18h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_42EB10  +
test eax eax +
js loc_419A27  +
jz loc_419A19  +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCurrentFileIsO +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_41FFB0  +
mov [esp] ebx +
call sub_41EE00  +
cmp byte ptr [eax+4] 16h +
jz loc_419A19  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_41CF60  +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp] 0 +
mov eax ebx +
call sub_418CD0  +
mov [esp] esi +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCannotFindSour +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_41FFB0  +
jmp loc_419A19  +
***
push esi  +
mov edx 1 +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax ebx +
call sub_4185B0  +
test eax eax +
mov esi eax +
jz loc_419A9F  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_419A7A  +
mov [esp] ebx +
call eax  +
mov eax [ebx+1F4h] +
test eax eax +
jz loc_419A94  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
movzx eax byte ptr [esi+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_419AB0  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_419430  +
***
movzx eax word ptr [esi+14h] +
shr ax 6 +
test al 10h +
jnz loc_419B20  +
test al 4 +
jnz loc_419AE1  +
cmp byte ptr [ebx+267h] 0 +
jnz loc_419B40  +
mov [esp] esi +
call sub_41EE80  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_419430  +
***
cmp byte ptr [ebx+25Fh] 0 +
jz loc_419AC0  +
mov edx [esi] +
mov eax [ebx+20h] +
mov dword ptr [esp+10h] offset aUndefiningS +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Bh +
mov [esp] ebx +
call sub_420100  +
jmp loc_419AC0  +
***
mov eax [esi] +
mov dword ptr [esp+8] offset aUndefiningS +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
mov [esp+0Ch] eax +
call sub_41FFB0  +
jmp loc_419AC0  +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_41C500  +
jmp loc_419AC9  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_419B90  +
xor esi esi +
mov edi 1 +
mov [esp+20h] esi +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 6 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_419010  +
***
xor edx edx +
mov eax ebx +
call sub_4185B0  +
test eax eax +
mov esi eax +
jz loc_419B70  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_419C20  +
movzx eax word ptr [esi+14h] +
xor edi edi +
shr ax 6 +
test al 80h +
jnz loc_419BEF  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_419C50  +
mov eax [ebx+218h] +
test eax eax +
jz loc_419BEF  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_419C09  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_419430  +
jmp loc_419B77  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr di 0Eh +
xor edi 1 +
shr ax 6 +
and edi 1 +
test al 4 +
jnz loc_419BB4  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_419BB4  +
***
test al 4 +
jz loc_419C67  +
mov eax [ebx+228h] +
test eax eax +
jz loc_419C67  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_419BDF  +
jmp loc_419BEF  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_419CB1  +
mov edi 1 +
mov dword ptr [esp+20h] 0 +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 3 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_419010  +
***
xor edx edx +
mov eax ebx +
call sub_4185B0  +
test eax eax +
mov esi eax +
jz loc_419C90  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_419D40  +
movzx eax word ptr [esi+14h] +
mov edi 1 +
shr ax 6 +
test al 80h +
jnz loc_419D13  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_419D70  +
mov eax [ebx+218h] +
test eax eax +
jz loc_419D13  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_419D2D  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_419430  +
jmp loc_419C95  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr ax 6 +
shr di 0Eh +
and edi 1 +
test al 4 +
jnz loc_419CD8  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_419CD8  +
***
test al 4 +
jz loc_419D87  +
mov eax [ebx+228h] +
test eax eax +
jz loc_419D87  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_419D03  +
jmp loc_419D13  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esi] +
mov ebx [edi+34h] +
test ebx ebx +
jz loc_419E43  +
movzx eax byte ptr [ebx+0Dh] +
test al al +
jz loc_419DF4  +
mov edx [ebx] +
test edx edx +
jz loc_419E15  +
cmp ebx [esi+1B4h] +
mov [edi+34h] edx +
mov [esi+0Ah] al +
jbe loc_419DDB  +
cmp ebx [esi+1C0h] +
jb loc_419E30  +
add esi 1B0h +
mov [esp+4] ebx +
mov [esp] esi +
call sub_449360  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp byte ptr [esi+25Ch] 0 +
jz loc_419DBF  +
xor edx edx +
mov eax esi +
mov ecx 8 +
call sub_419430  +
mov edx [ebx] +
movzx eax byte ptr [ebx+0Dh] +
test edx edx +
jnz loc_419DC5  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_419DC5  +
mov byte ptr [esi+0ECh] 1 +
mov [esi+0E4h] ecx +
jmp loc_419DC5  +
***
mov [esi+1B8h] ebx +
mov [esi+1BCh] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+8] offset aEndifWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41FFB0  +
jmp loc_419DED  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
call sub_418770  +
test eax eax +
mov edx eax +
jz loc_41A035  +
mov ecx [eax+8] +
lea eax [ecx+20h] +
and eax 0FFFFFFF0h +
call sub_454930  +
mov edx [edx+0Ch] +
sub esp eax +
xor eax eax +
lea ebx [esp+38h+var_15] +
and ebx 0FFFFFFF0h +
cmp byte ptr [edx] 4Ch +
lea esi [edx+ecx-1] +
setz al  +
lea eax [edx+eax+1] +
mov edx ebx +
cmp eax esi +
jnb loc_419EE7  +
mov edi ebx +
jmp loc_419EBD  +
add eax 1 +
add edx 1 +
cmp esi eax +
mov [edx-1] cl +
jbe loc_419EE5  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_419EB0  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_419ED3  +
cmp bl 5Ch +
jnz loc_419EB0  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp esi eax +
mov [edx-1] cl +
ja loc_419EBD  +
mov ebx edi +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_419430  +
mov eax [ebp+arg_0] +
call sub_418840  +
mov [esp+38h+var_38] 14h +
call sub_4371B0  +
mov edx ebx +
mov esi eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419F30  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+38h+var_38] edx +
call sub_4371B0  +
mov [esi+4] eax +
mov edi eax +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call strcpy  +
mov eax [ebp+arg_0] +
mov eax [eax+2F8h] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_421B30  +
test byte ptr [eax+14h] 3Fh +
mov ebx eax +
jnz loc_419FB3  +
or byte ptr [esi+10h] 4 +
mov eax [ebp+arg_0] +
mov [eax+2F8h] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41FA30  +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] eax +
call strlen  +
mov edi eax +
lea eax [eax+2] +
mov [esp+38h+var_38] eax +
call sub_4371B0  +
mov [esi+8] eax +
mov byte ptr [eax+edi] 0Ah +
mov byte ptr [eax+edi+1] 0 +
mov edx [ebx+18h] +
mov edx [edx+8] +
mov [esi+0Ch] edx +
mov edx [ebx+18h] +
movzx ecx byte ptr [edx+14h] +
movzx edx byte ptr [esi+10h] +
shr cl 2 +
and ecx 1 +
and edx 0FFFFFFFEh +
or edx ecx +
mov [esi+10h] dl +
mov ecx [ebx+18h] +
and edx 0FFFFFFFDh +
movzx ecx byte ptr [ecx+14h] +
shr cl 2 +
and ecx 2 +
or edx ecx +
mov [esi+10h] dl +
mov [esp+38h+var_30] edi +
mov edi [ebp+var_1C] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edi +
call memcpy  +
jmp loc_419FA2  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragmaP +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_4200B0  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_419430  +
mov eax [ebp+arg_0] +
call sub_418840  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_41A0C2  +
mov eax ebx +
xor ecx ecx +
xor edx edx +
call sub_419430  +
mov eax [ebx] +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42E510  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aPragmaOnceInMa +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_41FFB0  +
jmp loc_41A0A1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_41A187  +
cmp dword ptr [ebx+10h] 5 +
jz loc_41A143  +
movzx eax byte ptr [ebx+0Ch] +
mov dword ptr [ebx+10h] 5 +
mov [esi+0Ah] al +
cmp byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+0Ch] 1 +
mov dword ptr [ebx+8] 0 +
jnz loc_41A124  +
cmp byte ptr [esi+25Ch] 0 +
jnz loc_41A130  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add esp 24h +
mov eax esi +
pop ebx  +
mov ecx 8 +
pop esi  +
xor edx edx +
jmp sub_419430  +
***
mov dword ptr [esp+8] offset aElseAfterElse +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41FFB0  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset aTheConditional +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
mov [esp] esi +
call sub_4200B0  +
jmp loc_41A0FC  +
***
mov dword ptr [esp+8] offset aElseWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41FFB0  +
jmp loc_41A124  +
***
jmp loc_41A1B0  +
push ebx  +
mov ecx 11h +
sub esp 28h +
mov eax [esp+30h] +
lea edx [esp+1Ch] +
call sub_418930  +
test eax eax +
mov ebx eax +
jz loc_41A1D7  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 2 +
jz loc_41A1E0  +
add esp 28h +
pop ebx  +
retn   +
***
mov edx [esp+1Ch] +
test edx edx +
jz loc_41A218  +
mov eax ebx +
call sub_418B80  +
mov edx [eax] +
test edx edx +
jz loc_41A1F9  +
mov edx [edx] +
mov [eax] edx +
mov eax [ebx+18h] +
test eax eax +
jz loc_41A212  +
mov eax [esp+30h] +
xor ecx ecx +
xor edx edx +
call sub_419430  +
add esp 28h +
pop ebx  +
retn   +
***
and byte ptr [ebx+14h] 0C0h +
jmp loc_41A200  +
***
mov [esp] ebx +
call sub_41EE80  +
jmp loc_41A1D7  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 34h +
mov [esp] eax +
call sub_424E10  +
cmp byte ptr [eax+4] 3Eh +
jz loc_41A280  +
mov eax esi +
mov ecx offset aError_0 +
test al al +
mov eax offset aWarning +
cmovz ecx eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset aInvalidPragm_1 +
mov dword ptr [esp+4] 3 +
mov [esp] ebx +
call sub_41FFB0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
add eax 8 +
lea edx [esp+28h] +
mov dword ptr [esp+10h] 3Eh +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_417BF0  +
test al al +
jz loc_41A247  +
mov eax [esp+28h] +
test eax eax +
jz loc_41A247  +
mov eax esi +
mov edx [esp+2Ch] +
cmp al 1 +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aS_5 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_41FFB0  +
mov eax [esp+2Ch] +
mov [esp] eax +
call free  +
jmp loc_41A274  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_41A230  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_41A230  +
***
sub esp 24h +
mov esi [esp+24h+arg_0] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_41A3B4  +
cmp dword ptr [ebx+10h] 5 +
jz loc_41A370  +
cmp byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 9 +
jz loc_41A350  +
mov byte ptr [esi+0Ah] 1 +
mov dword ptr [ebx+8] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
call sub_4282D0  +
mov edx eax +
xor edx 1 +
mov [esi+0Ah] dl +
mov [ebx+0Ch] al +
jmp loc_41A33D  +
mov [esp+24h+var_1C] offset aElifAfterElse +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_41FFB0  +
mov eax [ebx+4] +
mov [esp+24h+var_14] offset aTheConditional +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] esi +
call sub_4200B0  +
jmp loc_41A32C  +
mov [esp+24h+var_1C] offset aElifWithoutIf +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_41FFB0  +
jmp loc_41A344  +
***
jmp sub_41A3E0  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_41A420  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_419430  +
mov eax ebx +
call sub_418840  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
call sub_42E960  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aPragmaSystem_h +
mov [esp+18h+var_14] 0 +
call sub_41FFB0  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov [esp+38h+var_20] ecx +
mov ebx [esp+38h+arg_0] +
jz loc_41A5B0  +
mov [esp+38h+var_38] edx +
call strlen  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_425480  +
mov esi eax +
mov eax [edi+1DCh] +
test eax eax +
jnz loc_41A48E  +
jmp loc_41A566  +
mov eax [eax] +
test eax eax +
jz loc_41A566  +
cmp esi [eax+4] +
jnz loc_41A484  +
cmp byte ptr [eax+8] 0 +
jz loc_41A5E5  +
cmp [eax+0Bh] bl +
jnz loc_41A636  +
lea ecx [eax+0Ch] +
mov esi [esp+38h+var_20] +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_425480  +
mov ecx [esp+38h+var_1C] +
mov ebx [ecx] +
mov esi eax +
test ebx ebx +
jnz loc_41A4DD  +
jmp loc_41A522  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41A522  +
cmp esi [ebx+4] +
jnz loc_41A4D7  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41A5E5  +
test ebp ebp +
mov eax [esp+38h+var_20] +
jz loc_41A610  +
mov [esp+38h+var_28] eax +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aPragmaSSIsAlre +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_41FFB0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_20] ecx +
call sub_4250B0  +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov edx [ecx] +
mov [eax] edx +
mov [ecx] eax +
mov [eax+4] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] edi +
call sub_4250B0  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov ecx [edi+1DCh] +
mov [eax] ecx +
mov [edi+1DCh] eax +
mov [eax+4] esi +
mov byte ptr [eax+8] 1 +
mov [eax+0Bh] bl +
jmp loc_41A4A6  +
test bl bl +
lea ecx [eax+1DCh] +
jz loc_41A4A9  +
mov eax [esp+38h+var_20] +
mov [esp+38h+var_30] offset aRegisteringPra +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
call sub_41FFB0  +
xor eax eax +
jmp loc_41A51A  +
mov eax [esi] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] offset aRegisteringSAs +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_2C] eax +
call sub_41FFB0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aPragmaSIsAlrea +
mov [esp+38h+var_34] 4 +
call sub_41FFB0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aRegisteringP_0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_41FFB0  +
xor eax eax +
jmp loc_41A51A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [ebp+arg_0] +
cmp byte ptr [ebx+11h] 0 +
setnz [ebp+var_79]  +
cmp byte ptr [ebx+13h] 0 +
setnz [ebp+var_7A]  +
jz loc_41A685  +
mov byte ptr [ebx+10h] 0 +
cmp [ebp+var_79] 0 +
jz loc_41A6A0  +
cmp byte ptr [ebx+26Ah] 0 +
jnz loc_41A8F1  +
mov byte ptr [ebx+11h] 0 +
mov byte ptr [ebx+10h] 0 +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+0A8h+var_A8] ebx +
call sub_424E10  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_41A842  +
cmp al 37h +
jz loc_41A8A5  +
cmp al 16h +
jz loc_41A7C8  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_41A89C  +
xor esi esi +
mov edi 1 +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_41A7D0  +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] ebx +
mov [ebp+var_88] edx +
call sub_425030  +
mov ecx eax +
mov [ebp+var_84] eax +
mov eax [ebx+230h] +
test eax eax +
jz loc_41AA81  +
mov [esp+0A8h+var_A0] offset off_474C20 +
mov [esp+0A8h+var_A4] ecx +
mov [esp+0A8h+var_A8] ebx +
call eax  +
test eax eax +
mov [ebp+var_80] eax +
jz loc_41AA81  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov ecx [edx] +
lea edx [ebp+var_74] +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] ecx +
mov ecx edx +
call sub_411170  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov edx [edx] +
sub esp 8 +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] edx +
call sub_40FAC0  +
mov ecx [ebp+var_80] +
mov [esp+0A8h+var_A0] ecx +
mov [esp+0A8h+var_A4] edx +
lea edx [ebp+var_74] +
mov ecx edx +
mov [esp+0A8h+var_A8] eax +
call sub_4113F0  +
mov eax [ebp+var_80] +
mov ecx [ebp+var_84] +
sub esp 0Ch +
mov [esp+0A8h+var_94] eax +
lea eax [ebp+var_74] +
mov [esp+0A8h+var_98] ecx +
mov [esp+0A8h+var_9C] offset aInvalidPreproc +
mov [esp+0A8h+var_A0] eax +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
call sub_420240  +
lea ecx [ebp+var_74] +
call sub_410E50  +
jmp loc_41A7D0  +
mov edi 1 +
xor esi esi +
nop   +
cmp byte ptr [ebx+270h] 0 +
mov [ebx+50h] esi +
jnz loc_41A836  +
test esi esi +
jz loc_41A820  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+0A8h+var_A8] ebx +
call eax  +
mov edx edi +
mov eax ebx +
call sub_4192D0  +
cmp [ebp+var_79] 0 +
jz loc_41A807  +
cmp byte ptr [ebx+18h] 0 +
jnz loc_41A807  +
mov byte ptr [ebx+11h] 2 +
mov byte ptr [ebx+10h] 1 +
cmp [ebp+var_7A] 0 +
jz loc_41A811  +
mov byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_41A7EA  +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
call sub_41CF60  +
jmp loc_41A7EA  +
mov eax ebx +
call sub_419200  +
lea esi [esi+0] +
jmp loc_41A7DC  +
mov eax [edx+8] +
movzx eax byte ptr [eax+0Ch] +
test al 1 +
jz loc_41A6DB  +
shr al 1 +
movzx eax al +
lea eax [eax+eax*2] +
lea esi ds:474C80h[eax*4] +
movzx eax byte ptr [ebx+26Bh] +
test byte ptr [esi+0Bh] 2 +
jnz loc_41A874  +
mov byte ptr [ebx+0ECh] 0 +
test al al +
jz loc_41A910  +
cmp byte ptr [ebx+2A8h] 0 +
jnz loc_41A966  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_41A89C  +
movzx eax byte ptr [esi+0Bh] +
test al 8 +
jnz loc_41A96A  +
xor edi edi +
xor esi esi +
jmp loc_41A7D0  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_41A89C  +
cmp byte ptr [ebx+26Ah] 0 +
mov esi offset off_474B9C +
movzx eax byte ptr [ebx+26Bh] +
jz loc_41A867  +
test al al +
jnz loc_41A867  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_41A867  +
mov [esp+0A8h+var_A0] offset aStyleOfLineDir +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_41FFB0  +
movzx eax byte ptr [ebx+26Bh] +
jmp loc_41A867  +
mov [esp+0A8h+var_A0] offset aEmbeddingADire +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_41FFB0  +
jmp loc_41A698  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
cmp byte ptr [ebx+0Ah] 0 +
mov [ebx+9] al +
jnz loc_41A9D8  +
cmp byte ptr [esi+0Ah] 2 +
jz loc_41A9A0  +
test byte ptr [esi+0Bh] 20h +
jnz loc_41AA50  +
cmp esi offset off_474D34 +
jnz loc_41A9D8  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_41AA50  +
cmp byte ptr [ebx+25Ah] 0 +
jnz loc_41A9ED  +
jmp loc_41A97A  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+9] al +
cmp byte ptr [ebx+0Ah] 0 +
mov edi 1 +
jz loc_41A7D0  +
test byte ptr [esi+0Bh] 1 +
mov eax 0 +
cmovz esi eax +
jmp loc_41A7D0  +
cmp esi offset off_474D34 +
jz loc_41AACC  +
cmp byte ptr [ebx+26Ah] 0 +
jz loc_41A934  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsAGccExtensi +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41FFB0  +
cmp byte ptr [ebx+25Ah] 0 +
jz loc_41A97A  +
cmp esi offset off_474CEC +
jz loc_41AAAF  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_41AA20  +
cmp byte ptr [esi+0Ah] 0 +
jnz loc_41A97A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aTraditionalCIg +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41FFF0  +
jmp loc_41A97A  +
cmp byte ptr [esi+0Ah] 0 +
jz loc_41A97A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSuggestHidingS +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41FFF0  +
jmp loc_41A97A  +
cmp byte ptr [ebx+254h] 0 +
jz loc_41A9D8  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsADeprecated +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41FFF0  +
jmp loc_41A9D8  +
mov eax [ebp+var_84] +
mov edi 1 +
xor esi esi +
mov [esp+0A8h+var_A0] offset aInvalidPrepr_0 +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41FFB0  +
jmp loc_41A7D0  +
mov [esp+0A8h+var_A0] offset aSuggestNotUsin +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
call sub_41FFF0  +
jmp loc_41A97A  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_41A957  +
jmp loc_41A9AC  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset loc_418550 +
mov [esp] eax +
call sub_425510  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov edx [esp+24h+arg_C] +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_14] edx +
mov edx [esp+24h+arg_8] +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
mov edx [esp+24h+arg_10] +
mov [esp+24h+var_1C] edx +
mov edx [esp+24h+arg_4] +
mov [esp+24h+var_20] edx +
call sub_40F040  +
test eax eax +
mov esi eax +
jz loc_41AB64  +
mov edx [eax+0Ch] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_1C] 7Fh +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_40F3B0  +
mov eax [ebx+1E4h] +
test eax eax +
jz loc_41AB80  +
mov [esp+24h+arg_4] esi +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp eax  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_0] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov ecx [eax+8] +
movzx eax byte ptr [eax+14h] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] ecx +
mov byte ptr [esp+3Ch+var_20] al +
call sub_41CF60  +
mov [esp+3Ch+var_3C] esi +
call sub_41EE00  +
cmp byte ptr [eax+4] 37h +
jz loc_41AC06  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
call sub_425030  +
mov [esp+3Ch+var_34] offset aSAfterIsNotAPo +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41FFB0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+8] +
mov ebx [eax+0Ch] +
test ebp ebp +
jz loc_41ADE8  +
movzx ecx byte ptr [ebx] +
lea edx [ebx+1] +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_41ABD6  +
add ebp ebx +
xor ebx ebx +
jmp loc_41AC41  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_41ABD6  +
lea ebx [ebx+ebx*4] +
cmp edx ebp +
lea ebx [ecx+ebx*2-30h] +
jnz loc_41AC30  +
mov [esp+3Ch+var_3C] esi +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_41ACE0  +
cmp dl 16h +
jnz loc_41ACB0  +
movzx eax byte ptr [esp+3Ch+var_20] +
mov ebp 3 +
mov [esp+3Ch+var_20] eax +
mov eax esi +
call sub_418840  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] eax +
call sub_41AB10  +
mov byte ptr [edi+50h] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_425030  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] offset aSIsNotAValidFi +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_30] eax +
call sub_41FFB0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+3Ch+var_14] +
add eax 8 +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_2C] 3Eh +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
call sub_417BF0  +
test al al +
mov eax [esp+3Ch+var_24] +
cmovnz eax [esp+3Ch+var_10] +
xor edx edx +
mov [esp+3Ch+var_24] eax +
mov eax esi +
call sub_4186D0  +
cmp eax 1 +
jz loc_41ADF5  +
cmp eax 2 +
mov ebp 3 +
jz loc_41AE44  +
xor edx edx +
cmp eax 3 +
mov [esp+3Ch+var_20] 0 +
jz loc_41AE18  +
mov eax [esi] +
xor ecx ecx +
mov [eax+3Dh] dl +
xor edx edx +
mov eax esi +
call sub_419430  +
mov eax esi +
call sub_418840  +
cmp ebp 1 +
jnz loc_41ADE0  +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov edx [eax+10h] +
test edx edx +
js loc_41ADB4  +
mov ecx [esp+3Ch+var_24] +
mov eax [esi+1Ch] +
test ecx ecx +
jz loc_41AC7E  +
imul edx edx +
add edx [eax] +
jz loc_41AC7E  +
mov eax [edx+8] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_4493F0  +
test eax eax +
jz loc_41ADE0  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] offset aFileSLinemarke +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41FFF0  +
jmp loc_41ABFE  +
mov eax [esi+1Ch] +
jmp loc_41AC7E  +
xor ebx ebx +
lea esi [esi+0] +
jmp loc_41AC4C  +
mov eax [esp+3Ch+var_24] +
xor ebp ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_42E910  +
mov edx 1 +
mov eax esi +
call sub_4186D0  +
jmp loc_41AD46  +
mov edx 3 +
mov eax esi +
call sub_4186D0  +
cmp eax 4 +
setz dl  +
add edx 1 +
cmp eax 4 +
setz al  +
movzx eax al +
mov [esp+3Ch+var_20] eax +
add [esp+3Ch+var_20] 1 +
jmp loc_41AD59  +
mov edx 2 +
mov eax esi +
call sub_4186D0  +
mov bp 1 +
jmp loc_41AD46  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+60h] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
cmp byte ptr [esi+268h] 1 +
movzx ebx byte ptr [eax+14h] +
mov eax [eax+8] +
mov [esp] esi +
mov [esp+2Bh] bl +
mov [esp+24h] eax +
sbb eax eax +
mov [esp+1Ch] eax +
and dword ptr [esp+1Ch] 80008000h +
add dword ptr [esp+1Ch] 7FFFFFFFh +
call sub_41EE00  +
mov [esp+20h] eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_41AEF5  +
cmp al 16h +
jz loc_41AFB6  +
mov eax [esp+20h] +
mov [esp] esi +
mov [esp+4] eax +
call sub_425030  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSAfterLineIsNo +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41FFB0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov [esp+2Ch] edi +
mov edx [eax+0Ch] +
mov ebx [eax+8] +
xor eax eax +
add ebx edx +
mov ebp ebx +
xor ebx ebx +
jmp loc_41AF34  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_41AEC1  +
lea edi [ebx+ebx*4] +
lea ecx [ecx+edi*2-30h] +
mov edi 1 +
cmp ebx ecx +
mov ebx ecx +
cmova eax edi +
cmp edx ebp +
jnz loc_41AF10  +
cmp byte ptr [esi+26Ah] 0 +
mov edi [esp+2Ch] +
jz loc_41AFF3  +
test ebx ebx +
jz loc_41AFD6  +
cmp [esp+1Ch] ebx +
jb loc_41AFD6  +
test al al +
jnz loc_41AFD6  +
nop   +
lea esi [esi+0] +
mov [esp] esi +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_41B048  +
cmp dl 16h +
jnz loc_41B018  +
mov eax esi +
call sub_418840  +
movzx eax byte ptr [esp+2Bh] +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+4] 3 +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_41AB10  +
mov byte ptr [edi+50h] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aUnexpectedEndO +
mov dword ptr [esp+4] 3 +
call sub_41FFB0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 2 +
mov [esp] esi +
call sub_41FFB0  +
jmp loc_41AF60  +
***
test al al +
jz loc_41AF60  +
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_41FFB0  +
jmp loc_41AF60  +
***
mov [esp] esi +
mov [esp+4] eax +
call sub_425030  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSIsNotAValidFi +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41FFB0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea edx [esp+38h] +
add eax 8 +
mov [esp+0Ch] edx +
mov dword ptr [esp+10h] 3Eh +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] esi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+3Ch] 0 +
call sub_417BF0  +
mov edx 1 +
test al al +
mov eax [esp+24h] +
cmovnz eax [esp+3Ch] +
xor ecx ecx +
mov [esp+24h] eax +
mov eax esi +
call sub_419430  +
jmp loc_41AF7E  +
***
jmp loc_41B0B0  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov eax [esp+20h] +
mov edx [esp+24h] +
mov ecx [esp+28h] +
test ebx ebx +
mov esi [esp+30h] +
jz loc_41B0F0  +
mov dword ptr [esp] 0 +
call sub_41A440  +
test eax eax +
jz loc_41B0E5  +
mov edx esi +
mov [eax+0Bh] dl +
mov [eax+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+28h] offset aRegisteringP_1 +
mov dword ptr [esp+24h] 4 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41FFB0  +
***
push ebx  +
sub esp 18h +
movzx eax byte ptr [esp+34h] +
mov ecx [esp+28h] +
mov edx [esp+24h] +
mov ebx [esp+30h] +
mov [esp] eax +
mov eax [esp+20h] +
call sub_41A440  +
test eax eax +
jz loc_41B143  +
mov edx [esp+2Ch] +
mov byte ptr [eax+0Ah] 1 +
mov [eax+0Bh] bl +
mov [eax+0Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
xor edx edx +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0 +
mov eax ebx +
call sub_41A440  +
mov ecx offset aPush_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_41A090 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aPop_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_419E60 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aPoison +
mov edx offset off_474AE2 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_41B620 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aSystem_header +
mov edx offset off_474AE2 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_418890 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aDependency +
mov edx offset off_474AE2 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_41A3E0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aWarning +
mov edx offset off_474AE2 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_419990 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov ecx offset aError_0 +
mov edx offset off_474AE2 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_41A300 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_41A440  +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_41A2F0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+1DCh] +
call sub_418570  +
shl eax 2 +
mov [esp] eax +
call sub_4371B0  +
mov ebx eax +
mov eax [esi+1DCh] +
mov edx ebx +
call sub_4193D0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 8 +
mov eax [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+1DCh] +
mov ecx ebx +
call sub_419360  +
mov [esp+10h] ebx +
add esp 8 +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edi [esp+28h+arg_0] +
lea edx [esp+28h+var_C] +
mov esi [esp+28h+arg_4] +
mov eax edi +
call sub_418930  +
mov dword ptr [esi] 0 +
test eax eax +
mov ebx eax +
jz loc_41B343  +
movzx eax byte ptr [eax+14h] +
xor ecx ecx +
and eax 3Fh +
cmp al 2 +
jz loc_41B327  +
mov [esi] ecx +
xor eax eax +
test ebx ebx +
setz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esp+28h+var_C] +
mov cl 1 +
test edx edx +
jz loc_41B317  +
mov eax ebx +
call sub_418B80  +
xor ecx ecx +
mov eax [eax] +
test eax eax +
setnz cl  +
jmp loc_41B317  +
mov eax [edi+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jnz loc_41B319  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] edi +
call sub_41CF60  +
jmp loc_41B319  +
***
jmp sub_41B370  +
***
mov eax [esp+arg_0] +
add eax 240h +
retn   +
***
mov eax [esp+4] +
add eax 1E0h +
retn   +
***
push edi  +
mov ecx 15h +
push esi  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
lea edi [eax+1E0h] +
movs   +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
mov eax [ebx+180h] +
test eax eax +
jz loc_41B3C7  +
add esp 8 +
pop ebx  +
retn   +
***
call sub_42F220  +
mov [ebx+180h] eax +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov ecx [ebx+1C0h] +
mov eax [ebx+1BCh] +
mov edx ecx +
sub edx eax +
cmp edx 6Fh +
jbe loc_41B4D0  +
mov edx [ebx+1B8h] +
add eax 70h +
mov [ebx+1BCh] eax +
cmp eax edx +
jz loc_41B4F7  +
mov esi [ebx+1C8h] +
add eax esi +
not esi  +
and eax esi +
mov esi [ebx+1B4h] +
mov edi eax +
mov [ebx+1BCh] eax +
sub edi esi +
mov [esp+1Ch+var_10] edi +
mov edi ecx +
sub edi esi +
cmp [esp+1Ch+var_10] edi +
jbe loc_41B451  +
mov [ebx+1BCh] ecx +
mov eax ecx +
test dl 1 +
mov edi edx +
mov [ebx+1B8h] eax +
mov esi 70h +
jnz loc_41B503  +
test edi 2 +
jnz loc_41B520  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jz loc_41B48D  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_41B495  +
mov byte ptr [edi] 0 +
movzx ecx [esp+1Ch+arg_C] +
movzx eax byte ptr [edx+3Ch] +
mov [edx+0Ch] ebp +
mov [edx+8] ebp +
and ecx 1 +
add ecx ecx +
and eax 0FFFFFFFDh +
or eax ecx +
mov [edx+3Ch] al +
mov eax [ebx] +
add ebp [esp+1Ch+arg_8] +
mov byte ptr [edx+38h] 1 +
mov [edx+28h] eax +
mov eax edx +
mov [edx+10h] ebp +
mov [ebx] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+1B0h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] 70h +
call sub_449250  +
mov eax [ebx+1BCh] +
mov ecx [ebx+1C0h] +
jmp loc_41B408  +
or byte ptr [ebx+1D8h] 2 +
jmp loc_41B41F  +
lea edi [edx+1] +
mov si 6Fh +
test edi 2 +
mov byte ptr [edx] 0 +
jz loc_41B473  +
lea esi [esi+0] +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_41B473  +
***
jmp sub_41B540  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov ebx [eax+2F8h] +
call sub_418770  +
test eax eax +
mov ecx eax +
jz loc_41B8B0  +
mov edx [eax+8] +
lea eax [edx+20h] +
and eax 0FFFFFFF0h +
call sub_454930  +
mov ecx [ecx+0Ch] +
sub esp eax +
xor eax eax +
lea esi [esp+38h+var_15] +
and esi 0FFFFFFF0h +
cmp byte ptr [ecx] 4Ch +
lea edi [ecx+edx-1] +
mov edx esi +
setz al  +
lea eax [ecx+eax+1] +
cmp eax edi +
jnb loc_41B6B3  +
mov [ebp+var_1C] ebx +
jmp loc_41B683  +
add eax 1 +
add edx 1 +
cmp edi eax +
mov [edx-1] cl +
jbe loc_41B6B0  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_41B676  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_41B699  +
cmp bl 5Ch +
jnz loc_41B676  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp edi eax +
mov [edx-1] cl +
ja loc_41B683  +
nop   +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_419430  +
mov eax [ebp+arg_0] +
call sub_418840  +
test ebx ebx +
jz loc_41B778  +
mov [ebp+var_1C] 0 +
jmp loc_41B6ED  +
test eax eax +
jz loc_41B778  +
mov [ebp+var_1C] ebx +
mov ebx eax +
mov edi [ebx+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call strcmp  +
test eax eax +
mov eax [ebx] +
jnz loc_41B6E0  +
mov edx [ebp+var_1C] +
test edx edx +
jz loc_41B8FF  +
mov esi [ebp+var_1C] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_421B30  +
test eax eax +
mov esi eax +
jz loc_41B75A  +
mov eax [ebp+arg_0] +
mov eax [eax+21Ch] +
test eax eax +
jz loc_41B73C  +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
cmp dl 1 +
jz loc_41B870  +
test dl dl +
jnz loc_41B860  +
test byte ptr [ebx+10h] 4 +
jz loc_41B780  +
mov eax [ebx+8] +
mov [esp+38h+var_38] eax +
call free  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call free  +
mov [esp+38h+var_38] ebx +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+8] +
mov [esp+38h+var_34] offset asc_474B34 +
mov [esp+38h+var_38] esi +
call strcspn  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_425480  +
add edi [ebx+8] +
and byte ptr [eax+14h] 0C0h +
mov esi eax +
and word ptr [eax+14h] 0D67Fh +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 0Ah +
call strchr  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_2C] 1 +
sub eax edi +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41B3E0  +
test eax eax +
mov edi eax +
jz loc_41B945  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_421420  +
mov eax [ebp+arg_0] +
mov byte ptr [edi+3Dh] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_41EFA0  +
test al al +
jz loc_41B929  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41B540  +
mov eax [esi+18h] +
mov edx [ebx+0Ch] +
mov [eax+8] edx +
mov ecx [esi+18h] +
movzx edx byte ptr [ebx+10h] +
movzx eax byte ptr [ecx+14h] +
mov edi edx +
and edi 1 +
shl edi 2 +
and eax 0FFFFFFFBh +
or eax edi +
mov [ecx+14h] al +
mov ecx [esi+18h] +
shl edx 2 +
and edx 8 +
movzx eax byte ptr [ecx+14h] +
and eax 0FFFFFFF7h +
or eax edx +
mov [ecx+14h] al +
jmp loc_41B75A  +
mov [esp+38h+var_38] esi +
call sub_41EE80  +
jmp loc_41B754  +
mov eax [ebp+arg_0] +
mov eax [eax+1F4h] +
test eax eax +
jz loc_41B893  +
mov edx [ebp+arg_0] +
mov edx [edx+20h] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edx +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+267h] 0 +
jnz loc_41B90D  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
jmp loc_41B74C  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragm_0 +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_4200B0  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_419430  +
mov eax [ebp+arg_0] +
call sub_418840  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+arg_0] +
mov [esi+2F8h] eax +
jmp loc_41B712  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_41C500  +
jmp loc_41B89F  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9EDh +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_406BF0  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9F1h +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_406BF0  +
jmp sub_41B970  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [edx] +
mov [ebp+var_28] ecx +
lea ecx [eax-1] +
add eax 1Dh +
and eax 0FFFFFFF0h +
call sub_454930  +
mov esi [edx+4] +
sub esp eax +
xor eax eax +
lea edi [esp+48h+var_2C+3] +
and edi 0FFFFFFF0h +
cmp byte ptr [esi] 4Ch +
setz al  +
lea edx [esi+eax+1] +
add esi ecx +
cmp edx esi +
mov eax edi +
jnb loc_41BBF2  +
mov [ebp+var_1C] ebx +
jmp loc_41B9C4  +
add edx 1 +
add eax 1 +
cmp esi edx +
mov [eax-1] cl +
jbe loc_41B9F0  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jnz loc_41B9B7  +
movzx ebx byte ptr [edx+1] +
cmp bl 22h +
jz loc_41B9DA  +
cmp bl 5Ch +
jnz loc_41B9B7  +
add edx 1 +
add eax 1 +
add edx 1 +
mov ecx ebx +
cmp esi edx +
mov [eax-1] cl +
ja loc_41B9C4  +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov esi eax +
sub esi edi +
mov byte ptr [eax] 0Ah +
mov eax [ebx+4Ch] +
mov [ebp+var_2C] eax +
mov eax [ebx+0F0h] +
mov [ebp+var_30] eax +
mov eax [ebx+104h] +
mov [esp+48h+var_44] 1Ch +
mov [esp+48h+var_48] 1 +
mov [ebp+var_34] eax +
call sub_4371E0  +
mov [ebx+4Ch] eax +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call sub_41B3E0  +
mov eax [ebx] +
mov edx [eax+28h] +
test edx edx +
jz loc_41BA50  +
mov edx [edx+2Ch] +
mov [eax+2Ch] edx +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+48h+var_48] ebx +
call sub_421420  +
mov esi [ebx+50h] +
mov dword ptr [ebx+50h] offset off_474D04 +
mov [esp+48h+var_48] ebx +
call sub_418DE0  +
mov edx 1 +
mov eax ebx +
call sub_4192D0  +
cmp byte ptr [ebx+58h] 51h +
mov [ebx+50h] esi +
jz loc_41BB37  +
mov [esp+48h+var_48] 10h +
mov esi 1 +
call sub_4371B0  +
mov edi eax +
mov eax [ebx+54h] +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov eax [ebx+1E0h] +
test eax eax +
jz loc_41BAE3  +
mov edx [ebx+0F0h] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call eax  +
mov eax [ebx] +
mov dword ptr [eax+2Ch] 0 +
mov [esp+48h+var_48] ebx +
call sub_41B540  +
mov eax [ebx+4Ch] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebp+var_2C] +
mov [ebx+4Ch] eax +
mov eax [ebp+var_30] +
mov [ebx+0F0h] eax +
mov eax [ebp+var_34] +
mov [ebx+104h] eax +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] 0 +
call sub_41CB60  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] 320h +
call sub_4371B0  +
mov edx 1 +
mov [ebp+var_24] 32h +
mov edi eax +
mov eax [ebx+54h] +
mov ecx edi +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov edi ebx +
mov ebx edx +
nop   +
mov edx ebx +
add ebx 1 +
shl edx 4 +
mov [esp+48h+var_48] edi +
lea esi [ecx+edx] +
mov [ebp+var_20] edx +
mov [ebp+var_1C] ecx +
call sub_41EE00  +
mov edx [ebp+var_20] +
mov ecx [eax] +
mov [esi] ecx +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov eax [eax+0Ch] +
mov ecx [ebp+var_1C] +
or word ptr [esi+6] 400h +
mov [esi+0Ch] eax +
mov eax [ebp+var_28] +
cmp byte ptr [ecx+edx+4] 52h +
mov [esi] eax +
jz loc_41BBE5  +
cmp [ebp+var_24] ebx +
jnz loc_41BB70  +
mov eax [ebp+var_24] +
mov [esp+48h+var_48] ecx +
lea eax [eax+eax*2] +
mov edx eax +
shr edx 1Fh +
add eax edx +
mov [ebp+var_24] eax +
sar [ebp+var_24] 1 +
mov eax [ebp+var_24] +
shl eax 4 +
mov [esp+48h+var_44] eax +
call sub_437230  +
mov ecx eax +
jmp loc_41BB70  +
mov edx ebx +
mov ebx edi +
mov esi edx +
mov edi ecx +
jmp loc_41BAE3  +
xor esi esi +
jmp loc_41B9F7  +
***
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_418770  +
mov byte ptr [ebx+58h] 53h +
test eax eax +
jz loc_41BC30  +
mov ecx [esp+18h+arg_4] +
lea edx [eax+8] +
mov eax ebx +
call sub_41B970  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset a_pragmaTakesAP +
mov [esp+18h+var_14] 3 +
call sub_41FFB0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_C] 1 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_41B3E0  +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [ebx+20h] eax +
call sub_421420  +
lea eax [esi+esi*2] +
cmp byte ptr [ebx+270h] 0 +
lea eax ds:474C80h[eax*4] +
mov [ebx+50h] eax +
jz loc_41BCB2  +
mov eax ebx +
call sub_419200  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+18h+var_18] ebx +
call eax  +
mov eax ebx +
mov edx 1 +
call sub_4192D0  +
mov [esp+18h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41B540  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
mov [ebp+var_1C] esi +
call memcpy  +
mov [esp+28h+var_24] 3Dh +
mov [esp+28h+var_28] edi +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
jz loc_41BD55  +
sub eax edi +
mov byte ptr [ebx+eax] 20h +
mov eax [ebp+arg_0] +
mov ecx ebx +
xor edx edx +
mov byte ptr [ebx+esi] 0Ah +
mov [esp+28h+var_28] esi +
call sub_41BC50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx+edx] 20h +
lea esi [edx+2] +
mov byte ptr [ebx+edx+1] 31h +
jmp loc_41BD3A  +
***
push ebx  +
sub esp 18h +
lea eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4489B0  +
mov ebx eax +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_41BCE0  +
mov [esp] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
xor edx edx +
mov [esp+28h+var_28] esi +
call sub_41BC50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+0Ch] +
mov [esp] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call memcpy  +
mov eax [ebp+8] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
mov edx 7 +
mov [esp] esi +
call sub_41BC50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp] esi +
mov [ebp-24h] ecx +
mov [ebp-1Ch] eax +
call strlen  +
mov dword ptr [esp+4] 3Dh +
mov [esp] esi +
mov edi eax +
call strchr  +
mov [ebp-20h] eax +
lea eax [edi+20h] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebx +
call memcpy  +
mov ecx [ebp-20h] +
mov edx [ebp-24h] +
test ecx ecx +
jz loc_41BEF2  +
sub ecx esi +
mov byte ptr [ebx+ecx] 28h +
lea eax [edi+1] +
mov byte ptr [ebx+edi] 29h +
mov byte ptr [ebx+eax] 0Ah +
mov ecx ebx +
mov [esp] eax +
mov eax [ebp-1Ch] +
call sub_41BC50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
jmp loc_41BED9  +
***
mov edx [esp+8] +
mov ecx 10h +
mov eax [esp+4] +
jmp loc_41BE70  +
***
mov edx [esp+8] +
mov ecx 11h +
mov eax [esp+4] +
jmp loc_41BE70  +
***
mov esi offset unk_474C88 +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+14h+arg_0] +
movzx edx word ptr [esi] +
add esi 0Ch +
mov eax [esi-10h] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] eax +
call sub_425480  +
lea edx [ebx+ebx+1] +
add ebx 1 +
and ebx 7Fh +
cmp esi offset unk_474D6C +
mov [eax+0Ch] dl +
jnz loc_41BF51  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
jmp sub_418C10  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
jz loc_41BFF8  +
cmp ecx 2 +
jz loc_41BFF3  +
test ecx ecx +
jz loc_41BFC0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov esi [eax] +
test esi esi +
jz loc_41BFB4  +
test ebx ebx +
jz loc_41C000  +
test ecx ecx +
jnz loc_41BFE0  +
mov ecx [eax+14h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
cmp ecx 2 +
jz loc_41C006  +
cmp ecx 1 +
lea eax [esi+edx*4] +
jnz loc_41BFB6  +
mov edx [eax] +
mov [ebx] edx +
jmp loc_41BFB6  +
mov esi [eax+4] +
jmp loc_41BFC2  +
lea esi [eax+8] +
jmp loc_41BFC2  +
lea eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
mov ecx [eax+18h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
xor ebx ebx +
sub esp 14h +
cmp [esp+1Ch+arg_8] 0 +
lea edx [esp+1Ch+var_C] +
mov ecx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_C] 0 +
cmovnz ebx edx +
mov edx [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] ebx +
call sub_41BFA0  +
mov [eax] esi +
mov eax [esp+1Ch+var_C] +
test eax eax +
jz loc_41C05C  +
mov [eax] edi +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
lea ecx [esp+14h+var_4] +
mov [esp+14h+var_14] ecx +
mov ecx edx +
xor edx edx +
mov [esp+14h+var_4] 0 +
call sub_41BFA0  +
test eax eax +
jz loc_41C097  +
mov eax [esp+14h+var_4] +
add esp 14h +
retn   +
xor eax eax +
jmp loc_41C093  +
***
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
test ecx ecx +
lea edi ds:0[edx*4] +
jz loc_41C0C2  +
shl edx 4 +
mov [esp+14h+var_14] edx +
call sub_4371B0  +
mov [ebx] eax +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] esi +
call sub_422710  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_41C100  +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 1Ch +
mov esi 1Ch +
call sub_4371B0  +
test al 1 +
mov ecx eax +
jnz loc_41C170  +
test cl 2 +
jnz loc_41C160  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_41C123  +
add ecx edx +
test esi 2 +
jz loc_41C144  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_41C14C  +
mov byte ptr [ecx] 0 +
mov edx [ebx] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [edx] eax +
jmp loc_41C0F0  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub esi 2 +
jmp loc_41C11C  +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 1Bh +
jmp loc_41C117  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov edi [esp+28h+arg_0] +
jz loc_41C1E0  +
add eax 4Ch +
call sub_41C0E0  +
mov [eax+10h] esi +
mov ebx eax +
mov dword ptr [eax+18h] 2 +
mov [esp+28h+var_28] 0Ch +
call sub_4371B0  +
mov ecx [esp+28h+arg_4] +
mov [eax] ebp +
mov [eax+4] edi +
mov [eax+8] edi +
mov [ebx+14h] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
mov eax [esp+28h+arg_8] +
lea eax [ecx+eax*4] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [eax+4Ch] +
test edx edx +
jz loc_41C193  +
cmp dword ptr [edx+18h] 2 +
jz loc_41C1F2  +
mov ebp [edx+14h] +
jmp loc_41C193  +
mov edx [edx+14h] +
mov ebp [edx] +
jmp loc_41C193  +
***
push edi  +
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [eax+24h] +
mov ebx [edx] +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
lea edx [ebx+1] +
mov eax edx +
shl eax 4 +
sub ecx esi +
cmp ecx eax +
jnb loc_41C2C6  +
lea eax [ebp+24h] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_20] 10h +
mov [esp+28h+var_28] ebp +
call sub_4228C0  +
mov eax [ebp+24h] +
mov ebx [edi] +
mov esi [eax+8] +
lea edx [ebx+1] +
mov [edi] edx +
shl ebx 4 +
add esp 1Ch +
lea eax [esi+ebx] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0F0h] +
mov [esp+44h+var_24] eax +
mov eax edi +
mov [esp+44h+var_28] edx +
lea edx [edx+0Ch] +
call sub_41C280  +
mov [edi+0F0h] eax +
mov [esp+44h+var_44] edi +
call sub_423800  +
mov [edi+0F0h] ebx +
mov [esp+44h+var_18] eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_41C4BB  +
mov ecx [esp+44h+var_24] +
cmp byte ptr [ecx+25Ah] 0 +
jz loc_41C4D7  +
mov ecx [esp+44h+var_28] +
movzx ebx word ptr [ecx+10h] +
test bx bx +
jz loc_41C4D7  +
cmp al 38h +
jz loc_41C353  +
cmp al 3Eh +
jnz loc_41C4D7  +
mov ecx [esp+44h+var_18] +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
lea ecx [eax+1] +
lea ebp [eax+edx-1] +
cmp ebp ecx +
jbe loc_41C4D7  +
mov esi ecx +
mov ecx ebp +
cmp ecx esi +
jbe loc_41C4B0  +
movzx eax byte ptr [esi] +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_479A60[edx+edx] +
test dh 2 +
jz loc_41C3B6  +
jmp loc_41C4F0  +
add esi 1 +
cmp esi ecx +
jz loc_41C4B0  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_479A60[edx+edx] +
test dh 2 +
jnz loc_41C4F0  +
cmp al 24h +
jnz loc_41C394  +
cmp byte ptr [edi+262h] 0 +
jz loc_41C394  +
cmp ecx esi +
jbe loc_41C4B0  +
movzx eax byte ptr [esi] +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_479A60[edx+edx] +
jmp loc_41C3F1  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_479A60[edx+edx] +
test dx 204h +
jnz loc_41C405  +
cmp al 24h +
jnz loc_41C40C  +
cmp byte ptr [edi+262h] 0 +
jz loc_41C40C  +
add esi 1 +
cmp ecx esi +
ja loc_41C3E3  +
mov edi esi +
sub edi [esp+44h+var_30] +
test ebx ebx +
jz loc_41C49C  +
mov eax [esp+44h+var_28] +
lea edx [ebx+1] +
mov ebx 1 +
mov [esp+44h+var_1C] esi +
mov [esp+44h+var_20] ecx +
mov ebp [eax] +
mov esi ebp +
mov ebp edx +
jmp loc_41C441  +
add ebx 1 +
cmp ebx ebp +
jz loc_41C4E3  +
mov eax [esi+ebx*4-4] +
cmp [eax+4] edi +
jnz loc_41C436  +
mov eax [eax] +
mov [esp+44h+var_3C] edi +
mov [esp+44h+var_2C] eax +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_41C436  +
mov eax [esp+44h+var_2C] +
mov ecx [esp+44h+var_20] +
mov [esp+44h+var_3C] offset aMacroArgumentS +
mov esi [esp+44h+var_1C] +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_30] ecx +
mov [esp+44h+var_44] eax +
call sub_41FFB0  +
mov ecx [esp+44h+var_30] +
cmp esi ecx +
jnb loc_41C4D7  +
mov eax [esp+44h+var_28] +
cmp ecx esi +
movzx ebx word ptr [eax+10h] +
ja loc_41C378  +
mov [esp+44h+var_30] esi +
xor edi edi +
jmp loc_41C412  +
mov ecx [esp+44h+var_18] +
mov edx [ecx+8] +
test byte ptr [edx+15h] 10h +
jz loc_41C325  +
mov byte ptr [ecx+4] 50h +
movzx eax word ptr [edx+18h] +
mov [ecx+8] eax +
mov eax [esp+44h+var_18] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+44h+var_20] +
mov esi [esp+44h+var_1C] +
jmp loc_41C49C  +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
jmp loc_41C3F1  +
***
sub esp 24h +
mov ebx [esp+24h+arg_4] +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41C520  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test byte ptr [ebx+15h] 1 +
jnz loc_41C514  +
mov esi [ebx+18h] +
test byte ptr [esi+14h] 8 +
jnz loc_41C514  +
mov eax [esp+24h+arg_0] +
mov edx [esi+8] +
mov eax [eax+1Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_40F760  +
mov eax [eax+10h] +
test eax eax +
jns loc_41C514  +
mov eax [esi+8] +
mov edx [ebx] +
mov [esp+24h+var_14] offset aMacroSIsNotUse +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_20] 0Eh +
mov [esp+24h+var_24] eax +
call sub_420100  +
jmp loc_41C514  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov eax [ebx+18h] +
cmp eax 0Ah +
ja loc_41C7B0  +
jmp ds:off_474F14[eax*4]  +
mov eax [esi+224h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ebx eax +
nop   +
mov [esp+3Ch+var_38] 15h +
mov [esp+3Ch+var_3C] esi +
call sub_422950  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] offset aU_1 +
mov [esp+3Ch+var_3C] eax +
mov edi eax +
call sub_45A790  +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+270h] 0 +
jz loc_41C846  +
mov edx [esi+1Ch] +
mov eax [edx+2Ch] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_40FDE0  +
mov ebx eax +
jmp loc_41C5B0  +
cmp byte ptr [esi+256h] 0 +
jnz loc_41C823  +
mov eax [esi+154h] +
test eax eax +
jz loc_41C899  +
cmp dword ptr [ebx+18h] 1 +
jz loc_41C871  +
mov edi [esi+158h] +
test edi edi +
jnz loc_41C5D6  +
mov ebx 1 +
jmp loc_41C5B0  +
cmp eax 2 +
jz loc_41C880  +
mov eax [esi+0A0h] +
mov [esp+3Ch+var_3C] eax +
call sub_42ECA0  +
test eax eax +
mov ebx eax +
jz loc_41CA08  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+eax+3] +
mov [esp+3Ch+var_38] eax +
call sub_422950  +
mov edi eax +
mov byte ptr [eax] 22h +
lea edx [eax+1] +
lea eax [ebx+ebp] +
cmp ebx eax +
jz loc_41C6AC  +
add ebx 1 +
movzx ecx byte ptr [ebx-1] +
cmp cl 22h +
jz loc_41C69F  +
cmp cl 5Ch +
jnz loc_41C7D8  +
mov byte ptr [edx] 5Ch +
add edx 2 +
mov [edx-1] cl +
cmp ebx eax +
jnz loc_41C68A  +
mov byte ptr [edx] 22h +
mov eax edi +
mov byte ptr [edx+1] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
mov ebx [eax+20h] +
sub ebx 1 +
jmp loc_41C5B0  +
mov eax [esi] +
test eax eax +
jz loc_41C632  +
xor ebx ebx +
cmp byte ptr [eax+3Dh] 0 +
setz bl  +
jmp loc_41C5B0  +
cmp byte ptr [esi+256h] 0 +
jnz loc_41C800  +
mov [esp+3Ch+var_3C] esi +
call sub_42ED40  +
mov edi [eax+30h] +
mov ebx eax +
test edi edi +
jnz loc_41C62E  +
mov [esp+3Ch+var_3C] eax +
call sub_42ED50  +
test eax eax +
jz loc_41C9D7  +
mov [esp+3Ch+var_3C] eax +
call sub_42ECB0  +
test eax eax +
jz loc_41C9DF  +
add eax 24h +
mov [esp+3Ch+var_3C] eax +
call localtime  +
test eax eax +
jz loc_41C9DF  +
mov [esp+3Ch+var_3C] eax +
call asctime  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_20] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+2] +
mov [esp+3Ch+var_38] eax +
call sub_422950  +
mov edx [esp+3Ch+var_20] +
mov byte ptr [eax] 22h +
mov edi eax +
lea eax [eax+1] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov byte ptr [edi+ebp] 22h +
mov [ebx+30h] edi +
jmp loc_41C62E  +
cmp byte ptr [esi+2A8h] 0 +
jz loc_41C795  +
cmp byte ptr [esi+8] 0 +
jnz loc_41C7E2  +
mov ebx [esi+2E8h] +
lea eax [ebx+1] +
mov [esi+2E8h] eax +
jmp loc_41C5B0  +
mov eax [ebx] +
mov ebx 1 +
mov [esp+3Ch+var_34] offset aInvalidBuiltIn +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41FFB0  +
jmp loc_41C5B0  +
mov [edx] cl +
add edx 1 +
jmp loc_41C686  +
mov [esp+3Ch+var_34] offset a__counter__Exp +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
call sub_41FFB0  +
jmp loc_41C795  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41FFF0  +
jmp loc_41C6F5  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41FFF0  +
jmp loc_41C610  +
mov eax [esi+1Ch] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_40FF50  +
mov edx [esi+1Ch] +
jmp loc_41C5F3  +
mov edi [esi+154h] +
jmp loc_41C62E  +
mov eax [esi+1Ch] +
mov edx [eax+2Ch] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_40FE30  +
mov ebx eax +
jmp loc_41C661  +
mov eax [esi+15Ch] +
cmp eax 0FFFFFFFEh +
jz loc_41C94F  +
test eax eax +
js loc_41C969  +
lea eax [esi+15Ch] +
mov [esp+3Ch+var_3C] eax +
call gmtime  +
mov edi eax +
test edi edi +
jz loc_41C9A6  +
mov [esp+3Ch+var_38] 0Eh +
mov [esp+3Ch+var_3C] esi +
call sub_422950  +
mov ecx [edi+14h] +
mov edx [edi+0Ch] +
add ecx 76Ch +
mov [esi+154h] eax +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] edx +
mov edx [edi+10h] +
mov [esp+3Ch+var_38] offset aS2d4d +
mov [esp+3Ch+var_3C] eax +
mov edx ds:off_475680[edx*4] +
mov [esp+3Ch+var_34] edx +
call sub_45A790  +
mov [esp+3Ch+var_38] 0Bh +
mov [esp+3Ch+var_3C] esi +
call sub_422950  +
mov ebp [edi] +
mov ecx [edi+4] +
mov edx [edi+8] +
mov [esi+158h] eax +
mov [esp+3Ch+var_2C] ebp +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset a02d02d02d +
mov [esp+3Ch+var_3C] eax +
call sub_45A790  +
jmp loc_41C61E  +
mov eax [esi+22Ch] +
test eax eax +
jz loc_41C969  +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov [esi+15Ch] eax +
jmp loc_41C8A8  +
mov edi ds:__imp__errno +
call edi  +
mov dword ptr [eax] 0 +
mov [esp+3Ch+var_3C] 0 +
call time  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_10] eax +
jz loc_41C99F  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call localtime  +
mov edi eax +
jmp loc_41C8C0  +
call edi  +
cmp dword ptr [eax] 0 +
jz loc_41C98C  +
mov [esp+3Ch+var_34] offset aCouldNotDeterm +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_4202B0  +
mov dword ptr [esi+154h] offset a????????? +
mov dword ptr [esi+158h] offset a?????? +
jmp loc_41C61E  +
mov edi [ebx+30h] +
jmp loc_41C62E  +
mov [esp+3Ch+var_34] offset aCouldNotDete_0 +
mov edi offset a?????????????? +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_4202B0  +
mov dword ptr [ebx+30h] offset a?????????????? +
jmp loc_41C5D6  +
mov [esp+3Ch+var_34] offset a_cpp_builtin_m +
mov [esp+3Ch+var_38] 12Eh +
mov [esp+3Ch+var_3C] offset a____GccLibcppM +
call sub_406BF0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov edx [esp+40h+var_34] +
mov ebx [esp+40h+var_30] +
mov eax [esp+40h+var_38] +
add ebx edx +
nop   +
cmp edx ebx +
jz loc_41CA62  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 22h +
jz loc_41CA55  +
cmp cl 5Ch +
jnz loc_41CA64  +
mov byte ptr [eax] 5Ch +
add eax 2 +
mov [eax-1] cl +
cmp edx ebx +
jnz loc_41CA44  +
pop ebx  +
retn   +
mov [eax] cl +
add eax 1 +
jmp loc_41CA40  +
***
sub esp 24h +
mov ecx [esp+24h+arg_4] +
mov eax [esp+24h+arg_C] +
mov ebx [esp+24h+arg_8] +
movzx edx word ptr [ecx+10h] +
cmp edx eax +
jz loc_41CB30  +
jbe loc_41CB14  +
lea esi [eax+1] +
cmp edx esi +
jnz loc_41CAE0  +
movzx ecx byte ptr [ecx+14h] +
test cl 2 +
jz loc_41CAE0  +
mov eax [esp+24h+arg_0] +
mov ebx 1 +
cmp byte ptr [eax+26Ah] 0 +
jz loc_41CB0C  +
and ecx 4 +
jnz loc_41CB0C  +
cmp byte ptr [eax+248h] 0 +
jz loc_41CB40  +
mov [esp+24h+var_1C] offset aIsoC11Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_41FFB0  +
jmp loc_41CB0C  +
mov ecx [ebx] +
mov [esp+24h+var_10] eax +
mov [esp+24h+var_14] edx +
mov [esp+24h+var_1C] offset aMacroSRequires +
mov [esp+24h+var_18] ecx +
mov eax [esp+24h+arg_0] +
xor ebx ebx +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] eax +
call sub_41FFB0  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov ecx [ebx] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_14] eax +
mov [esp+24h+var_1C] offset aMacroSPassedUA +
mov [esp+24h+var_18] ecx +
jmp loc_41CAF6  +
mov ebx 1 +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_1C] offset aIsoC99Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_41FFB0  +
jmp loc_41CB0C  +
***
sub esp 4 +
mov ebx [esp+4+arg_4] +
mov esi [esp+4+arg_8] +
test ebx ebx +
jz loc_41CBA3  +
mov eax [esp+4+arg_0] +
add eax 4Ch +
call sub_41C0E0  +
mov edx [esp+4+arg_C] +
shl edx 4 +
mov [eax+8] esi +
add esi edx +
mov dword ptr [eax+18h] 1 +
mov [eax+14h] ebx +
mov dword ptr [eax+10h] 0 +
mov [eax+0Ch] esi +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+4+arg_0] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_41CB71  +
cmp dword ptr [eax+18h] 2 +
jz loc_41CBC0  +
mov ebx [eax+14h] +
jmp loc_41CB71  +
mov eax [eax+14h] +
mov ebx [eax] +
jmp loc_41CB71  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [edx+18h] 7 +
jz loc_41CCE0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_41C580  +
mov [esp+48h+var_48] eax +
mov [ebp+var_2C] eax +
call strlen  +
mov ecx eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
mov eax [ebp+var_2C] +
lea edx [esp+48h+var_2C+3] +
and edx 0FFFFFFF0h +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] edx +
call memcpy  +
mov edx [ebp+var_2C] +
mov ecx [ebp+var_30] +
mov byte ptr [edx+ecx] 0Ah +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
call sub_41B3E0  +
mov [esp+48h+var_48] ebx +
call sub_421420  +
mov [esp+48h+var_48] ebx +
call sub_421CF0  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_423800  +
mov [ebp+var_2C] eax +
mov [eax] edi +
mov eax [ebx+4Ch] +
cmp dword ptr [eax+18h] 2 +
jz loc_41CD00  +
mov eax [ebp+var_2C] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_41CB60  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jz loc_41CCCA  +
mov eax [esi] +
mov [esp+48h+var_40] offset aInvalidBuiltIn +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_41FFB0  +
mov [esp+48h+var_48] ebx +
call sub_41B540  +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [ebx+8] 0 +
jnz loc_41CCD7  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] ecx +
call sub_41BC00  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_1C] +
mov edx 1 +
mov eax ebx +
mov [ebp+var_1C] 0 +
call sub_41C0A0  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] esi +
mov [ebp+var_30] eax +
mov eax [ebx+1Ch] +
mov [esp+48h+var_48] eax +
call sub_40F2B0  +
mov edx [ebx+1Ch] +
mov edi [ebp+var_30] +
mov ecx [ebp+var_2C] +
mov edx [edx+4Ch] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov eax edi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edx +
mov edx [ebp+var_1C] +
call sub_41C200  +
mov eax [edi+4] +
mov ecx edi +
mov [esp+48h+var_40] 1 +
mov edx esi +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
mov eax ebx +
call sub_41C180  +
jmp loc_41CCA3  +
***
sub esp 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi+4Ch] +
lea eax [edi+30h] +
cmp ebx eax +
jz loc_41CE9E  +
mov esi [ebx+14h] +
test esi esi +
jz loc_41CE1B  +
cmp dword ptr [ebx+18h] 2 +
jz loc_41CE46  +
mov eax [ebx+4] +
test eax eax +
jz loc_41CE10  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41CE90  +
cmp esi eax +
mov ebp esi +
jz loc_41CE78  +
and word ptr [esi+14h] 0F7FFh +
cmp [edi+68h] esi +
jz loc_41CE7F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_41CE2A  +
mov [esp+1Ch+var_1C] eax +
call sub_422920  +
mov eax [ebx+4] +
mov [edi+4Ch] eax +
mov dword ptr [eax] 0 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov edx [ebx+10h] +
mov ebp [esi] +
test edx edx +
jz loc_41CE65  +
mov eax [esi+4] +
test eax eax +
jz loc_41CE65  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov [esp+1Ch+var_1C] esi +
call free  +
test ebp ebp +
mov dword ptr [ebx+14h] 0 +
jnz loc_41CE97  +
mov esi ebp +
cmp [edi+68h] esi +
jnz loc_41CE1B  +
mov eax [ebx+4] +
test eax eax +
jnz loc_41CE1B  +
mov dword ptr [edi+68h] 0 +
jmp loc_41CE1B  +
mov eax [eax] +
jmp loc_41CE0A  +
mov esi ebp +
jmp loc_41CDF6  +
mov [esp+1Ch+var_14] offset a_cpp_pop_conte +
mov [esp+1Ch+var_18] 8FAh +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_406BF0  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41CEE6  +
test eax eax +
jz loc_41CEF0  +
mov eax [eax+18h] +
test eax eax +
jz loc_41CEF0  +
movzx eax byte ptr [eax+14h] +
shr al 2 +
and eax 1 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_41CED4  +
lea esi [esi+0] +
xor eax eax +
retn   +
***
mov edx [esp+arg_4] +
add [eax+108h] edx +
nop   +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_41CF50  +
mov ebx [eax+0F0h] +
lea ecx [ebx-10h] +
mov ebx [eax+104h] +
mov [eax+0F0h] ecx +
cmp ecx [ebx+8] +
jnz loc_41CF10  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_41CF10  +
mov [eax+104h] ecx +
mov ecx [ecx+0Ch] +
sub edx 1 +
cmp edx 0FFFFFFFFh +
mov [eax+0F0h] ecx +
jnz loc_41CF18  +
pop ebx  +
retn   +
***
sub esp 1Ch +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [ebp+var_28] edx +
mov [esp+48h+var_48] eax +
call sub_421E20  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_421E20  +
lea eax [esi+eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
mov eax [edi] +
lea esi [esp+48h+var_1D] +
and esi 0FFFFFFF0h +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_421EC0  +
mov edx [edi] +
cmp byte ptr [edx+4] 7 +
mov [ebp+var_1D+1] eax +
jz loc_41D170  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+4] 53h +
jnz loc_41D17C  +
mov byte ptr [eax] 0Ah +
sub eax esi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_41B3E0  +
mov [esp+48h+var_48] ebx +
call sub_421420  +
mov [esp+48h+var_48] ebx +
call sub_421CF0  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_423800  +
mov edx [ebx] +
mov ecx [edx+10h] +
cmp [edx] ecx +
jz loc_41D1B0  +
mov ecx [eax] +
mov [esp+48h+var_48] ebx +
mov [ebp+var_24] eax +
mov [ebp-20h] ecx +
call sub_41B540  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_41CF60  +
mov eax [ebp+var_1D+1] +
mov byte ptr [eax] 0 +
mov edx [edi] +
mov eax [ebp+var_24] +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov ecx [ebp-20h] +
mov [eax+0Ch] edx +
mov [edi] eax +
xor edi edi +
and word ptr [eax+6] 0FFF7h +
cmp dword ptr [ebx+244h] 0Fh +
mov [eax] ecx +
jz loc_41D160  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_425030  +
mov [esp+48h+var_34] esi +
mov [esp+48h+var_38] offset aPastingSAndSDo +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_30] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_40] eax +
call sub_4200B0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4] 0 +
jnz loc_41D1A0  +
mov eax [ebp+var_1D+1] +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_421EC0  +
jmp loc_41D082  +
mov edx [ebp+var_1D+1] +
mov eax edx +
add eax 1 +
mov byte ptr [edx] 20h +
jmp loc_41D075  +
mov [edi] eax +
mov edi 1 +
mov [esp+48h+var_48] ebx +
call sub_41B540  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+98h+var_64] edx +
mov byte ptr [ebp+0ECh] 0 +
mov byte ptr [ebp+0Bh] 0 +
mov byte ptr [ebp+6Ch] 1 +
movzx edx word ptr [edx+14h] +
mov [esp+98h+var_58] ecx +
mov eax edx +
shr ax 6 +
mov ecx eax +
and cx 84h +
cmp cx 4 +
jz loc_41D383  +
test al 4 +
jnz loc_41D338  +
mov esi [esp+98h+var_64] +
xor edi edi +
mov esi [esi+18h] +
test byte ptr [esi+14h] 1 +
mov [esp+98h+var_60] esi +
jnz loc_41D3C1  +
mov esi [esp+98h+var_64] +
mov ecx eax +
or ecx 20h +
shl ecx 6 +
movzx edx word ptr [esi+14h] +
and edx 3Fh +
or edx ecx +
test al 80h +
mov [esi+14h] dx +
jnz loc_41D272  +
or al 0A0h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov [esi+14h] dx +
mov eax [ebp+214h] +
test eax eax +
jz loc_41D272  +
mov edx [ebp+20h] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
call eax  +
mov eax [ebp+220h] +
test eax eax +
jz loc_41D294  +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_94] esi +
call eax  +
mov esi [esp+98h+var_60] +
movzx eax byte ptr [esi+14h] +
or eax 8 +
cmp word ptr [esi+10h] 0 +
mov [esi+14h] al +
jz loc_41D4A7  +
test edi edi +
jz loc_41D5C5  +
cmp byte ptr [ebp+8] 0 +
jz loc_41D58B  +
lea eax [ebp+4Ch] +
mov [esp+98h+var_74] eax +
mov [esp+98h+var_78] ebp +
jmp loc_41D2D2  +
mov edi esi +
mov eax [esp+98h+var_74] +
mov ebp [edi+4] +
mov esi [edi] +
mov ebx [edi+8] +
mov dword ptr [edi] 0 +
call sub_41C0E0  +
sub ebx ebp +
sar ebx 2 +
lea edx [ebp+ebx*4+0] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+10h] edi +
mov [eax+8] ebp +
mov [eax+0Ch] edx +
mov eax [esp+98h+var_78] +
cmp byte ptr [eax+26Dh] 0 +
jnz loc_41D31C  +
add ds:dword_48026C ebx +
test esi esi +
jnz loc_41D2D0  +
mov ebp [esp+98h+var_78] +
mov eax 2 +
mov byte ptr [ebp+6Ch] 0 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+68h] +
mov byte ptr [ebp+6Ch] 0 +
test byte ptr [eax+15h] 1 +
jz loc_41D368  +
mov eax [ebp+64h] +
mov ecx [esp+98h+arg_0] +
mov edx [esp+98h+var_64] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41CBD0  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+18h] +
test byte ptr [eax+14h] 1 +
jz loc_41D345  +
mov eax [ebp+0F0h] +
mov eax [eax-10h] +
mov [esp+98h+arg_0] eax +
jmp loc_41D348  +
or al 80h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov eax [esp+98h+var_64] +
mov [eax+14h] dx +
mov eax [ebp+228h] +
test eax eax +
jz loc_41D3F7  +
mov edi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edi +
call eax  +
test al al +
jz loc_41D3F7  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_41D20E  +
add byte ptr [ebp+10h] 1 +
xor ebx ebx +
add dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 1 +
mov [esp+98h+var_98] ebp +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jnz loc_41D426  +
test ebx ebx +
jz loc_41D422  +
test byte ptr [ebx+6] 1 +
jnz loc_41D3D2  +
mov edx [eax+8] +
test edx edx +
cmovz ebx eax +
jmp loc_41D3D2  +
mov eax [ebp+214h] +
test eax eax +
jz loc_41D3B0  +
mov edx [ebp+20h] +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_90] esi +
call eax  +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_41D20E  +
mov ebx eax +
jmp loc_41D3D2  +
cmp dl 14h +
jz loc_41D629  +
cmp dl 16h +
jnz loc_41D43E  +
lea edx [ebp+170h] +
cmp eax edx +
jnz loc_41D46E  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_41CF60  +
test ebx ebx +
jz loc_41D46E  +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_41CB60  +
sub dword ptr [ebp+10Ch] 1 +
xor edi edi +
sub byte ptr [ebp+10h] 1 +
mov byte ptr [ebp+11h] 0 +
cmp byte ptr [ebp+25Ah] 0 +
jnz loc_41D5F1  +
test edi edi +
jz loc_41D49C  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] ebp +
call sub_4226E0  +
mov byte ptr [ebp+6Ch] 0 +
xor eax eax +
jmp loc_41D35D  +
test al 20h +
jnz loc_41E758  +
mov eax [esp+98h+var_60] +
mov esi [eax+0Ch] +
mov ebx [eax+4] +
mov [esp+98h+var_74] esi +
cmp byte ptr [ebp+26Dh] 0 +
jz loc_41D5D3  +
mov esi [esp+98h+var_74] +
lea ecx [esp+98h+var_1C] +
mov eax ebp +
mov [esp+98h+var_1C] 0 +
mov edx esi +
call sub_41C0A0  +
mov ecx [esp+98h+arg_0] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_78] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_64] +
mov [esp+98h+var_8C] esi +
xor esi esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] ecx +
call sub_40F2B0  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_41D557  +
mov [esp+98h+var_6C] ebp +
mov ebp [esp+98h+var_74] +
mov [esp+98h+var_70] edi +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
add ebx 10h +
mov edx [esp+98h+var_1C] +
mov [esp+98h+var_8C] esi +
add esi 1 +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_78] +
call sub_41C200  +
cmp esi ebp +
jnz loc_41D525  +
mov edi [esp+98h+var_70] +
mov ebp [esp+98h+var_6C] +
mov ecx [esp+98h+var_78] +
mov esi [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+4] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_1C] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41C180  +
mov eax [esp+98h+var_74] +
add ds:dword_48026C eax +
jmp loc_41D2AD  +
mov [esp+98h+var_98] ebp +
call sub_421CF0  +
mov esi [esp+98h+var_58] +
xor edx edx +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] dx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] eax +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_41CB60  +
jmp loc_41D2BF  +
mov byte ptr [ebp+6Ch] 0 +
mov eax 1 +
jmp loc_41D35D  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] eax +
call sub_41CB60  +
jmp loc_41D57C  +
mov eax [esp+98h+var_64] +
mov eax [eax+18h] +
test byte ptr [eax+14h] 4 +
jnz loc_41D48C  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aFunctionLikeMa +
mov [esp+98h+var_94] 6 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_41FFF0  +
jmp loc_41D48C  +
mov eax [esp+98h+var_64] +
mov byte ptr [ebp+11h] 2 +
cmp byte ptr [ebp+26Dh] 0 +
mov eax [eax+18h] +
setnz byte ptr [esp+98h+var_70]  +
movzx ebx word ptr [eax+10h] +
mov [esp+98h+var_5C] eax +
test bx bx +
jz loc_41E409  +
imul eax ebx +
imul ebx ebx +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_422710  +
mov edi eax +
mov [esp+98h+var_40] eax +
mov eax [eax+4] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov esi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_44] eax +
call memset  +
mov eax esi +
add eax ebx +
lea ecx [ebp+170h] +
mov [edi+8] eax +
mov [esp+98h+var_74] edi +
xor edi edi +
mov [esp+98h+var_48] ecx +
mov [esp+98h+var_50] esi +
mov [esp+98h+var_54] 0 +
lea esi [esi+0] +
mov esi [esp+98h+var_50] +
add [esp+98h+var_54] 1 +
cmp byte ptr [esp+98h+var_70] 0 +
mov [esi] eax +
jnz loc_41D9AF  +
mov [esp+98h+var_78] 2 +
mov ecx [esp+98h+var_78] +
xor ebx ebx +
mov [esp+98h+var_6C] 32h +
mov esi [esp+98h+var_50] +
mov [esp+98h+var_68] 0 +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jb loc_41D79C  +
cmp byte ptr [esp+98h+var_70] 0 +
jz loc_41D70D  +
mov eax [esp+98h+var_6C] +
cmp [esp+98h+var_78] eax +
ja loc_41D7E6  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_41E870  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 53h +
jz loc_41D7C0  +
cmp al 14h +
jz loc_41D7C8  +
cmp al 15h +
jz loc_41D7D0  +
cmp al 13h +
jz loc_41D810  +
cmp al 16h +
jz loc_41D838  +
cmp al 25h +
jz loc_41D8E6  +
cmp al 51h +
jz loc_41D8F5  +
xor eax eax +
mov ecx [esp+98h+var_1C] +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_94] 0 +
setnz al  +
add ebx 1 +
mov [esp+98h+var_90] eax +
mov eax esi +
call sub_41C020  +
lea eax [ebx+2] +
mov [esp+98h+var_78] eax +
mov eax [esi] +
mov ecx [esp+98h+var_78] +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jnb loc_41D6F8  +
mov [esp+98h+var_90] 0FA0h +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] ebp +
call sub_4227B0  +
mov [esp+98h+var_74] eax +
mov eax [eax+8] +
mov [esi] eax +
jmp loc_41D6F8  +
test ebx ebx +
jnz loc_41D756  +
mov eax [esi] +
jmp loc_41D788  +
add [esp+98h+var_68] 1 +
jmp loc_41D756  +
mov ecx [esp+98h+var_68] +
mov eax ecx +
sub eax 1 +
test ecx ecx +
jz loc_41D838  +
mov [esp+98h+var_68] eax +
jmp loc_41D756  +
add [esp+98h+var_6C] 3E8h +
mov ecx [esp+98h+var_6C] +
mov eax [esi+14h] +
lea edx ds:0[ecx*4] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_437230  +
mov [esi+14h] eax +
jmp loc_41D70D  +
mov eax [esp+98h+var_68] +
test eax eax +
jnz loc_41D756  +
mov eax [esp+98h+var_5C] +
test byte ptr [eax+14h] 2 +
jz loc_41D838  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jz loc_41D756  +
mov esi edx +
test ebx ebx +
jz loc_41D85F  +
mov eax [esp+98h+var_50] +
mov edx [eax] +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jz loc_41D85A  +
jmp loc_41D85F  +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jnz loc_41D85F  +
sub ebx 1 +
jnz loc_41D850  +
mov eax [esp+98h+var_50] +
mov ecx [ebp+170h] +
mov edx [esp+98h+var_48] +
mov [eax+0Ch] ebx +
xor eax eax +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebx +
setnz al  +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_50] +
call sub_41C020  +
mov eax [esp+98h+var_5C] +
movzx edx word ptr [eax+10h] +
movzx eax dx +
cmp [esp+98h+var_54] eax +
ja loc_41D8CA  +
mov ecx [esp+98h+var_50] +
mov ecx [ecx] +
lea ecx [ecx+ebx*4+4] +
mov ebx [esp+98h+var_74] +
mov [ebx+8] ecx +
mov ebx [esp+98h+var_50] +
mov ecx ebx +
add ecx 1Ch +
cmp [esp+98h+var_54] eax +
cmovz ecx ebx +
mov [esp+98h+var_50] ecx +
movzx eax byte ptr [esi+4] +
lea ecx [eax-15h] +
cmp cl 1 +
jbe loc_41D9C9  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
jmp loc_41D6B0  +
test byte ptr [edx+6] 40h +
jz loc_41D756  +
jmp loc_41D838  +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_4C] edx +
call sub_421CF0  +
mov edx [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebx +
mov ecx eax +
mov eax [edx] +
mov ebx ecx +
mov [ecx] eax +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov eax [edx+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_41D969  +
mov edx [edi+8] +
mov eax [edi+0Ch] +
sub eax edx +
cmp eax 3 +
ja loc_41D94A  +
sub edx [edi+4] +
mov [esp+98h+var_98] ebp +
add edx edx +
mov [esp+98h+var_94] edx +
call sub_422710  +
mov edx [eax+8] +
mov [eax] edi +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jz loc_41D990  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_41E870  +
cmp byte ptr [eax+4] 16h +
mov ebx eax +
jz loc_41D990  +
test edi edi +
jnz loc_41D925  +
mov [esp+98h+var_94] 80h +
mov [esp+98h+var_98] ebp +
call sub_422710  +
mov edx [eax+8] +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jnz loc_41D956  +
nop   +
mov ecx ebx +
mov ebx [esp+98h+var_4C] +
mov byte ptr [ebp+11h] 2 +
mov byte ptr [ebp+10h] 1 +
cmp byte ptr [ecx+4] 16h +
jnz loc_41D786  +
mov esi ecx +
jmp loc_41D83A  +
mov [esp+98h+var_98] 0C8h +
call sub_4371B0  +
mov esi [esp+98h+var_50] +
mov [esi+14h] eax +
mov eax [esi] +
jmp loc_41D6C6  +
mov esi [esp+98h+var_54] +
cmp al 16h +
mov [esp+98h+var_3C] esi +
jz loc_41E545  +
cmp [esp+98h+var_54] 1 +
jz loc_41E518  +
mov eax [esp+98h+var_54] +
mov esi [esp+98h+var_5C] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] eax +
call sub_41CA70  +
test al al +
jz loc_41E585  +
test byte ptr [esi+14h] 2 +
jz loc_41DA2F  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jb loc_41E504  +
cmp [esp+98h+var_54] 1 +
jz loc_41E4E8  +
mov eax [esp+98h+var_60] +
sub byte ptr [ebp+10h] 1 +
sub dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 0 +
cmp word ptr [eax+10h] 0 +
jnz loc_41DAD5  +
mov eax [esp+98h+var_40] +
xor ebx ebx +
mov esi [eax+4] +
mov eax [esp+98h+var_3C] +
test eax eax +
jz loc_41DAB8  +
mov [esp+98h+var_78] edi +
mov edi esi +
mov esi [esp+98h+var_3C] +
mov edx [edi+4] +
test edx edx +
jz loc_41DA7E  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+4] 0 +
mov edx [edi+14h] +
test edx edx +
jz loc_41DA94  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+14h] 0 +
mov edx [edi+18h] +
test edx edx +
jz loc_41DAAA  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+18h] 0 +
add ebx 1 +
add edi 1Ch +
cmp ebx esi +
jnz loc_41DA68  +
mov edi [esp+98h+var_78] +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] eax +
call sub_422920  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_41D22D  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_20] 0 +
mov eax [eax+4] +
mov [esp+98h+var_38] eax +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 20h +
jnz loc_41E718  +
mov esi [esp+98h+var_60] +
mov eax [esi+0Ch] +
mov edx eax +
mov [esp+98h+var_78] eax +
mov eax [esi+4] +
shl edx 4 +
lea esi [eax+edx] +
mov [esp+98h+var_6C] esi +
cmp [esp+98h+var_6C] eax +
jbe loc_41E538  +
mov esi [esp+98h+var_78] +
mov [esp+98h+var_4C] edi +
mov [esp+98h+var_74] ebp +
mov [esp+98h+var_70] esi +
mov esi eax +
lea eax [ebp+4Ch] +
mov [esp+98h+var_48] eax +
lea eax [ebp+28h] +
mov [esp+98h+var_50] eax +
jmp loc_41DB4D  +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_41DDB7  +
cmp byte ptr [esi+4] 50h +
jnz loc_41DB40  +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
add [esp+98h+var_78] 2 +
add [esp+98h+var_70] 2 +
lea ebp [edi+eax-1Ch] +
movzx eax word ptr [esi+6] +
test al 4 +
jz loc_41DD71  +
mov eax [ebp+8] +
test eax eax +
jnz loc_41DB40  +
mov eax [esp+98h+var_74] +
mov edx [eax+28h] +
mov eax [edx+8] +
mov edx [edx+0Ch] +
sub edx eax +
cmp edx 2 +
ja loc_41DBB2  +
mov eax [esp+98h+var_50] +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_90] 3 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] edi +
call sub_4228C0  +
mov eax [edi+28h] +
mov eax [eax+8] +
mov byte ptr [eax] 22h +
mov edi [ebp+0Ch] +
lea ebx [eax+1] +
test edi edi +
jz loc_41DD1D  +
mov [esp+98h+var_5C] 0 +
xor edi edi +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_44] esi +
mov eax [ebp+0] +
mov esi [esp+98h+var_68] +
mov esi [eax+esi*4] +
movzx eax byte ptr [esi+4] +
cmp al 53h +
jz loc_41E379  +
lea edx [eax-3Eh] +
cmp dl 4 +
jbe loc_41DC0F  +
lea edx [eax-38h] +
cmp dl 4 +
jbe loc_41DC0F  +
mov [esp+98h+var_98] eax +
call sub_427140  +
test al al +
jz loc_41E6EF  +
mov [esp+98h+var_98] esi +
call sub_421E20  +
mov [esp+98h+var_54] 1 +
shl eax 2 +
lea edx [eax+3] +
mov eax [esp+98h+var_74] +
mov ecx [eax+28h] +
mov eax [ecx+0Ch] +
sub eax ebx +
cmp edx eax +
ja loc_41E39D  +
mov eax [ecx+8] +
lea ecx [ebx-1] +
cmp eax ecx +
jz loc_41DC54  +
test edi edi +
cmovz edi esi +
test byte ptr [edi+6] 1 +
jz loc_41DC54  +
mov byte ptr [ebx] 20h +
add ebx 1 +
mov ecx [esp+98h+var_54] +
test ecx ecx +
jz loc_41E356  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_422710  +
mov edi [eax+8] +
mov [esp+98h+var_54] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_98] eax +
call sub_421EC0  +
mov ecx [esp+98h+var_54] +
mov edx eax +
cmp edi edx +
jz loc_41DCBD  +
add edi 1 +
movzx eax byte ptr [edi-1] +
cmp al 22h +
jz loc_41DCB0  +
cmp al 5Ch +
jnz loc_41DD67  +
mov byte ptr [ebx] 5Ch +
add ebx 2 +
mov [ebx-1] al +
cmp edi edx +
jnz loc_41DC9D  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] eax +
call sub_4226E0  +
cmp byte ptr [esi+4] 3Dh +
jz loc_41E3D1  +
xor edi edi +
mov [esp+98h+var_5C] 0 +
add [esp+98h+var_68] 1 +
mov eax [esp+98h+var_68] +
cmp eax [ebp+0Ch] +
jb loc_41DBD9  +
test byte ptr [esp+98h+var_5C] 1 +
mov esi [esp+98h+var_44] +
jz loc_41DD1D  +
mov eax [esp+98h+var_74] +
sub ebx 1 +
mov [esp+98h+var_90] offset aInvalidStringL +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
call sub_41FFB0  +
mov eax [esp+98h+var_74] +
lea edx [ebx+2] +
mov byte ptr [ebx] 22h +
lea ecx [ebx+1] +
mov edi ecx +
mov eax [eax+28h] +
sub edi [eax+8] +
mov [eax+8] edx +
mov eax [esp+98h+var_74] +
sub ecx edi +
mov [esp+98h+var_68] ecx +
mov [esp+98h+var_98] eax +
call sub_421CF0  +
mov ecx [esp+98h+var_68] +
xor edx edx +
mov byte ptr [ebx+1] 0 +
mov byte ptr [eax+4] 3Eh +
mov [eax+8] edi +
mov [eax+0Ch] ecx +
mov [eax+6] dx +
mov [ebp+8] eax +
jmp loc_41DB40  +
mov [ebx] al +
add ebx 1 +
jmp loc_41DC99  +
test al 8 +
jnz loc_41DDA3  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jbe loc_41DD84  +
test byte ptr [esi-0Ah] 8 +
jnz loc_41DDA3  +
mov eax [ebp+4] +
test eax eax +
jz loc_41E5A9  +
mov edi [esp+98h+var_78] +
mov eax [ebp+10h] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_41DB40  +
mov edi [esp+98h+var_78] +
mov eax [ebp+0Ch] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_41DB40  +
mov edi [esp+98h+var_4C] +
mov ebp [esp+98h+var_74] +
movzx eax byte ptr [ebp+26Dh] +
test eax eax +
mov [esp+98h+var_48] eax +
jz loc_41E271  +
mov esi [esp+98h+var_78] +
lea ecx [esp+98h+var_20] +
mov eax ebp +
mov edx esi +
call sub_41C0A0  +
mov edx esi +
mov esi [esp+98h+arg_0] +
cmp [esp+98h+var_48] 1 +
cmovz edx [esp+98h+var_70] +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] esi +
call sub_40F2B0  +
mov [esp+98h+var_68] eax +
mov eax [esp+98h+var_60] +
mov [esp+98h+var_78] 0 +
mov eax [eax+4] +
mov esi eax +
cmp esi [esp+98h+var_6C] +
lea eax [ebp+160h] +
mov [esp+98h+var_30] eax +
jnb loc_41E13B  +
mov [esp+98h+var_2C] edi +
jmp loc_41DE97  +
cmp byte ptr [ebp+26Dh] 1 +
mov edx [esp+98h+var_78] +
jbe loc_41DFC0  +
mov eax [esi] +
mov ecx esi +
mov edi [esp+98h+var_68] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] edi +
call sub_41C200  +
add [esp+98h+var_78] 1 +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_41E137  +
cmp byte ptr [esi+4] 50h +
jnz loc_41DE50  +
movzx edx word ptr [esi+6] +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
test dl 4 +
lea eax [edi+eax-1Ch] +
jz loc_41E0FA  +
cmp byte ptr [ebp+26Dh] 0 +
lea edi [eax+8] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41E2CB  +
mov [esp+98h+var_4C] 0 +
mov ebx 1 +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
cmp byte ptr [ebp+8] 0 +
jz loc_41DEF4  +
cmp byte ptr [ebp+9] 0 +
jz loc_41DF07  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jz loc_41DF07  +
test byte ptr [esi-0Ah] 8 +
jz loc_41E222  +
test ebx ebx +
jz loc_41E056  +
mov eax ebx +
mov ebx [esp+98h+var_78] +
mov [esp+98h+var_5C] esi +
mov esi [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebp +
add eax ebx +
mov [esp+98h+var_54] eax +
jmp loc_41DF70  +
xor ecx ecx +
test edi edi +
mov ebp [esi] +
jz loc_41DF3A  +
mov ecx [edi] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_68] +
mov [esp+98h+var_94] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_74] +
call sub_41C200  +
mov eax [esp+98h+var_50] +
test eax eax +
jz loc_41DFA0  +
cmp eax 2 +
jz loc_41DFA0  +
add ebx 1 +
cmp ebx [esp+98h+var_54] +
jz loc_41DFD1  +
mov eax [esp+98h+var_78] +
mov ecx [esp+98h+var_4C] +
cmp [esp+98h+var_48] 2 +
cmovge eax ebx +
cmp byte ptr [ecx+26Dh] 1 +
jbe loc_41DFB0  +
mov ecx [esp+98h+var_5C] +
cmp byte ptr [esp+98h+var_70] 0 +
mov edx [ecx] +
jnz loc_41DF30  +
mov ecx [edi] +
mov ebp [ecx] +
jmp loc_41DF3A  +
add edi 4 +
cmp byte ptr [esp+98h+var_70] 0 +
lea eax [esi+4] +
cmovnz esi eax +
jmp loc_41DF67  +
mov ecx [esp+98h+var_60] +
mov eax [esp+98h+var_5C] +
sub eax [ecx+4] +
sar eax 4 +
jmp loc_41DF89  +
mov eax [esp+98h+var_60] +
mov edx esi +
sub edx [eax+4] +
sar edx 4 +
jmp loc_41DE61  +
mov esi [esp+98h+var_5C] +
mov ebp [esp+98h+var_4C] +
test byte ptr [esi+6] 8 +
jz loc_41DFF1  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
mov [esp+98h+var_78] eax +
sub eax 4 +
mov [esp+98h+var_44] eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_41E001  +
test byte ptr [esi+6] 8 +
jz loc_41E2F3  +
mov edi [esp+98h+var_44] +
test edi edi +
jz loc_41E049  +
mov [esp+98h+var_98] ebp +
call sub_421CF0  +
mov edx [edi] +
movzx edx byte ptr [edx+4] +
mov [eax+4] dl +
mov edx [edi] +
mov edi [esp+98h+var_44] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
mov edx [edi] +
test byte ptr [esi+6] 8 +
movzx edx word ptr [edx+6] +
jz loc_41E192  +
or edx 8 +
mov [eax+6] dx +
mov edi [esp+98h+var_44] +
mov [edi] eax +
mov eax [esp+98h+var_54] +
mov [esp+98h+var_78] eax +
jmp loc_41DE8A  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_41E087  +
cmp byte ptr [ebp+268h] 0 +
jnz loc_41E087  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_41E087  +
mov eax [ebp+0] +
test eax eax +
jz loc_41E461  +
cmp byte ptr [eax+3Dh] 0 +
jz loc_41E461  +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_41E0ED  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+248h] 0 +
mov [esp+98h+var_54] eax +
jnz loc_41DFF1  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_41DFF1  +
mov eax [ebp+0] +
test eax eax +
jz loc_41E0C4  +
cmp byte ptr [eax+3Dh] 0 +
jnz loc_41DFF1  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] 16h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_41FFF0  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_41DFF1  +
and edx 8 +
jz loc_41E19E  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41E3E9  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_41DEE8  +
mov edi [esp+98h+var_2C] +
mov ebx [esp+98h+var_48] +
test ebx ebx +
jnz loc_41E326  +
mov esi [esp+98h+var_74] +
lea eax [ebp+4Ch] +
mov ebx [esi+8] +
sub ebx [esi+4] +
call sub_41C0E0  +
mov ecx [esp+98h+var_64] +
shr ebx 2 +
mov [eax+10h] esi +
mov esi [esp+98h+var_34] +
mov dword ptr [eax+18h] 0 +
mov [eax+14h] ecx +
lea edx [esi+ebx*4] +
mov [eax+8] esi +
mov [eax+0Ch] edx +
mov esi [esp+98h+var_74] +
mov eax [esi+8] +
sub eax [esi+4] +
shr eax 2 +
add ds:dword_48026C eax +
jmp loc_41DA4D  +
and edx 0FFFFFFF7h +
mov [eax+6] dx +
jmp loc_41E043  +
mov edi [esp+98h+var_60] +
cmp esi [edi+4] +
jz loc_41E296  +
test byte ptr [esi-0Ah] 8 +
jz loc_41E296  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz cl  +
test cl cl +
mov byte ptr [esp+98h+var_70] cl +
mov [esp+98h+var_4C] 0 +
jz loc_41E1DF  +
xor edx edx +
call sub_41C070  +
mov [esp+98h+var_4C] eax +
mov eax [esp+98h+var_74] +
mov ecx [eax+4] +
mov eax [eax+8] +
mov [esp+98h+var_5C] ecx +
mov edx eax +
sub edx ecx +
cmp edx 3 +
jbe loc_41E418  +
mov ecx [eax-4] +
lea edx [eax-4] +
mov [esp+98h+var_44] edx +
cmp byte ptr [ecx+4] 13h +
jz loc_41E690  +
xor eax eax +
test ebx ebx +
cmovnz edx eax +
mov [esp+98h+var_50] eax +
mov [esp+98h+var_44] edx +
jmp loc_41DEE8  +
mov [esp+98h+var_98] ebp +
call sub_421CF0  +
xor edx edx +
mov [eax+6] dx +
mov edx [esp+98h+var_78] +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
cmp byte ptr [ebp+26Dh] 1 +
jbe loc_41E450  +
mov ecx [eax] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_68] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_90] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ecx +
mov ecx eax +
mov eax [esp+98h+var_74] +
call sub_41C200  +
jmp loc_41DF07  +
mov edx [esp+98h+var_78] +
xor ecx ecx +
mov eax ebp +
call sub_41C0A0  +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
jmp loc_41DE20  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+10h] +
mov edi [eax+4] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41E42D  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
jmp loc_41DEE8  +
mov edx 1 +
mov ebx 1 +
call sub_41C070  +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41DEE8  +
mov eax [ebp+160h] +
mov ecx [esp+98h+var_30] +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_8C] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] 0 +
call sub_41C200  +
jmp loc_41E001  +
mov ecx [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+8] +
sub eax [ecx+4] +
shr eax 2 +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_34] +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_20] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41C180  +
jmp loc_41E17A  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_421EC0  +
mov ebx eax +
jmp loc_41DCCD  +
test edi edi +
jz loc_41E6E7  +
test byte ptr [edi+6] 1 +
jnz loc_41DCE1  +
mov esi [esi+8] +
mov eax 0 +
test esi esi +
cmovz edi eax +
jmp loc_41DCE1  +
mov eax [esp+98h+var_50] +
sub ebx [ecx+8] +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_34] edx +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_98] eax +
call sub_4228C0  +
mov eax [esp+98h+var_74] +
mov edx [esp+98h+var_34] +
mov eax [eax+28h] +
mov eax [eax+8] +
add ebx eax +
jmp loc_41DC3C  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 5Ch +
jnz loc_41DCD7  +
add [esp+98h+var_5C] 1 +
xor edi edi +
jmp loc_41DCE1  +
xor edx edx +
call sub_41C070  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41DEE8  +
mov ebx 1Ch +
mov eax 0E4h +
jmp loc_41D65A  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_41DEE8  +
mov edx 2 +
call sub_41C070  +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41DEE8  +
mov ecx [esp+98h+var_60] +
mov edx esi +
sub edx [ecx+4] +
sar edx 4 +
jmp loc_41E248  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_41E4B2  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+28Ah] 0 +
mov [esp+98h+var_54] eax +
jz loc_41DFF1  +
mov eax [esp+98h+var_64] +
mov ecx [esi+8] +
mov edx [eax] +
setnle al  +
movzx eax al +
add eax 15h +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_420030  +
jmp loc_41DFF1  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacr_0 +
mov [esp+98h+var_94] 15h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_420030  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_41DFF1  +
mov esi [esp+98h+var_44] +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_41DA2F  +
cmp byte ptr [ebp+269h] 0 +
jnz loc_41DA2F  +
imul eax eax +
mov esi [esp+98h+var_44] +
mov dword ptr [esi+eax-1Ch] 0 +
jmp loc_41DA2F  +
test dx dx +
jnz loc_41D9E4  +
mov eax [esp+98h+var_44] +
mov ecx [eax+0Ch] +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+98h+var_54] eax +
jmp loc_41D9E4  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_70] eax +
jmp loc_41DDBF  +
mov eax [ebp+4Ch] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_41E7CE  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_41CF60  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aUnterminatedAr +
mov [esp+98h+var_94] 3 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_41FFB0  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] eax +
call sub_4226E0  +
mov byte ptr [ebp+11h] 0 +
sub dword ptr [ebp+10Ch] 1 +
sub byte ptr [ebp+10h] 1 +
jmp loc_41D47F  +
mov edi [ebp+0Ch] +
mov eax [esp+98h+var_74] +
test edi edi +
movzx ebx byte ptr [eax+26Dh] +
jz loc_41DD8F  +
cmp byte ptr [eax+25Ah] 0 +
mov edi eax +
mov byte ptr [eax+25Ah] 0 +
mov [esp+98h+var_98] 400h +
setnz byte ptr [esp+98h+var_68]  +
call sub_4371B0  +
mov [ebp+4] eax +
cmp byte ptr [edi+26Dh] 0 +
jz loc_41E5FB  +
mov [esp+98h+var_98] 400h +
call sub_4371B0  +
mov [ebp+18h] eax +
test bl bl +
jz loc_41E825  +
mov eax [ebp+14h] +
mov edi [ebp+0Ch] +
mov edx [ebp+0] +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
lea ecx [edi+1] +
mov [esp+98h+var_90] ecx +
xor ecx ecx +
mov [esp+98h+var_94] edx +
xor edx edx +
call sub_41C180  +
mov eax [ebp+10h] +
mov ebx 100h +
lea edx [eax+1] +
cmp ebx edx +
jb loc_41E7DD  +
mov edi [esp+98h+var_74] +
lea edx [esp+98h+var_1C] +
mov eax edi +
call sub_41E870  +
cmp byte ptr [eax+4] 16h +
jz loc_41E7B2  +
xor ecx ecx +
mov edx [ebp+10h] +
cmp byte ptr [edi+26Dh] 0 +
mov [esp+98h+var_94] 2 +
setnz cl  +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_1C] +
mov [esp+98h+var_98] edx +
mov edx eax +
mov eax ebp +
call sub_41C020  +
mov eax [ebp+10h] +
add eax 1 +
mov [ebp+10h] eax +
jmp loc_41E62F  +
mov ecx [esp+98h+var_60] +
test byte ptr [ecx+14h] 2 +
jz loc_41E20E  +
movzx ecx word ptr [ecx+10h] +
cmp [esi+8] ecx +
jnz loc_41E20E  +
test edi edi +
jz loc_41E6C1  +
mov ecx [edi] +
mov [esp+98h+var_50] 0 +
test ecx ecx +
jnz loc_41DEE8  +
cmp [esp+98h+var_5C] eax +
jnb loc_41E418  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [eax+8] edx +
jmp loc_41DEE8  +
mov edi [esi+8] +
jmp loc_41DCE1  +
movzx eax byte ptr [esi+4] +
mov [esp+98h+var_98] eax +
call sub_427150  +
test al al +
jnz loc_41DC0F  +
mov [esp+98h+var_98] esi +
call sub_421E20  +
mov [esp+98h+var_54] 0 +
jmp loc_41DC22  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_41E782  +
mov eax [esp+98h+var_60] +
mov eax [eax+4] +
cmp byte ptr [eax+4] 26h +
mov [esp+98h+var_6C] eax +
jz loc_41E79D  +
add eax 10h +
xor ebx ebx +
add ebx 1 +
cmp ebx ecx +
jz loc_41E782  +
mov edx eax +
add eax 10h +
cmp byte ptr [edx+4] 26h +
jnz loc_41E735  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_78] ebx +
mov [esp+98h+var_6C] edx +
jmp loc_41DB10  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41E782  +
mov ebx [esi+4] +
cmp byte ptr [ebx+4] 26h +
jz loc_41E790  +
lea edx [ebx+10h] +
xor esi esi +
jmp loc_41E77B  +
movzx eax byte ptr [edx+4] +
add edx 10h +
cmp al 26h +
jz loc_41E787  +
add esi 1 +
cmp esi ecx +
jnz loc_41E770  +
call sub_467AE0  +
mov [esp+98h+var_74] esi +
jmp loc_41D4BD  +
mov [esp+98h+var_74] 0 +
jmp loc_41D4BD  +
mov [esp+98h+var_70] 0 +
mov [esp+98h+var_78] 0 +
jmp loc_41DDBF  +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_98] edi +
call sub_41CDD0  +
movzx eax byte ptr [esp+98h+var_68] +
mov [edi+25Ah] al +
jmp loc_41DD8F  +
cmp byte ptr [ebp+8] 0 +
jz loc_41E563  +
jmp loc_41E553  +
mov eax [ebp+4] +
lea edi ds:0[edx*8] +
mov [esp+98h+var_94] edi +
lea ebx [edx+edx] +
mov [esp+98h+var_98] eax +
call sub_437230  +
mov [ebp+4] eax +
mov eax [esp+98h+var_74] +
cmp byte ptr [eax+26Dh] 0 +
jz loc_41E63A  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41E85A  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] eax +
call sub_437230  +
mov [ebp+18h] eax +
jmp loc_41E63A  +
mov eax [ebp+0Ch] +
mov edi [ebp+0] +
lea ebx [eax+1] +
mov eax [esp+98h+var_48] +
call sub_41C0E0  +
lea edx [edi+ebx*4] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov [eax+8] edi +
mov [eax+0Ch] edx +
jmp loc_41E627  +
mov [esp+98h+var_98] edi +
call sub_4371B0  +
mov [ebp+18h] eax +
jmp loc_41E63A  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
movzx eax byte ptr [eax+6Ch] +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1D] al +
lea esi [esi+0] +
mov eax [ebx+4Ch] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_41EB70  +
mov edx [eax+18h] +
cmp edx 1 +
jz loc_41EAB0  +
test edx 0FFFFFFFDh +
jnz loc_41ED23  +
mov ecx [eax+8] +
cmp ecx [eax+0Ch] +
jnz loc_41E960  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_41E8D0  +
add ds:dword_480270 1 +
mov [esp+4Ch+var_4C] ebx +
call sub_41CDD0  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41E890  +
lea ebp [ebx+160h] +
mov edx [esp+4Ch+var_2C] +
test edx edx +
jz loc_41E94D  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_41E8FB  +
mov eax [ebp+0] +
mov [esp+4Ch+var_30] eax +
mov edi [esp+4Ch+var_2C] +
mov eax [esp+4Ch+var_30] +
mov [edi] eax +
cmp byte ptr [ebx+26Dh] 0 +
jnz loc_41E933  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_41E933  +
cmp dword ptr [edx+18h] 2 +
mov eax [edx+14h] +
jz loc_41ED00  +
test eax eax +
jz loc_41EDF2  +
mov eax [ebx+64h] +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
cmp byte ptr [ebx+270h] 0 +
movzx ecx byte ptr [ebx+8] +
mov edx [ebx+20h] +
jnz loc_41EC20  +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
movzx eax [esp+4Ch+var_1D] +
mov [ebx+6Ch] al +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jz loc_41EB85  +
cmp edx 2 +
jnz loc_41EDBA  +
mov edx [eax+14h] +
mov ebp [ecx] +
mov edi [edx+4] +
test edi edi +
jz loc_41EC30  +
mov esi [edx+8] +
mov edi [esi] +
add esi 4 +
mov [edx+8] esi +
mov [esp+4Ch+var_30] edi +
add ecx 4 +
mov [eax+8] ecx +
test byte ptr [ebp+6] 8 +
jnz loc_41EAD3  +
cmp byte ptr [ebx+8] 0 +
movzx eax byte ptr [ebp+4] +
jz loc_41E9B2  +
cmp al 4Fh +
jz loc_41E890  +
cmp al 35h +
jnz loc_41E8E4  +
mov edx [ebp+8] +
movzx eax byte ptr [edx+14h] +
and eax 3Fh +
cmp al 1 +
jnz loc_41E8E4  +
test byte ptr [ebp+7] 4 +
jnz loc_41E8E4  +
test byte ptr [edx+15h] 8 +
jnz loc_41ECD1  +
cmp byte ptr [ebx+6Ch] 0 +
jnz loc_41EA06  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_41EC04  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41EC12  +
test eax eax +
jz loc_41EC04  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_41E8E4  +
test byte ptr [edx+15h] 40h +
jz loc_41EA60  +
mov edi [ebx+20Ch] +
test edi edi +
jz loc_41E8E4  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_424F50  +
cmp byte ptr [eax+4] 53h +
jz loc_41EA44  +
test byte ptr [eax+6] 1 +
jz loc_41ED40  +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jz loc_41ED5E  +
lea esi [esi+0] +
mov eax [esp+4Ch+var_30] +
mov ecx ebp +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_41D1D0  +
test eax eax +
jz loc_41E8E4  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41E890  +
cmp eax 2 +
jz loc_41E890  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_421CF0  +
xor ecx ecx +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] cx +
jmp loc_41E8E4  +
mov ebp [eax+8] +
cmp ebp [eax+0Ch] +
jz loc_41E8C2  +
mov edi [ebp+0] +
lea edx [ebp+10h] +
mov [eax+8] edx +
test byte ptr [ebp+6] 8 +
mov [esp+4Ch+var_30] edi +
jz loc_41E9A0  +
mov edi [ebx+4Ch] +
mov [esp+4Ch+var_14] ebp +
test edi edi +
jz loc_41EDD6  +
mov eax [edi+18h] +
cmp eax 2 +
jz loc_41EC40  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_41EDD6  +
mov ecx [ebx+64h] +
mov [esp+4Ch+var_28] ecx +
mov [esp+4Ch+var_24] ebp +
xor esi esi +
mov ebp [esp+4Ch+var_28] +
jmp loc_41EB48  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
cmp byte ptr [esi+4] 53h +
jnz loc_41EB2B  +
test byte ptr [esi+6] 8 +
jnz loc_41ED07  +
mov [esp+4Ch+var_4C] esi +
lea ecx [esp+4Ch+var_14] +
mov edx ebp +
mov eax ebx +
call sub_41D010  +
test al al +
jz loc_41EBB0  +
test byte ptr [esi+6] 8 +
jz loc_41EBB0  +
mov eax [edi+18h] +
cmp eax 1 +
jz loc_41EBA0  +
test eax eax +
jz loc_41EB10  +
cmp eax 2 +
jnz loc_41EB1B  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
mov eax [edi+14h] +
add dword ptr [eax+8] 4 +
jmp loc_41EB1B  +
mov [esp+4Ch+var_4C] ebx +
call sub_424E10  +
mov ebp eax +
mov eax [eax] +
mov [esp+4Ch+var_30] eax +
jmp loc_41E9A0  +
mov ebp [ecx] +
add ecx 4 +
mov edi [ebp+0] +
mov [eax+8] ecx +
mov [esp+4Ch+var_30] edi +
jmp loc_41E996  +
mov esi [edi+8] +
lea eax [esi+10h] +
mov [edi+8] eax +
jmp loc_41EB1B  +
cmp dword ptr [edi+18h] 2 +
mov ebp [esp+4Ch+var_24] +
jz loc_41EC60  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_41CB60  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41E890  +
mov [esp+4Ch+var_4C] ebx +
call sub_421CF0  +
xor edx edx +
mov [eax+8] ebp +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+6] dx +
jmp loc_41E8E4  +
mov eax [ebp+0] +
mov [ebx+68h] edx +
mov [ebx+64h] eax +
jmp loc_41EA06  +
mov eax [eax] +
jmp loc_41E9FE  +
test cl cl +
cmovnz eax edx +
jmp loc_41E947  +
mov edi [ebp+0] +
mov [esp+4Ch+var_30] edi +
jmp loc_41E990  +
mov edx [edi+14h] +
mov esi [edx] +
test esi esi +
jz loc_41EDD6  +
mov edx [edx+8] +
mov ecx [edx-4] +
mov [esp+4Ch+var_28] ecx +
jmp loc_41EB00  +
lea ecx [esp+4Ch+var_10] +
mov edx 1 +
mov eax ebx +
mov [esp+4Ch+var_10] 0 +
call sub_41C0A0  +
mov ecx [esp+4Ch+var_14] +
mov edx [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] 0 +
mov esi eax +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_41C200  +
mov eax [esi+4] +
mov ecx esi +
mov edx [edi+14h] +
mov edx [edx] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] 1 +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_41C180  +
jmp loc_41EBDE  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_421CF0  +
mov edx [esi+0Ch] +
mov ebp eax +
movzx eax byte ptr [esi+4] +
mov [ebp+4] al +
movzx eax word ptr [esi+6] +
or ah 4 +
mov [ebp+6] ax +
mov eax [esi+8] +
mov [ebp+0Ch] edx +
mov [ebp+8] eax +
jmp loc_41E8E4  +
mov eax [eax] +
jmp loc_41E922  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2DFh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_406BF0  +
mov [esp+4Ch+var_44] offset aReached_end_of +
mov [esp+4Ch+var_48] 93Eh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_406BF0  +
nop   +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jnz loc_41EA60  +
jmp loc_41E8E4  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_424F50  +
cmp byte ptr [eax+4] 53h +
mov esi eax +
jz loc_41E8E4  +
test byte ptr [eax+6] 1 +
jnz loc_41E8E4  +
mov [esp+4Ch+var_4C] ebx +
call sub_421CF0  +
mov [eax+8] esi +
xor esi esi +
mov byte ptr [eax+4] 53h +
mov [eax+6] si +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_41CB60  +
jmp loc_41E8E4  +
mov [esp+4Ch+var_44] offset aConsume_next_t +
mov [esp+4Ch+var_48] 968h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_406BF0  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2B1h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_406BF0  +
mov eax [esp+4Ch+var_30] +
jmp loc_41E933  +
***
mov eax [esp+arg_0] +
xor edx edx +
jmp sub_41E870  +
***
nop   +
mov [esp] ebx +
call sub_42C490  +
test al al +
jnz loc_41EE30  +
sub byte ptr [ebx+13h] 1 +
sub byte ptr [ebx+10h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
jmp sub_41E870  +
***
mov eax [esp+arg_0] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D6FFh +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 10h +
jnz loc_41EF67  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
movzx edi dx +
mov [esp+2Ch+var_10] eax +
lea eax ds:4[edi*4] +
sub [esp+2Ch+var_10] ecx +
cmp [esp+2Ch+var_10] eax +
jb loc_41EF20  +
mov eax [esp+2Ch+arg_C] +
add edx 1 +
mov [ebp+10h] dx +
mov [ecx+edi*4] eax +
or word ptr [ebx+14h] 1000h +
movzx edx word ptr [ebp+10h] +
mov eax [esi+110h] +
movzx ecx dx +
lea edi ds:0[ecx*8] +
cmp edi [esi+114h] +
ja loc_41EF46  +
mov esi [ebx+18h] +
add ecx 1FFFFFFFh +
mov [eax+ecx*8] ebx +
mov [eax+ecx*8+4] esi +
xor eax eax +
mov [ebx+18h] dx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esi+24h] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] esi +
call sub_4228C0  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
movzx edi dx +
jmp loc_41EED2  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_437230  +
movzx edx word ptr [ebp+10h] +
mov [esi+114h] edi +
movzx ecx dx +
mov [esi+110h] eax +
jmp loc_41EF02  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] offset aDuplicateMacro +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_20] eax +
call sub_41FFB0  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov eax [edi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_41F4D0  +
mov [esp+3Ch+var_3C] 18h +
call eax  +
mov ebx eax +
mov eax [edi+20h] +
xor ecx ecx +
mov dword ptr [ebx] 0 +
mov [ebx+10h] cx +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+14h] +
mov edx eax +
and edx 0FFFFFFFDh +
mov [ebx+14h] dl +
cmp byte ptr [edi+267h] 0 +
mov dword ptr [ebx+0Ch] 0 +
setz dl  +
and eax 0FFFFFFD4h +
shl edx 3 +
or eax edx +
mov [ebx+14h] al +
mov eax [edi] +
test eax eax +
jz loc_41F4E7  +
cmp byte ptr [eax+3Dh] 0 +
setnz dl  +
movzx eax byte ptr [ebx+14h] +
shl edx 2 +
and eax 0FFFFFFFBh +
or eax edx +
mov [ebx+14h] al +
cmp byte ptr [edi+270h] 0 +
jz loc_41F0E4  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
call sub_42C5E0  +
mov byte ptr [esp+3Ch+var_20] al +
movzx eax word ptr [ebx+10h] +
test eax eax +
lea ecx [eax-1] +
lea edx ds:0FFFFFFF8h[eax*8] +
jz loc_41F075  +
mov esi [edi+110h] +
sub ecx 1 +
add esi edx +
sub edx 8 +
mov eax [esi] +
and word ptr [eax+14h] 0EFFFh +
cmp ecx 0FFFFFFFFh +
mov esi [esi+4] +
mov [eax+18h] esi +
jnz loc_41F054  +
cmp byte ptr [esp+3Ch+var_20] 0 +
jz loc_41F0D7  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41F420  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_41F230  +
movzx eax byte ptr [ebp+14h] +
mov edi offset a__stdc_ +
mov ecx 7 +
mov [ebp+18h] ebx +
and eax 0FFFFFFC0h +
or eax 1 +
mov [ebp+14h] al +
mov eax [ebp+0] +
mov esi eax +
cmps   +
jz loc_41F1E4  +
movzx eax word ptr [ebp+14h] +
and dx 2FFh +
shl edx 6 +
and eax 3Fh +
or eax edx +
mov [ebp+14h] ax +
movzx eax byte ptr [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] edi +
call sub_424E10  +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_41F484  +
cmp al 16h +
jz loc_41F136  +
test byte ptr [esi+6] 1 +
jnz loc_41F136  +
cmp byte ptr [edi+268h] 0 +
jz loc_41F58E  +
cmp byte ptr [edi+248h] 0 +
jz loc_41F70B  +
mov [esp+3Ch+var_34] offset aIsoC11Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
test byte ptr [ebx+14h] 1 +
jz loc_41F3C4  +
mov edx ebx +
mov eax edi +
call sub_41C2E0  +
mov ecx eax +
mov [esp+3Ch+arg_4] ebp +
xor esi esi +
mov ebp ebx +
mov [esp+3Ch+var_20] 0 +
jmp loc_41F182  +
add [esp+3Ch+var_20] 1 +
sub eax 1 +
or byte ptr [ebp+14h] 20h +
mov [ecx+8] eax +
cmp bl 26h +
mov edx ebp +
setz al  +
mov esi eax +
mov eax edi +
call sub_41C2E0  +
mov ecx eax +
mov eax [ebp+0Ch] +
cmp eax 1 +
jbe loc_41F194  +
cmp byte ptr [ecx-0Ch] 25h +
jz loc_41F250  +
movzx ebx byte ptr [ecx+4] +
cmp bl 16h +
jz loc_41F2A0  +
cmp bl 26h +
jnz loc_41F16F  +
cmp eax 1 +
jz loc_41F3F0  +
movzx edx word ptr [ecx-0Ah] +
test dl 8 +
jnz loc_41F160  +
sub eax 1 +
mov [ebp+0Ch] eax +
mov eax edx +
or eax 8 +
mov [ecx-0Ah] ax +
movzx eax word ptr [ecx+6] +
test al 2 +
jz loc_41F1D8  +
or dx 108h +
mov [ecx-0Ah] dx +
test al 1 +
jz loc_41F16F  +
or word ptr [ecx-0Ah] 200h +
jmp loc_41F16F  +
mov edi offset a__stdc_format_ +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_41F0C2  +
mov edi offset a__stdc_limit_m +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_41F0C2  +
mov ecx 17h +
mov esi eax +
mov edi offset a__stdc_constan +
mov eax edx +
cmps   +
setnbe bl  +
setb cl  +
or eax 10h +
cmp bl cl +
cmovnz edx eax +
jmp loc_41F0C2  +
movzx eax word ptr [ebp+14h] +
and dx 35Bh +
mov ecx edx +
shl ecx 6 +
and eax 3Fh +
or eax ecx +
mov [ebp+14h] ax +
jmp loc_41F09B  +
test byte ptr [ebp+14h] 1 +
movzx ebx byte ptr [ecx+4] +
jz loc_41F198  +
cmp bl 50h +
jz loc_41F371  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_41F198  +
mov [esp+3Ch+var_34] offset aIsNotFollowedB +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
mov byte ptr [esp+3Ch+var_20] 0 +
jmp loc_41F413  +
mov edx esi +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
test dl dl +
jnz loc_41F3F6  +
mov edx [edi+24h] +
sub eax 1 +
mov edx [edx+8] +
and byte ptr [ebx+14h] 0EFh +
test eax eax +
mov [ebx+0Ch] eax +
mov [ebx+4] edx +
jz loc_41F2CC  +
and word ptr [edx+6] 0FFFEh +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_41F4B8  +
shl eax 4 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
mov esi [esp+3Ch+var_20] +
test esi esi +
mov [esp+3Ch+var_1C] eax +
jz loc_41F6D0  +
mov edx [ebx+0Ch] +
mov ecx edx +
sub ecx esi +
shl ecx 4 +
add ecx eax +
test edx edx +
jz loc_41F360  +
mov eax [ebx+4] +
shl edx 4 +
mov [esp+3Ch+var_20] ebx +
lea esi [eax+edx] +
mov edx [esp+3Ch+var_1C] +
jmp loc_41F336  +
mov [edx] ebx +
mov ebx [eax+4] +
add eax 10h +
add edx 10h +
mov [edx-0Ch] ebx +
mov ebx [eax-8] +
mov [edx-8] ebx +
mov ebx [eax-4] +
mov [edx-4] ebx +
cmp eax esi +
jz loc_41F35C  +
cmp byte ptr [eax+4] 26h +
mov ebx [eax] +
jnz loc_41F318  +
mov [ecx] ebx +
mov ebx [eax+4] +
add eax 10h +
add ecx 10h +
mov [ecx-0Ch] ebx +
mov ebx [eax-8] +
mov [ecx-8] ebx +
mov ebx [eax-4] +
mov [ecx-4] ebx +
cmp eax esi +
jnz loc_41F336  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ebx+4] eax +
jmp loc_41F413  +
movzx edx word ptr [ecx+6] +
test dl 1 +
jz loc_41F381  +
or dh 2 +
mov [ecx+6] dx +
mov esi edx +
or si 100h +
test byte ptr [ecx-0Ah] 2 +
cmovnz edx esi +
movzx esi word ptr [ecx-0Ah] +
sub eax 1 +
and edx 0FFFFFFFEh +
or edx 4 +
and esi 1 +
or edx esi +
mov [ecx+6] dx +
mov edx [ecx] +
mov [ecx-10h] edx +
mov edx [ecx+4] +
mov [ecx-0Ch] edx +
mov edx [ecx+8] +
mov [ecx-8] edx +
mov edx [ecx+0Ch] +
mov [ecx-4] edx +
mov [ebp+0Ch] eax +
jmp loc_41F16F  +
lea edx [ebx+0Ch] +
mov eax edi +
call sub_41C280  +
mov ecx eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_41F14B  +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset aCannotAppearAt +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
mov byte ptr [esp+3Ch+var_20] 0 +
mov byte ptr [edi+0Eh] 0 +
jmp loc_41F042  +
cmp byte ptr [edi+267h] 0 +
jnz loc_41F6F2  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 10h +
jnz loc_41F4F7  +
test dl 4 +
jz loc_41F5DD  +
mov eax [edi+228h] +
test eax eax +
jz loc_41F46A  +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call eax  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_41F5DD  +
cmp byte ptr [edi+25Fh] 0 +
setnz al  +
test al al +
jnz loc_41F4F7  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_41F093  +
test byte ptr [esi+6] 1 +
jnz loc_41F136  +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_424E10  +
movzx ecx byte ptr [eax+4] +
lea edx [ecx-13h] +
cmp dl 22h +
ja loc_41F884  +
movzx edx dl +
jmp ds:off_4754D0[edx*4]  +
mov ecx [edi+24h] +
shl eax 4 +
add eax edx +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ecx+8] eax +
jmp loc_41F413  +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_3C] edi +
call sub_4250B0  +
mov ebx eax +
jmp loc_41EFCB  +
xor edx edx +
jmp loc_41F016  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
and edx 14h +
mov eax 0Bh +
mov ecx [ebp+0] +
cmp dx 4 +
mov edx 0 +
cmovnz eax edx +
mov edx [edi+20h] +
mov [esp+3Ch+var_2C] offset aSRedefined +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_420150  +
test al al +
movzx eax byte ptr [ebp+14h] +
jz loc_41F586  +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jnz loc_41F586  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 4 +
jnz loc_41F230  +
mov eax [ebp+18h] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] offset aThisIsTheLocat +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 5 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
call sub_4200B0  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_41F08B  +
cmp al 36h +
jz loc_41F8CB  +
jbe loc_41F8C3  +
cmp al 3Dh +
nop   +
jnz loc_41F728  +
mov eax [esi+0Ch] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] offset a_? +
mov [esp+3Ch+var_38] eax +
call strchr  +
cmp eax 1 +
sbb eax eax +
and eax 2 +
mov [esp+3Ch+var_34] offset aMissingWhitesp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
jmp loc_41F136  +
test dh 1 +
jnz loc_41F478  +
mov eax [ebp+18h] +
mov [esp+3Ch+var_1C] eax +
movzx eax word ptr [eax+10h] +
cmp ax [ebx+10h] +
jnz loc_41F4F7  +
mov esi [esp+3Ch+var_1C] +
movzx ecx byte ptr [ebx+14h] +
xor cl [esi+14h] +
and ecx 3 +
jnz loc_41F4F7  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_41F660  +
mov ecx [esi] +
mov esi [ebx] +
mov eax [esi] +
cmp [ecx] eax +
jnz loc_41F4F7  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_12] dx +
mov [esp+3Ch+var_18] ebx +
mov ebx ecx +
sub eax 1 +
mov [esp+3Ch+var_10] eax +
xor eax eax +
mov edx [esp+3Ch+var_10] +
jmp loc_41F653  +
mov ecx [ebx+eax*4+4] +
add eax 1 +
cmp ecx [esi+eax*4] +
jnz loc_41F4EE  +
cmp eax edx +
jnz loc_41F643  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
cmp byte ptr [edi+270h] 0 +
jnz loc_41F998  +
mov eax [esp+3Ch+var_1C] +
mov eax [eax+0Ch] +
cmp eax [ebx+0Ch] +
jnz loc_41F4F7  +
test eax eax +
jz loc_41F478  +
xor esi esi +
jmp loc_41F6A0  +
mov eax [esp+3Ch+var_1C] +
add esi 1 +
cmp esi [eax+0Ch] +
jnb loc_41F9B5  +
mov edx [ebx+4] +
mov eax esi +
shl eax 4 +
add edx eax +
mov [esp+3Ch+var_38] edx +
mov edx [esp+3Ch+var_1C] +
add eax [edx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_4221E0  +
test eax eax +
jnz loc_41F690  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41F4F7  +
mov eax [ebx+0Ch] +
mov edx [ebx+4] +
shl eax 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
jmp loc_41F360  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call sub_41C500  +
jmp loc_41F42D  +
mov [esp+3Ch+var_34] offset aIsoC99Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
jmp loc_41F136  +
cmp al 43h +
jz loc_41F8CB  +
xor eax eax +
jmp loc_41F5C4  +
mov [esp+3Ch+var_34] offset aMissingInMacro +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
mov eax [edi+24h] +
mov byte ptr [esp+3Ch+var_20] 0 +
mov eax [eax+8] +
mov [ebx] eax +
jmp loc_41F413  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_41F9DF  +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_34] eax +
call sub_41EE90  +
test al al +
jnz loc_41F74F  +
mov [esp+3Ch+var_20] 1 +
jmp loc_41F496  +
mov ecx [esp+3Ch+var_20] +
movzx eax word ptr [ebx+10h] +
test ecx ecx +
jnz loc_41F820  +
test ax ax +
jz loc_41F820  +
mov [esp+3Ch+var_34] offset aParameterNameM +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
jmp loc_41F74F  +
mov eax [esp+3Ch+var_20] +
or byte ptr [ebx+14h] 2 +
test eax eax +
jz loc_41F8E1  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_41F80A  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_41F80A  +
cmp byte ptr [edi+248h] 0 +
jz loc_41F97B  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotPer +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_420030  +
mov [esp+3Ch+var_3C] edi +
call sub_424E10  +
cmp byte ptr [eax+4] 15h +
jnz loc_41F737  +
movzx eax word ptr [ebx+10h] +
mov edx [edi+24h] +
mov ecx [edx+8] +
mov [esp+3Ch+var_20] ecx +
mov [ebx] ecx +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_41F8D5  +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
movzx edx word ptr [ebx+10h] +
shl edx 2 +
mov ecx eax +
mov eax [ebx] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov ecx [esp+3Ch+var_20] +
mov [ebx] ecx +
or byte ptr [ebx+14h] 1 +
jmp loc_41F136  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_41F48E  +
jmp loc_41F7A9  +
cmp cl 4Fh +
jnz loc_41F896  +
cmp byte ptr [edi+24Ch] 0 +
jz loc_41F496  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_425030  +
mov [esp+3Ch+var_34] offset aSMayNotAppearI +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
call sub_41FFB0  +
jmp loc_41F74F  +
cmp al 34h +
jnz loc_41F730  +
mov eax 2 +
jmp loc_41F5C4  +
mov ecx [esp+3Ch+var_20] +
lea eax [ecx+eax*4] +
mov [edx+8] eax +
jmp loc_41F86A  +
mov eax [edi+2B8h] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] eax +
call sub_41EE90  +
cmp byte ptr [edi+268h] 0 +
mov byte ptr [edi+0Eh] 1 +
jnz loc_41F944  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_41F944  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_41F944  +
cmp byte ptr [edi+248h] 0 +
jz loc_41F9C2  +
mov [esp+3Ch+var_34] offset aAnonymousVaria +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_420030  +
jmp loc_41F80A  +
cmp byte ptr [edi+28Ah] 0 +
jle loc_41F80A  +
cmp byte ptr [edi+248h] 0 +
jnz loc_41F80A  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
jmp loc_41F80A  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotP_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_420030  +
jmp loc_41F80A  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42C810  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41F474  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41F478  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_420030  +
jmp loc_41F80A  +
mov [esp+3Ch+var_34] offset aMacroParameter +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41FFB0  +
jmp loc_41F74F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jz loc_41FA76  +
and eax 3Fh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aInvalidHashTyp +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 1 +
jz loc_41FAB0  +
mov ebx [esp+2Ch+arg_0] +
mov edx [ebx+228h] +
test edx edx +
jz loc_41FA49  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call edx  +
test al al +
jnz loc_41FAB0  +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
jmp loc_41FA49  +
mov eax [esp+2Ch+arg_4] +
mov ebx [eax+18h] +
mov eax [eax+4] +
movzx ebp byte ptr [ebx+14h] +
lea esi [eax+eax*4] +
add esi esi +
test ebp 1 +
jnz loc_41FBB1  +
add esi 2 +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_41FBE9  +
mov [esp+2Ch+var_2C] ebx +
call sub_42C4F0  +
add esi eax +
mov eax [esp+2Ch+arg_0] +
cmp esi [eax+114h] +
ja loc_41FC81  +
mov eax [eax+110h] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_421E60  +
test byte ptr [ebx+14h] 1 +
jz loc_41FB76  +
lea edi [eax+1] +
xor esi esi +
mov byte ptr [eax] 28h +
movzx eax word ptr [ebx+10h] +
cmp esi eax +
jnb loc_41FB70  +
mov edx [ebx] +
mov ebp [edx+esi*4] +
mov edx [esp+2Ch+arg_0] +
cmp [edx+2B8h] ebp +
jz loc_41FB57  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
movzx eax word ptr [ebx+10h] +
add edi [ebp+4] +
add esi 1 +
cmp esi eax +
jnb loc_41FC60  +
mov byte ptr [edi] 2Ch +
movzx eax word ptr [ebx+10h] +
add edi 1 +
cmp esi eax +
jb loc_41FB29  +
lea eax [edi+1] +
mov byte ptr [edi] 29h +
lea esi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_41FCB0  +
mov eax [ebx+0Ch] +
test eax eax +
mov [esp+2Ch+var_10] eax +
jnz loc_41FCC3  +
mov eax [esp+2Ch+arg_0] +
mov byte ptr [esi] 0 +
mov eax [eax+110h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ecx word ptr [ebx+10h] +
add esi 6 +
test ecx ecx +
jz loc_41FAD2  +
mov edi [ebx] +
shl ecx 2 +
xor eax eax +
mov edx [edi+eax] +
add eax 4 +
cmp eax ecx +
mov edx [edx+4] +
lea esi [esi+edx+1] +
jnz loc_41FBC7  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_41FAE3  +
and ebp 20h +
jnz loc_41FD9A  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_41FAED  +
xor edi edi +
jmp loc_41FC45  +
mov eax [ebp+0Ch] +
add esi [eax+4] +
movzx eax word ptr [ebp+6] +
mov ecx eax +
and ecx 4 +
cmp cx 1 +
sbb esi 0FFFFFFFFh +
test al 8 +
lea ecx [esi+3] +
cmovnz esi ecx +
and eax 1 +
cmp ax 1 +
sbb esi 0FFFFFFFFh +
add edi 1 +
cmp edi [esp+2Ch+var_10] +
jz loc_41FAED  +
mov ebp edi +
shl ebp 4 +
add ebp [ebx+4] +
cmp byte ptr [ebp+4] 50h +
jz loc_41FC10  +
mov [esp+2Ch+var_2C] ebp +
call sub_421E20  +
add esi eax +
jmp loc_41FC16  +
test byte ptr [ebx+14h] 2 +
jz loc_41FB25  +
mov byte ptr [edi] 2Eh +
add edi 3 +
mov byte ptr [edi-2] 2Eh +
mov byte ptr [edi-1] 2Eh +
movzx eax word ptr [ebx+10h] +
jmp loc_41FB25  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+110h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_437230  +
mov ecx [esp+2Ch+arg_0] +
mov [ecx+114h] esi +
mov [ecx+110h] eax +
jmp loc_41FB03  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_42C540  +
mov esi eax +
jmp loc_41FB9C  +
test byte ptr [ebx+14h] 20h +
mov eax [ebx+4] +
jnz loc_41FD6B  +
xor ebp ebp +
mov edi eax +
mov edx ebp +
mov ebp ebx +
mov ebx edx +
jmp loc_41FD22  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_421EC0  +
mov esi eax +
test byte ptr [edi+6] 8 +
jz loc_41FD12  +
mov byte ptr [esi] 20h +
add esi 3 +
mov byte ptr [esi-2] 23h +
mov byte ptr [esi-1] 23h +
add ebx 1 +
cmp ebx [esp+2Ch+var_10] +
jnb loc_41FB9C  +
mov edi [ebp+4] +
mov ecx ebx +
shl ecx 4 +
add edi ecx +
movzx eax word ptr [edi+6] +
test al 1 +
jz loc_41FD3B  +
mov byte ptr [esi] 20h +
movzx eax word ptr [edi+6] +
add esi 1 +
test al 4 +
jz loc_41FD45  +
mov byte ptr [esi] 23h +
add esi 1 +
cmp byte ptr [edi+4] 50h +
jnz loc_41FCE0  +
mov eax [edi+0Ch] +
mov ecx [eax+4] +
mov eax [eax] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [edi+0Ch] +
add esi [eax+4] +
jmp loc_41FCFE  +
cmp byte ptr [eax+4] 26h +
jz loc_41FB9C  +
lea edi [eax+10h] +
xor edx edx +
jmp loc_41FD8C  +
movzx ecx byte ptr [edi+4] +
add edi 10h +
cmp cl 26h +
jz loc_41FDCA  +
add edx 1 +
cmp edx [esp+2Ch+var_10] +
jnz loc_41FD80  +
call sub_467AE0  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_41FD95  +
mov eax [ebx+4] +
cmp byte ptr [eax+4] 26h +
jz loc_41FAED  +
add eax 10h +
xor edi edi +
jmp loc_41FDC1  +
movzx edx byte ptr [eax+4] +
add eax 10h +
cmp dl 26h +
jz loc_41FDDF  +
add edi 1 +
cmp edi ecx +
jnz loc_41FDB5  +
jmp loc_41FD95  +
test edx edx +
lea esi [esi+0] +
jz loc_41FB9C  +
mov [esp+2Ch+var_10] edx +
jmp loc_41FCD0  +
mov [esp+2Ch+var_10] edi +
jmp loc_41FBF9  +
***
push esi  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_41FEA0  +
cmp byte ptr [eax+8] 0 +
jz loc_41FEE4  +
mov ecx [eax+20h] +
jmp loc_41FEB4  +
mov ecx [eax+104h] +
mov edx [eax+0F0h] +
cmp edx [ecx+8] +
jz loc_41FEF0  +
mov ecx [edx-10h] +
mov edx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] edx +
mov edx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call sub_41FDF0  +
add esp 2Ch +
retn   +
mov edx [eax+1Ch] +
mov ecx [edx+2Ch] +
jmp loc_41FEB4  +
xor ecx ecx +
jmp loc_41FEB4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_10] +
mov eax [ebx+210h] +
test eax eax +
jz loc_41FF85  +
mov eax [ebx+1Ch] +
lea esi [ebp+var_74] +
mov edx [ebp+arg_C] +
mov ecx esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] edx +
call sub_411170  +
sub esp 8 +
test edi edi +
jz loc_41FF47  +
mov [esp+98h+var_98] edi +
mov ecx esi +
call sub_410FF0  +
sub esp 4 +
mov edx [ebp+arg_18] +
mov eax [ebx+210h] +
mov [esp+98h+var_8C] esi +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_84] edx +
mov edx [ebp+arg_14] +
mov [esp+98h+var_88] edx +
mov edx [ebp+arg_8] +
mov [esp+98h+var_90] edx +
mov edx [ebp+arg_4] +
mov [esp+98h+var_94] edx +
call eax  +
mov ecx esi +
mov ebx eax +
call sub_410E50  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aCpp_diagnost_0 +
mov [esp+98h+var_94] 0AAh +
mov [esp+98h+var_98] offset a____GccLibcppE +
call sub_406BF0  +
jmp sub_41FFB0  +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FE80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FE80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FE80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov dword ptr [esp+4] 1 +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_41FE80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FF00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FF00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FF00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FF00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41FDF0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
sub esp 2Ch +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_448960  +
mov [esp+2Ch+var_24] offset aSS +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41FFB0  +
add esp 2Ch +
retn   +
***
sub esp 28h +
mov ebx [esp+28h+arg_8] +
cmp byte ptr [ebx] 0 +
cmovz ebx eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_448960  +
mov [esp+28h+var_18] ebx +
mov [esp+28h+var_1C] offset aSS +
mov [esp+28h+var_14] eax +
mov eax [esp+28h+arg_C] +
mov [esp+28h+var_20] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_4201F0  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 24h +
mov ecx [esp+28h+arg_0] +
mov [esp+28h+var_24] 50h +
mov [esp+28h+var_28] 1 +
shl esi cl +
call sub_4371E0  +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_4371B0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] eax +
mov ebx eax +
call sub_4491F0  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 4 +
mov dword ptr [ebx+18h] 0 +
call sub_4371E0  +
mov [ebx+38h] esi +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+2Ch] eax +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_449360  +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_4203F9  +
mov eax [ebx+2Ch] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_C] +
mov eax [ebx+38h] +
mov edx [ebx+2Ch] +
add dword ptr [ebx+44h] 1 +
mov ebp eax +
mov [esp+3Ch+var_18] eax +
sub eax 1 +
and esi eax +
mov edi [edx+esi*4] +
lea ecx ds:0[esi*4] +
mov [esp+3Ch+var_20] eax +
test edi edi +
jz loc_420738  +
cmp edi 0FFFFFFFFh +
jz loc_42072F  +
mov eax [esp+3Ch+arg_C] +
cmp [edi+8] eax +
mov [esp+3Ch+var_1C] ebp +
jz loc_4206C1  +
mov eax [esp+3Ch+arg_C] +
mov ecx ebx +
shl eax 4 +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_20] +
and [esp+3Ch+var_24] eax +
mov eax [ebx+48h] +
mov ebx edx +
or [esp+3Ch+var_24] 1 +
mov edx [esp+3Ch+arg_C] +
lea ebp [eax+1] +
jmp loc_420493  +
add ebp 1 +
add esi [esp+3Ch+var_24] +
and esi [esp+3Ch+var_20] +
mov [ecx+48h] ebp +
mov edi [ebx+esi*4] +
lea eax ds:0[esi*4] +
test edi edi +
jz loc_420503  +
cmp edi 0FFFFFFFFh +
jz loc_4204F0  +
cmp [edi+8] edx +
jnz loc_420490  +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_420490  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx [esp+3Ch+var_14] +
mov edx [esp+3Ch+var_10] +
test eax eax +
jnz loc_420490  +
mov eax edi +
jmp loc_4205AA  +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp eax edi +
cmovnz eax esi +
mov [esp+3Ch+var_1C] eax +
jmp loc_420490  +
mov ebx ecx +
mov ecx eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_420744  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
cmp edx [esp+3Ch+var_18] +
cmovnz ecx eax +
mov eax [ebx+30h] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx [esp+3Ch+var_24] +
mov edx eax +
mov [esp+3Ch+var_20] eax +
mov eax [ebx+2Ch] +
mov edi edx +
mov [eax+ecx] edx +
mov eax [esp+3Ch+arg_8] +
mov [edx+4] eax +
mov eax [esp+3Ch+arg_C] +
mov [edx+8] eax +
mov eax [ebx+34h] +
test eax eax +
jz loc_4205B2  +
mov ecx [esp+3Ch+arg_8] +
lea edx [ecx+1] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+arg_8] +
mov byte ptr [esi+eax] 0 +
mov [edi] esi +
mov eax [ebx+3Ch] +
lea edx [eax+1] +
mov eax [ebx+38h] +
mov [ebx+3Ch] edx +
shl edx 2 +
lea ecx [eax+eax] +
mov [esp+3Ch+var_1C] ecx +
add ecx eax +
mov eax [esp+3Ch+var_20] +
cmp edx ecx +
jnb loc_420630  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov edx [ebx+0Ch] +
lea ecx [eax+1] +
mov eax [ebx+10h] +
sub eax edx +
cmp eax ecx +
jb loc_42071B  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add eax [esp+3Ch+arg_8] +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov edx [ebx+8] +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_42074B  +
mov ecx [ebx+18h] +
mov esi [ebx+4] +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx [ebx+10h] +
mov edi eax +
sub edi esi +
mov [ebx+0Ch] eax +
mov ebp ecx +
sub ebp esi +
cmp edi ebp +
jbe loc_420622  +
mov [ebx+0Ch] ecx +
mov eax ecx +
mov [ebx+8] eax +
mov eax [esp+3Ch+var_20] +
mov [eax] edx +
jmp loc_420586  +
mov esi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
lea edi [esi-1] +
call sub_4371E0  +
mov ecx [ebx+2Ch] +
mov edx [ebx+38h] +
mov [esp+3Ch+arg_0] ebx +
mov [esp+3Ch+var_18] ecx +
mov ebp ecx +
lea ecx [ecx+edx*4] +
mov [esp+3Ch+var_24] ecx +
nop   +
mov esi [ebp+0] +
lea edx [esi-1] +
cmp edx 0FFFFFFFDh +
ja loc_420694  +
mov ebx [esi+8] +
mov edx edi +
and edx ebx +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jz loc_420692  +
mov ecx ebx +
shl ecx 4 +
add ebx ecx +
and ebx edi +
or ebx 1 +
add edx ebx +
and edx edi +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_420686  +
mov [ecx] esi +
add ebp 4 +
cmp [esp+3Ch+var_24] ebp +
ja loc_420660  +
mov ebx [esp+3Ch+arg_0] +
cmp byte ptr [ebx+4Ch] 0 +
jnz loc_420705  +
mov [ebx+2Ch] eax +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+38h] eax +
mov eax [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_420464  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx eax +
mov eax edi +
test ecx ecx +
jz loc_4205AA  +
mov eax [esp+3Ch+var_18] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
jmp loc_420464  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_24] +
jmp loc_4206A7  +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call sub_449250  +
mov edx [ebx+0Ch] +
jmp loc_4205C9  +
mov [esp+3Ch+var_1C] esi +
jmp loc_420464  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_420523  +
xor eax eax +
jmp loc_4205AA  +
or byte ptr [ebx+28h] 2 +
jmp loc_4205FF  +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_8] +
mov edi [esp+20h+arg_4] +
test esi esi +
jz loc_4207BB  +
lea ebx [edi+esi] +
mov eax edi +
xor edx edx +
lea esi [esi+0] +
add eax 1 +
movzx ecx byte ptr [eax-1] +
imul edx edx +
cmp eax ebx +
lea edx [edx+ecx-71h] +
jnz loc_420780  +
mov eax [esp+20h+arg_C] +
add edx esi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov [esp+20h+var_20] eax +
call sub_420410  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor edx edx +
jmp loc_420792  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_4207E7  +
add ebx 4 +
cmp ebp ebx +
jbe loc_420809  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_4207E0  +
mov ecx [esi+40h] +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_14] edx +
call edi  +
test eax eax +
jnz loc_4207E0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_420820  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_420847  +
add ebx 4 +
cmp ebp ebx +
jbe loc_420876  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_420840  +
mov ecx [esi+40h] +
mov edx [esp+38h] +
mov [esp+4] eax +
mov [esp] ecx +
mov [esp+8] edx +
call edi  +
test eax eax +
jz loc_420840  +
mov dword ptr [ebx] 0FFFFFFFFh +
add ebx 4 +
cmp ebp ebx +
ja loc_420847  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+30h] +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_42089E  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov [ebx+2Ch] eax +
mov eax [esp+28h] +
mov [ebx+38h] eax +
mov eax [esp+2Ch] +
mov [ebx+3Ch] eax +
mov eax esi +
mov [ebx+4Ch] al +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
xor ebp ebp +
push edi  +
push esi  +
xor esi esi +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov eax [esp+60h] +
fldz   +
mov dword ptr [esp+20h] 0 +
mov ecx [eax+2Ch] +
mov eax [eax+38h] +
shl eax 2 +
mov [esp+28h] eax +
add eax ecx +
mov [esp+18h] eax +
jmp loc_42091C  +
test eax eax +
jz loc_420913  +
mov edi [eax+4] +
xor edx edx +
mov [esp+3Ch] edx +
mov [esp+38h] edi +
add ebp edi +
cmp ebx edi +
fild  qword ptr [esp+38h] +
cmovb ebx edi +
add esi 1 +
fmul st st +
faddp st(1) st +
add ecx 4 +
cmp [esp+18h] ecx +
jbe loc_420931  +
mov eax [ecx] +
cmp eax 0FFFFFFFFh +
jnz loc_4208F0  +
add dword ptr [esp+20h] 1 +
add ecx 4 +
cmp [esp+18h] ecx +
ja loc_42091C  +
mov eax [esp+60h] +
xor edx edx +
mov [esp+1Ch] edx +
mov edx [esp+60h] +
fstp  qword ptr [esp+30h] +
mov eax [eax+3Ch] +
mov [esp] edx +
mov [esp+18h] eax +
call loc_4493C0  +
mov edx [esp+18h] +
mov dword ptr [esp+4] offset aStringPoolEntr +
mov [esp+8] edx +
mov edx ds:_iob +
mov edi eax +
sub edi ebp +
lea eax [edx+40h] +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+18h] +
mov edx [esp+1Ch] +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aIdentifiersLu_ +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
xor edx edx +
fild  qword ptr [esp+38h] +
fst  qword ptr [esp+18h] +
mov [esp+3Ch] edx +
add eax 40h +
mov [esp+38h] esi +
fild  qword ptr [esp+38h] +
fmul  ds:flt_475834 +
mov [esp] eax +
fdivrp st(1) st +
fstp  qword ptr [esp+0Ch] +
call sub_45A760  +
mov eax [esp+60h] +
mov eax [eax+38h] +
mov dword ptr [esp+4] offset aSlotsLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset aDeletedLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
cmp edi 27FFh +
mov ecx 20h +
fld  qword ptr [esp+30h] +
jbe loc_420A2D  +
cmp edi 9FFFFFh +
ja loc_420C40  +
shr edi 0Ah +
mov ecx 6Bh +
cmp ebp 27FFh +
jbe loc_420A50  +
cmp ebp 9FFFFFh +
ja loc_420C31  +
mov edx ebp +
mov eax 6Bh +
shr edx 0Ah +
jmp loc_420A57  +
mov edx ebp +
mov eax 20h +
mov [esp+0Ch] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+20h] +
mov [esp+14h] ecx +
mov [esp+10h] edi +
mov [esp+8] edx +
add eax 40h +
mov dword ptr [esp+4] offset aBytesLuCLuCOve +
mov [esp] eax +
call sub_45A760  +
cmp dword ptr [esp+28h] 27FFh +
fld  qword ptr [esp+20h] +
jbe loc_420AB0  +
cmp dword ptr [esp+28h] 9FFFFFh +
ja loc_420C20  +
mov eax [esp+28h] +
mov edx 6Bh +
shr eax 0Ah +
jmp loc_420AB9  +
mov eax [esp+28h] +
mov edx 20h +
mov [esp+8] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+28h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aTableSizeLuC +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
xor edx edx +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov [esp+38h] ebp +
mov eax [eax+48h] +
fild  qword ptr [esp+38h] +
fld  qword ptr [esp+18h] +
fdiv st(1) st +
mov [esp+38h] eax +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov eax [eax+44h] +
mov dword ptr [esp+4] offset aCollSearch_4f +
fld  st(1) +
fmul st st(2) +
fxch  st(2) +
fstp  qword ptr [esp+30h] +
fxch  st(1) +
fstp  qword ptr [esp+20h] +
fld  qword ptr [esp+28h] +
fdivrp st(1) st +
fstp  qword ptr [esp+28h] +
fild  qword ptr [esp+38h] +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
fild  qword ptr [esp+38h] +
fdivp st(1) st +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_45A760  +
mov eax [esp+60h] +
xor edx edx +
mov eax [eax+44h] +
mov [esp+3Ch] edx +
mov dword ptr [esp+4] offset aInsSearch_4f +
mov [esp+38h] eax +
mov eax ds:_iob +
fild  qword ptr [esp+38h] +
fdivr  qword ptr [esp+18h] +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_45A760  +
fld  qword ptr [esp+28h] +
fsub  qword ptr [esp+20h] +
fldz   +
fld  st +
fucomi st st(2) +
fld  qword ptr [esp+30h] +
ja loc_420C5F  +
fxch  st(3) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_420C50  +
fstp  st(1) +
jmp loc_420BB2  +
fstp  st(1) +
fld  st +
fld  ds:dbl_475838 +
lea esi [esi+0] +
fld  st(1) +
fmul st st(2) +
fsub st st(3) +
fld  st(2) +
fadd st st(3) +
fdivp st(1) st +
fsub st(2) st +
fucomip st st(1) +
ja loc_420BC0  +
fstp  st +
fstp  st(1) +
mov eax ds:_iob +
fstp  qword ptr [esp+10h] +
fstp  qword ptr [esp+8] +
mov dword ptr [esp+4] offset aAvg_Entry_2fBy +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aLongestEntryLu +
add eax 40h +
mov [esp] eax +
call sub_45A760  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+28h] +
mov edx 4Dh +
shr eax 14h +
jmp loc_420AB9  +
***
mov edx ebp +
mov eax 4Dh +
shr edx 14h +
jmp loc_420A57  +
***
shr edi 14h +
mov ecx 4Dh +
jmp loc_420A2D  +
***
fucomi st st(1) +
jnz loc_420BB0  +
fstp  st +
jmp loc_420BD6  +
***
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov dword ptr [esp+8] offset aApprox_sqrt +
mov dword ptr [esp+4] 15Ch +
mov dword ptr [esp] offset a____GccLibcppS +
call sub_406BF0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movq mm6 qword ptr ds:oword_476280 +
movq mm5 qword ptr ds:oword_476290 +
movq mm4 qword ptr ds:oword_4762A0 +
movq mm3 qword ptr ds:oword_4762B0 +
mov eax ecx +
and ecx 7 +
and eax 0FFFFFFF8h +
movq mm1 qword ptr [eax] +
shl edx cl +
jmp loc_420CCF  +
add eax 8 +
mov edx 0FFFFFFFFh +
movq mm1 qword ptr [eax] +
movq mm2 mm1 +
movq mm0 mm1 +
pcmpeqb mm2 mm6 +
pcmpeqb mm0 mm5 +
por mm0 mm2 +
movq mm2 mm1 +
pcmpeqb mm2 mm4 +
por mm0 mm2 +
pcmpeqb mm1 mm3 +
por mm0 mm1 +
pmovmskb ecx mm0 +
and edx ecx +
jz loc_420CC4  +
emms   +
bsf edx edx +
add eax edx +
retn   +
***
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movdqa xmm6 oword ptr ds:oword_476280 +
movdqa xmm5 oword ptr ds:oword_476290 +
movdqa xmm4 oword ptr ds:oword_4762A0 +
movdqa xmm3 oword ptr ds:oword_4762B0 +
mov eax ecx +
and ecx 0Fh +
and eax 0FFFFFFF0h +
movdqa xmm1 oword ptr [eax] +
shl edx cl +
jmp loc_420D4C  +
add eax 10h +
mov edx 0FFFFFFFFh +
movdqa xmm1 oword ptr [eax] +
movdqa xmm2 xmm1 +
movdqa xmm0 xmm1 +
pcmpeqb xmm2 xmm6 +
pcmpeqb xmm0 xmm5 +
por xmm0 xmm2 +
movdqa xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pcmpeqb xmm2 xmm4 +
por xmm0 xmm2 +
por xmm0 xmm1 +
pmovmskb ecx xmm0 +
and edx ecx +
jz loc_420D40  +
bsf edx edx +
add eax edx +
retn   +
***
mov ebx eax +
sub esp 14h +
mov esi [eax+20h] +
cmp esi [eax+24h] +
jz loc_420DB6  +
mov eax [eax+18h] +
lea eax [eax+esi*8] +
add esi 1 +
mov [eax] edx +
mov [eax+4] ecx +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 64h +
lea eax [esi+esi] +
mov [ebx+24h] eax +
mov eax [ebx+18h] +
shl esi 4 +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_14] eax +
call sub_437230  +
mov esi [ebx+20h] +
mov ecx [esp+14h+var_8] +
mov edx [esp+14h+var_C] +
mov [ebx+18h] eax +
jmp loc_420DA2  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax] +
test eax eax +
jz loc_420E03  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 10h +
call sub_4371B0  +
mov [ebx] eax +
mov esi eax +
mov [eax+4] ebx +
mov [esp+14h+var_14] 0FA0h +
call sub_4371B0  +
mov dword ptr [esi] 0 +
mov [esi+8] eax +
add eax 0FA0h +
mov [esi+0Ch] eax +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov esi [eax] +
mov edi [esi] +
movzx eax byte ptr [edi] +
cmp al 24h +
jz loc_420E70  +
cmp byte ptr [ebx+263h] 0 +
jz loc_420E63  +
cmp al 5Ch +
jz loc_420EB3  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+262h] 0 +
jz loc_420E63  +
add edi 1 +
mov ebp 1 +
mov [esi] edi +
cmp byte ptr [ebx+264h] 0 +
jz loc_420E63  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_420E63  +
mov byte ptr [ebx+264h] 0 +
mov [esp+48h+var_40] offset aInIdentifier_0 +
mov [esp+48h+var_44] 2 +
mov [esp+48h+var_48] ebx +
call sub_41FFB0  +
jmp loc_420E63  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 55h +
jnz loc_420E63  +
add edi 2 +
cmp edx 1 +
mov edx [esi+10h] +
sbb eax eax +
not eax  +
mov [esi] edi +
add eax 2 +
lea edi [esp+48h+var_1C] +
mov [esp+48h+var_2C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_412D10  +
test al al +
jnz loc_420F10  +
sub dword ptr [esi] 2 +
jmp loc_420E63  +
mov ebp 1 +
jmp loc_420E63  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ebx] +
test cl cl +
mov [esp+2Ch+var_10] edx +
mov esi [esp+2Ch+arg_0] +
movzx edx byte ptr [edx] +
mov edi [eax] +
jnz loc_420F8E  +
movzx eax byte ptr [edi] +
lea ebp [edx-71h] +
test ds:word_479A60[eax+eax] 204h +
jz loc_420F69  +
nop   +
imul ebp ebp +
add edi 1 +
lea ebp [ebp+eax-71h] +
movzx eax byte ptr [edi] +
test ds:word_479A60[eax+eax] 204h +
jnz loc_420F50  +
movzx eax byte ptr [edi-1] +
xor edx edx +
mov ecx esi +
mov byte ptr [esi+4] 0 +
mov [esi] eax +
mov eax [ebx] +
mov [eax] edi +
mov eax ebx +
call sub_420E40  +
test al al +
jz loc_421060  +
mov eax [ebx] +
mov edi [eax] +
movzx edx byte ptr [edi] +
test ds:word_479A60[edx+edx] 204h +
jnz loc_420FC2  +
lea esi [esi+0] +
xor edx edx +
mov ecx esi +
mov eax ebx +
call sub_420E40  +
test al al +
jz loc_420FD1  +
mov edx [ebx] +
mov edi [edx] +
movzx edx byte ptr [edi] +
test ds:word_479A60[edx+edx] 204h +
jz loc_420FA0  +
mov byte ptr [esi+4] 0 +
mov [esi] edx +
mov edx [ebx] +
add dword ptr [edx] 1 +
mov edi [edx] +
jmp loc_420FB3  +
mov eax [ebx] +
mov edi [esp+2Ch+var_10] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_418100  +
mov esi eax +
mov eax [ebx] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_425480  +
mov ecx [esp+2Ch+arg_4] +
mov [ecx] eax +
movzx edx word ptr [esi+14h] +
shr dx 6 +
test dl 8 +
jz loc_421051  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_421051  +
and edx 2 +
jnz loc_421097  +
cmp [ebx+2B8h] esi +
jz loc_4210C0  +
test byte ptr [esi+15h] 80h +
jz loc_421051  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aIdentifierSIsA +
mov [esp+2Ch+var_28] 0Fh +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_41FFF0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [ebx+234h] +
mov [esp+2Ch+var_1C] 1 +
sub edi ecx +
add ebp edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_420410  +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
jmp loc_421009  +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_421021  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aAttemptToUsePo +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_41FFB0  +
jmp loc_421021  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_42102D  +
cmp byte ptr [ebx+248h] 0 +
jz loc_4210F0  +
mov [esp+2Ch+var_24] offset a__va_args__Can +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_41FFB0  +
jmp loc_42102D  +
mov [esp+2Ch+var_24] offset a__va_args__C_0 +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_41FFB0  +
jmp loc_42102D  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx eax +
and ebx 0FFFFFFFCh +
and eax 3 +
mov edx [ebx] +
jz loc_42113B  +
lea ecx ds:0[eax*8] +
mov eax 0FFFFFFFFh +
shl eax cl +
and edx eax +
jmp loc_42113B  +
add ebx 4 +
mov edx [ebx] +
mov ecx edx +
mov ebp edx +
xor ecx 0D0D0D0Dh +
xor ebp 0A0A0A0Ah +
mov eax ecx +
add ecx 7EFEFEFFh +
not eax  +
mov edi edx +
xor eax ecx +
mov ecx ebp +
not ecx  +
add ebp 7EFEFEFFh +
xor edi 5C5C5C5Ch +
xor ecx ebp +
or eax ecx +
mov ecx edi +
mov esi edx +
add edi 7EFEFEFFh +
not ecx  +
xor esi 3F3F3F3Fh +
xor ecx edi +
or eax ecx +
mov ecx esi +
not ecx  +
add esi 7EFEFEFFh +
xor ecx esi +
or eax ecx +
test eax 81010100h +
jz loc_421136  +
xor eax eax +
lea ecx ds:0[eax*8] +
mov esi edx +
shr esi cl +
mov ecx esi +
cmp cl 0Ah +
jz loc_4211C8  +
cmp cl 0Dh +
jz loc_4211C8  +
cmp cl 5Ch +
jz loc_4211C8  +
cmp cl 3Fh +
jz loc_4211C8  +
add eax 1 +
cmp eax 4 +
jnz loc_42119A  +
jmp loc_421136  +
test eax eax +
js loc_421136  +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [edx] +
test al al +
movzx ebx al +
jns loc_421298  +
mov esi ebx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx ebx +
add ecx 1 +
test bl 80h +
jnz loc_421200  +
mov ebx 7Fh +
sar ebx cl +
and ebx esi +
cmp ecx 1 +
jz loc_4212B8  +
movzx eax byte ptr [edx+1] +
shl ebx 6 +
lea esi [edx+1] +
mov ebp eax +
and eax 0C0h +
and ebp 3Fh +
or ebx ebp +
add eax 0FFFFFF80h +
jnz loc_42129C  +
lea eax [edx+ecx-1] +
jmp loc_42125D  +
add esi 1 +
movzx edx byte ptr [esi] +
shl ebx 6 +
mov ebp ebx +
mov ebx edx +
and edx 0C0h +
and ebx 3Fh +
or ebx ebp +
add edx 0FFFFFF80h +
jnz loc_42129C  +
cmp esi eax +
jnz loc_421240  +
mov ebp ecx +
mov byte ptr [edi] 5Ch +
lea edx [edi+2] +
mov ecx 1Ch +
mov byte ptr [edi+1] 55h +
mov esi ebx +
add edx 1 +
shr esi cl +
sub ecx 4 +
and esi 0Fh +
cmp ecx 0FFFFFFFCh +
movzx eax ds:byte_475955[esi] +
mov [edx-1] al +
jnz loc_421272  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebp ebp +
jmp loc_421263  +
mov [esp+24h+var_1C] offset aUtf8_to_ucn +
mov [esp+24h+var_20] 0C56h +
mov [esp+24h+var_24] offset a____GccLibcp_0 +
call sub_406BF0  +
mov ebp 1 +
jmp loc_421263  +
***
sub esp 24h +
movzx esi byte ptr [edx] +
test byte ptr [esi+esi+479A61h] 2 +
jz loc_421340  +
movzx ebx byte ptr [edx+1] +
sub esi 71h +
lea ecx [edx+1] +
test ds:word_479A60[ebx+ebx] 204h +
jz loc_421301  +
imul esi esi +
add ecx 1 +
lea esi [esi+ebx-71h] +
movzx ebx byte ptr [ecx] +
test ds:word_479A60[ebx+ebx] 204h +
jnz loc_4212E8  +
mov eax [eax] +
sub ecx edx +
add esi ecx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_420410  +
test eax eax +
jz loc_421340  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
push ebx  +
jz loc_4213D1  +
xor eax eax +
cpuid   +
test eax eax +
jz loc_4213D1  +
mov eax 1 +
cpuid   +
and ecx 100000h +
mov eax offset loc_420D00 +
jnz loc_4213CA  +
test edx 4000000h +
jnz loc_4213CA  +
and edx 2000000h +
mov eax offset loc_420C90 +
jz loc_421413  +
mov ds:dword_480274 eax +
pop ebx  +
retn   +
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
jz loc_421413  +
mov eax 80000000h +
cpuid   +
cmp eax 80000000h +
jbe loc_421413  +
mov eax 80000001h +
cpuid   +
and edx offset sub_408000 +
cmp edx offset sub_408000 +
jnz loc_421413  +
mov eax offset loc_420C90 +
jmp loc_4213CA  +
mov eax offset sub_421110 +
mov ds:dword_480274 eax +
pop ebx  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov esi [eax] +
mov ebx [esi+8] +
test byte ptr [esi+3Ch] 2 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+4] ebx +
mov [esi] ebx +
mov byte ptr [esi+38h] 0 +
jz loc_421486  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_42146E  +
cmp al 0Dh +
jnz loc_421464  +
jmp loc_42146E  +
cmp al 0Ah +
jz loc_42146E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 0Dh +
jnz loc_421460  +
cmp al 0Dh +
jz loc_4214D4  +
lea edx [ebx+1] +
mov ebp edx +
jmp loc_4214BA  +
cmp byte ptr [ebx+1] 3Fh +
jz loc_421558  +
add ebx 1 +
mov eax [esi+10h] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_20] eax +
call ds:dword_480274  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_4214E7  +
cmp al 3Fh +
jz loc_421479  +
mov edx [esi+10h] +
cmp ebx edx +
jz loc_421472  +
cmp al 0Dh +
mov ebp ebx +
jz loc_4214EE  +
test edi edi +
jnz loc_421500  +
lea edx [ebx+1] +
add ebp 1 +
mov byte ptr [ebx] 0Ah +
mov eax esi +
mov ecx 0Ah +
call sub_420D90  +
mov [esi+8] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+10h] ebx +
jz loc_421472  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_421472  +
lea ebp [ebx+2] +
lea edx [ebx+1] +
jmp loc_4214BA  +
mov edi ebx +
add ebx 1 +
jmp loc_421486  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_4214B0  +
lea ebp [ebx+1] +
cmp edx ebp +
jnz loc_4214B0  +
lea ebp [ebx+2] +
jmp loc_4214BA  +
movzx eax byte ptr [ebx-1] +
test byte ptr [eax+eax+479A61h] 8 +
jz loc_421661  +
mov eax ebx +
sub eax 1 +
movzx edx byte ptr [eax-1] +
test byte ptr [edx+edx+479A61h] 8 +
jnz loc_421514  +
mov [esp+24h+var_18] eax +
sub eax 1 +
cmp edi eax +
jnz loc_4214B4  +
cmp ebx [esp+24h+var_18] +
mov ecx 20h +
mov eax 5Ch +
mov edx edi +
cmovz ecx eax +
mov eax esi +
mov edi edx +
call sub_420D90  +
mov ebx [esp+24h+var_18] +
mov [esi+8] edi +
sub ebx 2 +
jmp loc_421593  +
movzx ecx byte ptr [ebx+2] +
cmp ds:byte_480280[ecx] 0 +
jz loc_421483  +
mov eax esi +
mov edx ebx +
call sub_420D90  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_421483  +
movzx eax byte ptr [ebx+2] +
lea ebp [ebx+2] +
movzx eax ds:byte_480280[eax] +
mov [ebx] al +
mov edi ebx +
lea eax [ebp+1] +
add ebx 1 +
mov [esp+24h+var_18] eax +
movzx eax byte ptr [ebp+1] +
cmp al 0Dh +
mov [edi+1] al +
jnz loc_421603  +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jz loc_421656  +
cmp byte ptr [ebp+2] 0Ah +
jz loc_42161A  +
mov edx [esi+8] +
cmp edx ebx +
jz loc_4215F4  +
movzx eax byte ptr [edi] +
movzx ecx al +
test byte ptr [ecx+ecx+479A61h] 8 +
jz loc_421637  +
mov edi ebx +
jmp loc_4215ED  +
movzx eax byte ptr [edi-1] +
movzx ecx al +
test byte ptr [ecx+ecx+479A61h] 8 +
jz loc_42167C  +
sub edi 1 +
cmp edx edi +
jnz loc_4215D8  +
mov ebp [esp+24h+var_18] +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_4214BA  +
cmp al 0Ah +
jz loc_421621  +
cmp al 3Fh +
jz loc_421695  +
mov edi ebx +
mov ebp [esp+24h+var_18] +
jmp loc_421595  +
lea eax [ebp+2] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jnz loc_4215BD  +
mov ebp eax +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_4214BA  +
cmp al 5Ch +
jnz loc_4215F4  +
mov edi ebx +
mov ecx 5Ch +
lea ebp [edi-1] +
mov eax esi +
mov edx ebp +
call sub_420D90  +
lea ebx [edi-2] +
mov [esi+8] ebp +
jmp loc_42160F  +
lea edx [ebx+1] +
add ebp 2 +
jmp loc_4214BA  +
lea eax [ebx-1] +
cmp eax edi +
mov edx eax +
jnz loc_4214B4  +
mov [esp+24h+var_18] ebx +
mov ecx 5Ch +
jmp loc_421543  +
cmp al 5Ch +
jnz loc_4215F4  +
cmp ebx edi +
mov ecx 5Ch +
mov eax 20h +
cmovnz ecx eax +
jmp loc_421642  +
cmp byte ptr [ebp+2] 3Fh +
jnz loc_42160F  +
movzx ecx byte ptr [ebp+3] +
cmp ds:byte_480280[ecx] 0 +
jz loc_42160F  +
mov eax esi +
mov edx ebx +
call sub_420D90  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_42160F  +
movzx eax byte ptr [ebp+3] +
movzx eax ds:byte_480280[eax] +
mov [edi+1] al +
lea eax [ebp+3] +
mov [esp+24h+var_18] eax +
jmp loc_42160F  +
***
push ebx  +
sub esp 14h +
mov edx [eax] +
jmp loc_421728  +
cmp ebx ecx +
movzx ebx byte ptr [edx+3Ch] +
jbe loc_421710  +
test bl 2 +
jnz loc_421710  +
mov [edx+8] ecx +
mov [esp+18h+var_18] esi +
shr bl 2 +
call sub_41B540  +
mov edx [esi] +
and ebx 1 +
test edx edx +
jz loc_421750  +
test bl bl +
jnz loc_421750  +
movzx eax byte ptr [edx+38h] +
test al al +
jz loc_421758  +
mov ebx [edx+8] +
mov ecx [edx+10h] +
cmp ebx ecx +
jb loc_421763  +
cmp byte ptr [esi+11h] 0 +
jnz loc_421750  +
cmp ecx [edx+0Ch] +
jnz loc_421700  +
movzx ebx byte ptr [edx+3Ch] +
jmp loc_421710  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_421420  +
mov eax [esp+18h+var_C] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
mov ebx [ebp+0] +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
nop   +
mov eax [esp+3Ch+var_20] +
mov edi [esp+3Ch+var_1C] +
lea esi [eax+edx*8] +
mov eax [esi] +
cmp eax edi +
mov [esp+3Ch+var_18] eax +
ja loc_4219B0  +
lea edi [eax+1] +
mov eax [esi+4] +
add edx 1 +
sub edi [ebx+4] +
mov [ebx+1Ch] edx +
cmp eax 20h +
jnz loc_421833  +
mov eax [esp+3Ch+arg_4] +
test eax eax +
jz loc_4219B8  +
mov eax [ebx+10h] +
cmp [ebx+8] eax +
ja loc_4218D0  +
mov eax [esi] +
mov esi [ebp+1Ch] +
mov [ebx+4] eax +
mov eax [esi+8] +
lea edx [eax-1] +
imul edx edx +
add edx [esi] +
mov [esp+3Ch+var_34] 0 +
mov eax [esi+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov edi [edx+0Ch] +
sub eax [edx] +
mov [esp+3Ch+var_3C] esi +
shr eax cl +
lea eax [edi+eax+1] +
mov [esp+3Ch+var_38] eax +
call sub_40F3B0  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
jmp loc_4217A0  +
cmp eax 5Ch +
jz loc_4217D9  +
movzx ecx ds:byte_480280[eax] +
test cl cl +
mov byte ptr [esp+3Ch+var_14] cl +
jz loc_4218A5  +
cmp byte ptr [ebp+258h] 0 +
jz loc_4217A0  +
mov ecx [esp+3Ch+arg_4] +
test ecx ecx +
jnz loc_421901  +
cmp byte ptr [ebp+24Dh] 0 +
jz loc_421980  +
mov edx [ebp+1Ch] +
movzx ecx byte ptr [esp+3Ch+var_14] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CCon +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_420100  +
jmp loc_42178E  +
test eax eax +
jz loc_4217A0  +
mov [esp+3Ch+var_34] offset a_cpp_process_l +
mov [esp+3Ch+var_38] 48Bh +
mov [esp+3Ch+var_3C] offset a____GccLibcp_0 +
call sub_406BF0  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashNewli +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_4200B0  +
mov eax [ebx+10h] +
mov [ebx+8] eax +
jmp loc_4217E5  +
cmp eax 2Fh +
jnz loc_4217A0  +
cmp byte ptr [ebp+24Dh] 0 +
mov ecx [esp+3Ch+var_18] +
jnz loc_4219E3  +
add ecx 3 +
mov [esp+3Ch+var_14] ecx +
mov ecx [esp+3Ch+var_18] +
movzx ecx byte ptr [ecx+3] +
test byte ptr [ecx+ecx+479A61h] 8 +
mov byte ptr [esp+3Ch+var_18] cl +
jz loc_421967  +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_18] esi +
add ecx 1 +
movzx ebx byte ptr [ecx] +
movzx esi bl +
test byte ptr [esi+esi+479A61h] 8 +
jnz loc_421944  +
mov esi [esp+3Ch+var_18] +
mov byte ptr [esp+3Ch+var_18] bl +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_14] ecx +
cmp byte ptr [esp+3Ch+var_18] 0Ah +
jnz loc_4217A0  +
mov ecx [esp+3Ch+var_14] +
cmp [esi+8] ecx +
jbe loc_4217A0  +
nop   +
mov edx [ebp+1Ch] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CIgn +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_420100  +
jmp loc_42178E  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashAndNe +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_4200B0  +
jmp loc_4217D9  +
cmp ecx [esi+8] +
jz loc_42186D  +
lea esi [esi+0] +
jmp loc_4217A0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov edi [ebp+0] +
mov edx [edi] +
movzx eax byte ptr [edx+1] +
lea ebx [edx+1] +
cmp al 2Fh +
jz loc_421B10  +
cmp al 2Fh +
lea esi [ebx+1] +
jz loc_421A37  +
cmp al 0Ah +
jz loc_421A90  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
cmp al 2Fh +
lea esi [ebx+1] +
jnz loc_421A26  +
cmp byte ptr [ebx-1] 2Ah +
jz loc_421AF4  +
cmp byte ptr [ebp+255h] 0 +
jz loc_421A2A  +
movzx eax byte ptr [ebx+1] +
cmp al 2Ah +
jnz loc_421A2E  +
cmp byte ptr [ebx+2] 2Fh +
jz loc_421A2E  +
mov eax [ebp+1Ch] +
mov edx esi +
mov [edi] esi +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_1C] offset aWithinComment +
sub edx [edi+4] +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_2C] ebp +
call sub_420100  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
jmp loc_421A30  +
mov [edi] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_421780  +
mov eax [edi+10h] +
cmp [edi+8] eax +
jnb loc_421B1C  +
mov [esp+2Ch+var_2C] ebp +
call sub_421420  +
mov ebx [ebp+1Ch] +
mov eax [ebx+8] +
lea edx [eax-1] +
mov eax [edi+8] +
imul edx edx +
add edx [ebx] +
sub eax [edi+4] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov esi [edx+0Ch] +
sub eax [edx] +
mov [esp+2Ch+var_2C] ebx +
shr eax cl +
lea eax [esi+eax+1] +
mov [esp+2Ch+var_28] eax +
call sub_40F3B0  +
mov esi [edi] +
movzx eax byte ptr [esi] +
mov ebx esi +
jmp loc_421A30  +
mov [edi] esi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] 1 +
call sub_421780  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edx+2] +
movzx eax byte ptr [edx+2] +
jmp loc_421A1F  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
movzx ecx byte ptr [esi] +
lea eax [esi+1] +
movzx edx byte ptr [esi+1] +
sub ecx 71h +
test ds:word_479A60[edx+edx] 204h +
jz loc_421B6F  +
imul ecx ecx +
add eax 1 +
lea ecx [ecx+edx-71h] +
movzx edx byte ptr [eax] +
test ds:word_479A60[edx+edx] 204h +
jnz loc_421B56  +
mov edx [ebx+234h] +
sub eax esi +
add ecx eax +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_14] 1 +
mov [esp+24h+var_24] edx +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_1C] eax +
call sub_420410  +
movzx edx word ptr [eax+14h] +
mov esi eax +
shr dx 6 +
test dl 8 +
jz loc_421BE0  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_421BE0  +
and edx 2 +
jnz loc_421BE8  +
cmp esi [ebx+2B8h] +
jz loc_421C0E  +
test byte ptr [esi+15h] 80h +
jz loc_421BE0  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aIdentifierSIsA +
mov [esp+24h+var_20] 0Fh +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_41FFF0  +
nop   +
lea esi [esi+0] +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_421BAF  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aAttemptToUsePo +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_41FFB0  +
jmp loc_421BAF  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_421BB7  +
cmp byte ptr [ebx+248h] 0 +
jz loc_421C37  +
mov [esp+24h+var_1C] offset a__va_args__Can +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_41FFB0  +
jmp loc_421BB7  +
mov [esp+24h+var_1C] offset a__va_args__C_0 +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_41FFB0  +
jmp loc_421BB7  +
***
mov eax [esp+4] +
add eax 2ECh +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
shl ebx 4 +
mov [esp+14h+var_14] ebx +
call sub_4371B0  +
mov dword ptr [esi] 0 +
add ebx eax +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov eax [esi+104h] +
mov edi [esi+0F0h] +
mov ebp [esi+108h] +
mov ebx [eax+0Ch] +
mov [esp+1Ch+var_10] eax +
mov eax edi +
sub ebx edi +
sar ebx 4 +
test ebp ebp +
jz loc_421D50  +
cmp ebx ebp +
jle loc_421D73  +
cmp ebx 1 +
jle loc_421D50  +
sub ebx 1 +
cmp ebx ebp +
cmovle ebp ebx +
mov [esp+1Ch+var_18] eax +
shl ebp 4 +
add eax 10h +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] eax +
call memmove  +
mov eax [esi+0F0h] +
jmp loc_421D5D  +
test ebx ebx +
jnz loc_421D5D  +
mov ecx [esp+1Ch+var_10] +
cmp [ecx+0Ch] eax +
jz loc_421DC0  +
lea edx [eax+10h] +
mov [esi+0F0h] edx +
mov edx [edi-10h] +
mov [eax] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+var_10] +
call sub_420DF0  +
cmp ebx ebp +
mov edx eax +
jl loc_421DD2  +
mov ecx [esi+104h] +
cmp ebx 1 +
mov eax [edx+8] +
mov [esp+1Ch+var_10] ecx +
mov ecx [ecx+0Ch] +
mov edx [ecx-10h] +
mov [eax] edx +
mov edx [ecx-0Ch] +
mov [eax+4] edx +
mov edx [ecx-8] +
mov [eax+8] edx +
mov ecx [ecx-4] +
mov [eax+0Ch] ecx +
mov eax [esi+0F0h] +
jg loc_421D28  +
jmp loc_421D50  +
mov eax ecx +
call sub_420DF0  +
mov [esi+104h] eax +
mov eax [eax+8] +
jmp loc_421D5D  +
mov ecx [eax+8] +
mov [esp+1Ch+var_10] eax +
mov eax ebp +
sub eax ebx +
shl eax 4 +
mov [esp+1Ch+var_18] ecx +
add ecx 10h +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ecx +
call memmove  +
mov edx [esp+1Ch+var_10] +
jmp loc_421D82  +
***
mov eax [esp+arg_0] +
cmp byte ptr [eax+8] 0 +
jnz loc_421E10  +
jmp sub_4216F0  +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax+4] +
mov edx ds:dword_4764A0[edx*8] +
cmp edx 1 +
jz loc_421E46  +
cmp edx 2 +
jnz loc_421E40  +
mov eax [eax+8] +
retn   +
mov eax 6 +
retn   +
mov eax [eax+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov edi [esp+0Ch+arg_4] +
mov esi [esp+0Ch+arg_0] +
mov eax [edi+4] +
mov ebp [edi] +
test eax eax +
jz loc_421EAE  +
xor ebx ebx +
jmp loc_421E8D  +
mov [esi] al +
add ebx 1 +
add esi 1 +
cmp [edi+4] ebx +
jbe loc_421EAE  +
lea edx [ebp+ebx+0] +
movzx eax byte ptr [edx] +
test al 80h +
jz loc_421E80  +
mov eax esi +
add esi 0Ah +
call sub_4211E0  +
lea ebx [eax+ebx-1] +
add ebx 1 +
cmp [edi+4] ebx +
ja loc_421E8D  +
add esp 0Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_8] +
mov ecx [esp+10h+arg_C] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4764A0[edx*8] +
cmp eax 1 +
jz loc_421F80  +
jle loc_421F44  +
cmp eax 2 +
jz loc_421F22  +
cmp eax 3 +
jnz loc_421F19  +
mov eax ds:off_4764A4[edx*8] +
mov [esp+10h+var_8] offset aUnspellableTok +
mov [esp+10h+var_C] 4 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_4] eax +
call sub_41FFB0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
add ebx [esi+8] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jnz loc_421F19  +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_421FC6  +
test al 10h +
jnz loc_421F80  +
mov eax ds:off_4764A4[edx*8] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
test al al +
jz loc_421F19  +
add ebx 1 +
add edx 1 +
mov [ebx-1] al +
movzx eax byte ptr [edx-1] +
test al al +
jnz loc_421F65  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test cl cl +
jz loc_421FB0  +
mov eax [esi+0Ch] +
mov edx [eax+4] +
mov eax [eax] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
mov eax [esi+0Ch] +
add ebx [eax+4] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+8] +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_421E60  +
mov eax ds:dword_4766C0[edx*4] +
jmp loc_421F5B  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [ecx] +
cmp [ebx+284h] eax +
jge loc_422077  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_422077  +
movzx eax byte ptr [edx+4] +
mov esi edx +
mov eax ds:dword_4764A0[eax*8] +
cmp eax 1 +
jz loc_422085  +
cmp eax 2 +
jz loc_422080  +
mov eax 6 +
mov [esp+20h+var_20] eax +
mov [esp+20h+var_4] ecx +
call sub_4371B0  +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
mov edi eax +
call sub_421EC0  +
mov ecx [esp+20h+var_4] +
mov edx [esi] +
sub eax edi +
cmp dword ptr [ecx] 1 +
mov [esp+20h+var_8] edi +
mov [esp+20h+var_C] eax +
jz loc_422095  +
mov [esp+20h+var_10] offset a_SIsNotInNfc +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] 10h +
mov [esp+20h+var_20] ebx +
call sub_420100  +
mov [esp+20h+var_20] edi +
call free  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edx+8] +
jmp loc_422010  +
mov eax [edx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_422010  +
mov [esp+20h+var_10] offset a_SIsNotInNfkc +
jmp loc_422053  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test al 2 +
jnz loc_4220B8  +
test al 10h +
jnz loc_4220C0  +
mov eax ds:off_4764A4[edx*8] +
retn   +
***
mov eax ds:dword_4766C0[edx*4] +
retn   +
***
mov [esp+4] edx +
jmp loc_430070  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4764A0[edx*8] +
cmp eax 1 +
jz loc_422140  +
cmp eax 2 +
jz loc_4221A8  +
test eax eax +
jz loc_422104  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_4221D0  +
test al 10h +
jnz loc_422140  +
mov esi ds:off_4764A4[edx*8] +
movzx eax byte ptr [esi] +
nop   +
add esi 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call putc  +
movzx eax byte ptr [esi] +
test eax eax +
jnz loc_422120  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+8] +
mov edx [eax+4] +
mov edi [eax] +
test edx edx +
jz loc_4220FC  +
xor ebp ebp +
jmp loc_42218C  +
lea eax [esp+2Ch+var_16] +
call sub_4211E0  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] 1 +
lea ebp [ebp+eax-1] +
lea eax [esp+2Ch+var_16] +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
mov eax [esi+8] +
add ebp 1 +
cmp [eax+4] ebp +
jbe loc_4220FC  +
lea edx [edi+ebp] +
test byte ptr [edx] 80h +
jnz loc_422150  +
mov [esp+2Ch+var_28] ebx +
mov eax [eax] +
movzx eax byte ptr [eax+ebp] +
mov [esp+2Ch+var_2C] eax +
call fputc  +
jmp loc_42217D  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4766C0[edx*4] +
jmp loc_42211B  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov ecx [ebx+4] +
mov edx [esi+4] +
xor ch ch +
xor dh dh +
cmp ecx edx +
jz loc_422203  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx ecx byte ptr [ebx+4] +
movzx edx cl +
mov edx ds:dword_4764A0[edx*8] +
cmp edx 2 +
jz loc_422250  +
cmp edx 3 +
jz loc_422235  +
cmp edx 1 +
jz loc_422278  +
cmp cl 26h +
mov al 1 +
jnz loc_4221FD  +
mov eax [esi+8] +
cmp [ebx+8] eax +
setz al  +
movzx eax al +
jmp loc_4221FD  +
cmp cl 50h +
mov eax 1 +
jnz loc_4221FD  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jz loc_422295  +
xor eax eax +
jmp loc_4221FD  +
mov edx [ebx+8] +
cmp edx [esi+8] +
jnz loc_4221FD  +
mov [esp+18h+var_10] edx +
mov eax [esi+0Ch] +
mov [esp+18h+var_14] eax +
mov eax [ebx+0Ch] +
mov [esp+18h+var_18] eax +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
jmp loc_4221FD  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jnz loc_4221FD  +
mov eax [esi+0Ch] +
cmp [ebx+0Ch] eax +
setz al  +
movzx eax al +
jmp loc_4221FD  +
mov esi [esi+0Ch] +
cmp [ebx+0Ch] esi +
jz loc_4221FD  +
xor eax eax +
jmp loc_4221FD  +
***
push ebp  +
mov edx 35h +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov eax [esp+1Ch] +
test byte ptr [ecx+6] 10h +
movzx ebp byte ptr [eax+4] +
movzx eax byte ptr [ecx+4] +
cmovz edx eax +
mov eax [esp+1Ch] +
movzx eax word ptr [eax+6] +
test al 10h +
jnz loc_422321  +
mov ebx ebp +
movzx edi bl +
mov esi edi +
test al 2 +
jz loc_422305  +
mov eax ds:dword_4766C0[esi*4] +
movzx esi byte ptr [eax] +
cmp esi 3Dh +
jnz loc_422315  +
cmp edx 0Dh +
mov eax 1 +
jg loc_422315  +
***
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_4764A0[esi*8] +
test eax eax +
jz loc_422330  +
mov esi 0FFFFFFFFh +
cmp edx 42h +
ja sub_422380  +
jmp ds:off_475A58[edx*4]  +
***
mov esi 35h +
mov edi 35h +
jmp loc_4222E3  +
***
mov eax ds:off_4764A4[esi*8] +
movzx esi byte ptr [eax] +
jmp loc_4222F1  +
***
and esi 0FFFFFFFBh +
xor eax eax +
cmp esi 3Ah +
setz al  +
jmp loc_422300  +
***
mov eax [ecx+0Ch] +
xor eax eax +
xor eax eax +
xor eax eax +
cmp esi 2Ah +
cmp esi 3Eh +
setz al  +
cmp esi 2Dh +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_422300  +
***
xor eax eax +
cmp esi 2Bh +
setz al  +
jmp loc_422300  +
***
cmp esi 25h +
jz loc_4223F0  +
cmp esi 3Ch +
jnz loc_422343  +
nop   +
mov eax 1 +
jmp loc_422300  +
***
xor eax eax +
cmp esi 3Eh +
setz al  +
jmp loc_422300  +
***
and edi 0FFFFFFFDh +
mov eax 1 +
cmp edi 35h +
jz loc_422300  +
cmp esi 2Bh +
jz loc_422300  +
sub esi 2Dh +
xor eax eax +
cmp esi 1 +
setbe al  +
jmp loc_422300  +
***
cmp edi 37h +
cmp esi 25h +
cmp esi 25h +
setz al  +
cmp esi 23h +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_422300  +
***
mov ebx [esp+arg_10] +
xor eax eax +
cmp byte ptr [ebx+271h] 0 +
jz loc_422300  +
cmp edi 35h +
jz loc_4223F0  +
mov ebx ebp +
movzx ebp bl +
cmp ds:dword_4764A0[ebp*8] 2 +
jnz loc_422300  +
mov ebx [esp+arg_18] +
mov edx [ebx+0Ch] +
movzx edx byte ptr [edx] +
test byte ptr [edx+edx+479A61h] 2 +
jnz loc_4223F0  +
jmp loc_422300  +
***
xor eax eax +
cmp esi 2Ah +
setz al  +
jmp loc_422300  +
***
mov eax [esp+arg_18] +
mov edx [eax+8] +
test edx edx +
jz loc_4223F0  +
mov eax [eax+0Ch] +
lea ebx [eax+edx] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:word_479A60[ecx+ecx] 204h +
jnz loc_422531  +
cmp dl 24h +
jnz loc_422453  +
mov ecx [esp+arg_10] +
cmp byte ptr [ecx+262h] 0 +
jz loc_422453  +
add eax 1 +
cmp eax ebx +
jnz loc_422505  +
jmp loc_4223F0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
call sub_41EE00  +
mov ebx eax +
cmp byte ptr [ebx+4] 16h +
jz loc_422590  +
mov [esp] ebx +
mov [esp+4] esi +
call sub_4220D0  +
mov [esp] edi +
call sub_41EE00  +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_422558  +
mov [esp+4] esi +
mov dword ptr [esp] 20h +
call putc  +
cmp byte ptr [ebx+4] 16h +
jnz loc_42255E  +
mov [esp+24h] esi +
mov dword ptr [esp+20h] 0Ah +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp putc  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_4226C2  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
lea edi [eax+78h] +
mov ebp eax +
mov [esp+2Ch+var_2C] edi +
add ebp 2 +
call sub_4371B0  +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] offset aS_6 +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call sub_45A790  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41EE00  +
mov ebx eax +
nop   +
movzx eax byte ptr [ebx+4] +
cmp al 16h +
jz loc_42269A  +
mov eax ds:dword_4764A0[eax*8] +
cmp eax 1 +
jz loc_4226A8  +
cmp eax 2 +
jnz loc_4226B8  +
mov eax [ebx+8] +
lea eax [ebp+eax+2] +
cmp edi eax +
jnb loc_422645  +
add edi edi +
cmp eax edi +
cmovnb edi eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_437230  +
mov esi eax +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+ebp] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_421EC0  +
mov ebp eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
sub ebp esi +
mov [esp+2Ch+var_2C] eax +
call sub_41EE00  +
mov ecx [esp+2Ch+var_10] +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_422600  +
mov byte ptr [ecx] 20h +
movzx eax byte ptr [ebx+4] +
add ebp 1 +
cmp al 16h +
jnz loc_42260C  +
mov byte ptr [esi+ebp] 0 +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_422628  +
mov eax 6 +
jmp loc_422628  +
mov [esp+2Ch+var_2C] 78h +
mov edi 78h +
xor ebp ebp +
call sub_4371B0  +
mov esi eax +
jmp loc_4225F1  +
***
mov ecx [esp+arg_0] +
mov edx ebx +
jmp loc_4226F2  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4226F0  +
mov eax [ecx+2Ch] +
mov [edx] eax +
mov [ecx+2Ch] ebx +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
lea ebx [eax+2Ch] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_422748  +
lea esi [ecx+ecx*2] +
shr esi 1 +
add esi 1F40h +
mov edx [eax+0Ch] +
sub edx [eax+4] +
cmp ecx edx +
ja loc_422740  +
cmp edx esi +
jbe loc_422790  +
mov ebx eax +
mov eax [eax] +
test eax eax +
jnz loc_422732  +
cmp ecx 1F3Fh +
mov eax 1F50h +
mov ebx 1F40h +
ja loc_422780  +
mov [esp+14h+var_14] eax +
call sub_4371B0  +
lea edx [eax+ebx] +
mov [edx+4] eax +
mov [edx+8] eax +
mov eax edx +
mov [edx+0Ch] edx +
mov dword ptr [edx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ebx [ecx+7] +
and ebx 0FFFFFFF8h +
lea eax [ebx+10h] +
jmp loc_42275A  +
mov edx [eax] +
mov [ebx] edx +
mov edx [eax+4] +
mov dword ptr [eax] 0 +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov edx [esp+14h+arg_8] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call sub_422710  +
mov edx [ebx+8] +
mov [ebx] eax +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
sub eax edx +
mov [esp+14h+var_C] eax +
call memcpy  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+arg_0] +
mov ebp [eax] +
mov eax [esp+34h+arg_4] +
test ebp ebp +
mov ebx [eax] +
jz loc_422890  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
sub esi eax +
cmp ecx esi +
jbe loc_422869  +
mov [esp+34h+var_30] edx +
sub edi esi +
mov [esp+34h+var_2C] esi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call memcpy  +
mov edx [esp+34h+var_18] +
mov eax [esp+34h+var_1C] +
add [ebx+8] esi +
add edx esi +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call sub_4227B0  +
mov edx [esp+34h+var_18] +
mov ebx eax +
mov eax [eax+8] +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call memcpy  +
mov eax [esp+34h+arg_0] +
add [ebx+8] edi +
mov [eax] ebp +
mov eax [esp+34h+arg_4] +
mov [eax] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_34] eax +
call sub_422710  +
mov edx [esp+34h+var_18] +
mov ebp eax +
mov eax [eax+8] +
mov ebx ebp +
jmp loc_422869  +
***
jmp sub_4228C0  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
mov ebx [edi] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_422710  +
mov edx [ebx+8] +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] ecx +
sub eax edx +
mov [esp+10h+var_8] eax +
call memcpy  +
mov [esi] ebx +
mov [edi] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_422920  +
***
mov eax [esp+18h+arg_0] +
test eax eax +
jnz loc_422932  +
jmp loc_422943  +
mov eax ebx +
mov ebx [eax] +
mov eax [eax+4] +
mov [esp+18h+var_18] eax +
call free  +
test ebx ebx +
jnz loc_422930  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
mov ebx [eax] +
lea eax [ebx-1] +
mov [esp+28h+var_1C] eax +
jmp loc_4229D9  +
cmp al 2Dh +
jnz loc_422A78  +
movzx eax byte ptr [ebx-1] +
and eax 0FFFFFFDFh +
cmp al 45h +
jz loc_4229D0  +
cmp al 50h +
jnz loc_4229FC  +
cmp byte ptr [edi+24Fh] 0 +
jz loc_4229FC  +
mov [esi] edx +
add ebx 1 +
mov byte ptr [esi+4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_479A60[edx+edx] 204h +
jnz loc_4229D0  +
cmp al 2Eh +
jz loc_4229D0  +
cmp al 27h +
jnz loc_4229B0  +
cmp byte ptr [edi+276h] 0 +
jnz loc_4229D0  +
mov edx [edi] +
mov eax [edx] +
cmp eax ebx +
jnb loc_422A22  +
cmp byte ptr [ebx-1] 27h +
jnz loc_422A22  +
cmp byte ptr [edi+276h] 0 +
jnz loc_422A1B  +
jmp loc_422A22  +
cmp byte ptr [ebx-1] 27h +
jnz loc_422A22  +
sub ebx 1 +
cmp ebx eax +
jnz loc_422A15  +
mov [edx] ebx +
mov ecx esi +
xor edx edx +
mov eax edi +
call sub_420E40  +
test al al +
jz loc_422A39  +
mov eax [edi] +
mov ebx [eax] +
jmp loc_4229D9  +
mov esi [esp+28h+var_1C] +
sub ebx esi +
mov [ebp+0] ebx +
add ebx 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edi +
call sub_422950  +
mov ebx eax +
mov eax [ebp+0] +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] eax +
call memcpy  +
mov eax [ebp+0] +
mov byte ptr [ebx+eax] 0 +
mov [ebp+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Bh +
jz loc_4229B8  +
jmp loc_4229FC  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
lea edx [ebx+1] +
mov [esp+28h+var_24] edx +
call sub_422950  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [esp+28h+arg_4] +
mov byte ptr [edi+ebx] 0 +
mov [esi+8] ebx +
mov [esi+0Ch] edi +
mov [esi+4] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+8Ch+var_6C] eax +
movzx eax byte ptr [ecx] +
mov [esp+8Ch+var_54] ecx +
mov edi [esp+8Ch+var_54] +
mov [esp+8Ch+var_58] edx +
movzx ebp al +
cmp ebp 55h +
jz loc_422B0E  +
cmp ebp 4Ch +
jnz loc_422B8C  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 52h +
jz loc_422E18  +
cmp ebp 22h +
jz loc_422C34  +
cmp ebp 27h +
jz loc_422D04  +
mov edi 44h +
mov ebp 3Eh +
movzx ecx byte ptr [esi] +
xor eax eax +
lea ebx [esi+1] +
movzx edx cl +
mov ecx [esp+8Ch+var_6C] +
cmp edx 5Ch +
jz loc_422B70  +
nop   +
cmp edx ebp +
jz loc_422BD0  +
cmp edx 0Ah +
jz loc_422BC0  +
test edx edx +
jnz loc_422BB8  +
movzx edx byte ptr [esi+1] +
mov eax 1 +
mov esi ebx +
cmp edx 5Ch +
lea ebx [esi+1] +
jnz loc_422B50  +
cmp byte ptr [ecx+0Bh] 0 +
jnz loc_422BB8  +
cmp byte ptr [esi+1] 0Ah +
mov edx 0Ah +
jz loc_422B66  +
lea ebx [esi+2] +
movzx edx byte ptr [esi+2] +
mov esi ebx +
jmp loc_422B68  +
cmp ebp 75h +
lea esi [edi+1] +
jnz loc_422B15  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 38h +
jnz loc_422B15  +
mov edi [esp+8Ch+var_54] +
lea esi [edi+3] +
movzx ebp byte ptr [edi+2] +
jmp loc_422B15  +
movzx edx byte ptr [esi+1] +
mov esi ebx +
jmp loc_422B68  +
cmp ebp 3Eh +
mov ebx esi +
mov edi 3Dh +
jz loc_422D93  +
test al al +
jz loc_422BE2  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_422DFB  +
cmp edi 3Dh +
jz loc_422CD2  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_422C70  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+28Bh] 0 +
jnz loc_422DA6  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_54] +
mov edx [esp+8Ch+var_58] +
mov eax [esi] +
mov [eax] ebx +
sub ebx ecx +
mov eax esi +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] ebx +
call sub_422A90  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Ch +
mov edi 3Fh +
jz loc_422B3A  +
cmp al 55h +
mov di 41h +
jz loc_422B3A  +
cmp al 75h +
mov di 3Eh +
jnz loc_422B3A  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+40h] +
jmp loc_422B3A  +
add eax 234h +
mov edx ebx +
call sub_4212C0  +
test al al +
jz loc_422D40  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_422C09  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_422C09  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_420100  +
jmp loc_422C09  +
mov eax [esp+8Ch+var_6C] +
cmp dword ptr [eax+244h] 0Fh +
jz loc_422BEB  +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] offset aMissingTermina +
mov [esp+8Ch+var_88] 2 +
mov [esp+8Ch+var_8C] eax +
call sub_41FFB0  +
jmp loc_422BEB  +
cmp al 4Ch +
mov edi 39h +
jz loc_422B3A  +
cmp al 55h +
mov di 3Bh +
jz loc_422B3A  +
cmp al 75h +
mov di 38h +
jnz loc_422B3A  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+3Ah] +
jmp loc_422B3A  +
movzx eax byte ptr [ebx] +
test byte ptr [eax+eax+479A61h] 2 +
jz loc_422C09  +
mov [esp+8Ch+var_8C] edi +
call sub_427100  +
mov [esp+8Ch+var_8C] eax +
call sub_427080  +
movzx edx byte ptr [ebx+1] +
test ds:word_479A60[edx+edx] 204h +
mov edi eax +
lea eax [ebx+1] +
mov ebx eax +
jz loc_422C09  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:word_479A60[eax+eax] 204h +
jnz loc_422D7C  +
jmp loc_422C09  +
mov eax [esp+8Ch+var_58] +
mov byte ptr [eax+4] 3 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 234h +
mov edx ebx +
call sub_4212C0  +
test al al +
jz loc_422C09  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_422C09  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aC11RequiresASp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 17h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_420100  +
jmp loc_422C09  +
mov [esp+8Ch+var_84] offset aNullCharacterS +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call sub_41FFB0  +
jmp loc_422BE2  +
mov edi [esp+8Ch+var_6C] +
cmp al 4Ch +
mov [esp+8Ch+var_39+1] 0 +
mov [esp+8Ch+var_34] 0 +
mov [esp+8Ch+var_4C] 3Fh +
mov edx [edi] +
mov ecx [edx+1Ch] +
mov edx [edx+18h] +
lea ebx [edx+ecx*8] +
jz loc_422E5F  +
cmp al 55h +
mov [esp+8Ch+var_4C] 41h +
jz loc_422E5F  +
cmp al 75h +
mov [esp+8Ch+var_4C] 3Eh +
jz loc_423344  +
mov ebp [esp+8Ch+var_54] +
lea eax [esi+1] +
mov [esp+8Ch+var_40] eax +
mov [esp+8Ch+var_64] eax +
xor eax eax +
mov [esp+8Ch+var_68] 0 +
mov edx ebp +
mov ebp eax +
mov [esp+8Ch+var_60] 0 +
mov [esp+8Ch+var_50] 0 +
mov [esp+8Ch+var_5C] 0 +
mov edi [ebx] +
cmp edi [esp+8Ch+var_64] +
jb loc_4230E3  +
jz loc_422ED7  +
jmp loc_422EF2  +
cmp ds:byte_480280[eax] 0 +
jz loc_42357F  +
mov byte ptr [esp+8Ch+var_39] al +
mov eax [esp+8Ch+var_6C] +
mov esi ebx +
mov dword ptr [ebx+4] 0 +
cmp byte ptr [eax+24Dh] 0 +
jnz loc_422FE0  +
cmp edi [esi+8] +
lea ebx [esi+8] +
jnz loc_422EF2  +
mov eax [ebx+4] +
cmp eax 20h +
jz loc_422F47  +
cmp eax 5Ch +
jz loc_422F47  +
test eax eax +
jnz loc_422EA4  +
mov esi ebx +
cmp edi [esi+8] +
lea ebx [esi+8] +
jz loc_422ED7  +
mov eax [esp+8Ch+var_64] +
cmp [esp+8Ch+var_68] 10h +
lea edi [eax+1] +
movzx eax byte ptr [eax] +
movzx ecx al +
jbe loc_42379A  +
mov esi [esp+8Ch+var_60] +
test esi esi +
jnz loc_423141  +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_68] eax +
jbe loc_42315A  +
mov esi edx +
mov ecx eax +
movzx eax byte ptr [esp+ecx+8Ch+var_1E] +
lea edx [eax-21h] +
cmp dl 5Dh +
mov [esp+ecx+8Ch+var_2F] al +
ja loc_423111  +
movzx edx dl +
jmp ds:off_475CF0[edx*4]  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
lea ebp [esi+ebp+1] +
mov esi ebx +
call sub_422800  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset asc_475B69 +
mov [esp+8Ch+var_8C] ecx +
mov ecx 1 +
call sub_422800  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_423560  +
cmp dword ptr [esi+4] 20h +
jz loc_42308A  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_475B6D +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 1 +
call sub_422800  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_423477  +
mov edx edi +
jmp loc_422ECF  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
add ebp esi +
call sub_422800  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset a?? +
mov [esp+8Ch+var_8C] ecx +
mov ecx 2 +
call sub_422800  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_423611  +
cmp byte ptr [esp+8Ch+var_39] 2Fh +
jnz loc_423163  +
cmp edi [ebx+8] +
jnz loc_423163  +
mov eax [ebx+0Ch] +
cmp eax 20h +
jnz loc_423654  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_475B72 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 3 +
call sub_422800  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_423635  +
lea esi [ebx+8] +
cmp dword ptr [esi+4] 20h +
jnz loc_422FA2  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_475B6B +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
call sub_422800  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4237AE  +
lea eax [esp+8Ch+var_34] +
mov edx offset asc_475B6D +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_422800  +
mov edx edi +
jmp loc_422ECF  +
add ebx 8 +
jmp loc_422E94  +
cmp ecx 0Fh +
ja loc_423111  +
add ecx 1 +
cmp ecx [esp+8Ch+var_68] +
jb loc_422F28  +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
mov [esp+8Ch+var_64] edi +
jmp loc_422E94  +
cmp al 28h +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
jnz loc_4233D1  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
mov [esp+eax+8Ch+var_2F] 22h +
jmp loc_422E94  +
cmp [esp+8Ch+var_60] 2 +
jz loc_4231A3  +
cmp ecx 29h +
jz loc_423231  +
cmp ecx 0Ah +
jz loc_423252  +
mov [esp+8Ch+var_64] edi +
jmp loc_422E94  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
add edi 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_39] +
mov edx esi +
add ebp 3 +
call sub_422800  +
movzx ecx byte ptr [esp+8Ch+var_39] +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4235C6  +
mov edx edi +
jmp loc_422F0A  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jbe loc_4231FC  +
cmp [esp+8Ch+var_5C] eax +
jb loc_4231FC  +
mov esi eax +
movzx eax [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+esi+8Ch+var_1E] al +
jnz loc_42320A  +
mov [esp+8Ch+var_48] edx +
mov esi [esp+8Ch+var_68] +
mov [esp+8Ch+var_44] ecx +
mov edx [esp+8Ch+var_5C] +
mov eax [esp+8Ch+var_50] +
jmp loc_4231E9  +
cmp eax edx +
ja loc_4231F0  +
movzx ecx [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+eax+8Ch+var_1E] cl +
jnz loc_4232F4  +
add eax 1 +
cmp esi eax +
ja loc_4231D6  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_50] eax +
ja loc_423499  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jz loc_42315A  +
cmp ecx 29h +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
jnz loc_423151  +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 0 +
mov [esp+8Ch+var_60] 2 +
mov [esp+8Ch+var_50] 0 +
jmp loc_422E94  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+8] 0 +
jnz loc_423703  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+11h] 0 +
jz loc_423278  +
mov eax [eax] +
mov ebx [eax+10h] +
cmp [eax+8] ebx +
jnb loc_423703  +
mov ebx [esp+8Ch+var_6C] +
lea eax [esp+8Ch+var_34] +
sub edi edx +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
add ebp edi +
mov eax ebx +
call sub_422800  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jb loc_423305  +
mov edi [esp+8Ch+var_64] +
mov byte ptr [eax+38h] 1 +
mov [eax] edi +
mov edi [esp+8Ch+var_6C] +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] edi +
call sub_421780  +
cmp byte ptr [edi+8] 0 +
jnz loc_42335F  +
mov eax [esp+8Ch+var_6C] +
call sub_4216F0  +
test al al +
jz loc_42335F  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov edx [eax] +
mov ecx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+8Ch+var_64] edx +
lea ebx [eax+ecx*8] +
jmp loc_422E94  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
jmp loc_42320A  +
mov edi [esp+8Ch+var_6C] +
mov edx [edi+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+8Ch+var_84] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+8Ch+var_8C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+8Ch+var_88] eax +
call sub_40F3B0  +
mov eax [edi] +
jmp loc_4232A1  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea eax [eax+eax+40h] +
mov [esp+8Ch+var_4C] eax +
jmp loc_422E5F  +
mov eax [esp+8Ch+var_6C] +
mov edx 40h +
mov edi [esp+8Ch+var_58] +
mov eax [eax+1Ch] +
mov ebx [edi] +
mov byte ptr [edi+4] 16h +
mov eax [eax+2Ch] +
mov [edi+6] dx +
mov [edi] eax +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov edx eax +
jnz loc_423392  +
jmp loc_4233A4  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_423390  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] ebx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_4200B0  +
jmp loc_422C29  +
mov ebx [esp+8Ch+var_6C] +
mov edx [ebx] +
sub edi [edx+4] +
mov edx edi +
add edx 1 +
cmp ecx 10h +
jz loc_42359B  +
cmp al 0Ah +
jz loc_4235E2  +
mov edi [esp+8Ch+var_58] +
mov ecx [edi] +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aInvalidCharact +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_4200B0  +
mov ebx [esp+8Ch+var_6C] +
mov edi [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_40] +
mov edx [ebx] +
sub eax edi +
sub eax 1 +
lea ecx [edi+eax] +
mov [edx] ecx +
mov edx [esp+8Ch+var_58] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
mov [esp+8Ch+var_88] 3Dh +
call sub_422A90  +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_422C29  +
mov edx eax +
jmp loc_423460  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_42345E  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
jmp loc_422C29  +
mov edx offset asc_475B6D +
cmp edi edx +
jz loc_422ECF  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 0Ah +
jmp loc_422ECF  +
mov ebx ebp +
mov ebp edx +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_4236A1  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov [eax] edi +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_423680  +
sub edi ebp +
mov esi ebx +
add esi edi +
lea eax [esi+1] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_422950  +
mov ecx [esp+8Ch+var_58] +
mov [ecx+8] esi +
mov ebx eax +
movzx eax byte ptr [esp+8Ch+var_4C] +
mov [ecx+0Ch] ebx +
mov [ecx+4] al +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jz loc_423679  +
mov edx [eax+4] +
mov eax [eax+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] edx +
sub eax edx +
mov [esp+8Ch+var_84] eax +
call memcpy  +
mov eax [esp+8Ch+var_34] +
add ebx [eax+8] +
sub ebx [eax+4] +
mov eax [eax] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jnz loc_4234FF  +
mov eax [esp+8Ch+var_39+1] +
mov edx eax +
jmp loc_423535  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_423533  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esi+2Ch] +
mov [edx] ecx +
mov [esi+2Ch] eax +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] ebx +
call memcpy  +
mov byte ptr [ebx+edi] 0 +
jmp loc_422C29  +
cmp edi offset asc_475B69 +
jz loc_422F98  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 5Ch +
jmp loc_422F98  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6C3h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_406BF0  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aRawStringDelim +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] ebx +
call sub_4200B0  +
jmp loc_42341E  +
cmp edi esi +
jz loc_42319C  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] cl +
jmp loc_422F0A  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidNewLine +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_4200B0  +
jmp loc_42341E  +
cmp edi offset a?? +
jz loc_42302D  +
mov eax [esp+8Ch+var_68] +
mov edx 3F3Fh +
add [esp+8Ch+var_68] 2 +
mov [esp+eax+8Ch+var_1E] dx +
jmp loc_42302D  +
cmp edi offset asc_475B72 +
jz loc_42307D  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 2Fh +
jmp loc_42307D  +
cmp eax 5Ch +
jz loc_42304D  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6B4h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_406BF0  +
xor eax eax +
jmp loc_42352F  +
mov eax [esp+8Ch+var_4C] +
sub edi ebp +
mov ecx ebp +
mov edx [esp+8Ch+var_58] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
call sub_422A90  +
jmp loc_422C29  +
add eax 234h +
mov edx edi +
call sub_4212C0  +
test al al +
jz loc_423746  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_4234AE  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_4234AE  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_420100  +
jmp loc_4234AE  +
mov eax [esp+8Ch+var_58] +
mov ebx ebp +
mov ebp edx +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_4200B0  +
mov edi [esp+8Ch+var_64] +
mov [esp+8Ch+var_4C] 3Dh +
jmp loc_42349D  +
movzx eax byte ptr [edi] +
test byte ptr [eax+eax+479A61h] 2 +
jz loc_4234AE  +
mov eax [esp+8Ch+var_4C] +
mov [esp+8Ch+var_8C] eax +
call sub_427080  +
movzx edx byte ptr [edi+1] +
test ds:word_479A60[edx+edx] 204h +
mov [esp+8Ch+var_4C] eax +
lea eax [edi+1] +
jnz loc_423782  +
jmp loc_4237CC  +
mov eax edi +
lea edi [eax+1] +
movzx eax byte ptr [eax+1] +
test ds:word_479A60[eax+eax] 204h +
jnz loc_423780  +
jmp loc_4234AE  +
mov esi [esp+8Ch+var_68] +
mov byte ptr [esp+esi+8Ch+var_1E] al +
lea eax [esi+1] +
mov [esp+8Ch+var_68] eax +
jmp loc_422F0A  +
cmp edi offset asc_475B6B +
jz loc_4237D3  +
mov eax [esp+8Ch+var_68] +
add ebp 1 +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 20h +
jmp loc_422FA2  +
mov edi eax +
jmp loc_4234AE  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_475B6D +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_422800  +
jmp loc_423484  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+5Ch+arg_0] +
mov byte ptr [esp+5Ch+var_40] 0 +
mov edi [ebp+0F0h] +
lea eax [edi+10h] +
mov [ebp+0F0h] eax +
lea eax [ebp+0F4h] +
mov [esp+5Ch+var_3C] eax +
mov esi [ebp+0] +
xor ebx ebx +
mov [edi+6] bx +
cmp byte ptr [esi+38h] 0 +
jz loc_4238A5  +
cmp byte ptr [ebp+18h] 0 +
jnz loc_4241A0  +
cmp byte ptr [ebp+8] 0 +
jnz loc_423920  +
mov eax ebp +
call sub_4216F0  +
test al al +
jz loc_423920  +
mov eax [ebp+0] +
mov ebx 0 +
movzx ecx byte ptr [esp+5Ch+var_40] +
mov edx [ebp+10Ch] +
cmp eax esi +
cmovnz ecx ebx +
test edx edx +
mov byte ptr [esp+5Ch+var_40] cl +
jnz loc_423894  +
mov edi [ebp+0FCh] +
mov ecx [esp+5Ch+var_3C] +
lea edx [edi+10h] +
mov [ebp+104h] ecx +
mov [ebp+0F0h] edx +
mov esi 40h +
mov [edi+6] si +
mov esi eax +
cmp byte ptr [ebp+11h] 2 +
jz loc_4238F2  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_4238C5  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_424097  +
lea ecx [eax+1] +
mov [esi] ecx +
movzx ebx byte ptr [eax] +
mov eax [ebp+2FCh] +
movzx edx bl +
test eax eax +
mov [esp+5Ch+var_38] edx +
jz loc_423900  +
mov eax [eax] +
mov [edi] eax +
cmp bl 7Eh +
ja loc_424090  +
jmp ds:off_475FE4[edx*4]  +
mov ebx 41h +
mov [edi+6] bx +
jmp loc_4238A5  +
mov eax [ebp+1Ch] +
sub ecx [esi+4] +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call sub_40F650  +
mov edx [esp+5Ch+var_34] +
mov [edi] eax +
jmp loc_4238E2  +
mov byte ptr [edi+4] 16h +
cmp byte ptr [ebp+8] 0 +
jnz loc_423940  +
mov eax [ebp+1Ch] +
mov ecx 40h +
mov eax [eax+2Ch] +
mov [edi+6] cx +
mov [edi] eax +
nop   +
lea esi [esi+0] +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_18] 0 +
lea edx [edi+8] +
mov eax ebp +
mov [esp+5Ch+var_14] 0 +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_10] 0 +
mov byte ptr [edi+4] 37h +
call sub_422990  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov eax ebp +
call sub_421FD0  +
mov ebx [edi] +
cmp ebx 1 +
jbe loc_423940  +
cmp byte ptr [edi+4] 16h +
jz loc_423940  +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_4239A9  +
mov edx [ebp+4] +
test edx edx +
jz loc_4240E2  +
mov edx [ebp+1Ch] +
sub eax [esi+4] +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_40F650  +
mov ecx [edi] +
mov edx [ebp+1Ch] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_50] eax +
call sub_40F8A0  +
mov [edi] eax +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi] +
lea eax [edi+0Ch] +
sub edx 1 +
mov byte ptr [edi+4] 35h +
xor ecx ecx +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_420F20  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_421FD0  +
mov eax [edi+8] +
test byte ptr [eax+14h] 40h +
jz loc_423A44  +
or word ptr [edi+6] 10h +
movzx eax byte ptr [eax+0Ch] +
shr al 1 +
mov [edi+4] al +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_423984  +
or word ptr [edi+6] 20h +
jmp loc_423984  +
mov ebx [ebp+0] +
xor ecx ecx +
or word ptr [edi+6] 1 +
mov [esp+5Ch+var_34] edi +
mov edi [esp+5Ch+var_38] +
mov eax [ebx] +
jmp loc_423AE8  +
cmp byte ptr [ebp+8] 0 +
jz loc_423AD0  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_423AD0  +
mov edx [ebp+1Ch] +
cmp edi 0Ch +
mov edi offset aFormFeed +
mov [esp+5Ch+var_38] ecx +
mov ecx offset aVerticalTab +
cmovnz edi ecx +
mov edx [edx+2Ch] +
mov [esp+5Ch+var_48] edi +
mov [esp+5Ch+var_4C] offset aSInPreprocessi +
sub eax [ebx+4] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_4200B0  +
mov eax [ebx] +
mov ecx [esp+5Ch+var_38] +
lea esi [esi+0] +
lea edx [eax+1] +
mov [ebx] edx +
movzx edi byte ptr [eax] +
test byte ptr [edi+edi+479A61h] 8 +
jz loc_4240B6  +
mov eax edx +
cmp edi 9 +
jz loc_423AD0  +
cmp edi 20h +
jz loc_423AD0  +
test edi edi +
jnz loc_423A76  +
mov ecx 1 +
jmp loc_423AD0  +
mov byte ptr [edi+4] 34h +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 5 +
movzx eax byte ptr [edx] +
cmp al 3Eh +
jz loc_42428B  +
cmp al 2Dh +
jz loc_4243FF  +
cmp al 3Dh +
jnz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ch +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 2 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_42427D  +
cmp al 3Eh +
jnz loc_423984  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Ch +
cmp byte ptr [edx+1] 3Dh +
jnz loc_423984  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 23h +
jmp loc_423984  +
mov byte ptr [edi+4] 0Eh +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 0 +
cmp byte ptr [eax] 3Dh +
jnz loc_423984  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 17h +
jmp loc_423984  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_4241BB  +
mov edx [esi] +
mov byte ptr [edi+4] 3 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_4243E3  +
cmp al 3Ch +
jz loc_424425  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_423984  +
cmp al 3Ah +
jz loc_4247C2  +
cmp al 25h +
jnz loc_423984  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 29h +
jmp loc_423984  +
mov byte ptr [edi+4] 2Bh +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 12h +
movzx eax byte ptr [edx] +
cmp al 3Ah +
jz loc_424254  +
cmp al 3Eh +
jnz loc_423984  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_423984  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 28h +
jmp loc_423984  +
mov byte ptr [edi+4] 29h +
jmp loc_423984  +
mov byte ptr [edi+4] 14h +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 9 +
movzx eax byte ptr [edx] +
cmp al 26h +
jz loc_4242C7  +
cmp al 3Dh +
jnz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 20h +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 8 +
movzx edx byte ptr [eax] +
cmp dl 3Dh +
jz loc_4242B9  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_423984  +
cmp dl 3Ah +
jz loc_42474F  +
cmp dl 3Eh +
jnz loc_423984  +
add eax 1 +
mov [esi] eax +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 2Ah +
jmp loc_423984  +
mov byte ptr [edi+4] 2Ah +
jmp loc_423984  +
mov eax [esi+10h] +
cmp [esi] eax +
jb loc_42420D  +
mov byte ptr [esi+38h] 1 +
jmp loc_423829  +
mov byte ptr [edi+4] 13h +
jmp loc_423984  +
cmp edx 4Ch +
mov ebx edx +
jz loc_424D8C  +
cmp byte ptr [ebp+252h] 0 +
jnz loc_423D3A  +
cmp edx 52h +
jz loc_4239E8  +
cmp byte ptr [ebp+250h] 0 +
jz loc_4239E8  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jz loc_4243F1  +
cmp al 22h +
jz loc_423D95  +
cmp al 52h +
jz loc_4244D4  +
cmp al 38h +
jnz loc_4239EA  +
cmp ebx 75h +
nop   +
jnz loc_4239EA  +
movzx eax byte ptr [edx+1] +
cmp al 22h +
jz loc_423D95  +
cmp al 27h +
jz loc_424B88  +
cmp al 52h +
jnz loc_4239EA  +
cmp byte ptr [edx+2] 22h +
jnz loc_4239EA  +
cmp byte ptr [ebp+252h] 0 +
jz loc_4239EA  +
lea ecx [edx-1] +
mov eax ebp +
mov edx edi +
call sub_422AE0  +
jmp loc_423984  +
mov eax [esi] +
mov [esp+5Ch+var_38] eax +
movzx eax byte ptr [eax] +
cmp eax 2Ah +
mov [esp+5Ch+var_34] eax +
jz loc_424446  +
cmp [esp+5Ch+var_34] 2Fh +
jnz loc_424B38  +
cmp byte ptr [ebp+270h] 0 +
jnz loc_424890  +
mov edx [ebp+0] +
test edx edx +
jz loc_423DE1  +
cmp byte ptr [edx+3Dh] 0 +
jnz loc_423E28  +
mov eax [ebp+244h] +
test eax eax +
jnz loc_423E00  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_423E00  +
test byte ptr [esi+3Ch] 1 +
jz loc_4247F6  +
nop   +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_423E1C  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_423E1C  +
test byte ptr [esi+3Ch] 1 +
jz loc_424786  +
sub eax 3 +
cmp eax 1 +
jbe loc_424473  +
mov ecx [edx] +
mov eax [ebp+1Ch] +
cmp byte ptr [ecx] 0Ah +
mov ebx [eax+2Ch] +
lea eax [ecx+1] +
jz loc_423E43  +
mov [edx] eax +
add eax 1 +
cmp byte ptr [eax-1] 0Ah +
jnz loc_423E38  +
mov [esp+5Ch+var_58] 1 +
mov [esp+5Ch+var_5C] ebp +
call sub_421780  +
mov eax [ebp+1Ch] +
cmp ebx [eax+2Ch] +
jz loc_423E7C  +
cmp byte ptr [ebp+255h] 0 +
jz loc_423E7C  +
mov [esp+5Ch+var_54] offset aMultiLineComme +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFF0  +
mov eax [ebp+0] +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_30] eax +
movzx eax byte ptr [ebp+260h] +
add ebx 1 +
cmp al 2 +
jz loc_4242E3  +
ja loc_4240FB  +
movzx ebx byte ptr [esp+5Ch+var_40] +
cmp al 1 +
mov eax 1 +
cmovz ebx eax +
mov byte ptr [esp+5Ch+var_40] bl +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_4249E6  +
or word ptr [edi+6] 1 +
jmp loc_4238A5  +
mov edx [esi] +
mov byte ptr [edi+4] 30h +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_423950  +
cmp al 2Eh +
jz loc_42440D  +
cmp al 2Ah +
jnz loc_423984  +
cmp byte ptr [ebp+248h] 0 +
jz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 33h +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax] 23h +
jz loc_424246  +
mov dword ptr [edi+8] 0 +
jmp loc_423984  +
mov byte ptr [edi+4] 28h +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 6 +
cmp byte ptr [eax] 3Dh +
jnz loc_423984  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Dh +
jmp loc_423984  +
mov byte ptr [edi+4] 15h +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 4 +
movzx eax byte ptr [edx] +
cmp al 2Bh +
jz loc_4242D5  +
cmp al 3Dh +
jnz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Bh +
jmp loc_423984  +
mov eax [esi] +
lea ecx [esp+5Ch+var_18] +
mov edx 1 +
lea ebx [eax-1] +
mov eax ebp +
mov [esi] ebx +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_420E40  +
test al al +
jnz loc_4241D8  +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
sub ecx 1 +
mov edx edi +
mov [esp+5Ch+var_58] 3Dh +
mov eax ebp +
mov [esp+5Ch+var_5C] 1 +
call sub_422A90  +
jmp loc_423984  +
mov byte ptr [edi+4] 11h +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 1 +
cmp byte ptr [eax] 3Dh +
jnz loc_423984  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 18h +
jmp loc_423984  +
mov edx [esi] +
mov byte ptr [edi+4] 0Ah +
movzx eax byte ptr [edx] +
cmp al 7Ch +
jz loc_42426F  +
cmp al 3Dh +
jnz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 21h +
jmp loc_423984  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_422AE0  +
jmp loc_423984  +
mov eax [esi] +
mov byte ptr [edi+4] 0Bh +
cmp byte ptr [eax] 3Dh +
jnz loc_423984  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 22h +
jmp loc_423984  +
mov byte ptr [edi+4] 27h +
jmp loc_423984  +
mov ecx [esi] +
jmp loc_423FD2  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_421780  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov eax [esi] +
jmp loc_4238C5  +
test cl cl +
mov edi [esp+5Ch+var_34] +
jz loc_4240D8  +
mov [esp+5Ch+var_54] offset aNullCharacte_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
mov edx [ebx] +
sub edx 1 +
mov [ebx] edx +
jmp loc_4238AD  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_421780  +
mov ebx [edi] +
mov eax [esi] +
jmp loc_4239A9  +
cmp al 4 +
ja loc_423EB2  +
mov ecx [esp+5Ch+var_38] +
movzx edx byte ptr [ecx+1] +
cmp dl 40h +
setz cl  +
jz loc_42411C  +
cmp dl 2Dh +
jnz loc_4244EC  +
mov [esp+5Ch+var_2C] ecx +
mov ecx [esp+5Ch+var_30] +
mov eax ebx +
not eax  +
add eax [ecx] +
cmp eax 0Ah +
jbe loc_423EB2  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 0Bh +
mov [esp+5Ch+var_58] offset aFallthrough +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov ecx [esp+5Ch+var_2C] +
mov al 0Ch +
test cl cl +
jnz loc_424186  +
add ebx eax +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax] 2Ah +
jz loc_424B5E  +
cmp byte ptr [ebx] 0Ah +
jnz loc_423EB2  +
mov byte ptr [esp+5Ch+var_40] 1 +
jmp loc_423EB2  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+0Dh] 40h +
jnz loc_423EB2  +
mov eax 0Dh +
jmp loc_424164  +
mov byte ptr [edi+4] 52h +
cmp byte ptr [ebp+19h] 0 +
mov byte ptr [ebp+18h] 0 +
jnz loc_423940  +
sub byte ptr [ebp+10h] 1 +
jmp loc_423940  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_422AE0  +
cmp byte ptr [edi+4] 3 +
jnz loc_423984  +
jmp loc_423BBA  +
lea eax [edi+0Ch] +
mov edx ebx +
mov byte ptr [edi+4] 35h +
mov ecx 1 +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
call sub_420F20  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_421FD0  +
jmp loc_423984  +
mov edx [ebp+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+5Ch+var_54] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+5Ch+var_5C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+5Ch+var_58] eax +
call sub_40F3B0  +
jmp loc_423CFB  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
jmp loc_423F1F  +
cmp byte ptr [ebp+248h] 0 +
jz loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 31h +
jmp loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 10h +
jmp loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 19h +
jmp loc_423984  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 2Fh +
cmp byte ptr [edx+1] 2Ah +
jnz loc_423984  +
cmp byte ptr [ebp+248h] 0 +
jz loc_423984  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 32h +
jmp loc_423984  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Fh +
jmp loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 0Fh +
jmp loc_423984  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Dh +
jmp loc_423984  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov edx eax +
sub edx ebx +
cmp edx 7 +
jbe loc_423EB2  +
movzx edx byte ptr [ebx] +
and edx 0FFFFFFDFh +
cmp dl 46h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 41h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+4] +
mov ecx edx +
and ecx 0FFFFFFDFh +
cmp cl 53h +
jz loc_4243D7  +
add ebx 4 +
jmp loc_424356  +
add ebx 1 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jz loc_424350  +
cmp dl 9 +
jz loc_424350  +
cmp dl 2Dh +
jz loc_424350  +
and edx 0FFFFFFDFh +
cmp dl 54h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 52h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jz loc_42417C  +
cmp dl 4Fh +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+4] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+5] +
and edx 0FFFFFFDFh +
cmp dl 47h +
jnz loc_4243C2  +
movzx edx byte ptr [ebx+6] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jz loc_42417C  +
add ebx 1 +
mov edx eax +
sub edx ebx +
cmp edx 7 +
ja loc_4242F6  +
jmp loc_423EB2  +
movzx edx byte ptr [ebx+5] +
add ebx 5 +
jmp loc_424356  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ah +
jmp loc_423984  +
cmp ebx 52h +
jnz loc_423D95  +
jmp loc_4239EA  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Eh +
jmp loc_423984  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_423984  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 2Ch +
jmp loc_423984  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Dh +
cmp byte ptr [edx+1] 3Dh +
jnz loc_423984  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 24h +
jmp loc_423984  +
mov [esp+5Ch+var_5C] ebp +
call sub_421A00  +
test al al +
jz loc_423E7C  +
mov [esp+5Ch+var_54] offset aUnterminatedCo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
jmp loc_423E7C  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+1] 2Ah +
jz loc_424890  +
test dword ptr [ebp+8] 0FF00FFh +
jnz loc_424890  +
test byte ptr [esi+3Ch] 1 +
jnz loc_423E28  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_423E28  +
cmp ebx 52h +
jz loc_4239EA  +
cmp byte ptr [edx+1] 22h +
jnz loc_4239EA  +
jmp loc_423D88  +
cmp dl 6Ch +
nop   +
jz loc_424832  +
cmp al 4 +
jz loc_424939  +
nop   +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_424744  +
cmp dl 9 +
jz loc_424744  +
cmp dl 2Eh +
jz loc_424744  +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 45h +
mov [esp+5Ch+var_2C] ebx +
jnz loc_424899  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 0Ch +
jbe loc_423EB2  +
cmp dl 45h +
lea ecx [ebx+1] +
jz loc_424BE4  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_475FA3 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov edx [esp+5Ch+var_28] +
mov byte ptr [esp+5Ch+var_2C] 0 +
cmp byte ptr [ebx+4] 2Ch +
lea eax [ebx+5] +
lea ecx [ebx+4] +
cmovnz eax ecx +
cmp byte ptr [eax] 20h +
jnz loc_423EB2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
lea ebx [eax+1] +
jz loc_4245A2  +
cmp byte ptr [eax+1] 66h +
jz loc_423EB2  +
cmp dl 65h +
jz loc_424D7D  +
movzx edx byte ptr [eax+1] +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 46h +
jnz loc_423EB2  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov [esp+5Ch+var_20] eax +
sub eax ebx +
cmp eax 7 +
jbe loc_423EB2  +
cmp dl 46h +
jz loc_424CEE  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov [esp+5Ch+var_28] edx +
jnz loc_423EB2  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aAll_0 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_423EB2  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 73h +
cmp [esp+5Ch+var_24] eax +
jz loc_424D45  +
cmp byte ptr [esp+5Ch+var_28] 2Dh +
jz loc_424640  +
cmp byte ptr [esp+5Ch+var_28] 20h +
jnz loc_424C32  +
lea ecx [ebx+5] +
cmp dl 66h +
jz loc_424651  +
cmp byte ptr [ecx] 54h +
jz loc_424D57  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
jnz loc_423EB2  +
cmp byte ptr [ecx] 74h +
jnz loc_423EB2  +
mov ebx [esp+5Ch+var_20] +
mov eax offset aHru_0 +
sub ebx ecx +
cmp ebx 3 +
jbe loc_423EB2  +
lea edx [ecx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_24] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov ecx [esp+5Ch+var_24] +
test eax eax +
jz loc_424DED  +
cmp ebx 6 +
jbe loc_423EB2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov edx offset aHrough +
mov eax offset aHrough_0 +
mov [esp+5Ch+var_54] 6 +
cmovz eax edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov ecx [esp+5Ch+var_24] +
lea ebx [ecx+7] +
movzx edx byte ptr [ebx] +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_424B80  +
cmp dl 9 +
jz loc_424B80  +
cmp dl 2Eh +
jz loc_424B80  +
cmp dl 2Dh +
mov eax ebx +
jnz loc_424166  +
mov ecx [esp+5Ch+var_38] +
add ebx 1 +
lea edx [eax+2] +
cmp byte ptr [ecx] 2Ah +
jz loc_424DC1  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_424173  +
test al al +
jz loc_424173  +
cmp al 0Dh +
jz loc_424173  +
add ebx 1 +
jmp loc_424724  +
add ebx 1 +
movzx edx byte ptr [ebx] +
jmp loc_424500  +
lea edx [eax+1] +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax+1] 25h +
jnz loc_423984  +
cmp byte ptr [eax+2] 3Ah +
jnz loc_423984  +
add eax 3 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
mov dword ptr [edi+8] 0 +
jmp loc_423984  +
mov [esp+5Ch+var_54] offset aCStyleCommen_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_423E28  +
cmp byte ptr [ebp+248h] 0 +
jz loc_4247E3  +
mov eax [ebp+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_4247E3  +
cmp byte ptr [edx+1] 3Ah +
jz loc_424C1E  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 27h +
jmp loc_423984  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41FFB0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_423E28  +
mov eax [esp+5Ch+var_30] +
not ebx  +
add ebx [eax] +
cmp ebx 0Fh +
jbe loc_423EB2  +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 10h +
mov [esp+5Ch+var_58] offset aIntFallthrough +
mov eax ebx +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov eax ebx +
movzx eax byte ptr [eax+12h] +
lea ebx [ebx+12h] +
cmp al 9 +
jnz loc_424883  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_424879  +
cmp al 20h +
jz loc_424879  +
jmp loc_424166  +
mov byte ptr [edi+4] 7 +
jmp loc_423984  +
cmp al 49h +
nop   +
lea esi [esi+0] +
jnz loc_424B76  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 13h +
jbe loc_423EB2  +
cmp dl 49h +
lea ecx [ebx+1] +
jz loc_424C7C  +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
mov edx [esp+5Ch+var_2C] +
test eax eax +
jnz loc_423EB2  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_424E05  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aLy +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov edx [esp+5Ch+var_2C] +
add ebx 0Eh +
cmp dl 69h +
mov byte ptr [esp+5Ch+var_2C] 0 +
jz loc_424DF5  +
movzx edx byte ptr [ebx] +
jmp loc_4245AF  +
cmp dl 20h +
jnz loc_424D37  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_424942  +
cmp al 20h +
jz loc_424942  +
mov eax [esp+5Ch+var_30] +
mov ecx [eax] +
mov eax ecx +
sub eax ebx +
cmp eax 7 +
mov [esp+5Ch+var_2C] ecx +
jbe loc_423EB2  +
mov [esp+5Ch+var_54] 7 +
mov [esp+5Ch+var_58] offset aFallthr +
mov [esp+5Ch+var_5C] ebx +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
cmp byte ptr [ebx+7] 55h +
mov ecx [esp+5Ch+var_2C] +
jz loc_424CE6  +
lea edx [ebx+7] +
mov eax ecx +
sub eax edx +
cmp eax 3 +
jbe loc_423EB2  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Bh +
mov [esp+5Ch+var_58] offset aOugh +
mov [esp+5Ch+var_5C] edx +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
movzx eax byte ptr [ebx] +
cmp al 20h +
jnz loc_424D9E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_4249D3  +
cmp al 20h +
jz loc_4249D3  +
jmp loc_424166  +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_4249F2  +
or word ptr [edi+6] 20h +
mov eax [esp+5Ch+var_30] +
mov edx [eax] +
mov eax edx +
movzx edx byte ptr [edx-1] +
sub eax [esp+5Ch+var_38] +
test byte ptr [edx+edx+479A61h] 4 +
lea ecx [eax+1] +
cmovnz ecx eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_424A20  +
cmp byte ptr [ebp+11h] 0 +
mov [esp+5Ch+var_40] ecx +
jz loc_424A2F  +
cmp [esp+5Ch+var_34] 2Fh +
lea eax [ecx+2] +
cmovnz eax ecx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_3C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_422950  +
mov ecx [esp+5Ch+var_3C] +
mov byte ptr [edi+4] 4Fh +
lea edx [ecx-1] +
mov ecx [esp+5Ch+var_38] +
mov ebx eax +
mov eax [esp+5Ch+var_40] +
mov [edi+0Ch] ebx +
mov [edi+8] eax +
lea eax [ebx+1] +
mov byte ptr [ebx] 2Fh +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
cmp byte ptr [ebp+8] 0 +
jnz loc_424A80  +
cmp byte ptr [ebp+11h] 0 +
jz loc_424A8B  +
cmp [esp+5Ch+var_34] 2Fh +
jz loc_424B9A  +
cmp dword ptr [ebp+2F4h] 0 +
jnz loc_424AB0  +
mov dword ptr [ebp+2F4h] 100h +
mov [esp+5Ch+var_5C] 800h +
call sub_4371B0  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
cmp eax [ebp+2F4h] +
jz loc_424C4E  +
mov ebx [edi+8] +
mov edx [ebp+2ECh] +
lea edx [edx+eax*8] +
lea eax [ebx+1] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_40] edx +
call sub_4371B0  +
mov edx [esp+5Ch+var_40] +
mov ecx [ebp+2F0h] +
mov [edx] eax +
mov eax [ebp+2ECh] +
mov edx [edi+0Ch] +
mov eax [eax+ecx*8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
mov edx [ebp+2F0h] +
mov eax [ebp+2ECh] +
mov eax [eax+edx*8] +
mov byte ptr [eax+ebx] 0 +
mov eax [ebp+2F0h] +
mov ecx [edi] +
mov edx [ebp+2ECh] +
mov [edx+eax*8+4] ecx +
add eax 1 +
mov [ebp+2F0h] eax +
jmp loc_423984  +
cmp [esp+5Ch+var_34] 3Dh +
jnz loc_424890  +
mov eax [esp+5Ch+var_38] +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Eh +
jmp loc_423984  +
cmp byte ptr [edx] 2Fh +
jnz loc_424DE8  +
cmp byte ptr [ebx] 2Ah +
jnz loc_423EB2  +
cmp byte ptr [ebx+1] 2Fh +
jnz loc_423EB2  +
jmp loc_42417C  +
mov byte ptr [esp+5Ch+var_2C] 0 +
jmp loc_4245AF  +
add ebx 1 +
jmp loc_4246E6  +
cmp byte ptr [ebp+251h] 0 +
jnz loc_423D95  +
jmp loc_4239EA  +
mov eax [esp+5Ch+var_40] +
mov byte ptr [ebx+1] 2Ah +
lea edx [eax-2] +
cmp edx 2 +
mov byte ptr [ebx+eax-2] 2Ah +
mov byte ptr [ebx+eax-1] 2Fh +
jbe loc_424A8B  +
mov eax 2 +
jmp loc_424BCA  +
add eax 1 +
cmp edx eax +
jz loc_424A8B  +
cmp byte ptr [ebx+eax] 2Fh +
jnz loc_424BBF  +
cmp byte ptr [ebx+eax-1] 2Ah +
jz loc_424BDE  +
cmp byte ptr [ebx+eax+1] 2Ah +
jnz loc_424BBF  +
mov byte ptr [ebx+eax] 7Ch +
jmp loc_424BBF  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_475F9F +
mov [esp+5Ch+var_28] edx +
mov [esp+5Ch+var_2C] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_2C] +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_42454B  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_424578  +
movzx eax byte ptr [edx+2] +
and eax 0FFFFFFFBh +
cmp al 3Ah +
jnz loc_423984  +
jmp loc_4247E3  +
cmp byte ptr [esp+5Ch+var_2C] 1 +
sbb eax eax +
and eax 20h +
add eax 54h +
cmp [esp+5Ch+var_24] eax +
jnz loc_423EB2  +
jmp loc_424643  +
mov edx [ebp+2ECh] +
add eax eax +
mov [ebp+2F4h] eax +
shl eax 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
call sub_437230  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
jmp loc_424AC2  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional_0 +
mov [esp+5Ch+var_24] edx +
mov [esp+5Ch+var_28] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_28] +
mov edx [esp+5Ch+var_24] +
test eax eax +
jnz loc_4248C3  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_424DAB  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Eh +
mov [esp+5Ch+var_58] offset aLyF +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_423EB2  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_424931  +
add ebx 8 +
jmp loc_4249C8  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aAll +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_4245DA  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_2C] 1 +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 53h +
jmp loc_424624  +
cmp dl 9 +
jz loc_424942  +
jmp loc_424950  +
cmp byte ptr [ebx+5] 20h +
jnz loc_42462E  +
lea ecx [ebx+6] +
jmp loc_424643  +
mov ebx [esp+5Ch+var_20] +
sub ebx ecx +
cmp ebx 3 +
jbe loc_423EB2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov eax offset aHru +
mov edx offset aHru_0 +
cmovz eax edx +
jmp loc_424679  +
cmp byte ptr [eax+1] 46h +
jnz loc_4245AB  +
jmp loc_423EB2  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jnz loc_423D47  +
jmp loc_423D95  +
cmp al 9 +
jz loc_4249D3  +
jmp loc_424166  +
mov eax [esp+5Ch+var_2C] +
add ebx 0Ch +
cmp byte ptr [eax+0Ch] 66h +
jnz loc_424CDC  +
jmp loc_423EB2  +
movzx eax byte ptr [edx-1] +
lea ebx [edx-1] +
cmp al 2Ah +
jz loc_424B55  +
test al al +
jz loc_424B5E  +
cmp al 0Ah +
jz loc_424B5E  +
cmp al 0Dh +
jz loc_424B5E  +
add edx 1 +
jmp loc_424DC1  +
lea ebx [ecx+4] +
jmp loc_4246E6  +
cmp byte ptr [ebx] 46h +
jnz loc_424931  +
nop   +
jmp loc_423EB2  +
add ebx 0Ch +
jmp loc_424923  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
movzx eax byte ptr [ebx+4] +
mov eax ds:dword_4764A0[eax*8] +
cmp eax 1 +
jz loc_425098  +
cmp eax 2 +
jz loc_425090  +
mov eax 7 +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_422950  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] eax +
mov edi eax +
call sub_421EC0  +
mov byte ptr [eax] 0 +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+8] +
add eax 1 +
jmp loc_425058  +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
lea eax [eax+eax+1] +
jmp loc_425058  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov edx [esi+24h] +
mov eax [edx+8] +
mov ecx [edx+0Ch] +
sub ecx eax +
cmp ecx ebx +
jnb loc_4250E5  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
call sub_422710  +
mov edx eax +
mov eax [esi+24h] +
mov [edx] eax +
mov eax [edx+8] +
mov [esi+24h] edx +
add ebx eax +
mov [edx+8] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
movzx ecx byte ptr [eax+4] +
movzx eax cl +
mov edx ds:dword_4764A0[eax*8] +
cmp edx 1 +
jz loc_425151  +
jle loc_425140  +
cmp edx 2 +
mov eax 2 +
jz locret_425138  +
cmp edx 3 +
jnz loc_425154  +
cmp cl 50h +
mov eax 3 +
jz locret_425138  +
cmp cl 53h +
jz loc_425133  +
xor eax eax +
cmp cl 51h +
setnz al  +
add eax 5 +
retn   +
***
mov eax 1 +
retn   +
***
test edx edx +
jnz loc_425154  +
xor eax eax +
cmp cl 26h +
setnz al  +
lea eax [eax+eax+4] +
retn   +
***
xor eax eax +
retn   +
***
mov eax 6 +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+2FCh] edx +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+2FCh] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [eax+40h] +
mov ecx [ebx+194h] +
mov edx [ebx+190h] +
mov eax ecx +
sub eax edx +
cmp eax 1Bh +
jbe loc_425240  +
mov eax [ebx+18Ch] +
add edx 1Ch +
mov [ebx+190h] edx +
cmp edx eax +
jz loc_425267  +
mov esi [ebx+19Ch] +
mov ebp ecx +
add edx esi +
not esi  +
and edx esi +
mov esi [ebx+188h] +
mov edi edx +
mov [ebx+190h] edx +
sub edi esi +
sub ebp esi +
cmp edi ebp +
jbe loc_4251EA  +
mov [ebx+190h] ecx +
mov edx ecx +
test al 1 +
mov ecx eax +
mov [ebx+18Ch] edx +
mov ebx 1Ch +
jnz loc_425273  +
test cl 2 +
jnz loc_425280  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_42520B  +
add ecx edx +
test bl 2 +
jz loc_425229  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_425231  +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+184h] +
mov [esp+1Ch+var_18] 1Ch +
mov [esp+1Ch+var_1C] eax +
call sub_449250  +
mov edx [ebx+190h] +
mov ecx [ebx+194h] +
jmp loc_4251A7  +
or byte ptr [ebx+1ACh] 2 +
jmp loc_4251BE  +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_425204  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_425204  +
***
jmp sub_4252A0  +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
test esi esi +
jz loc_4253E2  +
mov [esi+40h] ebx +
mov [ebx+234h] esi +
mov [esp+24h+var_24] ebx +
call sub_41BF40  +
mov [esp+24h+var_24] ebx +
call sub_41B150  +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 7 +
mov [esp+24h+var_20] offset aDefined +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2ACh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 4 +
mov [esp+24h+var_20] offset aTrue_3 +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2B0h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 5 +
mov [esp+24h+var_20] offset aFalse_3 +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2B4h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Bh +
mov [esp+24h+var_20] offset a__va_args__ +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2B8h] eax +
or word ptr [eax+14h] 200h +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Fh +
mov [esp+24h+var_20] offset a__has_includ_0 +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2BCh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 14h +
mov [esp+24h+var_20] offset a__has_includ_1 +
mov [esp+24h+var_24] eax +
call sub_420760  +
mov [ebx+2C0h] eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov byte ptr [ebx+2C4h] 1 +
mov [esp+24h+var_24] 0Dh +
call sub_420350  +
mov dword ptr [eax+30h] offset sub_425180 +
mov esi eax +
lea eax [ebx+184h] +
mov [esp+24h+var_14] offset free +
mov [esp+24h+var_18] offset sub_4371B0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] eax +
call sub_4491F0  +
jmp loc_4252B5  +
***
jmp sub_425440  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+2C4h] 0 +
jz loc_425475  +
mov eax [ebx+234h] +
add ebx 184h +
mov [esp+18h+var_18] eax +
call sub_4203D0  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_449360  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_8] +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+234h] +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 1 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call sub_420760  +
add esp 1Ch +
retn   +
***
jmp loc_4254C0  +
sub esp 1Ch +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov eax [eax+234h] +
mov [esp+8] edx +
mov edx [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
mov [esp+4] edx +
call sub_420760  +
test eax eax +
jz loc_425504  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+234h] +
mov [esp+arg_0] eax +
jmp sub_4207C0  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edx [esp+20h+arg_10] +
mov esi [esp+20h+arg_18] +
mov edi [esp+20h+arg_C] +
mov ebp [esp+20h+arg_0] +
mov [esp+20h+var_C] edx +
mov edx [esp+20h+arg_14] +
cmp esi 40h +
mov ebx [esp+20h+arg_4] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_8] +
jbe loc_4255B0  +
lea ecx [esi-40h] +
cmp ecx 3Fh +
ja loc_425586  +
mov edi ecx +
shr edi 5 +
and edi 1 +
mov esi edi +
xor esi 1 +
shl esi cl +
shl edi cl +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
and ebp esi +
and ebx edi +
mov [eax+8] edx +
mov edx [esp+20h+var_C] +
mov ecx [esp+20h+var_20] +
mov [eax] ebp +
mov [eax+4] ebx +
mov [eax+10h] edx +
mov edx [esp+20h+var_8] +
mov [eax+0Ch] ecx +
mov [eax+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_4255D6  +
mov ecx esi +
mov ebp ecx +
shr ebp 5 +
and ebp 1 +
mov edi ebp +
xor edi 1 +
shl edi cl +
shl ebp cl +
add edi 0FFFFFFFFh +
adc ebp 0FFFFFFFFh +
and edx edi +
and [esp+20h+var_20] ebp +
xor ebx ebx +
xor ebp ebp +
jmp loc_425586  +
xor ebp ebp +
xor ebx ebx +
jmp loc_425586  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+88h+arg_0] +
mov ebx [esp+88h+arg_C] +
mov edi eax +
mov [esp+88h+var_60] eax +
mov eax [esp+88h+arg_4] +
mov [esp+88h+var_64] ebx +
mov edx eax +
mov [esp+88h+var_5C] eax +
mov eax [esp+88h+arg_8] +
mov [esp+88h+var_68] eax +
mov eax [esp+88h+arg_10] +
mov [esp+88h+var_20] eax +
mov eax [esp+88h+arg_14] +
mov [esp+88h+var_1C] eax +
mov eax edi +
not eax  +
mov ecx eax +
mov eax edx +
not eax  +
mov ebx eax +
mov eax [esp+88h+var_68] +
not eax  +
mov esi eax +
mov eax [esp+88h+var_64] +
add esi 1 +
not eax  +
mov edi eax +
adc edi 0 +
mov eax edi +
or eax esi +
jnz loc_42565D  +
add ecx 1 +
adc ebx 0 +
mov eax ecx +
mov [esp+88h+var_2C] ebx +
mov [esp+88h+var_88] eax +
mov eax [esp+88h+var_2C] +
mov [esp+88h+var_24] edi +
mov [esp+88h+var_30] ecx +
mov ecx [esp+88h+arg_18] +
mov [esp+88h+var_28] esi +
mov [esp+88h+var_84] eax +
mov eax [esp+88h+var_24] +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_70] ecx +
mov [esp+88h+var_7C] eax +
mov eax [esp+88h+var_20] +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+var_1C] +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
call sub_425530  +
mov eax [esp+88h+var_48] +
mov edi [esp+88h+var_44] +
mov ebx [esp+88h+var_58] +
mov esi [esp+88h+var_54] +
mov edx [esp+88h+var_50] +
mov ecx [esp+88h+var_4C] +
mov [esp+88h+var_1C] edi +
xor edi edi +
test al al +
mov [esp+88h+var_30] ebx +
mov [esp+88h+var_2C] esi +
mov [esp+88h+var_28] edx +
mov [esp+88h+var_24] ecx +
mov [esp+88h+var_20] eax +
jnz loc_4256EC  +
xor ecx [esp+88h+var_64] +
xor edx [esp+88h+var_68] +
or ecx edx +
jz loc_425726  +
mov eax edi +
mov byte ptr [esp+88h+var_20+1] al +
mov eax [esp+88h+var_30] +
mov [ebp+0] eax +
mov eax [esp+88h+var_2C] +
mov [ebp+4] eax +
mov eax [esp+88h+var_28] +
mov [ebp+8] eax +
mov eax [esp+88h+var_24] +
mov [ebp+0Ch] eax +
mov eax [esp+88h+var_20] +
mov [ebp+10h] eax +
mov eax [esp+88h+var_1C] +
mov [ebp+14h] eax +
add esp 7Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi [esp+88h+var_5C] +
xor ebx [esp+88h+var_60] +
or esi ebx +
jnz loc_4256EC  +
mov edx [esp+88h+var_68] +
mov eax [esp+88h+var_64] +
or eax [esp+88h+var_5C] +
or edx [esp+88h+var_60] +
or edx eax +
setnz al  +
mov edi eax +
jmp loc_4256EC  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
mov eax [esp+8Ch+arg_0] +
mov ebp [esp+8Ch+arg_18] +
mov [esp+8Ch+var_24] eax +
mov eax [esp+8Ch+arg_4] +
cmp ebp 40h +
mov [esp+8Ch+var_20] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [esp+8Ch+var_20] +
mov [esp+8Ch+var_1C] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_68] edx +
mov [esp+8Ch+var_18] eax +
mov eax [esp+8Ch+arg_10] +
mov edx [esp+8Ch+var_18] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_10] eax +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_64] eax +
jbe loc_4259D0  +
mov eax [esp+8Ch+var_6C] +
lea ecx [ebp-41h] +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
xor esi esi +
and eax 1 +
xor edi edi +
xor eax 1 +
mov edx eax +
and edx 1 +
cmp byte ptr [esp+8Ch+var_14] 0 +
jnz loc_42580B  +
xor edx 1 +
xor edi edi +
movzx edx dl +
mov esi edx +
neg esi  +
adc edi 0 +
neg edi  +
cmp ebp [esp+8Ch+arg_1C] +
jbe loc_425A21  +
cmp ebp 3Fh +
ja loc_4259E0  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425835  +
mov edx eax +
xor eax eax +
or eax [esp+8Ch+var_64] +
or edx [esp+8Ch+var_60] +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_68] edi +
cmp [esp+8Ch+arg_1C] 3Fh +
jbe loc_425877  +
mov eax [esp+8Ch+var_6C] +
mov edx [esp+8Ch+var_68] +
sub [esp+8Ch+arg_1C] 40h +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
mov eax [esp+8Ch+arg_1C] +
test eax eax +
jz loc_425A30  +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov edx [esp+8Ch+var_60] +
mov eax [esp+8Ch+var_64] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4258A4  +
mov eax edx +
xor edx edx +
mov [esp+8Ch+var_5C] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_64] 40h +
sub [esp+8Ch+var_64] eax +
movzx ecx byte ptr [esp+8Ch+var_64] +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_58] edx +
mov edx [esp+8Ch+var_68] +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4258DA  +
mov edx eax +
xor eax eax +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_54] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_50] edx +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_425900  +
mov eax edx +
xor edx edx +
movzx ecx byte ptr [esp+8Ch+var_64] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_425913  +
mov edi esi +
xor esi esi +
mov ecx edx +
or eax esi +
mov edx [esp+8Ch+var_50] +
or edi ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_68] edi +
or ecx eax +
mov esi ecx +
mov ecx [esp+8Ch+var_58] +
or ecx edx +
mov edi ecx +
mov edx [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_18] edi +
mov [esp+8Ch+var_1C] esi +
mov eax edx +
mov [esp+8Ch+var_20] ecx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_74] ebp +
mov [esp+8Ch+var_84] esi +
mov [esp+8Ch+var_24] edx +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_18] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+var_10] +
mov [esp+8Ch+var_78] eax +
lea eax [esp+8Ch+var_4C] +
call sub_425530  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+var_4C] +
mov byte ptr [esp+8Ch+var_14+1] 0 +
mov [ebx] eax +
mov eax [esp+8Ch+var_48] +
mov [ebx+4] eax +
mov eax [esp+8Ch+var_44] +
mov [ebx+8] eax +
mov eax [esp+8Ch+var_40] +
mov [ebx+0Ch] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+10h] eax +
mov eax [esp+8Ch+var_38] +
mov [ebx+14h] eax +
add esp 8Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp-1] +
mov eax [esp+8Ch+var_64] +
mov edx [esp+8Ch+var_60] +
jmp loc_4257D9  +
cmp ebp 7Fh +
ja loc_42584D  +
lea ecx [ebp-40h] +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4259FE  +
mov edx eax +
xor eax eax +
mov ecx [esp+8Ch+var_6C] +
or ecx eax +
mov [esp+8Ch+var_5C] ecx +
mov ecx [esp+8Ch+var_68] +
or ecx edx +
mov eax ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
mov [esp+8Ch+var_6C] ecx +
jmp loc_42584D  +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
jmp loc_425939  +
mov esi [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_60] +
jmp loc_425939  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 0CCh +
mov eax [esp+0CCh+arg_0] +
mov edx [esp+0CCh+arg_10] +
mov [esp+0CCh+var_94] eax +
mov eax [esp+0CCh+arg_4] +
mov [esp+0CCh+var_34] edx +
mov [esp+0CCh+var_90] eax +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_9C] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_98] eax +
mov eax [esp+0CCh+arg_14] +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+arg_18] +
cmp [esp+0CCh+arg_1C] eax +
jb loc_425B20  +
xor eax eax +
test dl dl +
jz loc_425D77  +
xor esi esi +
xor ebp ebp +
xor edi edi +
mov [esp+0CCh+var_A4] 0 +
mov ecx edi +
mov [esp+0CCh+var_44] edi +
mov edi [esp+0CCh+var_A4] +
mov byte ptr [esp+0CCh+var_34+1] al +
mov byte ptr [esp+0CCh+var_34] dl +
mov [ebx+8] esi +
mov [esp+0CCh+var_40] edi +
mov eax [esp+0CCh+var_40] +
mov [ebx+0Ch] ebp +
mov [esp+0CCh+var_3C] esi +
mov [esp+0CCh+var_38] ebp +
mov [ebx+4] eax +
mov eax [esp+0CCh+var_34] +
mov [ebx] ecx +
mov [ebx+10h] eax +
mov eax [esp+0CCh+var_30] +
mov [ebx+14h] eax +
add esp 0CCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0CCh+arg_1C] 3Fh +
ja loc_425D50  +
mov eax [esp+0CCh+var_9C] +
mov esi [esp+0CCh+var_94] +
mov edi [esp+0CCh+var_90] +
mov ebp [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_A4] eax +
mov eax [esp+0CCh+var_98] +
mov [esp+0CCh+var_A0] eax +
test ebp ebp +
jz loc_425BD0  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx esi +
xor esi esi +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax esi +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_A4] +
mov ecx 40h +
mov [esp+0CCh+var_88] edx +
mov edx [esp+0CCh+var_A0] +
sub ecx ebp +
xor edi edi +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
cmovnz edx edi +
mov ecx edx +
mov edx [esp+0CCh+var_88] +
mov [esp+0CCh+var_80] ecx +
mov ecx eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_8C] +
or ecx eax +
mov eax [esp+0CCh+var_A4] +
mov esi ecx +
mov ecx [esp+0CCh+var_80] +
or ecx edx +
mov edx [esp+0CCh+var_A0] +
mov edi ecx +
mov ecx ebp +
xor ebp ebp +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebp +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_A0] edx +
mov eax [esp+0CCh+var_A4] +
mov ecx esi +
mov [esp+0CCh+var_44] esi +
mov edx [esp+0CCh+var_A0] +
mov [esp+0CCh+var_40] edi +
mov [esp+0CCh+var_CC] ecx +
mov esi eax +
mov [esp+0CCh+var_3C] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_38] edx +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_6C] +
call sub_425530  +
mov eax [esp+0CCh+var_6C] +
mov ecx [esp+0CCh+var_5C] +
mov [esp+0CCh+var_44] eax +
mov edi [esp+0CCh+var_44] +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_68] +
mov edx ecx +
mov [esp+0CCh+var_34] ecx +
mov [esp+0CCh+var_40] eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_64] +
mov [esp+0CCh+var_3C] eax +
mov esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_7C] eax +
mov eax [esp+0CCh+var_60] +
mov [esp+0CCh+var_38] eax +
mov ebp [esp+0CCh+var_38] +
mov [esp+0CCh+var_78] eax +
mov eax [esp+0CCh+var_58] +
mov [esp+0CCh+var_74] eax +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_A4] eax +
xor eax eax +
test cl cl +
jnz loc_425ABC  +
mov eax [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_70] edx +
mov [esp+0CCh+var_BC] ecx +
mov [esp+0CCh+var_CC] edi +
mov [esp+0CCh+var_B0] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_74] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_24] +
call sub_425750  +
mov eax [esp+0CCh+var_98] +
xor eax [esp+0CCh+var_18] +
mov ecx [esp+0CCh+var_9C] +
xor ecx [esp+0CCh+var_1C] +
mov edx eax +
mov eax 1 +
or edx ecx +
mov edx [esp+0CCh+var_70] +
jnz loc_425ABC  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
xor eax [esp+0CCh+var_20] +
xor ecx [esp+0CCh+var_24] +
or ecx eax +
setnz al  +
jmp loc_425ABC  +
mov eax [esp+0CCh+arg_1C] +
mov esi [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_98] +
mov [esp+0CCh+var_A4] 0 +
lea ebp [eax-40h] +
mov [esp+0CCh+var_A0] 0 +
jmp loc_425B4D  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
or eax [esp+0CCh+var_98] +
or ecx [esp+0CCh+var_9C] +
or ecx eax +
setnz al  +
jmp loc_425AAE  +
***
jmp sub_425DA0  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx edx +
sub esp 28h +
mov ebp [esp+30h+arg_0] +
mov [esp+30h+var_30] eax +
mov eax edx +
mov esi [esp+30h+arg_4] +
mul  ebp +
mov [esp+30h+var_1C] eax +
mov eax ecx +
mov ecx [esp+30h+var_30] +
mov [esp+30h+var_18] edx +
mul  esi +
mov [esp+30h+var_14] eax +
mov [ecx] eax +
mov eax ebx +
mov [esp+30h+var_10] edx +
mov [ecx+4] edx +
mul  esi +
xor esi esi +
mov [esp+30h+var_2C] eax +
mov eax edi +
mov edi [esp+30h+var_2C] +
mov [esp+30h+var_28] edx +
mul  ebp +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] edx +
mov edx [esp+30h+var_18] +
add esi eax +
adc edi edx +
cmp edx edi +
mov [ecx+8] esi +
mov [ecx+0Ch] edi +
jb loc_425E7B  +
jbe loc_425E75  +
mov ecx [esp+30h+var_14] +
mov ebx [esp+30h+var_10] +
mov eax [esp+30h+var_30] +
add ecx 1 +
adc ebx 0 +
mov [eax] ecx +
mov edx ebx +
mov [eax+4] ebx +
mov eax ecx +
mov ebx [esp+30h+var_24] +
xor ecx ecx +
mov ebp [esp+30h+var_30] +
add ecx esi +
adc ebx edi +
cmp edi ebx +
mov [ebp+8] ecx +
mov [ebp+0Ch] ebx +
jb loc_425E45  +
jbe loc_425E85  +
add eax 1 +
adc edx 0 +
mov ebx [esp+30h+var_20] +
mov edi [esp+30h+var_28] +
mov ecx ebx +
xor ebx ebx +
mov esi edi +
xor edi edi +
add ecx esi +
adc ebx edi +
add ecx eax +
mov eax [esp+30h+var_30] +
adc ebx edx +
mov [eax] ecx +
mov [eax+4] ebx +
mov byte ptr [eax+10h] 1 +
mov byte ptr [eax+11h] 0 +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+30h+var_1C] esi +
ja loc_425E0C  +
mov eax [esp+30h+var_14] +
mov edx [esp+30h+var_10] +
jmp loc_425E26  +
cmp esi ecx +
jbe loc_425E45  +
jmp loc_425E3F  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 0CCh +
mov eax [esp+0D0h+arg_0] +
mov ebp [esp+0D0h+arg_10] +
mov edi [esp+0D0h+arg_28] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+arg_4] +
mov ecx [esp+0D0h+var_48] +
mov [esp+0D0h+var_38] ebp +
mov [esp+0D0h+var_50] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+arg_8] +
mov ebx [esp+0D0h+var_44] +
mov [esp+0D0h+var_90] ecx +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+arg_C] +
mov [esp+0D0h+var_8C] ebx +
mov ecx [esp+0D0h+var_40] +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+arg_14] +
mov ebx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+arg_18] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+arg_1C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+arg_20] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+arg_24] +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+arg_2C] +
mov [esp+0D0h+var_4C] eax +
mov [esp+0D0h+var_98] ecx +
mov ecx [esp+0D0h+var_60] +
mov [esp+0D0h+var_94] ebx +
mov ebx [esp+0D0h+var_5C] +
mov eax [edx+294h] +
cmp [esp+0D0h+arg_30] 5 +
mov [esp+0D0h+var_A8] ecx +
mov ecx [esp+0D0h+var_58] +
mov [esp+0D0h+var_A4] ebx +
mov ebx [esp+0D0h+var_54] +
mov [esp+0D0h+var_9C] eax +
mov [esp+0D0h+var_B0] ecx +
mov [esp+0D0h+var_AC] ebx +
jz loc_426370  +
jle loc_426188  +
mov eax [esp+0D0h+arg_30] +
sub eax 0Ch +
cmp eax 1 +
ja loc_426528  +
mov eax edi +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_42609D  +
cmp [esp+0D0h+var_9C] 40h +
mov eax [esp+0D0h+var_9C] +
jbe loc_4266D8  +
lea ecx [eax-41h] +
mov edx [esp+0D0h+var_A4] +
mov eax [esp+0D0h+var_A8] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_42609D  +
xor eax eax +
cmp [esp+0D0h+arg_30] 0Dh +
setnz al  +
mov [esp+0D0h+arg_30] eax +
mov eax [esp+0D0h+var_9C] +
add [esp+0D0h+arg_30] 0Ch +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_60] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_5C] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_54] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
call sub_4255E0  +
mov eax [esp+0D0h+var_80] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_5C] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+var_60] +
mov edx [esp+0D0h+var_54] +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_B0] eax +
mov ecx [esp+0D0h+var_A4] +
mov eax 0FFFFFFFFh +
mov edx [esp+0D0h+var_A8] +
mov edi ecx +
or edi edx +
cmovz eax [esp+0D0h+var_B0] +
cmp [esp+0D0h+arg_30] 0Dh +
mov [esp+0D0h+var_B4] eax +
mov eax [esp+0D0h+var_9C] +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_3C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_38] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_34] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
jz loc_4265E0  +
call sub_425750  +
mov eax [esp+0D0h+var_80] +
mov edi [esp+0D0h+var_70] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_38] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_44] +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+var_6C] +
mov edx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_B0] eax +
jmp loc_42656C  +
cmp [esp+0D0h+arg_30] 4 +
jnz loc_426528  +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
mov ecx [esp+0D0h+var_90] +
mov ebx [esp+0D0h+var_8C] +
add eax [esp+0D0h+var_B0] +
adc edx [esp+0D0h+var_AC] +
add ecx [esp+0D0h+var_A8] +
adc ebx [esp+0D0h+var_A4] +
cmp edx [esp+0D0h+var_94] +
mov [esp+0D0h+var_88] eax +
mov [esp+0D0h+var_84] edx +
ja loc_4261D8  +
jb loc_426610  +
mov eax [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] eax +
jb loc_426610  +
mov edx ebp +
mov eax 1 +
mov ebp [esp+0D0h+var_84] +
test dl dl +
mov edx ecx +
cmovz eax edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_24] ebx +
mov ebx [esp+0D0h+var_9C] +
mov byte ptr [esp+0D0h+var_18] al +
mov eax [esp+0D0h+var_24] +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_20] edi +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_1C] +
mov [esp+0D0h+var_D0] edx +
mov [esp+0D0h+var_C8] edi +
mov [esp+0D0h+var_28] ecx +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_B8] ebx +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_425530  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov edx eax +
shr dx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
jnz loc_42631E  +
cmp ebx 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_426630  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_426502  +
xor edx edx +
mov eax [esp+0D0h+var_28] +
mov byte ptr [esp+0D0h+var_18+1] dl +
mov [esi] eax +
mov eax [esp+0D0h+var_24] +
mov [esi+4] eax +
mov eax [esp+0D0h+var_20] +
mov [esi+8] eax +
mov eax [esp+0D0h+var_1C] +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_18] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_14] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
sub eax [esp+0D0h+var_B0] +
sbb edx [esp+0D0h+var_AC] +
mov [esp+0D0h+var_88] eax +
mov eax [esp+0D0h+var_90] +
mov ebx edx +
mov [esp+0D0h+var_84] edx +
mov edx [esp+0D0h+var_8C] +
sub eax [esp+0D0h+var_A8] +
sbb edx [esp+0D0h+var_A4] +
cmp ebx [esp+0D0h+var_94] +
jb loc_4263B4  +
ja loc_426620  +
mov ebx [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] ebx +
ja loc_426620  +
mov ebx ebp +
mov ecx 1 +
mov ebp [esp+0D0h+var_84] +
test bl bl +
mov ebx eax +
cmovz ecx edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_28] eax +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18] cl +
mov eax edi +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_1C] +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_24] edx +
mov edx [esp+0D0h+var_24] +
mov [esp+0D0h+var_20] edi +
mov edi [esp+0D0h+var_9C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_D0] ebx +
mov [esp+0D0h+var_CC] edx +
mov [esp+0D0h+var_B8] edi +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_425530  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov ebx eax +
shr bx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
mov edx ebx +
jnz loc_42631E  +
cmp [esp+0D0h+var_9C] 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_426694  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_42631C  +
mov edx [esp+0D0h+var_84] +
mov eax [esp+0D0h+var_88] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
cmp al bl +
setnz dl  +
jmp loc_42631E  +
cmp byte ptr [edx+26Ah] 0 +
jz loc_426550  +
cmp byte ptr [edx+268h] 0 +
jz loc_4265F0  +
mov eax [edx+14h] +
test eax eax +
jz loc_4265F0  +
lea esi [esi+0] +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_38] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_34] eax +
mov edx [esp+0D0h+var_A8] +
mov ecx [esp+0D0h+var_A4] +
mov ebx [esp+0D0h+var_AC] +
mov eax edx +
mov [esp+0D0h+var_44] ecx +
mov ecx [esp+0D0h+var_B0] +
mov [esi] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_3C] ebx +
mov [esp+0D0h+var_48] edx +
mov [esp+0D0h+var_40] ecx +
mov edx ecx +
mov ecx edi +
mov [esi+4] eax +
mov eax [esp+0D0h+var_3C] +
mov byte ptr [esp+0D0h+var_38] cl +
mov [esi+8] edx +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_38] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_34] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_425A40  +
jmp loc_426115  +
mov [esp+0D0h+var_C8] offset aCommaOperatorI +
mov [esp+0D0h+var_CC] 15h +
mov [esp+0D0h+var_D0] edx +
call sub_420030  +
jmp loc_426550  +
add ecx 1 +
adc ebx 0 +
jmp loc_4261D8  +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
jmp loc_4263B4  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_426665  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_42631C  +
mov eax edi +
mov edx ebp +
shrd eax ebp +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edi eax +
and edi 1 +
xor edi 1 +
mov eax edi +
and eax 1 +
jmp loc_42651E  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4266C9  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_426673  +
jmp loc_42631C  +
lea ecx [eax-1] +
mov edx [esp+0D0h+var_AC] +
mov eax [esp+0D0h+var_B0] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_425FF1  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
add byte ptr [edx+12h] 1 +
mov byte ptr [eax+10h] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov byte ptr [eax+11h] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_1C] ecx +
call sub_41EE00  +
mov [esp+34h+var_1D] 0 +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_426880  +
cmp al 44h +
setz dl  +
jz loc_426760  +
cmp al 3Eh +
jnz loc_426800  +
mov eax [esi+8] +
mov [esp+34h+var_18] edx +
sub eax 1 +
mov [esp+34h+var_34] eax +
call sub_4371B0  +
mov ebp eax +
mov eax [esi+8] +
lea ecx [eax-2] +
mov eax [esi+0Ch] +
mov [esp+34h+var_2C] ecx +
mov [esp+34h+var_34] ebp +
add eax 1 +
mov [esp+34h+var_30] eax +
call memcpy  +
mov eax [esi+8] +
mov edx [esp+34h+var_18] +
mov byte ptr [ebp+eax-2] 0 +
mov esi [esi+8] +
test ebp ebp +
jz loc_4267DC  +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ebp +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_28] eax +
movzx eax dl +
mov [esp+34h+var_2C] eax +
call sub_42EFD0  +
test al al +
jnz loc_426850  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov [esp+34h+var_34] ebp +
call free  +
cmp [esp+34h+var_1D] 0 +
jnz loc_426825  +
test esi esi +
jz loc_4267ED  +
mov [edi+0E8h] esi +
sub byte ptr [edi+12h] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 3 +
jz loc_426863  +
mov [esp+34h+var_2C] offset aOperator__has_ +
xor esi esi +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_41FFB0  +
cmp [esp+34h+var_1D] 0 +
jz loc_4267E3  +
mov [esp+34h+var_34] edi +
call sub_41EE00  +
cmp byte ptr [eax+4] 15h +
jz loc_4267E3  +
mov [esp+34h+var_2C] offset aMissingAfter__ +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_41FFB0  +
jmp loc_4267E3  +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_4267D4  +
mov [esp+34h+var_34] edi +
xor esi esi +
call sub_41BF90  +
mov edx 1 +
mov ebp eax +
jmp loc_42679F  +
mov [esp+34h+var_34] edi +
call sub_41EE00  +
mov [esp+34h+var_1D] 1 +
mov esi eax +
movzx eax byte ptr [eax+4] +
jmp loc_426751  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_24] eax +
cmp ebx 2 +
jz loc_426A82  +
movzx edx byte ptr [edx] +
test dl dl +
mov [esp+24h+var_5] dl +
jnz loc_4269D5  +
lea edx [ebx-1] +
test ebx ebx +
jz loc_426B45  +
movzx esi byte ptr [ecx] +
mov eax [esp+24h+var_24] +
mov ebx esi +
xor edi edi +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_10] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_14] 0 +
sub ebx 44h +
cmp bl 33h +
ja loc_426948  +
movzx ebx bl +
jmp ds:off_47685C[ebx*4]  +
mov esi edx +
add ebp 1 +
sub edx 1 +
mov ebx ecx +
test esi esi +
lea ecx [ebx+1] +
jz loc_426DA2  +
movzx ebx byte ptr [ebx+1] +
sub ebx 44h +
cmp bl 33h +
jbe loc_42691D  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
add edi 1 +
sub edx 1 +
mov ebx ecx +
jmp loc_426931  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_20] 1 +
sub edx 1 +
jmp loc_426931  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_18] 1 +
sub edx 1 +
jmp loc_426931  +
mov esi [esp+24h+var_14] +
add esi 1 +
test edx edx +
jnz loc_426AB8  +
mov edx [esp+24h+var_10] +
mov ebx esi +
add edx [esp+24h+var_C] +
add edx [esp+24h+var_1C] +
add edx esi +
add edx [esp+24h+var_20] +
add edx edi +
add edx ebp +
xor eax eax +
cmp edx 1 +
ja loc_42694A  +
cmp [esp+24h+var_18] 1 +
ja loc_42694A  +
cmp [esp+24h+var_4] 0F0h +
ja loc_42694A  +
jmp loc_426B7B  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_1C] 1 +
sub edx 1 +
jmp loc_426931  +
test ebx ebx +
jz loc_426B45  +
movzx edx byte ptr [ecx+ebx-1] +
lea esi [ebx-1] +
cmp dl 52h +
jz loc_426A06  +
jbe loc_426C20  +
cmp dl 6Bh +
jz loc_426C30  +
cmp dl 72h +
lea esi [esi+0] +
jnz loc_426C25  +
mov ebp 100000h +
cmp ebx 1 +
jz loc_426CF0  +
movzx eax byte ptr [ecx] +
mov edi eax +
and edi 0FFFFFFDFh +
mov edx edi +
cmp dl 55h +
jnz loc_426A3C  +
or ebp 1000h +
cmp esi 1 +
jz loc_426CF0  +
movzx eax byte ptr [ecx+1] +
lea esi [ebx-2] +
add ecx 1 +
cmp al 4Ch +
jz loc_426D18  +
jbe loc_426CF7  +
cmp al 68h +
jz loc_426D06  +
cmp al 6Ch +
jnz loc_426948  +
cmp esi 1 +
lea esi [esi+0] +
jz loc_426D39  +
xor eax eax +
cmp esi 2 +
jnz loc_42694A  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 6Ch +
cmovz eax edx +
jmp loc_42694A  +
movzx esi byte ptr [ecx] +
mov edi esi +
and edi 0FFFFFFDFh +
mov eax edi +
cmp al 44h +
jnz loc_426C3A  +
mov eax esi +
cmp al 44h +
setz al  +
mov edi eax +
movzx eax byte ptr [ecx+1] +
lea esi [eax-44h] +
mov eax esi +
cmp al 28h +
ja loc_4268B7  +
movzx esi al +
jmp ds:off_47692C[esi*4]  +
cmp byte ptr [eax] 0 +
movzx ebx byte ptr [ecx+1] +
jnz loc_426B36  +
mov byte ptr [esp+24h+var_24] bl +
sub ebx 31h +
cmp bl 8 +
ja loc_426B32  +
mov ebx [esp+24h+var_4] +
test ebx ebx +
jnz loc_426B32  +
movzx ebx byte ptr [esp+24h+var_24] +
mov esi [esp+24h+var_4] +
mov [esp+24h+var_24] edi +
mov edi eax +
jmp loc_426B06  +
cmp esi 0EFh +
ja loc_426D43  +
lea eax [esi+esi*4] +
add ecx 1 +
sub edx 1 +
lea esi [ebx+eax*2-30h] +
jz loc_426D7D  +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-30h] +
cmp al 9 +
jbe loc_426AE3  +
cmp bl 78h +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
jnz loc_426D4C  +
lea esi [edx-1] +
sub edx 2 +
add [esp+24h+var_C] 1 +
lea ebx [ecx+1] +
jmp loc_426931  +
movzx ebx byte ptr [esp+24h+var_24] +
add ecx 1 +
sub edx 1 +
mov [esp+24h+var_14] esi +
jmp loc_426915  +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
xor edi edi +
xor ebx ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_10] 0 +
mov eax [esp+24h+var_C] +
test eax eax +
setnz al  +
mov esi eax +
jnz loc_426CC2  +
mov eax [esp+24h+var_10] +
test eax eax +
setnz dl  +
jz loc_426BAB  +
cmp [esp+24h+var_4] 10h +
jz loc_426BAB  +
xor eax eax +
test byte ptr [esp+24h+var_4] 1Fh +
jnz loc_42694A  +
cmp [esp+24h+var_4] 60h +
jz loc_426D93  +
mov eax [esp+24h+var_18] +
test eax eax +
jz loc_426D63  +
xor eax eax +
mov ecx 2000h +
cmp [esp+24h+var_5] 0 +
jz loc_42694A  +
test ebx ebx +
mov eax 10h +
jnz loc_426C17  +
mov ebx [esp+24h+var_1C] +
mov al 20h +
test ebx ebx +
jnz loc_426C17  +
mov ebx [esp+24h+var_20] +
mov al 40h +
test ebx ebx +
jnz loc_426C17  +
test ebp ebp +
mov eax 10000h +
jnz loc_426C17  +
test edi edi +
mov eax 20000h +
jnz loc_426C17  +
test dl dl +
jz loc_426DC4  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 400000h +
or eax ecx +
jmp loc_42694A  +
cmp dl 4Bh +
jz loc_426C30  +
mov edx esi +
jmp loc_4268C9  +
mov ebp 200000h +
jmp loc_426A0B  +
movzx eax byte ptr [edx] +
mov edx 1 +
test al al +
mov [esp+24h+var_5] al +
jz loc_4268D4  +
jmp loc_4269DD  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42694A  +
mov eax 4040h +
jmp loc_42694A  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42694A  +
mov eax 4010h +
jmp loc_42694A  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42694A  +
mov eax 4020h +
jmp loc_42694A  +
mov eax edi +
test al al +
jz loc_426948  +
nop   +
jmp loc_426C5F  +
mov eax edi +
test al al +
jz loc_426948  +
lea esi [esi+0] +
jmp loc_426C75  +
mov eax edi +
test al al +
jz loc_426948  +
lea esi [esi+0] +
jmp loc_426C8B  +
cmp [esp+24h+var_4] 20h +
jz loc_426B8C  +
cmp [esp+24h+var_4] 40h +
jz loc_426B8C  +
xor eax eax +
cmp [esp+24h+var_4] 80h +
jz loc_426B8C  +
jmp loc_42694A  +
mov eax ebp +
jmp loc_42694A  +
cmp al 48h +
lea esi [esi+0] +
jnz loc_426948  +
mov edx ebp +
xor eax eax +
or edx 10h +
cmp esi 1 +
cmovz eax edx +
jmp loc_42694A  +
cmp esi 1 +
jz loc_426D39  +
xor eax eax +
cmp esi 2 +
jnz loc_42694A  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 4Ch +
cmovz eax edx +
jmp loc_42694A  +
mov eax ebp +
or eax 20h +
jmp loc_42694A  +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
lea esi [edx-1] +
mov ebx ecx +
mov [esp+24h+var_24] esi +
mov esi edx +
add [esp+24h+var_10] 1 +
mov edx [esp+24h+var_24] +
jmp loc_426931  +
mov eax ebp +
or eax edi +
jz loc_426D76  +
xor eax eax +
cmp [esp+24h+var_5] 0 +
jz loc_42694A  +
xor ecx ecx +
jmp loc_426BD4  +
mov [esp+24h+var_4] esi +
mov eax edi +
xor esi esi +
mov edi [esp+24h+var_24] +
mov ebx ecx +
mov [esp+24h+var_24] 0FFFFFFFFh +
jmp loc_426D56  +
xor eax eax +
test dl dl +
jz loc_426BB6  +
jmp loc_42694A  +
mov ecx [esp+24h+var_14] +
lea eax [ebp+edi+0] +
add eax [esp+24h+var_20] +
add eax [esp+24h+var_1C] +
add eax [esp+24h+var_10] +
add eax [esp+24h+var_C] +
mov ebx ecx +
lea edx [eax+ecx] +
jmp loc_4269A7  +
mov edx esi +
mov eax 8000h +
test dl dl +
jz loc_426C17  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 800000h +
or eax ecx +
jmp loc_42694A  +
***
push edi  +
xor ebp ebp +
push esi  +
xor edi edi +
push ebx  +
xor esi esi +
lea ebx [ecx-1] +
sub esp 4 +
cmp ebx 0FFFFFFFFh +
mov [esp+10h+var_10] eax +
jz loc_426E2E  +
movzx ecx byte ptr [edx-1] +
lea eax [ecx-49h] +
cmp al 2Ch +
ja loc_426E84  +
movzx eax al +
jmp ds:off_4769D0[eax*4]  +
add ebp 1 +
sub ebx 1 +
sub edx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_426E0A  +
xor eax eax +
cmp esi 2 +
ja loc_426E86  +
cmp ebp 1 +
ja loc_426E86  +
cmp edi 1 +
ja loc_426E86  +
test edi edi +
jz loc_426E95  +
mov edi [esp+10h+var_10] +
mov edx 2000h +
cmp byte ptr [edi] 0 +
jz loc_426E86  +
cmp ebp 1 +
sbb eax eax +
not eax  +
and eax 1000h +
or eax edx +
test esi esi +
mov edx 10h +
jz loc_426E74  +
mov dl 20h +
cmp esi 1 +
mov ecx 40h +
cmovnz edx ecx +
or eax edx +
jmp loc_426E86  +
add esi 1 +
cmp esi 2 +
jnz loc_426E23  +
cmp cl [edx] +
jz loc_426E23  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
jmp loc_426E23  +
xor edx edx +
jmp loc_426E50  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp [esp+1Ch+arg_8] 0 +
mov [esp+1Ch+var_1C] eax +
mov edi [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] ebx +
mov ebx [esp+1Ch+arg_14] +
mov [esp+1Ch+var_10] esi +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_18] edx +
mov ebp [esp+1Ch+arg_10] +
mov [esp+1Ch+var_C] ebx +
mov [esp+1Ch+var_8] esi +
jnz loc_426EE4  +
cmp [esp+1Ch+arg_1C] 0 +
jz loc_426F30  +
cmp [esp+1Ch+var_18] ebp +
jbe loc_426F00  +
add esp 1Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_426FC0  +
mov ecx [esp+1Ch+var_1C] +
mov ebx [esp+1Ch+var_18] +
mov eax ecx +
mov edx ebx +
xor eax edi +
xor edx ebp +
or edx eax +
jz loc_426FD0  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+arg_20] 40h +
ja loc_426F90  +
mov eax [esp+1Ch+arg_20] +
mov esi [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_14] +
mov edx [esp+1Ch+var_8] +
lea ecx [eax-1] +
mov eax [esp+1Ch+var_C] +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
shrd eax edx +
mov ebx esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
and ecx 1 +
xor ecx 1 +
and ecx 1 +
cmp bl cl +
jz loc_426EE4  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_20] +
mov edx ebp +
mov esi [esp+1Ch+var_18] +
mov ebx [esp+1Ch+var_1C] +
lea ecx [eax-41h] +
mov eax edi +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
jmp loc_426F64  +
cmp [esp+1Ch+var_1C] edi +
ja loc_426EEA  +
jmp loc_426F06  +
mov eax [esp+1Ch+var_8] +
cmp [esp+1Ch+var_10] eax +
jb loc_426F1D  +
nop   +
ja loc_426EEA  +
mov eax [esp+1Ch+var_C] +
cmp [esp+1Ch+var_14] eax +
jnb loc_426EEA  +
xor esi esi +
jmp loc_426F1F  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov [esp+4] ecx +
mov ecx [esp+8] +
lea edx [eax+273h] +
add eax 248h +
jmp sub_4268A0  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
add eax 273h +
jmp sub_426DF0  +
***
mov edx [esp+arg_0] +
mov eax 4Ah +
cmp edx 3Eh +
jz locret_4270B0  +
cmp edx 3Fh +
mov al 4Bh +
jz locret_4270B0  +
cmp edx 40h +
mov al 4Ch +
jz locret_4270B0  +
cmp edx 41h +
mov al 4Dh +
jz locret_4270B0  +
mov al 4Eh +
cmp edx 42h +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov edx [esp+arg_0] +
mov eax 45h +
cmp edx 38h +
jz locret_427130  +
cmp edx 39h +
mov al 46h +
jz locret_427130  +
cmp edx 3Ah +
mov al 47h +
jz locret_427130  +
cmp edx 3Bh +
mov al 48h +
jz locret_427130  +
mov al 49h +
cmp edx 3Ch +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov eax [esp+arg_0] +
sub eax 4Ah +
cmp eax 4 +
setbe al  +
retn   +
***
mov eax [esp+arg_0] +
sub eax 45h +
cmp eax 4 +
setbe al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov esi [eax+8] +
mov edi [eax+0Ch] +
test esi esi +
jz loc_4271CA  +
movzx eax byte ptr [edi] +
cmp al 27h +
jz loc_4271CE  +
cmp al 22h +
jz loc_4271CE  +
lea edx [edi+1] +
xor ecx ecx +
jmp loc_427195  +
movzx ebx byte ptr [edx] +
mov eax edx +
add edx 1 +
cmp bl 22h +
jz loc_4271A3  +
cmp bl 27h +
jz loc_4271A3  +
add ecx 1 +
cmp ecx esi +
jnz loc_427183  +
lea eax [edi+ecx] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp esi ecx +
jz loc_42719F  +
movzx ecx byte ptr [eax] +
lea eax [esi-1] +
cmp [edi+esi-1] cl +
jnz loc_4271C0  +
jmp loc_4271D2  +
cmp [edi+eax-1] cl +
lea edx [eax-1] +
jz loc_4271C4  +
mov eax edx +
test eax eax +
jnz loc_4271B5  +
add eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
jmp loc_42719F  +
***
mov eax edi +
jmp loc_4271A7  +
***
mov eax esi +
add eax edi +
jmp loc_4271C6  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_8] +
mov edi [eax+0Ch] +
test ecx ecx +
mov [esp+3Ch+var_14] edi +
jz loc_427204  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [ecx] 0 +
mov eax [eax+8] +
mov ecx eax +
cmp ecx 1 +
mov [esp+3Ch+var_10] eax +
mov eax 111h +
jz loc_427420  +
mov eax [esp+3Ch+var_14] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_427482  +
mov esi [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 0Ah +
xor ecx ecx +
xor ebp ebp +
mov byte ptr [esp+3Ch+var_1C] 0 +
xor edi edi +
jmp loc_427280  +
and dh 1 +
jz loc_42724F  +
cmp [esp+3Ch+var_18] 10h +
jz loc_427290  +
cmp eax 27h +
jz loc_4272A5  +
cmp eax 2Eh +
jnz loc_4272B6  +
test cl cl +
jnz loc_427439  +
cmp byte ptr [ebx] 27h +
jz loc_427428  +
test ebp ebp +
lea esi [esi+0] +
jnz loc_427580  +
mov ebp 1 +
movzx eax byte ptr [ebx] +
mov esi ebx +
movzx edx ds:word_479A60[eax+eax] +
lea ebx [esi+1] +
test dl 4 +
jz loc_427243  +
movzx eax ds:byte_47B600[eax] +
mov byte ptr [esp+3Ch+var_1C] 1 +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
jmp loc_42727B  +
mov edx [esp+3Ch+arg_0] +
cmp byte ptr [edx+276h] 0 +
jnz loc_427470  +
mov edx [esp+3Ch+var_14] +
add edx [esp+3Ch+var_10] +
cmp [esp+3Ch+var_18] 0Ah +
mov [esp+3Ch+var_14] edx +
jbe loc_4274D0  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_4274DC  +
and eax 0FFFFFFDFh +
cmp eax 50h +
jnz loc_4274DC  +
test cl cl +
jnz loc_427640  +
cmp byte ptr [esi+1] 27h +
mov eax 1 +
mov ebp 2 +
jz loc_42762F  +
cmp [esp+3Ch+var_18] 8 +
jnz loc_4274FB  +
cmp edi 9 +
ja loc_427510  +
mov [esp+3Ch+var_18] 0Ah +
cmp ebp 2 +
jz loc_427AF8  +
mov ebp [esp+3Ch+var_14] +
mov ecx ebx +
mov eax [esp+3Ch+arg_0] +
sub ebp ebx +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ebp +
call sub_4268A0  +
test eax eax +
mov esi eax +
jnz loc_427958  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_427B4C  +
mov edx [esp+3Ch+arg_8] +
test edx edx +
jz loc_427AE2  +
mov eax [esp+3Ch+arg_8] +
xor edi edi +
mov esi 1000040h +
mov [eax] ebx +
cmp [esp+3Ch+var_14] ebx +
jz loc_42738F  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_427965  +
cmp esi 20h +
jz loc_427AA0  +
test edi edi +
jz loc_4273A7  +
cmp [esp+3Ch+var_18] 0Ah +
jnz loc_427A8B  +
test esi 300000h +
jz loc_4273C0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_427AEE  +
test edi edi +
jz loc_4273D5  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_427B61  +
mov edi esi +
and esi 2000h +
or edi 2 +
test esi esi +
jz loc_4273F5  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4278E9  +
cmp [esp+3Ch+var_18] 2 +
jz loc_42780B  +
cmp [esp+3Ch+var_18] 0Ah +
jz loc_427801  +
mov ecx [esp+3Ch+var_18] +
mov eax edi +
or edi 200h +
or ah 4 +
cmp ecx 10h +
cmovz eax edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jz loc_42726A  +
mov [esp+3Ch+var_2C] offset aDigitSeparator +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jnz loc_4276E0  +
mov ecx 1 +
jmp loc_42727B  +
mov eax [esp+3Ch+var_14] +
lea esi [eax+1] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_42758D  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
cmp dl 2Eh +
jz loc_4274B9  +
movzx ecx dl +
test byte ptr [ecx+ecx+479A61h] 1 +
jz loc_42754A  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 10h +
lea esi [eax+2] +
movzx eax dl +
jmp loc_427236  +
and eax 0FFFFFFDFh +
cmp eax 45h +
jz loc_4272E4  +
test cl cl +
jnz loc_4276D3  +
test ebp ebp +
jz loc_4275C2  +
test ebp ebp +
mov ebx esi +
setnz al  +
test al al +
jnz loc_427300  +
cmp edi [esp+3Ch+var_18] +
jb loc_42764D  +
cmp [esp+3Ch+var_18] 2 +
jz loc_4277ED  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigitCI +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
xor eax eax +
jmp loc_427420  +
cmp dl 27h +
mov [esp+3Ch+var_18] 8 +
jnz loc_427236  +
mov edi [esp+3Ch+arg_0] +
cmp byte ptr [edi+276h] 0 +
jz loc_427236  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_0 +
jmp loc_427441  +
mov [esp+3Ch+var_2C] offset aTooManyDecimal +
jmp loc_427441  +
cmp dl 42h +
jnz loc_4275B5  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
lea ecx [edx-30h] +
cmp cl 1 +
ja loc_42754A  +
lea esi [edi+2] +
movzx eax dl +
mov [esp+3Ch+var_18] 2 +
jmp loc_427236  +
mov [esp+3Ch+var_18] 8 +
jmp loc_427236  +
cmp [esp+3Ch+var_18] 10h +
jz loc_4274EC  +
mov ecx [esp+3Ch+var_14] +
mov eax [esp+3Ch+arg_0] +
sub ecx esi +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ecx +
mov ecx esi +
call sub_4268A0  +
test eax 300000h +
mov ebx eax +
jz loc_4277E2  +
mov ecx [esp+3Ch+var_18] +
mov edi eax +
mov eax 0Ah +
or edi 2 +
cmp ecx 8 +
cmovnz eax ecx +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_42791A  +
mov esi ebx +
and esi 2000h +
jmp loc_4273E0  +
mov ecx [esp+3Ch+arg_0] +
cmp byte ptr [ecx+276h] 0 +
jz loc_427300  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_1 +
jmp loc_427441  +
test al al +
jz loc_42770F  +
cmp [esp+3Ch+var_18] 2 +
jz loc_4279D5  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_42731C  +
cmp byte ptr [esp+3Ch+var_1C] 0 +
jz loc_42794B  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_427A21  +
cmp ebp 2 +
jz loc_427AF8  +
mov [esp+3Ch+var_2C] offset aHexadecimalFlo +
jmp loc_427441  +
mov esi [esp+3Ch+arg_0] +
xor ecx ecx +
cmp al 27h +
jz loc_427B3D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_4276A1  +
cmp al 27h +
jnz loc_4276CB  +
cmp byte ptr [esi+276h] 0 +
jnz loc_4276A1  +
test cl cl +
jz loc_427325  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_2 +
jmp loc_427441  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aAdjacentDigitS +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edx +
call sub_4200B0  +
xor eax eax +
jmp loc_427420  +
mov eax [esp+3Ch+var_14] +
mov edx ebx +
sub eax ebx +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_0] +
add eax 273h +
call sub_426DF0  +
test eax eax +
mov edx eax +
jnz loc_427867  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_4279E2  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_4279AE  +
mov eax [esp+3Ch+arg_8] +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
mov [eax] ebx +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_427881  +
cmp ebp 40h +
jnz loc_4273E0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_4273E0  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aUseOfC11LongLo +
mov edx offset aUseOfC99LongLo +
cmp byte ptr [ecx+248h] 0 +
cmovz eax edx +
cmp byte ptr [ecx+268h] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 7 +
mov [esp+3Ch+var_34] eax +
jz loc_4279C4  +
mov [esp+3Ch+var_3C] ecx +
call sub_420100  +
jmp loc_4273E0  +
mov ebx esi +
xor ebp ebp +
xor eax eax +
jmp loc_4274FB  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigit_0 +
jmp loc_42751F  +
mov eax edi +
or ah 1 +
jmp loc_427420  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+275h] 0 +
jnz loc_42785D  +
cmp byte ptr [eax+26Ah] 0 +
jz loc_42785D  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aBinaryConstant +
mov edx offset aBinaryConsta_0 +
cmp byte ptr [ecx+248h] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
cmovz eax edx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] eax +
call sub_4200B0  +
mov eax edi +
or ah 8 +
jmp loc_427420  +
mov ebp eax +
mov esi eax +
mov edi eax +
and ebp 0F0h +
and esi 2000h +
or edi 1 +
jmp loc_427769  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call loc_41CEC0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jnz loc_42777A  +
cmp ebp 40h +
jz loc_427A70  +
and dh 30h +
jz loc_42777A  +
mov eax 6 +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_420100  +
jmp loc_42777A  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aImaginaryConst +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
jmp loc_4273F5  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
jmp loc_427622  +
mov [esp+3Ch+var_2C] offset aNoDigitsInHexa +
jmp loc_427441  +
mov edi eax +
and edi 4000h +
jmp loc_427378  +
mov [esp+3Ch+var_3C] eax +
call loc_41CEC0  +
test eax eax +
jnz loc_42738F  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 6 +
mov [esp+3Ch+var_3C] eax +
call sub_420100  +
jmp loc_42738F  +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
jmp loc_427769  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_420150  +
jmp loc_4273E0  +
mov [esp+3Ch+var_2C] offset aInvalidPrefix0 +
jmp loc_427441  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aInvalidSuffix_ +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
xor eax eax +
jmp loc_427420  +
cmp byte ptr [eax+24Fh] 0 +
jnz loc_427687  +
cmp byte ptr [eax+248h] 0 +
jz loc_427B92  +
mov [esp+3Ch+var_2C] offset aUseOfC1zHexade +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
jmp loc_427687  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_4278A2  +
mov eax 7 +
jmp loc_4278B0  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_0 +
jmp loc_4279F6  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4273C0  +
mov [esp+3Ch+var_2C] offset aSuffixForDoubl +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
jmp loc_4273C0  +
xor edi edi +
mov esi 1000040h +
jmp loc_427378  +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
jmp loc_427AB9  +
movzx eax byte ptr [ebx] +
cmp al 2Dh +
jz loc_427B03  +
cmp al 2Bh +
jnz loc_427B0A  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_42769D  +
cmp al 27h +
jnz loc_427B30  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jnz loc_427640  +
mov [esp+3Ch+var_2C] offset aExponentHasNoD +
jmp loc_427441  +
cmp byte ptr [esi+276h] 0 +
setnz cl  +
jmp loc_4276AB  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_1 +
jmp loc_4279F6  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aDecimalFloatCo +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4200B0  +
jmp loc_4273D5  +
mov [esp+3Ch+var_2C] offset aUseOfC99Hexade +
jmp loc_427A43  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0ACh+arg_0] +
mov eax [esp+0ACh+arg_8] +
mov edi [esp+0ACh+arg_0] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ebp [eax+0Ch] +
mov dword ptr [ebx] 0 +
mov eax [eax+8] +
mov dword ptr [ebx+4] 0 +
mov ebx [esp+0ACh+arg_C] +
mov byte ptr [edi+11h] 0 +
lea edx [ebp+eax+0] +
shr ebx 0Ch +
and ebx 1 +
cmp eax 1 +
mov [edi+10h] bl +
mov [esp+0ACh+var_7C] edx +
jz loc_4281B6  +
mov eax [esp+0ACh+arg_4] +
mov eax [eax+294h] +
mov [esp+0ACh+var_60] eax +
mov eax [esp+0ACh+arg_C] +
and eax 0F00h +
cmp eax 400h +
jz loc_428194  +
cmp eax 200h +
jz loc_4281F5  +
cmp eax 800h +
jz loc_428233  +
mov esi 0FFFFFFF7h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 0Ah +
mov [esp+0ACh+var_78] 0Ah +
cmp [esp+0ACh+var_60] 3Fh +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
ja loc_427C85  +
mov ecx 40h +
sub ecx [esp+0ACh+var_60] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_427C85  +
mov eax edx +
xor edx edx +
add eax esi +
adc edx edi +
mov edi [esp+0ACh+var_64] +
mov [esp+0ACh+var_A0] 0 +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_A4] edi +
call sub_4549A0  +
add eax 1 +
adc edx 0 +
cmp ebp [esp+0ACh+var_7C] +
jnb loc_427FC9  +
mov [esp+0ACh+var_4E] 0 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_427CF9  +
cmp [esp+0ACh+var_78] 10h +
jz loc_4280A8  +
cmp dl 27h +
jnz loc_427FA6  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+276h] 0 +
jz loc_427FA6  +
add ebp 1 +
cmp ebp [esp+0ACh+var_7C] +
jz loc_427FA6  +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
movzx ecx ds:word_479A60[eax+eax] +
test cl 4 +
jz loc_427CC4  +
movzx ebx ds:byte_47B600[eax] +
mov eax [esp+0ACh+arg_0] +
mov edx [eax+0Ch] +
cmp edx [esp+0ACh+var_80] +
mov eax [eax+8] +
jb loc_428080  +
ja loc_427D37  +
cmp eax [esp+0ACh+var_84] +
jb loc_428080  +
mov edi [esp+0ACh+arg_0] +
mov esi [edi] +
mov edi [edi+4] +
mov [esp+0ACh+var_84] esi +
mov [esp+0ACh+var_80] edi +
mov edi [esp+0ACh+arg_0] +
movzx ecx byte ptr [edi+10h] +
mov edi [esp+0ACh+var_78] +
mov [esp+0ACh+var_4F] cl +
cmp edi 2 +
jz loc_4280B6  +
cmp edi 10h +
jz loc_428160  +
mov ecx [esp+0ACh+var_80] +
mov esi eax +
mov edi edx +
shr ecx 1Dh +
test ecx ecx +
mov ecx edx +
setnz [esp+0ACh+var_4D]  +
shld edi eax +
shl esi 3 +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
shr ecx 1Dh +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi 3 +
or ecx esi +
cmp [esp+0ACh+var_78] 0Ah +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] edi +
jnz loc_428142  +
mov esi eax +
mov edi edx +
shld edi eax +
add esi eax +
mov [esp+0ACh+var_5C] esi +
mov esi [esp+0ACh+var_84] +
mov eax edx +
mov [esp+0ACh+var_58] edi +
mov edi [esp+0ACh+var_80] +
shr eax 1Fh +
xor edx edx +
mov ecx ebx +
shld edi esi +
add esi esi +
add eax esi +
mov esi [esp+0ACh+var_5C] +
adc edx edi +
mov edi [esp+0ACh+var_58] +
xor ebx ebx +
add ecx esi +
adc ebx edi +
cmp edi ebx +
jb loc_427E05  +
jbe loc_4281E0  +
add eax 1 +
adc edx 0 +
mov esi ebx +
mov ebx ecx +
add ebx [esp+0ACh+var_6C] +
adc esi [esp+0ACh+var_68] +
cmp [esp+0ACh+var_68] esi +
jb loc_427E25  +
ja loc_427E1F  +
cmp [esp+0ACh+var_6C] ebx +
jbe loc_427E25  +
add eax 1 +
adc edx 0 +
add eax [esp+0ACh+var_74] +
adc edx [esp+0ACh+var_70] +
cmp edx [esp+0ACh+var_70] +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jb loc_428150  +
ja loc_427E4F  +
mov eax [esp+0ACh+var_74] +
cmp [esp+0ACh+var_84] eax +
jb loc_428150  +
movzx ecx [esp+0ACh+var_4D] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_18] esi +
mov edi [esp+0ACh+var_60] +
mov byte ptr [esp+0ACh+var_14+1] cl +
mov [esp+0ACh+var_6C] eax +
mov [esp+0ACh+var_20] edx +
movzx edx [esp+0ACh+var_4F] +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_94] edi +
mov edi [esp+0ACh+var_6C] +
mov [esp+0ACh+var_1C] ebx +
mov byte ptr [esp+0ACh+var_14] dl +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_14] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A4] ebx +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+var_10] +
mov [esp+0ACh+var_98] eax +
lea eax [esp+0ACh+var_4C] +
call sub_425530  +
mov edi [esp+0ACh+var_48] +
mov ecx [esp+0ACh+var_40] +
mov edx [esp+0ACh+var_3C] +
mov eax [esp+0ACh+var_4C] +
mov [esp+0ACh+var_6C] edi +
mov [esp+0ACh+var_20] edi +
mov edi [esp+0ACh+var_44] +
xor ebx [esp+0ACh+var_44] +
mov [esp+0ACh+var_18] ecx +
xor ecx esi +
mov [esp+0ACh+var_14] edx +
shr dx 8 +
mov [esp+0ACh+var_1C] edi +
mov edi [esp+0ACh+var_38] +
or ecx ebx +
mov [esp+0ACh+var_24] eax +
mov [esp+0ACh+var_10] edi +
jz loc_428175  +
mov edx 1 +
mov byte ptr [esp+0ACh+var_14+1] dl +
mov eax [esp+0ACh+var_24] +
add ebp 1 +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [edx] eax +
mov eax [esp+0ACh+var_20] +
mov edi edx +
mov [edx+4] eax +
mov eax [esp+0ACh+var_1C] +
mov [edx+8] eax +
mov eax [esp+0ACh+var_18] +
mov [edx+0Ch] eax +
mov eax [esp+0ACh+var_14] +
mov ebx eax +
mov [edi+10h] eax +
mov eax [esp+0ACh+var_10] +
shr bx 8 +
or [esp+0ACh+var_4E] bl +
cmp ebp [esp+0ACh+var_7C] +
mov [edi+14h] eax +
jnz loc_427CF9  +
cmp [esp+0ACh+var_4E] 0 +
jz loc_427FBE  +
test [esp+0ACh+arg_C] 1000000h +
jz loc_428255  +
mov eax [esp+0ACh+arg_0] +
movzx ebx byte ptr [eax+10h] +
test bl bl +
jnz loc_42806C  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+270h] 0 +
jnz loc_4281D0  +
mov eax [esp+0ACh+arg_0] +
mov ebx [esp+0ACh+arg_0] +
cmp [esp+0ACh+var_60] 40h +
mov ecx [esp+0ACh+var_60] +
mov edx [eax+4] +
mov esi [ebx+8] +
mov eax [eax] +
mov edi [ebx+0Ch] +
ja loc_428217  +
sub ecx 1 +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
and esi 1 +
xor esi 1 +
mov eax esi +
and eax 1 +
test al al +
jnz loc_42806C  +
cmp [esp+0ACh+var_78] 0Ah +
jnz loc_428061  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+268h] 1 +
mov [esp+0ACh+var_A4] offset aIntegerConstan +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] eax +
call sub_41FFB0  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [eax+10h] 1 +
mov eax [esp+0ACh+arg_0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0ACh+var_64] +
movzx ecx bl +
xor ebx ebx +
mov esi edi +
imul esi edx +
mul  edi +
add edx esi +
add ecx eax +
mov eax [esp+0ACh+arg_0] +
adc ebx edx +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
jmp loc_427CEC  +
and ch 1 +
jz loc_427CCF  +
jmp loc_427D0D  +
mov [esp+0ACh+var_5C] 1 +
mov [esp+0ACh+var_54] 3Fh +
movzx ecx byte ptr [esp+0ACh+var_54] +
mov edi [esp+0ACh+var_80] +
mov esi [esp+0ACh+var_84] +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_4280E1  +
mov esi edi +
xor edi edi +
mov ecx esi +
mov esi eax +
or ecx edi +
movzx ecx byte ptr [esp+0ACh+var_5C] +
mov edi edx +
setnz [esp+0ACh+var_4D]  +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_428101  +
mov edi esi +
xor esi esi +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_42811F  +
mov edi esi +
xor esi esi +
movzx ecx byte ptr [esp+0ACh+var_54] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_428132  +
mov eax edx +
xor edx edx +
mov ecx esi +
or ecx eax +
mov eax edx +
or eax edi +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] eax +
mov ecx ebx +
xor eax eax +
xor ebx ebx +
xor edx edx +
jmp loc_427E05  +
mov ecx 1 +
jmp loc_427E54  +
mov [esp+0ACh+var_5C] 4 +
mov [esp+0ACh+var_54] 3Ch +
jmp loc_4280C6  +
mov ecx [esp+0ACh+var_6C] +
mov ebx [esp+0ACh+var_84] +
mov esi [esp+0ACh+var_80] +
xor eax ebx +
xor ecx esi +
or ecx eax +
mov eax 1 +
cmovnz edx eax +
jmp loc_427F34  +
add ebp 1 +
mov esi 0FFFFFFF9h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 8 +
mov [esp+0ACh+var_78] 8 +
jmp loc_427C5D  +
movzx eax byte ptr [ebp+0] +
sub eax 30h +
mov [edi+8] eax +
sar eax 1Fh +
mov [edi+0Ch] eax +
jmp loc_42806C  +
cmp byte ptr [eax+8] 0 +
jnz loc_42806C  +
jmp loc_427FE5  +
cmp [esp+0ACh+var_5C] ecx +
jbe loc_427E05  +
lea esi [esi+0] +
jmp loc_427DFF  +
add ebp 2 +
mov esi 0FFFFFFF1h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 10h +
mov [esp+0ACh+var_78] 10h +
jmp loc_427C5D  +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_428026  +
add ebp 2 +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 2 +
mov [esp+0ACh+var_78] 2 +
jmp loc_427C5D  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A4] offset aIntegerConst_0 +
mov [esp+0ACh+var_A8] 2 +
mov [esp+0ACh+var_AC] eax +
call sub_41FFB0  +
jmp loc_42806C  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+238h] +
mov ebx [esi+23Ch] +
mov [esp+10h+var_10] eax +
sub ebx eax +
sar ebx 3 +
imul edx ebx +
lea edi [edx+edx*4+32h] +
shl edi 4 +
mov [esp+10h+var_C] edi +
call sub_437230  +
add edi eax +
mov [esi+238h] eax +
lea eax [eax+ebx*8] +
mov [esi+23Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1CCh +
mov eax [esp+1CCh+arg_4] +
mov [esp+1CCh+var_EC] 0 +
mov [esp+1CCh+var_127] 1 +
mov [esp+1CCh+var_126] 0 +
mov [esp+1CCh+var_110] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_138] 0 +
mov ebp [eax+238h] +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+0E8h] 0 +
mov dword ptr [ebp+24h] 16h +
lea eax [esp+1CCh+var_EC] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
add [esp+1CCh+var_138] 1 +
mov [esp+1CCh+var_1CC] eax +
call sub_41EE70  +
mov edi [esp+1CCh+var_EC] +
mov [esp+1CCh+var_150] edi +
movzx edx byte ptr [eax+4] +
mov [esp+1CCh+var_154] eax +
cmp dl 3Ch +
movzx eax dl +
ja loc_429232  +
jmp ds:off_477344[eax*4]  +
cmp [esp+1CCh+var_127] 0 +
jz loc_4283D3  +
sub edx 25h +
cmp dl 17h +
mov [esp+1CCh+var_3C] 0 +
ja loc_429F72  +
movzx edx dl +
jmp ds:off_477438[edx*4]  +
cmp [esp+1CCh+var_127] 0 +
jnz loc_4298D0  +
movzx edx ds:byte_477541[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_429810  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1BC] offset aMissingBinaryO +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
lea esi [esi+0] +
xor eax eax +
add esp 1CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1CCh+var_127] 0 +
jz loc_4283BE  +
mov [esp+1CCh+var_178] 1Bh +
mov [esp+1CCh+var_17C] 1Bh +
mov eax [esp+1CCh+var_178] +
movzx edx ds:byte_477541[eax+eax] +
test dl 1 +
jnz loc_42848E  +
mov eax [ebp+24h] +
mov edi eax +
jmp loc_42973B  +
cmp [esp+1CCh+var_138] 1 +
setz [esp+1CCh+var_126]  +
movzx edx ds:byte_477541[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_429710  +
mov [esp+1CCh+var_17C] eax +
cmp [esp+1CCh+var_127] 0 +
jz loc_4283D3  +
mov eax [ebp+24h] +
mov edi eax +
mov eax edi +
sub eax 1 +
cmp eax 1Bh +
ja loc_429266  +
cmp [esp+1CCh+var_17C] 14h +
jz loc_428610  +
mov eax [esp+1CCh+var_178] +
shr dl 1 +
and edx 1 +
movzx eax ds:byte_477540[eax+eax] +
mov [esp+1CCh+var_180] eax +
movzx eax ds:byte_477540[edi+edi] +
sub [esp+1CCh+var_180] edx +
cmp [esp+1CCh+var_180] eax +
jnb loc_4285A3  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+25Dh] 0 +
jz loc_428503  +
test ds:byte_477541[edi+edi] 4 +
jnz loc_429781  +
cmp edi 1Ch +
ja loc_429266  +
jmp ds:off_477498[edi*4]  +
mov eax [ebp+8] +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
xor ecx [ebp-14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
xor edx [ebp-18h] +
mov esi [ebp-20h] +
mov ebx [ebp-1Ch] +
mov [esp+1CCh+var_174] eax +
xor eax eax +
or ecx edx +
jz loc_429AF0  +
mov edx eax +
xor edx 1 +
cmp edi 18h +
cmovz eax edx +
movzx eax al +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] eax +
mov dword ptr [ebp-14h] 0 +
mov eax [ebp+20h] +
lea ebx [ebp-28h] +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
cmp byte ptr [ebp-0Fh] 0 +
jz loc_42858C  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jz loc_429822  +
mov edi [ebx+24h] +
mov ebp ebx +
movzx eax ds:byte_477540[edi+edi] +
cmp [esp+1CCh+var_180] eax +
jb loc_4284E5  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_4286A0  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingInExpre +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_428420  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_42A8FA  +
mov edx [ebp+8] +
mov [ebp-20h] edx +
mov edx [ebp+0Ch] +
mov [ebp-1Ch] edx +
mov edx [ebp+10h] +
mov [ebp-18h] edx +
mov edx [ebp+14h] +
mov [ebp-14h] edx +
mov edx [ebp+18h] +
mov [ebp-10h] edx +
mov edx [ebp+1Ch] +
mov [ebp-0Ch] edx +
mov edx [ebp+20h] +
mov [ebp-8] edx +
sub ebp 28h +
jz loc_428420  +
mov eax [esp+1CCh+var_178] +
sub eax 0Fh +
cmp eax 6 +
ja loc_4291C8  +
jmp ds:off_47750C[eax*4]  +
mov eax [ebp-48h] +
lea ebx [ebp-50h] +
mov edx [ebp-44h] +
or eax [ebp-40h] +
or edx [ebp-3Ch] +
or edx eax +
jz loc_4298E5  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [ebp-20h] +
mov [ebp-48h] eax +
mov eax [ebp-1Ch] +
mov [ebp-44h] eax +
mov eax [ebp-18h] +
mov [ebp-40h] eax +
mov eax [ebp-14h] +
mov [ebp-3Ch] eax +
mov eax [ebp-10h] +
mov [ebp-38h] eax +
mov eax [ebp-0Ch] +
mov [ebp-34h] eax +
mov eax [ebp-8] +
mov [ebp-30h] eax +
cmp byte ptr [ebp-10h] 0 +
mov eax 1 +
jnz loc_428682  +
movzx eax byte ptr [ebp+18h] +
mov [ebp-38h] al +
jmp loc_42858C  +
mov eax [esp+1CCh+var_17C] +
sub eax 12h +
cmp eax 1 +
ja loc_42A8D6  +
cmp [esp+1CCh+var_17C] 16h +
jnz loc_428610  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+0E8h] +
test eax eax +
jz loc_4286D8  +
cmp [esp+1CCh+var_126] 0 +
jz loc_42A8A6  +
cmp [esp+1CCh+var_138] 3 +
jnz loc_42A8A6  +
mov eax [esp+1CCh+arg_0] +
cmp [eax+238h] ebp +
jz loc_42ABBB  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov edx offset aElif +
mov eax offset aIf +
cmovz eax edx +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1BC] offset aUnbalancedStac +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
add esp 1CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jz loc_429914  +
mov eax [esp+1CCh+arg_0] +
xor edx edx +
sub dword ptr [eax+14h] 1 +
mov eax 1 +
mov [ebp-18h] eax +
mov eax [ebp+20h] +
mov [ebp-14h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_42858C  +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_429930  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
xor eax eax +
xor edx edx +
jmp loc_428769  +
mov eax [ebp+8] +
movzx edx byte ptr [ebp+18h] +
cmp byte ptr [ebp-10h] 0 +
mov ebx [ebp+10h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
mov esi [ebp-18h] +
mov ecx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_16C] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_164] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_15C] eax +
mov eax 1 +
cmovz eax edx +
cmp edi 9 +
jz loc_429AD1  +
cmp edi 0Ah +
jz loc_42A540  +
xor ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
xor ecx [esp+1CCh+var_16C] +
xor edx [esp+1CCh+var_164] +
xor esi [esp+1CCh+var_174] +
mov [ebp-10h] al +
mov eax [ebp+20h] +
mov [ebp-18h] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] edx +
mov [ebp-1Ch] esi +
mov [ebp-14h] ecx +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_428574  +
mov eax [ebp+10h] +
cmp edi 1Bh +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
mov esi [ebp+8] +
mov [esp+1CCh+var_C4] eax +
mov eax [ebp+14h] +
mov ebx [ebp+0Ch] +
mov [esp+1CCh+var_18C] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_188] ecx +
movzx ecx byte ptr [ebp+19h] +
mov [esp+1CCh+var_C0] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_BC] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_B8] eax +
jz loc_42A445  +
cmp edi 1Ch +
jz loc_42A352  +
cmp edi 0Eh +
jz loc_429F90  +
mov eax [esp+1CCh+var_18C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_188] 0 +
or esi eax +
xor eax eax +
or ebx edx +
or esi ebx +
setz al  +
xor ecx ecx +
mov [esp+1CCh+var_18C] eax +
xor edx edx +
xor esi esi +
xor ebx ebx +
mov [ebp-20h] esi +
mov edi [esp+1CCh+var_188] +
mov esi [esp+1CCh+var_18C] +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-14h] edi +
mov [ebp-18h] esi +
mov [ebp-10h] dl +
mov [ebp-0Fh] cl +
mov [ebp-8] eax +
jmp loc_428574  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
movzx ebx byte ptr [ebp-10h] +
mov esi [ebp+20h] +
mov [esp+1CCh+var_6C] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_170] edx +
mov edx [ebp-14h] +
test bl bl +
mov [esp+1CCh+var_68] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_64] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_60] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_5C] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_58] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_16C] eax +
movzx eax byte ptr [ebp-0Fh] +
mov byte ptr [esp+1CCh+var_14C] al +
mov eax [ebp+8] +
mov [esp+1CCh+var_54] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_50] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_4C] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_48] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_44] eax +
mov eax [ebp+1Ch] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_40] eax +
mov eax [ebp+8] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp+18h] +
jnz loc_429290  +
test al al +
jnz loc_429290  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+294h] +
cmp eax 40h +
mov [esp+1CCh+var_15C] eax +
jbe loc_42A1F5  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_170] +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_174] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_428A0B  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jz loc_42A229  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_42A1D0  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_428A4A  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx ecx byte ptr [esp+1CCh+var_130] +
test al al +
mov byte ptr [esp+1CCh+var_12C] 0 +
mov [esp+1CCh+var_125] cl +
jnz loc_4292B9  +
mov edx [esp+1CCh+var_18C] +
mov eax ecx +
mov ecx [esp+1CCh+var_188] +
xor eax 1 +
mov [esp+1CCh+var_125] al +
mov byte ptr [esp+1CCh+var_44] 0 +
mov eax edx +
mov [esp+1CCh+var_50] ecx +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_48] ecx +
mov ecx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_18C] edx +
mov [esp+1CCh+var_4C] edx +
mov [esp+1CCh+var_1B4] ecx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_54] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_50] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_50] +
mov [esp+1CCh+var_4C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_48] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_48] +
mov [esp+1CCh+var_44] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_40] eax +
mov eax [esp+1CCh+var_54] +
mov ecx edx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_4C] +
mov [esp+1CCh+var_164] eax +
mov eax [esp+1CCh+var_18C] +
or ecx eax +
jnz loc_4292CB  +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
mov ecx edx +
or ecx eax +
jz loc_429B02  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_42A69F  +
lea ecx [eax-41h] +
sub eax 1 +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_164] +
xor eax eax +
xor edx edx +
mov esi [esp+1CCh+var_160] +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
and ebx eax +
and esi edx +
or esi ebx +
jnz loc_428C19  +
mov [esp+1CCh+var_13C] ebp +
mov ebp [esp+1CCh+var_160] +
mov [esp+1CCh+var_134] edi +
mov edi [esp+1CCh+var_164] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_428BF6  +
mov ebp [esp+1CCh+var_13C] +
mov edi [esp+1CCh+var_134] +
mov eax [esp+1CCh+var_114] +
sub eax ecx +
mov ecx eax +
jmp loc_429359  +
mov [esp+1CCh+var_19C] edi +
mov eax [ebp+8] +
lea ebx [ebp-28h] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1B4] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_1B0] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_1AC] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_1A8] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_1A4] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_1A0] eax +
mov eax [ebx+8] +
mov [esp+1CCh+var_1CC] eax +
mov eax [ebx+0Ch] +
mov [esp+1CCh+var_1C8] eax +
mov eax [ebx+10h] +
mov [esp+1CCh+var_1C4] eax +
mov eax [ebx+14h] +
mov [esp+1CCh+var_1C0] eax +
mov eax [ebx+18h] +
mov [esp+1CCh+var_1BC] eax +
mov eax [ebx+1Ch] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_425E90  +
mov eax [esp+1CCh+var_10C] +
mov [ebx+8] eax +
mov eax [esp+1CCh+var_108] +
mov [ebx+0Ch] eax +
mov eax [esp+1CCh+var_104] +
mov [ebx+10h] eax +
mov eax [esp+1CCh+var_100] +
mov [ebx+14h] eax +
mov eax [esp+1CCh+var_FC] +
mov [ebx+18h] eax +
mov eax [esp+1CCh+var_F8] +
mov [ebx+1Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_428574  +
mov eax [esp+1CCh+arg_0] +
mov edx [ebp-1Ch] +
mov eax [eax+294h] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_160] edx +
mov edx [ebp+8] +
mov [esp+1CCh+var_B4] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_9C] edx +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_B0] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_98] edx +
mov edx [ebp+10h] +
mov [esp+1CCh+var_AC] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_94] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_A8] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_90] edx +
mov edx [ebp+18h] +
mov [esp+1CCh+var_A4] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_A0] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_8C] edx +
mov edx [ebp+1Ch] +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test al al +
mov [esp+1CCh+var_88] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_15C] esi +
mov esi [ebp+10h] +
mov [esp+1CCh+var_158] edi +
mov edi [ebp+14h] +
jnz loc_428DB1  +
test dl dl +
jz loc_429B53  +
mov byte ptr [esp+1CCh+var_14C] 1 +
mov byte ptr [esp+1CCh+var_134] 1 +
mov byte ptr [esp+1CCh+var_13C] 0 +
mov edx [esp+1CCh+var_188] +
xor ebx ebx +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_428DE8  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_158] +
mov ebx eax +
or ebx edx +
setnz bl  +
mov edx [esp+1CCh+var_164] +
lea eax [esp+1CCh+var_84] +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] edi +
call sub_425DA0  +
mov eax [esp+1CCh+var_84] +
mov edx [esp+1CCh+var_80] +
mov ecx [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C8] edi +
lea edi [esp+1CCh+var_24] +
mov [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_168] edx +
mov edx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_12C] ecx +
mov ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_130] eax +
mov eax edi +
call sub_425DA0  +
mov eax [esp+1CCh+var_20] +
mov edx 1 +
or eax [esp+1CCh+var_24] +
mov eax [esp+1CCh+var_15C] +
mov ecx [esp+1CCh+var_160] +
cmovnz ebx edx +
mov edx [esp+1CCh+var_158] +
mov esi [esp+1CCh+var_1C] +
mov [esp+1CCh+var_1CC] eax +
lea eax [esp+1CCh+var_24] +
mov edi [esp+1CCh+var_18] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_164] +
call sub_425DA0  +
mov eax [esp+1CCh+var_1C] +
add [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_20] +
mov edx [esp+1CCh+var_18] +
adc [esp+1CCh+var_168] edx +
add [esp+1CCh+var_16C] esi +
adc [esp+1CCh+var_168] edi +
mov edi eax +
or edi [esp+1CCh+var_24] +
mov edi 1 +
mov esi [esp+1CCh+var_16C] +
cmovnz ebx edi +
mov edi [esp+1CCh+var_168] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_80] edi +
mov eax [esp+1CCh+var_80] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1B4] edi +
lea edi [esp+1CCh+var_10C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
mov eax edi +
call sub_425530  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_12C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
xor ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_130] +
xor eax [esp+1CCh+var_18C] +
or eax ecx +
jz loc_429AB2  +
mov ebx 1 +
cmp byte ptr [esp+1CCh+var_13C] 0 +
jnz loc_4299E0  +
xor edx edx +
cmp byte ptr [esp+1CCh+var_134] 0 +
jnz loc_42904D  +
test bl bl +
mov eax 1 +
jnz loc_42904B  +
cmp [esp+1CCh+var_174] 40h +
mov ecx [esp+1CCh+var_174] +
ja loc_429F66  +
mov eax [esp+1CCh+var_18C] +
sub ecx 1 +
mov edx [esp+1CCh+var_188] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
xor eax eax +
and ecx 1 +
xor ecx 1 +
mov ebx ecx +
movzx ecx byte ptr [esp+1CCh+var_13C] +
and ebx 1 +
xor ecx 1 +
cmp cl bl +
jz loc_42904B  +
mov eax [esp+1CCh+var_18C] +
mov ebx esi +
mov ecx edi +
mov edx [esp+1CCh+var_188] +
or ebx eax +
or ecx edx +
or ebx ecx +
setnz al  +
mov edx eax +
movzx eax byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] esi +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_80] edi +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_74+1] dl +
mov byte ptr [esp+1CCh+var_74] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_78] ebx +
lea ebx [ebp-28h] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_7C] ecx +
mov [ebp-20h] eax +
mov eax [esp+1CCh+var_80] +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
mov eax [esp+1CCh+var_78] +
mov [ebp-14h] eax +
mov eax [esp+1CCh+var_74] +
mov [ebp-10h] eax +
mov eax [esp+1CCh+var_70] +
mov [ebp-0Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_428574  +
mov eax [ebp+10h] +
mov ebx [ebp-20h] +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_16C] ebx +
mov ebx [ebp-1Ch] +
mov esi [ebp+14h] +
mov [esp+1CCh+var_15C] ecx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_164] ebx +
mov ebx [ebp-18h] +
mov [esp+1CCh+var_13C] edx +
mov eax [eax+294h] +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [ebp+18h] +
mov [esp+1CCh+var_1C0] ecx +
mov ecx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1BC] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1B4] esi +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B8] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_1CC] ebx +
mov [esp+1CCh+var_1C8] ecx +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
call sub_426EA0  +
cmp edi 19h +
jz loc_429993  +
cmp edi 3 +
jz loc_429990  +
cmp edi 2 +
jz loc_42A560  +
xor ecx ecx +
test al al +
mov edx 1 +
jz loc_42918A  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
jz loc_42A945  +
xor edx edx +
xor ecx ecx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] edx +
mov [ebp-14h] ecx +
jmp loc_428563  +
cmp dword ptr [ebp+24h] 11h +
jnz loc_42AA8D  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_429210  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [esp+1CCh+arg_0] +
add ebp 28h +
cmp ebp [eax+23Ch] +
jz loc_42A493  +
mov eax [esp+1CCh+var_17C] +
mov [esp+1CCh+var_127] 1 +
mov [ebp+24h] eax +
mov eax [esp+1CCh+var_154] +
mov [ebp+0] eax +
mov eax [esp+1CCh+var_150] +
mov [ebp+20h] eax +
jmp loc_428333  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_4291C8  +
mov eax [esp+1CCh+arg_0] +
add dword ptr [eax+14h] 1 +
jmp loc_4291C8  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_429210  +
jmp loc_4291C8  +
lea edx [eax-1] +
cmp edx 19h +
jbe loc_428475  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1BC] offset aTokenSIsNotVal +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4283F6  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] edi +
mov [esp+1CCh+var_1C4] offset aImpossibleOper +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_428420  +
mov eax [esp+1CCh+arg_0] +
mov byte ptr [esp+1CCh+var_12C] 1 +
mov byte ptr [esp+1CCh+var_130] 0 +
mov [esp+1CCh+var_125] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_15C] eax +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_428B91  +
mov eax [esp+1CCh+var_15C] +
xor edx edx +
mov ebx [esp+1CCh+var_18C] +
lea esi [eax-1] +
lea ecx [eax-41h] +
xor eax eax +
mov [esp+1CCh+var_13C] esi +
mov esi [esp+1CCh+var_188] +
test cl 20h +
setnz dl  +
setz al  +
shl edx cl +
shl eax cl +
mov ecx ebx +
and esi edx +
and ecx eax +
mov ebx esi +
or ebx ecx +
jnz loc_42A990  +
mov [esp+1CCh+var_134] ebp +
mov ecx [esp+1CCh+var_13C] +
mov [esp+1CCh+var_124] edi +
mov ebp [esp+1CCh+var_188] +
mov edi [esp+1CCh+var_18C] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_429322  +
mov eax [esp+1CCh+var_13C] +
mov ebp [esp+1CCh+var_134] +
mov edi [esp+1CCh+var_124] +
mov esi eax +
sub esi ecx +
mov ecx esi +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_44] 1 +
mov [esp+1CCh+var_1B0] ecx +
mov eax ebx +
mov [esp+1CCh+var_50] esi +
mov esi [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] ebx +
mov ebx [esp+1CCh+var_164] +
mov [esp+1CCh+var_164] ecx +
mov [esp+1CCh+var_48] esi +
mov esi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_4C] ebx +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_24] +
call sub_425A40  +
mov eax [esp+1CCh+var_1C] +
mov ebx [esp+1CCh+var_24] +
mov esi [esp+1CCh+var_20] +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_18C] eax +
movzx eax byte ptr [esp+1CCh+var_14] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_124] ebp +
mov [esp+1CCh+var_120] edi +
mov edi esi +
mov esi ebx +
mov byte ptr [esp+1CCh+var_13C] al +
mov eax 1 +
mov ebx ecx +
mov [esp+1CCh+var_188] edx +
mov ebp eax +
mov [esp+1CCh+var_164] 0 +
mov [esp+1CCh+var_160] 0 +
mov [esp+1CCh+var_11C] 0 +
mov [esp+1CCh+var_118] 0 +
jmp loc_429486  +
test ebx ebx +
jz loc_4296A6  +
mov edx [esp+1CCh+var_188] +
mov ecx esi +
sub ebx 1 +
mov eax [esp+1CCh+var_18C] +
shl ecx 1Fh +
shrd esi edi +
shr edi 1 +
shrd eax edx +
shr edx 1 +
or ecx edx +
mov [esp+1CCh+var_18C] eax +
mov [esp+1CCh+var_188] ecx +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1C0] esi +
mov [esp+1CCh+var_1BC] edi +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [esp+1CCh+var_13C] +
mov [esp+1CCh+var_1B4] edx +
mov edx [esp+1CCh+var_168] +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_170] +
mov [esp+1CCh+var_1B8] eax +
mov eax ebp +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_174] +
call sub_426EA0  +
test al al +
jz loc_429458  +
mov edx [esp+1CCh+var_170] +
mov ecx [esp+1CCh+var_168] +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_68] edx +
mov edx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_60] ecx +
mov ecx ebp +
mov ebp [esp+1CCh+var_20] +
mov byte ptr [esp+1CCh+var_5C] cl +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] eax +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_64] edx +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B0] ebp +
mov [esp+1CCh+var_18] edx +
mov ecx [esp+1CCh+var_18] +
mov edx [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C] eax +
mov [esp+1CCh+var_1AC] eax +
mov [esp+1CCh+var_1A8] ecx +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_19C] 5 +
mov [esp+1CCh+var_1A4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1A0] ecx +
mov [esp+1CCh+var_1C8] edx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_425E90  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_58] edx +
mov edx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] edx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ecx +
mov edx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ecx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_5C] eax +
mov ebp eax +
shr ax 8 +
cmp ebx 3Fh +
mov [esp+1CCh+var_168] ecx +
mov [esp+1CCh+var_14C] ax +
ja loc_42AE9C  +
mov ecx ebx +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_164] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_160] +
or ecx edx +
mov edx [esp+1CCh+var_134] +
test ebx ebx +
mov [esp+1CCh+var_160] ecx +
mov [esp+1CCh+var_164] edx +
jnz loc_429460  +
mov edi [esp+1CCh+var_120] +
mov ebp [esp+1CCh+var_124] +
cmp edi 7 +
jz loc_42A4A2  +
xor esi esi +
movzx ecx byte ptr [esp+1CCh+var_12C] +
cmp byte ptr [esp+1CCh+var_130] 0 +
jnz loc_42A590  +
mov edi ecx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov [ebp-18h] eax +
mov eax edi +
mov [ebp-10h] al +
mov eax esi +
mov [ebp-0Fh] al +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] ecx +
mov [ebp-14h] edx +
mov [ebp-8] eax +
jmp loc_428574  +
cmp [esp+1CCh+var_127] 0 +
jz loc_429810  +
cmp eax 15h +
jz loc_4299A0  +
mov eax [esp+1CCh+var_178] +
cmp eax 16h +
jz loc_4299C0  +
mov edi [ebp+24h] +
mov [esp+1CCh+var_17C] eax +
mov eax edi +
and eax 0FFFFFFFDh +
cmp eax 14h +
jnz loc_42AA54  +
mov eax [esp+1CCh+var_17C] +
sub eax 15h +
cmp eax 1 +
jbe loc_4284A1  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1BC] offset aOperatorSHasNo +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4283F6  +
movzx eax byte ptr [ebp+18h] +
cmp al [ebp-10h] +
jz loc_428503  +
test al al +
mov eax [esp+1CCh+arg_0] +
mov ecx [eax+294h] +
jz loc_429840  +
cmp ecx 40h +
mov ebx [ebp-20h] +
mov esi [ebp-1Ch] +
mov eax [ebp-18h] +
mov edx [ebp-14h] +
jbe loc_429970  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_428503  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov edx [ebp-8] +
mov [esp+1CCh+var_1BC] offset aTheLeftOperand +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4298A1  +
mov eax [ebp+24h] +
mov edi eax +
mov eax [esp+1CCh+var_178] +
mov [esp+1CCh+var_17C] eax +
jmp loc_4284A1  +
mov [esp+1CCh+var_1C4] offset aIntegerOverflo +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_42858C  +
cmp ecx 40h +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
jbe loc_429950  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_428503  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1BC] offset aTheRightOperan +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 0 +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
mov edi [ebp+24h] +
jmp loc_428503  +
mov [esp+1CCh+var_178] 1Ch +
mov [esp+1CCh+var_17C] 1Ch +
jmp loc_42844A  +
mov eax [ebp+8] +
mov [ebp-48h] eax +
mov eax [ebp+0Ch] +
mov [ebp-44h] eax +
mov eax [ebp+10h] +
mov [ebp-40h] eax +
mov eax [ebp+14h] +
mov [ebp-3Ch] eax +
mov eax [ebp+18h] +
mov [ebp-38h] eax +
mov eax [ebp+1Ch] +
mov [ebp-34h] eax +
mov eax [ebp+20h] +
mov [ebp-30h] eax +
jmp loc_428673  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or edx [ebp+10h] +
or eax [ebp+14h] +
or edx eax +
setnz al  +
xor edx edx +
movzx eax al +
jmp loc_428769  +
mov ecx [ebp+8] +
xor edx edx +
mov eax 1 +
mov esi [ebp+0Ch] +
or ecx [ebp+10h] +
or esi [ebp+14h] +
or esi ecx +
jnz loc_428769  +
jmp loc_4287B2  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_429874  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4297D7  +
xor eax 1 +
movzx eax al +
xor ecx ecx +
mov edx eax +
jmp loc_42918A  +
mov eax [ebp+24h] +
cmp eax 14h +
mov edi eax +
jz loc_42ACE0  +
mov [esp+1CCh+var_17C] 15h +
jmp loc_42973B  +
mov eax [ebp+24h] +
cmp eax 16h +
mov edi eax +
jz loc_42ACED  +
mov [esp+1CCh+var_17C] 16h +
jmp loc_42973B  +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_84] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_80] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
jmp loc_428FDE  +
mov ecx [esp+1CCh+var_168] +
mov edx [esp+1CCh+var_16C] +
mov eax ecx +
mov ecx edx +
xor eax edi +
xor ecx esi +
or eax ecx +
mov eax 1 +
cmovnz ebx eax +
jmp loc_428FD0  +
and ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
and ecx [esp+1CCh+var_16C] +
and edx [esp+1CCh+var_164] +
and esi [esp+1CCh+var_174] +
jmp loc_42881C  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
setz al  +
jmp loc_42853D  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jnz loc_429B34  +
mov [esp+1CCh+var_1BC] offset aDivisionByZero +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
mov edi ebx +
movzx esi byte ptr [esp+1CCh+var_14C] +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
jmp loc_4296E7  +
cmp [esp+1CCh+var_174] 40h +
jbe loc_42A090  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jz loc_42A0C3  +
cmp [esp+1CCh+var_174] 40h +
mov eax [esp+1CCh+var_174] +
jbe loc_42A070  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_158] +
mov eax [esp+1CCh+var_15C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_14C] 0 +
mov byte ptr [esp+1CCh+var_134] 0 +
jnz loc_428DC9  +
mov [esp+1CCh+var_90] edi +
mov eax [esp+1CCh+var_90] +
mov ebx [esp+1CCh+var_158] +
mov byte ptr [esp+1CCh+var_8C] 0 +
mov ecx [esp+1CCh+var_15C] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_8C] +
mov [esp+1CCh+var_98] ebx +
mov edx [esp+1CCh+var_98] +
xor byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_88] +
mov [esp+1CCh+var_94] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] ecx +
mov [esp+1CCh+var_1CC] ecx +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_98] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_98] +
mov [esp+1CCh+var_94] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_158] edx +
mov esi [esp+1CCh+var_94] +
mov [esp+1CCh+var_90] eax +
mov eax [esp+1CCh+var_FC] +
mov edi [esp+1CCh+var_90] +
mov [esp+1CCh+var_8C] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_88] eax +
mov eax [esp+1CCh+var_9C] +
mov [esp+1CCh+var_15C] eax +
movzx eax byte ptr [esp+1CCh+var_134] +
mov byte ptr [esp+1CCh+var_14C] al +
jmp loc_428DC9  +
lea eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_1C0] eax +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_417C80  +
mov esi [esp+1CCh+var_3C] +
xor edx edx +
test esi esi +
mov ecx eax +
jnz loc_42A703  +
test ecx ecx +
js loc_42AAA6  +
xor ebx ebx +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_429EA1  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C4] 0 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4271E0  +
test eax 1000000h +
mov [esp+1CCh+var_E8] eax +
jnz loc_42A965  +
mov edx eax +
and edx 0Fh +
cmp edx 1 +
jz loc_42A92F  +
cmp edx 2 +
jnz loc_429DB3  +
mov [esp+1CCh+var_1BC] offset aFloatingConsta +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
mov edi [esp+1CCh+var_3C] +
test edi edi +
setnz bl  +
jmp loc_429E49  +
mov eax [esp+1CCh+var_154] +
mov edi [esp+1CCh+arg_0] +
mov eax [eax+8] +
cmp eax [edi+2ACh] +
jz loc_42ABD1  +
mov edi [esp+1CCh+arg_0] +
cmp eax [edi+2BCh] +
jz loc_42AA7B  +
mov edi [esp+1CCh+arg_0] +
mov ecx 1 +
cmp eax [edi+2C0h] +
jz loc_42AA7D  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+248h] 0 +
jz loc_429E33  +
mov edx [edi+2B0h] +
cmp eax edx +
jz loc_42A8BC  +
cmp eax [edi+2B4h] +
jz loc_42A8BC  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+265h] 0 +
jnz loc_42A716  +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor eax eax +
xor edx edx +
xor esi esi +
xor edi edi +
jmp loc_429EA1  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_42A6AE  +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41B2E0  +
mov edi [esp+1CCh+var_3C] +
xor edx edx +
mov eax [esp+1CCh+var_E8] +
mov byte ptr [esp+1CCh+var_18C] 0 +
test edi edi +
setnz bl  +
xor esi esi +
xor edi edi +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_14] bl +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_1C] eax +
mov byte ptr [esp+1CCh+var_14+1] cl +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_18] edx +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_D4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_D0] ecx +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov [esp+1CCh+var_18C] eax +
mov eax edx +
mov edx esi +
mov esi edi +
mov [esp+1CCh+var_E0] esi +
mov esi [esp+1CCh+var_18C] +
mov edi edx +
mov [esp+1CCh+var_D8] eax +
mov eax [esp+1CCh+var_E0] +
mov byte ptr [esp+1CCh+var_D4] bl +
mov byte ptr [esp+1CCh+var_D4+1] cl +
mov [esp+1CCh+var_E4] edx +
mov [ebp+0Ch] eax +
mov eax [esp+1CCh+var_D8] +
mov [esp+1CCh+var_DC] esi +
mov [ebp+8] edi +
mov [ebp+10h] esi +
mov [ebp+14h] eax +
mov eax [esp+1CCh+var_D4] +
mov [esp+1CCh+var_127] 0 +
mov [ebp+18h] eax +
mov eax [esp+1CCh+var_D0] +
mov [ebp+1Ch] eax +
jmp loc_428333  +
sub ecx 41h +
mov eax esi +
mov edx edi +
jmp loc_42900D  +
mov [esp+1CCh+var_1C4] offset aEval_token +
mov [esp+1CCh+var_1C8] 4A2h +
mov [esp+1CCh+var_1CC] offset a____GccLibcp_1 +
call sub_406BF0  +
nop   +
mov edi [esp+1CCh+arg_0] +
not ebx  +
not esi  +
mov [esp+1CCh+var_174] ebx +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_16C] ebp +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov edx [esp+1CCh+var_BC] +
not ebx  +
mov [esp+1CCh+var_1CC] esi +
mov esi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] ebx +
mov ebp edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B4] ebp +
mov [esp+1CCh+var_1C8] esi +
mov [esp+1CCh+var_1BC] edx +
not edi  +
mov [esp+1CCh+var_1C4] edi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_425530  +
mov eax [esp+1CCh+var_104] +
xor ecx ecx +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov edx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov edi [esp+1CCh+var_C4] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov ebp [esp+1CCh+var_C0] +
mov [esp+1CCh+var_BC] edx +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_B8] eax +
mov [esp+1CCh+var_188] ebp +
mov ebp [esp+1CCh+var_16C] +
jmp loc_4288D4  +
lea ecx [eax-1] +
mov edx edi +
mov eax esi +
shrd eax edi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_429BBF  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_160] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jnz loc_429B91  +
mov ebx [esp+1CCh+var_188] +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_A4] 0 +
mov [esp+1CCh+var_B0] ebx +
mov ebx [esp+1CCh+var_160] +
mov edx ecx +
mov [esp+1CCh+var_B4] ecx +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_A8] ebx +
mov eax [esp+1CCh+var_A8] +
mov ebx [esp+1CCh+var_174] +
mov [esp+1CCh+var_AC] ecx +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_A4] +
mov [esp+1CCh+var_1B4] ebx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_A0] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_B4] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_B0] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_AC] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_A8] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_A8] +
mov [esp+1CCh+var_A4] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_A0] eax +
mov eax [esp+1CCh+var_B4] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_AC] +
mov [esp+1CCh+var_164] eax +
jmp loc_429B91  +
lea ecx [eax-1] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_42A1E7  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_428A53  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_168] +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_16C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_42A210  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jnz loc_428A24  +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov byte ptr [esp+1CCh+var_5C] 0 +
mov edx ecx +
mov [esp+1CCh+var_6C] ecx +
mov ecx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_68] ebx +
mov ebx [esp+1CCh+var_168] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov eax ecx +
mov [esp+1CCh+var_60] ebx +
mov ebx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] ecx +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1B4] ebx +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov byte ptr [esp+1CCh+var_130] 1 +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov ecx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_58] edx +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ebx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] ecx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ebx +
mov ecx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ebx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_5C] eax +
mov [esp+1CCh+var_168] ebx +
mov ebx eax +
shr ax 8 +
mov [esp+1CCh+var_14C] ax +
jmp loc_428A24  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_16C] ebp +
mov ebp [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov [esp+1CCh+var_C0] ebp +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_174] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C0] edx +
mov edx [esp+1CCh+var_BC] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_C4] edi +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1BC] edx +
mov [esp+1CCh+var_1B4] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C4] edi +
call sub_4255E0  +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_FC] +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_BC] ecx +
mov ebp [esp+1CCh+var_16C] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_B8] eax +
mov eax [esp+1CCh+var_C4] +
mov [esp+1CCh+var_188] edx +
mov edx ecx +
shr cx 8 +
mov [esp+1CCh+var_18C] eax +
jmp loc_4288D4  +
mov eax [esp+1CCh+arg_0] +
xor ecx ecx +
cmp byte ptr [eax+25Ah] 0 +
jz loc_4288D4  +
mov edi [eax+14h] +
test edi edi +
jnz loc_4288D4  +
mov [esp+1CCh+var_1C4] offset aTraditionalC_0 +
mov [esp+1CCh+var_1C8] 6 +
mov [esp+1CCh+var_1CC] eax +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_174] edx +
call sub_41FFF0  +
mov edx [esp+1CCh+var_174] +
mov ecx [esp+1CCh+var_16C] +
jmp loc_4288D4  +
mov [esp+1CCh+var_1CC] eax +
call sub_428280  +
mov ebp eax +
jmp loc_4291DE  +
movzx ebx byte ptr [esp+1CCh+var_12C] +
xor ecx ecx +
test bl bl +
jnz loc_42A51D  +
cmp [esp+1CCh+var_125] 0 +
jnz loc_42A78E  +
cmp [esp+1CCh+var_15C] 40h +
ja loc_42A760  +
movzx ecx byte ptr [esp+1CCh+var_114] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx edx [esp+1CCh+var_125] +
xor ecx ecx +
xor edx 1 +
cmp dl al +
jz loc_42A51D  +
mov edx [esp+1CCh+var_164] +
mov esi [esp+1CCh+var_11C] +
mov edi [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_160] +
or edx esi +
or eax edi +
or edx eax +
setnz cl  +
mov esi ecx +
mov edi ebx +
mov eax [esp+1CCh+var_164] +
mov edx [esp+1CCh+var_160] +
mov ecx [esp+1CCh+var_11C] +
mov ebx [esp+1CCh+var_118] +
jmp loc_4296E7  +
or ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
or ecx [esp+1CCh+var_16C] +
or edx [esp+1CCh+var_164] +
or esi [esp+1CCh+var_174] +
jmp loc_42881C  +
xor edx edx +
xor ecx ecx +
test al al +
jz loc_42918A  +
mov eax [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
xor eax esi +
or eax ebx +
jz loc_42A9A5  +
mov edx 1 +
xor ecx ecx +
jmp loc_42918A  +
mov edi [esp+1CCh+var_170] +
mov esi [esp+1CCh+var_174] +
mov byte ptr [esp+1CCh+var_5C] cl +
mov byte ptr [esp+1CCh+var_5C+1] 0 +
mov [esp+1CCh+var_68] edi +
mov edi [esp+1CCh+var_168] +
mov edx esi +
mov [esp+1CCh+var_6C] esi +
mov esi [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_60] edi +
mov eax [esp+1CCh+var_60] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov esi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_5C] esi +
mov ecx esi +
shr si 8 +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] edx +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_60] +
mov [esp+1CCh+var_58] eax +
mov eax [esp+1CCh+var_6C] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_174] eax +
mov eax [esp+1CCh+var_64] +
mov [esp+1CCh+var_16C] eax +
jmp loc_4296D5  +
lea ecx [eax-1] +
mov [esp+1CCh+var_114] ecx +
jmp loc_428BBF  +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_42A9C5  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+254h] 0 +
jz loc_429E69  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAreA +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 1 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_420100  +
jmp loc_429E69  +
mov ebx 1 +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_429EA1  +
mov edx [edi+14h] +
test edx edx +
jnz loc_429E47  +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aSIsNotDefinedE +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 0Dh +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C4] eax +
call sub_420100  +
mov eax [esp+1CCh+var_3C] +
test eax eax +
setnz bl  +
jmp loc_429E49  +
mov ecx [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_11C] +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_42A4ED  +
mov edi [esp+1CCh+var_118] +
mov esi [esp+1CCh+var_11C] +
mov byte ptr [esp+1CCh+var_2C] 0 +
mov byte ptr [esp+1CCh+var_2C+1] 0 +
mov [esp+1CCh+var_38] edi +
mov edi [esp+1CCh+var_160] +
mov edx esi +
mov [esp+1CCh+var_3C] esi +
mov esi [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_30] edi +
mov eax [esp+1CCh+var_30] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_34] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_2C] +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_28] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4255E0  +
mov eax [esp+1CCh+var_10C] +
mov edi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_3C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_2C] edi +
mov ebx edi +
mov [esp+1CCh+var_38] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_34] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_118] edx +
mov [esp+1CCh+var_30] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_30] +
mov [esp+1CCh+var_28] eax +
mov eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_11C] eax +
mov eax [esp+1CCh+var_34] +
mov [esp+1CCh+var_164] eax +
jmp loc_42A4BE  +
mov eax [esp+1CCh+arg_0] +
mov dword ptr [eax+0E8h] 0 +
jmp loc_4286D8  +
cmp eax edx +
setz al  +
xor edx edx +
movzx eax al +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor esi esi +
xor edi edi +
jmp loc_429EA1  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset a?WithoutFollow +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_428420  +
mov eax [ebp+0] +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aMissingInExp_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
jmp loc_428420  +
test ah 20h +
jz loc_42A9F9  +
mov [esp+1CCh+var_1BC] offset aImaginaryNumbe +
jmp loc_429D8C  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_429186  +
jmp loc_42918A  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aUserDefinedLit +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
mov eax [esp+1CCh+var_E8] +
jmp loc_429D71  +
mov eax [esp+1CCh+var_13C] +
xor ecx ecx +
mov [esp+1CCh+var_114] eax +
jmp loc_429359  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_42A57E  +
jmp loc_42918A  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAr_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4200B0  +
jmp loc_429E69  +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
lea edx [esp+1CCh+var_E4] +
mov [esp+1CCh+var_1CC] edx +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] eax +
call sub_427BA0  +
mov eax [esp+1CCh+var_DC] +
mov edx [esp+1CCh+var_E4] +
mov esi [esp+1CCh+var_E0] +
movzx ebx byte ptr [esp+1CCh+var_D4] +
mov [esp+1CCh+var_18C] eax +
movzx ecx byte ptr [esp+1CCh+var_D4+1] +
mov eax [esp+1CCh+var_D8] +
jmp loc_429EFB  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1BC] offset aOperatorSHas_0 +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4283F6  +
xor ecx ecx +
mov edx edi +
lea eax [esp+1CCh+var_E4] +
call sub_426700  +
jmp loc_42AA1F  +
mov [esp+1CCh+var_1BC] offset aWithoutPrecedi +
mov [esp+1CCh+var_1C0] 0 +
mov eax [esp+1CCh+var_150] +
jmp loc_42A90F  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_20] 0FFFFFFFFh +
mov byte ptr [esp+1CCh+var_14] 0 +
mov byte ptr [esp+1CCh+var_14+1] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_1C] ecx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_24] 0FFFFFFFFh +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_20] +
mov [esp+1CCh+var_18] 0FFFFFFFFh +
mov [esp+1CCh+var_1CC] 0FFFFFFFFh +
mov [esp+1CCh+var_1C0] 0FFFFFFFFh +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_14] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_425530  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_24] eax +
mov eax [esp+1CCh+var_108] +
mov ebx ecx +
mov esi [esp+1CCh+var_24] +
shr bx 8 +
mov word ptr [esp+1CCh+var_18C] bx +
mov ebx [esp+1CCh+var_3C] +
mov [esp+1CCh+var_20] eax +
mov eax [esp+1CCh+var_104] +
mov [esp+1CCh+var_14] ecx +
mov edi [esp+1CCh+var_20] +
test ebx ebx +
mov [esp+1CCh+var_1C] eax +
mov eax [esp+1CCh+var_100] +
setnz bl  +
mov [esp+1CCh+var_18] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_10] eax +
mov eax [esp+1CCh+var_1C] +
jmp loc_429EA1  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or eax [ebp+14h] +
or edx [ebp+10h] +
or edx eax +
setnz al  +
jmp loc_428422  +
add byte ptr [edi+10h] 1 +
mov esi [edi+4Ch] +
mov [esp+1CCh+var_1CC] edi +
call sub_41EE00  +
movzx edx byte ptr [eax+4] +
mov ebx eax +
xor eax eax +
cmp dl 14h +
jz loc_42ADD0  +
cmp dl 35h +
jnz loc_42AD13  +
test eax eax +
mov ebx [ebx+8] +
jnz loc_42ADEF  +
test ebx ebx +
jz loc_42AD3C  +
mov eax [esp+1CCh+arg_0] +
cmp esi [eax+4Ch] +
jz loc_42AD7B  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+266h] 0 +
jz loc_42AC45  +
mov [esp+1CCh+var_1C4] offset aThisUseOfDefin +
mov [esp+1CCh+var_1C8] 18h +
mov [esp+1CCh+var_1CC] eax +
call sub_420030  +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
movzx eax word ptr [ebx+14h] +
jz loc_42AD49  +
shr ax 6 +
test al 80h +
jnz loc_42ACA9  +
movzx edx word ptr [ebx+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [ebx+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_42AD90  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+218h] +
test eax eax +
jz loc_42ACA9  +
mov edi [esp+1CCh+arg_0] +
mov edx [edi+20h] +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C8] edx +
call eax  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
mov [eax+0E8h] ebx +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_42AD65  +
xor eax eax +
xor edx edx +
mov [esp+1CCh+var_18C] eax +
xor ecx ecx +
mov eax edx +
xor ebx ebx +
xor edx edx +
xor esi esi +
jmp loc_429EFB  +
mov [esp+1CCh+var_1BC] offset aMissingExpress +
jmp loc_42AA95  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov eax offset aIf +
mov edx offset aElif +
mov [esp+1CCh+var_1BC] offset aSWithNoExpress +
cmovz eax edx +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4283F6  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aOperatorDefine +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
test byte ptr [ebx+6] 10h +
jnz loc_42AE2C  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
jmp loc_42ACC9  +
shr ax 6 +
test al 4 +
jnz loc_42AC5C  +
mov eax [ebx+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [ebx+14h] +
jmp loc_42AC58  +
xor edx edx +
mov eax 1 +
test byte ptr [ebx+15h] 40h +
jnz loc_42ACC9  +
jmp loc_42ACCD  +
add eax 30h +
cmp esi eax +
jnz loc_42AC1D  +
jmp loc_42AC45  +
test al 4 +
jz loc_42ADB5  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+228h] +
test eax eax +
jz loc_42ADB5  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_1CC] edi +
call eax  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+214h] +
test eax eax +
jnz loc_42AC92  +
jmp loc_42ACA9  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EE00  +
mov ebx eax +
movzx edx byte ptr [eax+4] +
mov eax 1 +
jmp loc_42ABF1  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EE00  +
cmp byte ptr [eax+4] 15h +
jz loc_42AC05  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingAfterDe +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_42AD3C  +
movzx eax byte ptr [ebx+4] +
xor ecx ecx +
mov word ptr [esp+1CCh+var_20+2] cx +
mov byte ptr [esp+1CCh+var_20] al +
lea eax [esp+1CCh+var_24] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1C8] ebx +
mov esi eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425030  +
mov [esp+1CCh+var_1BC] esi +
mov [esp+1CCh+var_1C4] offset aSIsAnAlternati +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41FFB0  +
jmp loc_42AD3C  +
lea ecx [ebx-40h] +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_11C] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_118] +
or ecx edx +
mov eax ecx +
mov ecx [esp+1CCh+var_134] +
mov [esp+1CCh+var_118] eax +
mov [esp+1CCh+var_11C] ecx +
jmp loc_429460  +
***
push edi  +
push esi  +
push ebx  +
sub esp 28h +
mov ecx [esp+3Ch] +
mov ebx [esp+50h] +
mov eax [esp+38h] +
mov edx [esp+54h] +
mov [esp+10h] ecx +
mov ecx [esp+40h] +
mov esi [esp+10h] +
mov [esp+24h] ebx +
mov [esp+14h] ecx +
mov ecx [esp+44h] +
mov edi [esp+14h] +
mov [esp] esi +
mov [esp+18h] ecx +
mov ecx [esp+48h] +
mov ebx [esp+18h] +
mov [esp+4] edi +
mov [esp+1Ch] ecx +
mov ecx [esp+4Ch] +
mov esi [esp+1Ch] +
mov [esp+8] ebx +
test cl cl +
mov [esp+20h] ecx +
mov [esp+0Ch] esi +
jnz loc_42AFC0  +
cmp edx 40h +
jbe loc_42B010  +
lea ecx [edx-40h] +
cmp ecx 3Fh +
ja loc_42AFC0  +
mov edi [esp+4] +
lea ecx [edx-41h] +
mov esi [esp] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_42AFC0  +
mov ecx 80h +
mov edi 0FFFFFFFFh +
sub ecx edx +
mov esi 0FFFFFFFFh +
shrd esi edi +
xor edx edx +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
mov edx esi +
mov edi [esp+4] +
mov esi [esp] +
not edx  +
not ecx  +
or ecx edi +
or edx esi +
mov [esp] edx +
mov [esp+4] ecx +
nop   +
lea esi [esi+0] +
mov esi [esp] +
mov edi [esp+4] +
mov ebx [esp+8] +
mov ecx esi +
mov [esp+10h] esi +
mov esi [esp+0Ch] +
mov [eax] ecx +
mov [esp+14h] edi +
mov ecx [esp+14h] +
mov [eax+8] ebx +
mov [esp+1Ch] esi +
mov edx [esp+1Ch] +
mov [esp+18h] ebx +
mov [eax+4] ecx +
mov [eax+0Ch] edx +
mov edx [esp+20h] +
mov [eax+10h] edx +
mov edx [esp+24h] +
mov [eax+14h] edx +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edi [esp+0Ch] +
lea ecx [edx-1] +
mov esi [esp+8] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_42AFC0  +
cmp edx 40h +
mov dword ptr [esp] 0FFFFFFFFh +
mov dword ptr [esp+4] 0FFFFFFFFh +
jz loc_42AFC0  +
mov ecx 40h +
mov esi 0FFFFFFFFh +
sub ecx edx +
mov ebx 0FFFFFFFFh +
shrd ebx esi +
xor edx edx +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
cmovnz esi edx +
mov ecx ebx +
mov ebx [esp+8] +
mov edx ecx +
mov ecx esi +
mov esi [esp+0Ch] +
not edx  +
not ecx  +
or edx ebx +
or ecx esi +
mov [esp+8] edx +
mov [esp+0Ch] ecx +
jmp loc_42AFC0  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+0Ch+arg_0] +
movzx ebp byte ptr [edi] +
jz loc_42B139  +
mov edi eax +
lea esi [eax+1] +
mov eax ebp +
mov ebp edi +
lea esi [esi+0] +
movzx ebx byte ptr [edx] +
movzx edi bl +
test ds:word_479A60[edi+edi] 0C00h +
jz loc_42B110  +
test al al +
jz loc_42B0E3  +
cmp bl 27h +
jz loc_42B11E  +
cmp bl 22h +
nop   +
jz loc_42B11E  +
jmp loc_42B128  +
movzx ebx byte ptr [edx] +
test ds:word_479A60[ebx+ebx] 0C00h +
jz loc_42B0EB  +
add edx 1 +
sub ecx 1 +
jnz loc_42B0D4  +
mov edi esi +
mov byte ptr [esi-1] 20h +
add esi 1 +
test ecx ecx +
jnz loc_42B0B0  +
mov esi ebp +
mov ebp eax +
sub edi esi +
mov eax edi +
mov edi [esp+0Ch+arg_0] +
mov ecx ebp +
mov [edi] cl +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 22h +
jz loc_42B11A  +
cmp bl 27h +
jnz loc_42B128  +
test al al +
jz loc_42B135  +
cmp al bl +
mov edi 0 +
cmovz eax edi +
mov edi esi +
add edx 1 +
mov [esi-1] bl +
sub ecx 1 +
jmp loc_42B0F1  +
mov eax ebx +
jmp loc_42B128  +
xor eax eax +
jmp loc_42B100  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax+2D0h] +
mov eax [eax+2CCh] +
sub eax ecx +
cmp edx eax +
jbe loc_42B290  +
mov eax [ebx+2C8h] +
mov edi ecx +
sub edi eax +
add edx edi +
lea esi [edx+edx*2] +
shr esi 1 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call sub_437230  +
add esi eax +
mov [ebx+2C8h] eax +
add eax edi +
mov [ebx+2CCh] esi +
mov [ebx+2D0h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
test byte ptr [edx+15h] 1 +
jnz loc_42B2D8  +
mov ecx [edx+18h] +
mov edi [ecx+4] +
or byte ptr [ecx+14h] 18h +
mov ebx [ecx+0Ch] +
mov [esp+30h+var_24] ebx +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_2C] edx +
call sub_41CD90  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_28] 0 +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_14] edx +
call sub_41C580  +
mov [esp+30h+var_30] eax +
mov ebp eax +
call strlen  +
mov [esp+30h+var_30] esi +
mov ebx eax +
lea eax [eax+1] +
mov [esp+30h+var_2C] eax +
call sub_422950  +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov edi eax +
mov [esp+30h+var_30] eax +
call memcpy  +
mov edx [esp+30h+var_14] +
mov byte ptr [edi+ebx] 0Ah +
jmp loc_42B2BC  +
***
push ebx  +
sub esp 14h +
mov ebx [eax+2D0h] +
movzx ecx byte ptr [edx] +
add ebx 1 +
add edx 1 +
mov [ebx-1] cl +
movzx ecx byte ptr [edx] +
movzx eax cl +
test ds:word_479A60[eax+eax] 204h +
jnz loc_42B340  +
mov eax [esi+4Ch] +
mov ecx ebx +
mov [eax+8] edx +
mov eax [esi+2D0h] +
mov edx [esi+234h] +
mov [esp+18h+var_C] 1 +
sub ecx eax +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_420760  +
mov [esi+2D0h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov ebp [esi] +
mov edx [eax+2Ch] +
mov eax [esi+4Ch] +
mov [ebp+0] edi +
mov eax [eax+4] +
test eax eax +
jz loc_42B492  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 2Fh +
jnz loc_42B3D7  +
jmp loc_42B486  +
movzx eax byte ptr [ebx] +
add ebx 1 +
cmp al 2Fh +
jnz loc_42B3D4  +
cmp byte ptr [ebx-2] 2Ah +
jnz loc_42B3D4  +
mov [ebp+0] ebx +
xor ebx ebx +
cmp byte ptr [esi+8] 0 +
jz loc_42B456  +
test ecx ecx +
jz loc_42B471  +
cmp byte ptr [esi+24Ch] 0 +
jnz loc_42B45F  +
mov edx [ebp+0] +
mov eax [esi+2D0h] +
mov [esp+34h+var_30] edi +
sub edx edi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_1C] edx +
call memcpy  +
mov edx [esp+34h+var_1C] +
add edx [esi+2D0h] +
test bl bl +
jz loc_42B4E1  +
lea eax [edx+1] +
mov [esi+2D0h] eax +
mov byte ptr [edx] 2Ah +
mov eax [esi+2D0h] +
lea edx [eax+1] +
mov [esi+2D0h] edx +
mov byte ptr [eax] 2Fh +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+24Bh] 0 +
jz loc_42B3FC  +
mov eax [ebp+0] +
sub dword ptr [esi+2D0h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+2D0h] +
mov byte ptr [eax-1] 20h +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edi+2] +
movzx eax byte ptr [edi+2] +
jmp loc_42B3D7  +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] edx +
call sub_421A00  +
mov ecx [esp+34h+var_1C] +
test al al +
mov ebx eax +
jz loc_42B3E9  +
mov edx [esp+34h+var_18] +
mov [esp+34h+var_24] offset aUnterminated_0 +
mov [esp+34h+var_28] 0 +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] esi +
call sub_4200B0  +
mov ecx [esp+34h+var_1C] +
jmp loc_42B3E9  +
mov eax [ebp+0] +
mov [esi+2D0h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax edx +
sub esp 1Ch +
mov edi [esi+2D0h] +
mov [esp+20h+var_14] ecx +
jmp loc_42B51B  +
mov eax edx +
mov edi ebx +
lea edx [eax+1] +
movzx ecx byte ptr [edx-1] +
lea ebx [edi+1] +
movzx ebp cl +
test byte ptr [ebp+ebp+479A61h] 8 +
mov [ebx-1] cl +
jnz loc_42B517  +
cmp cl 2Fh +
jnz loc_42B55F  +
cmp byte ptr [eax+1] 2Ah +
jnz loc_42B55F  +
mov ecx [esp+20h+var_14] +
test ecx ecx +
jz loc_42B55F  +
mov [esi+2D0h] ebx +
xor ecx ecx +
mov eax esi +
call sub_42B3A0  +
mov edi [esi+2D0h] +
jmp loc_42B51B  +
mov [esi+2D0h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx word ptr [edx+14h] +
shr cx 6 +
test cl 20h +
jz loc_42B5E0  +
push ebx  +
sub esp 18h +
and ecx 4 +
jnz loc_42B5E3  +
mov ecx [edx+18h] +
movzx ecx byte ptr [ecx+14h] +
and ecx 1 +
test cl cl +
jz loc_42B5B4  +
mov ecx [eax+4Ch] +
xor ebx ebx +
jmp loc_42B5A7  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_42B5F0  +
add ebx 1 +
cmp [ecx+14h] edx +
jnz loc_42B5A0  +
cmp ebx 14h +
jbe loc_42B5A0  +
mov edx [edx] +
mov [esp+1Ch+var_14] offset aDetectedRecurs +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_41FFB0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
retn   +
cmp dword ptr [edx+18h] 0Ah +
setz cl  +
jmp loc_42B590  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [edx] +
mov ebx [eax] +
mov [edx+4] eax +
mov [edx+2D8h] ebx +
mov ebx [eax+10h] +
mov [edx+2DCh] ebx +
mov ebx [eax+8] +
mov [edx+2E0h] ebx +
mov [eax] ecx +
mov [eax+4] ecx +
add ecx [esp+arg_8] +
mov byte ptr [eax+38h] 0 +
mov [eax+10h] ecx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov ecx [eax+2D8h] +
mov [edx] ecx +
mov ecx [eax+2DCh] +
mov [edx+10h] ecx +
mov ecx [eax+2E0h] +
mov byte ptr [edx+38h] 1 +
mov [edx+4] ecx +
mov dword ptr [eax+4] 0 +
retn   +
***
push esi  +
mov ebx [esp+18h+arg_0] +
jmp loc_42C4BC  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_42B670  +
test al al +
jnz loc_42C4D5  +
mov eax [ebx] +
cmp byte ptr [eax+38h] 0 +
jz loc_42C4A0  +
mov [esp+18h+var_18] ebx +
call sub_421E00  +
test al al +
jnz loc_42C4A0  +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_42C4BC  +
mov eax [ebx] +
test eax eax +
setnz al  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
mov ecx [esp+arg_0] +
test byte ptr [ecx+14h] 1 +
jz loc_42C538  +
cmp word ptr [ecx+10h] 0 +
jz loc_42C538  +
mov edx [ecx+4] +
movzx ebx word ptr [edx+4] +
mov eax [edx] +
test bx bx +
jz loc_42C53B  +
mov esi [ecx] +
mov ecx eax +
mov ebx [esi+ebx*4-4] +
add ecx 0Dh +
and ecx 0FFFFFFF8h +
add edx ecx +
mov ecx [edx] +
mov edi [ebx+4] +
movzx ebx word ptr [edx+4] +
add edi ecx +
add eax edi +
test bx bx +
jnz loc_42C516  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+0Ch] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
test byte ptr [edi+14h] 1 +
jz loc_42C5B7  +
cmp word ptr [edi+10h] 0 +
jz loc_42C5B7  +
mov ebx [edi+4] +
jmp loc_42C58B  +
mov edx [edi] +
mov esi [edx+eax*4-4] +
mov edx [esi+4] +
mov eax [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [ebx] +
add ebp [esi+4] +
lea edx [eax+0Dh] +
mov esi ebp +
and edx 0FFFFFFF8h +
add ebx edx +
mov edx [ebx] +
lea eax [ebx+6] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_14] edx +
call memcpy  +
movzx eax word ptr [ebx+4] +
add esi [ebx] +
test ax ax +
mov ebp esi +
jnz loc_42C561  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [edi+0Ch] +
mov eax [edi+4] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
add esi [edi+0Ch] +
add esp 1Ch +
pop ebx  +
mov ebp esi +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+2C8h] +
mov ebp [ebx+4Ch] +
mov [ebx+2D0h] eax +
mov eax [ebx] +
mov eax [eax] +
mov [ebp+8] eax +
mov edx [ebx] +
mov edx [edx+10h] +
mov [ebp+0Ch] edx +
sub edx eax +
mov eax ebx +
call sub_42B240  +
mov edx [ebp+8] +
cmp byte ptr [edx] 28h +
jz loc_42C6A5  +
movzx ecx byte ptr [ebx+24Ch] +
mov eax ebx +
mov edi [ebx] +
call sub_42B500  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_42B670  +
sub byte ptr [ebx+10h] 1 +
test esi esi +
jz loc_42C78E  +
mov edx [ebx+2C8h] +
mov ecx [ebx+2D0h] +
cmp edx ecx +
jb loc_42C677  +
jmp loc_42C687  +
sub ecx 1 +
cmp ecx edx +
jz loc_42C687  +
movzx eax byte ptr [ecx-1] +
test ds:word_479A60[eax+eax] 0C00h +
jnz loc_42C670  +
mov [ebx+2D0h] ecx +
mov eax ebx +
xor ecx ecx +
mov edx esi +
call sub_42B140  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4Ch] +
mov edx [eax+8] +
add edx 1 +
jmp loc_42C6D2  +
mov eax [ebx+4Ch] +
mov ecx 1 +
mov edx [eax+8] +
mov eax ebx +
call sub_42B500  +
mov edi eax +
movzx eax byte ptr [eax] +
cmp al 2Ch +
jnz loc_42C795  +
lea edx [edi+1] +
mov ecx 1 +
mov eax ebx +
call sub_42B500  +
mov edi eax +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr [edx+edx+479A61h] 2 +
jnz loc_42C701  +
cmp al 24h +
jnz loc_42C7EE  +
cmp byte ptr [ebx+262h] 0 +
jz loc_42C722  +
mov edx edi +
mov eax ebx +
call sub_42B330  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] eax +
call sub_41EE90  +
test al al +
jz loc_42C6B0  +
mov [esp+1Ch+var_14] offset aSyntaxErrorInM +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] ebx +
call sub_41FFB0  +
xor edx edx +
mov eax [ebx+4Ch] +
cmp byte ptr [edi] 29h +
setz dl  +
add edi edx +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [esi] eax +
mov edx [ebp+8] +
mov eax ebx +
movzx ecx byte ptr [ebx+24Ch] +
mov esi [ebx] +
call sub_42B500  +
mov [esi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] ebx +
call sub_42B670  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
jmp loc_42C69D  +
xor eax eax +
jmp loc_42C69D  +
cmp al 29h +
jnz loc_42C722  +
movzx ecx word ptr [esi+10h] +
mov eax [ebx+4Ch] +
add edi 1 +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov edi [ebx] +
mov edx [eax+8] +
mov [esi] edx +
lea edx [edx+ecx*4] +
mov [eax+8] edx +
mov eax ebx +
or byte ptr [esi+14h] 1 +
mov edx [ebp+8] +
movzx ecx byte ptr [ebx+24Ch] +
call sub_42B500  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_42B670  +
sub byte ptr [ebx+10h] 1 +
jmp loc_42C658  +
cmp al 29h +
jnz loc_42C722  +
movzx ecx word ptr [esi+10h] +
test cx cx +
jz loc_42C79D  +
nop   +
jmp loc_42C722  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov eax [esi+0Ch] +
add eax [ebx+0Ch] +
mov [esp+2Ch+var_2C] eax +
call sub_4371B0  +
mov ecx [ebx+0Ch] +
cmp word ptr [ebx+10h] 0 +
mov byte ptr [esp+2Ch+var_E] 0 +
mov byte ptr [esp+2Ch+var_E+1] 0 +
mov ebp eax +
lea eax [eax+ecx] +
mov [esp+2Ch+var_20] eax +
jz loc_42C8E6  +
mov esi [esi+4] +
mov ebx [ebx+4] +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jz loc_42C8A1  +
jmp loc_42C8CF  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_42C8CF  +
cmp word ptr [ebx+4] 0 +
jz loc_42C930  +
mov eax [ebx] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add ebx eax +
mov eax [esi] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add esi eax +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jnz loc_42C8CF  +
mov ecx [ebx] +
lea eax [esp+2Ch+var_E] +
lea edx [ebx+6] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_42B090  +
mov ecx [esi] +
lea edx [esi+6] +
mov edi eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_42B090  +
cmp edi eax +
jz loc_42C860  +
mov ebx 1 +
mov [esp+2Ch+var_2C] ebp +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+4] +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_42B090  +
mov ecx [esi+0Ch] +
mov edx [esi+4] +
mov ebx eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_42B090  +
cmp ebx eax +
jnz loc_42C8CF  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
setnz bl  +
jmp loc_42C8D4  +
xor ebx ebx +
jmp loc_42C8D4  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_42C960  +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp sub_43F2E0  +
mov eax [eax+4] +
mov [esp+arg_0] eax +
jmp sub_43F2E0  +
***
sub esp 18h +
mov eax [eax+18h] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov eax [eax] +
mov edx [eax+4] +
test edx edx +
jz loc_42C9D2  +
mov ebx [eax+0Ch] +
cmp byte ptr [ebx+62h] 0 +
jnz loc_42C9D2  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42C9E0  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
cmp word ptr [ebx+60h] 1 +
jnz loc_42C9D2  +
cmp byte ptr [ebx+64h] 0 +
jnz loc_42C9D2  +
mov eax [esp+14h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_42CA13  +
mov esi [esp+14h+arg_4] +
mov edx [esi+4] +
lea ecx [edx+1] +
shl edx 2 +
mov esi [esp+14h+arg_4] +
mov [esi+4] ecx +
mov ecx [ebx+4] +
mov [eax+edx] ecx +
jmp loc_42C9D2  +
mov eax [esp+14h+arg_4] +
mov eax [eax+4] +
mov [esp+14h+var_10] 4 +
mov [esp+14h+var_14] eax +
call sub_4371E0  +
mov esi [esp+14h+arg_4] +
xor edx edx +
mov ecx 1 +
mov [esi] eax +
jmp loc_42CA04  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4493F0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_42CAA0  +
mov edx [eax] +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] eax +
call sub_4493F0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
mov edx [eax+4] +
jmp loc_42CA83  +
***
sub esp 18h +
mov edx [eax+0ACh] +
mov ecx [edx] +
cmp ecx 7Fh +
jz loc_42CAD4  +
lea eax [ecx+1] +
mov [edx] eax +
shl ecx 4 +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
mov [esp+18h+var_18] 7F8h +
call sub_4371B0  +
mov edx [ebx+0ACh] +
xor ecx ecx +
shl ecx 4 +
mov [eax+4] edx +
mov edx eax +
mov dword ptr [eax] 0 +
mov [ebx+0ACh] eax +
mov eax 1 +
mov [edx] eax +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
call sub_43F2E0  +
mov edx [edi+0A8h] +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] eax +
call sub_43EF20  +
mov ebx [eax] +
mov edx eax +
test ebx ebx +
jnz loc_42CB56  +
jmp loc_42CB68  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42CB68  +
mov eax [ebx+4] +
test eax eax +
jnz loc_42CB50  +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 24h +
mov [esp+38h+var_38] 1 +
mov [esp+38h+var_1C] edx +
call sub_4371E0  +
mov ebx eax +
mov eax [edi+70h] +
mov [ebx+4] esi +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call strlen  +
mov dword ptr [ebx+18h] 0 +
mov [ebx+8] eax +
mov eax ebp +
mov [ebx+0Ch] al +
mov eax edi +
call sub_42CAB0  +
mov edx [esp+38h+var_1C] +
mov ecx [edx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov ecx [edi+1Ch] +
mov ecx [ecx+28h] +
mov [eax+0Ch] ebx +
mov [eax+8] ecx +
mov [edx] eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
mov eax [esp+arg_4] +
mov eax [eax] +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp strcmp  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
cmp byte ptr [eax] 0 +
jnz loc_42CD21  +
mov dword ptr [ebx+58h] 0 +
xor eax eax +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_fstati64  +
mov esi ds:__imp__errno +
test eax eax +
jnz loc_42CD00  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jz loc_42CCF2  +
mov dword ptr [ebx+5Ch] 0 +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 2 +
mov eax [ebx+58h] +
mov [esp+14h+var_14] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
call esi  +
mov eax [eax] +
mov [ebx+5Ch] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 1B6h +
mov [esp+14h+var_10] 8000h +
mov [esp+14h+var_14] eax +
call _open  +
cmp eax 0FFFFFFFFh +
mov [ebx+58h] eax +
jnz loc_42CCB8  +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 0Dh +
jz loc_42CD62  +
call esi  +
cmp dword ptr [eax] 14h +
jnz loc_42CD12  +
lea esi [esi+0] +
jmp loc_42CD87  +
mov eax [ebx+4] +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_stati64  +
test eax eax +
jnz loc_42CD91  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_42CD91  +
call esi  +
mov dword ptr [eax] 2 +
jmp loc_42CD12  +
call esi  +
mov dword ptr [eax] 0Dh +
jmp loc_42CD12  +
***
mov edi edx +
push esi  +
xor esi esi +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+1Ch] +
cmp dword ptr [eax+2Ch] 1 +
jbe loc_42CDC0  +
mov eax [ebx] +
test eax eax +
jz loc_42CDC0  +
movzx esi byte ptr [eax+3Dh] +
cmp byte ptr [ebx+12h] 0 +
mov ebp [ebx+28Ch] +
jz loc_42CDD4  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:__imp__errno +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
call edx  +
mov edx [edi+5Ch] +
mov ecx [esp+34h+var_18] +
mov [eax] edx +
xor eax eax +
or esi ecx +
setnz al  +
mov edx [esp+34h+var_1C] +
cmp ebp eax +
jg loc_42CE37  +
cmp dword ptr [ebx+28Ch] 0 +
jz loc_42CE40  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_42CE40  +
mov eax [edi+4] +
test eax eax +
jz loc_42CE9D  +
mov edi [esp+34h+arg_0] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] 0 +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_28] edi +
call sub_4202F0  +
jmp loc_42CDCC  +
cmp byte ptr [ebx+290h] 0 +
jnz loc_42CE74  +
mov eax [edi+4] +
test eax eax +
jz loc_42CE70  +
mov edi [esp+34h+arg_0] +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] 6 +
mov [esp+34h+var_28] edi +
call sub_4202F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
jmp loc_42CE47  +
call edx  +
cmp dword ptr [eax] 2 +
jnz loc_42CE40  +
mov edx [edi] +
mov eax [ebx+180h] +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call sub_42F430  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_42CE40  +
jmp loc_42CDCC  +
mov eax [edi] +
nop   +
jmp loc_42CE19  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 20h +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
add esp 1Ch +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call strlen  +
mov ebp eax +
lea eax [ebx+eax+2] +
mov [esp+24h+var_24] eax +
call sub_4371B0  +
mov edx [esp+24h+var_18] +
mov esi eax +
mov eax [edx] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcpy  +
test ebx ebx +
jz loc_42CF2A  +
movzx eax byte ptr [esi+ebx-1] +
cmp al 5Ch +
jnz loc_42CF50  +
add ebx esi +
add ebp 1 +
mov [esp+24h+var_1C] ebp +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
call memcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_42CF2A  +
mov byte ptr [esi+ebx] 2Fh +
add ebx 1 +
jmp loc_42CF2A  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax+8] +
lea eax [esi+2Ah] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
mov eax [edi+4] +
lea ebx [esp+38h+var_1E+1] +
and ebx 0FFFFFFF0h +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ebx +
call memcpy  +
test esi esi +
jz loc_42CFA6  +
movzx eax byte ptr [ebx+esi-1] +
cmp al 5Ch +
jnz loc_42D107  +
mov eax 6363h +
mov dword ptr [ebx+esi] 64616568h +
mov dword ptr [ebx+esi+4] 672E7265h +
mov [ebx+esi+8] ax +
mov byte ptr [ebx+esi+0Ah] 0 +
mov [esp+38h+var_34] offset aR +
mov [esp+38h+var_38] ebx +
call j_fopen  +
mov [esp+38h+var_38] 24h +
mov esi eax +
call sub_4371B0  +
test esi esi +
mov [edi+14h] eax +
jz loc_42D147  +
lea eax [edi+4] +
xor ebx ebx +
mov [ebp+var_1E+2] 9 +
mov [ebp+var_28] eax +
jmp loc_42D00F  +
movzx eax cl +
test ds:word_479A60[eax+eax] 0C00h +
jz loc_42D040  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_42D000  +
mov [esp+38h+var_38] esi +
call fclose  +
mov eax [edi+14h] +
lea edi ds:0[ebx*4] +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+2] +
cmp eax [ebp+var_1E+2] +
mov [ebp-20h] eax +
ja loc_42D120  +
mov eax [edi+14h] +
lea edx ds:0[ebx*4] +
lea ebx [eax+edx] +
mov eax ecx +
mov [ebp+var_24] edx +
mov edx esi +
call sub_42CBD0  +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
jz loc_42D084  +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 1 +
jnz loc_42D06A  +
mov edx esi +
call sub_42CBD0  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jnz loc_42D0D0  +
mov eax [edi+14h] +
mov edx [ebp+var_24] +
mov [eax+edx+4] ebx +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jz loc_42D0C2  +
nop   +
lea esi [esi+0] +
cmp eax 0FFFFFFFFh +
jz loc_42D0C2  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jnz loc_42D0B0  +
mov ebx [ebp-20h] +
jmp loc_42D00F  +
cmp al 2Fh +
jz loc_42D094  +
test al al +
jz loc_42D0DE  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_42D094  +
mov edx [ebp+var_24] +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea eax [eax+edx+4] +
mov edx [ebp+var_28] +
mov [ebp+var_24] eax +
mov eax ebx +
call sub_42CEE0  +
mov edx [ebp+var_24] +
mov [edx] eax +
mov [esp+38h+var_38] ebx +
call free  +
jmp loc_42D0B5  +
cmp al 2Fh +
jz loc_42CFA6  +
mov byte ptr [ebx+esi] 2Fh +
add esi 1 +
jmp loc_42CFA6  +
add [ebp+var_1E+2] 8 +
mov edx [ebp+var_1E+2] +
mov eax [edi+14h] +
mov [ebp+var_24] ecx +
shl edx 2 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] eax +
call sub_437230  +
mov ecx [ebp+var_24] +
mov [edi+14h] eax +
jmp loc_42D052  +
xor edi edi +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov dword ptr [esp+8] 8 +
mov [esp] ebx +
mov [esp+4] esi +
call memcmp  +
test eax eax +
jnz loc_42D1BA  +
cmp byte ptr [ebx+18h] 0 +
lea edi [ebx+8] +
jz loc_42D1C1  +
lea eax [esi+8] +
mov dword ptr [esp+8] 10h +
mov [esp+4] eax +
mov [esp] edi +
call memcmp  +
test eax eax +
jnz loc_42D1BA  +
cmp byte ptr [ebx+19h] 0 +
jnz loc_42D1BA  +
movzx eax byte ptr [esi+18h] +
xor eax 1 +
movzx eax al +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+1Ch] +
lea edi [ebx+8] +
mov edx [eax+14h] +
mov [esp+8] edi +
mov eax [eax+40h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_43E4F0  +
mov byte ptr [ebx+18h] 1 +
jmp loc_42D18F  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
movzx ebx byte ptr [edx+65h] +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_1C] ecx +
test bl bl +
jnz loc_42D325  +
movzx eax byte ptr [edx+63h] +
test al al +
mov [esp+44h+var_16] al +
jnz loc_42D325  +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_42D325  +
cmp dword ptr [edx+58h] 0FFFFFFFFh +
jz loc_42D330  +
movzx eax word ptr [edi+2Eh] +
and ax 0F000h +
cmp ax 3000h +
jz loc_42D394  +
cmp ax 8000h +
jz loc_42D3D7  +
mov eax 2010h +
mov ebx 2000h +
mov [esp+44h+var_15] 0 +
mov [esp+44h+var_44] eax +
xor ebp ebp +
call sub_4371B0  +
mov esi eax +
lea esi [esi+0] +
mov edx [edi+58h] +
mov eax ebx +
sub eax ebp +
mov [esp+44h+var_3C] eax +
lea eax [esi+ebp] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edx +
call _read  +
cmp eax 0 +
jle loc_42D2B7  +
add ebp eax +
cmp ebp ebx +
jnz loc_42D270  +
cmp [esp+44h+var_15] 0 +
jnz loc_42D3D0  +
lea ebx [ebp+ebp+0] +
lea eax [ebx+10h] +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_40] eax +
call sub_437230  +
mov esi eax +
jmp loc_42D270  +
jnz loc_42D3F1  +
cmp ebp ebx +
nop   +
jnz loc_42D357  +
mov ecx ebp +
mov edx [esp+44h+var_20] +
add ebx 10h +
mov eax [edx+280h] +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_3C] esi +
mov ebp eax +
lea eax [edi+40h] +
mov [esp+44h+var_2C] eax +
lea eax [edi+18h] +
mov [esp+44h+var_30] eax +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edx +
call sub_418320  +
mov byte ptr [edi+65h] 1 +
mov [edi+14h] eax +
movzx eax [esp+44h+var_16] +
mov [edi+63h] al +
mov eax [edi+58h] +
mov [esp+44h+var_44] eax +
call _close  +
movzx ebx byte ptr [edi+63h] +
mov dword ptr [edi+58h] 0FFFFFFFFh +
xor ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edx +
call sub_42CCA0  +
test al al +
mov ebx eax +
jnz loc_42D232  +
mov eax [esp+44h+var_1C] +
xor ecx ecx +
mov edx edi +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+var_20] +
call sub_42CDA0  +
jmp loc_42D325  +
cmp [esp+44h+var_15] 0 +
jz loc_42D2C6  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsShorterThan +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4201F0  +
mov ecx ebp +
jmp loc_42D2C8  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsABlockDevic +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4201F0  +
mov [esp+44h+var_16] 1 +
jmp loc_42D304  +
mov ecx ebx +
jmp loc_42D2C8  +
cmp dword ptr [edi+44h] 0 +
mov ebx [edi+40h] +
jle loc_42D426  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsTooLarge +
mov [esp+44h+var_34] eax +
jmp loc_42D3A3  +
mov eax [edi+4] +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_44] eax +
call sub_4202F0  +
mov [esp+44h+var_44] esi +
call free  +
mov [esp+44h+var_16] 1 +
jmp loc_42D304  +
jl loc_42D430  +
cmp ebx 7FFFFFFFh +
ja loc_42D3E0  +
lea eax [ebx+10h] +
mov [esp+44h+var_15] 1 +
jmp loc_42D25D  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx ebx byte ptr [edx] +
mov eax [esp+30h+arg_0] +
cmp bl 5Ch +
jz loc_42D490  +
cmp bl 2Fh +
jz loc_42D490  +
test bl bl +
jz loc_42D464  +
cmp byte ptr [edx+1] 3Ah +
jz loc_42D490  +
mov ebx [esi] +
test ebx ebx +
jz loc_42D4B3  +
mov edi [ebx+2Ch] +
cmp eax 1 +
jz loc_42D4C0  +
test ecx ecx +
jz loc_42D4A0  +
mov ebx [esi+74h] +
test ebx ebx +
jz loc_42D510  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
lea ebx [esi+78h] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 3 +
jz loc_42D501  +
cmp byte ptr [esi+0E0h] 0 +
jz loc_42D4E0  +
mov ebx [esi+70h] +
jmp loc_42D479  +
mov edi [esi+0A0h] +
jmp loc_42D46D  +
mov eax [edi+20h] +
test eax eax +
jz loc_42D57F  +
lea ebp [esi+78h] +
cmp eax ebp +
jz loc_42D57F  +
mov ebx [eax] +
jmp loc_42D479  +
test ebx ebx +
jz loc_42D578  +
movzx ecx byte ptr [ebx+3Dh] +
mov edx [edi+0Ch] +
test edx edx +
jz loc_42D531  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42CB10  +
xor ecx ecx +
mov edx offset a__2 +
jmp loc_42D4F3  +
mov [esp+30h+var_24] edx +
mov [esp+30h+var_28] offset aNoIncludePathI +
mov [esp+30h+var_2C] 3 +
mov [esp+30h+var_30] esi +
call sub_41FFB0  +
jmp loc_42D481  +
mov eax [edi+4] +
mov [esp+30h+var_14] ecx +
mov [esp+30h+var_30] eax +
call sub_437300  +
mov ebx eax +
sub ebx [edi+4] +
lea eax [ebx+1] +
mov [esp+30h+var_30] eax +
call sub_4371B0  +
mov ebp eax +
mov eax [edi+4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_30] ebp +
mov [esp+30h+var_2C] eax +
call memcpy  +
mov edx ebp +
mov ecx [esp+30h+var_14] +
mov byte ptr [ebp+ebx+0] 0 +
mov [edi+0Ch] ebp +
jmp loc_42D4F3  +
xor ecx ecx +
jmp loc_42D4EC  +
test ecx ecx +
jnz loc_42D476  +
jmp loc_42D4A5  +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+4] +
mov [ebx+4] ecx +
mov [esp+34h+var_18] eax +
mov eax edx +
call sub_42CCA0  +
test al al +
jnz loc_42D5D0  +
mov [esp+34h+var_19] 0 +
mov eax [esp+34h+var_18] +
mov [ebx+4] eax +
movzx eax [esp+34h+var_19] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+58h] +
mov eax [esi+200h] +
mov [esp+34h+var_30] edi +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_2C] edx +
call eax  +
and eax 1 +
mov [esp+34h+var_19] al +
jz loc_42D660  +
cmp byte ptr [esi+253h] 0 +
jz loc_42D5B7  +
mov eax [esi+1Ch] +
mov ebp 1 +
cmp dword ptr [eax+20h] 1 +
jbe loc_42D629  +
mov eax ds:_iob +
add ebp 1 +
mov [esp+34h+var_34] 2Eh +
add eax 40h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi+1Ch] +
cmp [eax+20h] ebp +
ja loc_42D606  +
cmp [esp+34h+var_19] 1 +
mov [esp+34h+var_28] edi +
mov [esp+34h+var_30] offset aCS +
sbb eax eax +
and eax 57h +
add eax 21h +
mov [esp+34h+var_2C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+34h+var_34] eax +
call sub_45A760  +
jmp loc_42D5B7  +
mov eax [ebx+58h] +
mov [esp+34h+var_34] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
jmp loc_42D5EF  +
***
mov eax [esp+arg_0] +
mov eax [eax+5Ch] +
test eax eax +
setnz al  +
retn   +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+arg_C] +
test edi edi +
mov [esp+7Ch+var_5C] eax +
jz loc_42DDB0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_43F2E0  +
mov ecx [esp+7Ch+arg_0] +
mov edx [ecx+0A4h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_78] eax +
call sub_43EF20  +
mov [esp+7Ch+var_60] eax +
mov eax [eax] +
test eax eax +
jz loc_42D725  +
mov ecx [eax+4] +
cmp [esp+7Ch+arg_8] ecx +
jz loc_42D908  +
mov edx [esp+7Ch+arg_8] +
jmp loc_42D71F  +
cmp edx [eax+4] +
jz loc_42D908  +
mov eax [eax] +
test eax eax +
jnz loc_42D716  +
mov [esp+7Ch+var_78] 68h +
mov [esp+7Ch+var_7C] 1 +
call sub_4371E0  +
mov ebp eax +
mov eax [esp+7Ch+arg_0] +
mov edx [eax] +
mov eax [esp+7Ch+arg_8] +
mov dword ptr [ebp+58h] 0FFFFFFFFh +
test edx edx +
mov [ebp+20h] eax +
mov eax [esp+7Ch+arg_4] +
setz byte ptr [ebp+64h]  +
mov [esp+7Ch+var_7C] eax +
call sub_437310  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
mov [ebp+0] eax +
jz loc_42D915  +
mov edx 1 +
test bl bl +
mov [ebp+66h] dl +
jnz loc_42DE1D  +
mov edi eax +
mov eax [esp+7Ch+arg_0] +
mov esi [ebp+20h] +
mov [esp+7Ch+var_64] ebp +
mov byte ptr [esp+7Ch+var_44] 0 +
add eax 0B4h +
mov [esp+7Ch+var_45] 0 +
mov ebp esi +
mov [esp+7Ch+var_46] 0 +
mov [esp+7Ch+var_40] eax +
jmp loc_42D897  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_42DD91  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ebp eax +
test ebp ebp +
jz loc_42DA50  +
mov eax [esp+7Ch+arg_0] +
cmp byte ptr [eax+2A9h] 0 +
jnz loc_42D7F2  +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_42D828  +
mov [esp+7Ch+var_7C] ebp +
call sub_449590  +
test eax eax +
mov ebx eax +
jz loc_42DDA3  +
mov [esp+7Ch+var_7C] eax +
call strlen  +
mov [esp+7Ch+var_7C] ebp +
mov esi eax +
call strlen  +
cmp esi eax +
jnb loc_42DDA3  +
mov [esp+7Ch+var_7C] ebp +
mov ebp ebx +
call free  +
mov [esp+7Ch+var_7C] ebp +
call sub_43F2E0  +
mov ebx eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_43EDB0  +
test eax eax +
mov eax [esp+7Ch+var_64] +
jz loc_42DB90  +
mov dword ptr [eax+5Ch] 2 +
mov ecx [esp+7Ch+var_64] +
mov eax [ecx+20h] +
mov esi [eax] +
test esi esi +
mov [ecx+20h] esi +
jz loc_42DE30  +
mov eax [esp+7Ch+arg_0] +
cmp esi [eax+74h] +
jz loc_42DA67  +
cmp esi [eax+70h] +
jz loc_42DB80  +
mov eax [esp+7Ch+var_64] +
mov ebp esi +
mov edi [eax] +
mov ecx [esp+7Ch+arg_0] +
mov eax edi +
mov edx ebp +
cmp byte ptr [ecx+261h] 0 +
jz loc_42D7B7  +
mov eax [ebp+14h] +
test eax eax +
jz loc_42DDDF  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_42D8D1  +
jmp loc_42D940  +
mov eax [ebp+14h] +
add ebx 2 +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_42D940  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_4493F0  +
test eax eax +
jnz loc_42D8C4  +
mov eax [ebp+14h] +
mov eax [eax+ebx*4+4] +
mov [esp+7Ch+var_7C] eax +
call sub_437310  +
test eax eax +
mov ebp eax +
jnz loc_42D7D5  +
mov eax [esp+7Ch+var_64] +
mov edx [eax+20h] +
mov eax [eax] +
jmp loc_42D7B7  +
mov ebx [eax+0Ch] +
add esp 7Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+7Ch+arg_0] +
mov edx [esi] +
test edx edx +
jz loc_42DE16  +
mov ecx [edx+2Ch] +
xor edx edx +
cmp byte ptr [ecx+66h] 0 +
jz loc_42D77D  +
jmp loc_42D778  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_42D8FA  +
cmp al 2Fh +
jz loc_42D8FA  +
test al al +
jz loc_42D955  +
cmp byte ptr [edi+1] 3Ah +
jz loc_42D8FA  +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] edi +
call strchr  +
mov [esp+7Ch+var_78] 5Ch +
mov [esp+7Ch+var_7C] edi +
mov ebx eax +
call strchr  +
cmp ebx eax +
setnbe cl  +
test ebx ebx +
setz dl  +
or dl cl +
jz loc_42D98C  +
test eax eax +
mov ebx eax +
setz dl  +
cmp edi ebx +
jz loc_42D8FA  +
test dl dl +
jnz loc_42D8FA  +
mov edx [ebp+8] +
mov eax ebx +
sub eax edi +
mov [esp+7Ch+var_50] eax +
add edx eax +
lea eax [edx+1] +
mov [esp+7Ch+var_54] eax +
lea eax [edx+3] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_4C] edx +
call sub_4371B0  +
mov esi eax +
mov eax [ebp+8] +
lea ecx [esi+eax] +
mov [esp+7Ch+var_58] ecx +
mov ecx [ebp+4] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_78] ecx +
call memcpy  +
mov eax [ebp+8] +
mov edx [esp+7Ch+var_4C] +
test eax eax +
jz loc_42DA0E  +
mov ecx [ebp+4] +
movzx eax byte ptr [ecx+eax-1] +
cmp al 5Ch +
jz loc_42DA0E  +
cmp al 2Fh +
jz loc_42DA0E  +
mov eax [esp+7Ch+var_58] +
lea ecx [edx+2] +
mov [esp+7Ch+var_54] ecx +
mov byte ptr [eax] 2Fh +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edi +
lea edi [ebx+1] +
add eax 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+var_54] +
mov edx esi +
mov byte ptr [esi+eax] 0 +
mov eax [esp+7Ch+arg_0] +
movzx ecx byte ptr [ebp+0Ch] +
call sub_42CB10  +
mov ebp eax +
jmp loc_42D8AF  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+5Ch] 2 +
mov dword ptr [eax+4] 0 +
jmp loc_42D862  +
mov [esp+7Ch+var_46] 1 +
mov eax [esp+7Ch+var_60] +
mov ebx [eax] +
test ebx ebx +
jnz loc_42DA8A  +
jmp loc_42D88F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42D88F  +
cmp esi [ebx+4] +
lea esi [esi+0] +
jnz loc_42DA80  +
mov ebp [esp+7Ch+var_64] +
mov eax [ebp+0] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebp [ebx+0Ch] +
mov eax [esp+7Ch+arg_0] +
call sub_42CAB0  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_8] +
cmp [esp+7Ch+var_46] 0 +
mov edx [edi] +
mov [eax+4] ecx +
mov ecx [esp+7Ch+arg_0] +
mov [eax] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
jz loc_42DB20  +
mov eax [ecx+74h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_42DB20  +
cmp esi eax +
jz loc_42DB20  +
mov eax ecx +
call sub_42CAB0  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_0] +
mov edx [edi] +
mov [eax] edx +
mov edx [ecx+74h] +
mov [eax+4] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
cmp [esp+7Ch+var_45] 0 +
mov ebx ebp +
jz loc_42D90B  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+70h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_42D90B  +
cmp esi eax +
jz loc_42D90B  +
mov eax [esp+7Ch+arg_0] +
call sub_42CAB0  +
mov esi [esp+7Ch+var_60] +
mov edi [esp+7Ch+arg_0] +
mov edx [esi] +
mov [eax] edx +
mov edx [edi+70h] +
mov [eax+4] edx +
mov edx [edi+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [esi] eax +
jmp loc_42D90B  +
mov [esp+7Ch+var_45] 1 +
jmp loc_42DA6C  +
mov [eax+4] ebp +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz loc_42DC6B  +
mov eax [esp+7Ch+arg_0] +
mov esi [eax+200h] +
test esi esi +
jz loc_42DC6B  +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_42DBC7  +
jmp loc_42DBD7  +
mov eax [eax+10h] +
test eax eax +
jz loc_42DBD7  +
cmp byte ptr [eax+66h] 0 +
jnz loc_42DBC0  +
cmp byte ptr [eax+64h] 0 +
jz loc_42DC6B  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov esi eax +
lea eax [eax+5] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_50] eax +
call sub_4371B0  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov edi eax +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_58] eax +
call memcpy  +
mov eax edi +
mov dword ptr [edi+esi] 6863672Eh +
mov byte ptr [edi+esi+4] 0 +
lea edi [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_42DC5F  +
movzx eax [esp+7Ch+var_36] +
and ax 0F000h +
cmp ax 4000h +
jz loc_42DF65  +
mov edx [esp+7Ch+var_64] +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+arg_0] +
call sub_42D590  +
mov edx eax +
test dl dl +
jnz loc_42DF10  +
mov byte ptr [esp+7Ch+var_44] 1 +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
call sub_42CCA0  +
test al al +
jnz loc_42DDEE  +
mov eax [esp+7Ch+var_64] +
cmp dword ptr [eax+5Ch] 2 +
jnz loc_42DF20  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov edi [esp+7Ch+arg_0] +
mov edx [edi+0C4h] +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
lea ecx [esi+1] +
mov eax [eax+0C0h] +
sub edx eax +
cmp edx ecx +
jb loc_42E0B7  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+arg_0] +
add esi [eax+0C0h] +
lea eax [esi+1] +
mov edx esi +
mov esi [esp+7Ch+arg_0] +
mov [esi+0C0h] eax +
mov byte ptr [edx] 0 +
mov edi [esi+0BCh] +
mov eax [esi+0C0h] +
cmp edi eax +
jz loc_42E0D9  +
mov esi [esp+7Ch+arg_0] +
mov edx [esi+0CCh] +
mov ecx [esi+0B8h] +
add eax edx +
not edx  +
and eax edx +
mov edx [esi+0C4h] +
mov [esi+0C0h] eax +
mov esi eax +
sub esi ecx +
mov [esp+7Ch+var_58] esi +
mov esi edx +
sub esi ecx +
cmp [esp+7Ch+var_58] esi +
jbe loc_42DD47  +
mov eax [esp+7Ch+arg_0] +
mov [eax+0C0h] edx +
mov eax edx +
mov esi [esp+7Ch+arg_0] +
mov [esi+0BCh] eax +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_43EF20  +
mov esi [esp+7Ch+var_64] +
mov [eax] edi +
mov eax [esi] +
mov [esi+4] eax +
jmp loc_42D862  +
mov ecx [edx+8] +
add edx 4 +
call sub_42CEE0  +
mov ebp eax +
jmp loc_42D7CD  +
mov [esp+7Ch+var_7C] ebx +
call free  +
jmp loc_42D828  +
mov eax [esp+7Ch+arg_18] +
mov [esp+7Ch+var_70] offset aNullDirectoryI +
mov [esp+7Ch+var_78] 4 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_4201F0  +
jmp loc_42D6B8  +
mov eax ebp +
call sub_42CF60  +
mov eax [ebp+14h] +
jmp loc_42D8BA  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+arg_0] +
xor esi esi +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
jmp loc_42DAAC  +
xor edx edx +
jmp loc_42D77D  +
mov [esp+7Ch+var_45] 0 +
mov [esp+7Ch+var_46] 0 +
jmp loc_42DDF2  +
mov eax [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_64] +
mov eax [eax+208h] +
test eax eax +
jz loc_42DEB8  +
mov esi [esp+7Ch+arg_4] +
lea edx [ebp+20h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] esi +
mov esi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] esi +
call eax  +
test eax eax +
mov [ebp+4] eax +
jz loc_42DEB2  +
mov eax ebp +
call sub_42CCA0  +
test al al +
jz loc_42DEA7  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
mov eax [esp+7Ch+var_60] +
mov eax [eax] +
test eax eax +
jz loc_42E0E5  +
mov ebx ebp +
jmp loc_42D90B  +
mov eax [ebp+4] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [ebp+0] +
mov [ebp+4] eax +
cmp byte ptr [esp+7Ch+var_44] 0 +
jnz loc_42E05B  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
jz loc_42DF41  +
mov eax [ebp+0] +
xor ebx ebx +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+var_60] +
mov ecx [eax] +
test ecx ecx +
jnz loc_42D90B  +
mov [eax] ebp +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_43F1B0  +
jmp loc_42D90B  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_58] +
mov [ebp+8] eax +
jmp loc_42DDF2  +
mov ebp eax +
mov eax [esp+7Ch+arg_18] +
xor ecx ecx +
mov edx ebp +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_42CDA0  +
jmp loc_42DDF2  +
mov eax [esp+7Ch+arg_18] +
mov edx ebp +
mov ecx [esp+7Ch+arg_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_42CDA0  +
jmp loc_42DDF2  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] edi +
call sub_455430  +
test eax eax +
mov [esp+7Ch+var_54] eax +
jz loc_42DC5A  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_44] ebp +
mov ebp ebx +
mov byte ptr [edi+esi+4] 2Fh +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_7C] eax +
call sub_4555F0  +
test eax eax +
jz loc_42E051  +
lea ebx [eax+8] +
mov edi offset a__1 +
mov [esp+7Ch+var_7C] ebx +
mov esi ebx +
call strlen  +
mov ecx 2 +
cmps   +
jz loc_42DF90  +
mov edi offset a__ +
mov esi ebx +
mov ecx 3 +
cmps   +
jz loc_42DF90  +
lea esi [eax+1] +
mov eax [esp+7Ch+var_50] +
add eax esi +
cmp eax [esp+7Ch+var_4C] +
ja loc_42E02F  +
mov edi [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebx +
add eax edi +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_64] +
mov ecx edi +
mov eax [esp+7Ch+arg_0] +
call sub_42D590  +
test al al +
jz loc_42DF90  +
mov ebx ebp +
mov ebp [esp+7Ch+var_44] +
mov edx eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] edx +
mov [esp+7Ch+var_7C] eax +
call sub_455710  +
mov edx [esp+7Ch+var_50] +
jmp loc_42DC52  +
mov eax [esp+7Ch+var_4C] +
lea eax [eax+esi+40h] +
mov [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call sub_437230  +
mov [esp+7Ch+var_58] eax +
jmp loc_42DFDE  +
mov ebx ebp +
xor edx edx +
mov ebp [esp+7Ch+var_44] +
jmp loc_42E016  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aOneOrMorePchFi +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_41FFB0  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_41B370  +
cmp byte ptr [eax+48h] 0 +
jnz loc_42DEC3  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aUseWinvalidPch +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_41FFB0  +
jmp loc_42DEC3  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] eax +
call sub_449250  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0C0h] +
jmp loc_42DCBB  +
or byte ptr [esi+0DCh] 2 +
jmp loc_42DD01  +
mov esi [esp+7Ch+var_60] +
mov ebx ebp +
mov eax [esp+7Ch+arg_0] +
mov [esi] ebp +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_43F1B0  +
jmp loc_42D90B  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_8] +
mov esi [esp+4Ch+arg_0] +
cmp byte ptr [ebx+62h] 0 +
mov eax ebp +
mov byte ptr [esp+4Ch+var_38] al +
jnz loc_42E184  +
mov eax ebp +
test al al +
jnz loc_42E190  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42E147  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_42E184  +
mov eax [ebx+8] +
test eax eax +
jz loc_42E1A4  +
mov ecx [ebx+58h] +
mov edi [ebx+4] +
mov edx [esi+204h] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] esi +
call edx  +
mov eax [ebx+8] +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 4Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp word ptr [ebx+60h] 0 +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jz loc_42E135  +
jmp loc_42E184  +
mov ecx [esp+4Ch+arg_C] +
mov edx ebx +
mov eax esi +
call sub_42D1F0  +
test al al +
mov edi eax +
jz loc_42E184  +
mov ecx ds:dword_480278 +
test ecx ecx +
jz loc_42E280  +
mov eax ebp +
test al al +
jnz loc_42E22F  +
cmp byte ptr [ecx+4] 0 +
jz loc_42E280  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_42D160 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 0 +
call bsearch  +
test eax eax +
jz loc_42E280  +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jmp loc_42E184  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_42D160 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 1 +
call bsearch  +
test eax eax +
jnz loc_42E184  +
lea esi [esi+0] +
cmp byte ptr [esi+0E1h] 0 +
jz loc_42E354  +
mov ebp [esi+9Ch] +
test ebp ebp +
jz loc_42E354  +
mov [esp+4Ch+arg_0] esi +
movzx esi byte ptr [esp+4Ch+var_38] +
jmp loc_42E2B1  +
mov ebp [ebp+10h] +
test ebp ebp +
jz loc_42E350  +
cmp ebx ebp +
jz loc_42E2A6  +
mov eax esi +
test al al +
jnz loc_42E2C1  +
cmp byte ptr [ebp+62h] 0 +
jz loc_42E2A6  +
mov eax [ebp+5Ch] +
test eax eax +
jnz loc_42E2A6  +
mov eax [ebx+4Ch] +
cmp [ebp+4Ch] eax +
jnz loc_42E2A6  +
mov eax [ebp+40h] +
mov edx [ebp+44h] +
xor edx [ebx+44h] +
xor eax [ebx+40h] +
or edx eax +
jnz loc_42E2A6  +
mov ecx [ebp+14h] +
mov [esp+4Ch+var_38] ebp +
test ecx ecx +
jz loc_42E2F5  +
cmp byte ptr [ebp+65h] 0 +
jz loc_42E46F  +
mov edx [esp+4Ch+var_38] +
mov ecx [esp+4Ch+arg_C] +
mov eax [esp+4Ch+arg_0] +
call sub_42D1F0  +
xor edx edx +
test al al +
jz loc_42E330  +
mov eax [esp+4Ch+var_38] +
mov ecx [eax+40h] +
mov eax [eax+44h] +
mov [esp+4Ch+var_34] eax +
mov eax [ebx+44h] +
xor [esp+4Ch+var_34] eax +
mov eax [ebx+40h] +
xor eax ecx +
or eax [esp+4Ch+var_34] +
jz loc_42E4E9  +
mov eax [ebp+14h] +
test eax eax +
jz loc_42E341  +
cmp byte ptr [ebp+65h] 0 +
jz loc_42E4CC  +
test dl dl +
jz loc_42E2A6  +
jmp loc_42E184  +
mov esi [esp+4Ch+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_42E464  +
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_42E464  +
movzx edx byte ptr [eax+3Dh] +
movzx eax byte ptr [ecx+0Ch] +
cmp dl al +
jbe loc_42E453  +
movzx ebp dl +
xor ecx ecx +
test ebp ebp +
setnz cl  +
cmp [esi+28Ch] ecx +
movzx eax word ptr [ebx+60h] +
jle loc_42E3C4  +
test ax ax +
jnz loc_42E3C4  +
cmp byte ptr [ebx+64h] 0 +
jz loc_42E3A3  +
cmp byte ptr [esi+292h] 0 +
jnz loc_42E3C4  +
mov eax [esi+180h] +
mov ecx [ebx+4] +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call sub_42F430  +
movzx eax word ptr [ebx+60h] +
mov edx [esp+4Ch+var_38] +
add eax 1 +
mov [ebx+60h] ax +
xor eax eax +
mov byte ptr [ebx+65h] 0 +
cmp byte ptr [esi+26Bh] 0 +
jz loc_42E3E7  +
movzx eax byte ptr [esi+2A8h] +
xor eax 1 +
movzx eax al +
mov ecx [ebx+14h] +
mov [esp+4Ch+var_40] eax +
mov eax [ebx+40h] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
call sub_41B3E0  +
mov edx [esp+4Ch+var_38] +
mov [eax+3Dh] dl +
mov edx [ebx+18h] +
mov [eax+2Ch] ebx +
mov [eax+14h] edx +
mov eax [ebx+4] +
mov byte ptr [esi+0ECh] 1 +
mov dword ptr [esi+0E4h] 0 +
mov [esp+4Ch+var_3C] ebp +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_41AB10  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebp al +
xor ecx ecx +
test ebp ebp +
mov edx eax +
setnz cl  +
jmp loc_42E383  +
xor ebp ebp +
xor edx edx +
xor ecx ecx +
jmp loc_42E383  +
mov edx [ebp+0] +
mov ecx [ebp+20h] +
mov [esp+4Ch+var_48] 68h +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_30] edx +
mov [esp+4Ch+var_34] ecx +
call sub_4371E0  +
mov ecx [esp+4Ch+arg_0] +
mov edx [ecx] +
mov ecx [esp+4Ch+var_34] +
mov dword ptr [eax+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_38] eax +
test edx edx +
mov edx [esp+4Ch+var_30] +
mov [eax+20h] ecx +
setz byte ptr [eax+64h]  +
mov [esp+4Ch+var_4C] edx +
call sub_437310  +
mov ecx [esp+4Ch+var_38] +
mov [ecx] eax +
mov eax [ebp+4] +
mov [ecx+4] eax +
jmp loc_42E2F5  +
mov eax [esp+4Ch+var_38] +
mov [esp+4Ch+var_34] edx +
mov dword ptr [eax+4] 0 +
call sub_42C970  +
mov edx [esp+4Ch+var_34] +
jmp loc_42E341  +
mov [esp+4Ch+var_44] ecx +
mov eax [ebx+14h] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_38] +
mov eax [eax+14h] +
mov [esp+4Ch+var_4C] eax +
call memcmp  +
test eax eax +
setz dl  +
jmp loc_42E330  +
***
mov eax [esp+arg_0] +
mov byte ptr [eax+0E1h] 1 +
mov eax [esp+arg_4] +
mov byte ptr [eax+62h] 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_8] +
cmp ebx 3 +
jz loc_42E5F4  +
mov [esp+2Ch+var_2C] ebx +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_42D440  +
test eax eax +
jz loc_42E5E8  +
mov ecx [esp+2Ch+arg_10] +
cmp ebx 4 +
setz dl  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_14] ecx +
movzx ecx dl +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_42D690  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ecx eax +
setz al  +
and al dl +
mov edi eax +
jnz loc_42E5E8  +
mov edx [ecx+8] +
test edx edx +
jz loc_42E624  +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_20] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+2Ch+var_24] eax +
call sub_42E110  +
test al al +
jnz loc_42E615  +
mov eax [esi+1Ch] +
add dword ptr [eax+28h] 1 +
add esp 2Ch +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+104h] +
mov eax [esi+0F0h] +
cmp eax [edx+8] +
jz loc_42E550  +
mov dword ptr [eax-10h] 0 +
jmp loc_42E550  +
add esp 2Ch +
mov edi 1 +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+5Ch] +
test eax eax +
jnz loc_42E5B3  +
lea eax [ebx-3] +
cmp eax 1 +
jbe loc_42E5B3  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
jmp loc_42E5B3  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+24h] +
mov [esp] ebx +
call sub_43F2E0  +
mov edx [esp+20h] +
mov edx [edx+0A4h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edx +
call sub_43EDB0  +
test eax eax +
jz loc_42E697  +
nop   +
mov ecx [eax+4] +
test ecx ecx +
jz loc_42E691  +
mov edx [eax+0Ch] +
mov edx [edx+5Ch] +
test edx edx +
jz loc_42E6A0  +
mov eax [eax] +
test eax eax +
jnz loc_42E680  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov edi [esp+20h] +
mov esi [esp+28h] +
mov [esp] ebx +
call sub_43F2E0  +
mov edx [edi+0A4h] +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+8] eax +
call sub_43EDB0  +
mov ebx eax +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42E6FE  +
mov eax [edi+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
call sub_40EF10  +
mov esi eax +
test ebx ebx +
jz loc_42E71E  +
mov edx [ebx+4] +
test edx edx +
jz loc_42E718  +
mov edx [ebx+0Ch] +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_42E718  +
cmp [ebx+8] esi +
jbe loc_42E727  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42E702  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+28h+var_14] offset free +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_18] offset sub_4371E0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42CA70 +
mov [esp+28h+var_24] offset sub_42C940 +
add ebx 0B4h +
mov [esp+28h+var_28] 7Fh +
call sub_43EB30  +
mov [ebx-10h] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_4371E0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42CA70 +
mov [esp+28h+var_24] offset sub_42C940 +
mov [esp+28h+var_28] 7Fh +
call sub_43EB30  +
mov [ebx-0Ch] eax +
mov [esp+28h+var_28] 7F8h +
call sub_4371B0  +
mov edx [ebx-8] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [ebx-8] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_4371E0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42CA40 +
mov [esp+28h+var_24] offset sub_43F2E0 +
mov [esp+28h+var_28] 7Fh +
call sub_43EB30  +
mov [ebx-4] eax +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_4371B0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_4491F0  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+0A4h] +
mov [esp+14h+var_14] eax +
call sub_43EC40  +
mov eax [esi+0A8h] +
mov [esp+14h+var_14] eax +
call sub_43EC40  +
mov eax [esi+0B0h] +
mov [esp+14h+var_14] eax +
call sub_43EC40  +
lea eax [esi+0B4h] +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] 0 +
call sub_449360  +
mov eax [esi+0ACh] +
test eax eax +
jnz loc_42E897  +
jmp loc_42E8A6  +
mov eax ebx +
mov ebx [eax+4] +
mov [esp+14h+var_14] eax +
call free  +
test ebx ebx +
jnz loc_42E895  +
mov eax [esi+9Ch] +
test eax eax +
jnz loc_42E8B4  +
jmp loc_42E8C0  +
mov eax ebx +
mov ebx [eax+10h] +
call sub_42C970  +
test ebx ebx +
jnz loc_42E8B2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_42E840  +
mov dword ptr [ebx+0ACh] 0 +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+20h] ebx +
add esp 18h +
pop ebx  +
jmp sub_42E740  +
***
jmp sub_42E910  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov edx [eax] +
mov edx [edx+2Ch] +
mov edx [edx+20h] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_42D690  +
add esp 2Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov esi [eax+8] +
lea edx [esi-1] +
imul edx edx +
add edx [eax] +
mov eax [esp+24h+arg_4] +
test eax eax +
jz loc_42E9D0  +
cmp [esp+24h+arg_8] 1 +
sbb eax eax +
add eax 2 +
cmp [esp+24h+arg_8] 1 +
sbb ecx ecx +
add ecx 2 +
mov esi [ebx] +
mov [esi+3Dh] cl +
mov esi [edx+8] +
mov [esp+24h+var_14] eax +
mov eax [ebx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov eax [eax+2Ch] +
sub eax [edx] +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
mov [esp+24h+var_20] 2 +
call sub_41AB10  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
xor ecx ecx +
jmp loc_42E993  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_41AB10  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov eax [ebx+0A4h] +
mov [esp] eax +
call sub_43E9D0  +
lea edx [esp+18h] +
mov [esp+1Ch] eax +
mov eax [ebx+0A4h] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_42C9B0 +
mov [esp] eax +
call sub_43F250  +
mov eax [esp+18h] +
test eax eax +
jz loc_42EB09  +
mov edx [esp+1Ch] +
xor ebx ebx +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_42CC80 +
mov dword ptr [esp+8] 4 +
mov [esp+4] edx +
call qsort  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMultipleInclud +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_42EAFD  +
nop   +
mov eax [esp+18h] +
mov ecx ds:_iob +
mov eax [eax+ebx*4] +
add ebx 1 +
lea edx [ecx+40h] +
mov [esp+4] edx +
mov [esp] eax +
call fputs  +
mov eax ds:_iob +
mov dword ptr [esp] 0Ah +
add eax 40h +
mov [esp+4] eax +
call putc  +
cmp [esp+1Ch] ebx +
ja loc_42EAC0  +
mov eax [esp+18h] +
mov [esp] eax +
call free  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov ebx [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov [esp+20h+var_20] 0 +
mov eax esi +
mov edx ebx +
mov ecx edi +
call sub_42D440  +
test eax eax +
jz loc_42EBA0  +
mov [esp+20h+var_1C] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
mov [esp+20h+var_20] esi +
call sub_42D690  +
mov ebx eax +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_42EBA0  +
mov eax [ebx+58h] +
cmp eax 0FFFFFFFFh +
jz loc_42EB84  +
mov [esp+20h+var_20] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+2Ch] +
mov eax [eax+4Ch] +
cmp [ebx+4Ch] eax +
setnle al  +
movzx eax al +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_42EB95  +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 3 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42E530  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 4 +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42E530  +
add esp 2Ch +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [esp+arg_8] +
cmp byte ptr [edx+0ECh] 0 +
jz loc_42EC4D  +
mov ebx [ecx+1Ch] +
test ebx ebx +
jz loc_42EC67  +
test eax eax +
mov byte ptr [edx+0ECh] 0 +
jz loc_42EC90  +
cmp [ecx+18h] eax +
jz loc_42EC72  +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
mov ebx [edx+0E4h] +
mov [ecx+1Ch] ebx +
jmp loc_42EC4D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+14h] 0 +
mov byte ptr [ecx+65h] 0 +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
add eax 28h +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edi [esp+20h] +
mov ebx [esp+24h] +
mov esi [esp+28h] +
test eax eax +
setnz byte ptr [edi+0E0h]  +
test ebx ebx +
mov [edi+70h] ebx +
mov [edi+74h] ebx +
jnz loc_42ECF6  +
jmp loc_42ED18  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42ED18  +
mov eax [ebx+4] +
mov dword ptr [ebx+14h] 0 +
mov [esp] eax +
call strlen  +
cmp ebx esi +
mov [ebx+8] eax +
jnz loc_42ECF0  +
mov [edi+74h] ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42ECF6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+20h] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+2Ch] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+28h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+9Ch] +
test eax eax +
jz loc_42EEFD  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov eax [eax+10h] +
add edx 1 +
test eax eax +
jnz loc_42ED90  +
shl edx 5 +
lea eax [edx+8] +
mov [esp+4] eax +
mov dword ptr [esp] 1 +
call sub_4371E0  +
mov esi eax +
mov dword ptr [eax] 0 +
mov byte ptr [eax+4] 0 +
mov eax [esp+40h] +
mov ebx [eax+9Ch] +
test ebx ebx +
jz loc_42EF25  +
xor ebp ebp +
jmp loc_42EE0B  +
mov eax [ebx+14h] +
mov [esp+8] ecx +
mov ecx [ebx+40h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_43E4F0  +
mov eax [ebx+40h] +
mov ecx ebp +
mov edx [ebx+44h] +
shl ecx 5 +
mov ebp [esi] +
mov [esi+ecx+8] eax +
mov [esi+ecx+0Ch] edx +
lea esi [esi+0] +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_42EEA0  +
cmp byte ptr [ebx+63h] 0 +
jnz loc_42EE00  +
mov eax [ebx+5Ch] +
test eax eax +
jnz loc_42EE00  +
cmp word ptr [ebx+60h] 0 +
jz loc_42EE00  +
lea eax [ebp+1] +
mov [esi] eax +
mov eax ebp +
shl eax 5 +
lea ecx [esi+eax+10h] +
movzx eax byte ptr [ebx+62h] +
mov [ecx+10h] al +
or [esi+4] al +
cmp byte ptr [ebx+65h] 0 +
jnz loc_42EDD2  +
mov eax [ebx+58h] +
mov [esp+18h] ecx +
mov [esp+1Ch] eax +
mov eax ebx +
call sub_42CCA0  +
mov ecx [esp+18h] +
test al al +
mov edi eax +
jz loc_42EF07  +
mov eax [ebx+58h] +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp+18h] ecx +
mov [esp] eax +
call j__fdopen  +
mov ecx [esp+18h] +
mov [esp+4] ecx +
mov edi eax +
mov [esp] eax +
call sub_43E570  +
mov [esp] edi +
call fclose  +
mov eax [esp+1Ch] +
mov [ebx+58h] eax +
jmp loc_42EDE8  +
***
mov eax ebp +
shl eax 5 +
lea ebx [eax+8] +
lea eax [esi+8] +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_42CEB0 +
mov dword ptr [esp+8] 20h +
mov [esp+4] ebp +
call qsort  +
mov eax [esp+44h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] esi +
mov [esp+0Ch] eax +
call fwrite  +
mov [esp] esi +
cmp eax 1 +
setz bl  +
call free  +
mov edi ebx +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 8 +
jmp loc_42EDA0  +
***
mov eax [esp+40h] +
xor ecx ecx +
mov edx ebx +
mov dword ptr [esp] 0 +
call sub_42CDA0  +
mov [esp] esi +
call free  +
jmp loc_42EEF3  +
***
mov ebx 8 +
xor ebp ebp +
jmp loc_42EEA8  +
***
jmp loc_42EF40  +
push ebx  +
sub esp 48h +
mov ebx [esp+54h] +
lea eax [esp+18h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 8 +
mov [esp] eax +
mov [esp+0Ch] ebx +
call fread  +
xor edx edx +
cmp eax 1 +
jz loc_42EF76  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+18h] +
shl eax 5 +
add eax 8 +
mov [esp] eax +
call sub_4371B0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [eax] edx +
mov [eax+4] ecx +
mov ds:dword_480278 eax +
add eax 8 +
mov [esp+0Ch] ebx +
mov [esp+8] edx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call fread  +
cmp eax [esp+18h] +
setz dl  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [esp+20h+arg_C] +
mov edx esi +
mov ecx edi +
mov [esp+20h+var_20] eax +
mov eax ebx +
call sub_42D440  +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
call sub_42D690  +
cmp dword ptr [eax+5Ch] 2 +
setnz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 10h +
mov eax [eax+18h] +
test eax eax +
jz loc_42F0A2  +
mov edx [edi+20h] +
test edx edx +
jz loc_42F0A2  +
xor esi esi +
jmp loc_42F053  +
mov eax [edi+18h] +
mov edx [edi+1Ch] +
mov eax [eax+esi*4] +
mov edx [edx+esi*4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_449440  +
test eax eax +
jnz loc_42F09A  +
mov eax [edi+1Ch] +
mov ecx [eax+esi*4] +
lea eax [ebx+ecx] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_42F086  +
cmp dl 2Fh +
jnz loc_42F09A  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_42F0F2  +
cmp byte ptr [eax+2] 2Eh +
jnz loc_42F0F2  +
movzx eax byte ptr [eax+3] +
cmp al 5Ch +
jnz loc_42F0E8  +
add esi 1 +
cmp [edi+20h] esi +
ja loc_42F050  +
movzx eax byte ptr [ebx] +
cmp al 2Eh +
jnz loc_42F0D2  +
movzx eax byte ptr [ebx+1] +
cmp al 5Ch +
jnz loc_42F0E2  +
movzx eax byte ptr [ebx+2] +
lea edx [ebx+2] +
mov ebx edx +
cmp al 2Fh +
jnz loc_42F0DB  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_42F0C0  +
cmp al 2Fh +
jz loc_42F0C0  +
cmp al 2Eh +
jz loc_42F0A9  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp al 5Ch +
jz loc_42F0C0  +
nop   +
jmp loc_42F0A5  +
cmp al 2Fh +
jz loc_42F0B1  +
jmp loc_42F0D2  +
cmp al 2Fh +
lea esi [esi+0] +
jz loc_42F09A  +
lea ebx [ebx+ecx+1] +
jmp loc_42F0A2  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [eax] +
test al al +
jz loc_42F20B  +
lea edi [esi-1] +
xor ecx ecx +
mov ebx edi +
jmp loc_42F13C  +
cmp al 23h +
jz loc_42F163  +
cmp al 24h +
setz al  +
movzx eax al +
add ecx eax +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
test al al +
jz loc_42F174  +
cmp al 20h +
jz loc_42F146  +
jg loc_42F120  +
cmp al 9 +
jnz loc_42F12E  +
cmp esi ebx +
mov edx ebx +
ja loc_42F163  +
cmp byte ptr [ebx] 5Ch +
nop   +
jz loc_42F159  +
jmp loc_42F163  +
cmp byte ptr [edx] 5Ch +
jnz loc_42F163  +
sub edx 1 +
add ecx 1 +
cmp edx edi +
jnz loc_42F154  +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
add ecx 1 +
test al al +
jnz loc_42F13C  +
add ecx 1 +
mov [esp+20h+var_20] ecx +
call sub_4371B0  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_42F1F8  +
lea edi [esi-1] +
mov ecx eax +
mov ebx edi +
jmp loc_42F1B5  +
cmp dl 23h +
jz loc_42F1F0  +
cmp dl 24h +
jnz loc_42F1A0  +
mov byte ptr [ecx] 24h +
add ecx 1 +
movzx edx byte ptr [ebx+1] +
add ebx 1 +
add ecx 1 +
mov [ecx-1] dl +
movzx edx byte ptr [ebx+1] +
test dl dl +
jz loc_42F200  +
cmp dl 20h +
jz loc_42F1C2  +
jg loc_42F190  +
cmp dl 9 +
nop   +
jnz loc_42F1A0  +
cmp esi ebx +
mov edx ebx +
mov ebp ecx +
ja loc_42F1E5  +
cmp byte ptr [ebx] 5Ch +
jz loc_42F1D7  +
nop   +
jmp loc_42F1E5  +
cmp byte ptr [edx] 5Ch +
jnz loc_42F1E5  +
sub edx 1 +
add ebp 1 +
cmp edi edx +
mov byte ptr [ebp-1] 5Ch +
jnz loc_42F1D2  +
lea ecx [ebp+1] +
mov byte ptr [ebp+0] 5Ch +
jmp loc_42F1A0  +
mov byte ptr [ecx] 5Ch +
add ecx 1 +
jmp loc_42F1A0  +
mov ecx eax +
lea esi [esi+0] +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx 1 +
jmp loc_42F177  +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 28h +
mov [esp+1Ch+var_1C] 1 +
call sub_4371E0  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_42F275  +
mov esi [ebx+4] +
test esi esi +
jz loc_42F26D  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx] +
cmp [ebx+4] esi +
ja loc_42F258  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_42F2A3  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_42F29B  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
cmp [ebx+10h] esi +
ja loc_42F285  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_42F2DC  +
mov edx [ebx+20h] +
test edx edx +
jz loc_42F2C9  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
cmp [ebx+20h] esi +
ja loc_42F2B3  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+1Ch] +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_42F337  +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_42F030  +
mov edx [esp+14h+arg_8] +
test edx edx +
jnz loc_42F330  +
mov [esp+14h+var_14] eax +
call sub_437310  +
mov edx [ebx+4] +
mov ecx [ebx] +
lea esi [edx+1] +
mov [ebx+4] esi +
mov [ecx+edx*4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_42F100  +
jmp loc_42F31C  +
add eax 2 +
lea edx [eax+eax] +
mov [ebx+8] edx +
mov edx [ebx] +
shl eax 3 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_437230  +
mov [ebx] eax +
jmp loc_42F301  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_42F3FB  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_42F403  +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call sub_437300  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
mov edi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea esi [esp+28h+var_D] +
and esi 0FFFFFFF0h +
lea eax [edi+1] +
add edi esi +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] esi +
call memcpy  +
mov [esp+28h+var_24] 2Eh +
mov [esp+28h+var_28] esi +
call strrchr  +
mov edx 6F2Eh +
test eax eax +
cmovz eax edi +
mov [eax] dx +
mov byte ptr [eax+2] 0 +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] eax +
call sub_42F2F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] offset asc_477938 +
mov [esp+28h+var_28] eax +
call sub_42F2F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_42F030  +
call sub_42F100  +
mov edx [ebx+10h] +
cmp edx [ebx+14h] +
mov esi eax +
jz loc_42F465  +
mov eax [ebx+0Ch] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add edx 4 +
lea eax [edx+edx] +
mov [ebx+14h] eax +
mov eax [ebx+0Ch] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_437230  +
mov edx [ebx+10h] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [ebx+0Ch] eax +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+34h] +
mov esi [esp+30h] +
movzx eax byte ptr [edx] +
test al al +
jz loc_42F57F  +
cmp al 3Ah +
mov ebx edx +
jz loc_42F533  +
test al al +
jnz loc_42F4CA  +
jmp loc_42F533  +
test al al +
jz loc_42F4D4  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_42F4C6  +
mov edi ebx +
sub edi edx +
lea eax [edi+1] +
mov [esp] eax +
mov [esp+0Ch] edx +
call sub_4371B0  +
mov edx [esp+0Ch] +
mov [esp+8] edi +
mov [esp+4] edx +
mov ebp eax +
mov [esp] eax +
call memcpy  +
xor eax eax +
mov byte ptr [ebp+edi+0] 0 +
mov edx [esi+20h] +
cmp byte ptr [ebx] 3Ah +
setz al  +
add ebx eax +
cmp edx [esi+24h] +
jz loc_42F540  +
mov eax [esi+18h] +
mov [eax+edx*4] ebp +
mov eax [esi+1Ch] +
mov [eax+edx*4] edi +
add dword ptr [esi+20h] 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_42F57F  +
mov edx ebx +
cmp al 3Ah +
mov ebx edx +
jnz loc_42F4C0  +
mov eax 1 +
xor edi edi +
jmp loc_42F4DB  +
***
add edx 4 +
lea eax [edx+edx] +
mov [esi+24h] eax +
mov eax [esi+18h] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_437230  +
mov ecx [esi+24h] +
lea edx ds:0[ecx*4] +
mov [esi+18h] eax +
mov eax [esi+1Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_437230  +
mov edx [esi+20h] +
mov [esi+1Ch] eax +
jmp loc_42F514  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+34h+arg_4] +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_24] eax +
mov eax [esp+34h+arg_8] +
mov edx eax +
sub eax 1 +
cmp eax 20h +
mov eax 22h +
cmova eax edx +
mov [esp+34h+var_20] eax +
mov eax [esi+4] +
test eax eax +
jz loc_42F693  +
mov eax [esi] +
xor ebx ebx +
mov ebp [eax] +
mov [esp+34h+var_34] ebp +
call strlen  +
mov edi eax +
nop   +
lea esi [esi+0] +
mov eax [esp+34h+var_24] +
add ebx 1 +
mov [esp+34h+var_34] ebp +
mov [esp+34h+var_30] eax +
call fputs  +
cmp [esi+4] ebx +
jbe loc_42F690  +
lea eax ds:0[ebx*4] +
mov [esp+34h+var_1C] eax +
mov eax [esi] +
mov ebp [eax+ebx*4] +
mov [esp+34h+var_34] ebp +
call strlen  +
add edi eax +
test ebx ebx +
jz loc_42F5E0  +
cmp edi [esp+34h+var_20] +
jbe loc_42F665  +
mov ebp [esp+34h+var_20] +
test ebp ebp +
jz loc_42F665  +
mov [esp+34h+var_18] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_47793A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov ecx [esp+34h+var_18] +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
lea edi [ecx+1] +
mov ebp [eax+edx] +
jmp loc_42F5E0  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
mov ebp [eax+edx] +
jmp loc_42F5E0  +
add edi 1 +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_34] 3Ah +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esp+34h+var_20] +
mov edx [esi+10h] +
test eax eax +
setnz byte ptr [esp+34h+var_18]  +
xor ebx ebx +
test edx edx +
jnz loc_42F714  +
jmp loc_42F750  +
cmp byte ptr [esp+34h+var_18] 0 +
jz loc_42F731  +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_47793A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov edx [esp+34h+var_1C] +
lea edi [edx+1] +
mov eax [esi+0Ch] +
add ebx 1 +
mov ecx [esp+34h+var_24] +
mov eax [eax+ebp] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_34] eax +
call fputs  +
cmp [esi+10h] ebx +
jbe loc_42F750  +
mov eax [esi+0Ch] +
lea ebp ds:0[ebx*4] +
mov eax [eax+ebx*4] +
mov [esp+34h+var_34] eax +
call strlen  +
add edi eax +
cmp edi [esp+34h+var_20] +
ja loc_42F6C0  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
jmp loc_42F6F6  +
mov eax [esp+34h+var_24] +
mov [esp+34h+arg_0] 0Ah +
mov [esp+34h+arg_4] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp putc  +
***
mov esi 1 +
push ebx  +
sub esp 10h +
mov edi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
cmp dword ptr [edi+10h] 1 +
jbe loc_42F7DA  +
lea esi [esi+0] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
mov eax [edi+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call fputs  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 3Ah +
call putc  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
cmp [edi+10h] esi +
ja loc_42F790  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42F7F0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
mov edi [esp+44h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
lea eax [esi+10h] +
mov [esp+0Ch] edi +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_42F894  +
mov eax [esi+10h] +
xor ebx ebx +
lea ebp [esp+1Ch] +
test eax eax +
jnz loc_42F861  +
jmp loc_42F8A1  +
mov eax [esi+0Ch] +
mov edx [esp+1Ch] +
mov eax [eax+ebx*4] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_42F894  +
add ebx 1 +
cmp [esi+10h] ebx +
jbe loc_42F8A1  +
mov eax [esi+0Ch] +
mov eax [eax+ebx*4] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
mov [esp] ebp +
mov [esp+1Ch] eax +
call fwrite  +
cmp eax 1 +
jz loc_42F832  +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+54h] +
lea eax [esp+28h] +
mov dword ptr [esp+8] 4 +
mov ebp [esp+58h] +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
mov [esp+0Ch] edi +
call fread  +
cmp eax 4 +
jnz loc_42F9E2  +
mov dword ptr [esp] 200h +
call sub_4371B0  +
mov ebx eax +
mov eax [esp+28h] +
test eax eax +
jz loc_42F9D0  +
mov dword ptr [esp+1Ch] 200h +
xor esi esi +
jmp loc_42F963  +
mov [esp+0Ch] edi +
mov [esp+8] eax +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call fread  +
cmp eax [esp+2Ch] +
jnz loc_42F9B7  +
test ebp ebp +
mov byte ptr [ebx+eax] 0 +
jz loc_42F95A  +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_4493F0  +
test eax eax +
jz loc_42F95A  +
mov eax [esp+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_42F430  +
add esi 1 +
cmp [esp+28h] esi +
jbe loc_42F9D0  +
lea eax [esp+2Ch] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call fread  +
cmp eax 4 +
jnz loc_42F9B7  +
mov eax [esp+2Ch] +
lea edx [eax+1] +
cmp edx [esp+1Ch] +
jbe loc_42F910  +
sub eax 0FFFFFF80h +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+1Ch] eax +
call sub_437230  +
mov ebx eax +
mov eax [esp+2Ch] +
jmp loc_42F910  +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov [esp+28h+var_28] eax +
call sub_423800  +
cmp byte ptr [eax+4] 25h +
jz loc_42FA21  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
call sub_41CF60  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_423800  +
cmp byte ptr [eax+4] 37h +
jz loc_42FA47  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 2 +
call sub_41CF60  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_423800  +
cmp byte ptr [eax+4] 3Eh +
mov esi eax +
jnz loc_42FAD0  +
mov edx [eax+8] +
cmp edx 4 +
jbe loc_42FAD0  +
mov ecx [eax+0Ch] +
movzx eax byte ptr [ecx+edx-2] +
cmp al 5Ch +
jnz loc_42FAE8  +
movzx eax byte ptr [ecx+edx-3] +
lea edi [edx-3] +
cmp al 5Ch +
jnz loc_42FAC7  +
mov eax [ebx+1E8h] +
test eax eax +
jz loc_42FA19  +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
sub edx 4 +
lea edi [esp+1Bh] +
add ecx 1 +
and edi 0FFFFFFF0h +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edi +
call memcpy  +
mov eax [esi+8] +
mov byte ptr [edi+eax-4] 0 +
mov eax [ebx+1E8h] +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call eax  +
jmp loc_42FA19  +
cmp al 2Fh +
jz loc_42FA77  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 3 +
call sub_41CF60  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_42FA6B  +
jmp loc_42FAD0  +
***
mov eax [esp+arg_0] +
imul ecx ebx +
mov [eax+244h] ebx +
lea edx dword_477C40[ecx] +
movzx ecx byte ptr ds:dword_477C40[ecx] +
mov [eax+268h] cl +
movzx ecx byte ptr [edx+1] +
mov [eax+248h] cl +
movzx ecx byte ptr [edx+2] +
mov [eax+24Fh] cl +
movzx ecx byte ptr [edx+3] +
mov [eax+263h] cl +
movzx ecx byte ptr [edx+4] +
mov [eax+274h] cl +
movzx ecx byte ptr [edx+5] +
mov [eax+269h] cl +
movzx ecx byte ptr [edx+6] +
mov [eax+24Eh] cl +
movzx ecx byte ptr [edx+7] +
mov [eax+250h] cl +
movzx ecx byte ptr [edx+8] +
mov [eax+252h] cl +
movzx ecx byte ptr [edx+9] +
mov [eax+271h] cl +
movzx ecx byte ptr [edx+0Ah] +
mov [eax+275h] cl +
movzx ecx byte ptr [edx+0Bh] +
mov [eax+276h] cl +
movzx ecx byte ptr [edx+0Ch] +
mov [eax+24Dh] cl +
movzx edx byte ptr [edx+0Dh] +
mov [eax+251h] dl +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov eax ds:dword_480380 +
test eax eax +
jnz loc_42FC0D  +
mov ds:dword_480380 1 +
call sub_421380  +
mov ds:byte_4802BD 23h +
mov ds:byte_4802A9 5Dh +
mov ds:byte_4802A1 7Ch +
mov ds:byte_4802A8 5Bh +
mov ds:byte_4802A7 5Eh +
mov ds:byte_4802BE 7Dh +
mov ds:byte_4802AF 5Ch +
mov ds:byte_4802BC 7Bh +
mov ds:byte_4802AD 7Eh +
mov dword ptr [esp+4] 300h +
mov dword ptr [esp] 1 +
call sub_4371E0  +
mov ecx 1Ch +
lea esi [eax+30h] +
mov ebx eax +
test esi 1 +
mov edx esi +
jnz loc_42FE91  +
test dl 2 +
jnz loc_42FEA3  +
mov edi ecx +
xor eax eax +
and edi 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax edi +
jb loc_42FC49  +
add edx eax +
test cl 2 +
jz loc_42FC67  +
xor edi edi +
add edx 2 +
mov [edx-2] di +
and ecx 1 +
jz loc_42FC6F  +
mov byte ptr [edx] 0 +
mov eax [esp+30h] +
lea edi [ebx+0F4h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42FB00  +
mov byte ptr [ebx+259h] 1 +
mov byte ptr [ebx+24Bh] 1 +
mov byte ptr [ebx+24Ch] 1 +
mov dword ptr [ebx+240h] 8 +
mov byte ptr [ebx+26Eh] 1 +
mov byte ptr [ebx+258h] 2 +
mov byte ptr [ebx+25Ch] 1 +
mov byte ptr [ebx+28Ah] 0FFh +
mov byte ptr [ebx+28Bh] 0 +
mov byte ptr [ebx+254h] 1 +
mov byte ptr [ebx+25Bh] 0 +
mov byte ptr [ebx+262h] 1 +
mov byte ptr [ebx+264h] 1 +
mov byte ptr [ebx+25Eh] 1 +
mov byte ptr [ebx+25Fh] 1 +
mov byte ptr [ebx+260h] 0 +
mov byte ptr [ebx+26Dh] 2 +
mov dword ptr [ebx+284h] 1 +
mov byte ptr [ebx+272h] 1 +
mov byte ptr [ebx+2A9h] 1 +
mov byte ptr [ebx+273h] 1 +
mov byte ptr [ebx+256h] 0 +
mov dword ptr [ebx+294h] 20h +
mov dword ptr [ebx+298h] 8 +
mov dword ptr [ebx+2A0h] 20h +
mov dword ptr [ebx+29Ch] 20h +
mov byte ptr [ebx+2A4h] 0 +
mov byte ptr [ebx+2A5h] 1 +
mov byte ptr [ebx+2A6h] 1 +
call sub_4184C0  +
mov dword ptr [ebx+27Ch] 0 +
mov [ebx+278h] eax +
call sub_4184C0  +
cmp byte ptr [ebx+24Bh] 0 +
mov [esp] edi +
mov dword ptr [esp+4] 0FAh +
setz byte ptr [ebx+0Dh]  +
mov [ebx+280h] eax +
mov eax [esp+38h] +
mov dword ptr [ebx+7Ch] offset unk_477940 +
mov byte ptr [ebx+164h] 53h +
mov dword ptr [ebx+168h] 0 +
mov [ebx+1Ch] eax +
xor eax eax +
mov [ebx+176h] ax +
mov byte ptr [ebx+174h] 16h +
call sub_421C70  +
mov eax [ebx+0FCh] +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+104h] edi +
mov [ebx+4Ch] esi +
mov [ebx+0F0h] eax +
mov dword ptr [ebx+44h] 0 +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
call sub_422710  +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+24h] eax +
call sub_422710  +
mov [esp] ebx +
mov dword ptr [ebx+2F8h] 0 +
mov dword ptr [ebx+2FCh] 0 +
mov dword ptr [ebx+15Ch] 0FFFFFFFEh +
mov [ebx+28h] eax +
call sub_428280  +
lea eax [ebx+1B0h] +
mov dword ptr [esp+10h] offset free +
mov dword ptr [esp+0Ch] offset sub_4371B0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_4491F0  +
mov [esp] ebx +
call sub_42E740  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4252A0  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea edx [eax+31h] +
mov cl 1Bh +
test dl 2 +
mov byte ptr [eax+30h] 0 +
jz loc_42FC42  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_42FC42  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+1Ch] edx +
retn   +
***
mov [esp] ebx +
call sub_41B540  +
mov ecx [ebx] +
test ecx ecx +
jnz loc_42FEF0  +
mov eax [ebx+2C8h] +
mov [esp] eax +
call free  +
mov eax [ebx+110h] +
test eax eax +
jz loc_42FF32  +
mov [esp] eax +
call free  +
mov dword ptr [ebx+110h] 0 +
mov dword ptr [ebx+114h] 0 +
mov eax [ebx+180h] +
test eax eax +
jz loc_42FF44  +
mov [esp] eax +
call sub_42F240  +
lea eax [ebx+1B0h] +
mov [esp] eax +
lea ebp [ebx+0F4h] +
mov dword ptr [esp+4] 0 +
call sub_449360  +
mov [esp] ebx +
call sub_425440  +
mov [esp] ebx +
call sub_42E840  +
mov [esp] ebx +
call near ptr dword_412B20  +
***
mov eax [ebx+24h] +
mov [esp] eax +
call sub_422920  +
mov eax [ebx+28h] +
mov [esp] eax +
call sub_422920  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call sub_422920  +
mov eax [ebx+0FCh] +
mov esi [ebx+0F4h] +
mov [esp] eax +
call free  +
test esi esi +
jz loc_42FFD0  +
mov eax [esi+8] +
mov edi [esi] +
mov [esp] eax +
call free  +
cmp ebp esi +
jz loc_42FFCA  +
mov [esp] esi +
call free  +
mov esi edi +
test esi esi +
jnz loc_42FFB1  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_42FFE2  +
jmp loc_42FFF0  +
mov eax esi +
mov esi [eax] +
mov [esp] eax +
call free  +
test esi esi +
jnz loc_42FFE0  +
mov eax [ebx+2ECh] +
test eax eax +
jz loc_43002A  +
mov edx [ebx+2F0h] +
test edx edx +
jle loc_430022  +
xor esi esi +
mov eax [eax+esi*8] +
add esi 1 +
mov [esp] eax +
call free  +
mov eax [ebx+2ECh] +
cmp [ebx+2F0h] esi +
jg loc_430006  +
mov [esp] eax +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jz loc_430059  +
mov eax [esi] +
mov [ebx+2F8h] eax +
mov eax [esi+4] +
mov [esp] eax +
call free  +
mov [esp] esi +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jnz loc_430034  +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov ecx [esp+4] +
mov eax offset off_477AA0 +
lea esi [esi+0] +
movzx edx word ptr [eax+6] +
cmp edx ecx +
jz loc_430095  +
add eax 8 +
cmp eax offset a__timestamp__ +
jb loc_430080  +
xor eax eax +
retn   +
***
mov eax [eax] +
retn   +
***
push esi  +
mov esi 78h +
push ebx  +
sub esp 1Ch +
mov edi [esp+20h+arg_0] +
cmp byte ptr [edi+270h] 0 +
jnz loc_4300CA  +
cmp byte ptr [edi+2A7h] 0 +
mov si 84h +
jnz loc_430163  +
add esi offset off_477BA0 +
mov ebx offset off_477BA0 +
cmp esi ebx +
jbe loc_43015B  +
lea esi [esi+0] +
cmp word ptr [ebx+6] 0Ah +
jnz loc_4300FA  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_430154  +
mov eax [edi+224h] +
test eax eax +
jz loc_430154  +
movzx edx word ptr [ebx+4] +
mov eax [ebx] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
call sub_425480  +
movzx edx byte ptr [eax+14h] +
and edx 0FFFFFFC0h +
or edx 1 +
mov [eax+14h] dl +
movzx edx word ptr [eax+14h] +
mov ebp edx +
and edx 3Fh +
shr bp 6 +
mov ecx ebp +
or ecx 4 +
shl ecx 6 +
or edx ecx +
mov [eax+14h] dx +
cmp byte ptr [ebx+8] 0 +
jz loc_43014D  +
or ebp 14h +
and edx 3Fh +
shl ebp 6 +
or edx ebp +
mov [eax+14h] dx +
movzx edx word ptr [ebx+6] +
mov [eax+18h] edx +
add ebx 0Ch +
cmp ebx esi +
jb loc_4300E0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+269h] 1 +
sbb esi esi +
and esi 0Ch +
add esi 84h +
jmp loc_4300CA  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_4300A0  +
cmp byte ptr [ebx+270h] 0 +
jnz loc_4301B8  +
cmp byte ptr [ebx+2A7h] 0 +
jz loc_4302A0  +
cmp byte ptr [ebx+269h] 0 +
jnz loc_4302A0  +
cmp byte ptr [ebx+248h] 0 +
mov eax [ebx+244h] +
jz loc_430262  +
lea edx [eax-0Dh] +
cmp edx 1 +
jbe loc_430300  +
lea edx [eax-0Bh] +
cmp edx 1 +
jbe loc_430360  +
sub eax 9 +
cmp eax 1 +
jbe loc_430330  +
mov dword ptr [esp+4] offset a__cplusplus199 +
mov [esp] ebx +
call sub_41BDB0  +
cmp byte ptr [ebx+250h] 0 +
jz loc_43023F  +
cmp byte ptr [ebx+248h] 0 +
jz loc_43021F  +
mov eax [ebx+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_43023F  +
mov dword ptr [esp+4] offset a__stdc_utf_16_ +
mov [esp] ebx +
call sub_41BDB0  +
mov dword ptr [esp+4] offset a__stdc_utf_32_ +
mov [esp] ebx +
call sub_41BDB0  +
test esi esi +
jz loc_4302B5  +
mov dword ptr [esp+4] offset a__stdc_hosted_ +
mov [esp] ebx +
call sub_41BDB0  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_4302CE  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp eax 0Fh +
jz loc_4302E4  +
cmp eax 4 +
jz loc_430345  +
and eax 0FFFFFFFBh +
cmp eax 2 +
jz loc_430315  +
cmp byte ptr [ebx+268h] 0 +
jz loc_4301FF  +
mov dword ptr [esp+4] offset a__stdc_version +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__stdc__1 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301B8  +
***
mov dword ptr [esp+4] offset a__stdc_hoste_0 +
mov [esp] ebx +
call sub_41BDB0  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_43025C  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] offset a__objc__1 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41BDB0  +
***
mov dword ptr [esp+4] offset a__assembler__1 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__cplusplus201 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__stdc_versi_0 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__cplusplus2_0 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__stdc_versi_1 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
mov dword ptr [esp+4] offset a__cplusplus2_1 +
mov [esp] ebx +
call sub_41BDB0  +
jmp loc_4301FF  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
movzx eax byte ptr [edi+248h] +
test al al +
jz loc_43039C  +
mov byte ptr [edi+25Ah] 0 +
cmp byte ptr [edi+26Bh] 0 +
jnz loc_430462  +
cmp byte ptr [edi+258h] 2 +
movzx edx byte ptr [edi+270h] +
jz loc_430485  +
test dl dl +
jz loc_4303CF  +
mov byte ptr [edi+24Dh] 0 +
mov byte ptr [edi+258h] 0 +
test al al +
jnz loc_430440  +
cmp byte ptr [edi+26Fh] 0 +
jz loc_430438  +
xor esi esi +
nop   +
or esi 208h +
mov ebx offset off_477AA0 +
nop   +
lea esi [esi+0] +
movzx edx word ptr [ebx+4] +
add ebx 8 +
mov eax [ebx-8] +
mov [esp] edi +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_425480  +
movzx ecx word ptr [eax+14h] +
and byte ptr [eax+0Ch] 0FEh +
mov edx ecx +
and ecx 3Fh +
shr dx 6 +
or edx esi +
shl edx 6 +
or ecx edx +
mov [eax+14h] cx +
movzx ecx byte ptr [ebx-2] +
cmp ebx offset a__timestamp__ +
lea edx [ecx+ecx] +
mov [eax+0Ch] dl +
jb loc_4303F0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
cmp byte ptr [edi+26Eh] 0 +
setnz al  +
cmp byte ptr [edi+26Fh] 0 +
mov esi eax +
jnz loc_4303E0  +
test eax eax +
jz loc_430438  +
mov esi 1 +
jmp loc_4303E6  +
***
cmp byte ptr [edi+2A8h] 0 +
jnz loc_43046F  +
mov byte ptr [edi+10h] 1 +
xor edx edx +
cmp byte ptr [edi+258h] 2 +
mov byte ptr [edi+270h] 0 +
jnz loc_4303BD  +
cmp byte ptr [edi+24Dh] 0 +
setz byte ptr [edi+258h]  +
jmp loc_4303BD  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_4304D2  +
mov eax [ebx+180h] +
test eax eax +
jz loc_4305D2  +
mov [esp+4] esi +
mov [esp] eax +
call sub_42F360  +
lea eax [ebx+78h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_42D690  +
mov [ebx+0A0h] eax +
mov [esp] eax +
call sub_42D680  +
mov edx eax +
xor eax eax +
test dl dl +
jnz loc_430548  +
mov eax [ebx+0A0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42E110  +
mov eax esi +
cmp byte ptr [ebx+26Bh] 0 +
jnz loc_430550  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] ebx +
call sub_423800  +
cmp byte ptr [eax+4] 25h +
mov esi eax +
jz loc_430588  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_41CF60  +
mov edx [ebx+1Ch] +
mov eax [edx+8] +
sub eax 1 +
imul eax eax +
add eax [edx] +
mov eax [eax+8] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov byte ptr [ebx+8] 1 +
mov [esp] ebx +
call sub_423800  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
call sub_41CF60  +
mov byte ptr [ebx+8] 0 +
cmp byte ptr [edi+4] 37h +
jnz loc_430560  +
movzx eax word ptr [esi+6] +
mov [esp] ebx +
and eax 1 +
mov [esp+4] eax +
call sub_41A660  +
test eax eax +
jz loc_430560  +
mov eax ebx +
call sub_42F9F0  +
nop   +
jmp loc_430570  +
***
call sub_42F220  +
mov [ebx+180h] eax +
jmp loc_4304C6  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
cmp byte ptr [ebx+267h] 0 +
jz loc_430610  +
jmp loc_430664  +
mov [esp] ebx +
call sub_41B540  +
mov eax [ebx] +
test eax eax +
jnz loc_430608  +
mov edx [ebx+28Ch] +
test edx edx +
jz loc_430647  +
test esi esi +
jz loc_430647  +
mov eax [ebx+180h] +
mov dword ptr [esp+8] 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_42F590  +
cmp byte ptr [ebx+291h] 0 +
jnz loc_43067E  +
cmp byte ptr [ebx+253h] 0 +
jnz loc_430656  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_42EA20  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_41C500 +
mov [esp] ebx +
call sub_425510  +
jmp loc_430610  +
***
mov eax [ebx+180h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_42F770  +
jmp loc_430647  +
***
sub esp 48h +
mov ecx 0Ah +
lea edx [esp+48h+var_30] +
mov edi edx +
stos   +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_44] 28h +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_2C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_40] eax +
call sub_4308A0  +
test eax eax +
jz loc_43072C  +
mov edx [esp+48h+var_30] +
mov [eax] edx +
mov edx [esp+48h+var_2C] +
mov [eax+4] edx +
mov edx [esp+48h+var_28] +
mov [eax+8] edx +
mov edx [esp+48h+var_24] +
mov [eax+0Ch] edx +
mov edx [esp+48h+var_20] +
mov [eax+10h] edx +
mov edx [esp+48h+var_1C] +
mov [eax+14h] edx +
mov edx [esp+48h+var_18] +
mov [eax+18h] edx +
mov edx [esp+48h+var_14] +
mov [eax+1Ch] edx +
mov edx [esp+48h+var_10] +
mov [eax+20h] edx +
mov edx [esp+48h+var_C] +
mov [eax+24h] edx +
add esp 48h +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 34h +
lea eax [esp+2Ch] +
mov ebx [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov dword ptr [esp+2Ch] 0 +
mov [esp] eax +
call sub_454FE0  +
mov edx [ebx] +
test edx edx +
jle loc_430778  +
sub edx 1 +
xor eax eax +
mov [ebx] edx +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+18h] +
cmp dword ptr [esp+2Ch] 1 +
sbb eax 0 +
test edx edx +
jz loc_4307C0  +
mov esi [ebx+10h] +
mov ecx [ebx+8] +
mov edx [ebx+4] +
mov [esp+10h] esi +
mov esi [ebx+0Ch] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] edx +
mov [esp+0Ch] esi +
call sub_430BD0  +
mov [ebx+14h] eax +
cmp eax 1 +
sbb eax eax +
add esp 34h +
not eax  +
and eax 5 +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [ebx+10h] +
mov edx [ebx+8] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call edx  +
mov [ebx+14h] eax +
jmp loc_4307AE  +
***
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 0 +
add eax 1 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_44] 1000h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_20] ebx +
mov [esp+48h+var_1C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_10] 0 +
mov [esp+48h+var_18] eax +
mov eax [esp+48h+arg_10] +
mov [esp+48h+var_14] eax +
call sub_4308A0  +
test eax eax +
jz loc_430894  +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 1000h +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_4308F0  +
mov [esp+48h+var_C] 1 +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset loc_430740 +
call sub_4552E0  +
mov eax [esp+48h+var_10] +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_C] 0 +
jmp loc_430877  +
***
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_4308C0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+18h+arg_8] +
test eax eax +
jz loc_4308B6  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+18h+var_14] offset aMalloc +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_18] eax +
call [esp+18h+arg_8]  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
jmp free  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_10] +
mov esi [esp+10h+arg_4] +
mov ecx [ebx+8] +
cmp ecx esi +
jb loc_430930  +
mov eax [ebx] +
mov edx [ebx+4] +
lea edi [edx+esi] +
sub ecx esi +
mov [ebx+4] edi +
add eax edx +
mov [ebx+8] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_430970  +
lea edx [eax+1000h] +
cmp eax 1000h +
lea ecx [eax+eax] +
cmovb edx ecx +
add eax esi +
cmp edx eax +
cmovnb eax edx +
mov edi eax +
mov eax [ebx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_430977  +
mov edx [ebx+4] +
mov [ebx] eax +
sub edi edx +
mov ecx edi +
jmp loc_43091A  +
mov edx esi +
shl edx 5 +
jmp loc_430948  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+10h+var_C] offset aRealloc +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_10] eax +
call [esp+10h+arg_8]  +
xor eax eax +
jmp loc_430927  +
***
mov ebx [esp+18h+arg_4] +
mov edx [ebx+4] +
mov eax [ebx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
mov [ebx] eax +
jz loc_4309D0  +
mov dword ptr [ebx+8] 0 +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+18h+var_14] offset aRealloc +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_18] eax +
call [esp+18h+arg_8]  +
xor eax eax +
jmp loc_4309CB  +
***
mov eax [esp+18h+arg_C] +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_4309A0  +
test eax eax +
jz loc_430A47  +
mov eax [ebx] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_C] +
mov edi [esp+1Ch+arg_10] +
mov [esp+1Ch+var_10] eax +
mov ebp [esp+1Ch+arg_8] +
mov eax ebx +
mov edx esi +
mov ecx edi +
call sub_430A50  +
test eax eax +
jz loc_430C05  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_430C10  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+1Ch+var_10] +
mov eax [ebx+0Ch] +
mov [esp+1Ch+arg_10] edi +
mov [esp+1Ch+arg_C] esi +
mov [esp+1Ch+arg_8] ebp +
mov [esp+1Ch+arg_0] ebx +
mov [esp+1Ch+arg_4] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov ecx [esp+40h] +
mov edx [esp+3Ch] +
mov eax ebx +
call sub_430A50  +
test eax eax +
jz loc_430C64  +
mov edx [ebx+1Ch] +
xor eax eax +
test edx edx +
jz loc_430C70  +
add esp 28h +
pop ebx  +
retn   +
***
mov ecx [esp+40h] +
mov edx [esp+38h] +
mov eax [ebx+14h] +
mov [esp] ebx +
mov [esp+10h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+0Ch] ecx +
mov [esp+4] edx +
call eax  +
add esp 28h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_C] +
mov esi [esp+10h+arg_0] +
test ebx ebx +
jz loc_430D25  +
mov dword ptr [ebx] 0 +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open  +
test eax eax +
js loc_430CE3  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi ds:__imp__errno +
call edi  +
cmp dword ptr [eax] 2 +
jz loc_430D13  +
call edi  +
mov eax [eax] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_10] eax +
call [esp+10h+arg_4]  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx] 1 +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open  +
mov edi ds:__imp__errno +
test eax eax +
jns loc_430CDC  +
jmp loc_430CF0  +
***
jmp sub_430D50  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call _close  +
mov edx 1 +
test eax eax +
js loc_430D70  +
mov eax edx +
add esp 1Ch +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aClose +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_4]  +
xor edx edx +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] 0FFFFFFFFh +
mov [esp+1Ch+var_18] offset aNoDebugInfoInP +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_C]  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+14h] +
mov dword ptr [esp+0Ch] 0FFFFFFFFh +
mov dword ptr [esp+8] offset aNoSymbolTableI +
mov [esp+4] eax +
mov eax [esp+10h] +
jmp eax  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx] +
cmp edx [eax+4] +
jb loc_430E30  +
cmp edx [eax+0Ch] +
setnb al  +
movzx eax al +
retn   +
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax [ebx+4] +
test eax eax +
jnz loc_430EC3  +
mov ebx [ebx+18h] +
test ebx ebx +
jz loc_430F00  +
lea esi [esp+34h] +
jmp loc_430E6B  +
mov ebx [ebx] +
test ebx ebx +
jz loc_430F00  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_430E10 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jz loc_430E61  +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add ebx 18h +
lea esi [esp+34h] +
jmp loc_430EFA  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_430E10 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jnz loc_430E95  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_430ED0  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
jmp loc_430EAA  +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov eax [esp+10Ch+arg_C] +
lea ebx [esp+10Ch+var_84] +
mov ebp [esp+10Ch+arg_0] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 40h +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
test eax eax +
jz loc_431045  +
mov eax [esp+10Ch+var_84] +
cmp byte ptr [eax] 4Dh +
jnz loc_430F93  +
cmp byte ptr [eax+1] 5Ah +
jz loc_43113E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_431D80  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
test eax eax +
jz loc_43106F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_431D80  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aExecutableFile +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_BC] 0 +
jmp loc_43104F  +
xor esi esi +
mov [esp+10Ch+var_BC] 0 +
mov [esp+10Ch+var_C0] 0 +
mov ebx [esp+10Ch+var_BC] +
test ebx ebx +
jnz loc_431110  +
mov ecx [esp+10Ch+var_C0] +
test ecx ecx +
jnz loc_4310E0  +
test esi esi +
jnz loc_4310B0  +
cmp [esp+10Ch+arg_4] 0FFFFFFFFh +
jz loc_43109E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_430D50  +
add esp 10Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_54] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
jmp loc_43106F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
jmp loc_43106B  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_6C] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
jmp loc_431063  +
mov edi [eax+3Ch] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_431D80  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
test eax eax +
jz loc_431045  +
test edi edi +
jz loc_430FF6  +
mov esi [esp+10Ch+var_84] +
mov [esp+10Ch+var_104] 4 +
mov [esp+10Ch+var_108] offset aPe +
mov [esp+10Ch+var_10C] esi +
call memcmp  +
mov [esp+10Ch+var_C0] eax +
movzx eax word ptr [esi+6] +
mov [esp+10Ch+var_AA] ax +
mov eax [esi+0Ch] +
mov [esp+10Ch+var_B8] eax +
mov eax [esi+10h] +
movzx esi word ptr [esi+14h] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_A8] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_431D80  +
mov eax [esp+10Ch+var_C0] +
test eax eax +
jnz loc_431018  +
movzx eax [esp+10Ch+var_AA] +
lea ecx [esp+10Ch+var_78] +
movzx ebx si +
mov [esp+10Ch+var_F4] ecx +
mov ecx [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B0] eax +
lea eax [eax+eax*4] +
lea eax [ebx+eax*8] +
mov [esp+10Ch+var_100] eax +
lea eax [edi+18h] +
mov [esp+10Ch+var_F8] ecx +
mov ecx [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_FC] ecx +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
test eax eax +
jz loc_431045  +
cmp si 20h +
mov edx [esp+10Ch+var_78] +
jbe loc_4318EE  +
movzx eax word ptr [edx] +
cmp ax 10Bh +
jz loc_431AF6  +
cmp ax 20Bh +
jnz loc_431AC0  +
mov eax [edx+18h] +
mov [esp+10Ch+var_A0] eax +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_43190F  +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_C0] edx +
lea eax [eax+eax*8] +
add eax eax +
mov edi eax +
mov [esp+10Ch+var_98] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_FC] eax +
mov eax edi +
add eax 4 +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_B8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
mov edx [esp+10Ch+var_C0] +
test eax eax +
jz loc_43193C  +
mov eax [esp+10Ch+var_60] +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_C0] 1 +
mov [esp+10Ch+var_BC] 0 +
mov eax [eax+edi] +
cmp eax 4 +
mov [esp+10Ch+var_A4] eax +
ja loc_431B1F  +
lea eax [edx+ebx] +
mov ecx 0Fh +
lea edx [esp+10Ch+var_48] +
mov esi eax +
mov [esp+10Ch+var_9C] eax +
mov edi edx +
xor eax eax +
stos   +
mov eax [esp+10Ch+var_B0] +
mov [esp+10Ch+var_B8] 0 +
test eax eax +
jz loc_4313E5  +
mov [esp+10Ch+arg_0] ebp +
lea esi [esi+0] +
xor edi edi +
cmp byte ptr [esi] 2Fh +
jz loc_431800  +
mov eax [esp+10Ch+var_6C] +
xor ebx ebx +
mov ebp [esp+10Ch+var_64] +
add eax edi +
mov [esp+10Ch+var_B4] eax +
test edi edi +
mov ecx ds:off_477EA8[ebx*4] +
jz loc_431516  +
cmp edi ebp +
jnb loc_4313C4  +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_10C] ecx +
mov [esp+10Ch+var_108] eax +
call strcmp  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jnz loc_431540  +
add ebx 1 +
cmp ebx 5 +
jnz loc_431391  +
add [esp+10Ch+var_B8] 1 +
add esi 28h +
mov eax [esp+10Ch+var_B8] +
cmp [esp+10Ch+var_B0] eax +
ja loc_431370  +
mov ebp [esp+10Ch+arg_0] +
mov eax [esp+10Ch+var_A8] +
xor ebx ebx +
test eax eax +
jz loc_4316BF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_4308A0  +
test eax eax +
mov [esp+10Ch+var_94] eax +
jz loc_4314E6  +
mov eax [esp+10Ch+var_6C] +
mov edx 38E38E39h +
mov [esp+10Ch+var_90] eax +
mov eax [esp+10Ch+var_60] +
mov ecx eax +
mov [esp+10Ch+var_B0] eax +
mov eax [esp+10Ch+var_98] +
mul  edx +
mov [esp+10Ch+var_B8] edx +
shr [esp+10Ch+var_B8] 2 +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_431C14  +
xor edi edi +
xor edx edx +
mov [esp+10Ch+var_A8] edi +
mov edi ecx +
mov [esp+10Ch+var_98] 0 +
nop   +
lea eax [edx+edx*8] +
lea eax [edi+eax*2] +
movzx ecx word ptr [eax+0Eh] +
mov word ptr [esp+10Ch+var_B4] cx +
movzx ecx word ptr [eax+0Ch] +
test cx cx +
jle loc_431566  +
cmp [esp+10Ch+var_AA] cx +
jnb loc_431566  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aInvalidSection +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_94] +
mov [esp+10Ch+var_108] eax +
call sub_4308F0  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
jmp loc_431057  +
xor eax eax +
movzx edx byte ptr [ecx+eax] +
cmp dl [esi+eax] +
jnz loc_4313C4  +
test dl dl +
jz loc_431540  +
add eax 1 +
cmp eax 8 +
jnz loc_431518  +
xor eax eax +
cmp byte ptr [ecx+8] 0 +
setz al  +
jmp loc_4313BC  +
mov edx [esi+14h] +
lea eax [ebx+ebx*2] +
shl eax 2 +
mov [esp+eax+10Ch+var_48] edx +
mov edx [esi+8] +
cmp [esi+10h] edx +
cmovbe edx [esi+10h] +
mov [esp+eax+10Ch+var_44] edx +
jmp loc_4313CC  +
movzx esi byte ptr [eax] +
mov ebx esi +
test bl bl +
jnz loc_43157C  +
mov ebx [esp+10Ch+var_A4] +
cmp ebx [eax+4] +
jbe loc_431497  +
movzx ebx word ptr [esp+10Ch+var_B4] +
shr bx 4 +
cmp bx 2 +
jz loc_431828  +
movzx eax byte ptr [eax+11h] +
lea edx [edx+eax+1] +
cmp [esp+10Ch+var_B8] edx +
ja loc_431470  +
mov eax [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov edi [esp+10Ch+var_A8] +
lea ebx ds:8[eax*8] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_4308A0  +
test eax eax +
mov [esp+10Ch+var_A8] eax +
jz loc_4314B8  +
test edi edi +
mov [esp+10Ch+var_B4] 0 +
jnz loc_431BB2  +
mov edi [esp+10Ch+var_A8] +
xor esi esi +
mov [esp+10Ch+arg_0] ebp +
nop   +
lea esi [esi+0] +
mov ecx [esp+10Ch+var_B0] +
lea eax [esi+esi*8] +
lea ebx [ecx+eax*2] +
movsx edx word ptr [ebx+0Ch] +
movzx ecx word ptr [ebx+0Eh] +
test dx dx +
jle loc_431623  +
cmp [esp+10Ch+var_AA] dx +
jnb loc_431623  +
call abort  +
movzx ebp byte ptr [ebx] +
mov eax ebp +
test al al +
jz loc_431812  +
mov eax ebx +
shr cx 4 +
cmp cx 2 +
jz loc_431866  +
movzx eax byte ptr [ebx+11h] +
lea esi [esi+eax+1] +
cmp [esp+10Ch+var_B8] esi +
ja loc_431600  +
mov ebp [esp+10Ch+arg_0] +
mov dword ptr [edi] 0 +
mov esi [esp+10Ch+var_A8] +
mov dword ptr [edi+4] 0FFFFFFFFh +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_100] offset sub_430DF0 +
mov [esp+10Ch+var_104] 8 +
mov [esp+10Ch+var_10C] esi +
mov [esp+10Ch+var_108] edi +
call sub_431DD0  +
mov eax [esp+10Ch+var_94] +
mov dword ptr [eax] 0 +
mov [eax+4] esi +
mov [eax+8] edi +
mov eax [ebp+4] +
test eax eax +
jz loc_431B84  +
lea ecx [ebp+18h] +
mov edx ecx +
jmp loc_4316AA  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4316A8  +
mov edi [esp+10Ch+var_94] +
cmpxchg [edx] edi +
jnz loc_4316A4  +
mov ebx 1 +
mov eax [esp+10Ch+arg_C] +
xor edi edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_431D80  +
lea eax [esp+10Ch+var_44] +
xor ecx ecx +
mov [esp+10Ch+var_C0] ebx +
mov edx [eax] +
test edx edx +
jz loc_43173A  +
test ecx ecx +
jnz loc_4318FB  +
mov ecx [eax-4] +
mov ebx ecx +
add edx ebx +
cmp edi edx +
cmovl edi edx +
add eax 0Ch +
lea ebx [esp+10Ch+var_8] +
cmp eax ebx +
jnz loc_431720  +
test edi edi +
mov ebx [esp+10Ch+var_C0] +
jz loc_431758  +
test ecx ecx +
jnz loc_431951  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_430D50  +
test eax eax +
jz loc_43104F  +
mov [esp+10Ch+var_88] offset sub_430DA0 +
mov eax [ebp+4] +
test eax eax +
jnz loc_4317C2  +
test ebx ebx +
jz loc_4317E2  +
mov dword ptr [ebp+14h] offset loc_430E40 +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4317D0  +
cmp eax offset sub_430DA0 +
jz loc_4317D0  +
add esp 10Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_4317F2  +
mov dword ptr [ebp+14h] offset loc_430E40 +
jmp loc_4317A4  +
mov eax [esp+10Ch+var_88] +
mov edi [esp+10Ch+arg_10] +
mov [edi] eax +
jmp loc_4317B2  +
mov edx [ebp+14h] +
test edx edx +
jnz loc_4317A4  +
mov dword ptr [ebp+14h] offset loc_430DD0 +
jmp loc_4317A4  +
mov edx offset loc_430DD0 +
mov eax ebx +
cmpxchg [ebp+14h] edx +
jmp loc_4317A4  +
lea eax [esi+1] +
mov [esp+10Ch+var_10C] eax +
call atoi  +
mov edi eax +
jmp loc_43137B  +
mov eax [ebx+4] +
cmp [esp+10Ch+var_A4] eax +
jbe loc_43161E  +
add eax [esp+10Ch+var_90] +
jmp loc_431632  +
test cx cx +
jle loc_43158F  +
mov ecx esi +
add [esp+10Ch+var_98] 1 +
test cl cl +
jz loc_43158F  +
xor ecx ecx +
cmp byte ptr [eax+ecx] 0 +
jz loc_431855  +
add ecx 1 +
cmp ecx 8 +
jnz loc_431842  +
mov ecx 8 +
mov esi [esp+10Ch+var_A8] +
lea ecx [esi+ecx+1] +
mov [esp+10Ch+var_A8] ecx +
jmp loc_43158F  +
test dx dx +
jle loc_431640  +
mov ecx ebp +
test cl cl +
jz loc_4318C2  +
xor edx edx +
cmp byte ptr [eax+edx] 0 +
jz loc_431B02  +
add edx 1 +
cmp edx 8 +
jnz loc_431877  +
mov [esp+10Ch+var_C0] 9 +
mov ebp 8 +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_104] ebp +
mov [esp+10Ch+var_10C] eax +
call memcpy  +
mov ecx [esp+10Ch+var_B4] +
mov byte ptr [ecx+ebp] 0 +
mov ebp [esp+10Ch+var_C0] +
mov eax ecx +
movsx edx word ptr [ebx+0Ch] +
add ecx ebp +
mov [esp+10Ch+var_B4] ecx +
xor ecx ecx +
cmp byte ptr [eax] 5Fh +
setz cl  +
add edi 8 +
add eax ecx +
mov ecx [esp+10Ch+var_A0] +
mov [edi-8] eax +
lea eax [edx+edx*4] +
mov edx [esp+10Ch+var_9C] +
add ecx [edx+eax*8-1Ch] +
mov eax [ebx+8] +
add eax ecx +
mov [edi-4] eax +
jmp loc_431640  +
mov [esp+10Ch+var_A0] 0 +
jmp loc_4312A0  +
mov esi [eax-4] +
cmp esi ecx +
mov ebx esi +
jge loc_431733  +
mov ecx esi +
jmp loc_431731  +
mov [esp+10Ch+var_A4] 0 +
mov [esp+10Ch+var_A8] 0 +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_98] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_43133B  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_4314E6  +
lea eax [esp+10Ch+var_54] +
sub edi ecx +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_100] edi +
mov [esp+10Ch+var_104] ecx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_C0] ecx +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
test eax eax +
jz loc_43104F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_430D50  +
mov ecx [esp+10Ch+var_C0] +
test eax eax +
jz loc_431BA8  +
mov esi [esp+10Ch+var_54] +
lea edx [esp+10Ch+var_44] +
mov edi [edx] +
test edi edi +
jnz loc_431B10  +
mov dword ptr [edx+4] 0 +
add edx 0Ch +
lea eax [esp+10Ch+var_8] +
cmp eax edx +
jnz loc_4319DC  +
lea eax [esp+10Ch+var_88] +
mov esi 1 +
mov [esp+10Ch+var_D0] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_DC] 0 +
mov [esp+10Ch+var_108] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_D4] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_D8] eax +
mov eax [esp+10Ch+var_14] +
mov [esp+10Ch+var_E0] eax +
mov eax [esp+10Ch+var_10] +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+var_20] +
mov [esp+10Ch+var_E8] eax +
mov eax [esp+10Ch+var_1C] +
mov [esp+10Ch+var_EC] eax +
mov eax [esp+10Ch+var_2C] +
mov [esp+10Ch+var_F0] eax +
mov eax [esp+10Ch+var_28] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+var_38] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+var_34] +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_44] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_40] +
mov [esp+10Ch+var_104] eax +
call sub_435960  +
mov [esp+10Ch+arg_4] 0FFFFFFFFh +
test eax eax +
jz loc_43104F  +
jmp loc_431792  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aBadMagicInPeOp +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_4314E6  +
mov eax [edx+1Ch] +
mov [esp+10Ch+var_A0] eax +
jmp loc_4312A0  +
lea ecx [edx+1] +
mov ebp edx +
mov [esp+10Ch+var_C0] ecx +
jmp loc_431896  +
mov eax esi +
sub eax ecx +
add eax [edx-4] +
mov [edx+4] eax +
jmp loc_4319ED  +
lea eax [esp+10Ch+var_6C] +
mov edi [esp+10Ch+var_B8] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
add edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B4] edx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_A4] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_431C60  +
mov edx [esp+10Ch+var_B4] +
test eax eax +
jz loc_4314E6  +
mov [esp+10Ch+var_BC] 1 +
jmp loc_43133B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_431B92  +
jmp loc_431C0F  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_431B90  +
mov eax [esp+10Ch+var_94] +
mov ebx 1 +
mov [edx] eax +
jmp loc_4316BF  +
mov esi 1 +
jmp loc_43104F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_4308A0  +
test eax eax +
mov [esp+10Ch+var_B4] eax +
jnz loc_4315EE  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_108] eax +
call sub_4308F0  +
jmp loc_4314B8  +
lea edx [ebp+18h] +
jmp loc_431B98  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 8 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_4308A0  +
test eax eax +
mov edi eax +
mov [esp+10Ch+var_A8] eax +
jz loc_4314B8  +
mov [esp+10Ch+var_98] 0 +
jmp loc_431655  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] 0 +
mov ebx [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call _lseek  +
test eax eax +
js loc_431D20  +
mov eax [esp+1Ch+arg_14] +
xor ebp ebp +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4308A0  +
test eax eax +
mov [esi+4] eax +
jz loc_431CDE  +
mov [esi] eax +
mov [esi+8] ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call _read  +
test eax eax +
js loc_431D50  +
cmp ebx eax +
mov ebp 1 +
ja loc_431CE8  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_14] +
xor bp bp +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] offset aFileTooShort +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
xor ebp ebp +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aLseek +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aRead_0 +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_431CDE  +
***
mov ebx [esp+28h+arg_4] +
mov ecx [esp+28h+arg_C] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+28h+var_18] ecx +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_28] eax +
call sub_4308F0  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_4] 1 +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
jbe loc_431EFD  +
lea esi [esi+0] +
mov edx [esp+2Ch+arg_4] +
shr edx 1 +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_431E18  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_431E01  +
xor eax eax +
mov edi 1 +
lea ebx [ebp+esi+0] +
mov [esp+2Ch+arg_0] ebp +
mov ebp eax +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
test eax eax +
jle loc_431E7E  +
add ebp 1 +
cmp edi ebp +
jz loc_431E7E  +
mov edx ebp +
imul edx esi +
add edx [esp+2Ch+arg_0] +
test esi esi +
jz loc_431E7E  +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
mov [esp+2Ch+var_D] cl +
movzx ecx byte ptr [ebx+eax] +
mov [edx+eax] cl +
movzx ecx [esp+2Ch+var_D] +
mov [ebx+eax] cl +
add eax 1 +
cmp eax esi +
jnz loc_431E60  +
add edi 1 +
add ebx esi +
cmp edi [esp+2Ch+arg_4] +
jb loc_431E30  +
mov eax ebp +
mov edi ebp +
mov ebp [esp+2Ch+arg_0] +
test eax eax +
jz loc_431EB9  +
mov edx eax +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_431EB9  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_431EA2  +
mov eax edi +
add eax eax +
cmp eax [esp+2Ch+arg_4] +
jnb loc_431F05  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] eax +
call sub_431DD0  +
mov eax edi +
add eax 1 +
imul eax esi +
add ebp eax +
mov eax [esp+2Ch+arg_4] +
sub eax edi +
sub eax 1 +
mov [esp+2Ch+arg_4] eax +
cmp [esp+2Ch+arg_4] 1 +
ja loc_431DF0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
sub eax 1 +
sub eax edi +
mov [esp+2Ch+var_28] eax +
mov eax edi +
add eax 1 +
imul eax esi +
add eax ebp +
mov [esp+2Ch+var_2C] eax +
call sub_431DD0  +
mov [esp+2Ch+arg_4] edi +
jmp loc_431EF2  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_431F60  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_431F77  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_431F57  +
jb loc_431F73  +
cmp ecx [edx+8] +
jnb loc_431F57  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_431F52  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_431F57  +
jmp loc_431F6C  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_431FB0  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_431FC7  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_431FA7  +
jb loc_431FC3  +
cmp ecx [edx+8] +
jnb loc_431FA7  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_431FA2  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_431FA7  +
jmp loc_431FBC  +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov edx [edx] +
cmp edx [eax] +
jb loc_431FF8  +
cmp edx [eax+10h] +
setnb al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov ecx [edx+4] +
mov esi [edx] +
mov edx [eax+4] +
mov ebx [eax] +
cmp ecx edx +
jnb loc_432023  +
mov eax 0FFFFFFFFh +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
jbe loc_432040  +
cmp ecx edx +
mov eax 1 +
ja loc_432020  +
nop   +
jb loc_432036  +
cmp esi ebx +
ja loc_432020  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
cmp esi ebx +
jb loc_432018  +
cmp ecx edx +
mov eax 1 +
ja loc_432020  +
jmp loc_43202E  +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov ebp ebx +
mov ecx [esp+54h+arg_0] +
mov esi [esp+54h+arg_20] +
mov [esp+54h+var_2C] ecx +
mov ecx [esp+54h+arg_4] +
add edi [esp+54h+var_2C] +
mov [esp+54h+var_28] ecx +
mov ecx [esp+54h+arg_8] +
adc ebp [esp+54h+var_28] +
mov [esp+54h+var_24] ecx +
mov ecx [esp+54h+arg_C] +
mov [esp+54h+var_20] ecx +
mov ecx [esp+54h+arg_10] +
mov [esp+54h+var_1C] ecx +
mov ecx [esp+54h+arg_14] +
mov [esp+54h+var_18] ecx +
mov ecx edx +
mov edx [esi+0Ch] +
add ecx [esp+54h+var_24] +
adc ebx [esp+54h+var_20] +
test edx edx +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_30] ebx +
jz loc_4320F2  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+54h+var_3C] ecx +
mov ecx [esp+54h+var_3C] +
mov [esp+54h+var_38] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_432170  +
mov ecx [esp+54h+var_3C] +
mov ebx [esp+54h+var_38] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_432170  +
mov edx [esp+54h+arg_1C] +
mov [esp+54h+var_44] esi +
mov [esp+54h+var_50] 18h +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+arg_18] +
mov [esp+54h+var_4C] edx +
call sub_430900  +
test eax eax +
jz loc_4321A8  +
mov edx edi +
mov [eax] edx +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
mov edx [esp+54h+var_28] +
mov [esp+54h+var_2C] edi +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_20] ebp +
mov [eax+4] edx +
mov edx [esp+54h+var_20] +
mov [eax+8] edi +
mov [esp+54h+var_24] edi +
mov [eax+0Ch] edx +
mov edx [esp+54h+var_1C] +
mov [eax+10h] edx +
mov edx [esp+54h+var_18] +
mov [eax+14h] edx +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [edx+10h] +
cmp [esp+54h+var_1C] ebx +
jnz loc_4320F2  +
mov eax [esp+54h+var_38] +
cmp [esp+54h+var_30] eax +
jb loc_4321B0  +
ja loc_432193  +
mov eax [esp+54h+var_3C] +
cmp [esp+54h+var_34] eax +
jbe loc_4321B0  +
mov esi [esp+54h+var_34] +
mov eax 1 +
mov edi [esp+54h+var_30] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_432162  +
xor eax eax +
jmp loc_432162  +
mov eax 1 +
jmp loc_432162  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+20h] +
mov esi [esp+38h+arg_0] +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_28] esi +
mov ecx [edx+1Ch] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
lea edx ds:0[ecx*4] +
mov [esp+38h+var_30] edx +
call sub_4308F0  +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_2C] ebp +
shl edx 2 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
call sub_4308F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [edx] +
test eax eax +
jz loc_43226D  +
xor ebx ebx +
mov eax [ebp+4] +
lea ecx [ebx+ebx*2] +
add ebx 1 +
mov edx [esp+38h+arg_0] +
lea eax [eax+ecx*8] +
mov ecx [eax+14h] +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_2C] edi +
mov eax [eax+10h] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] ecx +
shl eax 3 +
mov [esp+38h+var_30] eax +
call sub_4308F0  +
mov eax [ebp+0] +
cmp eax ebx +
ja loc_432235  +
mov ecx [ebp+4] +
lea eax [eax+eax*2] +
mov edx [esp+38h+arg_0] +
shl eax 3 +
mov [esp+38h+var_2C] edi +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_34] ecx +
call sub_4308F0  +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [esp+14h] +
mov ebx [edx+4] +
mov ecx [eax+4] +
mov edi [edx] +
mov esi [eax] +
cmp ebx ecx +
jnb loc_4322D2  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_4322E0  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_4322C9  +
cmp ebx ecx +
jb loc_4322EC  +
cmp edi esi +
ja loc_4322D4  +
mov ebx [edx+0Ch] +
mov ecx [eax+0Ch] +
mov edi [edx+8] +
mov esi [eax+8] +
cmp ebx ecx +
jb loc_4322D4  +
ja loc_4322C9  +
cmp edi esi +
jb loc_4322D4  +
cmp ebx ecx +
jb loc_43230A  +
cmp edi esi +
ja loc_4322C9  +
mov ecx [edx+10h] +
xor ebx ebx +
mov edx [eax+10h] +
mov eax [edx+18h] +
cmp [ecx+18h] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_432360  +
mov eax 1 +
ja loc_432359  +
mov eax [edx+0Ch] +
xor ebx ebx +
cmp [ecx+0Ch] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax [ecx] +
test eax eax +
jnz loc_432390  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [edx] +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] offset sub_431F40 +
mov [esp+2Ch+var_20] 18h +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call bsearch  +
test eax eax +
mov esi eax +
jz loc_432383  +
mov eax [edi] +
mov edx esi +
mov ecx eax +
sub edx ecx +
sar edx 3 +
imul edx edx +
mov [esp+2Ch+var_18] eax +
mov eax [ebx] +
add edx 1 +
cmp eax edx +
jbe loc_4324E2  +
mov ebx [esp+2Ch+var_10] +
xor ebp ebp +
cmp dword ptr [esi+1Ch] 0 +
mov [esp+2Ch+var_14] ebx +
mov edi ebx +
ja loc_4323FB  +
cmp [esi+18h] ebx +
jbe loc_432482  +
mov eax [esp+2Ch+var_14] +
mov edx esi +
mov esi [esp+2Ch+arg_C] +
mov ebx [edx+10h] +
mov [esp+2Ch+var_20] esi +
mov esi [esp+2Ch+arg_8] +
lea ecx [ebx+10h] +
lea edx [ebx+0Ch] +
mov [esp+2Ch+var_24] esi +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] esi +
call sub_432370  +
test eax eax +
jnz loc_432385  +
mov eax [esp+2Ch+arg_C] +
mov ecx [ebx] +
mov edx [eax] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_0]  +
test eax eax +
jnz loc_432385  +
mov edx [ebx+4] +
mov ecx [esp+2Ch+arg_8] +
mov [ecx] edx +
mov edx [ebx+8] +
mov ebx [esp+2Ch+arg_C] +
mov [ebx] edx +
jmp loc_432385  +
cmp dword ptr [esi+24h] 0 +
ja loc_432491  +
cmp [esi+20h] ebx +
jbe loc_4323FB  +
mov edx esi +
mov ecx edi +
mov ebx ebp +
add edx 18h +
mov edi edx +
sub edi [esp+2Ch+var_18] +
sar edi 3 +
imul edi edi +
add edi 1 +
cmp edi eax +
jnb loc_4324BD  +
mov ebp edx +
sub ebp esi +
lea edi [esi+30h] +
cmp [ebp+edi-14h] ebx +
jbe loc_4324C6  +
mov eax [esp+2Ch+var_14] +
jmp loc_432401  +
jb loc_4324CE  +
cmp [ebp+edi-18h] ecx +
ja loc_4324BD  +
cmp [ebp+edi-0Ch] ebx +
jb loc_4324BD  +
ja loc_432497  +
cmp [ebp+edi-10h] ecx +
jbe loc_4324BD  +
lea esi [esi+0] +
jmp loc_432497  +
mov eax [esp+2Ch+var_10] +
mov edx esi +
jmp loc_432401  +
***
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 4Ch +
add esi 0FFFFFFFFh +
mov ebx [eax] +
adc edi 0FFFFFFFFh +
cmp edi 0 +
ja loc_432570  +
cmp esi ebx +
jnb loc_432570  +
mov esi [eax+4] +
lea eax [edx+edx*2] +
lea eax [esi+eax*8-18h] +
mov ebp [eax+4] +
mov edi [eax] +
xor ebp ecx +
xor edi edx +
or ebp edi +
jz loc_432565  +
xor eax eax +
mov [esp+eax+54h+var_2C] 0 +
add eax 4 +
cmp eax 18h +
jb loc_432525  +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_44] offset loc_432000 +
mov [esp+54h+var_48] 18h +
mov [esp+54h+var_4C] ebx +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_2C] edx +
mov [esp+54h+var_28] ecx +
call bsearch  +
test eax eax +
jz loc_432575  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [eax+4] +
jmp loc_432523  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_4C] 0 +
mov [esp+54h+var_50] offset aInvalidAbbrevi +
mov [esp+54h+var_54] eax +
call [esp+54h+arg_0]  +
xor eax eax +
jmp loc_432565  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_10] +
mov edi [esp+38h+arg_0] +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_4325C9  +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [ebx] +
cmp [edx] ecx +
jz loc_432620  +
mov edx [esp+38h+arg_C] +
mov [esp+38h+var_28] ebx +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] edx +
mov edx [esp+38h+arg_8] +
mov [esp+38h+var_30] edx +
call sub_430900  +
test eax eax +
jz loc_432635  +
mov edx [ebx+0Ch] +
mov ecx [esp+38h+arg_4] +
add esi [ebp+0] +
mov [eax+4] edi +
mov [eax+0Ch] edx +
add edx 1 +
mov [eax] esi +
mov [eax+8] ecx +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [edx+4] edi +
jnz loc_4325C9  +
mov ecx [esp+38h+arg_4] +
cmp [edx+8] ecx +
jnz loc_4325C9  +
mov eax 1 +
jmp loc_432611  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov ebp ebx +
mov esi [esp+44h+arg_18] +
mov [esp+44h+var_20] ecx +
mov ecx edx +
add edi [esp+44h+arg_0] +
adc ebp [esp+44h+arg_4] +
mov edx [esi+0Ch] +
add ecx [esp+44h+arg_8] +
adc ebx [esp+44h+arg_C] +
test edx edx +
mov [esp+44h+var_1C] ecx +
mov [esp+44h+var_18] ebx +
jz loc_4326AF  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+44h+var_2C] ecx +
mov ecx [esp+44h+var_2C] +
mov [esp+44h+var_28] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_432702  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_432702  +
mov edx [esp+44h+arg_14] +
mov [esp+44h+var_34] esi +
mov [esp+44h+var_40] 18h +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_38] edx +
mov edx [esp+44h+arg_10] +
mov [esp+44h+var_3C] edx +
call sub_430900  +
test eax eax +
jz loc_432736  +
mov [eax] edi +
mov edi [esp+44h+var_1C] +
mov [eax+4] ebp +
mov ebp [esp+44h+var_18] +
mov [eax+8] edi +
mov edi [esp+44h+var_20] +
mov [eax+0Ch] ebp +
mov [eax+10h] edi +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+44h+var_20] +
cmp [edx+10h] ebx +
jnz loc_4326AF  +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_18] eax +
jb loc_432740  +
ja loc_432721  +
mov eax [esp+44h+var_2C] +
cmp [esp+44h+var_1C] eax +
jbe loc_432740  +
mov esi [esp+44h+var_1C] +
mov eax 1 +
mov edi [esp+44h+var_18] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_4326FA  +
xor eax eax +
jmp loc_4326FA  +
mov eax 1 +
jmp loc_4326FA  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [eax+4] +
mov ecx [edx+4] +
mov edi [eax] +
mov esi [edx] +
cmp ebx ecx +
jnb loc_432772  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_432780  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_432769  +
cmp ebx ecx +
jb loc_43278C  +
cmp edi esi +
ja loc_432774  +
mov ebx [eax+0Ch] +
mov ecx [edx+0Ch] +
mov edi [eax+8] +
mov esi [edx+8] +
cmp ebx ecx +
jb loc_432774  +
ja loc_432769  +
cmp edi esi +
jb loc_432774  +
cmp ebx ecx +
jb loc_4327AA  +
cmp edi esi +
ja loc_432769  +
mov edx [edx+10h] +
mov edx [edx] +
mov [esp+14h] edx +
mov eax [eax+10h] +
mov eax [eax] +
mov [esp+10h] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp strcmp  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aSInSAtD +
mov [esp+1Ch+var_18] 0C8h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
mov ebx eax +
sub esp 0F4h +
mov ecx [eax] +
mov eax [eax+8] +
lea esi [esp+0F4h+var_CC] +
sub eax [ebx+4] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_E4] ecx +
mov [esp+0F4h+var_F4] esi +
mov [esp+0F4h+var_E0] eax +
mov [esp+0F4h+var_EC] offset aSInSAtD +
mov [esp+0F4h+var_F0] 0C8h +
call sub_4327D0  +
mov edx [ebx+18h] +
mov eax [ebx+14h] +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F4] edx +
call eax  +
add esp 0F4h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_432880  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_432892  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
sub eax edx +
mov [ebx+0Ch] eax +
mov eax 1 +
add [ebx+8] edx +
add esp 8 +
pop ebx  +
retn   +
mov edx offset aDwarfUnderflow +
mov eax ebx +
call sub_432800  +
mov dword ptr [ebx+1Ch] 1 +
jmp loc_432874  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_432860  +
test eax eax +
jz loc_432917  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_4328F3  +
movzx eax byte ptr [esi+3] +
movzx edx byte ptr [esi+2] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi] +
or eax edx +
movzx edx byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx eax byte ptr [esi] +
movzx edx byte ptr [esi+1] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi+3] +
or eax edx +
movzx edx byte ptr [esi+2] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov esi eax +
sub esp 4 +
mov ebx [eax+8] +
call sub_432860  +
test eax eax +
jz loc_432A01  +
mov esi [esi+10h] +
test esi esi +
jnz loc_4329A2  +
movzx ecx byte ptr [ebx+7] +
xor edx edx +
movzx eax byte ptr [ebx+6] +
movzx esi byte ptr [ebx] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+5] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+4] +
or ecx eax +
movzx eax byte ptr [ebx+3] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+2] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+1] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
movzx ecx byte ptr [ebx] +
xor edx edx +
movzx eax byte ptr [ebx+1] +
movzx esi byte ptr [ebx+7] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+3] +
or ecx eax +
movzx eax byte ptr [ebx+4] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+5] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+6] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
xor esi esi +
add esp 4 +
xor ecx ecx +
mov eax esi +
mov edx ecx +
pop ebx  +
pop esi  +
retn   +
***
test edx edx +
jnz loc_432A22  +
sub esp 0Ch +
call sub_4328B0  +
xor edx edx +
add esp 0Ch +
retn   +
jmp sub_432920  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_432860  +
test eax eax +
jz loc_432A73  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_432A61  +
movzx edx byte ptr [esi+1] +
movzx eax byte ptr [esi] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx edx byte ptr [esi] +
movzx eax byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov ebx [eax+8] +
call sub_432860  +
test eax eax +
jz loc_432AA0  +
movzx eax byte ptr [ebx] +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_432AF4  +
mov eax ebx +
mov ecx edi +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_432AE7  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or ebp eax +
add edi 7 +
test bl bl +
jns loc_432B32  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_432860  +
test eax eax +
jz loc_432B40  +
cmp edi 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_432AD0  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_432AED  +
mov edx offset aLeb128Overflow +
mov eax esi +
call sub_432800  +
add edi 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_432AF4  +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 2 +
jz loc_432BC0  +
jle loc_432B80  +
cmp edx 4 +
jz loc_432B70  +
cmp edx 8 +
jnz loc_432BA6  +
add esp 8 +
pop ebx  +
jmp sub_432920  +
call sub_4328B0  +
xor edx edx +
add esp 8 +
pop ebx  +
retn   +
cmp edx 1 +
jnz loc_432BA6  +
mov edx 1 +
mov ebx [eax+8] +
call sub_432860  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_432B77  +
movzx eax byte ptr [ebx] +
add esp 8 +
xor edx edx +
pop ebx  +
retn   +
mov edx offset aUnrecognizedAd +
call sub_432800  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
call sub_432A30  +
add esp 8 +
xor edx edx +
pop ebx  +
movzx eax ax +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_432C14  +
mov eax ebx +
mov ecx ebp +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_432C07  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or edi eax +
add ebp 7 +
test bl bl +
jns loc_432C52  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_432860  +
test eax eax +
jz loc_432C90  +
cmp ebp 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_432BF0  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_432C0D  +
mov edx offset aSignedLeb128Ov +
mov eax esi +
call sub_432800  +
add ebp 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_432C14  +
and ebx 40h +
jz loc_432C7B  +
cmp ebp 3Fh +
ja loc_432C7B  +
mov ecx ebp +
mov eax 0FFFFFFFFh +
shl eax cl +
xor ebx ebx +
mov edx 0FFFFFFFFh +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebx +
or [esp+28h+var_1C] edx +
or edi eax +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov ebp [esp+30h+arg_0] +
mov edi [esp+30h+arg_4] +
mov ebx [esp+30h+arg_10] +
mov [esp+30h+var_1C] edx +
mov edx [esp+30h+arg_C] +
mov [esp+30h+var_18] edx +
cmp eax 10h +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
jz loc_433092  +
ja loc_432D40  +
cmp eax 8 +
jz loc_432F60  +
jbe loc_432DC0  +
cmp eax 0Ch +
lea esi [esi+0] +
jz loc_432E72  +
ja loc_432E20  +
cmp eax 0Ah +
nop   +
jz loc_433060  +
ja loc_432E72  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_432AB0  +
mov edx eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_432860  +
cmp eax 17h +
jz loc_432E50  +
jbe loc_432D96  +
cmp eax 1F01h +
jz loc_432F10  +
ja loc_432DF1  +
cmp eax 19h +
nop   +
jz loc_433040  +
jb loc_432FF0  +
cmp eax 20h +
nop   +
jnz loc_432E0A  +
mov dword ptr [ebx] 7 +
mov eax esi +
call sub_432920  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 13h +
jz loc_432FB0  +
jbe loc_432EA7  +
cmp eax 15h +
jz loc_433000  +
nop   +
ja loc_432F83  +
mov dword ptr [ebx] 4 +
jmp loc_432D7C  +
cmp eax 4 +
jz loc_432F97  +
jbe loc_432EE0  +
cmp eax 6 +
jz loc_433087  +
nop   +
lea esi [esi+0] +
ja loc_432FD1  +
mov dword ptr [ebx] 1 +
jmp loc_432EBF  +
cmp eax 1F20h +
jz loc_432E50  +
cmp eax 1F21h +
jz loc_432E50  +
cmp eax 1F02h +
jz loc_432F10  +
mov eax esi +
mov edx offset aUnrecognizedDw +
call sub_432800  +
xor eax eax +
jmp loc_432E6A  +
cmp eax 0Eh +
jz loc_433010  +
ja loc_432FE0  +
mov dword ptr [ebx] 2 +
mov eax esi +
call sub_432BD0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_432E6A  +
mov dword ptr [ebx] 6 +
mov edx ecx +
mov eax esi +
call sub_432A10  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 1 +
mov edx 1 +
mov eax esi +
mov edi [esi+8] +
call sub_432860  +
xor edx edx +
xor ecx ecx +
test eax eax +
jz loc_432E94  +
movzx edx byte ptr [edi] +
xor ecx ecx +
mov [ebx+8] edx +
mov eax 1 +
mov [ebx+0Ch] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 11h +
jz loc_432F50  +
cmp eax 12h +
jnz loc_432E0A  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_432A30  +
mov dword ptr [ebx+0Ch] 0 +
movzx eax ax +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_432E6A  +
cmp eax 1 +
jz loc_432F30  +
cmp eax 3 +
jnz loc_432E0A  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_432A30  +
movzx edx ax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_432860  +
mov dword ptr [ebx] 6 +
mov eax esi +
call sub_432AB0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 0 +
mov edx edi +
mov eax esi +
call sub_432B50  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_432E6A  +
mov dword ptr [ebx] 4 +
jmp loc_432E78  +
mov eax [esi+8] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov edx [esi+0Ch] +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_2C] edx +
call sub_4558B0  +
lea edx [eax+1] +
jmp loc_432EFE  +
mov eax esi +
mov [esp+30h+var_14] ecx +
call sub_432AB0  +
mov ecx [esp+30h+var_14] +
jmp loc_432CC5  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_4328B0  +
mov edx eax +
jmp loc_432D2B  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_4328B0  +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_432E6A  +
mov dword ptr [ebx] 1 +
jmp loc_432D7C  +
mov dword ptr [ebx] 1 +
jmp loc_432F16  +
mov dword ptr [ebx] 9 +
jmp loc_432D22  +
mov dword ptr [ebx] 4 +
jmp loc_432F16  +
mov edx ecx +
mov eax esi +
call sub_432A10  +
cmp edx 0 +
ja loc_433028  +
cmp eax [esp+30h+var_18] +
jb loc_4330A6  +
mov eax esi +
mov edx offset aDw_form_strpOu +
call sub_432800  +
xor eax eax +
jmp loc_432E6A  +
mov dword ptr [ebx] 1 +
mov eax 1 +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_432E6A  +
mov dword ptr [ebx] 8 +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_432860  +
xor edx edx +
test eax eax +
jz loc_432EFE  +
movzx edx byte ptr [ebx] +
jmp loc_432EFE  +
mov dword ptr [ebx] 1 +
jmp loc_432FB6  +
cmp ebp 2 +
mov dword ptr [ebx] 5 +
jnz loc_432E56  +
jmp loc_432F36  +
add eax [esp+30h+var_1C] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_432E6A  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov edi [esp+0ACh+arg_1C] +
lea esi [esp+0ACh+var_2C] +
mov [esp+0ACh+var_54] eax +
mov [esp+0ACh+var_50] edx +
mov [esp+0ACh+var_88] ecx +
lea eax [edi+28h] +
mov [esp+0ACh+var_5C] eax +
mov eax [esp+0ACh+var_88] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_433344  +
mov eax [esp+0ACh+var_88] +
call sub_432AB0  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_433344  +
mov ebx [esp+0ACh+arg_18] +
mov edx eax +
mov eax [esp+0ACh+var_5C] +
mov [esp+0ACh+var_A8] ebx +
mov ebx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] ebx +
call sub_4324F0  +
test eax eax +
mov ebp eax +
jz loc_43350F  +
mov eax [eax+10h] +
test eax eax +
jz loc_433490  +
mov edx [ebp+14h] +
xor ebx ebx +
mov [esp+0ACh+var_6C] 0 +
mov [esp+0ACh+var_64] 0 +
mov [esp+0ACh+var_60] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_7C] 0 +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [esp+0ACh+var_68] 0 +
mov [esp+0ACh+var_74] 0 +
mov [esp+0ACh+var_70] 0 +
jmp loc_4331CE  +
cmp eax 1Bh +
jz loc_433430  +
cmp eax 55h +
jz loc_4333F2  +
cmp eax 12h +
jz loc_4333C0  +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp [ebp+10h] ebx +
jbe loc_433258  +
mov edx ecx +
mov eax [edx+ebx*8+4] +
mov edx [esp+0ACh+arg_4] +
mov ecx [edi+10h] +
mov [esp+0ACh+var_9C] esi +
mov [esp+0ACh+var_A0] edx +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_A8] edx +
mov edx [edi+0Ch] +
mov [esp+0ACh+var_AC] edx +
mov edx [esp+0ACh+var_88] +
call sub_432CA0  +
test eax eax +
jz loc_433350  +
mov ecx [ebp+14h] +
mov eax [ecx+ebx*8] +
cmp eax 11h +
jz loc_433387  +
ja loc_4331A0  +
cmp eax 3 +
jz loc_433360  +
cmp eax 10h +
jnz loc_4331C0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jnz loc_433520  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
add ebx 1 +
cmp [ebp+10h] ebx +
ja loc_4331CC  +
mov eax [ebp+8] +
cmp eax 2Eh +
jz loc_433269  +
cmp eax 11h +
jnz loc_433490  +
mov eax [esp+0ACh+var_6C] +
test eax eax +
jnz loc_433538  +
mov ebx [esp+0ACh+var_68] +
test ebx ebx +
jz loc_433490  +
mov ecx [esp+0ACh+var_7C] +
test ecx ecx +
jz loc_433490  +
mov edx [esp+0ACh+var_58] +
test edx edx +
jz loc_4332A5  +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
add [esp+0ACh+var_84] eax +
adc [esp+0ACh+var_80] edx +
mov edx [esp+0ACh+var_74] +
mov ecx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_80] +
mov [esp+0ACh+var_1C] edi +
mov eax edx +
mov [esp+0ACh+var_28] ecx +
mov ecx [esp+0ACh+var_84] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_28] +
mov [esp+0ACh+var_2C] edx +
mov [esp+0ACh+var_20] ebx +
mov edx ecx +
mov [esp+0ACh+var_24] ecx +
mov ecx [esp+0ACh+arg_20] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_A4] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] ecx +
mov ecx [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_90] ecx +
mov ecx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
mov [esp+0ACh+var_94] ecx +
call sub_432050  +
test eax eax +
jz loc_433350  +
cmp dword ptr [ebp+8] 11h +
jnz loc_433490  +
mov eax 1 +
lea esi [esi+0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+8] 11h +
jnz loc_4331C0  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov [edi+1Ch] eax +
jmp loc_4331C0  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_68] 1 +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jmp loc_4331C0  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_433457  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_4331C0  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jz loc_433407  +
cmp eax 1 +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 1 +
mov [esp+0ACh+var_64] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_60] eax +
jmp loc_4331C0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_4331C0  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov [edi+20h] eax +
jmp loc_4331C0  +
cmp eax 1 +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_58] 1 +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_4331C0  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4330EB  +
mov eax [esp+0ACh+arg_20] +
mov ecx [esp+0ACh+var_88] +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+arg_C] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+arg_8] +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_54] +
call sub_4330C0  +
test eax eax +
jnz loc_4330EB  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_4331C0  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
jmp loc_43324C  +
cmp [esp+0ACh+var_60] 0 +
jbe loc_433564  +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset aRangesOffsetOu +
mov [esp+0ACh+var_AC] eax +
call [esp+0ACh+arg_14]  +
xor eax eax +
jmp loc_433511  +
mov eax [esp+0ACh+var_64] +
cmp eax [esp+0ACh+arg_C] +
jnb loc_43353F  +
mov eax [esp+0ACh+arg_8] +
mov ecx [esp+0ACh+var_64] +
mov [esp+0ACh+var_2C] offset a_debug_ranges +
mov [esp+0ACh+var_10] 0 +
mov [esp+0ACh+var_28] eax +
mov eax [esp+0ACh+arg_8] +
add eax ecx +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+arg_C] +
sub eax ecx +
xor ecx ecx +
mov [esp+0ACh+var_20] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_1C] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_18] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_14] eax +
test ecx ecx +
jnz loc_43350F  +
mov edx [edi+14h] +
mov eax esi +
call sub_432B50  +
mov [esp+0ACh+var_78] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_7C] eax +
mov eax esi +
call sub_432B50  +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_80] edx +
mov ecx [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_78] +
mov ebx [esp+0ACh+var_80] +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_4336E9  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_4336B0  +
jle loc_433690  +
cmp ecx 4 +
jz loc_4336D0  +
cmp ecx 8 +
jnz loc_433700  +
mov ecx [esp+0ACh+var_7C] +
mov ebx [esp+0ACh+var_78] +
mov eax ecx +
and eax ebx +
cmp eax 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_433700  +
mov ecx [esp+0ACh+var_10] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
test ecx ecx +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jz loc_4335ED  +
xor eax eax +
jmp loc_433511  +
cmp ecx 1 +
jnz loc_433700  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor bl 0FFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43365E  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor ebx 0FFFFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43365E  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
not ebx  +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43365E  +
mov eax [esp+0ACh+var_10] +
test eax eax +
jz loc_43333A  +
xor eax eax +
jmp loc_433511  +
mov ecx [esp+0ACh+var_7C] +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_78] +
mov [esp+0ACh+var_34] edi +
add ecx eax +
mov [esp+0ACh+var_7C] ecx +
adc ebx edx +
add eax [esp+0ACh+var_84] +
mov [esp+0ACh+var_44] ecx +
mov [esp+0ACh+var_40] ebx +
mov ecx eax +
mov [esp+0ACh+var_3C] eax +
mov eax [esp+0ACh+arg_20] +
adc edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_38] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_40] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_38] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
call sub_432050  +
test eax eax +
jz loc_43350F  +
mov ecx [esp+0ACh+var_10] +
jmp loc_4335E5  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
mov ebx edx +
sub esp 5Ch +
mov esi [ebx+8] +
mov edx [esp+68h+arg_4] +
mov eax [esp+68h+arg_0] +
cmp edi edx +
jbe loc_4337E1  +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] offset aAbstractOrigin +
mov [esp+68h+var_68] eax +
call [esp+68h+arg_8]  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_433940  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_4337BC  +
cmp eax ecx +
jnb loc_4337BC  +
mov edx [ebp+10h] +
sub ecx eax +
mov [esp+68h+var_2C] ecx +
mov [esp+68h+var_38] offset a_debug_info +
mov [esp+68h+var_1C] 0 +
mov [esp+68h+var_34] edx +
mov edx [ebx] +
add edx eax +
mov eax [ebp+30h] +
mov [esp+68h+var_30] edx +
mov [esp+68h+var_28] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_24] eax +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_20] eax +
lea eax [esp+68h+var_38] +
call sub_432AB0  +
mov esi eax +
mov eax edx +
or eax esi +
mov ecx edx +
jz loc_4339EA  +
mov edi [esp+68h+arg_C] +
mov edx esi +
lea eax [ebx+28h] +
mov [esp+68h+var_64] edi +
mov edi [esp+68h+arg_8] +
mov [esp+68h+var_68] edi +
call sub_4324F0  +
test eax eax +
mov esi eax +
jz loc_4339E0  +
mov eax [eax+10h] +
test eax eax +
jz loc_4339E0  +
mov [esp+68h+var_54] 0 +
mov [esp+68h+var_4C] 0 +
jmp loc_4338B9  +
cmp eax 3 +
jnz loc_4338A7  +
mov eax [esp+68h+var_4C] +
cmp [esp+68h+var_48] 3 +
cmovz eax [esp+68h+var_40] +
mov [esp+68h+var_4C] eax +
add [esp+68h+var_54] 1 +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
jbe loc_4339D0  +
mov eax [esp+68h+var_54] +
mov edx [ebp+2Ch] +
mov ecx [ebx+10h] +
lea edi ds:0[eax*8] +
mov eax [esi+14h] +
mov [esp+68h+var_50] edx +
lea edx [esp+68h+var_48] +
mov eax [eax+edi+4] +
mov [esp+68h+var_58] edx +
mov edx [esp+68h+var_50] +
mov [esp+68h+var_5C] edx +
mov edx [ebp+28h] +
mov [esp+68h+var_60] edx +
mov edx [ebx+14h] +
mov [esp+68h+var_64] edx +
mov edx [ebx+0Ch] +
mov [esp+68h+var_68] edx +
lea edx [esp+68h+var_38] +
call sub_432CA0  +
test eax eax +
jz loc_4339E0  +
add edi [esi+14h] +
mov eax [edi] +
cmp eax 47h +
jz loc_433960  +
jbe loc_433890  +
cmp eax 6Eh +
jz loc_433926  +
cmp eax 2007h +
jnz loc_4338A7  +
cmp [esp+68h+var_48] 3 +
jnz loc_4338A7  +
mov eax [esp+68h+var_40] +
jmp loc_4337D9  +
cmp esi eax +
ja loc_4337BC  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_4337BC  +
jmp loc_4337F3  +
mov eax [edi+4] +
cmp eax 10h +
jz loc_4338A7  +
cmp eax 20h +
nop   +
jz loc_4338A7  +
mov eax [esp+68h+var_48] +
cmp eax 4 +
jz loc_433988  +
cmp eax 1 +
jnz loc_4338A7  +
mov eax [esp+68h+arg_C] +
mov edx [esp+68h+var_3C] +
mov [esp+68h+var_5C] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_64] edx +
mov edx ebx +
mov [esp+68h+var_60] eax +
mov eax [esp+68h+var_40] +
mov [esp+68h+var_68] eax +
mov eax ebp +
call sub_4337A0  +
test eax eax +
cmovz eax [esp+68h+var_4C] +
add [esp+68h+var_54] 1 +
mov [esp+68h+var_4C] eax +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
ja loc_4338B9  +
lea esi [esi+0] +
mov eax [esp+68h+var_4C] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+68h+var_38] +
mov edx offset aInvalidAbstrac +
call sub_432800  +
xor eax eax +
jmp loc_4337D9  +
***
mov edi edx +
push esi  +
mov esi edi +
push ebx  +
mov edi ecx +
sub esp 0ACh +
mov [esp+0B4h+var_40] eax +
mov eax [esp+0B4h+arg_0] +
mov edx [esp+0B4h+arg_4] +
mov [esp+0B4h+var_4C] eax +
lea eax [ecx+28h] +
mov [esp+0B4h+var_48] edx +
mov [esp+0B4h+var_58] eax +
***
mov eax [esp+arg_C4] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_43431C  +
mov eax [esp+arg_C4] +
call sub_432AB0  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_43431C  +
mov ebx [esp+arg_D0] +
mov edx eax +
mov eax [esp+arg_58] +
mov [esp+arg_0] ebx +
mov ebx [esp+arg_CC] +
mov [esp+0] ebx +
call sub_4324F0  +
test eax eax +
mov ebp eax +
jz loc_433FF4  +
mov eax [eax+8] +
cmp eax 2Eh +
jz loc_433C30  +
cmp eax 3 +
jz loc_433C30  +
xor edx edx +
cmp eax 1Dh +
setz dl  +
mov [esp+arg_38] edx +
cmp eax 1Dh +
mov eax [esp+arg_D8] +
cmovnz eax [esp+arg_D4] +
mov [esp+arg_44] 0 +
mov [esp+arg_78] eax +
mov eax [esp+arg_38] +
test eax eax +
jnz loc_434035  +
mov eax [ebp+10h] +
mov [esp+arg_54] 0 +
mov [esp+arg_60] 0 +
mov [esp+arg_6C] 0 +
test eax eax +
mov [esp+arg_74] 0 +
mov [esp+arg_48] 0 +
mov [esp+arg_3C] 0 +
mov [esp+arg_40] 0 +
mov [esp+arg_5C] 0 +
mov [esp+arg_4C] 0 +
mov [esp+arg_50] 0 +
jz loc_433C97  +
mov [esp+arg_24] 0 +
jmp loc_433B94  +
mov eax [esp+arg_38] +
test eax eax +
jz loc_433B82  +
add ebx [ebp+14h] +
mov eax [ebx] +
cmp eax 47h +
jz loc_433F0E  +
jbe loc_433C40  +
cmp eax 59h +
jz loc_433EB2  +
lea esi [esi+0] +
ja loc_433E92  +
cmp eax 55h +
jz loc_433F80  +
cmp eax 58h +
jnz loc_433B82  +
cmp [esp+arg_7C] 1 +
jz loc_434090  +
add [esp+arg_24] 1 +
mov eax [esp+arg_24] +
cmp [ebp+10h] eax +
jbe loc_433C97  +
mov eax [esp+arg_24] +
mov edx [esi+2Ch] +
mov ecx [edi+10h] +
lea ebx ds:0[eax*8] +
mov eax [ebp+14h] +
mov [esp+arg_2C] edx +
lea edx [esp+arg_7C] +
mov eax [eax+ebx+4] +
mov [esp+arg_C] edx +
mov edx [esp+arg_2C] +
mov [esp+arg_8] edx +
mov edx [esi+28h] +
mov [esp+arg_4] edx +
mov edx [edi+14h] +
mov [esp+arg_0] edx +
mov edx [edi+0Ch] +
mov [esp+0] edx +
mov edx [esp+arg_C4] +
call sub_432CA0  +
test eax eax +
jz loc_433FF4  +
cmp dword ptr [ebp+8] 11h +
jnz loc_433B35  +
mov eax [ebp+14h] +
cmp dword ptr [eax+ebx] 11h +
jnz loc_433B35  +
mov eax [esp+arg_7C] +
test eax eax +
jnz loc_433B35  +
mov eax [esp+arg_84] +
mov edx [esp+arg_88] +
mov [esp+arg_64] eax +
mov [esp+arg_68] edx +
jmp loc_433B35  +
***
mov [esp+arg_38] 1 +
jmp loc_433AA6  +
***
cmp eax 11h +
jz loc_433ED3  +
jbe loc_433E57  +
cmp eax 12h +
jnz loc_433F05  +
mov eax [esp+arg_7C] +
test eax eax +
jnz loc_434001  +
mov eax [esp+arg_84] +
add [esp+arg_24] 1 +
mov edx [esp+arg_88] +
mov [esp+arg_48] 1 +
mov [esp+arg_3C] eax +
mov eax [esp+arg_24] +
cmp [ebp+10h] eax +
mov [esp+arg_40] edx +
ja loc_433B94  +
mov eax [esp+arg_38] +
test eax eax +
jz loc_43415B  +
mov eax [esp+arg_44] +
mov eax [eax] +
test eax eax +
jz loc_434129  +
mov ecx [esp+arg_54] +
test ecx ecx +
jnz loc_433FB8  +
mov eax [esp+arg_48] +
test eax eax +
jz loc_434129  +
mov eax [esp+arg_5C] +
test eax eax +
jz loc_434129  +
mov eax [esp+arg_74] +
test eax eax +
jnz loc_4340F0  +
mov eax [esp+arg_78] +
mov edx [esi+4] +
mov ecx [esp+arg_3C] +
mov ebx [esp+arg_40] +
mov [esp+arg_14] eax +
mov eax [esp+arg_D0] +
mov [esp+arg_4] ecx +
mov ecx [esp+arg_4C] +
mov [esp+arg_8] ebx +
mov ebx [esp+arg_50] +
mov [esp+arg_10] eax +
mov eax [esp+arg_CC] +
mov [esp+0] ecx +
mov ecx [esp+arg_44] +
mov [esp+arg_0] ebx +
mov [esp+arg_C] eax +
mov eax [esp+arg_70] +
call sub_432640  +
test eax eax +
jz loc_433FF4  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_433A31  +
lea eax [esp+arg_7C] +
mov edx [esp+arg_68] +
mov ecx edi +
mov [esp+arg_18] eax +
mov eax [esp+arg_D4] +
mov [esp+arg_7C] 0 +
mov [esp+arg_80] 0 +
mov [esp+arg_0] edx +
mov edx esi +
mov [esp+arg_14] eax +
mov eax [esp+arg_D0] +
mov [esp+arg_84] 0 +
mov [esp+arg_88] 0 +
mov [esp+arg_10] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_C] eax +
mov eax [esp+arg_C8] +
mov [esp+arg_8] eax +
mov eax [esp+arg_C4] +
mov [esp+arg_4] eax +
mov eax [esp+arg_64] +
mov [esp+0] eax +
mov eax [esp+arg_70] +
call sub_433A00  +
test eax eax +
jz loc_433FF4  +
mov ebp [esp+arg_88] +
test ebp ebp +
jz loc_433A31  +
mov eax [esp+arg_D0] +
mov [esp+arg_8] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_4] eax +
lea eax [esp+arg_7C] +
mov [esp+arg_0] eax +
mov eax [esp+arg_70] +
mov [esp+0] eax +
call sub_4309A0  +
test eax eax +
jz loc_433FF4  +
mov ebx [esp+arg_7C] +
mov eax [esp+arg_88] +
mov [esp+arg_8] offset loc_432750 +
mov [esp+arg_4] 18h +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_431DD0  +
mov ecx [esp+arg_44] +
mov eax [esp+arg_88] +
mov [ecx+0Ch] ebx +
mov [ecx+10h] eax +
jmp loc_433A31  +
cmp eax 3 +
jnz loc_433B82  +
cmp [esp+arg_7C] 3 +
jnz loc_433B82  +
mov eax [esp+arg_44] +
mov ecx [eax] +
test ecx ecx +
jnz loc_433B82  +
lea esi [esi+0] +
mov eax [esp+arg_84] +
mov ecx [esp+arg_44] +
mov [ecx] eax +
jmp loc_433B82  +
cmp eax 6Eh +
jz loc_433EA2  +
cmp eax 2007h +
jnz loc_433B82  +
cmp [esp+arg_7C] 3 +
jnz loc_433B82  +
jmp loc_433E80  +
cmp [esp+arg_7C] 1 +
jnz loc_433B82  +
mov eax [esp+arg_84] +
mov ecx [esp+arg_44] +
mov [ecx+8] eax +
jmp loc_433B82  +
mov edx [esp+arg_7C] +
test edx edx +
jnz loc_433B82  +
mov eax [esp+arg_84] +
mov edx [esp+arg_88] +
mov [esp+arg_5C] 1 +
mov [esp+arg_4C] eax +
mov [esp+arg_50] edx +
jmp loc_433B82  +
cmp eax 31h +
jnz loc_433B82  +
mov eax [ebx+4] +
cmp eax 10h +
jz loc_433B82  +
cmp eax 20h +
jz loc_433B82  +
mov eax [esp+arg_7C] +
cmp eax 4 +
jz loc_433F38  +
cmp eax 1 +
jnz loc_433B82  +
mov eax [esp+arg_D0] +
mov edx [esp+arg_88] +
mov [esp+arg_8] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_0] edx +
mov edx edi +
mov [esp+arg_4] eax +
mov eax [esp+arg_84] +
mov [esp+0] eax +
mov eax esi +
call sub_4337A0  +
test eax eax +
jnz loc_433E87  +
jmp loc_433B82  +
***
mov eax [esp+arg_7C] +
cmp eax 6 +
jz loc_433F95  +
cmp eax 1 +
jnz loc_433B82  +
mov eax [esp+arg_84] +
mov [esp+arg_54] 1 +
mov [esp+arg_60] eax +
mov eax [esp+arg_88] +
mov [esp+arg_6C] eax +
jmp loc_433B82  +
xor edx edx +
mov ecx [esi+24h] +
cmp edx [esp+arg_6C] +
ja loc_4341D1  +
jb loc_433FD3  +
cmp ecx [esp+arg_60] +
ja loc_4341D1  +
mov eax [esp+arg_D0] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] offset aFunctionRanges +
mov [esp+0] eax +
call [esp+arg_CC]  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_433B82  +
mov eax [esp+arg_84] +
mov edx [esp+arg_88] +
mov [esp+arg_74] 1 +
mov [esp+arg_48] 1 +
mov [esp+arg_3C] eax +
mov [esp+arg_40] edx +
jmp loc_433B82  +
mov eax [esp+arg_D0] +
mov [esp+arg_0] 14h +
mov [esp+arg_8] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_4] eax +
mov eax [esp+arg_70] +
mov [esp+0] eax +
call sub_4308A0  +
test eax eax +
mov [esp+arg_44] eax +
jz loc_433FF4  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jmp loc_433AD0  +
***
mov edx [esp+arg_88] +
mov eax [esp+arg_84] +
mov ecx edx +
or ecx eax +
jnz loc_4340B4  +
mov eax [esp+arg_44] +
mov dword ptr [eax+4] offset unk_478029 +
jmp loc_433B82  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+arg_2C] ecx +
mov ecx [esp+arg_C8] +
mov [esp+arg_30] ebx +
cmp [esp+arg_30] 0 +
mov ecx [ecx+24h] +
jbe loc_434105  +
mov eax [esp+arg_C4] +
mov edx offset aInvalidFileNum +
call sub_432800  +
jmp loc_433FF4  +
***
mov eax [esp+arg_4C] +
mov edx [esp+arg_50] +
add [esp+arg_3C] eax +
adc [esp+arg_40] edx +
jmp loc_433CE1  +
cmp [esp+arg_2C] ecx +
jnb loc_4340D7  +
mov ecx [esp+arg_C8] +
add eax 3FFFFFFFh +
mov edx [ecx+28h] +
mov ecx [esp+arg_44] +
mov eax [edx+eax*4] +
mov [ecx+4] eax +
jmp loc_433B82  +
mov eax [esp+arg_D0] +
mov [esp+arg_4] 14h +
mov [esp+arg_C] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_8] eax +
mov eax [esp+arg_44] +
mov [esp+arg_0] eax +
mov eax [esp+arg_70] +
mov [esp+0] eax +
call sub_4308F0  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_433A31  +
mov eax [esp+arg_D8] +
mov ecx edi +
mov edx [esp+arg_68] +
mov [esp+arg_18] eax +
mov eax [esp+arg_D4] +
mov [esp+arg_0] edx +
mov edx esi +
mov [esp+arg_14] eax +
mov eax [esp+arg_D0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_C] eax +
mov eax [esp+arg_C8] +
mov [esp+arg_8] eax +
mov eax [esp+arg_C4] +
mov [esp+arg_4] eax +
mov eax [esp+arg_64] +
mov [esp+0] eax +
mov eax [esp+arg_70] +
call sub_433A00  +
test eax eax +
jnz loc_433A31  +
jmp loc_433FF4  +
mov eax [esi+20h] +
mov ebx [esp+arg_60] +
mov edx [esp+arg_68] +
mov [esp+arg_7C] offset a_debug_ranges +
mov [esp+arg_80] eax +
add eax ebx +
sub ecx ebx +
mov [esp+arg_84] eax +
mov eax [esi+30h] +
mov [esp+arg_88] ecx +
xor ecx ecx +
mov [esp+arg_98] 0 +
mov [esp+arg_30] edx +
mov [esp+arg_8C] eax +
mov eax [esp+arg_CC] +
mov [esp+arg_38] esi +
mov [esp+arg_90] eax +
mov eax [esp+arg_D0] +
mov [esp+arg_94] eax +
mov eax [esp+arg_64] +
mov [esp+arg_2C] eax +
test ecx ecx +
jnz loc_433FF4  +
mov edx [edi+14h] +
lea eax [esp+arg_7C] +
call sub_432B50  +
mov esi edx +
mov ebx eax +
mov [esp+arg_28] edx +
mov edx [edi+14h] +
mov [esp+arg_24] eax +
lea eax [esp+arg_7C] +
call sub_432B50  +
mov ecx ebx +
mov ebx esi +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_434326  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_4342F0  +
jle loc_4342D6  +
cmp ecx 4 +
jz loc_434308  +
cmp ecx 8 +
jnz loc_434340  +
mov ecx [esp+arg_24] +
mov ebx [esp+arg_28] +
mov esi ecx +
and esi ebx +
cmp esi 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_434340  +
mov ecx [esp+arg_98] +
mov [esp+arg_2C] eax +
mov [esp+arg_30] edx +
test ecx ecx +
jz loc_43424B  +
jmp loc_433FF4  +
cmp ecx 1 +
jnz loc_434340  +
mov ebx [esp+arg_24] +
mov ecx [esp+arg_28] +
xor bl 0FFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_4342B2  +
mov ebx [esp+arg_24] +
mov ecx [esp+arg_28] +
xor ebx 0FFFFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_4342B2  +
mov ebx [esp+arg_24] +
mov esi [esp+arg_28] +
not ebx  +
or ebx esi +
setz cl  +
movzx ecx cl +
jmp loc_4342B2  +
mov eax 1 +
jmp loc_433FF6  +
mov eax [esp+arg_98] +
mov esi [esp+arg_38] +
test eax eax +
jz loc_433D36  +
jmp loc_433FF4  +
***
mov ecx [esp+arg_2C] +
***
jl near ptr loc_4342D1+3  +
pop esp  +
and al 34h +
add eax ecx +
mov [esp-4+arg_8] eax +
mov eax [esp-4+arg_28] +
mov [esp-4+arg_18] esi +
mov esi [esp-4+arg_D4] +
adc edx ebx +
mov [esp-4+arg_C] edx +
mov edx [esp-4+arg_2C] +
add eax ecx +
mov ecx [esp-4+arg_48] +
mov [esp-4+arg_14] esi +
mov esi [esp-4+arg_D0] +
mov [esp-4+arg_0] eax +
mov eax [esp-4+arg_3C] +
adc edx ebx +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_10] esi +
mov edx [eax+4] +
mov eax [esp-4+arg_74] +
call sub_432640  +
test eax eax +
jz loc_433FF4  +
mov ecx [esp+9Ch] +
jmp loc_434243  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0ECh +
mov edi [esp+0ECh+arg_C] +
mov [esp+0ECh+var_C0] eax +
mov eax [ebx+8] +
mov [esp+0ECh+var_C8] edx +
mov [esp+0ECh+var_90] ecx +
mov dword ptr [edi] 1 +
mov edx [edx+0Ch] +
mov [esp+0ECh+var_E8] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_431F90 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E4] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
jz loc_4347A0  +
mov edi [ebx+8] +
mov edx eax +
mov ebx [ebx+0Ch] +
sub edx edi +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] ebx +
add edx 1 +
cmp edx ebx +
jnb loc_434442  +
xor ebx ebx +
mov ecx [esp+0ECh+var_90] +
cmp ebx [eax+1Ch] +
jb loc_434442  +
ja loc_434437  +
cmp ecx [eax+18h] +
jb loc_434442  +
cmp ebx [eax+24h] +
jb loc_43444B  +
lea esi [esi+0] +
jbe loc_434446  +
mov ebp eax +
jmp loc_43447A  +
cmp ecx [eax+20h] +
jnb loc_434442  +
mov ebp eax +
lea esi [esi+0] +
add ebp 18h +
mov edx ebp +
sub edx edi +
sar edx 3 +
imul edx edx +
add edx 1 +
cmp edx [esp+0ECh+var_CC] +
jnb loc_43447A  +
mov esi ebp +
sub esi eax +
lea edx [eax+30h] +
cmp [esi+edx-14h] ebx +
jbe loc_434606  +
mov esi [ebp+10h] +
cmp ebp edi +
mov ebx [esi+30h] +
jbe loc_434499  +
xor edx edx +
mov eax [esp+0ECh+var_90] +
cmp [ebp-14h] edx +
jb loc_43463E  +
jbe loc_434635  +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
mov [esp+0ECh+var_C4] eax +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
jnz loc_4346C6  +
test ebx ebx +
jz loc_4347E1  +
cmp ebx 0FFFFFFFFh +
jz loc_434780  +
mov eax [ebp+10h] +
mov eax [eax+34h] +
mov [esp+0ECh+var_DC] offset loc_431FE0 +
mov [esp+0ECh+var_E0] 10h +
mov [esp+0ECh+var_E8] ebx +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov [esp+0ECh+var_C8] eax +
jz loc_4347BA  +
mov edx [ebp+10h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_4346E0  +
mov edx [edx+38h] +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_431F40 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov ebx eax +
jz loc_4346E0  +
mov edx [ebp+10h] +
mov eax [edx+38h] +
mov edi [edx+3Ch] +
mov edx ebx +
sub edx eax +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] edi +
add edx 1 +
cmp edx edi +
jnb loc_434B59  +
mov edi [esp+0ECh+var_90] +
mov [esp+0ECh+var_C4] edi +
mov esi edi +
xor edi edi +
cmp edi [ebx+1Ch] +
jb loc_434586  +
ja loc_434577  +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+18h] +
jb loc_434586  +
cmp edi [ebx+24h] +
jb loc_43472B  +
jbe loc_43471E  +
mov eax [esp+0ECh+var_C4] +
mov edx ebx +
lea esi [esi+0] +
mov edi [esp+0ECh+var_C8] +
lea esi [esp+0ECh+var_38] +
mov ebx [edx+10h] +
mov edx [edi+4] +
lea ecx [ebx+10h] +
mov [esp+0ECh+var_58] edx +
mov edx [edi+8] +
mov edi [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] esi +
lea esi [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_38] edx +
lea edx [ebx+0Ch] +
mov [esp+0ECh+var_E8] edi +
mov edi [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] edi +
call sub_432370  +
test eax eax +
jnz loc_434713  +
mov eax [ebx] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_58] +
jmp loc_4346F6  +
jb loc_434612  +
cmp [esi+edx-18h] ecx +
ja loc_43447A  +
cmp [esi+edx-0Ch] ebx +
jb loc_43447A  +
ja loc_434450  +
cmp [esi+edx-10h] ecx +
jbe loc_43447A  +
lea esi [esi+0] +
jmp loc_434450  +
cmp [ebp-18h] eax +
ja loc_434499  +
cmp edx [ebp-0Ch] +
jb loc_434656  +
ja loc_434499  +
cmp eax [ebp-10h] +
lea esi [esi+0] +
jnb loc_434499  +
mov edi [esp+0ECh+var_C0] +
lea ecx [ebp-28h] +
mov edi [edi+4] +
mov [esp+0ECh+var_C4] edi +
mov [esp+0ECh+var_CC] edi +
mov edi [esp+0ECh+var_CC] +
test edi edi +
jnz loc_4346D0  +
cmp ebx 0FFFFFFFFh +
jnz loc_4344A4  +
mov edi [esp+0ECh+var_C8] +
sub ebp 18h +
mov esi [ebp+10h] +
cmp [edi+8] ebp +
mov ebx [esi+30h] +
jnb loc_4344A4  +
cmp edx [ecx-4] +
jb loc_4344A4  +
ja loc_4346A6  +
cmp eax [ecx-8] +
lea esi [esi+0] +
jb loc_4344A4  +
sub ecx 18h +
cmp edx [ecx+1Ch] +
ja loc_4344A4  +
jb loc_434668  +
cmp eax [ecx+18h] +
jb loc_434668  +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
nop   +
jz loc_4344B0  +
mov ebx [esi+30h] +
jmp loc_4344B0  +
mov ebx [esi+30h] +
mov edi [esp+0ECh+var_CC] +
mov [esp+0ECh+var_C4] edi +
jmp loc_434670  +
mov eax [esp+0ECh+var_C8] +
mov edx [eax+8] +
mov eax [eax+4] +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] edx +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_0]  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+20h] +
jnb loc_434586  +
mov edx ebx +
lea esi [esi+0] +
add edx 18h +
mov ecx edx +
sub ecx eax +
sar ecx 3 +
imul ecx ecx +
add ecx 1 +
cmp ecx [esp+0ECh+var_CC] +
jnb loc_434756  +
mov ebp edx +
sub ebp ebx +
lea ecx [ebx+30h] +
cmp [ebp+ecx-14h] edi +
jbe loc_434760  +
mov eax [esp+0ECh+var_C4] +
jmp loc_434590  +
jb loc_434768  +
cmp [ebp+ecx-18h] esi +
ja loc_434756  +
cmp [ebp+ecx-0Ch] edi +
jb loc_434756  +
nop   +
ja loc_434730  +
cmp [ebp+ecx-10h] esi +
jbe loc_434756  +
jmp loc_434730  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] 0 +
jmp loc_4346FA  +
mov eax [esp+0ECh+arg_C] +
mov dword ptr [eax] 0 +
add esp 0ECh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+10h] +
mov ebx [eax+24h] +
test ebx ebx +
jz loc_434A5C  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] ebx +
jmp loc_4346FA  +
mov eax [ebp+10h] +
mov ecx 0Bh +
lea edi [esp+0ECh+var_38] +
mov [esp+0ECh+var_88] 0 +
mov [esp+0ECh+var_84] 0 +
mov edx eax +
mov [esp+0ECh+var_A4] eax +
mov eax ebx +
stos   +
mov edi [esp+0ECh+var_C8] +
mov [esp+0ECh+var_80] 0 +
mov [esp+0ECh+var_7C] 0 +
mov eax [edx+18h] +
mov edx [edi+1Ch] +
cmp eax edx +
jnb loc_434A2E  +
mov edi [esp+0ECh+var_C8] +
sub edx eax +
xor ebx ebx +
mov [esp+0ECh+var_78] offset a_debug_line +
mov [esp+0ECh+var_6C] edx +
mov [esp+0ECh+var_5C] 0 +
mov ecx [edi+18h] +
mov [esp+0ECh+var_74] ecx +
add ecx eax +
mov eax [edi+30h] +
mov [esp+0ECh+var_70] ecx +
mov [esp+0ECh+var_68] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_64] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_60] eax +
lea eax [esp+0ECh+var_78] +
call sub_4328B0  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_434FD3  +
mov [esp+0ECh+var_6C] eax +
lea eax [esp+0ECh+var_78] +
call sub_432A30  +
movzx eax ax +
mov [esp+0ECh+var_38] eax +
sub eax 2 +
cmp eax 2 +
ja loc_434B3E  +
mov edx ebx +
lea eax [esp+0ECh+var_78] +
call sub_432A10  +
mov edx [esp+0ECh+var_78] +
lea edi [esp+0ECh+var_88] +
mov [esp+0ECh+var_58] edx +
mov edx [esp+0ECh+var_74] +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_54] edx +
mov edx [esp+0ECh+var_70] +
mov [esp+0ECh+var_50] edx +
mov edx [esp+0ECh+var_68] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_40] edx +
mov edx [esp+0ECh+var_5C] +
mov [esp+0ECh+var_3C] edx +
mov edx eax +
lea eax [esp+0ECh+var_78] +
call sub_432860  +
mov [esp+0ECh+var_CC] edi +
test eax eax +
jnz loc_434B64  +
mov eax [esp+0ECh+var_84] +
mov ebx 0FFFFFFFFh +
add [esp+0ECh+var_80] eax +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_C0] +
mov [esp+0ECh+var_84] 0 +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E8] eax +
call sub_4309A0  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax edi +
xor edi edi +
call sub_4321C0  +
xor eax eax +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_CC] 0 +
mov ecx [esp+0ECh+var_C0] +
mov ecx [ecx+4] +
test ecx ecx +
mov ecx [esp+0ECh+var_C4] +
jnz loc_434B29  +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+34h] ecx +
mov [esi+30h] ebx +
mov [esi+3Ch] edi +
cmp ebx 0FFFFFFFFh +
jnz loc_4344C1  +
test eax eax +
jz loc_434780  +
mov eax [esp+0ECh+arg_C] +
mov ecx [esp+0ECh+var_90] +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_4343B0  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] 0 +
mov [esp+0ECh+var_E8] offset aUnitLineOffset +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_4]  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_434941  +
mov ebx [eax+1Ch] +
test ebx ebx +
jz loc_434B21  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jz loc_434B21  +
cmp dl 2Fh +
jz loc_434B21  +
test dl dl +
jz loc_434A8A  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_434B21  +
mov edx [eax+20h] +
test edx edx +
mov [esp+0ECh+var_C8] edx +
jz loc_434B21  +
mov [esp+0ECh+var_EC] ebx +
call strlen  +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_EC] edx +
mov edi eax +
mov [esp+0ECh+var_CC] eax +
call strlen  +
mov esi eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
lea eax [edi+esi+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_4308A0  +
mov edx [esp+0ECh+var_C8] +
test eax eax +
mov edi eax +
jz loc_4347A0  +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov edx [esp+0ECh+var_CC] +
lea eax [edi+esi+1] +
mov byte ptr [edi+esi] 2Fh +
mov [esp+0ECh+var_E8] ebx +
mov ebx edi +
mov [esp+0ECh+var_EC] eax +
add edx 1 +
mov [esp+0ECh+var_E4] edx +
call memcpy  +
mov eax [ebp+10h] +
mov [eax+24h] ebx +
jmp loc_4347C8  +
mov [esi+34h] ecx +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+3Ch] edi +
mov [esi+30h] ebx +
jmp loc_4349D6  +
lea eax [esp+0ECh+var_78] +
mov edx offset aUnsupportedLin +
call sub_432800  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_434941  +
mov eax [esp+0ECh+var_90] +
mov edx ebx +
jmp loc_434590  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
xor edx edx +
test eax eax +
jz loc_434B85  +
movzx edx byte ptr [ebx] +
cmp [esp+0ECh+var_38] 3 +
mov [esp+0ECh+var_34] edx +
jg loc_434FE3  +
mov [esp+0ECh+var_30] 1 +
lea eax [esp+0ECh+var_58] +
call sub_432A80  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
test eax eax +
jz loc_434BD0  +
movsx eax byte ptr [ebx] +
mov [esp+0ECh+var_2C] eax +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
xor edx edx +
test eax eax +
jz loc_434BF8  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_28] edx +
lea eax [esp+0ECh+var_58] +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
call sub_432860  +
test eax eax +
jz loc_434FC7  +
movzx eax byte ptr [ebx] +
lea edx [eax-1] +
mov [esp+0ECh+var_24] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_20] eax +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
test eax eax +
jz loc_434FBA  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_1C] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_435865  +
cmp byte ptr [ebx] 0 +
jnz loc_434C85  +
jmp loc_435865  +
cmp byte ptr [ebx] 0 +
jz loc_434CAE  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E8] eax +
call sub_4558B0  +
lea ebx [ebx+eax+1] +
mov eax [esp+0ECh+var_1C] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_1C] eax +
ja loc_434C80  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
xor ebx ebx +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_4308A0  +
test eax eax +
mov [esp+0ECh+var_18] eax +
jnz loc_434D3D  +
jmp loc_434FBA  +
mov edx [esp+0ECh+var_3C] +
test edx edx +
jnz loc_434FBA  +
mov edx [esp+0ECh+var_18] +
mov [edx+ebx] eax +
mov eax [esp+0ECh+var_4C] +
add ebx 4 +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_EC] eax +
call sub_4558B0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
test eax eax +
jz loc_434FBA  +
mov eax [esp+0ECh+var_50] +
cmp byte ptr [eax] 0 +
jnz loc_434CF0  +
mov edx 1 +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
test eax eax +
jz loc_434FBA  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_14] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_43585E  +
cmp byte ptr [ebx] 0 +
jz loc_43585E  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_4558B0  +
lea edx [ebx+eax+1] +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_434DB6  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_434DAC  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_434DCC  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_434DC2  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_434DE2  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_434DD8  +
lea ebx [edx+eax] +
mov eax [esp+0ECh+var_14] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_14] eax +
jbe loc_434DFF  +
cmp byte ptr [ebx] 0 +
jnz loc_434D8E  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_4308A0  +
test eax eax +
mov [esp+0ECh+var_10] eax +
jz loc_434FBA  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_435075  +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_434FBA  +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_C4] esi +
jmp loc_434F61  +
cmp cl 2Fh +
jz loc_434F9F  +
test cl cl +
jz loc_434E87  +
cmp byte ptr [edi+1] 3Ah +
jz loc_434F9F  +
mov ebx edx +
or ebx eax +
jnz loc_435010  +
mov eax [esp+0ECh+var_A4] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_434F9F  +
mov [esp+0ECh+var_EC] ecx +
mov [esp+0ECh+var_B4] ecx +
call strlen  +
mov [esp+0ECh+var_EC] edi +
mov ebx eax +
call strlen  +
mov ebp eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+ebp+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_4308A0  +
mov ecx [esp+0ECh+var_B4] +
test eax eax +
mov esi eax +
jz loc_434FB2  +
mov [esp+0ECh+var_E8] ecx +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
lea eax [esi+ebx+1] +
lea ecx [ebp+1] +
mov byte ptr [esi+ebx] 2Fh +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_E4] ecx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov eax [esp+0ECh+var_10] +
mov edi [esp+0ECh+var_BC] +
mov [eax+edi] esi +
lea eax [esp+0ECh+var_58] +
call sub_432AB0  +
lea eax [esp+0ECh+var_58] +
call sub_432AB0  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_43506D  +
mov eax [esp+0ECh+var_3C] +
add [esp+0ECh+var_BC] 4 +
test eax eax +
jnz loc_434FB2  +
mov eax [esp+0ECh+var_4C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_4558B0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
test eax eax +
jz loc_434FB2  +
lea eax [esp+0ECh+var_58] +
call sub_432AB0  +
movzx ecx byte ptr [edi] +
cmp cl 5Ch +
jnz loc_434E70  +
mov eax [esp+0ECh+var_10] +
mov ebx [esp+0ECh+var_BC] +
mov [eax+ebx] edi +
jmp loc_434F29  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_434941  +
mov edx 0FFFFFFFFh +
xor eax eax +
jmp loc_434C25  +
lea eax [esp+0ECh+var_78] +
mov bl 1 +
call sub_432920  +
jmp loc_434895  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_432860  +
xor edx edx +
test eax eax +
jz loc_435004  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_30] edx +
jmp loc_434BA5  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0ECh+var_B0] ebx +
mov ebx [esp+0ECh+var_1C] +
cmp [esp+0ECh+var_B0] 0 +
mov [esp+0ECh+var_B4] ecx +
jbe loc_435053  +
lea eax [esp+0ECh+var_78] +
mov edx offset aInvalidDirecto +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
call sub_432800  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_434941  +
cmp [esp+0ECh+var_B4] ebx +
jnb loc_435030  +
mov edx [esp+0ECh+var_18] +
add eax 3FFFFFFFh +
mov ecx [edx+eax*4] +
jmp loc_434EA0  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_434FBA  +
mov edx [esp+0ECh+var_14] +
test edx edx +
jnz loc_4357D2  +
mov [esp+0ECh+var_94] offset unk_478029 +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
mov eax [esp+0ECh+var_C8] +
mov [esp+0ECh+var_B8] 0 +
mov [esp+0ECh+var_A0] ebp +
add eax 4 +
mov [esp+0ECh+var_A8] eax +
lea esi [esi+0] +
mov eax [esp+0ECh+var_6C] +
test eax eax +
jz loc_435511  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
lea eax [esp+0ECh+var_78] +
call sub_432860  +
test eax eax +
jnz loc_435150  +
mov edx [esp+0ECh+var_24] +
test edx edx +
jz loc_4351A8  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
mov edi eax +
lea eax [esp+0ECh+var_78] +
call sub_432860  +
test eax eax +
jnz loc_435177  +
lea edx [edi-1] +
lea eax [esp+0ECh+var_78] +
call sub_432860  +
test eax eax +
jnz loc_4350E0  +
mov ebp [esp+0ECh+var_A0] +
jmp loc_434941  +
movzx eax byte ptr [ebx] +
mov edx [esp+0ECh+var_24] +
movzx ebp al +
cmp ebp edx +
jnb loc_4351AA  +
test ebp ebp +
jz loc_435114  +
cmp al 0Ch +
ja loc_435376  +
lea esi [esi+0] +
jmp ds:off_478164[ebp*4]  +
movzx eax byte ptr [ebx] +
cmp al 2 +
lea esi [esi+0] +
jz loc_4353A3  +
jbe loc_4354CF  +
cmp al 3 +
nop   +
jz loc_4353C0  +
cmp al 4 +
jnz loc_435135  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
jmp loc_4350E0  +
xor ebp ebp +
mov eax ebp +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
div  [esp+0ECh+var_28] +
add edi eax +
mov eax [esp+0ECh+var_34] +
mov ebp edx +
xor edx edx +
imul eax edi +
div  [esp+0ECh+var_30] +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  [esp+0ECh+var_30] +
add ebp [esp+0ECh+var_2C] +
add [esp+0ECh+var_B4] ebp +
mov [esp+0ECh+var_C4] edx +
mov eax [esp+0ECh+var_CC] +
mov ecx [esp+0ECh+var_BC] +
mov edx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_4325A0  +
jmp loc_4350E0  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
mov edi edx +
or edi eax +
jz loc_435504  +
mov ecx eax +
mov ebx edx +
mov edi [esp+0ECh+var_14] +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
jbe loc_435800  +
mov edx offset aInvalidFileN_0 +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_432800  +
jmp loc_434941  +
lea eax [esp+0ECh+var_78] +
call sub_432BD0  +
add [esp+0ECh+var_B4] eax +
jmp loc_4350E0  +
lea eax [esp+0ECh+var_78] +
call sub_432A30  +
xor edx edx +
mov [esp+0ECh+var_C4] 0 +
movzx eax ax +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
jmp loc_4350E0  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
mov edi [esp+0ECh+var_30] +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_9C] eax +
mov eax [esp+0ECh+var_C4] +
mov [esp+0ECh+var_98] edx +
xor edx edx +
add [esp+0ECh+var_9C] eax +
adc [esp+0ECh+var_98] edx +
xor ebp ebp +
mov eax [esp+0ECh+var_34] +
mov ecx [esp+0ECh+var_98] +
mov [esp+0ECh+var_E0] ebp +
imul ecx eax +
mul  [esp+0ECh+var_9C] +
add edx ecx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_4549A0  +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_E0] ebp +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
mov eax [esp+0ECh+var_9C] +
mov edx [esp+0ECh+var_98] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_454AB0  +
mov [esp+0ECh+var_C4] eax +
jmp loc_4350E0  +
mov eax 0FFh +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
mov ebp [esp+0ECh+var_30] +
div  [esp+0ECh+var_28] +
xor edx edx +
add edi eax +
mov eax [esp+0ECh+var_34] +
imul eax edi +
div  ebp +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  ebp +
mov [esp+0ECh+var_C4] edx +
jmp loc_4350E0  +
mov eax [esp+0ECh+var_20] +
movzx ebx byte ptr [eax+ebp-1] +
test ebx ebx +
jz loc_4350E0  +
lea esi [esi+0] +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
sub ebx 1 +
jnz loc_435390  +
jmp loc_4350E0  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+14h] +
lea eax [esp+0ECh+var_78] +
call sub_432B50  +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B8] edx +
jmp loc_4350E0  +
mov eax [esp+0ECh+var_70] +
mov edi eax +
mov [esp+0ECh+var_AC] eax +
mov eax [esp+0ECh+var_6C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_4558B0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_78] +
call sub_432860  +
test eax eax +
jz loc_435145  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
mov ebx eax +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
lea eax [esp+0ECh+var_78] +
call sub_432AB0  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_4350E0  +
cmp al 2Fh +
jz loc_4350E0  +
test al al +
jz loc_435433  +
mov eax [esp+0ECh+var_AC] +
cmp byte ptr [eax+1] 3Ah +
jz loc_4350E0  +
test ebx ebx +
jnz loc_4357E4  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+20h] +
mov [esp+0ECh+var_EC] edx +
mov [esp+0ECh+var_9C] edx +
call strlen  +
mov ebx eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
call strlen  +
mov ecx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] ecx +
mov edi eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+edi+2] +
mov [esp+0ECh+var_E8] eax +
call sub_4308A0  +
test eax eax +
mov ebp eax +
jz loc_435145  +
mov edx [esp+0ECh+var_9C] +
add edi 1 +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call memcpy  +
lea eax [ebp+ebx+1] +
mov byte ptr [ebp+ebx+0] 2Fh +
mov [esp+0ECh+var_E4] edi +
mov edi [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edi +
call memcpy  +
mov [esp+0ECh+var_AC] ebp +
jmp loc_4350E0  +
cmp al 1 +
jnz loc_435135  +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
mov [esp+0ECh+var_B8] 0 +
jmp loc_4350E0  +
mov [esp+0ECh+var_AC] offset unk_478029 +
jmp loc_4350E0  +
mov eax [esp+0ECh+var_5C] +
mov ebp [esp+0ECh+var_A0] +
test eax eax +
jnz loc_434941  +
mov eax [esp+0ECh+var_7C] +
test eax eax +
jz loc_434941  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_CC] +
mov ebx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E8] 10h +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_DC] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E4] eax +
call sub_430900  +
test eax eax +
jz loc_434941  +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
call sub_4309A0  +
test eax eax +
jz loc_434941  +
mov eax [esp+0ECh+var_7C] +
mov ebx [esp+0ECh+var_88] +
mov [esp+0ECh+var_E0] offset sub_432330 +
mov [esp+0ECh+var_E4] 10h +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_431DD0  +
mov eax [esp+0ECh+var_7C] +
mov [esp+0ECh+var_C4] eax +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
test eax eax +
jz loc_4357BB  +
lea eax [esp+0ECh+var_78] +
mov edi [ebp+10h] +
mov [esp+0ECh+var_B4] 0 +
mov [esp+0ECh+var_78] 0 +
mov [esp+0ECh+var_74] 0 +
mov [esp+0ECh+var_70] 0 +
mov [esp+0ECh+var_6C] 0 +
mov [esp+0ECh+var_BC] eax +
mov ecx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_58] offset a_debug_info +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_AC] esi +
mov eax [ecx+10h] +
mov esi ecx +
mov edx [ecx+30h] +
mov [esp+0ECh+var_A8] ebx +
mov ebx [esp+0ECh+var_BC] +
mov [esp+0ECh+var_54] eax +
mov eax [edi] +
mov [esp+0ECh+var_50] eax +
mov eax [edi+4] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_3C] 0 +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+arg_8] +
mov [esp+0ECh+var_40] edx +
mov ebp edx +
jmp loc_4356EE  +
mov eax [esp+0ECh+arg_4] +
mov ecx edi +
mov edx esi +
mov [esp+0ECh+var_D0] ebx +
mov [esp+0ECh+var_D4] ebx +
mov [esp+0ECh+var_D8] ebp +
mov [esp+0ECh+var_DC] eax +
lea eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
lea eax [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] 0 +
mov [esp+0ECh+var_E8] 0 +
call sub_433A00  +
test eax eax +
jz loc_4357A3  +
mov eax [esp+0ECh+var_4C] +
test eax eax +
jnz loc_435696  +
mov eax [esp+0ECh+var_BC] +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+0ECh+var_CC] eax +
jz loc_4357AF  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
test edi edi +
mov [esp+0ECh+var_E4] eax +
jz loc_435820  +
mov edi [esp+0ECh+var_C0] +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_430A00  +
test eax eax +
mov edi eax +
jz loc_4357AF  +
mov eax [esp+0ECh+var_B4] +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E0] offset loc_432750 +
mov [esp+0ECh+var_E4] 18h +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_431DD0  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_4321C0  +
mov eax 1 +
jmp loc_4349B3  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_CC] 0 +
xor edi edi +
jmp loc_435778  +
mov eax [esp+0ECh+var_C8] +
mov edi [ebp+10h] +
add eax 34h +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B4] eax +
jmp loc_435620  +
mov eax [esp+0ECh+var_10] +
mov eax [eax] +
mov [esp+0ECh+var_94] eax +
jmp loc_43509B  +
lea eax [ebx-1] +
cmp eax [esp+0ECh+var_1C] +
jnb loc_435847  +
mov eax [esp+0ECh+var_18] +
mov edx [eax+ebx*4-4] +
jmp loc_435442  +
cmp ecx edi +
jnb loc_435266  +
mov edx [esp+0ECh+var_10] +
add eax 3FFFFFFFh +
mov eax [edx+eax*4] +
mov [esp+0ECh+var_AC] eax +
jmp loc_4350E0  +
lea eax [esp+0ECh+var_78] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_4309A0  +
test eax eax +
jz loc_4357AF  +
mov eax [esp+0ECh+var_BC] +
mov edi [eax] +
jmp loc_435758  +
mov edx offset aInvalidDirec_0 +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_432800  +
jmp loc_434941  +
xor eax eax +
jmp loc_434E02  +
xor eax eax +
jmp loc_434CB1  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_4358E0  +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_435924  +
lea ebp [esp+3Ch+var_10] +
jmp loc_4358B2  +
mov edx [esp+3Ch+var_10] +
test edx edx +
jnz loc_435951  +
mov ebx [ebx] +
test ebx ebx +
jz loc_435924  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_4343B0  +
test eax eax +
jz loc_4358A0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
lea ebp [esp+3Ch+var_10] +
lea ebx [eax+10h] +
jmp loc_43591E  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_4343B0  +
test eax eax +
jnz loc_4358D8  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jnz loc_435951  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4358F0  +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] eax +
call esi  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+0FCh+arg_8] +
mov edx [esp+0FCh+arg_C] +
mov [esp+0FCh+var_9C] 0 +
mov [esp+0FCh+var_98] 0 +
mov [esp+0FCh+var_88] eax +
mov [esp+0FCh+var_84] eax +
mov eax [esp+0FCh+arg_C] +
test edx edx +
mov [esp+0FCh+var_94] 0 +
mov [esp+0FCh+var_90] 0 +
mov [esp+0FCh+var_8C] offset a_debug_info +
mov [esp+0FCh+var_80] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_70] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [esp+0FCh+var_7C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_78] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_74] eax +
jz loc_4362D9  +
mov eax [esp+0FCh+arg_8] +
mov [esp+0FCh+var_B0] eax +
nop   +
lea esi [esi+0] +
lea eax [esp+0FCh+var_8C] +
call sub_4328B0  +
mov [esp+0FCh+var_D0] 0 +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_435E52  +
mov eax [esp+0FCh+var_8C] +
mov [esp+0FCh+var_60] edx +
mov [esp+0FCh+var_6C] eax +
mov eax [esp+0FCh+var_88] +
mov [esp+0FCh+var_68] eax +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_64] eax +
mov eax [esp+0FCh+var_7C] +
mov [esp+0FCh+var_5C] eax +
mov eax [esp+0FCh+var_78] +
mov [esp+0FCh+var_58] eax +
mov eax [esp+0FCh+var_74] +
mov [esp+0FCh+var_54] eax +
mov eax [esp+0FCh+var_70] +
mov [esp+0FCh+var_50] eax +
lea eax [esp+0FCh+var_8C] +
call sub_432860  +
test eax eax +
jz loc_435B02  +
lea eax [esp+0FCh+var_6C] +
call sub_432A30  +
movzx eax ax +
mov [esp+0FCh+var_C8] eax +
sub eax 2 +
cmp eax 2 +
ja loc_4362C3  +
mov edx [esp+0FCh+var_D0] +
lea eax [esp+0FCh+var_6C] +
call sub_432A10  +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
cmp edx 0 +
jbe loc_435B70  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 0 +
mov [esp+0FCh+var_F8] offset aAbbrevOffsetOu +
mov [esp+0FCh+var_FC] eax +
call [esp+0FCh+arg_34]  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_432220  +
mov ebx [esp+0FCh+var_90] +
mov esi [esp+0FCh+var_9C] +
test ebx ebx +
jz loc_435B63  +
mov edi [esp+0FCh+arg_34] +
xor ebx ebx +
mov ebp [esp+0FCh+arg_38] +
nop   +
mov eax [esi+10h] +
mov ecx edi +
add ebx 1 +
mov [esp+0FCh+var_FC] ebp +
add esi 18h +
lea edx [eax+28h] +
mov eax [esp+0FCh+arg_0] +
call sub_432220  +
cmp ebx [esp+0FCh+var_90] +
jb loc_435B40  +
add esp 0FCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esp+0FCh+arg_1C] +
jnb loc_435AE1  +
mov edi [esp+0FCh+arg_18] +
mov edx eax +
xor ebx ebx +
mov ecx [esp+0FCh+arg_1C] +
mov [esp+0FCh+var_4C] offset a_debug_abbrev +
mov [esp+0FCh+var_30] 0 +
add edx edi +
mov [esp+0FCh+var_48] edi +
mov edi [esp+0FCh+arg_30] +
sub ecx eax +
mov eax ecx +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_40] ecx +
mov ecx [esp+0FCh+arg_38] +
mov [esp+0FCh+var_3C] edi +
mov edi [esp+0FCh+arg_34] +
mov [esp+0FCh+var_44] edx +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_34] ecx +
mov [esp+0FCh+var_38] edi +
mov edi [esp+0FCh+arg_18] +
mov [esp+0FCh+var_2C] offset a_debug_abbrev +
mov [esp+0FCh+var_18] eax +
lea eax [esp+0FCh+var_2C] +
mov [esp+0FCh+var_24] edx +
mov [esp+0FCh+var_28] edi +
mov [esp+0FCh+var_14] ecx +
mov [esp+0FCh+var_10] 0 +
call sub_432AB0  +
or edx eax +
jz loc_435CB1  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_435B02  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_432AB0  +
lea eax [esp+0FCh+var_2C] +
call sub_432A80  +
jmp loc_435C85  +
call sub_432AB0  +
lea eax [esp+0FCh+var_2C] +
call sub_432AB0  +
or edx eax +
lea eax [esp+0FCh+var_2C] +
jnz loc_435C80  +
call sub_432AB0  +
lea eax [esp+0FCh+var_2C] +
call sub_432AB0  +
or edx eax +
jnz loc_435C53  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_435B02  +
test ebx ebx +
jnz loc_435E6A  +
mov edx 1 +
mov ebx [esp+0FCh+var_64] +
lea eax [esp+0FCh+var_6C] +
call sub_432860  +
test eax eax +
mov esi eax +
jz loc_435CE9  +
movzx esi byte ptr [ebx] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 40h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4308A0  +
test eax eax +
mov ebx eax +
jz loc_435B02  +
mov eax [esp+0FCh+var_64] +
lea ecx [esp+0FCh+var_6C] +
mov edx [esp+0FCh+var_60] +
mov [ebx+14h] esi +
lea esi [esp+0FCh+var_9C] +
mov dword ptr [ebx+1Ch] 0 +
mov [ebx] eax +
sub eax [esp+0FCh+var_B0] +
mov [ebx+4] edx +
mov edx [esp+0FCh+var_A0] +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax [esp+0FCh+var_C8] +
mov dword ptr [ebx+24h] 0 +
mov [ebx+2Ch] edx +
mov dword ptr [ebx+18h] 0 +
mov [ebx+0Ch] eax +
mov eax [esp+0FCh+var_D0] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0 +
mov [ebx+10h] eax +
mov eax [esp+0FCh+var_A4] +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [ebx+28h] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_DC] esi +
mov [esp+0FCh+var_E0] ebx +
mov [esp+0FCh+var_E4] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_E8] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_24] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_20] +
mov edx [esp+0FCh+arg_4] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_2C] +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+arg_28] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_4330C0  +
test eax eax +
jz loc_4360C0  +
mov eax [esp+0FCh+var_50] +
test eax eax +
jnz loc_4360C0  +
mov ebp [esp+0FCh+var_80] +
test ebp ebp +
jz loc_43613F  +
mov eax [esp+0FCh+var_70] +
test eax eax +
jnz loc_435B02  +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_B0] eax +
jmp loc_435A10  +
lea eax [esp+0FCh+var_8C] +
call sub_432920  +
mov [esp+0FCh+var_D0] 1 +
mov edx eax +
jmp loc_435A2C  +
lea eax [ebx+ebx*2] +
mov [esp+0FCh+var_A4] ebx +
lea ebx ds:0[eax*8] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4308A0  +
test eax eax +
mov [esp+0FCh+var_A0] eax +
jz loc_435B02  +
mov [esp+0FCh+var_F4] ebx +
mov [esp+0FCh+var_F8] 0 +
mov [esp+0FCh+var_FC] eax +
call memset  +
mov eax [esp+0FCh+var_30] +
test eax eax +
jnz loc_436029  +
mov [esp+0FCh+var_C4] 0 +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
mov ecx edx +
or ecx eax +
mov [esp+0FCh+var_C0] eax +
mov [esp+0FCh+var_BC] edx +
jz loc_436116  +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
mov edx 1 +
mov ebx [esp+0FCh+var_44] +
mov [esp+0FCh+var_B8] eax +
lea eax [esp+0FCh+var_4C] +
call sub_432860  +
test eax eax +
mov [esp+0FCh+var_CC] eax +
jz loc_435F2D  +
movzx eax byte ptr [ebx] +
mov [esp+0FCh+var_CC] eax +
mov eax [esp+0FCh+var_4C] +
xor ebx ebx +
mov [esp+0FCh+var_2C] eax +
mov eax [esp+0FCh+var_48] +
mov [esp+0FCh+var_28] eax +
mov eax [esp+0FCh+var_44] +
mov [esp+0FCh+var_24] eax +
mov eax [esp+0FCh+var_40] +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+var_3C] +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+var_38] +
mov [esp+0FCh+var_18] eax +
mov eax [esp+0FCh+var_34] +
mov [esp+0FCh+var_14] eax +
mov eax [esp+0FCh+var_30] +
mov [esp+0FCh+var_10] eax +
jmp loc_435FB0  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_432AB0  +
lea eax [esp+0FCh+var_2C] +
call sub_432AB0  +
or edx eax +
jnz loc_435FA1  +
test ebx ebx +
jnz loc_436050  +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
mov [esp+0FCh+var_B4] 0 +
mov eax [esp+0FCh+var_C4] +
mov ecx [esp+0FCh+var_C0] +
add eax [esp+0FCh+var_A0] +
mov edi [esp+0FCh+var_CC] +
add [esp+0FCh+var_C4] 18h +
mov [eax] ecx +
mov ecx [esp+0FCh+var_BC] +
mov [eax+0Ch] edi +
mov [eax+10h] ebx +
mov [eax+4] ecx +
mov ecx [esp+0FCh+var_B8] +
mov [eax+8] ecx +
mov ecx [esp+0FCh+var_B4] +
mov [eax+14h] ecx +
mov eax [esp+0FCh+var_30] +
test eax eax +
jz loc_435ED8  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_432220  +
jmp loc_435B02  +
mov eax [esp+0FCh+arg_38] +
shl ebx 3 +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4308A0  +
test eax eax +
mov esi eax +
mov [esp+0FCh+var_B4] eax +
jz loc_436029  +
xor ebx ebx +
jmp loc_43609B  +
mov [esi] edi +
add ebx 1 +
add esi 8 +
mov [esi-4] eax +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
mov edi eax +
mov ebp edx +
lea eax [esp+0FCh+var_4C] +
call sub_432AB0  +
or ebp edi +
jnz loc_436090  +
jmp loc_435FE8  +
mov eax [esp+0FCh+arg_38] +
lea edx [ebx+28h] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_432220  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 40h +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4308F0  +
jmp loc_435B02  +
mov eax [esp+0FCh+var_A4] +
mov [esp+0FCh+var_F0] offset loc_432000 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+var_A0] +
mov [esp+0FCh+var_FC] eax +
call sub_431DD0  +
jmp loc_435CC8  +
mov edi [esp+0FCh+var_70] +
test edi edi +
jnz loc_435B02  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] esi +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4309A0  +
test eax eax +
jz loc_435B63  +
mov ebx [esp+0FCh+var_9C] +
mov esi [esp+0FCh+var_90] +
mov [esp+0FCh+var_F0] offset loc_4322B0 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_FC] ebx +
mov [esp+0FCh+var_F8] esi +
call sub_431DD0  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 44h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_4308A0  +
test eax eax +
mov edx eax +
jz loc_435B63  +
mov dword ptr [eax] 0 +
mov eax [esp+0FCh+arg_4] +
mov dword ptr [edx+34h] 0 +
mov dword ptr [edx+38h] 0 +
mov dword ptr [edx+3Ch] 0 +
mov [edx+4] eax +
mov eax [esp+0FCh+arg_8] +
mov dword ptr [edx+40h] 0 +
mov [edx+8] ebx +
mov [edx+0Ch] esi +
mov [edx+10h] eax +
mov eax [esp+0FCh+arg_C] +
mov [edx+14h] eax +
mov eax [esp+0FCh+arg_10] +
mov [edx+18h] eax +
mov eax [esp+0FCh+arg_14] +
mov [edx+1Ch] eax +
mov eax [esp+0FCh+arg_20] +
mov [edx+20h] eax +
mov eax [esp+0FCh+arg_24] +
mov [edx+24h] eax +
mov eax [esp+0FCh+arg_28] +
mov [edx+28h] eax +
mov eax [esp+0FCh+arg_2C] +
mov [edx+2Ch] eax +
mov eax [esp+0FCh+arg_30] +
mov [edx+30h] eax +
mov eax [esp+0FCh+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_4362AD  +
mov eax [esp+0FCh+arg_0] +
lea ebx [eax+10h] +
mov ecx ebx +
jmp loc_436284  +
mov ecx eax +
mov eax [ecx] +
test eax eax +
jnz loc_436282  +
cmpxchg [ecx] edx +
jnz loc_43627E  +
mov eax [esp+0FCh+arg_3C] +
mov dword ptr [eax] offset sub_435870 +
add esp 0FCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+10h] +
mov eax [eax+10h] +
test eax eax +
jz loc_4362BF  +
mov ecx eax +
mov eax [eax] +
test eax eax +
jnz loc_4362B7  +
mov [ecx] edx +
jmp loc_436290  +
mov edx offset aUnrecognized_0 +
lea eax [esp+0FCh+var_6C] +
call sub_432800  +
jmp loc_435B02  +
lea esi [esp+0FCh+var_9C] +
jmp loc_43614E  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_4680F0 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_4803AC +
mov esi ds:dword_4803A8 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_436365  +
cmp [esp+14h+var_14] esi +
jle loc_436365  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_436384  +
test edx edx +
jle loc_4363BD  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_436350  +
cmp esi edi +
jg loc_436324  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_4803A8 edi +
mov ds:dword_4803AC eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_4363B5  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_4363A0  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_436320  +
add edi edx +
jmp loc_436320  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_4680F0 +
mov ds:dword_4803A4 0 +
test eax eax +
jnz loc_436630  +
mov dword_4680F0 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_4803A8 eax +
mov ds:dword_4803AC eax +
mov ds:dword_4803B8 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_4803B0 eax +
cmp dl 2Dh +
jz loc_4368C3  +
cmp dl 2Bh +
jz loc_436872  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_4803B4 eax +
mov ds:dword_4803A0 1 +
mov edx ds:dword_4803B8 +
test edx edx +
jz loc_436643  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_436643  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_4366F4  +
mov eax dword_4680F0 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_4364F2  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_4366F4  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_4364F2  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_4364F2  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_4364E8  +
jmp loc_436DAA  +
cmp bl dl +
jz loc_436A63  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4364E0  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_436513  +
cmp al 3Dh +
jnz loc_436509  +
jmp loc_436513  +
test al al +
jz loc_436513  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_436505  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_4369C2  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_436564  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4365A8  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_436558  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_436993  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_436550  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_436564  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_436930  +
mov eax dword_4680EC +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_4365FF  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4803B8 +
mov esi dword_4680F0 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_4680F0 esi +
mov dword_4680E8 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4803B8 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4803A0 +
test esi esi +
jz loc_4363FD  +
jmp loc_436452  +
mov eax dword_4680F0 +
cmp ds:dword_4803A8 eax +
jle loc_436655  +
mov ds:dword_4803A8 eax +
cmp eax ds:dword_4803AC +
jge loc_436662  +
mov ds:dword_4803AC eax +
mov ebx ds:dword_4803B4 +
cmp ebx 1 +
jz loc_4367E0  +
cmp [esp+4Ch+arg_0] eax +
jz loc_43684C  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_4781EC +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4367B0  +
mov edx ds:dword_4803AC +
add eax 1 +
mov ecx ds:dword_4803A8 +
mov dword_4680F0 eax +
cmp edx ecx +
jz loc_4369A0  +
cmp eax ecx +
jz loc_4366D1  +
mov eax [esp+4Ch+arg_4] +
call sub_4362F0  +
mov edx ds:dword_4803AC +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_4803A8 eax +
mov dword_4680F0 eax +
jnz loc_43685F  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_4803B8 ecx +
test al al +
jz loc_436732  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_436C21  +
mov eax [esp+4Ch+arg_8] +
jmp loc_436728  +
cmp dl bl +
jz loc_4368D7  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_436720  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_43674A  +
add dword_4680F0 1 +
test dl dl +
jz loc_436901  +
mov ecx dword_4680EC +
test ecx ecx +
jz loc_436921  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_4803B0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_436B9B  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_4680E8 eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_436886  +
test ebx ebx +
jz loc_4366E7  +
add eax 1 +
mov dword_4680F0 eax +
mov eax 1 +
mov ds:dword_4803A4 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_4803AC +
mov edx ds:dword_4803A8 +
cmp ecx edx +
jz loc_436A51  +
cmp eax edx +
jz loc_436806  +
mov eax [esp+4Ch+arg_4] +
call sub_4362F0  +
mov eax dword_4680F0 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_43683C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_436829  +
add edx 1 +
cmp edx esi +
mov dword_4680F0 edx +
jz loc_4368F0  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_436818  +
cmp byte ptr [eax+1] 0 +
jz loc_436818  +
mov eax dword_4680F0 +
mov ds:dword_4803A8 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_43667B  +
mov eax ds:dword_4803A8 +
mov edx ds:dword_4803AC +
cmp eax edx +
jz loc_4366E7  +
mov dword_4680F0 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4803B4 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_436448  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_4367BA  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_436A47  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_4803B8 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_436473  +
mov ds:dword_4803B4 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_436448  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_436739  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_4803A8 edx +
jmp loc_436842  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_436A77  +
cmp dl 3Ah +
jz loc_436B62  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4367D5  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_43679B  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_4369C2  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_4680F0 eax +
cmp byte ptr [esi] 0 +
jnz loc_4369AC  +
cmp dword ptr [ebx+4] 1 +
jz loc_436C6B  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_4803B8 eax +
jz loc_43697C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_436CBD  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4367D5  +
mov esi [esp+4Ch+var_18] +
jmp loc_436940  +
mov ds:dword_4803AC eax +
mov edx eax +
jmp loc_4366D1  +
mov eax [ebx+4] +
test eax eax +
jz loc_436BA8  +
add esi 1 +
mov ds:dword_4803A4 esi +
jmp loc_43695B  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_436DB4  +
mov esi dword_4680EC +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_436A21  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_436F0E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4680F0 +
add eax 1 +
mov dword_4680F0 eax +
mov eax 3Fh +
mov ds:dword_4803B8 offset unk_4782D8 +
mov dword_4680E8 0 +
jmp loc_4367D5  +
mov eax 1 +
jmp loc_4368A9  +
cmp eax ecx +
jz loc_436806  +
mov ds:dword_4803AC eax +
jmp loc_436806  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_4803B8 ecx +
jmp loc_43670C  +
cmp dl 3Bh +
jnz loc_43690E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_436D7D  +
add dword_4680F0 1 +
mov ds:dword_4803A4 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_4803B8 eax +
cmp bl 3Dh +
jz loc_437053  +
test bl bl +
jz loc_437053  +
mov esi eax +
jmp loc_436AC4  +
test bl bl +
jz loc_436ACF  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_436AC0  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_43703F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_436B28  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_436CC5  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_436B18  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_436EF2  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_436B10  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_436B18  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_436C97  +
cmp byte ptr [eax+1] 0 +
jz loc_436C3D  +
add dword_4680F0 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_4803A4 ecx +
mov ds:dword_4803B8 0 +
jmp loc_4367D5  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_436789  +
mov eax dword_4680EC +
test eax eax +
jz loc_43695B  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_436E14  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4803B8 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4803B8 esi +
mov dword_4680E8 eax +
mov eax 3Fh +
jmp loc_4367D5  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_436739  +
mov eax dword_4680F0 +
cmp eax [esp+4Ch+arg_0] +
jz loc_436E41  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4680F0 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4803A4 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_436B8C  +
cmp [esp+4Ch+arg_0] eax +
jle loc_436D3D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_4680F0 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_4803A4 eax +
jmp loc_43695B  +
cmp byte ptr [eax+1] 0 +
jz loc_436E05  +
add dword_4680F0 1 +
mov ds:dword_4803A4 ecx +
mov ds:dword_4803B8 0 +
jmp loc_436917  +
mov eax [ebx+0Ch] +
jmp loc_4367D5  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_436E6F  +
mov ecx dword_4680EC +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_436D1C  +
mov eax dword_4680F0 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4803B8 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_4680F0 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4803B8 ebx +
jmp loc_4367D5  +
mov eax dword_4680EC +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_436F42  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4803B8 esi +
mov dword_4680E8 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4367A0  +
mov eax 3Ah +
jmp loc_4367D5  +
mov eax dword_4680F0 +
cmp eax [esp+4Ch+arg_0] +
jz loc_436F7A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4680F0 edx +
mov eax [edi+eax*4] +
mov ds:dword_4803A4 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_436A9F  +
movzx eax [esp+4Ch+var_19] +
jmp loc_436A65  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_436F01  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_436DEF  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_43708F  +
mov edx [esp+4Ch+arg_8] +
jmp loc_436DE5  +
cmp cl bl +
jz loc_436A65  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_436DDD  +
cmp dword_4680EC 0 +
jnz loc_4369E7  +
mov eax [esp+4Ch+var_24] +
jmp loc_436A21  +
mov ds:dword_4803A4 0 +
jmp loc_436CAE  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_436BF9  +
mov eax dword_4680EC +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_437014  +
mov eax [esp+4Ch+arg_8] +
mov dword_4680E8 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_436B8C  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_43703F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_436FCA  +
cmp dword ptr [eax+4] 0 +
jnz loc_437081  +
cmp dword_4680EC 0 +
jz loc_436ECE  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4803B8 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4803B8 eax +
mov eax 3Fh +
jmp loc_4367D5  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_436E83  +
cmp dword_4680EC 0 +
jz loc_436DFC  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4680F0 +
jmp loc_436A21  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4803B8 +
jmp loc_436D4E  +
mov eax dword_4680EC +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_436FAE  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_4680E8 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_4367D5  +
cmp dword ptr [eax+4] 1 +
jz loc_43705C  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_4803B8 eax +
jz loc_436FF5  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_437099  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4367D5  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_436E53  +
mov ds:dword_4803B8 0 +
mov eax 57h +
jmp loc_4367D5  +
mov esi [esp+4Ch+var_34] +
jmp loc_436ACF  +
mov eax dword_4680F0 +
cmp [esp+4Ch+arg_0] eax +
jle loc_4370A5  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4680F0 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4803A4 eax +
jmp loc_436FD4  +
add esi 1 +
mov ds:dword_4803A4 esi +
jmp loc_436FD4  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_436A65  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_4367D5  +
cmp dword_4680EC 0 +
jz loc_4370D8  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4803B8 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4803B8 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4367A0  +
jmp loc_436D73  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4363D0  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_0] +
mov off_4680F4 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 14h +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
cmovz ebx edx +
test eax eax +
jz loc_437260  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_43726A  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call malloc  +
jmp loc_437256  +
mov [esp+18h+var_18] ebx +
call sub_437160  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+18h+var_14] +
movzx ecx byte ptr [eax] +
test cl cl +
jz locret_4372A0  +
lea edx [eax+1] +
nop   +
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_437290  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_479A60[ecx+ecx] 88h +
jz loc_4372CA  +
cmp byte ptr [eax+1] 3Ah +
jz loc_4372F0  +
test dl dl +
jz locret_4372E7  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_4372DB  +
cmp dl 2Fh +
jnz loc_4372DD  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_4372D1  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_4372CA  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_4371B0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp loc_45A480  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
test ebp ebp +
jz loc_43741B  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_437410  +
xor eax eax +
add eax 1 +
mov edx [ebp+eax*4+0] +
test edx edx +
jnz loc_4373B8  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_4371B0  +
mov edx [ebp+0] +
test edx edx +
mov edi eax +
jz loc_437417  +
mov ebx 4 +
xor esi esi +
jmp loc_4373E8  +
mov esi ebx +
mov ebx eax +
mov [esp+1Ch+var_1C] edx +
add esi edi +
call sub_437310  +
mov [esi] eax +
mov edx [ebp+ebx+0] +
lea eax [ebx+4] +
test edx edx +
jnz loc_4373E4  +
mov dword ptr [edi+ebx] 0 +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_4373CA  +
xor ebx ebx +
jmp loc_4373FF  +
xor eax eax +
jmp loc_437408  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_437454  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_437446  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_437435  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_437673  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_4371B0  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_4374B3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test byte ptr ds:word_479A60[eax+eax] 40h +
jnz loc_4374B0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_4375F6  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_4375F6  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_437511  +
jmp loc_437556  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_437556  +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 40h +
jz loc_43752A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_437650  +
test esi esi +
jnz loc_437500  +
cmp al 5Ch +
jz loc_4375D6  +
test edi edi +
jz loc_4375C3  +
cmp al 27h +
jz loc_437637  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_437511  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_437310  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 40h +
jz loc_4375A3  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 40h +
jnz loc_437590  +
test al al +
jnz loc_4374B3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_4375E0  +
cmp al 22h +
jnz loc_437546  +
xor ebp ebp +
jmp loc_437507  +
mov esi 1 +
jmp loc_437507  +
cmp al 27h +
jz loc_437640  +
cmp al 22h +
jnz loc_437546  +
mov ebp 1 +
jmp loc_437507  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_437659  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_437230  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_4374EC  +
xor edi edi +
jmp loc_437507  +
mov edi 1 +
jmp loc_437507  +
xor esi esi +
xor ebp ebp +
jmp loc_437556  +
mov [esp+2Ch+var_2C] 20h +
call sub_4371B0  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_43761D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_4375B7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_4376EC  +
mov ebx [edi] +
test ebx ebx +
jnz loc_4376BC  +
jmp loc_43771D  +
cmp al 27h +
jz loc_4376D7  +
cmp al 22h +
jz loc_4376D7  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_4376EC  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_437700  +
movzx edx al +
movsx ebp al +
test byte ptr ds:word_479A60[edx+edx] 40h +
jnz loc_4376D7  +
cmp al 5Ch +
jnz loc_4376A0  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_4376A8  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_4376EC  +
add edi 4 +
jmp loc_437693  +
***
xor eax eax +
nop   +
jmp loc_4376F1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_60] 7D0h +
mov ecx [eax] +
lea esi [esi+0] +
lea ebx [ebp+1] +
cmp ebx ecx +
jge loc_437778  +
mov eax [esp+78h+arg_4] +
lea esi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_437780  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_437757  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+78h+var_60] 1 +
jz loc_437A5A  +
lea edi [eax+1] +
lea eax [esp+78h+var_48] +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] edi +
call ds:_stati64  +
test eax eax +
js loc_4379C0  +
movzx edx [esp+78h+var_42] +
and dx 0F000h +
cmp dx 4000h +
jz loc_437A27  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_74] offset aR_2 +
call fopen  +
test eax eax +
mov edi eax +
jz loc_4379C0  +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4379A8  +
mov [esp+78h+var_78] edi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_5C] eax +
jz loc_4379A8  +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] edi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4379A8  +
mov edx [esp+78h+var_5C] +
lea eax [edx+1] +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_58] edx +
call sub_4371B0  +
mov edx [esp+78h+var_58] +
mov [esp+78h+var_6C] edi +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_70] edx +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_5C] eax +
call fread  +
mov edx [esp+78h+var_58] +
cmp edx eax +
mov ecx eax +
jz loc_437882  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_58] eax +
call ferror  +
mov ecx [esp+78h+var_58] +
test eax eax +
jnz loc_4379A8  +
mov eax [esp+78h+var_5C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_4378BD  +
test byte ptr ds:word_479A60[eax+eax] 40h +
jz loc_4379D0  +
mov eax [esp+78h+var_5C] +
jmp loc_4378B3  +
test byte ptr ds:word_479A60[edx+edx] 40h +
jz loc_4379D0  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4378A5  +
mov [esp+78h+var_78] 4 +
call sub_4371B0  +
mov dword ptr [eax] 0 +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_4373A0  +
mov ecx [esp+78h+arg_4] +
xor edx edx +
mov [ecx] eax +
xor ecx ecx +
mov [esp+78h+var_54] eax +
mov [esp+78h+var_4C] ecx +
mov ecx [esp+78h+arg_0] +
mov eax edx +
mov [esp+78h+var_50] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+var_54] +
mov [esp+78h+var_78] eax +
call sub_437230  +
mov ecx [esp+78h+arg_4] +
mov edx [esp+78h+var_50] +
mov [esp+78h+var_54] edx +
mov [ecx] eax +
mov ecx [esp+78h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+78h+var_70] ecx +
lea ecx [eax+esi+4] +
lea eax [eax+ebx*4] +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_78] eax +
call memmove  +
mov eax [esp+78h+arg_4] +
mov ecx [esp+78h+var_4C] +
mov ebx [esp+78h+var_58] +
add esi [eax] +
mov [esp+78h+var_70] ecx +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_78] esi +
call memcpy  +
mov eax [esp+78h+arg_0] +
mov edx [esp+78h+var_54] +
mov esi [esp+78h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [esi] eax +
mov [esp+78h+var_78] ebx +
mov ebx ebp +
call free  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_78] edi +
mov ebp ebx +
call fclose  +
mov eax [esp+78h+arg_0] +
mov ecx [eax] +
jmp loc_437750  +
mov eax [esp+78h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_437771  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call sub_437460  +
mov edx [eax] +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov [esp+78h+var_50] edx +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_4373A0  +
mov edx [esp+78h+var_50] +
mov ecx [esp+78h+arg_4] +
test edx edx +
mov [esp+78h+var_54] eax +
mov [ecx] eax +
jz loc_437A6A  +
mov eax [esp+78h+var_58] +
xor edx edx +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ecx ds:0[edx*4] +
jnz loc_437A12  +
jmp loc_4378F5  +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov eax [eax] +
mov [esp+78h+var_74] offset aSError@FileRef +
mov [esp+78h+var_70] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+78h+var_78] eax +
call fprintf  +
mov [esp+78h+var_78] 1 +
call sub_449600  +
mov eax [edx] +
mov [esp+78h+var_74] offset aSErrorTooMany@ +
mov [esp+78h+var_70] eax +
jmp loc_437A3E  +
xor ecx ecx +
jmp loc_4378F5  +
***
jmp loc_437A80  +
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_437AA2  +
mov ecx [edx] +
test ecx ecx +
jz locret_437AA0  +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_437A90  +
retn   +
***
retn   +
***
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4363D0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4363D0  +
add esp 2Ch +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test byte ptr ds:word_479A60[esi+esi] 4 +
jz loc_437B75  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test byte ptr ds:word_479A60[esi+esi] 4 +
jnz loc_437B50  +
test ecx ecx +
js loc_437B75  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_437BA0  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_437BC8  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_437BC8  +
mov eax ebx +
call sub_437B30  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_437BC8  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_437C40  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test byte ptr ds:word_479A60[esi+esi] 4 +
jz loc_437C34  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test byte ptr ds:word_479A60[esi+esi] 4 +
jnz loc_437C10  +
cmp dl 5Fh +
mov eax 1 +
jz loc_437C47  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_437C89  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_437CF4  +
mov esi ecx +
test edx edx +
jg loc_437C74  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_437CB2  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_437D10  +
mov esi eax +
test edx edx +
jg loc_437CA0  +
test edi edi +
jz loc_437CD0  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+1Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_437CED  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_437C68  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_437C8D  +
***
push ebx  +
sub esp 18h +
mov edi edx +
cmp eax 56h +
jz loc_437F26  +
cmp eax 75h +
jz loc_437F20  +
cmp eax 43h +
jz loc_437F17  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_437F90  +
mov eax [esi+4] +
test eax eax +
jz loc_43800F  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+54h] +
test eax eax +
jz loc_43802C  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+58h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_438065  +
mov edx [esi+44h] +
test edx edx +
jle loc_438056  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_438040  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_4380A0  +
mov eax [ebx] +
test eax eax +
jz loc_438091  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_4371B0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_4380F0  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_4381D2  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_4381C2  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_438200  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_4380F0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_4784AC +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_43829F  +
mov edx ebx +
mov eax esi +
call sub_438230  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_438330  +
cmp cl 2Bh +
jz loc_438320  +
movzx edx cl +
xor eax eax +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_4382F8  +
jmp loc_438315  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_438310  +
test cl cl +
mov ds:byte_4803BC cl +
jz loc_4382E0  +
mov edx offset byte_4803BC +
mov eax esi +
call sub_438230  +
jmp loc_4382E0  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_4382C8  +
mov edx offset byte_4803BC +
mov eax esi +
mov ds:byte_4803BC 2Dh +
call sub_438230  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_4382C8  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_438395  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_4380F0  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_437FE0  +
mov eax ebp +
call sub_437C60  +
test ebp 1 +
mov eax 60h +
jnz loc_43867B  +
test edi 2 +
jnz loc_438666  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_4383F0  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_4383FB  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_4385A0  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_438461  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4371B0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_438410  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_438653  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_4384C6  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4371B0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_438475  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_438640  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_438531  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4371B0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_4384E0  +
mov eax [ebx+54h] +
test eax eax +
jz loc_438555  +
mov ecx [ebx+58h] +
mov [esp+28h+var_28] eax +
lea edx ds:0[ecx*4] +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] edx +
call sub_43F590  +
mov [ebp+54h] eax +
mov eax [ebx+44h] +
test eax eax +
jnz loc_4385B3  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_438634  +
mov [esp+28h+var_28] 0Ch +
call sub_4371B0  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_438360  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4371B0  +
mov [ebp+4] eax +
jmp loc_438406  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4371B0  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_43855C  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_4385D7  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4371B0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_4385D0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_438567  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4371B0  +
mov [ebp+0Ch] eax +
jmp loc_4384D1  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4371B0  +
mov [ebp+8] eax +
jmp loc_43846C  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_4383D8  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 5Fh +
jmp loc_4383CC  +
***
jmp sub_4386A0  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+48h] +
test eax eax +
jnz loc_438712  +
mov eax [ebx+24h] +
mov ebp edx +
mov esi ecx +
cmp [ebx+20h] eax +
jl loc_4386E2  +
test eax eax +
jz loc_438720  +
cmp eax 3FFFFFFFh +
jg loc_438738  +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edx +
call sub_437230  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+1Ch+var_1C] eax +
call sub_4371B0  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+24h] 3 +
mov [esp+1Ch+var_1C] 0Ch +
call sub_4371B0  +
mov [ebx+4] eax +
jmp loc_4386E2  +
mov [esp+1Ch+var_1C] 7FFFFFFFh +
call sub_437160  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+1Ch+var_18] +
mov byte_4680F8 al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+30h] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] eax +
jmp loc_438788  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_4387E0  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_479224[esi*4] +
lea edi ds:0[esi*4] +
mov [esp] ebp +
call strlen  +
cmp [esp+0Ch] eax +
jnz loc_438780  +
mov eax [esp+34h] +
xor eax ds:dword_479228[esi*4] +
test al 2 +
jnz loc_438780  +
mov eax [esp+0Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_438780  +
mov eax ds:off_479220[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4] +
mov edx offset off_478F60 +
cmp ecx 0FFFFFFFFh +
jnz loc_438804  +
jmp loc_438810  +
cmp eax ecx +
jz loc_438810  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_438800  +
retn   +
***
mov dword_4680FC ecx +
mov eax ecx +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_478F60 +
sub esp 10h +
mov edi [esp+20h] +
jmp loc_438840  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_438852  +
mov eax [ebx] +
mov [esp] edi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jnz loc_438836  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_448880  +
test eax eax +
mov ebx eax +
jz loc_438892  +
mov [esp] eax +
call sub_449680  +
mov [esp] ebx +
test eax eax +
jz loc_4388A0  +
call sub_4499E0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
call free  +
xor ebx ebx +
jmp loc_438892  +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test byte ptr ds:word_479A60[eax+eax] 8 +
jz loc_438AE3  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_4371B0  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 8 +
jnz loc_438A54  +
cmp al 4Fh +
jnz loc_438AEB  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_43895D  +
add ebp 1 +
mov edi ds:off_478D40[ebp*8] +
test edi edi +
jz loc_438AEB  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_438941  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_478D44[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_438B40  +
cmp al 45h +
jnz loc_438A83  +
cmp byte ptr [ebx+1] 0 +
jz loc_438AEB  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_438AAE  +
cmp byte ptr [ebx+1] 0 +
jz loc_438AEB  +
cmp al 58h +
jz loc_438ABE  +
cmp al 53h +
jz loc_438B70  +
cmp al 44h +
nop   +
jz loc_438CF0  +
cmp al 5Fh +
jnz loc_438DFC  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_438CA0  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_438D26  +
cmp al 5Fh +
jz loc_438BD8  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 8 +
jz loc_438925  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 0Ch +
jnz loc_438A54  +
cmp al 5Fh +
jnz loc_4389B3  +
movzx edx byte ptr [ebx+1] +
test byte ptr ds:word_479A60[edx+edx] 0Ch +
jnz loc_438A54  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_438AAE  +
cmp byte ptr [ebx+1] 0 +
jz loc_438D77  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_4389E3  +
cmp al 53h +
jz loc_4389E3  +
cmp al 58h +
jnz loc_4389F5  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_438C7B  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_438AD0  +
cmp al 6Eh +
jz loc_438AD0  +
jmp loc_4389F5  +
mov [esp+38h+var_1C] 0 +
mov eax [esp+38h+var_1C] +
mov [esp+38h+var_38] eax +
call free  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_4371B0  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_438C53  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_3 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_4389CD  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_438C88  +
cmp al 5Fh +
jnz loc_438AEB  +
cmp byte ptr [ebx+3] 5Fh +
jnz loc_438AEB  +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_438911  +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_438AEB  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_438B8D  +
cmp dl 5Fh +
jnz loc_438AEB  +
cmp al 4Fh +
jz loc_438D56  +
jle loc_438C69  +
cmp al 52h +
lea esi [esi+0] +
jz loc_438D60  +
cmp al 57h +
jnz loc_438AEB  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_438A06  +
cmp byte ptr [edi+3] 5Fh +
jz loc_438A3A  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_438C0C  +
add esi 1 +
mov edi ds:off_478C80[esi*8] +
test edi edi +
jz loc_438AEB  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_438BF2  +
mov esi ds:off_478C84[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 49h +
jnz loc_438AEB  +
mov ebp offset aInput +
jmp loc_438BB3  +
cmp al 62h +
jz loc_438AD0  +
jmp loc_4389F5  +
cmp byte ptr [ebx+3] 0 +
lea esi [esi+0] +
jnz loc_438AEB  +
mov ebp esi +
jmp loc_438C43  +
cmp al 45h +
mov ebp edx +
jnz loc_438D6A  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_438CD1  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_438CBE  +
cmp dl 73h +
jnz loc_438AEB  +
cmp byte ptr [eax+1] 0 +
jnz loc_438AEB  +
jmp loc_438C43  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_438DEC  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_438AEB  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_438C43  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_438D52  +
cmp al 5Fh +
jnz loc_438D85  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_438AEB  +
mov ebx edi +
jmp loc_438D28  +
mov ebp offset aOutput +
jmp loc_438BB3  +
mov ebp offset aRead +
jmp loc_438BB3  +
cmp al 42h +
jnz loc_438AEB  +
jmp loc_438CAA  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_438C43  +
cmp al 58h +
jnz loc_438DA2  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_438DF6  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_438D94  +
cmp al 6Eh +
jz loc_438D94  +
cmp al 2Eh +
jnz loc_438DDF  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_438AEB  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_438DDF  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_438DCC  +
test al al +
jnz loc_438AEB  +
jmp loc_438C43  +
mov ebx offset a_adjust +
jmp loc_438D09  +
cmp al 62h +
jz loc_438D94  +
jmp loc_438DA2  +
mov ebp edx +
nop   +
jmp loc_438DA2  +
***
push esi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_439147  +
cmp ecx 4 +
jz loc_439010  +
cmp ecx 6 +
jz loc_4390B0  +
cmp ecx 5 +
jz loc_439110  +
cmp ecx 7 +
jz loc_439246  +
lea edx [ecx-1] +
cmp edx 2 +
ja loc_4390A0  +
cmp al 51h +
jz loc_4391B0  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_4393C0  +
mov eax [ebx] +
mov [esp+54h+var_54] eax +
call strlen  +
cmp ebp eax +
jg loc_4393C0  +
test ebp ebp +
mov ecx [esp+54h+var_3C] +
jnz loc_4391D0  +
mov ecx 1 +
mov edx offset a0_0 +
mov eax esi +
call sub_438170  +
add [ebx] ebp +
add esp 4Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 45h +
jz loc_4393CA  +
cmp al 4Bh +
jz loc_4391B0  +
cmp al 51h +
jz loc_4391B0  +
cmp al 5Fh +
jz loc_439380  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_439428  +
mov eax ebx +
mov edi 1 +
call sub_437B30  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_4390A5  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD_0 +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jz loc_439083  +
mov eax esi +
call sub_438230  +
test edi edi +
jnz loc_43908C  +
cmp ebp 9 +
jle loc_4390A0  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_4390A0  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_4390A0  +
add eax 1 +
mov [ebx] eax +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_439300  +
mov edx offset asc_4784FA +
mov ecx 1 +
mov eax esi +
call sub_438170  +
mov eax ebx +
call sub_437B30  +
xor edx edx +
test eax eax +
jle loc_439105  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_438170  +
mov edx offset asc_4784FA +
mov ecx 1 +
mov eax esi +
call sub_438170  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_437B30  +
test eax eax +
mov edx eax +
jz loc_4393A2  +
xor eax eax +
cmp edx 1 +
jnz loc_4390A5  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_1 +
call sub_438170  +
mov eax 1 +
jmp loc_4390A5  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_4393C0  +
mov edx [edi+40h] +
test edx edx +
jz loc_43916E  +
cmp eax [edi+44h] +
jge loc_4393C0  +
mov eax ebx +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
jz loc_4393C0  +
mov eax [edi+40h] +
test eax eax +
jz loc_439415  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_4390A0  +
cmp byte ptr [edx] 0 +
jz loc_4390A0  +
mov eax esi +
call sub_438230  +
jmp loc_4390A0  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_439C40  +
jmp loc_4390A5  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_4371B0  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_438E10  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_439404  +
test edi edi +
jz loc_4393E1  +
cmp byte ptr [edi] 0 +
jnz loc_439316  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_438FFB  +
cmp al 45h +
jz loc_439441  +
cmp al 6Dh +
jnz loc_439287  +
mov edx offset asc_4784F5 +
mov eax esi +
mov ecx 1 +
call sub_438170  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_439287  +
mov ecx 1 +
mov eax esi +
call sub_438170  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_439270  +
cmp al 2Eh +
jz loc_439324  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_4390A0  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_438170  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_4390A0  +
mov ecx 1 +
mov eax esi +
call sub_438170  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_4392D3  +
jmp loc_4390A0  +
mov cl 1 +
mov edx offset asc_4784F5 +
mov eax esi +
call sub_438170  +
add dword ptr [ebx] 1 +
jmp loc_4390B8  +
mov edx edi +
mov eax esi +
call sub_438230  +
jmp loc_43922D  +
mov ecx 1 +
mov edx offset a_ +
mov eax esi +
call sub_438170  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_4392A1  +
mov ecx 1 +
mov eax esi +
call sub_438170  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jnz loc_439351  +
jmp loc_4392A1  +
cmp byte ptr [edx+1] 6Dh +
jz loc_439458  +
mov eax ebx +
xor edi edi +
call sub_437B80  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_43904E  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_1 +
call sub_438170  +
mov eax 1 +
jmp loc_4390A5  +
mov eax 0FFFFFFFFh +
jmp loc_4390A5  +
mov [esp+54h+var_54] 4 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_439480  +
jmp loc_4390A5  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_439235  +
cmp byte ptr [eax] 0 +
jz loc_439235  +
mov edx eax +
mov eax esi +
call sub_438230  +
jmp loc_439235  +
mov edx offset asc_47850D +
mov eax esi +
call sub_438170  +
jmp loc_43921C  +
mov eax esi +
mov edx ebp +
call sub_438270  +
mov eax 1 +
jmp loc_4390A5  +
mov ecx 1 +
mov edx offset asc_4784F5 +
mov eax esi +
call sub_438170  +
add dword ptr [ebx] 1 +
jmp loc_439040  +
mov [esp+54h+var_54] 7 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_439480  +
jmp loc_4390A5  +
mov ecx 1 +
mov edx offset asc_4784F5 +
mov eax esi +
call sub_438170  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_439040  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_47850F +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_438170  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_4395B5  +
nop   +
test cl cl +
jz loc_4395E8  +
test edx edx +
jz loc_43957C  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_479220 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_43950F  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_4395E8  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_439500  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_439500  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_478511 +
mov ecx 1 +
call sub_438170  +
lea eax [ebx+ebx*2] +
mov edx ds:off_479224[eax*4] +
test edx edx +
jz loc_439563  +
cmp byte ptr [edx] 0 +
jnz loc_4395F4  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_478511 +
call sub_438170  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_438F60  +
test eax eax +
jz loc_4395DB  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_4394D0  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_478513 +
call sub_438170  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_4395B7  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_438230  +
jmp loc_439563  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_439770  +
cmp byte ptr [eax+1] 7Ah +
jz loc_4396E1  +
mov eax ebp +
call sub_437B30  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_439850  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_439850  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_43968C  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_439B4E  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_438170  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_4396B0  +
test ecx ecx +
jnz loc_439B60  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_43982B  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_437BD0  +
test eax eax +
jz loc_439850  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_4397A9  +
lea edx [eax+2] +
mov [ebp+0] edx +
cmp byte ptr [eax+2] 0 +
jz loc_439850  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_439850  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_43971D  +
cmp ebx [eax+44h] +
jge loc_439850  +
mov eax ebp +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
jz loc_439850  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_439C0B  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_43974C  +
cmp byte ptr [edx] 0 +
jnz loc_439BFD  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_439770  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_439770  +
cmp byte ptr [edx] 0 +
jz loc_439770  +
mov eax [esp+58h+arg_0] +
call sub_438230  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_478524+2) +
call sub_438230  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_437BD0  +
test eax eax +
jz loc_439850  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_439B03  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_439974  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_43992B  +
cmp al 7Ah +
jz loc_4399B7  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_43A0A0  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_439804  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_439974  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_439860  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_438F60  +
mov edi eax +
jmp loc_439970  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_478524+2) +
call sub_438230  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_437BD0  +
test eax eax +
jnz loc_43979D  +
lea esi [esi+0] +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_438F60  +
test eax eax +
mov edi eax +
jz loc_439B75  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4371B0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_438360  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_439906  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_439976  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_47851E +
call sub_438230  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_4397C5  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_43A0A0  +
test eax eax +
mov edi eax +
jnz loc_439A30  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_439970  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jnz loc_439906  +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_439AF0  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_439B8E  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_478524 +
call sub_438230  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_439AA5  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_43B8F0  +
test eax eax +
mov edi eax +
jz loc_439974  +
mov eax ebp +
call sub_437B30  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_439906  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_439906  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_438170  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_439BA1  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_439906  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_438360  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_439948  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4371B0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_439948  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_4399AD  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_437DE0  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_4380B0  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx offset asc_478521 +
call sub_438230  +
jmp loc_4399A1  +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_4371B0  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_439BF0  +
xor edx edx +
mov ebx esi +
jmp loc_439B33  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_439B30  +
mov [esp+58h+var_3C] 0 +
jmp loc_4397B1  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_4396B0  +
mov eax [esp+58h+arg_0] +
call sub_438170  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_4396B0  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_439974  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_439974  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_478511 +
call sub_438230  +
jmp loc_439993  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_4371B0  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_439A22  +
mov [esp+58h+var_3C] 0 +
jmp loc_439974  +
mov eax [esp+58h+var_4C] +
call sub_438230  +
jmp loc_43974C  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_438270  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_439770  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_438270  +
jmp loc_439770  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_437DE0  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_439C72  +
test byte ptr [esi+28h] 1 +
jz loc_439F14  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_43A03E  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_43A014  +
cmp dl 39h +
jle loc_439EE5  +
cmp dl 5Fh +
jnz loc_43A014  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_43A014  +
mov [esp+58h+var_4C] 1 +
jmp loc_439D93  +
cmp al 74h +
jz loc_439DC7  +
cmp al 4Bh +
jz loc_439FB6  +
test dword ptr [esi] 2000h +
jnz loc_439F30  +
test ecx ecx +
jz loc_439D32  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_43A0A0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_439DF7  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_438360  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_437E60  +
test ebx ebx +
jle loc_439D93  +
test byte ptr [esi] 4 +
mov eax offset asc_478528 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_438230  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_439DFF  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_439CF2  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_439CFA  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_439610  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_439D5C  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_4380B0  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_439E5D  +
test byte ptr [esi] 4 +
mov eax offset asc_478528 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_438230  +
test byte ptr [esi+2Ch] 1 +
jnz loc_43A08A  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_438360  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_43A028  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_439E8D  +
test byte ptr [esi] 4 +
mov eax offset asc_478528 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_438230  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_439EA1  +
sub ecx edx +
jnz loc_43A07C  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_439EC9  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_439ED9  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_439CE5  +
test byte ptr [esi+2Ch] 1 +
jnz loc_439C6A  +
mov [esp+58h+arg_0] 0 +
jmp loc_439C72  +
mov eax ebp +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_439DF7  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_4371B0  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_438E10  +
test eax eax +
mov ecx eax +
jz loc_43A000  +
cmp byte ptr [eax] 0 +
jz loc_439F9A  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_438230  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_439D5C  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
jz loc_439DF7  +
cmp eax [esi+10h] +
jge loc_439DF7  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_439D76  +
cmp byte ptr [edx] 0 +
jz loc_439D76  +
lea eax [esp+58h+var_30] +
call sub_438230  +
jmp loc_439D76  +
test edi edi +
mov edx [ebp+0] +
jz loc_439FA2  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_438170  +
jmp loc_439FA2  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_438360  +
jmp loc_439EA1  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
jz loc_43A014  +
cmp eax [esi+10h] +
jge loc_43A014  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_439CE5  +
cmp byte ptr [edx] 0 +
jz loc_439CE5  +
lea eax [esp+58h+var_30] +
call sub_438230  +
jmp loc_439CE5  +
mov eax [esp+58h+var_40] +
call sub_4381A0  +
jmp loc_439EA1  +
mov edx offset asc_47852B +
lea eax [esp+58h+var_30] +
call sub_438230  +
jmp loc_439E4C  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_64] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
mov [esp+78h+var_60] 0 +
lea esi [esi+0] +
test edi edi +
setnz cl  +
xor eax eax +
test eax eax +
jnz loc_43A3C0  +
test cl cl +
jz loc_43A3C0  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-41h] +
cmp al 34h +
ja loc_43A3B1  +
movzx eax al +
jmp ds:off_4785A4[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_43A170  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_43A147  +
mov edx offset asc_478511 +
lea eax [esp+78h+var_4C] +
call sub_438200  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_437F00  +
call sub_437F30  +
test eax eax +
jz loc_43A170  +
cmp byte ptr [eax] 0 +
jz loc_43A170  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_438200  +
mov esi [ebx] +
lea esi [esi+0] +
add esi 1 +
mov [ebx] esi +
jmp loc_43A0F0  +
mov eax [esp+78h+var_4C] +
add esi 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] esi +
jz loc_43A1A2  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_43A4B5  +
cmp al 2Ah +
jz loc_43A4B5  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_43BE10  +
test eax eax +
jz loc_43A460  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_43A4A3  +
cmp al 5Fh +
jnz loc_43A0F0  +
add edx 1 +
mov [ebx] edx +
jmp loc_43A0F0  +
mov eax [esp+78h+var_4C] +
add esi 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] esi +
jz loc_43A1FA  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_43A4D6  +
cmp al 2Ah +
jz loc_43A4D6  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_478532 +
call sub_438230  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_43A467  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_478534 +
lea eax [esp+78h+var_4C] +
call sub_438230  +
jmp loc_43A0F0  +
add esi 1 +
mov edx offset asc_47850D +
lea eax [esp+78h+var_4C] +
mov [ebx] esi +
call sub_438200  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_43A0F0  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_437BD0  +
test eax eax +
jz loc_43A460  +
mov edx [esp+78h+var_58] +
test edx edx +
js loc_43A460  +
mov eax [esp+78h+var_68] +
cmp edx [eax+20h] +
jge loc_43A460  +
mov ecx [eax+5Ch] +
test ecx ecx +
jle loc_43A2A6  +
mov eax [eax+54h] +
lea esi [eax+ecx*4] +
xor ecx ecx +
cmp edx [eax] +
cmovz edi ecx +
add eax 4 +
cmp eax esi +
jnz loc_43A292  +
test edi edi +
jz loc_43A0F0  +
mov ebx [esp+78h+var_68] +
mov eax ebx +
call sub_437D30  +
mov eax [ebx+4] +
lea ebx [esp+78h+var_54] +
mov edx [esp+78h+var_58] +
mov [esp+78h+var_60] 1 +
mov eax [eax+edx*4] +
mov [esp+78h+var_54] eax +
jmp loc_43A0F0  +
add esi 1 +
mov edx offset asc_47852F +
lea eax [esp+78h+var_4C] +
mov [ebx] esi +
call sub_438200  +
test ebp ebp +
mov eax 3 +
cmovz ebp eax +
jmp loc_43A0F0  +
add esi 1 +
mov edx offset asc_478513 +
lea eax [esp+78h+var_4C] +
mov [ebx] esi +
call sub_438230  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_43A333  +
mov eax [esp+78h+var_68] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_478528 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_438200  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_43A3E2  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_43A583  +
cmp al 74h +
jz loc_43A5B7  +
xor edi edi +
cmp al 51h +
jnz loc_43A0F0  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_439C40  +
test eax eax +
mov edi eax +
jz loc_43A0F0  +
jmp loc_43A425  +
mov eax [esp+78h+var_68] +
add esi 1 +
mov [ebx] esi +
test byte ptr [eax] 4 +
jz loc_43A490  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_43A0F0  +
mov eax 1 +
test eax eax +
jz loc_43A0FF  +
nop   +
test edi edi +
jz loc_43A522  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_43A75C  +
movzx eax al +
jmp ds:off_478678[eax*4]  +
mov eax ebx +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov esi eax +
mov [esp+78h+var_58] eax +
jz loc_43A460  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov edx [esp+78h+var_5C] +
cmp esi eax +
jg loc_43A460  +
xor eax eax +
test esi esi +
jz loc_43A421  +
lea eax [esp+78h+var_4C] +
mov ecx esi +
call sub_4381A0  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
mov edx offset asc_47850F +
lea eax [esp+78h+var_4C] +
call sub_438200  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_43A8A4  +
cmp al 75h +
jz loc_43A8A4  +
xor esi esi +
cmp al 43h +
jz loc_43A8A4  +
cmp al 46h +
jz loc_43A62F  +
lea esi [esi+0] +
xor edi edi +
jmp loc_43A0F0  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 4 +
call sub_438F60  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_43A218  +
jmp loc_43A213  +
mov edx offset asc_47852D +
lea eax [esp+78h+var_4C] +
call sub_438200  +
jmp loc_43A3A2  +
cmp al 5Fh +
jz loc_43A1C6  +
xor edi edi +
lea esi [esi+0] +
jmp loc_43A0F0  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_47850F +
call sub_438200  +
mov edx offset asc_478513 +
lea eax [esp+78h+var_4C] +
call sub_438230  +
jmp loc_43A1A2  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_47850F +
call sub_438200  +
mov edx offset asc_478513 +
lea eax [esp+78h+var_4C] +
call sub_438230  +
jmp loc_43A1FA  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_43A522  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_43A870  +
cmp esi [eax+44h] +
jl loc_43A870  +
mov eax [esp+78h+var_64] +
mov eax [eax] +
test eax eax +
jz loc_43A54C  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_64] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_43A55E  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
test eax eax +
jz loc_43A56E  +
mov eax [esp+78h+var_68] +
sub dword ptr [eax+5Ch] 1 +
xor eax eax +
test edi edi +
jz loc_43A57B  +
mov al 4 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_43A0A0  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_43A5A2  +
sub ecx edx +
jnz loc_43A607  +
test edx edx +
jz loc_43A425  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_43A425  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_439610  +
test eax eax +
mov edi eax +
jz loc_43A616  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_43A5A2  +
lea eax [esp+78h+var_4C] +
call sub_4381A0  +
mov edx [esp+78h+var_40] +
jmp loc_43A5A2  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_43A0F0  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_43A0F0  +
mov eax [esp+78h+var_68] +
add edx 1 +
mov [ebx] edx +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_43BE10  +
test eax eax +
jz loc_43A460  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_43A460  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_43A0F0  +
test esi esi +
jz loc_43A0F0  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_43A688  +
mov edx offset asc_478511 +
lea eax [esp+78h+var_4C] +
call sub_438230  +
mov eax esi +
call sub_437F30  +
test eax eax +
jz loc_43A0F0  +
cmp byte ptr [eax] 0 +
jz loc_43A0F0  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_438230  +
jmp loc_43A0F0  +
mov ecx [esp+78h+var_64] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_439C40  +
mov edi eax +
test edi edi +
jz loc_43A522  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_43A552  +
mov ebx [esp+78h+var_64] +
mov edx offset asc_478511 +
mov eax ebx +
call sub_438230  +
mov ecx [esp+78h+var_48] +
mov eax ebx +
lea edx [esp+78h+var_4C] +
call sub_438360  +
mov eax [esp+78h+var_4C] +
jmp loc_43A552  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_437BD0  +
test eax eax +
jz loc_43A522  +
mov eax [esp+78h+var_58] +
test eax eax +
js loc_43A522  +
mov ecx [esp+78h+var_68] +
cmp eax [ecx+14h] +
jge loc_43A522  +
mov edx [ecx+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_43A6D8  +
cmp byte ptr [edx] 0 +
jz loc_43A6D8  +
mov eax [esp+78h+var_64] +
call sub_438230  +
jmp loc_43A6D8  +
mov edi [esp+78h+var_64] +
mov [esp+78h+var_50] 0 +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_43A7B0  +
movzx eax al +
jmp ds:off_4786D8[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_43A798  +
mov edx offset asc_478511 +
mov eax edi +
call sub_438230  +
mov edx offset aUnsigned +
mov eax edi +
call sub_438230  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_43A772  +
cmp dl 78h +
mov eax esi +
ja loc_43A92B  +
jmp ds:off_4787A4[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_43A7DA  +
mov edx offset asc_478511 +
mov eax edi +
call sub_438230  +
mov edx offset aSigned +
mov eax edi +
call sub_438230  +
mov esi [ebx] +
jmp loc_43A768  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_43A808  +
mov edx offset asc_478511 +
mov eax edi +
call sub_438230  +
mov edx offset a__complex +
mov eax edi +
call sub_438230  +
mov esi [ebx] +
jmp loc_43A768  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_43A857  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_43A841  +
mov edx offset asc_478511 +
mov eax edi +
call sub_438200  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_437F00  +
call sub_437F30  +
test eax eax +
jz loc_43A857  +
cmp byte ptr [eax] 0 +
jnz loc_43A8C3  +
add esi 1 +
mov [ebx] esi +
jmp loc_43A768  +
mov edi 4 +
test ebp ebp +
cmovz ebp edi +
jmp loc_43A6D0  +
mov eax ebx +
call sub_437B80  +
cmp eax 0FFFFFFFFh +
jz loc_43A522  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_43AD08  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jnz loc_43A749  +
jmp loc_43A6D8  +
mov [esp+78h+var_5C] edx +
call sub_437F00  +
mov edx [esp+78h+var_5C] +
lea ecx [edx+1] +
mov [ebx] ecx +
mov esi eax +
movzx eax byte ptr [edx+1] +
mov edx ecx +
jmp loc_43A452  +
mov edx eax +
mov eax edi +
call sub_438200  +
mov esi [ebx] +
jmp loc_43A857  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_43A92B  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_43AC50  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_43A924  +
cmp cl 5Fh +
jz loc_43ACE9  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_43ACFB  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_43A900  +
xor edi edi +
jmp loc_43A866  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_437DE0  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_43B490  +
test eax eax +
jz loc_43A9B5  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_4380B0  +
mov eax [esp+78h+var_64] +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43A9A1  +
mov edx offset asc_478511 +
call sub_438230  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_64] +
call sub_438360  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_43A9C5  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 4 +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43A9EE  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aLongLong +
mov edi 4 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AA20  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aWchar_t +
mov edi 6 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AA52  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aVoid +
mov edi 4 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_439610  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_64] +
call sub_438360  +
jmp loc_43A9B5  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AADA  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aShort +
mov edi 4 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AB0C  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aLongDouble +
mov edi 7 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AB3E  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aLong +
mov edi 4 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AB70  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aInt +
mov edi 4 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43ABA2  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aFloat +
mov edi 7 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43ABD4  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aDouble +
mov edi 7 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AC06  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aChar +
mov edi 6 +
call sub_438230  +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
add esi 1 +
mov [ebx] esi +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43AC38  +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [esp+78h+var_64] +
mov edx offset aBool +
mov edi 5 +
call sub_438230  +
jmp loc_43A866  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_478599 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_64] +
mov ecx [eax+4] +
cmp [eax] ecx +
jz loc_43ACC9  +
mov edx offset asc_478511 +
call sub_438230  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 4 +
jz loc_43A866  +
mov eax [esp+78h+var_64] +
mov edx esi +
call sub_438230  +
jmp loc_43A866  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_43AC84  +
cmp byte ptr [eax+1] 5Fh +
jz loc_43ACEF  +
xor edi edi +
jmp loc_43A866  +
mov eax [esp+78h+var_64] +
mov edx esi +
mov edi 1 +
call sub_438270  +
jmp loc_43A6D8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [ebp+0] +
mov [esp+58h+var_48] edx +
mov edx [edx] +
mov [esp+58h+var_44] ecx +
mov ebx [esp+58h+arg_0] +
test esi 1000h +
lea edi [edx+ecx] +
jz loc_43AD4E  +
cmp byte ptr [edi] 58h +
jz loc_43AEA5  +
mov ecx [ebp+0] +
test ch 18h +
jz loc_43ADAA  +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_54] offset a__pt__ +
mov [esp+58h+var_40] ecx +
mov [esp+58h+var_4C] edx +
call strstr  +
mov edx [esp+58h+var_4C] +
mov ecx [esp+58h+var_40] +
test eax eax +
mov esi eax +
jz loc_43ADAA  +
lea eax [eax+6] +
mov [esp+58h+var_34] eax +
lea eax [esp+58h+var_34] +
mov [esp+58h+var_40] eax +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
jz loc_43ADF8  +
mov ecx [esp+58h+var_34] +
mov edx [esp+58h+var_4C] +
add eax ecx +
cmp edi eax +
jz loc_43B20D  +
mov ecx [ebp+0] +
and ch 21h +
jz loc_43ADF8  +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_54] offset a__tm__ +
mov [esp+58h+var_4C] edx +
call strstr  +
mov edx [esp+58h+var_4C] +
test eax eax +
mov esi eax +
jz loc_43B0E0  +
lea eax [esi+6] +
mov [esp+58h+var_34] eax +
lea eax [esp+58h+var_34] +
mov [esp+58h+var_40] eax +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
jz loc_43ADF8  +
mov edx [esp+58h+var_34] +
add eax edx +
cmp edi eax +
jz loc_43AE90  +
mov eax [esp+58h+var_48] +
cmp [esp+58h+var_44] 0Ah +
mov edx [eax] +
jg loc_43AE40  +
cmp dword ptr [ebp+34h] 0FFFFFFFFh +
jz loc_43B165  +
mov eax [esp+58h+var_44] +
test eax eax +
jz loc_43AE28  +
mov ecx [esp+58h+var_44] +
mov eax ebx +
call sub_438170  +
mov eax [esp+58h+var_48] +
mov edx [eax] +
mov eax [esp+58h+var_48] +
add edx [esp+58h+var_44] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__1 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_43AE05  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_43AE05  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_43AE05  +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] offset byte_4680F8 +
mov [esp+58h+var_4C] edx +
call strchr  +
mov edx [esp+58h+var_4C] +
test eax eax +
jz loc_43AE05  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_438230  +
mov eax [esp+58h+var_48] +
mov edx [eax] +
jmp loc_43AE28  +
cmp byte ptr [edx] 5Fh +
jnz loc_43ADF8  +
add edx 1 +
mov [esp+58h+var_34] edx +
jmp loc_43B21D  +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_54] 3Ch +
mov [esp+58h+var_4C] edx +
call strchr  +
mov edx [esp+58h+var_4C] +
test eax eax +
jz loc_43B140  +
sub eax edx +
cmp [esp+58h+var_44] eax +
mov ecx eax +
jle loc_43B140  +
test eax eax +
jnz loc_43B150  +
mov eax [esp+58h+var_44] +
mov edi [esp+58h+var_48] +
cmp dword ptr [ebp+34h] 0FFFFFFFFh +
mov [esp+58h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
jz loc_43B17F  +
mov eax esi +
mov edx (offset asc_478524+2) +
or eax 1 +
mov [ebp+0] eax +
mov eax ebx +
call sub_438230  +
mov edi [esp+58h+var_48] +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_43AF4B  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_43AF69  +
jle loc_43AFE1  +
cmp cl 54h +
jz loc_43B090  +
cmp cl 55h +
jnz loc_43AF93  +
cmp cl 53h +
jnz loc_43B171  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_43B19A  +
cmp al 50h +
jz loc_43B1B2  +
cmp al 4Dh +
jz loc_43B3A5  +
mov eax ebx +
mov edx offset asc_478524 +
call sub_438230  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_43AFC7  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
mov eax [esp+58h+var_48] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_43B18C  +
mov [ebp+0] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_43AF93  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_437B30  +
test eax eax +
mov [esp+58h+var_4C] eax +
jle loc_43AF93  +
mov eax [edi] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_4C] eax +
jg loc_43AF93  +
mov edx offset asc_47850D +
lea eax [esp+58h+var_30] +
call sub_438230  +
mov eax [esp+58h+var_4C] +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_4371B0  +
mov edx [esp+58h+var_4C] +
mov ecx eax +
mov [esp+58h+var_44] eax +
mov eax [edi] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_4C] +
mov byte ptr [ecx+edx] 0 +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_438E10  +
test eax eax +
mov ecx eax +
jz loc_43B46F  +
cmp byte ptr [eax] 0 +
jnz loc_43B457  +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_4C] +
add [edi] eax +
mov eax [esp+58h+var_44] +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_43B0AA  +
add eax 1 +
mov edx edi +
mov [edi] eax +
lea ecx [esp+58h+var_30] +
mov eax ebp +
call sub_43A0A0  +
test eax eax +
jz loc_43AF93  +
mov ecx [esp+58h+var_2C] +
mov eax ebx +
lea edx [esp+58h+var_30] +
call sub_438360  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_43AF93  +
test al al +
jz loc_43AF93  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_438230  +
jmp loc_43AF23  +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_54] offset a__ps__ +
call strstr  +
mov edx [esp+58h+var_4C] +
test eax eax +
mov esi eax +
jnz loc_43ADD1  +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_54] offset a__pt__ +
call strstr  +
mov edx [esp+58h+var_4C] +
test eax eax +
mov esi eax +
jnz loc_43ADD1  +
mov [esp+58h+var_54] offset a__s +
mov [esp+58h+var_58] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_43ADF8  +
lea eax [eax+3] +
jmp loc_43ADD4  +
mov ecx [esp+58h+var_44] +
test ecx ecx +
jz loc_43AEDB  +
mov ecx [esp+58h+var_44] +
mov eax ebx +
call sub_438170  +
mov eax [esp+58h+var_48] +
mov esi [ebp+0] +
mov edx [eax] +
jmp loc_43AEDB  +
mov dword ptr [ebp+34h] 0 +
jmp loc_43AE0F  +
cmp cl 55h +
jz loc_43AF72  +
jmp loc_43AF93  +
mov eax [ebx+4] +
sub eax [ebx] +
mov [ebp+34h] eax +
jmp loc_43AF0B  +
mov edi [esp+58h+var_48] +
add eax 1 +
mov [edi] eax +
jmp loc_43AFD6  +
mov edx offset asc_4784F5 +
lea eax [esp+58h+var_30] +
mov [esp+58h+var_4C] ecx +
call sub_438230  +
mov edx [edi] +
mov ecx [esp+58h+var_4C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_43AF93  +
mov [esp+58h+var_4C] esi +
mov esi edi +
mov edi ebx +
mov ebx ecx +
jmp loc_43B1F4  +
mov eax [esi] +
lea edx [eax+1] +
mov [esi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_43B431  +
test al al +
mov ds:byte_4803BC al +
jz loc_43B1D8  +
mov edx offset byte_4803BC +
lea eax [esp+58h+var_30] +
call sub_438230  +
jmp loc_43B1D8  +
cmp byte ptr [ecx] 5Fh +
jnz loc_43ADA7  +
add ecx 1 +
mov [esp+58h+var_34] ecx +
mov eax [esp+58h+var_48] +
mov ecx esi +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_43B248  +
mov eax ebx +
call sub_438170  +
cmp dword ptr [ebp+34h] 0FFFFFFFFh +
jz loc_43B424  +
mov eax [ebp+0] +
mov edx 478526h +
mov [esp+58h+var_3C] eax +
or eax 1 +
mov [ebp+0] eax +
mov eax ebx +
call sub_438230  +
cmp edi [esp+58h+var_34] +
jbe loc_43B3D4  +
mov [esp+58h+var_4C] ebp +
mov ebp [esp+58h+var_40] +
jmp loc_43B341  +
mov eax [esp+58h+var_4C] +
add esi 1 +
mov edx ebp +
lea ecx [esp+58h+var_24] +
mov [esp+58h+var_34] esi +
call sub_43A0A0  +
test eax eax +
jz loc_43B3D0  +
mov edx offset asc_47850F +
lea eax [esp+58h+var_30] +
call sub_438230  +
mov ecx [esp+58h+var_20] +
lea eax [esp+58h+var_30] +
lea edx [esp+58h+var_24] +
call sub_438360  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_43B2E7  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea eax [esp+58h+var_30] +
mov edx offset asc_478513 +
call sub_438230  +
mov eax [esp+58h+var_34] +
cmp byte ptr [eax] 4Ch +
jnz loc_43B3D0  +
add eax 1 +
mov [esp+58h+var_34] eax +
lea edx [esp+58h+var_30] +
mov eax ebp +
call sub_4382B0  +
test eax eax +
jz loc_43B3D0  +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax ebx +
call sub_438360  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_438230  +
cmp edi [esp+58h+var_34] +
jbe loc_43B3D0  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_43B369  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
mov esi [esp+58h+var_34] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_43B3C0  +
cmp al 58h +
jz loc_43B282  +
mov eax [esp+58h+var_4C] +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_43A0A0  +
test eax eax +
jz loc_43B3D0  +
cmp esi [esp+58h+var_34] +
jnz loc_43B31C  +
mov ebp [esp+58h+var_4C] +
mov eax [esp+58h+var_3C] +
mov [ebp+0] eax +
jmp loc_43AE32  +
mov edx offset a2147483648 +
lea eax [esp+58h+var_30] +
call sub_438230  +
add dword ptr [edi] 1 +
jmp loc_43B0AA  +
add esi 1 +
mov [esp+58h+var_34] esi +
jmp loc_43B309  +
mov ebp [esp+58h+var_4C] +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_43B3FC  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
cmp edi [esp+58h+var_34] +
ja loc_43B406  +
sub dword ptr [ebx+4] 1 +
mov edx offset asc_478524 +
mov eax ebx +
call sub_438230  +
mov eax [esp+58h+var_3C] +
mov [ebp+0] eax +
mov eax [esp+58h+var_48] +
mov edx [eax] +
jmp loc_43AE28  +
mov eax [ebx+4] +
sub eax [ebx] +
mov [ebp+34h] eax +
jmp loc_43B252  +
mov ecx ebx +
mov ebx edi +
cmp cl 55h +
mov edi esi +
mov esi [esp+58h+var_4C] +
jnz loc_43B0AA  +
mov edx offset aU +
lea eax [esp+58h+var_30] +
call sub_438230  +
jmp loc_43B0AA  +
mov edx eax +
mov [esp+58h+var_40] eax +
lea eax [esp+58h+var_30] +
call sub_438230  +
mov ecx [esp+58h+var_40] +
jmp loc_43B071  +
mov edx [edi] +
lea eax [esp+58h+var_30] +
mov ecx [esp+58h+var_4C] +
call sub_438170  +
jmp loc_43B079  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_43B4E2  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_43B4C5  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_43AD20  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_43B596  +
cmp al 6Fh +
jz loc_43B640  +
cmp ebp 4 +
jle loc_43B596  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_43B596  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_4680F8 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_43B596  +
lea ecx [esp+24h] +
mov eax esi +
lea edx [esp+20h] +
mov [esp+20h] ebx +
call sub_43A0A0  +
test eax eax +
jnz loc_43B5C2  +
xor ebx ebx +
mov eax esi +
call sub_437C60  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_43B543  +
nop   +
jmp loc_43B596  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+24h] +
mov eax [esp+28h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_43B598  +
mov [esp] edi +
call free  +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+24h] 0 +
jmp loc_43B598  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_43B543  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_4680F8 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_43B543  +
cmp ebp 9 +
jle loc_43B820  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_43B820  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_479220 +
mov [esp+1Ch] eax +
jmp loc_43B6BF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_43B596  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_43B6B0  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_43B6B0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_479224[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_43B598  +
***
lea eax [ebx+2] +
mov ebp offset off_479220 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_43B7AF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_43B596  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_43B7A0  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_43B7A0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_479224[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_43B598  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_479220 +
mov [esp+1Ch] eax +
jmp loc_43B846  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_43B596  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_43B837  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_43B837  +
jmp loc_43B7DB  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_43B75C  +
add ebx 4 +
jmp loc_43B57F  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_438230  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_437BD0  +
test eax eax +
jz loc_43B930  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_43B9AD  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_43B9E1  +
mov eax ebp +
mov edx offset aClass +
call sub_438230  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_43A0A0  +
test eax eax +
mov esi eax +
jnz loc_43B9F2  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_43B994  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_43B9D2  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_43B930  +
mov edx offset asc_47851E +
mov eax ebp +
call sub_438230  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_43BA06  +
cmp al 7Ah +
jnz loc_43B953  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_43B8F0  +
mov esi eax +
test esi esi +
jnz loc_43B998  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_43B93D  +
mov edx offset asc_478511 +
mov eax ebp +
call sub_438230  +
jmp loc_43B93D  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_438360  +
jmp loc_43B96C  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_438230  +
jmp loc_43B998  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_43BA81  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_43BAE2  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_437B30  +
test eax eax +
mov [edi+50h] eax +
jle loc_43BAC3  +
cmp eax 9 +
jg loc_43BAD0  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_43BAC3  +
mov ecx [edx+4] +
mov eax esi +
call sub_438360  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_4371B0  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_43A0A0  +
test eax eax +
jnz loc_43BB23  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_43BAC3  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_43BA32  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_43BAA5  +
mov eax [ecx] +
test eax eax +
jz loc_43BAB6  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_43A0A0  +
test eax eax +
jz loc_43BAC3  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_438360  +
mov ecx [ebx] +
mov eax edi +
mov edx ebp +
sub ecx ebp +
call sub_4386A0  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_43BD63  +
mov edx [edi] +
movzx eax byte ptr [edx] +
xor ebp ebp +
cmp al 5Fh +
jz loc_43BCA0  +
test al al +
jz loc_43BCA0  +
cmp al 65h +
jz loc_43BCA0  +
cmp al 54h +
jz loc_43BB96  +
cmp al 4Eh +
nop   +
lea esi [esi+0] +
jnz loc_43BCF0  +
lea eax [edx+1] +
mov [edi] eax +
cmp byte ptr [edx] 4Eh +
jz loc_43BDB8  +
mov [esp+44h+var_2C] 1 +
test dword ptr [ebx] 3800h +
jz loc_43BBBE  +
cmp dword ptr [ebx+20h] 9 +
jg loc_43BD8D  +
lea edx [esp+44h+var_28] +
mov eax edi +
call sub_437BD0  +
test eax eax +
jz loc_43BDA0  +
mov eax [esp+44h+var_28] +
test dword ptr [ebx] 3C00h +
jz loc_43BBE4  +
sub eax 1 +
mov [esp+44h+var_28] eax +
test eax eax +
js loc_43BDA0  +
cmp [ebx+20h] eax +
jg loc_43BC03  +
jmp loc_43BDA0  +
mov eax [esp+44h+var_20] +
test eax eax +
jnz loc_43BC63  +
mov ebp 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_43BC88  +
mov edx [esp+44h+var_28] +
test ebp ebp +
mov eax [ebx+4] +
mov eax [eax+edx*4] +
mov [esp+44h+var_24] eax +
jz loc_43BC25  +
test byte ptr [ebx] 1 +
jnz loc_43BCD8  +
mov eax ebx +
call sub_437D30  +
lea ecx [esp+44h+var_20] +
mov eax ebx +
lea edx [esp+44h+var_24] +
call sub_43BA20  +
sub dword ptr [ebx+5Ch] 1 +
test eax eax +
jz loc_43BCD0  +
test byte ptr [ebx] 1 +
jz loc_43BBF6  +
mov ecx [esp+44h+var_1C] +
mov eax esi +
lea edx [esp+44h+var_20] +
call sub_438360  +
mov eax [esp+44h+var_20] +
test eax eax +
jz loc_43BBFE  +
mov [esp+44h+var_44] eax +
call free  +
mov [esp+44h+var_1C] 0 +
mov [esp+44h+var_18] 0 +
mov [esp+44h+var_20] 0 +
jmp loc_43BBFE  +
sub [esp+44h+var_2C] 1 +
jns loc_43BC0A  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_43BB75  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_43BB85  +
cmp al 65h +
jz loc_43BDD2  +
test byte ptr [ebx] 1 +
jz loc_43BCC4  +
mov edx offset asc_478513 +
mov eax esi +
call sub_438230  +
mov eax 1 +
lea esi [esi+0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset asc_47851E +
mov eax esi +
call sub_438230  +
mov edx [esp+44h+var_28] +
jmp loc_43BC25  +
test ebp ebp +
jz loc_43BCFD  +
test byte ptr [ebx] 1 +
jnz loc_43BDA7  +
lea ecx [esp+44h+var_20] +
mov edx edi +
mov eax ebx +
call sub_43BA20  +
test eax eax +
jz loc_43BDA0  +
test byte ptr [ebx] 1 +
jnz loc_43BD52  +
mov eax [esp+44h+var_20] +
mov ebp 1 +
test eax eax +
jz loc_43BC93  +
mov [esp+44h+var_44] eax +
call free  +
mov edx [edi] +
mov [esp+44h+var_1C] 0 +
mov [esp+44h+var_18] 0 +
mov [esp+44h+var_20] 0 +
movzx eax byte ptr [edx] +
jmp loc_43BC98  +
mov ecx [esp+44h+var_1C] +
lea edx [esp+44h+var_20] +
mov eax esi +
call sub_438360  +
jmp loc_43BD17  +
mov edx offset asc_47850F +
mov eax ecx +
call sub_438230  +
mov edx [edi] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_43BB6B  +
mov edx offset aVoid +
mov eax esi +
call sub_438230  +
jmp loc_43BB66  +
mov eax edi +
call sub_437B30  +
test eax eax +
mov [esp+44h+var_28] eax +
jg loc_43BBD5  +
xor eax eax +
jmp loc_43BCD0  +
mov edx offset asc_47851E +
mov eax esi +
call sub_438230  +
jmp loc_43BCFD  +
lea edx [esp+44h+var_2C] +
mov eax edi +
call sub_437BD0  +
test eax eax +
jnz loc_43BBAC  +
xor eax eax +
jmp loc_43BCD0  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [edi] edx +
jz loc_43BCC4  +
test ebp ebp +
jnz loc_43BDF5  +
mov edx offset a____3 +
mov eax esi +
call sub_438230  +
jmp loc_43BCB3  +
mov edx 478996h +
mov eax esi +
call sub_438230  +
jmp loc_43BDE4  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_43BB50  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_43BE7A  +
mov edx [esi] +
test edx edx +
jz loc_43BE6A  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_43C090  +
mov eax ebx +
mov edx 1 +
call sub_4380F0  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_43BED7  +
cmp byte ptr [esi+2] 58h +
jz loc_43C0D8  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_43BF0A  +
mov edi offset a__ct +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_43C0A0  +
mov edi offset a__dt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_43C0C4  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_43BFC4  +
mov eax edi +
cmp al 6Fh +
jz loc_43C100  +
cmp esi 4 +
jle loc_43BFC4  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_43BFC4  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_4680F8 +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_43BFC4  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_43A0A0  +
test eax eax +
jnz loc_43C1F0  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_43C0F0  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_43C0B4  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_43BFA0  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_43BFA0  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_43C2CF  +
movzx ecx al +
test byte ptr ds:word_479A60[ecx+ecx] 8 +
jz loc_43BFA0  +
movzx ecx byte ptr [edx+3] +
test byte ptr ds:word_479A60[ecx+ecx] 8 +
jz loc_43BFA0  +
cmp byte ptr [edx+4] 0 +
jnz loc_43C2EE  +
lea eax [edx+2] +
mov edi offset off_479220 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_43C026  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_43C377  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_43C017  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_43C017  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_3 +
call sub_438230  +
lea eax [esi+esi*2] +
mov edx ds:off_479224[eax*4] +
test edx edx +
jz loc_43BF92  +
cmp byte ptr [edx] 0 +
jz loc_43BF92  +
mov eax ebx +
call sub_438230  +
jmp loc_43BF92  +
mov eax ebx +
call sub_438170  +
jmp loc_43BEAD  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_43AD20  +
jmp loc_43BED7  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_43BF2B  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_4680F8 +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_43BF2B  +
cmp esi 9 +
jle loc_43C250  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_43C250  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_43C180  +
add edi 1 +
cmp edi 4Fh +
jz loc_43C2E5  +
lea eax [edi+edi*2] +
mov ebp ds:off_479220[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_43C174  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_43C174  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_3 +
call sub_438230  +
mov edx ds:off_479224[edi] +
test edx edx +
jz loc_43C1E1  +
cmp byte ptr [edx] 0 +
jnz loc_43C380  +
mov edx offset asc_478A03 +
jmp loc_43C07F  +
mov eax [ebx] +
mov edx offset aOperator_4 +
mov [ebx+4] eax +
mov eax ebx +
call sub_438230  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_438360  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_43BF92  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_43BFA0  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_43C26E  +
add edi 1 +
cmp edi 4Fh +
jz loc_43C2E5  +
lea eax [edi+edi*2] +
mov ebp ds:off_479220[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_43C266  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_43C266  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_3 +
call sub_438230  +
mov edx ds:off_479224[edi] +
test edx edx +
jnz loc_43C076  +
jmp loc_43BF92  +
cmp byte ptr [edx+3] 70h +
jnz loc_43BFDC  +
add edx 4 +
lea esi [esi+0] +
jmp loc_43BF77  +
mov edx [esp+48h+var_30] +
jmp loc_43BFA0  +
cmp al 61h +
jnz loc_43BFA0  +
cmp byte ptr [edx+5] 0 +
jnz loc_43BFA0  +
mov esi offset off_479220 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_43C323  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_43C377  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_43C318  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_43C318  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_3 +
call sub_438230  +
mov edx ds:off_479224[edi] +
test edx edx +
jnz loc_43C076  +
jmp loc_43BF92  +
mov edx [esp+48h+var_34] +
jmp loc_43BFA0  +
mov eax ebx +
call sub_438230  +
jmp loc_43C1E1  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_43C9B5  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_43C863  +
movzx edx dl +
jmp ds:off_478A18[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_439610  +
test eax eax +
mov esi eax +
jnz loc_43CA70  +
test byte ptr [ebx] 4 +
mov eax offset asc_478528 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_438230  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_43C48E  +
sub ecx edx +
jnz loc_43CAB0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_43CA34  +
test byte ptr [ebx+28h] 1 +
jnz loc_43C8A0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_43C8A0  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_43C4D4  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_43C4FC  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_43C5A9  +
test dword ptr [ebx] 300h +
jz loc_43C534  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_43CAC0  +
test dword ptr [ebx] 1000h +
jz loc_43C5E6  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_43C59A  +
add edi 2 +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_43C56D  +
jmp loc_43C59A  +
add edi 1 +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_43C59A  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_43C560  +
jmp loc_43C59A  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_43C5DE  +
test al al +
jz loc_43C5DE  +
test dword ptr [ebx] 2C00h +
jnz loc_43C8B8  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_43BB50  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_43C3D2  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_439C40  +
test eax eax +
mov esi eax +
jnz loc_43CA97  +
test dword ptr [ebx] 300h +
jnz loc_43C4FC  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_43C5A9  +
test dword ptr [ebx] 1000h +
jz loc_43C5E6  +
add edi 1 +
jmp loc_43C654  +
test al al +
jz loc_43C663  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_43C650  +
test al al +
jz loc_43C5E6  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_43C59A  +
call sub_437F00  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_43C59A  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_43A0A0  +
test eax eax +
mov esi eax +
jz loc_43C4FC  +
test byte ptr [ebx] 4 +
mov eax offset asc_478528 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_438230  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_43C6DA  +
sub ecx edx +
jnz loc_43CB66  +
test edx edx +
jz loc_43C4FC  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_43C4FC  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_437DE0  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_43B490  +
test eax eax +
jnz loc_43C8D0  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_43C74E  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jnz loc_43CA58  +
test dword ptr [ebx] 2300h +
jz loc_43C9A0  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_43C9A0  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_43C5A9  +
test dword ptr [ebx] 300h +
jz loc_43C5E6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_439610  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
mov [esp+78h+var_4C] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 0 +
jz loc_43C5E6  +
add eax 1 +
mov [ebp+0] eax +
jmp loc_43C59A  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_43CA85  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_43BB50  +
test eax eax +
mov esi eax +
jz loc_43C5E6  +
test dword ptr [ebx] 2100h +
jz loc_43C820  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_43CB96  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_43C5AF  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_439C40  +
mov esi eax +
jmp loc_43C618  +
test dword ptr [ebx] 300h +
jz loc_43C5E6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_43BB50  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_43C5A9  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_438360  +
sub dword ptr [ebx+28h] 1 +
jmp loc_43C4AC  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_437F90  +
jmp loc_43C5BF  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_43C8E0  +
test byte ptr [ebx+2Ch] 1 +
jz loc_43C913  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_43CB8F  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_43C905  +
sub ecx edx +
jnz loc_43CB29  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_43CB78  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_437E60  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_4380B0  +
mov eax offset asc_478528 +
mov edx offset a_ +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_438200  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_43C742  +
sub ecx edx +
jz loc_43C742  +
mov eax [esp+78h+var_5C] +
call sub_4381A0  +
mov edx [esp+78h+var_24] +
jmp loc_43C742  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_43C5A9  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_43CB46  +
test esi esi +
jz loc_43CB46  +
test dword ptr [ebx] 300h +
jnz loc_43CB37  +
test byte ptr [ebx] 1 +
jz loc_43C5E8  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_43CB53  +
mov eax [ebx+38h] +
test eax eax +
jz loc_43C5E8  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_43CA0E  +
mov eax ecx +
mov edx offset asc_478511 +
call sub_438230  +
mov eax [ebx+38h] +
call sub_437F30  +
test eax eax +
jz loc_43C5E8  +
cmp byte ptr [eax] 0 +
jz loc_43C5E8  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_438230  +
jmp loc_43C5E8  +
mov edx offset asc_47852B +
mov eax edi +
call sub_438200  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_438360  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_43C498  +
mov ecx [ebp+0] +
mov eax ebx +
mov edx [esp+78h+var_60] +
sub ecx edx +
call sub_4386A0  +
jmp loc_43C756  +
mov ecx [ebp+0] +
mov eax ebx +
mov edx [esp+78h+var_60] +
sub ecx edx +
call sub_4386A0  +
jmp loc_43C461  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_437F90  +
jmp loc_43C7F5  +
mov ecx [ebp+0] +
mov edx edi +
mov eax ebx +
sub ecx edi +
call sub_4386A0  +
jmp loc_43C618  +
mov eax [esp+78h+var_5C] +
call sub_4381A0  +
jmp loc_43C48E  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_43A0A0  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_43CB01  +
mov edx offset asc_478511 +
lea eax [esp+78h+var_24] +
call sub_438230  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_43CB01  +
sub ecx edx +
jnz loc_43CBF7  +
test edx edx +
jz loc_43CB0D  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_43C5A9  +
mov eax [esp+78h+var_5C] +
call sub_4381A0  +
jmp loc_43C905  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_43BB50  +
mov esi eax +
test esi esi +
jnz loc_43C9D5  +
jmp loc_43C5E8  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_438230  +
jmp loc_43C9E9  +
mov eax [esp+78h+var_5C] +
call sub_4381A0  +
mov edx [esp+78h+var_24] +
jmp loc_43C6DA  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_47852B +
call sub_438200  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_43C913  +
mov ecx esi +
jmp loc_43C8F9  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_43A0A0  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_43CBD3  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_43C5A9  +
mov eax [esp+78h+var_5C] +
call sub_4381A0  +
mov edx [esp+78h+var_24] +
jmp loc_43CB01  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 9Ch +
mov ecx [edx] +
mov esi [esp+0A8h+arg_0] +
mov [esp+0A8h+var_90] eax +
mov [esp+0A8h+var_94] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_43CD9B  +
mov eax [eax] +
and eax 3C00h +
mov [esp+0A8h+var_8C] eax +
jnz loc_43CD80  +
lea eax [esi+2] +
mov [esp+0A8h+var_A4] offset unk_478B30 +
mov [esp+0A8h+var_A8] eax +
call strstr  +
test eax eax +
jz loc_43CD80  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+0A8h+var_84] +
mov [esp+0A8h+var_7C] 0 +
lea edi [esp+0A8h+var_78] +
mov [esp+0A8h+var_80] 0 +
mov [esp+0A8h+var_84] 0 +
call sub_438360  +
mov eax [esp+0A8h+var_8C] +
mov ecx 18h +
mov edx [esp+0A8h+var_90] +
stos   +
lea eax [esp+0A8h+var_78] +
call sub_4383A0  +
mov edi [esp+0A8h+var_90] +
cmp byte ptr [esi+2] 0 +
jz loc_43CD47  +
mov [esp+0A8h+var_A8] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_43BE90  +
test eax eax +
jz loc_43CCDA  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_43C390  +
test eax eax +
jnz loc_43CDA8  +
mov eax [esp+0A8h+var_94] +
lea edx [esp+0A8h+var_84] +
mov ecx [esp+0A8h+var_80] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_438360  +
lea edx [esp+0A8h+var_78] +
mov eax edi +
call sub_4383A0  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_43CD17  +
jmp loc_43CD47  +
add eax 1 +
test dl dl +
jz loc_43CD47  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_43CD10  +
cmp dl 5Fh +
jnz loc_43CD10  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_43CD34  +
jmp loc_43CD3C  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_43CD30  +
test dl dl +
lea esi [eax-2] +
jnz loc_43CCB5  +
xor edi edi +
lea eax [esp+0A8h+var_78] +
call sub_437FE0  +
lea eax [esp+0A8h+var_78] +
call sub_437C60  +
mov edx [esp+0A8h+var_84] +
mov eax edi +
test edx edx +
jz loc_43CD90  +
mov [esp+0A8h+var_A8] edx +
mov [esp+0A8h+var_94] edi +
call free  +
mov eax [esp+0A8h+var_94] +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0A8h+var_90] +
mov ecx ebx +
mov edx ebp +
mov [esp+0A8h+var_A8] esi +
call sub_43BE90  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_43CD49  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_43CEB0  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_43CF80  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_43CEA0  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_43D080  +
test cl cl +
jnz loc_43D088  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_43D1B0  +
cmp al 74h +
jz loc_43D180  +
cmp al 4Bh +
jz loc_43D1B0  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_43A0A0  +
mov esi eax +
test esi esi +
jz loc_43CEA0  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jnz loc_43CEA0  +
cmp byte ptr [edi] 0 +
jz loc_43CEA2  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_438230  +
jmp loc_43CEA2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439610  +
mov esi eax +
test esi esi +
jz loc_43CEA0  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jz loc_43D200  +
lea esi [esi+0] +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jnz loc_43D010  +
xor esi esi +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_43CDCD  +
mov [esp+6Ch+var_68] offset byte_4680F8 +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_43CDCD  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_43D1D5  +
cmp al 74h +
jz loc_43CE62  +
cmp al 4Bh +
jz loc_43D1D5  +
mov eax ebx +
call sub_437B30  +
test eax eax +
mov ebp eax +
js loc_43CEA0  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_43CEA0  +
cmp ebp 0Ah +
jle loc_43D300  +
mov edi offset a_global__1 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_43CF5D  +
cmp byte ptr [edx+9] 4Eh +
jz loc_43D343  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_438170  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_43CE90  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_43CEA0  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_43D3A0  +
test eax eax +
mov edi eax +
jz loc_43CEA0  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_43D2A6  +
cmp byte ptr [edi] 0 +
jz loc_43CFE6  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_438230  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx esi cl +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] offset byte_4680F8 +
mov [esp+6Ch+var_54] ecx +
call strchr  +
mov ecx [esp+6Ch+var_54] +
test eax eax +
jz loc_43D039  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_43D2B6  +
cmp cl 5Fh +
jz loc_43D092  +
cmp cl 76h +
jnz loc_43CEBE  +
cmp byte ptr [ebp+2] 74h +
jnz loc_43CDCD  +
movsx eax byte ptr [ebp+3] +
test al al +
jz loc_43CDCD  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_4680F8 +
call strchr  +
test eax eax +
jz loc_43CDCD  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_43D0B5  +
test cl cl +
jz loc_43CEA0  +
mov edi offset aType_infoNode +
jmp loc_43CE13  +
cmp byte ptr [ebp+2] 76h +
jnz loc_43CDCD  +
cmp byte ptr [ebp+3] 74h +
jnz loc_43CDCD  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_43CDCD  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_43D165  +
cmp al 51h +
jz loc_43D250  +
cmp al 74h +
jz loc_43D277  +
cmp al 4Bh +
jz loc_43D250  +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_43D2D4  +
mov [esp+6Ch+var_68] offset byte_4680F8 +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_43D315  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_4680F8 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_43CEA0  +
test eax eax +
jz loc_43D2CD  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_43CEA0  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_478528 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_438230  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_43D0C7  +
test esi esi +
jz loc_43CEA2  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_438230  +
jmp loc_43CEA2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439610  +
mov esi eax +
jmp loc_43CE45  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439C40  +
mov esi eax +
jmp loc_43CE45  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439C40  +
mov esi eax +
jmp loc_43CE8A  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a_ +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_478528 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_438230  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_43D241  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_438170  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_43CEA2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439C40  +
mov edi [ebx] +
mov esi eax +
jmp loc_43D10B  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_439610  +
mov edi [ebx] +
mov esi eax +
jmp loc_43D10B  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_438230  +
jmp loc_43CFD6  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_43CEA2  +
mov edi [ebx] +
jmp loc_43D0BC  +
mov eax ebx +
call sub_437B30  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jg loc_43D329  +
cmp ebp 0FFFFFFFFh +
jnz loc_43D0FF  +
jmp loc_43CEA0  +
test ebp ebp +
jz loc_43CF6A  +
nop   +
lea esi [esi+0] +
jmp loc_43CF5D  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_438170  +
mov edi [ebx] +
jmp loc_43D107  +
mov [esp+6Ch+var_68] offset byte_4680F8 +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_43D123  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_43CF5D  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_4680F8 +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_43CF5D  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_438230  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_4680F8 +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_43CF6F  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_43D730  +
cmp byte ptr [edx] 0 +
jz loc_43D730  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_43D4E8  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_43D580  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_43D610  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_43D610  +
cmp eax 0Ah +
jbe loc_43D580  +
mov edi offset a_global__1 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_43D580  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_4680F8 +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_43D941  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_43D622  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_43D94A  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_43D622  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_43CDB0  +
test eax eax +
jnz loc_43D9BF  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_43D622  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_43CDB0  +
test eax eax +
mov esi eax +
jz loc_43D5D0  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_43D692  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_43D713  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_43D7D5  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_43D7F0  +
mov eax ebx +
call sub_437FE0  +
test esi esi +
jnz loc_43D6A8  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_43D558  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_43D622  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_43D810  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_43D622  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_43D622  +
mov eax ebx +
call sub_437FE0  +
mov eax ebx +
call sub_437C60  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_43D606  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_43D41C  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_43D63D  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_43D6C4  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_43D630  +
cmp dword ptr [ebx+28h] 2 +
jz loc_43D663  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_43D525  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_43D674  +
cmp byte ptr [esi] 0 +
jnz loc_43D827  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_43D50F  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_43C390  +
mov esi eax +
jmp loc_43D50F  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_478420 +
call sub_438170  +
mov eax [esp+48h+var_24] +
jmp loc_43D558  +
test edx edx +
mov esi eax +
jz loc_43D651  +
mov [esp+48h+var_44] offset a__0 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_43D6EB  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_43D651  +
mov eax [ebx+30h] +
test eax eax +
jz loc_43D737  +
movzx eax byte ptr [esi] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_43D70A  +
cmp al 74h +
jnz loc_43D651  +
mov ebp [esp+48h+var_30] +
jmp loc_43D683  +
mov edx offset aGlobalConstr_1 +
lea eax [esp+48h+var_24] +
call sub_438200  +
mov dword ptr [ebx+28h] 0 +
jmp loc_43D52F  +
xor eax eax +
jmp loc_43D558  +
cmp [esp+48h+var_30] esi +
jz loc_43D83B  +
mov eax [ebx] +
test ah 8 +
jz loc_43D780  +
cmp byte ptr [esi+2] 70h +
jnz loc_43D780  +
cmp byte ptr [esi+3] 74h +
jnz loc_43D780  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_43AD20  +
mov ebp [esp+48h+var_2C] +
jmp loc_43D683  +
test ah 20h +
jz loc_43D7A0  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_43D884  +
cmp al 70h +
jnz loc_43D7A0  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_43D754  +
cmp [esp+48h+var_30] esi +
jz loc_43D895  +
cmp byte ptr [esi+2] 0 +
jz loc_43D651  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_43CC10  +
test eax eax +
mov esi eax +
jz loc_43D50F  +
jmp loc_43D501  +
mov edx offset aGlobalDestru_1 +
lea eax [esp+48h+var_24] +
call sub_438200  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_43D52F  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_438200  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_43D52F  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_43D622  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_438230  +
mov esi [esp+48h+var_2C] +
jmp loc_43D674  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_43D910  +
mov eax [ebx] +
test ah 1Ch +
jz loc_43D928  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_437B30  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_43D66B  +
jmp loc_43D674  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_43D7A0  +
nop   +
jmp loc_43D754  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_43D7AA  +
cmp al 74h +
jz loc_43D7B4  +
test dword ptr [ebx] 3C00h +
jnz loc_43D95F  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_43D8DC  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_43D8D0  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_478B30 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_43D651  +
cmp byte ptr [eax+2] 0 +
jz loc_43D651  +
mov [esp+48h+var_48] eax +
jmp loc_43D7B7  +
cmp al 51h +
jz loc_43D926  +
cmp al 74h +
jz loc_43D926  +
cmp al 4Bh +
jz loc_43D926  +
cmp al 48h +
nop   +
jnz loc_43D741  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_43D931  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_43D683  +
mov [esp+48h+var_30] ebp +
jmp loc_43D622  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_43D4C4  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_43D8C2  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_43D9C8  +
lea eax [esp+48h+var_28] +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
jz loc_43D8C2  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_43D986  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_43D98A  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_43D986  +
mov ebp [esp+48h+var_2C] +
jmp loc_43D683  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_43DA53  +
lea eax [esp+48h+var_2C] +
call sub_437B30  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_43D8C2  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_43D8C2  +
test esi esi +
jnz loc_43DA40  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_43D9D7  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_43D9DB  +
mov edx offset asc_478528 +
lea eax [esp+48h+var_24] +
call sub_438200  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_43D9D7  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_4381A0  +
mov edi [esp+48h+var_2C] +
jmp loc_43DA07  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_438230  +
mov ebp [esp+48h+var_2C] +
jmp loc_43D683  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
mov dword ptr [eax] 67452301h +
mov dword ptr [eax+4] 0EFCDAB89h +
mov dword ptr [eax+8] 98BADCFEh +
mov dword ptr [eax+0Ch] 10325476h +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+18h] 0 +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov esi [edx] +
mov ebx [edx+4] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
mov [eax] esi +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov esi [ebx+18h] +
mov eax [ebx+10h] +
add eax esi +
cmp esi eax +
mov [ebx+10h] eax +
jbe loc_43E292  +
add dword ptr [ebx+14h] 1 +
mov edi 38h +
sub edi esi +
cmp esi 37h +
jbe loc_43E2A5  +
mov edi 78h +
sub edi esi +
lea eax [ebx+esi+1Ch] +
add esi edi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] offset unk_4795E0 +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax [ebx+10h] +
shl eax 3 +
mov [ebx+esi+1Ch] eax +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
lea edx ds:0[ecx*8] +
shr eax 1Dh +
or eax edx +
mov [ebx+esi+20h] eax +
lea eax [ebx+1Ch] +
add esi 8 +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call sub_43DB20  +
mov esi [ebx] +
mov eax [ebx+0Ch] +
mov ecx [ebx+4] +
mov edx [ebx+8] +
mov [ebp+0] esi +
mov [ebp+0Ch] eax +
mov eax ebp +
mov [ebp+4] ecx +
mov [ebp+8] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esi+18h] +
test ebx ebx +
jnz loc_43E458  +
cmp [esp+1Ch+arg_4] 40h +
jbe loc_43E444  +
test byte ptr [esp+1Ch+arg_0] 3 +
jz loc_43E420  +
mov edi [esp+1Ch+arg_4] +
lea ebp [esi+1Ch] +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx] +
sub edi 40h +
add ebx 40h +
mov [ebp+0] ecx +
mov ecx [ebx-3Ch] +
mov [ebp+4] ecx +
mov ecx [ebx-38h] +
mov [ebp+8] ecx +
mov ecx [ebx-34h] +
mov [ebp+0Ch] ecx +
mov ecx [ebx-30h] +
mov [ebp+10h] ecx +
mov ecx [ebx-2Ch] +
mov [ebp+14h] ecx +
mov ecx [ebx-28h] +
mov [ebp+18h] ecx +
mov ecx [ebx-24h] +
mov [ebp+1Ch] ecx +
mov ecx [ebx-20h] +
mov [ebp+20h] ecx +
mov ecx [ebx-1Ch] +
mov [ebp+24h] ecx +
mov ecx [ebx-18h] +
mov [ebp+28h] ecx +
mov ecx [ebx-14h] +
mov [ebp+2Ch] ecx +
mov ecx [ebx-10h] +
mov [ebp+30h] ecx +
mov ecx [ebx-0Ch] +
mov [ebp+34h] ecx +
mov ecx [ebx-8] +
mov [ebp+38h] ecx +
mov ecx [ebx-4] +
mov [ebp+3Ch] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call sub_43DB20  +
cmp edi 40h +
ja loc_43E357  +
mov eax [esp+1Ch+arg_4] +
lea edx [eax-41h] +
shr edx 6 +
lea ecx [edx+1] +
shl ecx 6 +
shl edx 6 +
add [esp+1Ch+arg_0] ecx +
neg edx  +
lea eax [eax+edx-40h] +
mov [esp+1Ch+arg_4] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [esp+1Ch+arg_4] +
mov [esi+18h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] esi +
and ebx 0FFFFFFC0h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call sub_43DB20  +
add [esp+1Ch+arg_0] ebx +
and [esp+1Ch+arg_4] 3Fh +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jnz loc_43E4DC  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 80h +
sub edx ebx +
cmp [esp+1Ch+arg_4] edx +
cmovbe edx [esp+1Ch+arg_4] +
lea eax [esi+ebx+1Ch] +
mov [esp+1Ch+var_1C] eax +
mov edi edx +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_0] +
add ebx edi +
mov [esp+1Ch+var_18] edx +
call memcpy  +
add [esi+18h] edi +
cmp ebx 40h +
ja loc_43E4A0  +
add [esp+1Ch+arg_0] edi +
sub [esp+1Ch+arg_4] edi +
jmp loc_43E336  +
mov ecx ebx +
and ebx 3Fh +
and ecx 0FFFFFFC0h +
lea ebp [esi+1Ch] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] ecx +
call sub_43DB20  +
mov ecx [esp+1Ch+var_10] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] ebp +
lea ecx [esi+ecx+1Ch] +
mov [esp+1Ch+var_18] ecx +
call memcpy  +
mov [esi+18h] ebx +
jmp loc_43E48C  +
lea ebp [esi+1Ch] +
jmp loc_43E3F6  +
***
mov eax [esp+0B8h+arg_4] +
lea ebx [esp+0B8h+var_A4] +
mov [esp+0B8h+var_B0] ebx +
mov [esp+0B8h+var_A4] 67452301h +
mov [esp+0B8h+var_A0] 0EFCDAB89h +
mov [esp+0B8h+var_B4] eax +
mov eax [esp+0B8h+arg_0] +
mov [esp+0B8h+var_9C] 98BADCFEh +
mov [esp+0B8h+var_98] 10325476h +
mov [esp+0B8h+var_90] 0 +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_94] 0 +
mov [esp+0B8h+var_8C] 0 +
call sub_43E320  +
mov eax [esp+0B8h+arg_8] +
mov [esp+0B8h+var_B8] ebx +
mov [esp+0B8h+var_B4] eax +
call sub_43E270  +
add esp 0B8h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_454930  +
mov edi 1000h +
sub esp eax +
mov esi [esp+10h+arg_110C] +
lea ebx [esp+10h+arg_A4] +
mov [esp+10h+arg_8] 67452301h +
mov [esp+10h+arg_C] 0EFCDAB89h +
mov [esp+10h+arg_10] 98BADCFEh +
mov [esp+10h+arg_14] 10325476h +
mov [esp+10h+arg_1C] 0 +
mov [esp+10h+arg_18] 0 +
mov [esp+10h+arg_20] 0 +
nop   +
lea esi [esi+0] +
xor ebp ebp +
jmp loc_43E5D8  +
test eax eax +
jz loc_43E601  +
mov eax edi +
sub eax ebp +
mov [esp+10h+var_8] eax +
lea eax [ebx+ebp] +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] eax +
call fread  +
add ebp eax +
cmp ebp 0FFFh +
jbe loc_43E5D4  +
test eax eax +
jz loc_43E620  +
lea eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] 1000h +
mov [esp+10h+var_10] ebx +
call sub_43DB20  +
jmp loc_43E5D0  +
mov [esp+10h+var_10] esi +
call ferror  +
test eax eax +
mov esi eax +
jnz loc_43E656  +
test ebp ebp +
lea edi [esp+10h+arg_8] +
jnz loc_43E668  +
mov eax [esp+10h+arg_1110] +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] eax +
call sub_43E270  +
add esp 110Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 110Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] ebp +
mov [esp+10h+var_10] ebx +
call sub_43E320  +
jmp loc_43E636  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_43E93C  +
shl edx 3 +
cmp ebx edx +
ja loc_43E933  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_43E95B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_43E977  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_43E835  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_43E912  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_43E828  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_479680[eax] +
mov edx ds:dword_47968C[eax] +
mov eax ds:dword_479680[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_43E8FF  +
cmp eax 1 +
jz loc_43E9B1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_43E8EA  +
cmp edx 1 +
jz loc_43E9B1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_43E8E1  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_43E835  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_43E981  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_43E7DD  +
call sub_43E710  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_479680[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_43E7EC  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_43E808  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_43E92B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_0] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_43E710  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_479680[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_43EA83  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_43EA70  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_43EA83  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_43E710  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_479680[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_43EB1F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_43EB10  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_43EB1F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43EA90  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset sub_4371E0 +
mov [esp+2Ch+var_1C] offset sub_4371E0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43EA90  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset calloc +
mov dword ptr [esp+10h] offset calloc +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_43EA90  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_43EC71  +
sub ebx 1 +
js loc_43EC71  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_43EC57  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_43EC5C  +
mov eax [edi+28h] +
test eax eax +
jz loc_43EC90  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_43ECB2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_43ECFB  +
lea esi [esi+0] +
sub ebx 1 +
js loc_43ECFB  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_43ECE0  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_43ECE5  +
cmp edi 40000h +
jbe loc_43ED50  +
mov eax 100h +
call sub_43E710  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_479680[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_43ED80  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_43ED98  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_43ED67  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_43ED27  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_43ED27  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_43ED45  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_479680[eax] +
mov eax ds:dword_479680[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_43EED0  +
cmp edx 1 +
jz loc_43EEE0  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_43EEC4  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_479680[eax] +
mov eax ds:dword_479680[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_43EED0  +
cmp ebp 1 +
jz loc_43EE83  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_43EEC2  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_43EE83  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_43EE54  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_43EDB0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_43F0A1  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_479680[eax] +
mov ecx ds:dword_47968C[eax] +
mov eax ds:dword_479680[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_43F0CD  +
cmp eax 1 +
jz loc_43EFE2  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_43F094  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_479680[edx] +
mov ecx ds:dword_47968C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_479680[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_43F070  +
cmp ecx 1 +
jz loc_43F060  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_43F094  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_43F015  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_43F015  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_43F0C9  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_43F0D8  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_43EF3D  +
mov eax ebx +
call sub_43E7A0  +
test eax eax +
jz loc_43F0C9  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_43EF3D  +
xor eax eax +
jmp loc_43F08C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_43F0C9  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_43EF20  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_43EF20  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_43F177  +
mov edx [ebx+8] +
test edx edx +
jz loc_43F16D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_43F130  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_43F227  +
add ebx 4 +
cmp esi ebx +
jbe loc_43F239  +
cmp dword ptr [ebx] 1 +
jbe loc_43F220  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_43F220  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_43F250  +
***
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_43F274  +
cmp edx 20h +
ja loc_43F288  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_43F200  +
mov eax ebx +
call sub_43E7A0  +
jmp loc_43F274  +
***
jmp loc_43F2A0  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_43F2D1  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz locret_43F304  +
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_43F2F0  +
retn   +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_43F4F6  +
cmp esi 0Bh +
jbe loc_43F41E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_43F340  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_43F48C  +
jmp ds:off_479644[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_43F41E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_43F505  +
mov ebx ecx +
mov ecx edi +
jmp loc_43F41E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call sub_4371B0  +
cmp esi ebx +
mov edi eax +
jbe loc_43F5CA  +
sub esi ebx +
lea eax [eax+ebx] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov [esp+1Ch+arg_8] ebx +
mov [esp+1Ch+arg_4] ebp +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebx  +
sub esp 14h +
mov edx [esp+18h+arg_0] +
lea ebx [esp+18h+arg_4] +
test edx edx +
jz loc_43F617  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_43F603  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_43F65D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_43F637  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_481174 +
mov ebx [esp+1Ch+arg_0] +
lea edi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_43F6B6  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_43F690  +
mov byte ptr [esi] 0 +
mov eax ds:dword_481174 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
lea esi [esp+34h] +
test ebx ebx +
jz loc_43F745  +
mov eax ebx +
xor edi edi +
mov [esp] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_43F6E7  +
add edi 1 +
mov [esp] edi +
lea edi [esp+34h] +
call sub_4371B0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_43F710  +
mov byte ptr [esi] 0 +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4371B0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_43F736  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_43F7E9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_43F777  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_4371B0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_43F7A0  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_43F7DD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4371B0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_43F7C6  +
***
cmp edx 4Fh +
ja loc_43F855  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_479C60[edx*4]  +
test ecx ecx +
jz loc_43F851  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jl loc_43F821  +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
add esi 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] esi +
mov [eax+8] ecx +
mov ecx [esp+8+arg_0] +
mov [eax] edx +
mov [eax+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_43F851  +
mov eax [esp+8+arg_0] +
test eax eax +
jnz loc_43F814  +
xor eax eax +
jmp loc_43F81E  +
xor eax eax +
retn   +
***
mov esi [eax+14h] +
cmp esi [eax+18h] +
jge loc_43F887  +
mov ebx esi +
add esi 1 +
shl ebx 4 +
add ebx [eax+10h] +
test edx edx +
mov dword ptr [ebx+4] 0 +
mov [eax+14h] esi +
jz loc_43F887  +
test ecx ecx +
jnz loc_43F890  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx] 0 +
mov eax ebx +
mov [ebx+8] edx +
mov [ebx+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_43F8B0  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_43F8F0  +
test dl dl +
jnz loc_43F8F4  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_43F800  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_43F8E9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_43F8D3  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_43F927  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Fh +
ja loc_43F927  +
mov ecx [ebx] +
jmp ds:off_479DA0[ecx*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43F910  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+8] +
jmp loc_43F923  +
mov ecx [ebx+8] +
cmp dword ptr [ecx] 5 +
jnz loc_43F943  +
add dword ptr [edi] 1 +
mov ecx [ebx+8] +
mov edx edi +
mov eax esi +
call sub_43F900  +
mov ebx [ebx+0Ch] +
jmp loc_43F923  +
add dword ptr [esi] 1 +
mov ecx [ebx+8] +
jmp loc_43F943  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_43F990  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+124h] 1 +
jmp loc_43F975  +
***
test edx edx +
js locret_43FA09  +
test eax eax +
jnz loc_43F9FE  +
jmp loc_43FA03  +
test edx edx +
jz loc_43FA06  +
mov eax [eax+0Ch] +
sub edx 1 +
test eax eax +
jz locret_43FA10  +
cmp dword ptr [eax] 2Fh +
jz loc_43F9F0  +
xor eax eax +
retn   +
mov eax [eax+8] +
retn   +
retn   +
***
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_43FA38  +
cmp eax 4Ch +
jz loc_43FA38  +
sub eax 4Eh +
cmp eax 1 +
jbe loc_43FA38  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_43FA84  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_43FA93  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_43FA60  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_43FA51  +
xor eax eax +
jmp loc_43FA77  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_43FAD3  +
push ebx  +
mov ebx edx +
shl ebx 4 +
add edx 1 +
add ebx [eax+10h] +
add eax 0Ch +
mov dword ptr [ebx+4] 0 +
mov [eax+8] edx +
mov dword ptr [ebx] 41h +
call sub_43FA40  +
mov [ebx+8] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_43FB10  +
cmp al 6Eh +
jz loc_43FB14  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
add eax 1 +
js loc_43FB14  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_43FB14  +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
xor eax eax +
jmp loc_43FB06  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_43FB30  +
xor eax eax +
pop ebx  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_43FAE0  +
test eax eax +
js loc_43FB2B  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_43FB2B  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [ebx+10h] +
mov dword ptr [edx+4] 0 +
mov [ebx+14h] ecx +
mov [edx+8] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_43FA40  +
test eax eax +
mov esi eax +
jle loc_43FC24  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_43FC28  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_43FBE0  +
cmp esi 9 +
jle loc_43FBC7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_43FBF0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_43F860  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_43FBA6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_43FBA6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_43FC00  +
cmp al 5Fh +
jz loc_43FC00  +
cmp al 24h +
jnz loc_43FBC7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_43FBC7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_43F860  +
jmp loc_43FBD2  +
xor eax eax +
jmp loc_43FBD5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_43FBD2  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_43FC7E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_43FB70  +
mov ecx edi +
mov edx 4Bh +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_43F800  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_43FC56  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_43FCB0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_43FD00  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_43FCDF  +
test cl cl +
jnz loc_43FCDF  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_1 +
cmp dl [eax] +
jz loc_43FD94  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_43FCE7  +
jmp loc_43FCA1  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_43FE58  +
cmp dl 5Fh +
jz loc_43FD90  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_43FD53  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_43FCA1  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_43FD68  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_43FD70  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_43FD24  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_43FCA1  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_43FD2B  +
xor edx edx +
mov eax ecx +
jmp loc_43FD4B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_43FCA1  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_43FD73  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_43FE48  +
mov edi [eax+18h] +
xor esi esi +
mov edx [ebx+14h] +
mov [esp+1Ch+var_10] edi +
mov edi [ebx+18h] +
cmp edx edi +
jge loc_43FDD7  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov [esi+8] ebp +
mov ebp [esp+1Ch+var_10] +
mov dword ptr [esi] 18h +
mov [esi+0Ch] ebp +
mov [ebx+2Ch] esi +
test ecx ecx +
jz loc_43FE50  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edi edx +
jle loc_43FE0E  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [eax] 18h +
mov [eax+8] esi +
mov [eax+0Ch] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_43FCA3  +
mov edx eax +
mov eax ebx +
call sub_43FC40  +
test eax eax +
jz loc_43FCA1  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_43FCA3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_43FCA3  +
mov edi [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_43FDDA  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_43FDE4  +
cmp dl 5Fh +
jz loc_43FD15  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_43FD1A  +
jmp loc_43FCC0  +
***
jmp sub_43FE80  +
***
push ebx  +
mov ebx eax +
jnz loc_43FE9E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_43FE95  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_43FED0  +
cmp edx 76h +
jnz loc_43FE90  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_43FA40  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_43FE90  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_43FA40  +
jmp loc_43FED8  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_43FE92  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_43FE92  +
***
movzx edx byte ptr [eax] +
cmp dl 72h +
jz loc_43FF23  +
cmp dl 56h +
jz loc_43FF23  +
cmp dl 4Bh +
jz loc_43FF23  +
cmp dl 44h +
jz loc_43FF10  +
xor eax eax +
retn   +
movzx eax byte ptr [eax+1] +
lea edx [eax-77h] +
cmp dl 1 +
jbe loc_43FF23  +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_43FF07  +
mov eax 1 +
retn   +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_43FF44  +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov esi 1 +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 5Fh +
jz loc_43FF80  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
test eax eax +
js loc_43FF90  +
cmp eax 9 +
jle loc_43FF3C  +
cmp esi 1 +
jle loc_43FF3C  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_43FF41  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_43FF41  +
add eax 2 +
mov si 2 +
mov [ebx+0Ch] eax +
jmp loc_43FF55  +
xor eax eax +
jmp loc_43FF41  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_43FFB7  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+0Ch] +
jmp sub_43F9E0  +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_440005  +
cmp dword ptr [ebx] 4Bh +
ja loc_43FFF0  +
mov edx [ebx] +
jmp ds:off_479F00[edx*4]  +
mov edx [ebx+8] +
mov eax esi +
call sub_43FFD0  +
test eax eax +
jnz loc_440007  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43FFDD  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+8] +
mov eax esi +
call sub_43FFA0  +
test eax eax +
jz loc_440005  +
cmp dword ptr [eax] 2Fh +
jnz loc_440005  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_4400B3  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_44006C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_4400B3  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440051  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+124h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_440054  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_47A030 +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_440160  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_440112  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_440160  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4400F7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_4400FA  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_4401D0  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4401A0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_440193  +
test ebx ebx +
jnz loc_4401E2  +
cmp eax 2 +
mov bl 2 +
jbe loc_4401E8  +
add ebx ebx +
cmp eax ebx +
ja loc_4401E2  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_440201  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_44018C  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_440193  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_88] edx +
jz loc_44024E  +
mov eax [ecx+4] +
cmp eax 1 +
jle loc_440263  +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 1 +
mov esi [ebx+128h] +
mov [ecx+4] eax +
lea edx [esp+98h+var_68] +
mov [esp+98h+var_68] ecx +
mov ecx [ebx+118h] +
mov [ebx+128h] edx +
mov [esp+98h+var_64] esi +
test ecx ecx +
jnz loc_440334  +
mov edi [ebp+0] +
cmp edi 4Fh +
ja loc_441D76  +
jmp ds:off_47A2A8[edi*4]  +
mov eax [ebx+11Ch] +
xor edi edi +
mov esi [ebp+8] +
test eax eax +
jnz loc_4402BA  +
cmp dword ptr [esi] 5 +
jz loc_4433BC  +
mov eax [esi] +
cmp eax 23h +
jz loc_4402D1  +
cmp eax [ebp+0] +
jz loc_4402D1  +
cmp eax 24h +
jz loc_44334F  +
mov esi ebp +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] ecx +
mov [esp+98h+var_54] esi +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [esi+8] +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
mov ecx [esp+98h+var_50] +
test ecx ecx +
jz loc_4425BB  +
mov eax [esp+98h+var_58] +
test edi edi +
mov [ebx+114h] eax +
jz loc_44032D  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
sub eax 1 +
mov [ebx+128h] esi +
mov [ebp+4] eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aClone +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
jmp loc_440389  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A2A3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442485  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440366  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_440369  +
mov edx [ebp+8] +
mov eax ebx +
call sub_43FFD0  +
test eax eax +
jz loc_443ACE  +
xor edx edx +
jmp loc_4403FA  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_4403FF  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_442BCD  +
cmp dword ptr [eax] 2Fh +
jz loc_4403E5  +
mov eax [ebp+8] +
test edx edx +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jz loc_443AC2  +
mov eax [esp+98h+var_84] +
xor edi edi +
mov [esp+98h+var_78] ebp +
mov ebp [esp+98h+var_88] +
sub eax 1 +
mov [esp+98h+var_7C] eax +
mov ecx [esp+98h+var_80] +
mov edx ebp +
mov eax ebx +
mov [ebx+120h] edi +
call sub_440230  +
cmp edi [esp+98h+var_7C] +
jge loc_441D88  +
mov eax [ebx+100h] +
mov esi offset asc_47A1CF +
jmp loc_440474  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_47A1CF+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441D88  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440451  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_440454  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_4404EA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A1BAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441DF4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4404C7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4404CA  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aAbi +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
jmp loc_440573  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A038h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4424C4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440550  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_440553  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_4405E9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A19Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4422A7  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4405C6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4405C9  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType +
jmp loc_440663  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A29Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4422C1  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440640  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_440643  +
mov eax [ebx+100h] +
mov esi offset aLambda +
jmp loc_4406D9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A288h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44210B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4406B6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4406B9  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestruct +
jmp loc_440753  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A27Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442395  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440730  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_440733  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstruc +
jmp loc_4407C9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A262h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4420B2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4407A6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4407A9  +
mov eax [ebx+100h] +
mov esi offset aDecltype +
jmp loc_440843  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A234h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4420CC  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440820  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_440823  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_47A030 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4408AA  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_442567  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_44090F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442567  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4408F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_4408F3  +
cmp dword ptr [ebx+100h] 0FFh +
mov edi [ebp+8] +
jz loc_4431DD  +
mov eax [ebx+100h] +
mov ecx edi +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
mov eax [ebp+4] +
jmp loc_440334  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_440230  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx edi +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_444FB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_440A03  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A1E4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44219D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4409E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4409E3  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_440A79  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A1E4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4421F6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_440A56  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_440A59  +
mov edi [ebp+8] +
mov esi offset aOperator_0 +
mov eax [edi+8] +
mov [esp+98h+var_84] eax +
mov eax [ebx+100h] +
jmp loc_440AF9  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A1DAh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442210  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_440AD6  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_440AD9  +
mov ecx [ebp+8] +
mov esi [ebp+0Ch] +
test ecx ecx +
jz loc_440B54  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44317E  +
lea edx [eax+1] +
mov ecx esi +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44302E  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_440BC9  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_44347C  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_442EB0  +
mov edi offset asc_47A1CF +
jmp loc_440C13  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_47A1CF+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442583  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_440BF0  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov edx [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_440BF3  +
cmp word ptr [ebp+0Eh] 0 +
jnz loc_442AD3  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+8] offset off_47ADE0 +
jz loc_442BDD  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_443488  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+0Ch] 0 +
jz loc_4428A9  +
mov esi offset a_accum +
jmp loc_440CDA  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A1C7h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_44289D  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_440CB7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_440CBA  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ebp+0Ch] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_440230  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_440D6D  +
mov edx [esp+98h+var_88] +
mov ecx ebp +
mov eax ebx +
call sub_443D90  +
mov eax [esp+98h+var_58] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 3Ah +
jz loc_442941  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 38h +
jz loc_442A05  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov [esp+98h+var_7C] eax +
mov eax [eax] +
mov [esp+98h+var_84] edi +
cmp eax 31h +
jz loc_442C37  +
cmp eax 33h +
jnz loc_443D5F  +
mov edx 28h +
mov eax ebx +
call sub_43F960  +
mov eax [esp+98h+var_7C] +
mov edx [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
call sub_440230  +
mov edx 29h +
mov eax ebx +
call sub_43F960  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_445060  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov [ebx+114h] eax +
mov edi ecx +
mov [esp+98h+var_7C] ecx +
test edi edi +
mov [esp+98h+var_58] ecx +
mov ecx eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_443D37  +
mov eax [edi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_443D37  +
mov eax edi +
mov esi 1 +
mov [esp+98h+var_78] ebp +
mov [esp+98h+var_80] edx +
jmp loc_440EAD  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_440EFF  +
mov edx [eax+8] +
test edx edx +
jnz loc_440EF9  +
cmp esi 3 +
ja loc_442F87  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea edi [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [edi+4] ebp +
mov ebp [eax+8] +
mov [edi+8] ebp +
mov ebp [eax+0Ch] +
mov [edi+0Ch] ebp +
mov edi [esp+98h+var_80] +
mov [esp+edx+98h+var_58] ecx +
lea ecx [edi+edx] +
mov [ebx+114h] ecx +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_440EA0  +
mov ebp [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov ecx [ebp+0Ch] +
call sub_440230  +
mov eax [esp+98h+var_7C] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_440F69  +
cmp esi 1 +
jz loc_440F52  +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
jmp loc_440F3D  +
sub esi 1 +
mov ecx [edi] +
mov eax ebx +
sub edi 10h +
mov edx [esp+98h+var_88] +
call sub_443D90  +
cmp esi 1 +
jnz loc_440F3A  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_444A40  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
test byte ptr [esp+98h+var_88] 20h +
jnz loc_442B91  +
cmp dword ptr [ebp+8] 0 +
jz loc_440F91  +
test byte ptr [esp+98h+var_88] 40h +
jz loc_442F9A  +
mov eax [ebx+114h] +
lea ecx [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_444CC0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+8] +
xor esi esi +
cmp dword ptr [eax] 27h +
jnz loc_440FEC  +
mov eax [eax+8] +
mov esi [eax+10h] +
cmp esi 1 +
jb loc_440FEC  +
cmp esi 6 +
jbe loc_442FFB  +
cmp esi 7 +
jnz loc_440FEC  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 0 +
jnz loc_440FEC  +
cmp dword ptr [eax+0Ch] 1 +
jz loc_443CDC  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_44324D  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+8] +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44321B  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Dh +
jz loc_4435FF  +
cmp esi 8 +
jz loc_4435CD  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebx+100h] +
mov esi offset aJavaResource +
jmp loc_4410B8  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A229h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442098  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441095  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441098  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_441133  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A0D8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44207E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441110  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441113  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_4411A9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A0C2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442064  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441186  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441189  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_441223  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A0B1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44204A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441200  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441203  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_441299  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A09Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442030  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441276  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441279  +
mov eax [ebx+100h] +
mov esi offset aConstructionVt +
jmp loc_441313  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A08Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F96  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4412F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4412F3  +
mov eax [ebx+100h] +
mov esi offset aVttFor +
jmp loc_441389  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A072h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F7C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441366  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441369  +
mov eax [ebx+100h] +
mov esi offset aVtableFor +
jmp loc_441403  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A069h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F62  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4413E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4413E3  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443144  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+0Ch] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_4414D7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A188h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441E0E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4414B4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4414B7  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_441553  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A129h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441EAC  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441530  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441533  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_4415C9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A15Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F14  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4415A6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4415A9  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_441643  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A105h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441EE0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441620  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441623  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_4416B9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A170h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441E28  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441696  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441699  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_441733  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A115h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441EC6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441710  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441713  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_4417A9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A140h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F2E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441786  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441789  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_441823  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A0EAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441EFA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441800  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441803  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
test byte ptr [esp+98h+var_88] 4 +
mov edx [ebp+8] +
jnz loc_442817  +
mov edi [edx+4] +
mov ecx edi +
mov edi [edx] +
test ecx ecx +
jz loc_440334  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_4418CF  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442931  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_4418B0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_4418B3  +
mov ecx [ebx+114h] +
test ecx ecx +
mov eax ecx +
jz loc_441944  +
mov edx [eax+8] +
test edx edx +
jnz loc_44193E  +
mov edx [eax+4] +
mov edx [edx] +
lea esi [edx-19h] +
cmp esi 2 +
ja loc_441944  +
cmp edi edx +
jz loc_442DF1  +
mov eax [eax] +
test eax eax +
jnz loc_441922  +
mov esi ebp +
xor edi edi +
jmp loc_4402D7  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_440334  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_44198F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442573  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_441970  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_441973  +
mov esi ebp +
xor edi edi +
mov ecx [ebx+114h] +
jmp loc_4402D7  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov [esp+98h+var_6C] eax +
mov eax [ebp+8] +
test eax eax +
mov [esp+98h+var_7C] eax +
jz loc_443397  +
mov eax [ebx+110h] +
xor ecx ecx +
mov edi [esp+98h+var_7C] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_70] ebp +
mov ebp ecx +
mov [esp+98h+var_78] eax +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov esi edx +
xor eax eax +
mov [esp+98h+var_80] ebx +
mov [esi] eax +
mov eax [esp+98h+var_80] +
add ebp 1 +
mov ebx [edi] +
mov [esi+4] edi +
mov dword ptr [esi+8] 0 +
mov [eax+114h] esi +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_7C] esi +
mov [esi+0Ch] eax +
mov eax ebx +
call sub_43FA20  +
test eax eax +
jz loc_44388A  +
mov edi [edi+8] +
test edi edi +
jz loc_44338B  +
add esi 10h +
cmp ebp 4 +
jz loc_4425CD  +
mov eax [esp+98h+var_7C] +
jmp loc_441A34  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_440230  +
and edi 4 +
jnz loc_441DA5  +
mov eax [ebx+100h] +
mov esi offset asc_47A039 +
jmp loc_441ACF  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A03Bh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_441DCF  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_441AAC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_441AAF  +
test byte ptr [esp+98h+var_88] 4 +
jnz loc_443060  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_440334  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_441B5F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4425EB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_441B40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_441B43  +
mov ecx [ebx+11Ch] +
test ecx ecx +
jz loc_442B49  +
mov eax [ebx+100h] +
mov esi offset aAuto_0 +
jmp loc_441BE4  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A05Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4425FB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441BC1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_441BC4  +
test byte ptr [esp+98h+var_88] 4 +
mov esi [ebx+144h] +
mov edi [ebx+114h] +
mov [ebx+144h] ebp +
mov dword ptr [ebx+114h] 0 +
mov ecx [ebp+8] +
jz loc_441C60  +
mov eax [ecx] +
test eax eax +
jnz loc_441C60  +
cmp dword ptr [ecx+0Ch] 6 +
jz loc_443610  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_4434CB  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4432B9  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+0Ch] +
call sub_440230  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_4434BA  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_443287  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov [ebx+144h] esi +
mov eax [ebp+4] +
mov [ebx+114h] edi +
mov esi [esp+98h+var_64] +
jmp loc_440334  +
mov edi [ebp+8] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_4426D1  +
mov esi offset aThis +
jmp loc_441D30  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A23Dh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_44273D  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_441D0D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_441D10  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
add edi 1 +
cmp edi [esp+98h+var_84] +
jnz loc_440427  +
mov ebp [esp+98h+var_78] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443559  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov esi [ebp+0Ch] +
cmp dword ptr [esi] 46h +
jz loc_4431B0  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
jmp loc_441E66  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A176h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_441F48  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441E43  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441E46  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aIn +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
jmp loc_441FD0  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A090h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_442016  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_441FB1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_441FB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_442F49  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [ebp+4] +
jmp loc_440334  +
add dword ptr [ebx+11Ch] 1 +
mov eax ebx +
mov ecx [ebp+8] +
mov esi offset asc_47A289 +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
sub dword ptr [ebx+11Ch] 1 +
jmp loc_442157  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A28Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4423AF  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_442134  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_442137  +
mov eax [ebx+144h] +
test eax eax +
jz loc_4421BF  +
mov edx [ebx+110h] +
mov [esp+98h+var_54] eax +
mov [esp+98h+var_58] edx +
lea edx [esp+98h+var_58] +
mov [ebx+110h] edx +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 4 +
jz loc_442E0B  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_440230  +
mov edi [ebx+144h] +
test edi edi +
jz loc_4421EA  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [edi+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_442BE8  +
mov edi [esp+98h+var_84] +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
movzx eax al +
sub edi eax +
jz loc_4436EC  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_442261  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4425AF  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_442242  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_442245  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_47A030 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4422E5  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_442535  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_44234F  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_44253B  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_442330  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_442333  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+0Ch] +
mov [esp+98h+var_94] offset unk_47A030 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4423D3  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_442503  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_44243F  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442509  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_442420  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_442423  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4432EB  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_442F17  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_44331D  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_442EE5  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov edi [ebx+124h] +
call sub_440230  +
cmp edi [ebx+124h] +
jz loc_442C16  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_443D90  +
jmp loc_440315  +
mov ebx [esp+98h+var_80] +
mov esi [esp+98h+var_74] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_440334  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_47A030 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov edi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_442621  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+98h+var_84] +
jz loc_4426C5  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
lea edi [esi+edx] +
jmp loc_44267F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4426C5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_442664  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_442667  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi offset aParm +
jmp loc_4426F7  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A244h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442749  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4426D8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_4426DB  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edi +
mov edi esi +
mov [esp+98h+var_94] offset unk_47A030 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_4427E1  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_44279B  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4427E1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_442780  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_442783  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443593  +
mov eax [ebx+100h] +
mov esi [esp+98h+var_64] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_440334  +
mov edi [edx+0Ch] +
mov ecx edi +
mov edi [edx+8] +
test ecx ecx +
jz loc_440334  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_442856  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442921  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_442837  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_44283A  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi offset a_fract +
jmp loc_4428CF  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A1CEh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442915  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4428B0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_4428B3  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [eax+0Ch] +
cmp dword ptr [eax] 3Bh +
jnz loc_440D8F  +
mov ecx [ebp+8] +
lea eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_445150  +
test eax eax +
jnz loc_44354D  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov [esp+98h+var_80] ecx +
mov esi [eax+8] +
mov [esp+98h+var_84] esi +
mov esi [eax+0Ch] +
mov [esp+98h+var_94] offset aQu +
mov eax [edi+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [esp+98h+var_80] +
test eax eax +
jz loc_443B16  +
mov edx offset aNew +
mov eax ebx +
mov [esp+98h+var_80] ecx +
call sub_440030  +
mov ecx [esp+98h+var_80] +
cmp dword ptr [ecx+8] 0 +
jz loc_4429D5  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_445060  +
mov edx 20h +
mov eax ebx +
call sub_43F960  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
test esi esi +
jz loc_443D6C  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_445060  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4434DC  +
mov edx [esp+98h+var_88] +
lea eax [ebp+0Ch] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_445150  +
test eax eax +
jnz loc_44354D  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_4439BB  +
mov [esp+98h+var_94] offset aCl +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [ebp+0Ch] +
test eax eax +
jnz loc_442A64  +
mov eax [ecx+8] +
cmp dword ptr [eax] 3 +
jz loc_443BB3  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_445060  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov edi [eax] +
mov [esp+98h+var_94] offset aIx +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jz loc_443A88  +
mov [esp+98h+var_94] offset aCl +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jnz loc_443B60  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_445060  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_443A57  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_442B03  +
lea edx [eax+1] +
add esi 1 +
cmp esi 47A1C0h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_440C64  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_442AE0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_442AE3  +
lea edx [ebp+8] +
mov eax ebx +
call sub_43FFA0  +
test eax eax +
jz loc_4439FB  +
cmp dword ptr [eax] 2Fh +
jz loc_4439E8  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [ebp+4] +
mov [ebx+110h] esi +
mov esi [esp+98h+var_64] +
jmp loc_440334  +
mov esi [esp+98h+var_88] +
lea ecx [ebp+0Ch] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_444CC0  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_443AB6  +
mov edx esi +
mov eax ebx +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebp+8] +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jmp loc_440412  +
mov eax [ebx+100h] +
jmp loc_440CA5  +
cmp edx 0FFh +
jz loc_443A1D  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [edi+4] +
jmp loc_442221  +
cmp [ebx+100h] esi +
jnz loc_4425A3  +
sub esi 2 +
mov eax [ebp+4] +
mov [ebx+100h] esi +
mov esi [esp+98h+var_64] +
jmp loc_440334  +
mov eax [esp+98h+var_7C] +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_94] offset aAd +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_80] eax +
call strcmp  +
test eax eax +
jnz loc_442C65  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 3 +
jz loc_443AF4  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 38h +
jz loc_443B8A  +
mov esi [esp+98h+var_80] +
test esi esi +
jz loc_442CA2  +
mov edi offset aSz +
mov ecx 3 +
cmps   +
jz loc_442D27  +
mov esi [esp+98h+var_80] +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_44365A  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_444FB0  +
cmp [esp+98h+var_80] 0 +
jz loc_440E1D  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aGs +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jz loc_4436D1  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aSt +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jnz loc_440E1D  +
mov edx 28h +
mov eax ebx +
call sub_43F960  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax ebx +
mov edx 29h +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [esp+98h+var_84] +
mov eax ebx +
call sub_43FFD0  +
xor edx edx +
test eax eax +
jnz loc_442D51  +
jmp loc_442D56  +
mov esi [eax+8] +
test esi esi +
jz loc_442D56  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_442D56  +
cmp dword ptr [eax] 2Fh +
jz loc_442D40  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edx +
mov edi esi +
mov [esp+98h+var_94] offset unk_47A030 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_442F7B  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_442DB0  +
add esi 1 +
lea edx [eax+1] +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_442F7B  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_442D91  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov ecx [esp+98h+var_88] +
add dword ptr [ebx+124h] 1 +
jmp loc_442D91  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
cmp dword ptr [ebx+144h] 0 +
jz loc_442E2C  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_44385B  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443821  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [ebp+8] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_440230  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_4437F2  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4437B8  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
jmp loc_4421EA  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_440BE5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_442547  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4424E3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4420EB  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ebp [esp+98h+var_78] +
mov dword ptr [ebx+118h] 1 +
jmp loc_440F69  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_440230  +
mov eax [esp+98h+var_58] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jnz loc_443A11  +
mov edx 20h +
mov eax ebx +
call sub_43F960  +
jmp loc_440F91  +
mov ecx [ebp+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_440FEC  +
cmp edi 3Dh +
jz loc_443CB8  +
mov edx [esp+98h+var_88] +
mov eax ebx +
sub esi 2 +
call sub_440230  +
cmp esi 4 +
ja loc_443CAC  +
jmp ds:off_47A3E8[esi*4]  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_440B97  +
mov edi [ebp+8] +
mov ecx [ebp+0Ch] +
add ecx edi +
cmp edi ecx +
jnb loc_440334  +
mov [esp+98h+var_88] ebp +
mov ebp ecx +
jmp loc_443095  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add edi 1 +
cmp ebp edi +
jbe loc_443134  +
mov eax ebp +
sub eax edi +
cmp eax 3 +
movzx eax byte ptr [edi] +
jle loc_4430A5  +
cmp al 5Fh +
jz loc_4430EA  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jnz loc_443078  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
xor edx edx +
mov eax [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_443078  +
cmp byte ptr [edi+1] 5Fh +
jnz loc_4430A5  +
cmp byte ptr [edi+2] 55h +
jnz loc_4430A5  +
lea esi [edi+3] +
cmp ebp esi +
jbe loc_4430A5  +
xor ecx ecx +
jmp loc_443117  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add esi 1 +
add ecx eax +
cmp esi ebp +
jz loc_443D78  +
movzx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_443101  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_4433A6  +
movsx eax dl +
sub eax 37h +
jmp loc_443107  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_441459  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_440B65  +
mov edx offset aDefaultArg +
mov eax ebx +
call sub_440030  +
mov eax [esi+0Ch] +
lea edx [eax+1] +
mov eax ebx +
call sub_4400C0  +
mov edx offset asc_47A04A +
mov eax ebx +
call sub_440030  +
mov esi [esi+8] +
jmp loc_441DDB  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov esi [esp+98h+var_64] +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_440968  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_441035  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_440FFC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_441CC9  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_441C89  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4424A4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_442515  +
mov eax [ebx+114h] +
mov ecx [esi+8] +
mov esi ebp +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
test ecx ecx +
mov [esp+98h+var_4C] eax +
jnz loc_4402FE  +
jmp loc_4402FB  +
mov esi [esp+98h+var_74] +
mov ebx [esp+98h+var_80] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
jmp loc_4425E3  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_443783  +
movsx eax dl +
sub eax 57h +
jmp loc_443107  +
mov eax [ebx+130h] +
mov ecx [ebx+12Ch] +
test eax eax +
mov [esp+98h+var_80] eax +
jle loc_4433F7  +
cmp esi [ecx] +
jz loc_4436F8  +
lea eax [ecx+8] +
jmp loc_4433EE  +
mov ecx eax +
add eax 8 +
cmp esi [eax-8] +
jz loc_4436F8  +
add edi 1 +
cmp edi [esp+98h+var_80] +
jnz loc_4433E0  +
mov eax [ebx+130h] +
cmp eax [ebx+134h] +
jge loc_443D10  +
mov edx [ebx+12Ch] +
lea edi [edx+eax*8] +
add eax 1 +
mov [ebx+130h] eax +
add edi 4 +
mov eax [ebx+110h] +
mov [edi-4] esi +
jmp loc_443459  +
mov ecx [ebx+13Ch] +
cmp ecx [ebx+140h] +
jge loc_443D10  +
mov edx [ebx+138h] +
lea edx [edx+ecx*8] +
add ecx 1 +
mov [ebx+13Ch] ecx +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov [edi] edx +
mov eax [eax] +
mov edi edx +
test eax eax +
jnz loc_443429  +
mov dword ptr [edi] 0 +
cmp dword ptr [ebx+118h] 0 +
jz loc_443715  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_440C91  +
mov edx 20h +
mov eax ebx +
call sub_43F960  +
jmp loc_441CB8  +
mov edx 20h +
mov eax ebx +
call sub_43F960  +
jmp loc_441C78  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_4434F2  +
sub eax 72h +
cmp al 1 +
ja loc_442A17  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_444FB0  +
mov edx 3Ch +
mov eax ebx +
call sub_43F960  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_440230  +
mov edx offset asc_47A2A4 +
mov eax ebx +
call sub_440030  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_440230  +
mov eax ebx +
mov edx 29h +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_441DB5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4427F1  +
mov edx 5Bh +
mov eax ebx +
call sub_43F960  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax ebx +
mov edx 5Dh +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx 2Dh +
mov eax ebx +
call sub_43F960  +
jmp loc_441053  +
mov [esp+98h+var_90] 6 +
mov [esp+98h+var_94] offset aJarray +
mov eax [ecx+8] +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_98] eax +
call strncmp  +
mov ecx [esp+98h+var_84] +
test eax eax +
jnz loc_441C60  +
mov edx [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+0Ch] +
call sub_440230  +
mov edx offset asc_47A055 +
mov eax ebx +
call sub_440030  +
jmp loc_441CDD  +
mov edi [esp+98h+var_84] +
cmp dword ptr [edi] 2Fh +
jnz loc_4436BA  +
mov eax [edi+8] +
xor esi esi +
test eax eax +
jnz loc_443686  +
jmp loc_4436BC  +
add esi 1 +
mov edi [edi+0Ch] +
test edi edi +
jz loc_4436BC  +
cmp dword ptr [edi] 2Fh +
jnz loc_4436BC  +
mov eax [edi+8] +
test eax eax +
jz loc_4436BC  +
cmp dword ptr [eax] 4Ah +
jnz loc_443670  +
mov edx [eax+8] +
mov eax ebx +
call sub_43FFD0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4436B1  +
jmp loc_4436B6  +
mov ecx [edx+8] +
test ecx ecx +
jz loc_4436B6  +
mov edx [edx+0Ch] +
add eax 1 +
test edx edx +
jz loc_4436B6  +
cmp dword ptr [edx] 2Fh +
jz loc_4436A0  +
add esi eax +
jmp loc_443673  +
xor esi esi +
mov edx esi +
mov eax ebx +
call sub_4400C0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax edx +
jmp loc_443707  +
mov eax [eax+4] +
test eax eax +
jz loc_443769  +
mov edi [eax] +
cmp esi edi +
jz loc_443715  +
cmp ebp edi +
jnz loc_443700  +
cmp eax edx +
jz loc_443700  +
xor edi edi +
lea edx [esi+8] +
mov eax ebx +
call sub_43FFA0  +
test eax eax +
mov esi eax +
jz loc_443745  +
cmp dword ptr [eax] 2Fh +
jnz loc_4402BA  +
mov edx [ebx+120h] +
call sub_43F9E0  +
test eax eax +
mov esi eax +
jnz loc_4402BA  +
test edi edi +
jz loc_443753  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [ebx+110h] +
mov edi 1 +
mov [esp+98h+var_84] eax +
mov eax [ecx+4] +
mov [ebx+110h] eax +
jmp loc_443717  +
cmp ebp esi +
mov eax 5Fh +
jbe loc_4430A5  +
cmp dl 5Fh +
jnz loc_4430A5  +
cmp ecx 0FFh +
mov eax edx +
ja loc_4430A5  +
movsx edx cl +
mov eax ebx +
call sub_43F960  +
mov edi esi +
jmp loc_44308A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_442E91  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443C12  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_442E81  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_442E49  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_443BD8  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_442E39  +
mov [esp+98h+var_7C] edi +
mov edi ebx +
mov esi [esp+98h+var_74] +
cmp edi 4 +
mov ebx [esp+98h+var_80] +
mov [esp+98h+var_74] ebp +
mov ebp [esp+98h+var_70] +
jz loc_44399C  +
cmp edi 2 +
jnz loc_443927  +
mov eax [esp+98h+var_7C] +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 46h +
jz loc_443CCC  +
mov eax [esp+98h+var_74] +
lea edi [eax-1] +
shl edi 4 +
add edi [esp+98h+var_84] +
jmp loc_443914  +
cmp [esp+98h+var_74] 4 +
jz loc_443397  +
mov eax [edi+4] +
mov ecx [esp+98h+var_78] +
mov [edi+10h] edi +
mov [edi+4] edx +
mov [edi+14h] eax +
mov eax [edi+8] +
add [esp+98h+var_74] 1 +
mov dword ptr [edi+8] 0 +
mov [edi+18h] eax +
mov eax [edi+0Ch] +
mov [edi+0Ch] ecx +
mov [edi+1Ch] eax +
lea eax [edi+10h] +
mov [ebx+114h] eax +
mov edx [edx+8] +
mov edi eax +
mov eax [edx] +
mov [esp+98h+var_80] edx +
call sub_43FA20  +
mov edx [esp+98h+var_80] +
test eax eax +
jnz loc_4438D0  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax] 4 +
jnz loc_443948  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_74] +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
cmp dword ptr [edi] 0 +
jz loc_44396D  +
sub edi 10h +
test esi esi +
jz loc_443989  +
sub esi 1 +
jmp loc_44395C  +
mov eax ebx +
mov edx 20h +
call sub_43F960  +
mov ecx [edi-4] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_443D90  +
jmp loc_443961  +
mov eax [esp+98h+var_6C] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
jmp loc_4425E3  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] eax +
jmp loc_443927  +
mov edx [eax+8] +
cmp dword ptr [edx+8] 1 +
jnz loc_442A3C  +
mov edx [edx+4] +
cmp byte ptr [edx] 3Eh +
jnz loc_442A3C  +
mov eax ebx +
mov edx 28h +
call sub_43F960  +
mov eax [ebp+8] +
jmp loc_442A3C  +
mov edx [ebx+120h] +
call sub_43F9E0  +
test eax eax +
jnz loc_442B64  +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_442BF4  +
mov eax [eax+8] +
cmp dword ptr [eax+8] 1 +
jnz loc_442AC7  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_442AC7  +
mov eax ebx +
mov edx 29h +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax ebx +
mov edx 5Bh +
call sub_43F960  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_440230  +
mov edx 5Dh +
mov eax ebx +
call sub_43F960  +
jmp loc_442ABB  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_445060  +
mov eax ebx +
mov edx offset a___ +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax [eax+8] +
cmp dword ptr [eax] 1 +
jnz loc_442C72  +
mov edi [esp+98h+var_84] +
mov edx [edi+0Ch] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_84] eax +
jmp loc_442C72  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_445060  +
mov ecx edi +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_444FB0  +
mov ecx [esp+98h+var_84] +
mov edx edi +
mov eax ebx +
call sub_445060  +
mov edx offset asc_47A1FD +
mov eax ebx +
call sub_440030  +
mov ecx esi +
mov eax ebx +
mov edx edi +
call sub_445060  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_444FB0  +
jmp loc_442AAA  +
mov eax ebx +
mov edx offset aLl +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edi [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
mov edx edi +
call sub_445060  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_444FB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 29h +
jz loc_443BC5  +
mov dword ptr [ebx+118h] 1 +
mov ecx [eax+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_445060  +
jmp loc_442A72  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_44386B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_443802  +
mov eax ebx +
mov edx offset aUl +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax ebx +
mov edx 6Ch +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax ebx +
mov edx 75h +
call sub_43F960  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax ebx +
mov edx offset aUll +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov edx 2Dh +
mov eax ebx +
call sub_43F960  +
mov ecx [ebp+0Ch] +
jmp loc_443010  +
mov edx [edx+8] +
test edx edx +
jz loc_443397  +
jmp loc_4438BE  +
cmp edi 3Ch +
nop   +
jnz loc_440FEC  +
mov eax [eax+8] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_443D1F  +
cmp al 31h +
jnz loc_440FEC  +
mov eax ebx +
mov edx offset aTrue +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov dword ptr [ebx+118h] 1 +
jmp loc_443463  +
mov eax ebx +
mov edx offset aFalse +
call sub_440030  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_440230  +
mov eax [esp+98h+var_7C] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_440F52  +
jmp loc_440F69  +
mov [esp+98h+var_80] 0 +
jmp loc_442CA2  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_440334  +
mov eax 5Fh +
jmp loc_4430A5  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 4Ch +
ja loc_443E33  +
jmp ds:off_47A460[eax*4]  +
mov eax [ebx+100h] +
mov esi offset aThrow +
jmp loc_443DE5  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 47A439h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444457  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_443DC0  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_443DC3  +
mov ecx [ecx+8] +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_440230  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_443E75  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A405h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_443E52  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_443E55  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_443EF3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A40Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_443ED0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_443ED3  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_443F73  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A416h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_443F50  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_443F53  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_444504  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_444086  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_44453B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4440B6  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4444C5  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+0Ch] +
jmp loc_443E33  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_4440A5  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444665  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_4440A5  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4445B0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset asc_47A43A +
jmp loc_4440DF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A43Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4440C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_4440C3  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_444155  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A445h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444132  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_444135  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_4441D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A450h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4441B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_4441B3  +
cmp byte ptr [ebx+104h] 28h +
jz loc_44424E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444626  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax ebx +
mov esi offset asc_47A451 +
mov edx [esp+2Ch+var_14] +
call sub_440230  +
mov eax [ebx+100h] +
jmp loc_444293  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A454h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444270  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_444273  +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_444315  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 47A45Fh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4444C0  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_4442F0  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_4442F3  +
mov eax [ebx+100h] +
mov esi offset aTransaction_sa +
jmp loc_444393  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A428h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4440A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444370  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_444373  +
mov eax [ebx+100h] +
mov esi offset aNoexcept +
jmp loc_444411  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 47A432h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444457  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_4443F0  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_4443F3  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_4440A5  +
cmp edi 0FFh +
jz loc_4445E7  +
lea eax [edi+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edi] 28h +
mov byte ptr [ebx+104h] 28h +
mov ecx [ecx+0Ch] +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444572  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ecx+8] +
jmp loc_444485  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_444034  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_443FD5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_444005  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4444A4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444094  +
mov esi [ebx+10Ch] +
xor edi edi +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_444471  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_44423D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_44406B  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_34] edx +
jz loc_44472D  +
mov edi [eax+118h] +
mov esi eax +
test edi edi +
jz loc_4446CA  +
jmp loc_44472D  +
mov ecx [esi+118h] +
test ecx ecx +
jnz loc_44472D  +
mov edx [ebx+8] +
test edx edx +
jnz loc_444727  +
mov eax [esp+4Ch+arg_0] +
mov ecx [ebx+4] +
test eax eax +
mov ebp [ecx] +
jnz loc_4446F1  +
mov eax ebp +
mov [esp+4Ch+var_38] ecx +
call sub_43FA20  +
mov ecx [esp+4Ch+var_38] +
test eax eax +
jnz loc_444727  +
mov eax [ebx+0Ch] +
cmp ebp 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] eax +
jz loc_444735  +
cmp ebp 2Ah +
jz loc_444756  +
cmp ebp 2 +
jz loc_444777  +
mov edx [esp+4Ch+var_34] +
mov eax esi +
call sub_443D90  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4446C0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 0Ch +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_444CC0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_444A40  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_34] +
mov ecx [ecx+8] +
call sub_440230  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_34] 4 +
mov [esi+114h] ebp +
jnz loc_444811  +
mov ebp offset asc_47A039 +
mov [esp+4Ch+var_38] ebx +
jmp loc_4447D2  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 47A03Bh +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_44482E  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_4447B3  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_4447B6  +
cmp eax 0FFh +
jz loc_44486C  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_444832  +
mov ebx [esp+4Ch+var_38] +
mov eax [ebx+4] +
mov ebp [eax+0Ch] +
mov eax [ebp+0] +
cmp eax 46h +
jnz loc_444848  +
jmp loc_4448A3  +
mov ebp [ebp+8] +
mov eax [ebp+0] +
call sub_43FA20  +
test eax eax +
jnz loc_444842  +
mov edx [esp+4Ch+var_34] +
mov ecx ebp +
mov eax esi +
call sub_440230  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_44481B  +
mov ecx offset aDefaultArg +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_4448D1  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 47A049h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_444917  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_4448B2  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_4448B5  +
mov eax [ebp+0Ch] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset unk_47A030 +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_444A2D  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_38] edi +
mov edi eax +
jmp loc_444970  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_4449B7  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_444955  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+124h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_444958  +
mov edi [esp+4Ch+var_38] +
mov ecx offset asc_47A04A +
mov ebx ecx +
jmp loc_4449E7  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 47A04Dh +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_444842  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_4449C4  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_4449C7  +
mov eax [esi+100h] +
jmp loc_4449BB  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_444A7A  +
mov edx [eax+8] +
test edx edx +
jz loc_444B00  +
mov eax [eax] +
test eax eax +
jnz loc_444A55  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4446A0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444BC0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_444C67  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_444AD5  +
mov eax ebx +
mov edx edi +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444C30  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_444CA0  +
mov eax [ebx+100h] +
mov esi offset unk_47A594 +
jmp loc_444B3F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_47A596 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444B85  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444B20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_444B23  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4446A0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_444BF7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_444A80  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444A8E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_444BAA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444AE3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_444AAE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_4446A0  +
mov edx [ebx+100h] +
jmp loc_444A9F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_444DA0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_444DA0  +
mov eax esi +
mov edx 1 +
jmp loc_444D0E  +
and ch 0Eh +
jnz loc_444E40  +
mov eax [eax] +
test eax eax +
jz loc_444DA0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_444DA0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_444CF9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_444CF0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_444E55  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_444F72  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_444E66  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444E69  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_4446A0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_444ECD  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_444E01  +
mov eax ebx +
mov edx edi +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444F04  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_4446A0  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_444D30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444D69  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_4446A0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_444F3B  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_444DD4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_444DD7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444E0F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_444EB0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_444D4D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_444FD0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_440230  +
mov eax [ecx+8] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_445050  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_445002  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_445050  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_444FE7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_444FEA  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_445073  +
cmp eax 30h +
jnz loc_445080  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
jmp sub_440230  +
cmp eax 6 +
jz loc_445073  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_445108  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_440230  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4450D4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4450BD  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+24h+var_8] ecx +
mov [esp+24h+var_C] edx +
mov [esp+24h+var_1C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_24] ebx +
call eax  +
xor eax eax +
mov ecx [esp+24h+var_8] +
add dword ptr [ebx+124h] 1 +
mov edx [esp+24h+var_C] +
jmp loc_445095  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax] 66h +
jz loc_445170  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [esp+2Ch+arg_0] +
xor ebp ebp +
mov edx [edx] +
mov esi [edx+8] +
mov [esp+2Ch+var_18] esi +
mov esi [edx+0Ch] +
cmp dword ptr [esi] 3Bh +
jz loc_445354  +
mov ecx [ebx+120h] +
mov dword ptr [ebx+120h] 0FFFFFFFFh +
movzx eax byte ptr [eax+1] +
mov [esp+2Ch+var_14] ecx +
cmp al 52h +
jz loc_445364  +
jle loc_445360  +
cmp al 6Ch +
jz loc_445280  +
cmp al 72h +
lea esi [esi+0] +
jnz loc_44533D  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4454A7  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a____0 +
mov byte ptr [ebx+104h] 28h +
call sub_445060  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_444FB0  +
mov eax [ebx+100h] +
jmp loc_445233  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A5A0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44533D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445210  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_18] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_18] +
jmp loc_445213  +
mov eax [ebx+100h] +
mov ebp offset a____1 +
jmp loc_4452B3  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 47A59Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_445420  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_445290  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_445293  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_444FB0  +
mov ecx ebp +
mov eax ebx +
mov edx edi +
call sub_445060  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_445434  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [esp+2Ch+var_14] +
mov [ebx+120h] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+0Ch] +
mov esi [esi+8] +
jmp loc_44518D  +
cmp al 4Ch +
jnz loc_44533D  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_445470  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a___ +
mov byte ptr [ebx+104h] 28h +
call sub_445060  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_444FB0  +
mov eax [ebx+100h] +
jmp loc_4453D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47A238h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_445300  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4453B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_4453B3  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_444FB0  +
mov ecx esi +
jmp loc_44530F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_44532C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_445378  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4451DA  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_445520  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_445520  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_445520  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 0 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_445568  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_445568  +
test edx edx +
jz loc_445568  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 32h +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_4455B0  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_4455B0  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_4455B2  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 7 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_445600  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_445600  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_445602  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 8 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [ebx+0Ch] +
mov eax esi +
call sub_43FEF0  +
test eax eax +
jnz loc_445690  +
movsx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 4Ah +
ja loc_445685  +
movzx eax al +
jmp ds:off_47A5B8[eax*4]  +
mov esi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_446CB0  +
mov edx 42h +
mov [ebx+34h] esi +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_445685  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_445685  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_445728  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_447320  +
test eax eax +
mov esi eax +
jz loc_445685  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4456F0  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_445685  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_445700  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_445685  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_445685  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_446540  +
mov edx eax +
mov [esi] eax +
jmp loc_4456B7  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+8] +
mov [edx+8] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_4456C5  +
mov eax ebx +
call sub_447620  +
mov [esp+2Ch+var_10] eax +
nop   +
test eax eax +
jz loc_445685  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_445685  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_43FB70  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
mov ecx [ebx+14h] +
cmp ecx [ebx+18h] +
jl loc_445D06  +
mov edx large ds:8 +
xor eax eax +
mov edx [edx+4] +
add esi 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] esi +
jmp loc_445687  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_43FB70  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_445DB0  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
movzx eax byte ptr [esi+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_4457FC  +
cmp al 5Fh +
jz loc_4457FC  +
sub eax 41h +
cmp al 19h +
ja loc_445D6A  +
xor edx edx +
mov eax ebx +
call sub_43FC90  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_445687  +
mov eax ebx +
call sub_4475F0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_43F800  +
nop   +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
mov eax ebx +
call sub_43FB20  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_445720  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_445DD5  +
test eax eax +
jz loc_445685  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_445685  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_4475F0  +
jmp loc_44581C  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
test eax eax +
mov esi eax +
jz loc_445A4D  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
test eax eax +
jz loc_445A4D  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_43F800  +
jmp loc_445830  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
mov eax ebx +
call sub_446540  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
lea eax [esi+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [esi+1] 0 +
jz loc_445685  +
lea eax [esi+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [esi+1] +
sub eax 46h +
cmp al 30h +
ja loc_445685  +
movzx eax al +
jmp ds:off_47A6E4[eax*4]  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
lea edx [esi+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [esi+1] +
cmp al 5Fh +
jz loc_445D37  +
sub eax 30h +
cmp al 9 +
ja loc_445D8B  +
add esi 2 +
mov ecx esi +
mov [ebx+0Ch] esi +
movzx eax byte ptr [ecx] +
add esi 1 +
sub eax 30h +
cmp al 9 +
jbe loc_445A20  +
sub ecx edx +
mov eax ebx +
call sub_43F860  +
test eax eax +
mov esi eax +
jz loc_445A4D  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_445D39  +
xor eax eax +
jmp loc_445830  +
cmp byte ptr [esi+2] 5Fh +
jz loc_445E41  +
mov eax ebx +
call sub_43FAA0  +
mov esi eax +
test esi esi +
jz loc_445A4D  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_445830  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_43F800  +
jmp loc_445830  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AF98 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AF98 +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_445687  +
mov ecx 0Eh +
mov edx offset aDecltypeAuto +
mov eax ebx +
call sub_43F860  +
jmp loc_445687  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AF84 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AF84 +
jmp loc_445AD0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AF48 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AF48 +
jmp loc_445AD0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AF70 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AF70 +
jmp loc_445AD0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AF5C +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AF5C +
jmp loc_445AD0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AFC0 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AFC0 +
jmp loc_445AD0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_445D5D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_47AFAC +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_47AFAC +
jmp loc_445AD0  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov edx 4Ah +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
jmp loc_445720  +
mov eax [ebx+14h] +
xor edi edi +
cmp eax [ebx+18h] +
jge loc_445C83  +
mov edi eax +
add eax 1 +
shl edi 4 +
add edi [ebx+10h] +
mov dword ptr [edi+4] 0 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_10] edi +
mov dword ptr [edi] 2Ch +
movzx eax byte ptr [esi+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [edi+0Ch] ax +
jnz loc_445E62  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov [edi+8] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+8] +
test eax eax +
jz loc_445685  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_445CE3  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Eh] dx +
jmp loc_445687  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_43F860  +
jmp loc_445687  +
lea eax [edx+edx*4-1E5h] +
lea edx ds:47AD40h[eax*4] +
mov eax ecx +
shl eax 4 +
add ecx 1 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] ecx +
mov dword ptr [eax] 27h +
mov [eax+8] edx +
jmp loc_44578C  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_43F800  +
jmp loc_445830  +
mov edx large ds:8 +
xor eax eax +
jmp loc_445AD0  +
mov eax ebx +
call sub_447620  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_445685  +
cmp dword ptr [eax] 18h +
jnz loc_445728  +
jmp loc_445687  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_446CB0  +
mov [ebx+34h] edi +
test eax eax +
mov esi eax +
jnz loc_445A41  +
xor eax eax +
jmp loc_445830  +
mov eax ebx +
call sub_4475F0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_43F800  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_4457BF  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_4475F0  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_445E18  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_445720  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_445685  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_445685  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_44581C  +
add esi 3 +
mov edi [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
call sub_446CB0  +
mov [ebx+34h] edi +
mov esi eax +
jmp loc_445A67  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
mov edi [esp+2Ch+var_10] +
jmp loc_445CA9  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_445EF0  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_446019  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+20h+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_445F50  +
movzx eax [esp+20h+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_445EF7  +
mov eax esi +
call sub_43FB70  +
mov ecx [esi+14h] +
cmp ecx [esi+18h] +
jl loc_445FE1  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov [esp+20h+var_11] 0 +
mov eax 43h +
xor edx edx +
mov [esp+20h+var_18] eax +
jmp loc_445F10  +
jge loc_445F48  +
mov [esp+20h+var_18] ebx +
cmp edx [esp+20h+var_18] +
jz loc_445EE0  +
mov ecx [esp+20h+var_18] +
mov eax edi +
sub ecx edx +
mov ebx ecx +
shr ebx 1Fh +
add ebx ecx +
sar ebx 1 +
add ebx edx +
mov ecx ebx +
shl ecx 4 +
lea ebp off_47B180[ecx] +
mov ecx ds:off_47B180[ecx] +
cmp al [ecx] +
jnz loc_445F04  +
movzx ecx byte ptr [ecx+1] +
cmp [esp+20h+var_11] cl +
jz loc_445FB0  +
cmp cl [esp+20h+var_11] +
jg loc_445F06  +
lea edx [ebx+1] +
jmp loc_445F0A  +
cmp [esp+20h+var_11] 76h +
jnz loc_445EF7  +
mov eax edi +
cmp al 63h +
jnz loc_445EF7  +
mov edx [esi+34h] +
xor eax eax +
mov ebx [esi+38h] +
mov [esp+20h+var_20] esi +
test edx edx +
setz al  +
mov [esi+38h] eax +
call sub_445610  +
mov ecx [esi+38h] +
mov [esp+20h+var_20] 0 +
test ecx ecx +
mov ecx eax +
jnz loc_445FA0  +
mov edx 33h +
mov eax esi +
call sub_43F800  +
mov [esi+38h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 34h +
mov eax esi +
call sub_43F800  +
jmp loc_445F91  +
mov edx [esi+14h] +
xor eax eax +
cmp edx [esi+18h] +
jge loc_445EE2  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov dword ptr [eax] 31h +
mov [eax+8] ebp +
jmp loc_445EE2  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [esi+10h] +
test eax eax +
mov dword ptr [edx+4] 0 +
mov [esi+14h] ecx +
jz loc_445EE0  +
movsx ecx [esp+20h+var_11] +
mov [edx+0Ch] eax +
mov eax edx +
mov dword ptr [edx] 32h +
sub ecx 30h +
mov [edx+8] ecx +
jmp loc_445EE2  +
mov [esp+20h+var_11] 0 +
jmp loc_445EB2  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_4460D0  +
cmp dl 45h +
jz loc_4460D0  +
cmp dl 2Eh +
jz loc_4460D0  +
lea esi [esp+24h+var_8] +
jmp loc_4460A4  +
cmp byte ptr [eax+1] 45h +
jz loc_4460B4  +
mov [esp+24h+var_24] ebx +
call sub_445610  +
test eax eax +
jz loc_4460D0  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_43F800  +
test eax eax +
mov [esi] eax +
jz loc_4460D0  +
lea esi [eax+0Ch] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_4460B4  +
cmp dl 45h +
jz loc_4460B4  +
cmp dl 2Eh +
jz loc_4460B4  +
cmp dl 4Fh +
jz loc_446060  +
cmp dl 52h +
jnz loc_446066  +
cmp byte ptr [eax+1] 45h +
jnz loc_446066  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_4460D0  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4460D8  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
cmp dword ptr [edx] 27h +
jnz loc_4460C3  +
mov edx [edx+8] +
cmp dword ptr [edx+10h] 9 +
jnz loc_4460C3  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+8] 0 +
jmp loc_4460C3  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4461F2  +
lea ecx [eax-61h] +
cmp cl 19h +
ja loc_446160  +
cmp al 6Fh +
jz loc_4462F0  +
mov eax ebx +
call sub_445E80  +
test eax eax +
mov ebp eax +
jz loc_446141  +
cmp dword ptr [eax] 31h +
jz loc_446305  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jz loc_44620A  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax-43h] +
cmp cl 1 +
jbe loc_446350  +
cmp al 4Ch +
jz loc_4462C0  +
cmp al 55h +
jnz loc_4462E2  +
movzx eax byte ptr [edx+1] +
cmp al 6Ch +
jz loc_446220  +
cmp al 74h +
jnz loc_4462E2  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 74h +
jnz loc_446147  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_43FAE0  +
test eax eax +
js loc_446141  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4461E5  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 47h +
jl loc_4462AA  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
xor ebp ebp +
jmp loc_446147  +
mov eax ebx +
call sub_43FB70  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jnz loc_446150  +
add esp 1Ch +
mov edx ebp +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_43FC40  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 6Ch +
jnz loc_446147  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_446030  +
test eax eax +
mov esi eax +
jz loc_446141  +
mov edx [ebx+0Ch] +
movzx ecx byte ptr [edx] +
cmp cl 45h +
jnz loc_446147  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_43FAE0  +
test eax eax +
js loc_4461E5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4461E5  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] esi +
mov [ebp+0Ch] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 45h +
jge loc_4461E5  +
mov edx [ebx+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [ebx+20h] eax +
jmp loc_446141  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_43FB70  +
test eax eax +
mov ebp eax +
jz loc_4462E2  +
mov eax ebx +
call sub_43FF30  +
test eax eax +
jnz loc_446141  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_44612B  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_44612B  +
mov edx [eax+8] +
mov edi offset unk_47A7A8 +
mov ecx 3 +
mov eax [ebx+30h] +
add eax [edx+8] +
mov esi [edx] +
add eax 7 +
mov [ebx+30h] eax +
cmps   +
jnz loc_446141  +
mov eax ebx +
call sub_43FB70  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
jmp loc_446147  +
mov edi [ebx+2Ch] +
test edi edi +
jz loc_44649E  +
mov esi [edi] +
test esi esi +
jz loc_446404  +
cmp esi 18h +
mov ecx eax +
jz loc_446404  +
cmp cl 43h +
jz loc_446412  +
cmp cl 44h +
jnz loc_4461EB  +
movzx eax byte ptr [edx+1] +
sub eax 30h +
cmp al 5 +
ja loc_4463FD  +
movzx eax al +
jmp ds:off_47A7AC[eax*4]  +
mov ecx 2 +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4464AC  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_4464AC  +
mov dword ptr [ebp+0] 8 +
mov [ebp+8] ecx +
mov [ebp+0Ch] edi +
movzx ecx byte ptr [edx+2] +
jmp loc_446147  +
mov ecx 1 +
jmp loc_44639C  +
mov ecx 5 +
jmp loc_44639C  +
mov ecx 4 +
jmp loc_44639C  +
mov ecx 3 +
jmp loc_44639C  +
xor ebp ebp +
jmp loc_446150  +
mov eax [edi+0Ch] +
add [ebx+30h] eax +
movzx ecx byte ptr [edx] +
jmp loc_446370  +
movzx eax byte ptr [edx+1] +
xor ecx ecx +
cmp al 49h +
jz loc_4464B5  +
sub eax 31h +
cmp al 4 +
ja loc_4464CB  +
movzx eax al +
jmp ds:off_47A7C4[eax*4]  +
mov esi 2 +
add edx 2 +
test ecx ecx +
mov [ebx+0Ch] edx +
jz loc_44644F  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edi [ebx+2Ch] +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4464A5  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_4464A5  +
mov dword ptr [ebp+0] 7 +
mov [ebp+8] esi +
mov [ebp+0Ch] edi +
jmp loc_446141  +
mov esi 1 +
jmp loc_44643A  +
mov esi 4 +
jmp loc_44643A  +
mov esi 3 +
jmp loc_44643A  +
mov esi 5 +
jmp loc_44643A  +
mov ecx eax +
jmp loc_446370  +
xor ebp ebp +
jmp loc_446141  +
xor ebp ebp +
nop   +
jmp loc_4463D8  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [edx+2] +
mov edx ecx +
mov ecx 1 +
jmp loc_446420  +
movzx ecx byte ptr [edx] +
xor ebp ebp +
jmp loc_446147  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_446517  +
xor esi esi +
test edx edx +
jnz loc_44651D  +
mov eax ebx +
call sub_446030  +
test eax eax +
jz loc_446530  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_43F800  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_445610  +
test eax eax +
mov esi eax +
jnz loc_4464F5  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_446511  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_446555  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_446567  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_4464E0  +
mov edx eax +
mov eax ebx +
call sub_43F8B0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_44654E  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov [esp+48h+var_1C] 0 +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_35] dl +
mov [esp+48h+var_3C] eax +
cmp [ebx] dl +
jz loc_446BA6  +
mov edx ebx +
lea esi [esi+0] +
mov ebx [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4467F3  +
cmp al 54h +
jz loc_446810  +
cmp al 73h +
jz loc_446732  +
cmp al 66h +
jz loc_446770  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4466C6  +
cmp al 6Fh +
jz loc_4466B6  +
cmp al 74h +
setz cl  +
jnz loc_446CA1  +
cmp byte ptr [edx+1] 6Ch +
jz loc_446910  +
mov eax ebp +
call sub_445E80  +
test eax eax +
mov [esp+48h+var_34] eax +
jz loc_4467E6  +
mov edx [eax] +
cmp edx 31h +
jz loc_446820  +
cmp edx 32h +
jz loc_446944  +
cmp edx 33h +
jnz loc_4467E6  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_2C] 0 +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_446BD6  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_44667C  +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_446B7A  +
mov eax ebp +
call sub_446CB0  +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
test edx edx +
jz loc_44669F  +
mov ecx eax +
mov edx 38h +
mov eax ebp +
call sub_43F800  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_34] +
mov edx 36h +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_446616  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_446100  +
test eax eax +
jz loc_4467E6  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_446958  +
mov [ebp+34h] ebx +
mov [esp+48h+var_48] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_43F800  +
mov edi [esp+48h+var_3C] +
test eax eax +
mov [edi] eax +
jz loc_4467E9  +
mov edx [ebp+0Ch] +
add eax 0Ch +
mov [esp+48h+var_3C] eax +
movzx eax [esp+48h+var_35] +
cmp [edx] al +
jnz loc_4465C0  +
mov ebx edx +
mov eax [esp+48h+var_1C] +
add ebx 1 +
mov [ebp+0Ch] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_446A96  +
cmp al 70h +
jnz loc_446616  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_446CB0  +
mov edx 4Ah +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
cmp byte ptr [edx+1] 70h +
jnz loc_446616  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_446A30  +
mov eax ebp +
call sub_43FAE0  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_4467E6  +
add eax 1 +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_4467E6  +
mov ecx edx +
add edx 1 +
shl ecx 4 +
add ecx [ebp+10h] +
mov dword ptr [ecx+4] 0 +
mov [ebp+14h] edx +
mov dword ptr [ecx] 6 +
mov [ecx+8] eax +
jmp loc_4466E3  +
mov [esp+48h+var_48] ebp +
call sub_445610  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_44691A  +
mov [ebp+34h] ebx +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_448140  +
mov ecx eax +
lea esi [esi+0] +
test ecx ecx +
mov [ebp+34h] ebx +
jnz loc_4466E6  +
jmp loc_4467E9  +
mov eax ebp +
call sub_43FB20  +
mov ecx eax +
jmp loc_446800  +
mov eax [eax+8] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_446AD3  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_446C3D  +
jle loc_446A70  +
cmp eax 2 +
jz loc_446980  +
cmp eax 3 +
jnz loc_4467E6  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_4467E6  +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_446AF6  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_446C07  +
cmp al 6Eh +
jnz loc_4467E6  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_446BFA  +
mov edx 5Fh +
mov eax ebp +
call sub_446590  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_445610  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_446BED  +
cmp al 70h +
jz loc_446C1A  +
cmp al 69h +
jnz loc_4467E6  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_4467E6  +
mov eax ebp +
call sub_446CB0  +
jmp loc_446B17  +
xor esi esi +
test cl cl +
jnz loc_4467CF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_446590  +
mov ecx esi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_30] 0 +
mov eax [eax+8] +
jmp loc_44685B  +
mov [esp+48h+var_34] eax +
mov eax ebp +
call sub_4475F0  +
mov ecx [esp+48h+var_34] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_4467E6  +
mov eax [esp+48h+var_34] +
mov eax [eax+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_446B53  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 66h +
jz loc_446BC6  +
mov eax ebp +
call sub_446CB0  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_446AE3  +
mov esi [esp+48h+var_30] +
mov edi offset unk_47A7D8 +
mov ecx 3 +
cmps   +
jz loc_446A40  +
mov esi [esp+48h+var_30] +
mov edi offset unk_47A7DB +
mov ecx 3 +
cmps   +
jz loc_446A40  +
mov eax ebp +
call sub_446CB0  +
mov esi eax +
lea esi [esi+0] +
mov ecx [esp+48h+var_2C] +
mov edx 38h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_43F800  +
mov ecx [esp+48h+var_34] +
mov edx 37h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
add edx 3 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_4467A4  +
mov eax ebp +
call sub_446100  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_446A00  +
mov eax ebp +
call sub_4475F0  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov esi eax +
jmp loc_446A00  +
test eax eax +
jnz loc_4467E6  +
mov ecx [esp+48h+var_34] +
mov edx 35h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+48h+var_48] ebp +
call sub_445610  +
mov esi eax +
mov eax ebp +
call sub_446100  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_446B86  +
mov [esp+48h+var_48] eax +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
mov [esp+48h+var_48] ebp +
call sub_445610  +
mov [esp+48h+var_48] eax +
jmp loc_44669F  +
mov edx 45h +
mov eax ebp +
call sub_446590  +
mov esi eax +
jmp loc_446A00  +
mov eax ebp +
call sub_446CB0  +
mov esi eax +
mov eax ebp +
call sub_446CB0  +
mov edi eax +
mov eax ebp +
call sub_446CB0  +
test eax eax +
jz loc_4467E6  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebp +
call sub_43F800  +
mov ecx esi +
mov edx 3Ah +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov ecx [esp+48h+var_34] +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov ecx eax +
jmp loc_446800  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_446B69  +
sub eax 72h +
cmp al 1 +
ja loc_44699F  +
mov [esp+48h+var_48] ebp +
call sub_445610  +
mov [esp+48h+var_2C] eax +
jmp loc_4469B7  +
mov eax ebp +
call sub_4474E0  +
jmp loc_446683  +
mov eax ebp +
call sub_4475F0  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_43F800  +
mov [esp+48h+var_48] eax +
jmp loc_446ABE  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_43F800  +
jmp loc_4467EB  +
mov eax ebp +
call sub_445E80  +
mov [esp+48h+var_2C] eax +
jmp loc_4469B7  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_446590  +
jmp loc_446683  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_446B17  +
cmp al 77h +
jz loc_4468C1  +
jmp loc_4467E6  +
mov eax ebp +
lea esi [esi+0] +
call sub_445E80  +
jmp loc_446AFD  +
cmp byte ptr [edx+1] 69h +
nop   +
jnz loc_4467E6  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_446590  +
jmp loc_446B17  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_446C97  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_446C66  +
cmp al 70h +
mov [esp+48h+var_2C] 0 +
jz loc_446C66  +
cmp edx 33h +
jnz loc_446662  +
jmp loc_446656  +
mov esi [esp+48h+var_30] +
mov [esp+48h+var_2C] 0 +
cmp al [esi+1] +
jnz loc_446C58  +
mov eax [ebp+0Ch] +
mov [esp+48h+var_2C] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_446C58  +
add eax 1 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_2C] 0 +
jmp loc_446C58  +
mov [esp+48h+var_2C] 0 +
jmp loc_446C58  +
cmp al 69h +
jz loc_44660C  +
jmp loc_446616  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_447005  +
cmp al 54h +
jz loc_447013  +
cmp al 73h +
jz loc_446E37  +
cmp al 66h +
jz loc_446DD0  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_446D10  +
mov eax ebx +
call sub_446100  +
test eax eax +
jz loc_446FE3  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_447031  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_446FF0  +
cmp al 74h +
setz cl  +
jnz loc_447311  +
cmp byte ptr [edx+1] 6Ch +
jz loc_446FA0  +
mov eax ebx +
call sub_445E80  +
test eax eax +
mov ebp eax +
jz loc_446FE3  +
mov eax [eax] +
cmp eax 31h +
jz loc_446E74  +
cmp eax 32h +
jz loc_447021  +
cmp eax 33h +
jnz loc_446FE3  +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_14] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_44714E  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_446D93  +
mov edi offset aSp +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_4471FF  +
mov eax ebx +
call sub_446CB0  +
mov edx [esp+1Ch+var_14] +
mov [esp+1Ch+var_1C] eax +
test edx edx +
jz loc_446DB6  +
mov ecx eax +
mov edx 38h +
mov eax ebx +
call sub_43F800  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 36h +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
cmp byte ptr [edx+1] 70h +
jnz loc_446D2D  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_447141  +
mov eax ebx +
call sub_43FAE0  +
mov edx eax +
add eax 1 +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_446FE3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_446FE3  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [esi] 6 +
mov [esi+8] eax +
jmp loc_446D04  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_447050  +
cmp al 70h +
jnz loc_446D2D  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_446CB0  +
mov edx 4Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
mov edi [ebp+8] +
mov ecx [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov esi ecx +
mov [esp+1Ch+var_18] ecx +
lea ecx [edi-2] +
add [ebx+30h] ecx +
mov ecx 3 +
mov [esp+1Ch+var_14] edi +
mov edi offset aSt +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_447190  +
mov edi [esp+1Ch+var_10] +
mov ecx [edi+0Ch] +
cmp ecx 1 +
jz loc_4472B1  +
jle loc_447165  +
cmp ecx 2 +
jz loc_447090  +
cmp ecx 3 +
jnz loc_446FE3  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_446FE3  +
mov edi offset aQu +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_4471B0  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_447284  +
cmp al 6Eh +
jnz loc_446FE3  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_447275  +
mov edx 5Fh +
mov eax ebx +
call sub_446590  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_445610  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_447268  +
cmp al 70h +
jz loc_447290  +
cmp al 69h +
jnz loc_446FE3  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_446FE3  +
mov eax ebx +
call sub_446CB0  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebx +
call sub_43F800  +
mov ecx esi +
mov edx 3Ah +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov ecx ebp +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
xor esi esi +
test cl cl +
jnz loc_446FD0  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_446590  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_446FA6  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_446D2D  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_446CE7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_448140  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_43FB20  +
mov ecx [ebp+8] +
mov [esp+1Ch+var_18] 0 +
jmp loc_446EB5  +
mov eax ebx +
call sub_4475F0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov esi eax +
mov eax ebx +
call sub_446100  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_44720B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_446FE3  +
mov eax [ebp+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4471D8  +
mov eax [esp+1Ch+var_18] +
cmp byte ptr [eax] 66h +
jz loc_44722B  +
mov eax ebx +
call sub_446CB0  +
mov [esp+1Ch+var_14] eax +
mov esi [esp+1Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_44719D  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_47A7D8 +
mov ecx 3 +
cmps   +
jz loc_447101  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_47A7DB +
mov ecx 3 +
cmps   +
jnz loc_44723B  +
mov eax ebx +
call sub_446100  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_447249  +
mov ecx [esp+1Ch+var_14] +
mov edx 38h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_43F800  +
mov ecx ebp +
mov edx 37h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_446E08  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_446590  +
jmp loc_446D9A  +
test ecx ecx +
jnz loc_446FE3  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_446D04  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
jmp loc_446DB3  +
mov edx 45h +
mov eax ebx +
call sub_446590  +
mov esi eax +
jmp loc_447116  +
mov eax ebx +
call sub_446CB0  +
mov esi eax +
mov eax ebx +
call sub_446CB0  +
mov edi eax +
mov eax ebx +
call sub_446CB0  +
test eax eax +
jnz loc_446F64  +
xor esi esi +
jmp loc_446FE5  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4471EE  +
sub eax 72h +
cmp al 1 +
ja loc_4470AB  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov [esp+1Ch+var_14] eax +
jmp loc_4470C3  +
mov eax ebx +
call sub_4474E0  +
jmp loc_446D9A  +
mov eax ebx +
call sub_4475F0  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov [esp+1Ch+var_1C] eax +
jmp loc_447078  +
mov eax ebx +
call sub_445E80  +
mov [esp+1Ch+var_14] eax +
jmp loc_4470C3  +
mov eax ebx +
call sub_446CB0  +
mov esi eax +
jmp loc_447116  +
mov eax ebx +
call sub_4475F0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
mov esi eax +
jmp loc_447116  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_446F64  +
cmp al 77h +
jz loc_446F1D  +
xor esi esi +
jmp loc_446FE5  +
mov eax ebx +
call sub_445E80  +
jmp loc_4471B7  +
cmp byte ptr [edx+1] 69h +
jnz loc_446FE3  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_446590  +
jmp loc_446F64  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
test edi edi +
jz loc_4472CE  +
movzx ecx byte ptr [edi] +
cmp cl 6Dh +
jz loc_4472E0  +
cmp cl 70h +
jz loc_4472E0  +
cmp eax 33h +
jnz loc_446D77  +
jmp loc_446D6B  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
cmp cl [edi+1] +
jnz loc_4472CE  +
mov ecx [ebx+0Ch] +
mov [esp+1Ch+var_14] 1 +
cmp byte ptr [ecx] 5Fh +
jnz loc_4472CE  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+1Ch+var_14] 0 +
jmp loc_4472CE  +
cmp al 69h +
jz loc_446D23  +
jmp loc_446D2D  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edi [eax+0Ch] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_18] ecx +
movzx ebp byte ptr [edi] +
jmp loc_447397  +
mov eax ebp +
cmp al 56h +
jz loc_447420  +
mov eax ebp +
cmp al 4Bh +
jz loc_447438  +
cmp byte ptr [edi+1] 0 +
jz loc_447414  +
lea eax [edi+2] +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edi+1] +
cmp cl 78h +
jnz loc_4473C7  +
add dword ptr [ebx+30h] 11h +
xor eax eax +
mov edx 4Ch +
mov [esp+20h+var_20] eax +
xor ecx ecx +
mov eax ebx +
call sub_43F800  +
test eax eax +
mov [esi] eax +
jz loc_447414  +
mov edi [ebx+0Ch] +
lea esi [eax+8] +
movzx ebp byte ptr [edi] +
mov eax edi +
call sub_43FEF0  +
test eax eax +
jz loc_447480  +
lea eax [edi+1] +
mov [ebx+0Ch] eax +
mov eax ebp +
cmp al 72h +
jnz loc_447340  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_447378  +
mov eax ecx +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_447450  +
add dword ptr [ebx+30h] 9 +
xor eax eax +
cmp cl 4Fh +
mov edx 4Eh +
jnz loc_447378  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_446CB0  +
mov [ebx+34h] edi +
test eax eax +
jz loc_447414  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_447414  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Eh +
jmp loc_447378  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_447378  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Eh +
add dword ptr [ebx+30h] 6 +
jmp loc_447378  +
cmp cl 77h +
jnz loc_447414  +
add dword ptr [ebx+30h] 6 +
mov eax ebx +
call sub_446030  +
test eax eax +
jz loc_447414  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_447414  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Fh +
jmp loc_447378  +
mov eax [esp+20h+var_18] +
test eax eax +
jnz loc_447494  +
mov eax ebp +
cmp al 46h +
jnz loc_447494  +
cmp esi [esp+20h+var_14] +
jnz loc_4474BC  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1Bh +
jz loc_4474D3  +
cmp eax 19h +
jnz loc_4474B1  +
mov dword ptr [ebp+0] 1Ch +
lea eax [ebp+8] +
cmp esi eax +
mov [esp-0Ch+arg_8] eax +
jz loc_447494  +
mov eax [esp-0Ch+arg_8] +
mov ebp [eax] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_4474A0  +
mov dword ptr [ebp+0] 1Dh +
jmp loc_4474B1  +
mov dword ptr [ebp+0] 1Eh +
jmp loc_4474B1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov edx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_4475C5  +
mov [esp+2Ch+var_10] 0 +
lea esi [esp+2Ch+var_10] +
jmp loc_447546  +
sub eax 49h +
cmp al 1 +
ja loc_447590  +
mov eax ebx +
call sub_4475F0  +
mov ecx eax +
test ecx ecx +
jz loc_447574  +
mov [esp+2Ch+var_2C] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_43F800  +
test eax eax +
mov [esi] eax +
jz loc_447574  +
mov edx [ebx+0Ch] +
lea esi [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_4475B0  +
cmp al 4Ch +
jz loc_4475A0  +
jle loc_447508  +
cmp al 58h +
nop   +
jnz loc_447590  +
add edx 1 +
mov ebp [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] edx +
mov dword ptr [ebx+34h] 1 +
call sub_446CB0  +
mov edx [ebx+0Ch] +
mov [ebx+34h] ebp +
cmp byte ptr [edx] 45h +
jz loc_447580  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_44751C  +
mov [esp+2Ch+var_2C] ebx +
call sub_445610  +
mov ecx eax +
jmp loc_44751C  +
mov eax ebx +
call sub_448140  +
mov ecx eax +
jmp loc_44751C  +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
xor ecx ecx +
mov [ebx+0Ch] edx +
mov eax ebx +
mov edx 2Fh +
mov [esp+2Ch+var_2C] 0 +
call sub_43F800  +
jmp loc_447576  +
***
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
sub ecx 49h +
cmp cl 1 +
ja loc_447610  +
add edx 1 +
mov [eax+0Ch] edx +
jmp sub_4474E0  +
xor eax eax +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_4477A4  +
jle loc_447683  +
cmp al 55h +
jz loc_447670  +
cmp al 5Ah +
nop   +
jnz loc_447750  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_447A30  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov edi eax +
jz loc_447910  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_446100  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_447750  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_447320  +
test eax eax +
mov edi eax +
jz loc_447663  +
xor edx edx +
mov eax esi +
call sub_43F8B0  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_447742  +
cmp bl 44h +
jz loc_4478A6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_447850  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_447850  +
cmp bl 43h +
jz loc_447850  +
cmp bl 55h +
jz loc_447850  +
cmp bl 4Ch +
jz loc_447850  +
cmp bl 53h +
jz loc_4478F0  +
cmp bl 49h +
jz loc_4478D0  +
cmp bl 54h +
jz loc_447901  +
cmp bl 45h +
nop   +
jz loc_4479ED  +
cmp bl 4Dh +
jnz loc_447742  +
test ebp ebp +
lea esi [esi+0] +
jz loc_447742  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_4476C4  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_447665  +
mov eax esi +
call sub_446100  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_447679  +
test eax eax +
jz loc_447663  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_447663  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_4475F0  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_43F800  +
mov ebx eax +
jmp loc_447679  +
cmp byte ptr [edx+1] 74h +
jz loc_4477E2  +
xor edx edx +
mov eax esi +
call sub_43FC90  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_447679  +
mov eax esi +
call sub_4475F0  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_43F800  +
mov ebx eax +
jmp loc_447679  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_446100  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_43F860  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_43F800  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_447679  +
test edi edi +
jz loc_447663  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_447663  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_4477C3  +
mov eax esi +
call sub_446100  +
test ebp ebp +
jz loc_4478C0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_43F800  +
mov ebp eax +
cmp bl 53h +
jz loc_44789B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_4478C4  +
test ebp ebp +
jz loc_447742  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_447742  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_4476C0  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_447850  +
mov [esp+30h+var_30] esi +
call sub_445610  +
test ebp ebp +
jnz loc_44785B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_44786E  +
mov ebx 45h +
jmp loc_4476CD  +
test ebp ebp +
jz loc_447742  +
mov eax esi +
call sub_4475F0  +
mov edx 4 +
jmp loc_447860  +
mov edx 1 +
mov eax esi +
call sub_43FC90  +
jmp loc_447857  +
mov eax esi +
call sub_43FB20  +
jmp loc_447857  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_4479C2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_447995  +
mov eax esi +
call sub_447620  +
test eax eax +
mov ebx eax +
jz loc_447944  +
mov eax [eax] +
cmp eax 45h +
jz loc_447944  +
cmp eax 47h +
jnz loc_4479B0  +
cmp ebp 0FFFFFFFFh +
jz loc_447974  +
mov edx [esi+14h] +
cmp edx [esi+18h] +
jge loc_447991  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov [eax+8] ebx +
mov ebx eax +
mov dword ptr [eax] 46h +
mov [eax+0Ch] ebp +
mov [esp+30h+var_30] ebx +
mov ecx edi +
mov eax esi +
mov edx 2 +
call sub_43F800  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_447974  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_43FAE0  +
test eax eax +
mov ebp eax +
jns loc_44792B  +
xor ebx ebx +
jmp loc_447665  +
mov eax esi +
call sub_43FF30  +
test eax eax +
jnz loc_447944  +
xor ebx ebx +
jmp loc_447665  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_43FF30  +
test eax eax +
jz loc_447663  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_43F860  +
mov [esp+30h+var_30] eax +
jmp loc_447977  +
test ebp ebp +
mov [edi] ebp +
jz loc_447663  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_447A0A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+8] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_447663  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_447679  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_447B35  +
cmp cl 47h +
jz loc_447B35  +
mov eax ebx +
mov edi edx +
call sub_447620  +
test eax eax +
mov esi eax +
jnz loc_447AE0  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_447B4D  +
test dl dl +
jz loc_447B4D  +
cmp dl 45h +
jz loc_447B4D  +
mov edx esi +
mov eax [edx] +
cmp eax 20h +
ja loc_447BE0  +
cmp eax 1Ch +
jnb loc_447BEF  +
cmp eax 4 +
jnz loc_447B90  +
mov edx [edx+8] +
test edx edx +
jz loc_447AD0  +
mov eax [edx] +
cmp eax 8 +
ja loc_447B80  +
cmp eax 7 +
jnb loc_447B90  +
sub eax 1 +
cmp eax 1 +
ja loc_447AD0  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_447AAB  +
nop   +
mov edx 1 +
jmp loc_447B92  +
test edi edi +
jz loc_447A64  +
test byte ptr [ebx+8] 1 +
jnz loc_447A64  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_447B0D  +
lea esi [esi+0] +
mov esi [esi+8] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_447B00  +
cmp edx 2 +
mov eax esi +
jnz loc_447B4D  +
mov ebx [esi+0Ch] +
jmp loc_447B23  +
mov ebx [ebx+8] +
mov eax [ebx] +
call sub_43FA20  +
test eax eax +
jnz loc_447B20  +
mov [esi+0Ch] ebx +
mov eax esi +
jmp loc_447B4D  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_447BB2  +
cmp dl 47h +
jz loc_447B55  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_447B4B  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_447B4B  +
movzx edx dl +
jmp ds:off_47A7F4[edx*4]  +
cmp eax 34h +
jnz loc_447AD0  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_4464E0  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_447B4B  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_447B4B  +
movzx eax al +
jmp ds:off_47A8BC[eax*4]  +
cmp eax 4Ch +
jz loc_447BEF  +
jb loc_447B90  +
sub eax 4Eh +
cmp eax 1 +
ja loc_447B90  +
mov edx [edx+8] +
test edx edx +
jnz loc_447A87  +
jmp loc_447B90  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
lea eax [ebx+0Ch] +
call sub_43FA40  +
cmp eax 1 +
jle loc_447B4B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_447B4B  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_447B4B  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_447B4B  +
xor esi esi +
cmp al 24h +
jz loc_447F86  +
nop   +
lea esi [esi+0] +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_447C83  +
cmp al 24h +
jz loc_447C83  +
add esi 1 +
cmp esi ebp +
jl loc_447C70  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_43F860  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_447B4B  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_447FD6  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Fh +
mov eax ebx +
call sub_43F800  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_447B4B  +
test ebp ebp +
jg loc_447C56  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Eh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_43F800  +
jmp loc_447B4D  +
mov eax ebx +
call sub_447620  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
cmp byte ptr [eax+2] 0 +
jz loc_447FDF  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_447FDF  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov eax ebx +
call sub_447620  +
mov esi eax +
mov eax ebx +
call sub_43FAA0  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov eax ebx +
call sub_447620  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_43FA40  +
test eax eax +
js loc_447B4B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_447B4B  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_445610  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov edx 76h +
mov eax ebx +
call sub_43FE80  +
test eax eax +
jz loc_447B4B  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov edx 68h +
mov eax ebx +
call sub_43FE80  +
test eax eax +
jz loc_447B4B  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
xor edx edx +
mov eax ebx +
call sub_43FE80  +
test eax eax +
jz loc_447B4B  +
xor edx edx +
mov eax ebx +
call sub_43FE80  +
test eax eax +
jz loc_447B4B  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov eax ebx +
call sub_447620  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_448009  +
cmp al 5Fh +
jz loc_448002  +
cmp al 24h +
jnz loc_447B4B  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_448010  +
mov eax edx +
add edx 1 +
shl eax 4 +
sub ebp 2 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov [eax+8] ecx +
mov edi [ebx+0Ch] +
mov dword ptr [eax] 40h +
add edi 2 +
mov [ebx+0Ch] edi +
jmp loc_447CA0  +
mov [esp+1Ch+var_10] eax +
jmp loc_447CC7  +
xor edx edx +
mov eax ebx +
call sub_447A30  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_43F800  +
jmp loc_447B4D  +
mov ecx 2Eh +
jmp loc_447F9F  +
mov ecx 2Fh +
jmp loc_447F9F  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_447B4B  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_448120  +
test ebx ebx +
jnz loc_448046  +
cmp dl 5Ah +
jz loc_44804F  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_447A30  +
test ebx ebx +
mov edi eax +
jz loc_448048  +
test byte ptr [esi+8] 1 +
jz loc_448048  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_448048  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_4480F4  +
cmp al 5Fh +
jz loc_4480F4  +
sub eax 30h +
cmp al 9 +
ja loc_4480EB  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_4480C2  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_4480C2  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_44808E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_4480B0  +
cmp cl 2Eh +
jz loc_448093  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_43F860  +
mov ecx edi +
mov edx 4Dh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_43F800  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_448072  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_44810F  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_448102  +
cmp cl 5Fh +
jz loc_448102  +
jmp loc_44808E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_448041  +
***
jmp sub_448140  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_454930  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_448020  +
mov ebx eax +
xor eax eax +
***
test ebx ebx +
jz sub_44832A  +
cmp dword ptr [ebx] 8 +
ja sub_44832A  +
mov ecx [ebx] +
jmp ds:off_47A98C[ecx*4]  +
***
mov eax [ebx+8] +
lea esp [ebp-0Ch] +
mov eax [ebx+8] +
jmp loc_448307  +
***
jmp loc_448307  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [ebp+var_54] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_43F900  +
mov ecx [ebp+var_2C] +
mov eax 1 +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx ecx +
test ecx ecx +
cmovg eax ecx +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_454930  +
sub esp eax +
test edx edx +
mov eax 1 +
cmovg eax edx +
lea eax ds:12h[eax*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_454930  +
mov edx [ebp+arg_0] +
sub esp eax +
lea edi [ebp+var_160] +
lea eax [esp+178h+var_16C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_28] eax +
mov eax edi +
call sub_440230  +
mov eax [ebp+var_60] +
mov esp esi +
mov ecx [ebp+var_54] +
mov edx [ebp+var_58] +
mov byte ptr [ebp+eax+var_160] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_48] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_448670  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_448620  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_448611  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_454930  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_4485C5  +
jb loc_448685  +
cmp esi 3 +
ja loc_448685  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_44857C  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_4486A0  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_43F860  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 43h +
mov [esp+78h+var_78] 0 +
call sub_43F800  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_4485DA  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_448020  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_4485EA  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_44860F  +
test ebx ebx +
jz loc_448697  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_448360  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_44862C  +
cmp al 5Fh +
jnz loc_448660  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_44863F  +
cmp al 44h +
jnz loc_4484BE  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_4484BE  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_4484CC  +
cmp al 24h +
jnz loc_4484BE  +
jmp loc_44862C  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_4484AA  +
mov esi 1 +
nop   +
jmp loc_4484CC  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_445610  +
mov ebx eax +
jmp loc_4485DA  +
xor eax eax +
mov esp edi +
jmp loc_448611  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_447A30  +
mov ecx eax +
jmp loc_448598  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_440170 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_448490  +
test eax eax +
jz loc_448716  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_448711  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_4487A3  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_440170 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_448360  +
test eax eax +
jz loc_4487D4  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_4487B6  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_4487B0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_4487EE  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_44875C  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_44879E  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_44875C  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_4486C0  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_448490  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_4486C0  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_448490  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_448250  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_448250  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_448980  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_4803C0 +
call sprintf  +
add esp 18h +
mov eax offset unk_4803C0 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] esi +
call sub_44BA70  +
mov [esp+10h+var_10] eax +
call sub_4371B0  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
mov edi eax +
call vsprintf  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax] +
mov [esp+38h+var_2C] edx +
test esi esi +
jz loc_448B28  +
mov edx [esi] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
mov edi eax +
jz loc_448B28  +
mov ebx [esi+0Ch] +
cmovs ebx [esi+8] +
test ebx ebx +
jz loc_448B28  +
mov edx [ebx] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
jz loc_448B18  +
js loc_448A96  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_448B18  +
mov ecx edi +
xor edx edx +
shr ecx 1Fh +
mov [esp+38h+var_28] ecx +
test edi edi +
setnle cl  +
test eax eax +
setnle al  +
jle loc_448AD0  +
test cl cl +
jz loc_448AD0  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
mov [esi+0Ch] edx +
mov eax [edx+8] +
mov [edx+8] esi +
mov [esi+0Ch] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_448A07  +
mov edx [ebx+8] +
test edx edx +
jz loc_448B18  +
mov ecx edi +
shr ecx 1Fh +
test cl cl +
mov byte ptr [esp+38h+var_28] cl +
jz loc_448B44  +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
mov [esi+8] edx +
mov eax [edx+0Ch] +
mov [edx+0Ch] esi +
mov [esi+8] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_448A07  +
cmp byte ptr [esp+38h+var_28] 0 +
jz loc_448AF0  +
test al al +
jz loc_448AF0  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
jmp loc_448AB7  +
test dl dl +
jz loc_448B10  +
test cl cl +
jz loc_448B10  +
mov edx [ebx+8] +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
jmp loc_448A80  +
mov esi [ebp+0] +
jmp loc_448A07  +
test edi edi +
js loc_448B30  +
mov eax [ebx+8] +
mov [ebx+8] esi +
mov [esi+0Ch] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
mov [ebx+0Ch] esi +
mov [esi+8] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 1 +
jmp loc_448A64  +
***
jmp free  +
***
jmp sub_4371B0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1Ch +
call sub_4371B0  +
mov edx [esp+1Ch+arg_0] +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+10h] offset loc_448B60 +
mov dword ptr [eax+14h] offset loc_448B50 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0 +
mov [eax+0Ch] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+34h] +
mov esi [esp+2Ch] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call esi  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+10h] esi +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+38h] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call dword ptr [esp+2Ch]  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+10h] edx +
mov edx [esp+34h] +
mov [eax+14h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esi] +
test ebx ebx +
jz loc_448D35  +
mov eax [esi+8] +
test eax eax +
jz loc_448C83  +
mov edx [ebx] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_448C92  +
mov edx [ebx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov dword ptr [ebx] 0 +
mov eax [ebx+8] +
xor edi edi +
test eax eax +
jz loc_448D19  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_448CB4  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+8] +
mov eax [esi+0Ch] +
mov ebp edx +
test eax eax +
jz loc_448CC8  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov ebp [ebx+8] +
mov eax [ebx+0Ch] +
mov [ebp+0] edi +
test eax eax +
jz loc_448D22  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_448CE5  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+0Ch] +
mov eax [esi+0Ch] +
mov edi edx +
test eax eax +
jz loc_448CF9  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edi [ebx+0Ch] +
mov [edi] ebp +
mov ebp [ebx] +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] edx +
call eax  +
test ebp ebp +
jz loc_448D26  +
mov ebx ebp +
mov eax [ebx+8] +
test eax eax +
jnz loc_448CA1  +
mov eax [ebx+0Ch] +
mov ebp edi +
test eax eax +
jnz loc_448CD2  +
mov edi ebp +
jmp loc_448CFB  +
test edi edi +
jz loc_448D35  +
mov ebx edi +
lea esi [esi+0] +
jmp loc_448C98  +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] edx +
call eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_4489F0  +
mov eax [ebx] +
test eax eax +
jz loc_448DE5  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call edx  +
mov edi eax +
mov eax [ebx] +
test eax eax +
jz loc_448DA6  +
test edi edi +
jnz loc_448DA6  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_448D98  +
mov eax [eax+4] +
mov [esp+10h+var_10] eax +
call edx  +
mov eax [ebx] +
mov ecx [esp+10h+arg_8] +
mov [eax+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov ecx [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] ecx +
jz loc_448E07  +
test edi edi +
js loc_448E20  +
mov ecx [edx+8] +
mov [eax+0Ch] edx +
mov [eax+8] ecx +
mov dword ptr [edx+8] 0 +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov edi [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] edi +
jnz loc_448DCC  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+8] 0 +
mov [ebx] eax +
jmp loc_448DDE  +
mov ecx [edx+0Ch] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov dword ptr [edx+0Ch] 0 +
mov [ebx] eax +
jmp loc_448DDE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax esi +
mov edx ebx +
call sub_4489F0  +
mov eax [esi] +
test eax eax +
jz loc_448EAF  +
mov eax [eax] +
mov edx [esi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_448EAF  +
mov edx [esi+0Ch] +
mov eax [esi] +
test edx edx +
mov ebx [eax+8] +
mov edi [eax+0Ch] +
jz loc_448E88  +
mov eax [eax+4] +
mov [esp] eax +
call edx  +
mov eax [esi] +
mov ecx [esi+18h] +
mov edx [esi+14h] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test ebx ebx +
jz loc_448EB6  +
test edi edi +
mov [esi] ebx +
jnz loc_448EA5  +
jmp loc_448EAF  +
mov ebx eax +
mov eax [ebx+0Ch] +
test eax eax +
jnz loc_448EA3  +
mov [ebx+0Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esi] edi +
jmp loc_448EAF  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_4489F0  +
mov eax [ebx] +
test eax eax +
jz loc_448EF6  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call edx  +
test eax eax +
jnz loc_448EF6  +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jnz loc_448F12  +
jmp loc_448F1B  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_448F10  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_448F32  +
jmp loc_448F3B  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_448F30  +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jz loc_448F90  +
mov edx esi +
mov eax ebx +
call sub_4489F0  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
test eax eax +
mov eax [ebx] +
js loc_448F89  +
mov eax [eax+8] +
test eax eax +
jnz loc_448F82  +
jmp loc_448F90  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_448F80  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax [ebx] +
test eax eax +
jz loc_448FF1  +
mov edx esi +
mov eax ebx +
call sub_4489F0  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] edx +
call eax  +
test eax eax +
mov eax [ebx] +
jle loc_448FD8  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_448FE4  +
nop   +
jmp loc_448FF1  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_448FE2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_448FD2  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
mov esi [eax] +
mov [esp+28h+var_28] 190h +
call sub_4371B0  +
mov edi eax +
jmp loc_449031  +
cmp ebx ebp +
jz loc_449057  +
mov [edi+ebx*4] esi +
mov esi [esi+8] +
add ebx 1 +
test esi esi +
jnz loc_449024  +
test ebx ebx +
jz loc_449071  +
sub ebx 1 +
mov eax [esp+28h+arg_8] +
mov esi [edi+ebx*4] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call [esp+28h+arg_4]  +
test eax eax +
jnz loc_449073  +
mov esi [esi+0Ch] +
jmp loc_449031  +
lea eax ds:0[ebx*8] +
mov [esp+28h+var_28] edi +
lea ebp [ebx+ebx] +
mov [esp+28h+var_24] eax +
call sub_437230  +
mov edi eax +
jmp loc_449028  +
xor eax eax +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_1C] eax +
call free  +
mov eax [esp+28h+var_1C] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnle dl  +
cmovge eax edx +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_449115  +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+1Ch] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
test ecx ecx +
jz loc_449190  +
mov esi ecx +
lea eax [ecx-1] +
neg esi  +
test edx edx +
mov ecx 0FE0h +
cmovz edx ecx +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx] edx +
call sub_449100  +
test eax eax +
jz loc_4491A1  +
lea edx [eax+edi+7] +
and edx esi +
mov [ebx+8] edx +
mov [ebx+0Ch] edx +
mov edx [ebx] +
mov [ebx+4] eax +
add edx eax +
mov [eax] edx +
mov [ebx+10h] edx +
mov dword ptr [eax+4] 0 +
mov eax 1 +
and byte ptr [ebx+28h] 0F9h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi 0FFFFFFF8h +
mov eax 7 +
mov edi 8 +
jmp loc_449145  +
mov [esp+1Ch+var_10] eax +
call off_468108  +
mov eax [esp+1Ch+var_10] +
jmp loc_44915F  +
***
jmp sub_4491C0  +
***
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_4491D5  +
mov eax [eax+20h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+20h] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+1Ch+var_10] +
and byte ptr [eax+28h] 0FEh +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+8] +
jmp loc_449130  +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+0Ch] +
or byte ptr [eax+28h] 1 +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+18h] +
mov [eax+24h] edx +
mov edx [esp+8] +
jmp loc_449130  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov esi [ebx+0Ch] +
sub esi [ebx+8] +
mov eax [ebx+18h] +
mov ecx [ebx+4] +
add edx esi +
mov edi esi +
shr edi 3 +
add eax edx +
lea ebp [eax+edi+64h] +
mov edi [ebx] +
cmp eax edi +
cmovnb edi eax +
cmp edi ebp +
cmovb edi ebp +
cmp edx eax +
jbe loc_4492F6  +
mov [esp+1Ch+var_10] ecx +
xor ebp ebp +
call off_468108  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebx+18h] +
add edi ebp +
mov [ebx+4] ebp +
mov [ebp+4] ecx +
mov [ebx+10h] edi +
mov [ebp+0] edi +
lea edi [ebp+eax+8] +
not eax  +
and edi eax +
mov eax [ebx+8] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test byte ptr [ebx+28h] 2 +
jnz loc_4492E2  +
mov edx [ebx+18h] +
mov ecx [esp+1Ch+var_10] +
lea eax [ecx+edx+8] +
not edx  +
and eax edx +
cmp [ebx+8] eax +
jz loc_449316  +
add esi edi +
mov [ebx+8] edi +
mov [ebx+0Ch] esi +
and byte ptr [ebx+28h] 0FDh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
ja loc_449288  +
mov edx edi +
mov eax ebx +
mov [esp+1Ch+var_10] ecx +
call sub_449100  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
mov ebp eax +
jnz loc_449298  +
jmp loc_449288  +
mov eax [ecx+4] +
mov edx ecx +
mov [ebp+4] eax +
mov eax ebx +
call sub_4491C0  +
jmp loc_4492E2  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_44934F  +
nop   +
cmp edx eax +
jbe loc_449348  +
cmp edx [eax] +
jbe loc_449352  +
mov eax [eax+4] +
test eax eax +
jnz loc_449340  +
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push ebx  +
mov ebx [esp+8+arg_0] +
mov edi [esp+8+arg_4] +
mov edx [ebx+4] +
test edx edx +
jnz loc_449376  +
jmp loc_449394  +
mov edx esi +
cmp edi edx +
jbe loc_449382  +
mov eax [edx] +
cmp edi eax +
nop   +
jbe loc_4493A0  +
mov esi [edx+4] +
mov eax ebx +
call sub_4491C0  +
or byte ptr [ebx+28h] 2 +
test esi esi +
jnz loc_449374  +
test edi edi +
jnz loc_4493B0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
mov [ebx+8] edi +
mov [ebx+10h] eax +
mov [ebx+4] edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+8+var_4] +
mov edx [eax+4] +
xor eax eax +
test edx edx +
jz locret_4493DF  +
lea esi [esi+0] +
mov ecx [edx] +
sub ecx edx +
mov edx [edx+4] +
add eax ecx +
test edx edx +
jnz loc_4493D0  +
retn   +
retn   +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_44940B  +
test eax eax +
jz loc_449434  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_479960[eax] +
movzx edx ds:byte_479960[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_449401  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_449481  +
jmp loc_4494B2  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_4494B0  +
mov ecx ebp +
test cl cl +
jnz loc_4494B0  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_4494B7  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_479960[eax] +
movzx edx ds:byte_479960[edx] +
cmp eax 2Fh +
jnz loc_449458  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_44946E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_4494F9  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_479960[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_4494D7  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_4493F0  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_449590  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_449590  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_4493F0  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_4495F0  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 1Ch +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_24] ecx +
mov [esp+24h+var_18] eax +
call strlen  +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_1C] eax +
mov ebp eax +
mov eax [ebx] +
mov [esp+24h+var_24] eax +
call strncmp  +
test eax eax +
jnz loc_449670  +
mov eax [edi] +
movzx edx byte ptr [esp+24h+var_18] +
mov [eax] dl +
mov eax 1 +
add [ebx] ebp +
add dword ptr [edi] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
test ebx ebx +
jz loc_44969C  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
cmp eax 13h +
ja loc_4496A8  +
xor edx edx +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [ebx+eax-13h] +
mov edi offset unk_47B700 +
mov ecx 3 +
mov esi ebp +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edx dl +
test edx edx +
jnz loc_44969C  +
lea eax [ebp+3] +
lea edi [ebp+13h] +
cmp eax edi +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
jnb loc_4499CC  +
mov esi edx +
jmp loc_44970C  +
mov [esp+ecx+3Ch+var_4C] 1 +
add eax 1 +
cmp eax edi +
jz loc_449730  +
movsx ecx byte ptr [eax] +
lea edx [ecx-30h] +
cmp dl 9 +
jbe loc_449700  +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_44969C  +
mov byte ptr [esp+ecx-37h] 1 +
jmp loc_449705  +
mov edx esi +
movzx esi byte ptr [esp+3Ch+var_1C] +
lea eax [esp+3Ch+var_1C+1] +
xor ecx ecx +
mov [esp+3Ch+var_24] eax +
mov eax esi +
mov esi edx +
mov [esp+3Ch+var_1D] al +
lea edi [esp+3Ch+var_C] +
mov eax [esp+3Ch+var_24] +
movzx edx [esp+3Ch+var_1D] +
jmp loc_44975E  +
movzx edx byte ptr [eax] +
add eax 1 +
cmp dl 1 +
sbb ecx 0FFFFFFFFh +
cmp eax edi +
jnz loc_449758  +
sub ecx 5 +
mov edx esi +
cmp ecx 0Ah +
ja loc_44969C  +
cmp ebx ebp +
jnb loc_4497AD  +
movzx eax byte ptr [ebx] +
sub eax 24h +
cmp al 56h +
ja loc_44969E  +
movzx eax al +
jmp ds:off_47B76C[eax*4]  +
mov edi offset a____4 +
mov esi ebx +
mov ecx 3 +
cmps   +
jz loc_44969C  +
add ebx 1 +
cmp ebp ebx +
ja loc_44977A  +
mov edx 1 +
jmp loc_44969E  +
mov edi offset unk_47B704 +
mov esi ebx +
mov ecx 3 +
cmps   +
jnz loc_4497D0  +
add ebx 3 +
jmp loc_4497A9  +
mov edi offset aSp_0 +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aBp +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aRf +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aLt +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aGt +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aLp +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov edi offset aRp +
mov esi ebx +
mov ecx 4 +
cmps   +
jz loc_4499C4  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU20 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] edx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU22 +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU27 +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU2b +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU3b +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU5b +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU5d +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU7b +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU7d +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_4499BC  +
mov [esp+3Ch+var_34] 5 +
mov [esp+3Ch+var_38] offset aU7e +
mov [esp+3Ch+var_3C] ebx +
call strncmp  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_44969E  +
add ebx 5 +
jmp loc_4497A9  +
add ebx 4 +
jmp loc_4497A9  +
xor esi esi +
nop   +
jmp loc_449737  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
test ebx ebx +
jz loc_449CE5  +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_C] ebx +
mov [esp+24h+var_8] ebx +
call strlen  +
lea esi [ebx+eax-13h] +
mov eax ebx +
cmp esi eax +
jbe loc_449CDE  +
movzx ecx byte ptr [eax] +
lea edx [ecx-24h] +
cmp dl 56h +
ja loc_449CD0  +
movzx edx dl +
jmp ds:off_47B8C8[edx*4]  +
cmp ebx eax +
jz loc_449CF0  +
cmp byte ptr [eax-1] 3Ah +
jz loc_449CF0  +
mov edx [esp+24h+var_8] +
lea ecx [edx+1] +
mov [esp+24h+var_8] ecx +
lea ecx [eax+1] +
mov [esp+24h+var_C] ecx +
movzx eax byte ptr [eax] +
mov [edx] al +
mov eax [esp+24h+var_C] +
jmp loc_449A07  +
cmp byte ptr [eax+1] 2Eh +
mov eax [esp+24h+var_8] +
lea edx [eax+1] +
mov [esp+24h+var_8] edx +
jz loc_449D00  +
mov byte ptr [eax] 2Dh +
mov eax [esp+24h+var_C] +
add eax 1 +
mov [esp+24h+var_C] eax +
jmp loc_449A07  +
mov [esp+24h+var_24] 2Ch +
mov ecx offset unk_47B704 +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 40h +
mov ecx offset aSp_0 +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 2Ah +
mov ecx offset aBp +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 26h +
mov ecx offset aRf +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 3Ch +
mov ecx offset aLt +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 3Eh +
mov ecx offset aGt +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 28h +
mov ecx offset aLp +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 29h +
mov ecx offset aRp +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 20h +
mov ecx offset aU20 +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 22h +
mov ecx offset aU22 +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 27h +
mov ecx offset aU27 +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 2Bh +
mov ecx offset aU2b +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 3Bh +
mov ecx offset aU3b +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 5Bh +
mov ecx offset aU5b +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 5Dh +
mov ecx offset aU5d +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 7Bh +
mov ecx offset aU7b +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 7Dh +
mov ecx offset aU7d +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
mov [esp+24h+var_24] 7Eh +
mov ecx offset aU7e +
lea edx [esp+24h+var_8] +
lea eax [esp+24h+var_C] +
call sub_449620  +
test eax eax +
jnz loc_449A51  +
lea esi [esi+0] +
mov eax [esp+24h+var_8] +
lea edx [eax+1] +
mov [esp+24h+var_8] edx +
mov byte ptr [eax] 3Fh +
mov eax [esp+24h+var_8] +
mov byte ptr [eax] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [eax+1] 24h +
jnz loc_449A3A  +
jmp loc_449A73  +
mov byte ptr [eax] 3Ah +
mov eax [esp+24h+var_8] +
lea edx [eax+1] +
mov [esp+24h+var_8] edx +
mov byte ptr [eax] 3Ah +
mov eax [esp+24h+var_C] +
add eax 2 +
mov [esp+24h+var_C] eax +
jmp loc_449A07  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_449D70  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_449D69  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_437230  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_4371B0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_449D30  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_449E84  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_449E84  +
sub ecx 46h +
cmp cl 13h +
ja loc_449E84  +
movzx ecx cl +
jmp ds:off_47BA74[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternObjectiv +
call sub_449DA0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_449DA0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_449DA0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_449DA0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_449DA0  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_449F5E  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_449ED0  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_449ED2  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_449ED0  +
movzx edx dl +
jmp ds:off_47BB04[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_449DA0  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_449EAB  +
mov edx offset a@safe +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset a@trusted +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset a@property +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset aRef +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset aNothrow +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset aPure +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
mov edx offset aReturn +
mov eax esi +
call sub_449DA0  +
jmp loc_449EE4  +
xor eax eax +
retn   +
***
jmp sub_449F70  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_449F91  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_449D30  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_449FB8  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_449FA7  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_44A080  +
mov eax ebp +
test al al +
jnz loc_44A080  +
cmp cl 62h +
jz loc_44A200  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_44A06B  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_44A050  +
test ecx ecx +
jnz loc_44A248  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_44A241  +
movzx eax al +
jmp ds:off_47BB50[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_44A270  +
test eax eax +
js loc_44A270  +
mov eax esi +
mov edx offset asc_47BB3B +
call sub_449DA0  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_44A0F8  +
mov eax ebp +
test al al +
jz loc_44A0F8  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_449FE0  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_47BB3B +
call sub_449DA0  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_44A255  +
cmp al 77h +
jz loc_44A1E6  +
xor ecx ecx +
cmp al 61h +
jnz loc_44A121  +
mov edx offset asc_47BB3D +
mov eax esi +
call sub_449DA0  +
mov ecx 2 +
test ebx ebx +
jz loc_44A277  +
mov edx 9 +
jmp loc_44A144  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_44A164  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_44A130  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_44A144  +
test ecx ecx +
jle loc_44A17E  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_44A172  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_44A0E0  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_449FE0  +
jmp loc_44A0E0  +
mov eax esi +
mov edx offset aUl_1 +
call sub_449DA0  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset asc_47BB48 +
call sub_449DA0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset aU_4 +
call sub_449DA0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_3 +
mov eax esi +
call sub_449DA0  +
mov ecx 8 +
jmp loc_44A121  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_44A270  +
test eax eax +
js loc_44A270  +
mov eax offset aFalse_2 +
mov edx offset aTrue_2 +
cmovz edx eax +
mov eax esi +
call sub_449DA0  +
mov eax [esp+34h+var_20] +
jmp loc_44A1AE  +
mov eax ebx +
jmp loc_44A1AE  +
mov eax esi +
call sub_449FE0  +
nop   +
jmp loc_44A06B  +
mov edx offset aU_2 +
mov eax esi +
call sub_449DA0  +
mov ecx 4 +
jmp loc_44A121  +
xor eax eax +
jmp loc_44A1AE  +
mov edi 0Ah +
jmp loc_44A164  +
***
jmp sub_44A290  +
***
push esi  +
mov edi offset unk_47BB84 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_44A3D7  +
mov edi offset off_47BB8C +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_44A416  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_44A42C  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_44A3ED  +
movzx esi cl +
test byte ptr [esi+esi+479A61h] 1 +
jz loc_44A40B  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test byte ptr [ebx+ebx+479A61h] 1 +
jz loc_44A339  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test byte ptr [ebx+ebx+479A61h] 1 +
jnz loc_44A320  +
cmp dl 50h +
jnz loc_44A40B  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_44A442  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test byte ptr ds:word_479A60[ecx+ecx] 4 +
jz loc_44A38B  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test byte ptr ds:word_479A60[esi+esi] 4 +
jnz loc_44A372  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_44A393  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_44A3E4  +
mov edx esi +
call sub_449FE0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_47BB88 +
add ebx 3 +
call sub_449DA0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test byte ptr [esi+esi+479A61h] 1 +
jnz loc_44A2F3  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_47BB90 +
add ebx 3 +
call sub_449DA0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_449DA0  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_44A35D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_44A4C7  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_44A4C7  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_44A4C7  +
movzx edi cl +
jmp ds:off_47BBCC[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_44A4C7  +
test eax eax +
js loc_44A4C7  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_44A6A5  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_44A4C7  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_44A010  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_44A863  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_44A4C7  +
test eax eax +
js loc_44A4C7  +
mov edx offset asc_47BBBC +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A565  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_44A460  +
test edi edi +
mov esi eax +
jz loc_44A565  +
mov edx offset asc_47BBC0 +
mov eax ebx +
call sub_449DA0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_44A541  +
mov edx offset asc_47BBC3 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A4C9  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_47BBA3 +
call sub_449DA0  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_44A010  +
mov esi eax +
jmp loc_44A4C9  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_44A4C7  +
test eax eax +
js loc_44A4C7  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_44A5EA  +
mov edx ebp +
mov eax ebx +
call sub_449DA0  +
mov edx offset asc_47BBC5 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A61C  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_44A460  +
test edi edi +
mov esi eax +
jz loc_44A61C  +
mov edx offset asc_47BBC0 +
mov eax ebx +
call sub_449DA0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_44A5F8  +
mov edx offset asc_47BBC7 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A4C9  +
add edx 1 +
mov eax ebx +
call sub_44A290  +
mov edx offset asc_47BBA5 +
mov esi eax +
mov eax ebx +
call sub_449DA0  +
test esi esi +
jz loc_44A4C7  +
cmp byte ptr [esi] 63h +
jnz loc_44A4C7  +
lea edx [esi+1] +
mov eax ebx +
call sub_44A290  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A4C9  +
add edx 1 +
mov eax ebx +
call sub_44A290  +
mov esi eax +
jmp loc_44A4C9  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull_1 +
call sub_449DA0  +
jmp loc_44A4C9  +
mov edx offset asc_47BBA9 +
mov eax ebx +
call sub_449DA0  +
test edi edi +
lea esi [ebp+1] +
jz loc_44A8E1  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test byte ptr [eax+eax+479A61h] 1 +
jz loc_44A4C7  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test byte ptr [eax+eax+479A61h] 1 +
jz loc_44A4C7  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_44A771  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_44A78F  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_44A7F4  +
movzx edx dl +
jmp ds:off_47BCEC[edx*4]  +
mov edx offset asc_47BBAB +
mov eax ebx +
call sub_449DA0  +
add esi 2 +
cmp edi ebp +
jz loc_44A8E1  +
movzx eax byte ptr [esi] +
movzx edx al +
test byte ptr [edx+edx+479A61h] 1 +
jz loc_44A4C7  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test byte ptr [edx+edx+479A61h] 1 +
jz loc_44A4C7  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_44A6F5  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_44A826  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_44A707  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_44A816  +
sub ecx 37h +
jmp loc_44A70A  +
mov edx offset aR_3 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A732  +
mov edx offset aF +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A732  +
mov edx offset aV +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A732  +
mov edx offset aN_0 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A732  +
mov edx offset aT_0 +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A732  +
movzx eax al +
test byte ptr ds:word_479A60[eax+eax] 10h +
jz loc_44A844  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_449FE0  +
jmp loc_44A732  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_44A70A  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_44A6FB  +
mov eax ebx +
mov edx offset asc_47BB3D +
call sub_449DA0  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_449FE0  +
jmp loc_44A732  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_44A4C7  +
test eax eax +
js loc_44A4C7  +
mov edx offset asc_47BBBC +
mov eax ebx +
call sub_449DA0  +
jmp loc_44A8D4  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_44A460  +
mov edx (offset asc_47BBBC+2) +
mov esi eax +
mov eax ebx +
call sub_449DA0  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_44A460  +
test edi edi +
mov esi eax +
jz loc_44A8D4  +
mov edx offset asc_47BBC0 +
mov eax ebx +
call sub_449DA0  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_44A890  +
jmp loc_44A56D  +
mov edx offset asc_47BBA9 +
mov eax ebx +
call sub_449DA0  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_44A4C9  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_449FE0  +
jmp loc_44A4C9  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_44A986  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_44A986  +
cmp cl 4Fh +
jz loc_44A990  +
jle loc_44A965  +
cmp cl 78h +
nop   +
jz loc_44A950  +
cmp cl 79h +
jnz loc_44A9A7  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_449DA0  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_3 +
call sub_449DA0  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_44A9A7  +
cmp byte ptr [ebx+1] 67h +
jnz loc_44A986  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_449DA0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_44A924  +
xor eax eax +
jmp loc_44A946  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_449DA0  +
test ebx ebx +
jnz loc_44A97F  +
xor eax eax +
jmp loc_44A946  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_44A9D8  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_44A9D8  +
sub edx 41h +
cmp dl 39h +
ja loc_44A9D8  +
movzx edx dl +
mov esi eax +
jmp ds:off_47BE4C[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_44AE7B  +
cmp al 6Bh +
jnz loc_44A9D8  +
mov eax esi +
mov edx offset aUcent +
call sub_449DA0  +
lea eax [ebx+2] +
jmp loc_44A9E0  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_449DA0  +
mov edx ebx +
mov eax esi +
call sub_44A9B0  +
mov edx offset asc_47BBC7 +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_2 +
jmp loc_44AA18  +
mov edx offset aDchar +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aVoid_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aWchar +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aUshort +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aShort_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aCdouble +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aCfloat +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aIdouble +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aIfloat +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aNone_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aUlong +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aLong_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aUint +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aIreal +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aInt_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aUbyte +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aByte +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aFloat_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aReal +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aDouble_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aCreal +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aBool_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
mov edx offset aChar_0 +
call sub_449DA0  +
lea eax [ebx+1] +
jmp loc_44A9E0  +
movzx ecx byte ptr [ebx+1] +
lea edx [ebx+1] +
sub ecx 46h +
cmp cl 13h +
ja loc_44AC25  +
mov eax 1 +
shl eax cl +
test eax 0B9001h +
jnz loc_44AECB  +
mov eax esi +
call sub_44A9B0  +
mov edx offset asc_47BDA4 +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
mov eax ebx +
jmp loc_44A9E0  +
add ebx 1 +
mov edx offset aShared +
jmp loc_44AA18  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_44AEE7  +
xor eax eax +
cmp dl 68h +
jnz loc_44A9E0  +
add ebx 2 +
mov edx offset a__vector_1 +
jmp loc_44AA18  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_44A9B0  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_44AEAF  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_44A9B0  +
mov edx offset asc_47BBBC +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_44ACD5  +
mov ecx edi +
mov eax esi +
call sub_449FE0  +
mov edx offset asc_47BBC3 +
mov eax esi +
call sub_449DA0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_44AA36  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_44AA38  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_44A910  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_44AE8F  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_44B050  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_44AD64  +
mov ecx edi +
mov eax esi +
call sub_449FE0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_44ACED  +
mov eax ebx +
jmp loc_44AA38  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_44B6A0  +
jmp loc_44A9E0  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_44A9D8  +
test eax eax +
js loc_44A9D8  +
mov edx offset aTuple +
mov eax esi +
call sub_449DA0  +
jmp loc_44ADDC  +
mov edx edi +
mov eax esi +
call sub_44A9B0  +
test ebx ebx +
mov edi eax +
jz loc_44ADDC  +
mov edx offset asc_47BBC0 +
mov eax esi +
call sub_449DA0  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_44ADC1  +
mov eax esi +
mov edx offset asc_47BBC7 +
call sub_449DA0  +
mov eax edi +
jmp loc_44A9E0  +
lea edx [ebx+1] +
call sub_44A9B0  +
mov edx offset asc_47BD98 +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
mov eax ebx +
jmp loc_44A9E0  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_44AEF4  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_44AE30  +
mov eax esi +
call sub_44A9B0  +
mov edx offset asc_47BBBC +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
test ebp ebp +
jz loc_44AE68  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_449FE0  +
mov eax esi +
mov edx offset asc_47BBC3 +
call sub_449DA0  +
mov eax ebx +
jmp loc_44A9E0  +
mov eax esi +
mov edx offset aCent +
call sub_449DA0  +
lea eax [ebx+2] +
jmp loc_44A9E0  +
mov edx eax +
mov eax esi +
call sub_44B050  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
mov edx [esp+2Ch+var_18] +
jmp loc_44AD64  +
mov edx eax +
mov eax esi +
call sub_44A9B0  +
mov edx offset asc_47BBBC +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
jmp loc_44ACD5  +
mov eax esi +
call sub_44B050  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
mov eax ebx +
jmp loc_44A9E0  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_44AA18  +
mov eax esi +
call sub_44A9B0  +
mov edx offset asc_47BBBC +
mov ebx eax +
mov eax esi +
call sub_449DA0  +
jmp loc_44AE68  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_44B040  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_44AFDE  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_44AF80  +
cmp dl 5Ah +
jz loc_44AFA7  +
cmp dl 58h +
jz loc_44AF90  +
test edi edi +
jnz loc_44AFE2  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_44B024  +
cmp al 4Eh +
jz loc_44AFF3  +
cmp al 4Bh +
jz loc_44AFB2  +
cmp al 4Ch +
jz loc_44B013  +
cmp al 4Ah +
jnz loc_44AFC1  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_449DA0  +
jmp loc_44AFC1  +
test edi edi +
jz loc_44AF90  +
mov edx offset asc_47BBC0 +
mov eax esi +
call sub_449DA0  +
mov eax esi +
mov edx offset unk_47BF34 +
call sub_449DA0  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_449DA0  +
mov edx ebx +
mov eax esi +
call sub_44A9B0  +
test eax eax +
mov ebx eax +
jz loc_44B040  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_44AF30  +
mov eax ebx +
jmp loc_44AF9F  +
mov edx offset asc_47BBC0 +
mov eax esi +
call sub_449DA0  +
jmp loc_44AF47  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_44AFC1  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_449DA0  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_44AF5A  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_449DA0  +
jmp loc_44AFC1  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_449DA0  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_44AF52  +
xor eax eax +
jmp loc_44AF9F  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_44B19C  +
cmp byte ptr [edx] 0 +
jz loc_44B19C  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_449DE0  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_449E90  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_44AF10  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_44A9B0  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_44B114  +
sub ecx edx +
jnz loc_44B1A6  +
mov edx offset asc_47BBC5 +
mov eax esi +
call sub_449DA0  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_44B1C4  +
mov edx offset asc_47BF4A +
mov eax esi +
call sub_449DA0  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_44B1B2  +
test edx edx +
jz loc_44B164  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_44B18C  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_44B19C  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_449FE0  +
jmp loc_44B114  +
mov ecx edi +
mov eax esi +
call sub_449FE0  +
mov edx [esp+4Ch+var_30] +
jmp loc_44B140  +
mov ecx ebp +
mov eax esi +
call sub_449FE0  +
jmp loc_44B12C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_44B2F4  +
cmp byte ptr [edx] 0 +
jz loc_44B2F4  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_44B2F4  +
test eax eax +
jle loc_44B2F4  +
cmp esi 4 +
jz loc_44B317  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_44B2F4  +
cmp edi 4 +
jle loc_44B300  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_44B300  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_44B2F4  +
cmp al 30h +
jz loc_44B2F4  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_44B1E0  +
mov edx offset asc_47BF54 +
mov edi eax +
mov eax esi +
call sub_449DA0  +
test edi edi +
jz loc_44B2E6  +
movzx eax byte ptr [edi] +
test al al +
jz loc_44B579  +
xor esi esi +
cmp al 5Ah +
jz loc_44B693  +
test esi esi +
jnz loc_44B527  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_44B540  +
cmp al 54h +
jz loc_44B610  +
cmp al 56h +
jz loc_44B5A0  +
cmp al 53h +
lea esi [esi+0] +
jz loc_44B550  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_47BBC7 +
call sub_449DA0  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_44B410  +
jmp ds:off_47C000[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_44B3AA  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test byte ptr ds:word_479A60[eax+eax] 4 +
jnz loc_44B3BD  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_44B3E0  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_44B520  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_44B3D3  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_44B2F4  +
test ebp ebp +
jz loc_44B337  +
movzx eax byte ptr [edx] +
mov ebx edx +
test byte ptr ds:word_479A60[eax+eax] 4 +
jz loc_44B350  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_44B6A0  +
mov edx eax +
test edx edx +
jnz loc_44B364  +
jmp loc_44B370  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_44B39B  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_44B6A0  +
mov edx eax +
jmp loc_44B3CD  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_44B63C  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_449FE0  +
jmp loc_44B2F6  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_44B410  +
mov edx offset aClassinfoFor +
jmp loc_44B4B0  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_44B623  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_44B657  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_44B67A  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_44B410  +
mov edx offset aVtableFor_1 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_449F70  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_44B670  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_44B2F6  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_44B410  +
mov edx offset aModuleinfoFor +
jmp loc_44B4B0  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_44B410  +
mov edx offset aInterfaceFor +
jmp loc_44B4B0  +
mov esi edx +
jmp loc_44B2F6  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_47BBC0 +
call sub_449DA0  +
jmp loc_44B2BF  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_44B2CA  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_44B6A0  +
mov edi eax +
test edi edi +
jz loc_44B2E6  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_44B2AF  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_47BBC7 +
call sub_449DA0  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_44B2F6  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_44A9B0  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_449D30  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_44A460  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_44B563  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_44B563  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_44A9B0  +
mov edi eax +
jmp loc_44B563  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_449DA0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_44B2F6  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_449DA0  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_44B2F6  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_2 +
call sub_449DA0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_44B2F6  +
mov edx 0FFFFFFFFh +
jmp loc_44B4CD  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_449DA0  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_44B2F6  +
lea esi [edi+1] +
jmp loc_44B57B  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_44B704  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_44B8F2  +
sub ecx 46h +
cmp cl 13h +
ja loc_44B6E0  +
mov edx 1 +
shl edx cl +
and edx 0B9001h +
jnz loc_44B780  +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jz loc_44B8B3  +
test esi esi +
jz loc_44B701  +
mov edx offset unk_47C01C +
mov eax ebp +
call sub_449DA0  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_44B1E0  +
test eax eax +
mov ebx eax +
jnz loc_44B6B8  +
cmp [esp+48h+var_3C] 1 +
jbe loc_44B725  +
xor edx edx +
jmp loc_44B8C0  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_44A9B0  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_44B970  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_44B8C0  +
test edx edx +
jz loc_44B71E  +
cmp byte ptr [edx] 0 +
jnz loc_44B71E  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_44B78B  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_44B8D0  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_44A910  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_449DE0  +
mov edx eax +
mov eax ebp +
call sub_449E90  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_44B928  +
mov edx offset asc_47BBC5 +
mov eax ebp +
call sub_449DA0  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_44AF10  +
mov edx offset asc_47BBC7 +
mov ebx eax +
mov eax ebp +
call sub_449DA0  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_44B849  +
sub ecx edx +
jz loc_44B849  +
mov eax ebp +
call sub_449FE0  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_44B86D  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_44B897  +
cmp [esp+48h+var_29] 0 +
jz loc_44B897  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_44B954  +
test ebx ebx +
jz loc_44B717  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_479A60[edx+edx] 4 +
jnz loc_44B6F1  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_44B960  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_44B980  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_44B7A8  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_44B920  +
jg loc_44B932  +
cmp dl 4Eh +
jnz loc_44B950  +
cmp byte ptr [ecx+1] 67h +
jnz loc_44B950  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_44B905  +
add ecx 1 +
add edi 1 +
jmp loc_44B8FD  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_44B809  +
sub edx 78h +
cmp dl 1 +
ja loc_44B950  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_44B6C5  +
xor edx edx +
jmp loc_44B93F  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_44B897  +
cmp al 5Ah +
jnz loc_44B727  +
lea eax [ebx+1] +
jmp loc_44B758  +
add edx esi +
mov [ebp+4] edx +
jmp loc_44B758  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_44B7A8  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_44BA41  +
cmp byte ptr [edx] 0 +
jz loc_44BA41  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_44BA41  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_44BA50  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_44B6A0  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_44BA35  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_44BA41  +
sub ecx edx +
test ecx ecx +
jle loc_44BA41  +
mov eax edi +
mov edx 1 +
call sub_449D30  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_44BA0A  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_449DA0  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_44BA0E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] edi +
call strlen  +
mov edx edi +
lea esi [eax+1] +
jmp loc_44BA9F  +
add edx 1 +
mov [esp+2Ch+var_10] edx +
mov edi edx +
cmp byte ptr [edx-1] 25h +
jz loc_44BAB4  +
cmp byte ptr [edx] 0 +
jnz loc_44BA90  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp-10h+arg_18] edi +
movzx ebx byte ptr [edi] +
mov ebp edi +
add edi 1 +
mov dword ptr [esp+0] offset a0 +
movsx eax bl +
mov [esp-10h+arg_0] eax +
call strchr  +
test eax eax +
jnz loc_44BAB0  +
cmp bl 2Ah +
jz loc_44BB40  +
lea eax [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] eax +
mov [esp+0] ebp +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
lea edi [eax+esi] +
cmp bl 2Eh +
jnz loc_44BB09  +
jmp loc_44BB73  +
mov [esp-10h+arg_18] ecx +
movzx ebx byte ptr [ebp+1] +
movsx eax bl +
mov ebp ecx +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset aHll +
call strchr  +
lea ecx [ebp+1] +
test eax eax +
jnz loc_44BB01  +
lea eax [ebx-45h] +
cmp al 33h +
lea esi [edi+1Eh] +
ja loc_44BBAB  +
movzx eax al +
jmp ds:off_47C038[eax*4]  +
mov eax [esp-10h+arg_40] +
mov ecx edi +
mov ebx [esp-10h+arg_40] +
mov [esp-10h+arg_18] edi +
mov eax [eax] +
mov edx eax +
mov [esp-10h+arg_8] eax +
mov eax [ebx] +
sar edx 1Fh +
xor eax edx +
sub eax edx +
lea edi [eax+esi] +
mov eax ebx +
movzx ebx byte ptr [ecx] +
add eax 4 +
mov [esp-10h+arg_40] eax +
cmp bl 2Eh +
jnz loc_44BB09  +
lea eax [ecx+1] +
mov [esp-10h+arg_18] eax +
cmp byte ptr [ecx+1] 2Ah +
jz loc_44BBDD  +
lea esi [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] esi +
mov [esp+0] eax +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
add edi eax +
jmp loc_44BB09  +
add [esp-10h+arg_40] 4 +
lea edx [ebp+1] +
mov [esp-10h+arg_18] edx +
jmp loc_44BA9F  +
mov eax [esp-10h+arg_40] +
lea edi [eax+4] +
mov eax [eax] +
mov [esp+0] eax +
call strlen  +
mov [esp-10h+arg_40] edi +
add esi eax +
jmp loc_44BBAB  +
add [esp-10h+arg_40] 8 +
lea esi [edi+151h] +
jmp loc_44BBAB  +
mov eax [esp-10h+arg_40] +
lea edx [ecx+2] +
mov [esp-10h+arg_18] edx +
add [esp-10h+arg_40] 4 +
mov esi [eax] +
mov ebx [eax] +
sar esi 1Fh +
xor ebx esi +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
mov ecx edx +
sub eax esi +
add edi eax +
jmp loc_44BB09  +
***
cmp edx 4Bh +
ja loc_44BC67  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_47C540[edx*4]  +
test ecx ecx +
jz loc_44BC63  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_44BC52  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_44BC52  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_44BC63  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_44BC26  +
xor eax eax +
jmp loc_44BC52  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_44BC96  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_44BC96  +
test edx edx +
jz loc_44BC96  +
test ecx ecx +
jnz loc_44BCA0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_44BD15  +
test dl dl +
jnz loc_44BD21  +
cmp al 4Bh +
jnz loc_44BD60  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_44BC10  +
test eax eax +
mov [esi] eax +
jz loc_44BD55  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_44BCD7  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_44BD40  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_44BCF6  +
test cl cl +
jz loc_44BCE7  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_44BCF6  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_44BDA3  +
cmp al 46h +
jnz loc_44BDA3  +
cmp esi ebp +
jnz loc_44BD8A  +
lea esi [esi+0] +
jmp loc_44BDA3  +
cmp eax 1Bh +
jz loc_44BDB0  +
cmp eax 19h +
jnz loc_44BD83  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_44BDA3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_44BD72  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_44BD8A  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_44BD83  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_44BE00  +
test dl dl +
jnz loc_44BE04  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_44BC10  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_44BDF9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_44BDE3  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jz loc_44BE88  +
cmp cl 2Eh +
jnz loc_44BE62  +
lea esi [esi+0] +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_44BE62  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_44BE27  +
lea esi [esi+0] +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_44BE50  +
cmp cl 2Eh +
jz loc_44BE30  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_44BC70  +
mov ecx edi +
mov edx 4Bh +
mov [esp+0Ch+var_C] eax +
mov eax esi +
call sub_44BC10  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [edx+1] +
lea ebx [eax-61h] +
cmp bl 19h +
jbe loc_44BE9A  +
cmp al 5Fh +
mov ebx edx +
jnz loc_44BE27  +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_44BEB5  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_44BEA8  +
cmp cl 5Fh +
jz loc_44BEA8  +
jmp loc_44BE27  +
***
mov ecx [eax+0Ch] +
cmp byte ptr [ecx] 53h +
jz loc_44BED0  +
xor eax eax +
retn   +
push ebp  +
push edi  +
push esi  +
push ebx  +
lea ebx [ecx+1] +
sub esp 0Ch +
mov [eax+0Ch] ebx +
cmp byte ptr [ecx+1] 0 +
jnz loc_44BF30  +
xor ecx ecx +
mov ebx [eax+8] +
shr ebx 3 +
and ebx 1 +
test edx edx +
jz loc_44BF05  +
test bl bl +
jnz loc_44BF05  +
mov edx [eax+0Ch] +
movzx edx byte ptr [edx] +
sub edx 43h +
cmp dl 1 +
setbe bl  +
movzx ebx bl +
mov edx offset unk_47D2A0 +
lea esi [esi+0] +
cmp cl [edx] +
jz loc_44BFB5  +
add edx 1Ch +
cmp edx offset unk_47D364 +
jnz loc_44BF10  +
xor eax eax +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx+2] +
mov [eax+0Ch] ebx +
movsx ecx byte ptr [ecx+1] +
lea ebx [ecx-30h] +
cmp bl 9 +
ja loc_44C05B  +
cmp cl 5Fh +
jz loc_44BFB1  +
lea ebx [ecx-30h] +
xor edx edx +
cmp bl 9 +
ja loc_44BF80  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-30h] +
cmp edx ebx +
ja loc_44BF23  +
mov edx [eax+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_44BF91  +
lea ecx [edx+1] +
mov [eax+0Ch] ecx +
movsx ecx byte ptr [edx] +
cmp cl 5Fh +
jz loc_44BF97  +
mov edx ebx +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_44BF55  +
lea ebx [ecx-41h] +
cmp bl 19h +
ja loc_44BF23  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-37h] +
jmp loc_44BF5C  +
xor ecx ecx +
mov edx ebx +
jmp loc_44BF78  +
add ebx 1 +
cmp ebx [eax+20h] +
jnb loc_44BF23  +
add dword ptr [eax+28h] 1 +
mov eax [eax+1Ch] +
mov eax [eax+ebx*4] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_44BF9A  +
mov esi [edx+14h] +
test esi esi +
mov [esp+1Ch+var_18] esi +
jz loc_44C04B  +
mov ecx [eax+14h] +
mov ebp [eax+18h] +
mov edi [edx+18h] +
mov [esp+1Ch+var_1C] 0 +
cmp ecx ebp +
mov [esp+1Ch+var_14] edi +
jge loc_44C006  +
mov esi [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_44C006  +
mov esi [esp+1Ch+var_18] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_1C] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_14] +
mov [edi+8] esi +
mov esi [esp+1Ch+var_1C] +
mov [eax+2Ch] esi +
test ebx ebx +
jz loc_44C053  +
mov esi [edx+0Ch] +
mov ebx [edx+10h] +
add [eax+30h] ebx +
cmp ecx ebp +
jge loc_44BF23  +
mov edx [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edx [edx+edi*4] +
test edx edx +
jz loc_44BF23  +
mov dword ptr [edx] 18h +
mov eax edx +
mov [edx+4] esi +
mov [edx+8] ebx +
jmp loc_44BF25  +
mov ebp [eax+18h] +
mov ecx [eax+14h] +
jmp loc_44C00C  +
mov esi [edx+4] +
mov ebx [edx+8] +
jmp loc_44C016  +
cmp cl 5Fh +
jz loc_44BF46  +
lea ebx [ecx-41h] +
cmp bl 19h +
jbe loc_44BF4B  +
jmp loc_44BEE5  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_44C0B0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_44C095  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_44C144  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_44C153  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_44C120  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_44C111  +
xor eax eax +
jmp loc_44C137  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_44C195  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_44C191  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_44C100  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_44C1C8  +
cmp al 6Eh +
jz loc_44C1C1  +
lea eax [ebx+0Ch] +
call sub_44C100  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_44C1D2  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_44C1CA  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_44C1F1  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_44C1A0  +
test eax eax +
js loc_44C1EC  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_44C1EC  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_44C1EC  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_44C240  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_44C100  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_44C100  +
test eax eax +
mov esi eax +
jle loc_44C314  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_44C318  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_44C2D0  +
cmp esi 9 +
jle loc_44C2B7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global__0 +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_44C2E0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_44BC70  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_44C296  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_44C296  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_44C2F0  +
cmp al 5Fh +
jz loc_44C2F0  +
cmp al 24h +
jnz loc_44C2B7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_44C2B7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNam_0 +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_44BC70  +
jmp loc_44C2C2  +
xor eax eax +
jmp loc_44C2C5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_44C2C2  +
***
push ebx  +
mov ebx eax +
jnz loc_44C34E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_44C345  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_44C380  +
cmp edx 76h +
jnz loc_44C340  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_44C100  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_44C340  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_44C100  +
jmp loc_44C388  +
lea eax [ebx+0Ch] +
call sub_44C100  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_44C342  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_44C342  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_44C3E7  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_44C3E0  +
cmp dword ptr [eax] 2Fh +
jnz loc_44C3E0  +
cmp edx 0 +
jg loc_44C3CB  +
jmp loc_44C3D7  +
cmp dword ptr [eax] 2Fh +
jnz loc_44C3E0  +
test edx edx +
jz loc_44C3E3  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_44C3C2  +
retn   +
jz loc_44C3E3  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_44C435  +
cmp dword ptr [ebx] 4Ah +
ja loc_44C420  +
mov edx [ebx] +
jmp ds:off_47C690[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_44C400  +
test eax eax +
jnz loc_44C437  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_44C40D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_44C3A0  +
test eax eax +
jz loc_44C435  +
cmp dword ptr [eax] 2Fh +
jnz loc_44C435  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+28h] +
mov edi [esp+24h] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_44C4C0  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44C490  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
mov edx [esp+20h] +
add eax [esi+4] +
mov [esp+8] edi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi+0Ch] +
test edx edx +
jnz loc_44C483  +
test ebx ebx +
jnz loc_44C4D2  +
cmp eax 2 +
mov bl 2 +
jbe loc_44C4D8  +
add ebx ebx +
cmp eax ebx +
ja loc_44C4D2  +
mov eax [esi] +
mov [esp+4] ebx +
mov [esp] eax +
call realloc  +
test eax eax +
jz loc_44C4F1  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_44C47C  +
***
mov eax [esi] +
mov [esp] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_44C483  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ch +
jz loc_44C540  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
cmp dl 5Fh +
setz bl  +
cmp dl 5Ah +
jnz loc_44C573  +
test bl bl +
jnz loc_44C577  +
xor eax eax +
cmp dl 5Ah +
jz loc_44C588  +
cmp dl 45h +
jnz loc_44C531  +
add ecx 1 +
mov [esi+0Ch] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_44C5A0  +
lea ecx [eax+2] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+2] +
xor eax eax +
cmp dl 5Ah +
jnz loc_44C560  +
add ecx 1 +
xor edx edx +
mov [esi+0Ch] ecx +
mov eax esi +
call sub_44D490  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_44C560  +
mov eax esi +
call sub_44CB50  +
test eax eax +
mov edi eax +
jz loc_44C531  +
cmp dword ptr [eax] 27h +
jz loc_44C622  +
mov edx [esi+0Ch] +
mov ebp 3Bh +
movzx eax byte ptr [edx] +
cmp al 6Eh +
jz loc_44C610  +
cmp al 45h +
jz loc_44C637  +
test al al +
jz loc_44C531  +
lea ebx [edx+1] +
jmp loc_44C5DD  +
add ebx 1 +
test al al +
jz loc_44C531  +
mov [esi+0Ch] ebx +
movzx eax byte ptr [ebx] +
cmp al 45h +
jnz loc_44C5D2  +
mov ecx ebx +
sub ecx edx +
mov eax esi +
call sub_44BC70  +
mov ecx edi +
mov edx ebp +
mov [esp+20h+var_20] eax +
mov eax esi +
call sub_44BC10  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_44C560  +
lea ecx [edx+1] +
mov bp 3Ch +
mov [esi+0Ch] ecx +
movzx eax byte ptr [edx+1] +
mov edx ecx +
jmp loc_44C5C1  +
mov eax [eax+4] +
mov edx [eax+10h] +
test edx edx +
jz loc_44C5B2  +
mov eax [eax+4] +
sub [esi+30h] eax +
jmp loc_44C5B2  +
xor ecx ecx +
jmp loc_44C5EB  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov ecx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [ecx] +
sub eax 49h +
cmp al 1 +
ja loc_44C6D7  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 45h +
jz loc_44C724  +
mov [esp+20h+var_4] 0 +
lea esi [esp+20h+var_4] +
jmp loc_44C6B2  +
sub eax 49h +
cmp al 1 +
ja loc_44C6F0  +
mov eax ebx +
call sub_44C640  +
mov ecx eax +
test ecx ecx +
jz loc_44C6D7  +
mov [esp+20h+var_20] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_44BC10  +
test eax eax +
mov [esi] eax +
jz loc_44C6D7  +
mov edx [ebx+0Ch] +
lea esi [eax+8] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_44C710  +
cmp al 4Ch +
jz loc_44C700  +
jle loc_44C678  +
cmp al 58h +
lea esi [esi+0] +
jnz loc_44C6F0  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44DFA0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jz loc_44C6E0  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_44C688  +
mov eax ebx +
call sub_44CB50  +
mov ecx eax +
jmp loc_44C688  +
mov eax ebx +
call sub_44C520  +
mov ecx eax +
jmp loc_44C688  +
add edx 1 +
mov eax [esp+20h+var_4] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add ecx 2 +
mov edx 2Fh +
mov [ebx+0Ch] ecx +
mov eax ebx +
xor ecx ecx +
mov [esp+20h+var_20] 0 +
call sub_44BC10  +
jmp loc_44C6D9  +
***
jmp sub_44C750  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
sub eax 4Ch +
cmp al 0Eh +
ja loc_44C8B0  +
movzx eax al +
jmp ds:off_47C7D0[eax*4]  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_44D490  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_44CA30  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 74h +
jz loc_44C904  +
xor edx edx +
mov eax esi +
call sub_44BEC0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_44C7E9  +
mov eax esi +
call sub_44C640  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_44BC10  +
mov ebx eax +
jmp loc_44C7E9  +
mov eax esi +
call sub_44DBC0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_44BCC0  +
test eax eax +
mov edi eax +
jz loc_44C791  +
xor edx edx +
mov eax esi +
call sub_44BDC0  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
test bl bl +
jz loc_44C8A3  +
cmp bl 44h +
jz loc_44C9C6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_44C970  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_44C970  +
cmp bl 43h +
jz loc_44C970  +
cmp bl 55h +
jz loc_44C970  +
cmp bl 4Ch +
nop   +
jz loc_44C970  +
cmp bl 53h +
jz loc_44CA10  +
cmp bl 49h +
jz loc_44C9F0  +
cmp bl 54h +
jz loc_44CA21  +
cmp bl 45h +
jz loc_44CB0D  +
cmp bl 4Dh +
jnz loc_44C8A3  +
test ebp ebp +
jz loc_44C8A3  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_44C828  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_44C793  +
mov eax esi +
call sub_44DBC0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_44C7E9  +
test eax eax +
jz loc_44C791  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_44C791  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_44C640  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_44BC10  +
mov ebx eax +
jmp loc_44C7E9  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_44DBC0  +
mov ecx 3 +
mov edx offset aStd_0 +
mov ebx eax +
mov eax esi +
call sub_44BC70  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_44BC10  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_44C7E9  +
test edi edi +
jz loc_44C791  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_44C791  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_44C7BF  +
mov eax esi +
call sub_44DBC0  +
test ebp ebp +
jz loc_44C9E0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_44BC10  +
mov ebp eax +
cmp bl 53h +
jz loc_44C9BB  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_44C9E4  +
test ebp ebp +
jz loc_44C8A3  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_44C8A3  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_44C824  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_44C970  +
mov eax esi +
call sub_44CB50  +
test ebp ebp +
jnz loc_44C97B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_44C98E  +
mov ebx 45h +
jmp loc_44C831  +
test ebp ebp +
jz loc_44C8A3  +
mov eax esi +
call sub_44C640  +
mov edx 4 +
jmp loc_44C980  +
mov edx 1 +
mov eax esi +
call sub_44BEC0  +
jmp loc_44C977  +
mov eax esi +
call sub_44C1E0  +
jmp loc_44C977  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_44CAE2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_44CAB1  +
mov eax esi +
call sub_44C750  +
test eax eax +
mov edi eax +
jz loc_44CA64  +
mov eax [eax] +
cmp eax 44h +
jz loc_44CA64  +
cmp eax 46h +
jnz loc_44CAD0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_44CA94  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_44CA94  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_44CA94  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_44BC10  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_44C1A0  +
test eax eax +
mov ebp eax +
jns loc_44CA4B  +
xor ebx ebx +
jmp loc_44C793  +
mov eax esi +
call sub_44C230  +
test eax eax +
jnz loc_44CA64  +
xor ebx ebx +
jmp loc_44C793  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_44C230  +
test eax eax +
jz loc_44C791  +
mov ecx 0Eh +
mov edx offset aStringLitera_0 +
mov eax esi +
call sub_44BC70  +
mov [esp+30h+var_30] eax +
jmp loc_44CA97  +
test ebp ebp +
mov [edi] ebp +
jz loc_44C791  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_44CB2A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_44C791  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_44C7E9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [eax+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_44CBC2  +
cmp al 56h +
jz loc_44CBC2  +
cmp al 4Bh +
jz loc_44CBC2  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_44CBB8  +
movzx edx dl +
jmp ds:off_47C814[edx*4]  +
mov eax ebx +
call sub_44DFA0  +
mov edx 41h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_44CBB8  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_44CBB8  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_44CC5E  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_44BCC0  +
test eax eax +
mov esi eax +
jz loc_44CBB8  +
mov eax ebx +
call sub_44CB50  +
test eax eax +
mov edx eax +
mov [esi] eax +
jz loc_44CBB8  +
mov eax [eax] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_44CC16  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_44CBB8  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_44CBB8  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_44CBEE  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44C260  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
test eax eax +
jz loc_44CBB8  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_44CBB8  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_44C750  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_44D29B  +
sub eax 30h +
cmp al 9 +
ja loc_44D2F9  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_44CCB0  +
sub ecx edx +
mov eax ebx +
call sub_44BC70  +
test eax eax +
mov esi eax +
jz loc_44CCDB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_44D29D  +
xor eax eax +
jmp loc_44CD45  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44CB50  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 59h +
jz loc_44D2CD  +
mov edx 1 +
mov eax ebx +
call sub_44D430  +
mov edx eax +
mov eax ebx +
call sub_44BDC0  +
mov edx [ebx+0Ch] +
mov ecx eax +
xor eax eax +
cmp byte ptr [edx] 45h +
jz loc_44D2C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44CB50  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_44CBB8  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_44CBB8  +
movzx eax al +
jmp ds:off_47C940[eax*4]  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
lea edi [esp+2Ch+var_10] +
call sub_44CB50  +
mov ecx 1 +
mov edx edi +
mov ebp eax +
mov eax ebx +
call sub_44BCC0  +
test eax eax +
mov esi eax +
jz loc_44CCDB  +
mov eax ebx +
call sub_44CB50  +
test eax eax +
mov [esi] eax +
jz loc_44CCDB  +
cmp esi edi +
jz loc_44CE27  +
mov edx [eax] +
lea ecx [edx-1Fh] +
cmp ecx 1 +
jbe loc_44D316  +
cmp edx 29h +
jz loc_44CE27  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_44CCDB  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_44CCDB  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx 2Bh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44CD45  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44CB50  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44CB50  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44CB50  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_44CEEB  +
cmp al 5Fh +
jz loc_44CEEB  +
sub eax 41h +
cmp al 19h +
ja loc_44D2D8  +
xor edx edx +
mov eax ebx +
call sub_44BEC0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_44CBBA  +
mov eax ebx +
call sub_44C640  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
mov eax ebx +
call sub_44C1E0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_44CC56  +
test eax eax +
jz loc_44CBB8  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_44CBB8  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_44CF04  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44C260  +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_44CB50  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+2Ch+var_10] eax +
jmp loc_44CC56  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:47DA20h[eax*4] +
jl loc_44D269  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_44CBBA  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC8C +
mov dword ptr [eax+4] offset off_47DC8C +
lea esi [esi+0] +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_44CBBA  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC64 +
mov dword ptr [eax+4] offset off_47DC64 +
jmp loc_44D000  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC28 +
mov dword ptr [eax+4] offset off_47DC28 +
jmp loc_44D000  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC50 +
mov dword ptr [eax+4] offset off_47DC50 +
jmp loc_44D000  +
cmp byte ptr [ecx+2] 5Fh +
jz loc_44D340  +
mov eax ebx +
call sub_44C160  +
mov esi eax +
test esi esi +
jz loc_44CCDB  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_44CD45  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44CB50  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44CD45  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC78 +
mov dword ptr [eax+4] offset off_47DC78 +
jmp loc_44D000  +
mov eax ebx +
call sub_44CB50  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44CD45  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DCA0 +
mov dword ptr [eax+4] offset off_47DCA0 +
jmp loc_44D000  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44D28E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_44D354  +
mov dword ptr [eax] 27h +
mov edx offset off_47DC3C +
mov dword ptr [eax+4] offset off_47DC3C +
jmp loc_44D000  +
mov ecx 4 +
mov edx offset aAuto_1 +
mov eax ebx +
call sub_44BC70  +
jmp loc_44CBBA  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_44D1FD  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_44D32F  +
mov eax ebx +
call sub_44CB50  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_44CBB8  +
lea eax [ebx+0Ch] +
call sub_44C100  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_44D25C  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_44CBBA  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_44D35F  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_44CFB6  +
mov edx large ds:4 +
xor eax eax +
jmp loc_44D000  +
xor esi esi +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44CB50  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44CD45  +
add edx 1 +
mov eax ecx +
mov [ebx+0Ch] edx +
jmp loc_44CD45  +
add ecx 2 +
mov [ebx+0Ch] ecx +
jmp loc_44CD20  +
mov eax ebx +
call sub_44C750  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_44CBB8  +
cmp dword ptr [eax] 18h +
jnz loc_44CC5E  +
jmp loc_44CBBA  +
mov eax ebx +
nop   +
lea esi [esi+0] +
call sub_44DFA0  +
test eax eax +
mov esi eax +
jnz loc_44CCCF  +
xor eax eax +
jmp loc_44CD45  +
mov ecx [esp+2Ch+var_10] +
mov edx [eax+4] +
mov [eax+4] ecx +
mov eax [esi] +
mov [esp+2Ch+var_10] eax +
mov [esi] edx +
mov edx [edx] +
jmp loc_44CDFE  +
lea eax [ebx+0Ch] +
call sub_44C100  +
mov esi [esp+2Ch+var_10] +
jmp loc_44D223  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_44DFA0  +
mov esi eax +
jmp loc_44D0C6  +
mov edx large ds:4 +
jmp loc_44D000  +
mov esi large ds:4 +
jmp loc_44CFB6  +
***
mov ebx eax +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_44D467  +
xor esi esi +
test edx edx +
jnz loc_44D46D  +
mov eax ebx +
call sub_44D370  +
test eax eax +
jz loc_44D480  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_44BC10  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_44CB50  +
test eax eax +
mov esi eax +
jnz loc_44D445  +
lea esi [esi+0] +
xor eax eax +
jmp loc_44D461  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_44D570  +
cmp cl 47h +
jz loc_44D570  +
mov eax ebx +
mov edi edx +
call sub_44C750  +
test eax eax +
mov esi eax +
jnz loc_44D522  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_44D588  +
test dl dl +
jz loc_44D588  +
cmp dl 45h +
jz loc_44D588  +
mov edx [eax] +
cmp edx 4 +
jz loc_44D590  +
jb loc_44D500  +
sub edx 1Ch +
cmp edx 4 +
ja loc_44D500  +
mov eax [eax+4] +
test eax eax +
jnz loc_44D4E1  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_44D430  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_44D4C0  +
test byte ptr [ebx+8] 1 +
jnz loc_44D4C0  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_44D543  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_44D536  +
cmp edx 2 +
mov eax esi +
jnz loc_44D588  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_44D564  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_44D557  +
mov [esi+8] eax +
mov eax esi +
jmp loc_44D588  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_44D5D0  +
cmp dl 47h +
jz loc_44D5A5  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_44D600  +
cmp dword ptr [eax] 33h +
ja loc_44D600  +
mov edx [eax] +
jmp ds:off_47CA04[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_44D586  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_44D586  +
movzx edx dl +
jmp ds:off_47CAD4[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_44D586  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_44D586  +
movzx eax al +
jmp ds:off_47CB9C[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_44D597  +
nop   +
mov edx 1 +
jmp loc_44D502  +
lea eax [ebx+0Ch] +
call sub_44C100  +
cmp eax 1 +
jle loc_44D586  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_44D586  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_44D586  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_44D586  +
xor esi esi +
cmp al 24h +
jz loc_44D990  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_44D669  +
cmp al 24h +
jz loc_44D669  +
add esi 1 +
cmp esi ebp +
jl loc_44D656  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_44BC70  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_44D586  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_44D9E0  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_44BC10  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_44D586  +
test ebp ebp +
jg loc_44D641  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44C750  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44C750  +
mov esi eax +
mov eax ebx +
call sub_44C160  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
cmp byte ptr [eax+2] 0 +
jz loc_44D9E9  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_44D9E9  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov edx 76h +
mov eax ebx +
call sub_44C330  +
test eax eax +
jz loc_44D586  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44C750  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44CB50  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44CB50  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_44C100  +
test eax eax +
js loc_44D586  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_44D586  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44CB50  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov edx 68h +
mov eax ebx +
call sub_44C330  +
test eax eax +
jz loc_44D586  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
xor edx edx +
mov eax ebx +
call sub_44C330  +
test eax eax +
nop   +
jz loc_44D586  +
xor edx edx +
mov eax ebx +
call sub_44C330  +
test eax eax +
jz loc_44D586  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44C750  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
add ecx 0Fh +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_44CB50  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
add ecx 0Ah +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_44CB50  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44CB50  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44CB50  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov eax ebx +
call sub_44CB50  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_44DA13  +
cmp al 5Fh +
jz loc_44DA0C  +
cmp al 24h +
jnz loc_44D586  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44DA1A  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_44DA1A  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_44D686  +
mov [esp+1Ch+var_10] eax +
jmp loc_44D6AD  +
xor edx edx +
mov eax ebx +
call sub_44D490  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
jmp loc_44D588  +
mov ecx 2Eh +
jmp loc_44D9A9  +
mov ecx 2Fh +
jmp loc_44D9A9  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_44D586  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_44DAD4  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_44DBB4  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_44DB46  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_44DADB  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_44C260  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_44DB3C  +
mov edi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [edi+10h] +
mov [edi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_44DB3C  +
test eax eax +
jz loc_44DB3C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_44DB3E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_44DAF8  +
mov ebx edi +
cmp cl bl +
jle loc_44DB33  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_44DB3C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_47D500[ecx] +
lea ebp off_47D500[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44DAE8  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_44DB80  +
cmp cl [esp+1Ch+var_11] +
jg loc_44DAEE  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_44DAF8  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_44DADB  +
mov eax edi +
cmp al 63h +
jnz loc_44DADB  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_44CB50  +
mov edx 33h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_44BC10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_44DB3E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_44DB3E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_44DA6C  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_44E295  +
cmp al 54h +
jz loc_44E2A3  +
cmp al 73h +
jz loc_44E0E7  +
cmp al 66h +
jz loc_44E090  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_44E000  +
mov eax ebx +
call sub_44DBC0  +
test eax eax +
jz loc_44E270  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_44E2C1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_44E280  +
cmp al 74h +
setz cl  +
jnz loc_44E53A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_44E232  +
mov eax ebx +
call sub_44DA30  +
test eax eax +
mov ebp eax +
jz loc_44E270  +
mov eax [eax] +
cmp eax 31h +
jz loc_44E124  +
cmp eax 32h +
jz loc_44E2B1  +
cmp eax 33h +
jnz loc_44E270  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_44E3C5  +
mov eax ebx +
call sub_44DFA0  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_44E078  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_44BC10  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
cmp byte ptr [edx+1] 70h +
jnz loc_44E01D  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_44E3B8  +
mov eax ebx +
call sub_44C1A0  +
add eax 1 +
jz loc_44E270  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_44E270  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_44E270  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_44DFF4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_44E2E0  +
cmp al 70h +
jnz loc_44E01D  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44DFA0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset unk_47CC6F +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_44E404  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_44E4F3  +
jle loc_44E3E0  +
cmp edx 2 +
jz loc_44E320  +
cmp edx 3 +
jnz loc_44E270  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_47CC7B +
mov ecx 3 +
cmps   +
jz loc_44E421  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_44E270  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_44E266  +
mov edx 5Fh +
mov eax ebx +
call sub_44E550  +
mov esi eax +
mov eax ebx +
call sub_44CB50  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_44E4A6  +
cmp dl 70h +
jz loc_44E4D2  +
cmp dl 69h +
jnz loc_44E270  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_44E270  +
mov eax ebx +
call sub_44DFA0  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_44BC10  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
xor esi esi +
test cl cl +
jnz loc_44E410  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_44E550  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
cmp al 77h +
jz loc_44E1AF  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_44E01D  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_44DFD7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44C520  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44C1E0  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_44E15F  +
mov eax ebx +
call sub_44C640  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_44CB50  +
mov esi eax +
mov eax ebx +
call sub_44DBC0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_44E478  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_44E452  +
mov eax ebx +
call sub_44DFA0  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_47CC72 +
mov ecx 3 +
cmps   +
jz loc_44E43F  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_47CC75 +
mov ecx 3 +
cmps   +
jz loc_44E378  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_47CC78 +
mov ecx 3 +
cmps   +
jnz loc_44E498  +
mov eax ebx +
call sub_44DBC0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_44E4B3  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_44BC10  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_44E0B6  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_44E550  +
jmp loc_44E060  +
test edx edx +
jnz loc_44E270  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44DFF4  +
mov eax ebx +
call sub_44CB50  +
jmp loc_44E075  +
mov eax ebx +
call sub_44CB50  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_44E23C  +
mov eax ebx +
call sub_44DFA0  +
mov esi eax +
mov eax ebx +
call sub_44DFA0  +
mov edi eax +
mov eax ebx +
call sub_44DFA0  +
jmp loc_44E1F8  +
mov edx 45h +
mov eax ebx +
call sub_44E550  +
mov esi eax +
jmp loc_44E38D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_44E468  +
sub eax 72h +
cmp al 1 +
ja loc_44E32F  +
mov eax ebx +
call sub_44CB50  +
mov [esp+1Ch+var_10] eax +
jmp loc_44E33A  +
mov eax ebx +
call sub_44C640  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov [esp+1Ch+var_1C] eax +
jmp loc_44E307  +
mov eax ebx +
call sub_44DFA0  +
mov esi eax +
jmp loc_44E38D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_44E1F8  +
mov eax ebx +
call sub_44C640  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_44BC10  +
mov esi eax +
jmp loc_44E38D  +
cmp byte ptr [eax+1] 69h +
jnz loc_44E270  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_44E550  +
jmp loc_44E1F8  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_44E50A  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_44E518  +
cmp dl 70h +
jz loc_44E518  +
cmp eax 33h +
jnz loc_44E059  +
jmp loc_44E04D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_44E50A  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_44E50A  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_44E50A  +
cmp al 69h +
jz loc_44E013  +
jmp loc_44E01D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [eax+0Ch] +
mov [esp+28h+var_C] 0 +
lea esi [esp+28h+var_C] +
cmp [eax] dl +
jnz loc_44E597  +
jmp loc_44E5C1  +
mov ecx eax +
mov edx 2Eh +
mov [esp+28h+var_28] 0 +
mov eax ebx +
call sub_44BC10  +
test eax eax +
mov [esi] eax +
jz loc_44E5A2  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
mov ecx edi +
cmp [eax] cl +
jz loc_44E5B0  +
mov eax ebx +
call sub_44DFA0  +
test eax eax +
jnz loc_44E570  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+28h+var_C] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
xor ecx ecx +
mov [ebx+0Ch] eax +
mov edx 2Eh +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_44BC10  +
jmp loc_44E5A4  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_44E663  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_44E61C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_44E663  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E601  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_44E604  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 7Ch +
mov eax [ecx] +
mov [esp+88h+var_7C] edx +
cmp eax 4Bh +
ja loc_4502E6  +
jmp ds:off_47CEE4[eax*4]  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_58] edi +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
mov esi [esp+88h+var_50] +
test esi esi +
jnz loc_44E6DE  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_451E70  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+114h] +
test edi edi +
jz loc_451BDE  +
mov edx edi +
jmp loc_44E708  +
mov edx [edx] +
test edx edx +
jz loc_44E697  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_44E702  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_44E697  +
cmp eax ecx +
jnz loc_44E702  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_44E6E8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_44E763  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_44E748  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44E74B  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasF_0 +
jmp loc_44E7E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CDD1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4505B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E7C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44E7C3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTem_0 +
jmp loc_44E863  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CDB9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450386  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E840  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44E843  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFu_0 +
jmp loc_44E8E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CDA3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450373  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E8C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44E8C3  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunct_0 +
jmp loc_44E963  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD89h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450446  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E940  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44E943  +
mov eax [ebx+100h] +
mov esi offset aGuardVariabl_0 +
jmp loc_44E9E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD72h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450433  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44E9C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44E9C3  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor_0 +
jmp loc_44EA63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD5Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450460  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EA40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EA43  +
mov eax [ebx+100h] +
mov esi offset aCovariantRet_0 +
jmp loc_44EAE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD4Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450360  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EAC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EAC3  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunk_0 +
jmp loc_44EB63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD33h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4505A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EB40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EB43  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualTh_0 +
jmp loc_44EBE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD21h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450586  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EBC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EBC3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFo_0 +
jmp loc_44EC63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CD0Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450573  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EC40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EC43  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoName_0 +
jmp loc_44ECE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCFAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450560  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44ECC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44ECC3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor_0 +
jmp loc_44ED63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCE7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450548  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44ED40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44ED43  +
mov eax [ebx+100h] +
mov esi offset aConstruction_0 +
jmp loc_44EDE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCD4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4504B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EDC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EDC3  +
mov eax [ebx+100h] +
mov esi offset aVttFor_0 +
jmp loc_44EE63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCBBh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4504A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EE40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EE43  +
mov eax [ebx+100h] +
mov esi offset aVtableFor_0 +
jmp loc_44EEE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCB2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450486  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44EEC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44EEC3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4513E8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+8] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edi [ecx+4] +
mov [esp+88h+var_70] eax +
test edi edi +
jz loc_451808  +
mov eax [ebx+110h] +
xor edx edx +
xor esi esi +
mov [esp+88h+var_6C] ecx +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_78] eax +
mov ecx [esp+88h+var_74] +
add esi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [edi] +
mov [ebx+114h] eax +
mov [eax+4] edi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_450305  +
cmp edx 4 +
mov ebp [esp+88h+var_6C] +
jz loc_451B7E  +
cmp edx 2 +
jnz loc_44F073  +
mov ecx [edi+8] +
mov eax [ecx] +
cmp eax 45h +
jz loc_451C35  +
sub eax 1Ch +
cmp eax 4 +
ja loc_44F073  +
mov eax esi +
shl eax 4 +
add eax [esp+88h+var_78] +
cmp esi 4 +
jz loc_451BF4  +
mov [esp+88h+var_6C] edi +
mov edi [esp+88h+var_74] +
jmp loc_44F035  +
add eax 10h +
cmp esi 4 +
jz loc_451BF4  +
mov edx [eax-0Ch] +
add esi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] edi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_44F029  +
mov edi [esp+88h+var_6C] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
cmp dword ptr [edi] 4 +
jz loc_451BE5  +
test esi esi +
jz loc_451855  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
mov ebp [edi] +
test ebp ebp +
jz loc_44F0BC  +
sub edi 10h +
test esi esi +
jz loc_451855  +
mov ebp [edi] +
sub esi 1 +
test ebp ebp +
jnz loc_44F0A8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451C79  +
lea edx [eax+1] +
mov ecx [edi-4] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 20h +
mov eax ebx +
mov byte ptr [ebx+104h] 20h +
call sub_451E70  +
jmp loc_44F0A8  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_451E50  +
and edi 4 +
mov eax [ebx+100h] +
jnz loc_450323  +
mov esi offset asc_47CC84 +
jmp loc_44F13A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_47CC84+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450342  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F117  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F11A  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aAbi_0 +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
jmp loc_44F1C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CC83h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4505C6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F1A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F1A3  +
mov edx [ecx+4] +
mov eax ebx +
call sub_44C400  +
test eax eax +
jz loc_451B99  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_450A36  +
mov edx [eax+4] +
test edx edx +
jz loc_450A36  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_44F224  +
mov eax [ebp+4] +
mov [esp+88h+var_74] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+88h+var_70] eax +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov [ebx+11Ch] edi +
call sub_451E50  +
cmp edi [esp+88h+var_70] +
jge loc_4502F5  +
mov eax [ebx+100h] +
mov ebp offset asc_47CE18 +
jmp loc_44F2A3  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_47CE18+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4502F5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_44F280  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F283  +
mov eax [ebx+100h] +
mov esi offset aNonTransacti_0 +
jmp loc_44F323  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE03h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450473  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F300  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F303  +
test byte ptr [esp+88h+var_7C] 4 +
jnz loc_451312  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_44E6E8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_44F3B2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_44F393  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44F396  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aClone_0 +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
jmp loc_44F443  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CEDDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450600  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F420  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F423  +
lea edx [ecx+4] +
mov eax ebx +
call sub_44C3A0  +
test eax eax +
jz loc_450DB0  +
cmp dword ptr [eax] 2Fh +
jz loc_450D90  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov [ebx+110h] esi +
jmp loc_44E6E8  +
mov eax [ebx+114h] +
test byte ptr [esp+88h+var_7C] 4 +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+88h+var_78] eax +
jz loc_44F4FF  +
mov esi [edx] +
test esi esi +
jnz loc_44F4FF  +
cmp dword ptr [edx+8] 6 +
jz loc_451948  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_451755  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4514C4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+8] +
call sub_451E50  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_4517DD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45148D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov eax [esp+88h+var_78] +
mov [ebx+114h] eax +
jmp loc_44E6E8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov edx [ecx+8] +
cmp dword ptr [edx] 37h +
jz loc_450CBF  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+88h+var_74] eax +
mov eax [eax] +
mov [esp+88h+var_78] edi +
cmp eax 31h +
jz loc_450E9D  +
cmp eax 33h +
jz loc_450F6B  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4531A0  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_453250  +
jmp loc_44E6E8  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4531A0  +
jmp loc_44E6E8  +
mov edi [ecx+4] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_450B39  +
mov esi offset aThis_0 +
jmp loc_44F653  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE77h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F630  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44F633  +
mov eax [ebx+100h] +
mov esi offset aDecltype_0 +
jmp loc_44F6D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE6Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450723  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F6B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F6B3  +
mov eax [ecx+4] +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_44F741  +
mov edx eax +
mov ebp [esp+88h+var_78] +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi ebp +
jz loc_44E6E8  +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_44F7A4  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_44F785  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44F788  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_451265  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_44E6E8  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_451E50  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_451E50  +
jmp loc_44E6E8  +
mov eax [ebx+100h] +
mov esi offset aJavaResource_0 +
jmp loc_44F873  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE63h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450638  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44F850  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44F853  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_44F8F6  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_44F8F6  +
cmp esi 6 +
jbe loc_45161E  +
cmp esi 7 +
jnz loc_44F8F6  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_44F8F6  +
cmp dword ptr [edx+8] 1 +
jz loc_451C3F  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4515D3  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45156C  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_451817  +
cmp esi 8 +
jz loc_451780  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_44F5AC  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_44F5AC  +
mov eax [eax+4] +
mov edi offset unk_47CC7B +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+88h+var_78] eax +
mov eax [edx+4] +
mov [esp+88h+var_74] eax +
mov eax [edx+8] +
mov [esp+88h+var_70] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_451A65  +
mov eax ebx +
mov edx offset aNew_0 +
call sub_44E5E0  +
mov eax [esp+88h+var_78] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_44F9FA  +
mov edx [esp+88h+var_7C] +
mov ecx eax +
mov eax ebx +
call sub_453250  +
mov edx 20h +
mov eax ebx +
call sub_44C080  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_74] +
mov edx edi +
call sub_451E50  +
mov ecx [esp+88h+var_70] +
test ecx ecx +
jz loc_44E6E8  +
mov edx edi +
mov eax ebx +
call sub_453250  +
jmp loc_44E6E8  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_44FA37  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
mov eax [ebp+8] +
test eax eax +
jz loc_44E6E8  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_450FCC  +
mov edi offset asc_47CE18 +
jmp loc_44FA83  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_47CE18+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4509ED  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_44FA60  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
mov edx [esp+88h+var_78] +
add dword ptr [ebx+120h] 1 +
jmp loc_44FA63  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_450DCA  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_47DAC0 +
jz loc_450DBF  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_45171E  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+8] 0 +
jz loc_450AC9  +
mov esi offset a_accum_0 +
jmp loc_44FB53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE10h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FB30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44FB33  +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ecx +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_451E50  +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_44FBED  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_451E70  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
jmp loc_44E6E8  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov ecx eax +
mov [esp+88h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+88h+var_70] edi +
test esi esi +
mov [esp+88h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
jz loc_451E12  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_451E12  +
mov eax esi +
mov esi 1 +
mov [esp+88h+var_6C] ebp +
mov [esp+88h+var_74] ecx +
jmp loc_44FC6F  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_44FCC0  +
mov edx [eax+8] +
test edx edx +
jnz loc_44FCBA  +
cmp esi 3 +
ja loc_4514FB  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+88h+var_58] +
mov [esp+edx+88h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+88h+var_58] edi +
mov edi [esp+88h+var_74] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_44FC62  +
mov ebp [esp+88h+var_6C] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov ecx [ebp+8] +
call sub_451E50  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_44E6E8  +
cmp esi 1 +
jz loc_45193F  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov [esp+88h+var_78] ebp +
mov ebp [esp+88h+var_7C] +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
lea esi [esi+0] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_451E70  +
cmp esi 1 +
jz loc_450C9F  +
sub esi 1 +
jmp loc_44FD10  +
test byte ptr [esp+88h+var_7C] 20h +
jnz loc_450E40  +
cmp dword ptr [ecx+4] 0 +
jz loc_44FD4C  +
test byte ptr [esp+88h+var_7C] 40h +
jz loc_45150A  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_88] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_452C30  +
jmp loc_44E6E8  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType_0 +
jmp loc_44FDA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CED4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450773  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FD80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44FD83  +
mov eax [ebx+100h] +
mov esi offset aLambda_0 +
jmp loc_44FE23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CEC2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450870  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FE00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44FE03  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestru_0 +
jmp loc_44FEA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CEB9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450760  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FE80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44FE83  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstr_0 +
jmp loc_44FF23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE9Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450420  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FF00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44FF03  +
mov eax [ebx+100h] +
mov esi offset aTransactionC_0 +
jmp loc_44FFA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CDE8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450710  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_44FF80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44FF83  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_450023  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE2Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4506F8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450000  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_450003  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_4500A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE2Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4506E5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_450083  +
mov ebp [ecx+4] +
mov esi offset aOperator_2 +
mov eax [ebx+100h] +
mov edi [ebp+8] +
jmp loc_450126  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE23h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450650  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450103  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450106  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_450185  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451038  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov ecx esi +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451001  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_44E6E8  +
test byte ptr [esp+88h+var_7C] 4 +
mov eax [ecx+4] +
jnz loc_450A4A  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_44E6E8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_450225  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_450206  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450209  +
mov eax [ecx+4] +
mov edx [eax] +
cmp edx 5 +
jz loc_4516A6  +
cmp edx 23h +
jz loc_450C92  +
cmp [ebp+0] edx +
jz loc_450C92  +
cmp edx 24h +
jnz loc_44E691  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
test ecx ecx +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_4C] eax +
jnz loc_44E6BE  +
jmp loc_44E6BB  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
add edi 1 +
cmp edi esi +
jnz loc_44F252  +
jmp loc_44E6E8  +
mov edi [edi+4] +
test edi edi +
jz loc_451808  +
add eax 10h +
cmp esi 4 +
jz loc_450A27  +
mov edx ebp +
jmp loc_44EFB9  +
cmp eax 0FFh +
jz loc_4518D1  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov edi [ebp+8] +
cmp dword ptr [edi] 45h +
jz loc_45106F  +
mov edx [esp+88h+var_7C] +
mov ecx edi +
mov eax ebx +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor_0 +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
jmp loc_4503C0  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CDBFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450406  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4503A1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4503A4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset aIn_0 +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
jmp loc_4504EF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CCD9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450535  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4504D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4504D3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45122E  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_44E6E8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4512A4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_450E75  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_44E6E8  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45069F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450680  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450683  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_452F20  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45141F  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov eax [ebp+4] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_450797  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_450842  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_4507FB  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450848  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_4507E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_4507E3  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_451456  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_44E6E8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset asc_47CEC3 +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [ebx+100h] +
jmp loc_4508AF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CEC5h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4508F5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450890  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450893  +
mov eax [ebp+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_450919  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_4509C2  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_45097B  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4509C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_450960  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450963  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_4512DB  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_44E6E8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov edi [ebx+120h] +
call sub_451E50  +
cmp edi [ebx+120h] +
jnz loc_44E6E8  +
cmp [ebx+100h] esi +
jnz loc_44E6E8  +
sub esi 2 +
mov [ebx+100h] esi +
jmp loc_44E6E8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov eax [ebp+4] +
test esi esi +
mov [esp+88h+var_74] eax +
jnz loc_44F249  +
jmp loc_44E6E8  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_44E6E8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_450A81  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_450A62  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450A65  +
mov esi offset a_fract_0 +
jmp loc_450AF3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE17h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44E6E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450AD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450AD3  +
mov esi offset aParm_0 +
jmp loc_450B5F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE7Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450BA5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450B40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450B43  +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_80] edi +
mov esi eax +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_450BC3  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_450C67  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_450C20  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_450C6D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_450C05  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_450C08  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_451908  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_44E6E8  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_44E697  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov [esp+88h+var_88] eax +
mov eax ebx +
call sub_4529B0  +
jmp loc_44E6E8  +
mov ecx [ecx+4] +
mov eax [ecx+4] +
mov esi [eax] +
mov [esp+88h+var_78] eax +
cmp byte ptr [esi+1] 63h +
jz loc_451864  +
cmp dword ptr [ecx] 31h +
jz loc_45197C  +
mov eax [ecx+4] +
mov edi offset unk_47CC72 +
mov ecx 3 +
mov esi [eax] +
cmps   +
mov ecx [edx+4] +
jnz loc_450CFD  +
cmp dword ptr [ecx] 3 +
jz loc_4519F5  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_453250  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx_0 +
mov edx [eax+4] +
mov [esp+88h+var_78] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4519B0  +
mov ecx 3 +
mov esi edx +
mov edi offset unk_47CC72 +
cmps   +
jnz loc_451A1A  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_453250  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_44E6E8  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_44E6E8  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_44E6E8  +
mov edx 29h +
mov eax ebx +
call sub_44C080  +
jmp loc_44E6E8  +
mov edx [ebx+11Ch] +
jmp loc_450D9D  +
cmp dword ptr [eax] 2Fh +
jnz loc_450DB0  +
cmp edx 0 +
jle loc_4519DE  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_450D98  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov eax [ebx+100h] +
jmp loc_44FB1C  +
mov eax [ebx+100h] +
mov esi offset a_sat_0 +
jmp loc_450DFA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CE09h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_44FADB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_450DD7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_450DDA  +
mov esi [esp+88h+var_7C] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+88h+var_88] eax +
mov edx esi +
mov eax ebx +
call sub_452C30  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_44E6E8  +
mov edx esi +
mov eax ebx +
call sub_451E50  +
jmp loc_44E6E8  +
cmp ecx 0FFh +
jz loc_451A2E  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [ebp+4] +
jmp loc_450661  +
mov eax [esp+88h+var_74] +
mov edi offset aAd_0 +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+88h+var_78] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_450EC5  +
cmp eax 3 +
jz loc_451BB8  +
cmp eax 37h +
jz loc_451CDD  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4531A0  +
test ebp ebp +
jz loc_44F5F1  +
mov edi offset aGs_0 +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_45160A  +
mov edi offset unk_47CC6F +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_44F5F1  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451B4C  +
lea edx [eax+1] +
mov ecx [esp+88h+var_78] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451B1A  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_44E6E8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451AE3  +
lea edx [eax+1] +
mov ecx [esp+88h+var_74] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
add ecx 4 +
call sub_452F20  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451AAC  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_44F5F1  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_88] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_44FA53  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4501CB  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450199  +
mov eax [ebx+100h] +
mov esi offset aDefaultArg_0 +
jmp loc_45109F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47CC94h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4510E5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_451080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_451083  +
mov eax [edi+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov esi eax +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45110B  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+88h+var_78] +
jz loc_4511B1  +
mov esi [esp+88h+var_78] +
mov eax [ebx+100h] +
lea ebp [edx+esi] +
jmp loc_45116B  +
lea edx [eax+1] +
add esi 1 +
cmp esi ebp +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4511B7  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_451150  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+88h+var_78] +
jmp loc_451153  +
mov edx [ebx+100h] +
mov esi offset asc_47CC99 +
jmp loc_4511DF  +
lea ecx [edx+1] +
add esi 1 +
cmp esi 47CC9Ch +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
jz loc_451226  +
mov edx ecx +
cmp edx 0FFh +
movzx eax byte ptr [esi] +
jnz loc_4511C0  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_78] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_78] +
jmp loc_4511C3  +
mov edi [edi+4] +
jmp loc_45034E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4505E8  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44F807  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450622  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_4509D7  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_45134E  +
jmp loc_44E6E8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4513A9  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_44E6E8  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_451323  +
cmp al 5Fh +
jnz loc_451323  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_451323  +
cmp byte ptr [esi+2] 55h +
jnz loc_451323  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_451323  +
xor ecx ecx +
jmp loc_45138B  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_451C6F  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_451375  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_451708  +
movsx eax dl +
sub eax 37h +
jmp loc_45137B  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_7C] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_7C] +
jmp loc_451334  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44EF44  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450745  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_450857  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44F56D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44F52D  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_451E50  +
mov ecx [esp+88h+var_50] +
mov eax [esp+88h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_44E6E8  +
mov edx 20h +
mov eax ebx +
call sub_44C080  +
jmp loc_44FD4C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov byte ptr [ebx] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
mov dword ptr [ebx+100h] 1 +
jnz loc_44F958  +
mov edx 1 +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 2Dh +
mov byte ptr [ebx+104h] 2Dh +
jmp loc_44F958  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44F90A  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
jmp loc_44E6E8  +
mov edx [ecx+8] +
mov edi [edx] +
test edi edi +
jnz loc_44F8F6  +
cmp eax 3Ch +
jz loc_451DEF  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_451E50  +
cmp esi 6 +
ja loc_44E6E8  +
jmp ds:off_47D014[esi*4]  +
mov edx offset aUll_0 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
mov edx offset aLl_0 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
mov edx offset aUl_0 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
mov edx 6Ch +
mov eax ebx +
call sub_44C080  +
jmp loc_44E6E8  +
mov edx 75h +
mov eax ebx +
call sub_44C080  +
jmp loc_44E6E8  +
lea edx [eax+4] +
mov eax ebx +
call sub_44C3A0  +
test eax eax +
jz loc_451E03  +
mov edx [eax] +
cmp edx 2Fh +
jnz loc_45027E  +
mov edx [ebx+11Ch] +
jmp loc_4516E7  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_451E03  +
cmp dword ptr [eax] 2Fh +
jnz loc_451E03  +
cmp edx 0 +
jg loc_4516D0  +
lea esi [esi+0] +
jnz loc_451E03  +
mov eax [eax+4] +
test eax eax +
jz loc_451E03  +
mov edx [eax] +
jmp loc_45027E  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_451D67  +
movsx eax dl +
sub eax 57h +
jmp loc_45137B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_44FB0B  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_451C03  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_44F51F  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451D35  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 5Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+8] +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_451D03  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_44E6E8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_451CAB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_44F55F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
cmp edx 0FFh +
jnz loc_4515BA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4515BA  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
jmp loc_44E6E8  +
movzx edi byte ptr [esi] +
lea esi [edi-63h] +
mov eax esi +
cmp al 1 +
jbe loc_45187D  +
lea esi [edi-72h] +
mov eax esi +
cmp al 1 +
ja loc_450CD5  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_4531A0  +
mov eax ebx +
mov edx 3Ch +
call sub_44C080  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_451E50  +
mov eax ebx +
mov edx offset asc_47CEDE +
call sub_44E5E0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_451E50  +
mov edx 29h +
mov eax ebx +
call sub_44C080  +
jmp loc_44E6E8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450331  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_450C7C  +
mov eax [esp+88h+var_70] +
jmp loc_450CA9  +
mov esi [edx+4] +
mov edi offset aJarray_0 +
mov ecx 6 +
cmps   +
jnz loc_44F4FF  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_451E50  +
mov edx offset asc_47CCA4 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44F57E  +
mov eax [esp+88h+var_78] +
cmp dword ptr [eax+8] 1 +
jnz loc_450CDE  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_450CDE  +
mov edx 28h +
mov eax ebx +
call sub_44C080  +
mov ecx [ebp+4] +
mov edx [ebp+8] +
jmp loc_450CDE  +
mov eax ebx +
mov edx 5Bh +
call sub_44C080  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_451E50  +
mov edx 5Dh +
mov eax ebx +
call sub_44C080  +
jmp loc_450D59  +
jnz loc_450DB0  +
mov eax [eax+4] +
test eax eax +
jnz loc_44F4AB  +
nop   +
jmp loc_450DB0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_451A07  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_453250  +
jmp loc_450D08  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4531A0  +
jmp loc_450D48  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_450E84  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_78] +
mov edx edi +
call sub_453250  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_4531A0  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_453250  +
mov eax ebx +
mov edx offset asc_47CE37 +
call sub_44E5E0  +
mov ecx [esp+88h+var_70] +
mov edx edi +
mov eax ebx +
call sub_453250  +
jmp loc_44E6E8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450FB6  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450F7F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450F52  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_450F1E  +
mov eax [esp+88h+var_74] +
mov [esp+88h+var_5C] edi +
mov [esp+88h+var_60] eax +
lea eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_44F073  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_453250  +
mov edx offset a____2 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
mov eax [esp+88h+var_78] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_450ECE  +
mov edi [esp+88h+var_78] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+88h+var_78] eax +
jmp loc_450ECE  +
xor edi edi +
jmp loc_44E697  +
mov eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_44F08A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_451767  +
mov ecx [ecx+4] +
mov eax [ecx] +
jmp loc_44F005  +
cmp eax 3Bh +
jnz loc_44F8F6  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_451E3A  +
cmp al 31h +
jnz loc_44F8F6  +
mov edx offset aTrue_0 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
mov eax 5Fh +
jmp loc_451323  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44F0CD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4517EF  +
mov eax [esp+88h+var_78] +
mov edi [esp+88h+var_7C] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_453250  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_4531A0  +
jmp loc_44E6E8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4517C4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_451791  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_451323  +
cmp dl 5Fh +
jnz loc_451323  +
cmp ecx 0FFh +
mov eax edx +
ja loc_451323  +
cmp dword ptr [ebx+100h] 0FFh +
mov esi ecx +
jnz loc_451DCE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov dword ptr [ebx+100h] 0 +
mov eax [ebx+100h] +
mov ecx esi +
mov esi ebp +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jmp loc_451343  +
mov edx 2Dh +
mov eax ebx +
call sub_44C080  +
mov edx [ebp+8] +
jmp loc_451634  +
mov dword ptr [ebx+118h] 1 +
jmp loc_44E6E8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_451E50  +
mov eax [esp+88h+var_70] +
cmp [esp+88h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_450CA9  +
jmp loc_44E6E8  +
mov edx offset aFalse_0 +
mov eax ebx +
call sub_44E5E0  +
jmp loc_44E6E8  +
***
test ecx ecx +
jz loc_451E64  +
cmp dword ptr [eax+118h] 0 +
jnz locret_451E62  +
jmp sub_44E670  +
retn   +
mov dword ptr [eax+118h] 1 +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_451F1B  +
jmp ds:off_47D074[eax*4]  +
mov eax [ebx+100h] +
mov esi offset a__vector_0 +
jmp loc_451EC5  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 47D070h +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4523F0  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_451EA0  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_451EA3  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4521D0  +
mov eax [ebx+118h] +
test eax eax +
jz loc_452430  +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aRestrict_0 +
jmp loc_451F64  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D039h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_451F45  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_451F48  +
mov eax [ebx+100h] +
mov esi offset aConst_0 +
jmp loc_451FE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D04Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_451FC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_451FC3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_45249C  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_452465  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aVolatile_0 +
jmp loc_4520B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D043h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_452090  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_452093  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_452549  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_47D04B +
jmp loc_452153  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D04Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_452130  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_452133  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45250A  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
test ecx ecx +
jnz loc_451F1B  +
mov dword ptr [ebx+118h] 1 +
jmp loc_451F30  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_451F30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4525DD  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_451F30  +
mov eax [ebx+100h] +
jmp loc_452056  +
mov eax [ebx+100h] +
jmp loc_452126  +
mov eax [ebx+100h] +
mov esi offset aComplex_0 +
jmp loc_452263  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D056h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_452240  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_452243  +
mov eax [ebx+100h] +
mov esi offset aImaginary_0 +
jmp loc_4522E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D061h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4522C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_4522C3  +
cmp byte ptr [ebx+104h] 28h +
jz loc_45235E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_45259E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_452580  +
mov esi [ebx+118h] +
test esi esi +
jz loc_452455  +
mov eax [ebx+100h] +
mov esi offset asc_47D062 +
jmp loc_4523A7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 47D065h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_451F30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_452384  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_452387  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_45258F  +
mov edx [ebx+118h] +
test edx edx +
jz loc_452442  +
cmp ebp 0FFh +
jz loc_4524D3  +
lea eax [ebp+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ebp] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_451F30  +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44E670  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_44E670  +
mov ebp [ebx+100h] +
jmp loc_452405  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_44E670  +
jmp loc_452377  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452064  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452045  +
mov edx [ebx+10Ch] +
xor ebp ebp +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
add dword ptr [ebx+120h] 1 +
jmp loc_452414  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_4521B4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452115  +
mov dword ptr [ebx+118h] 1 +
jmp loc_452377  +
mov dword ptr [ebx+118h] 1 +
jmp loc_452405  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_45234D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4521FF  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_38] edx +
mov ebp [esp+4Ch+arg_0] +
jz loc_4526A1  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_45264D  +
jmp loc_4526A1  +
mov edx [esi+118h] +
test edx edx +
jnz loc_4526A1  +
mov eax [ebx+8] +
test eax eax +
jnz loc_45269B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_452665  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_45269B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_4526A9  +
cmp eax 2Ah +
jz loc_4526CA  +
cmp eax 2 +
jz loc_4526EB  +
mov edx [esp+4Ch+var_38] +
mov eax esi +
call sub_451E70  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_452643  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_452C30  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_4529B0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_38] +
mov ecx [ecx+4] +
call sub_451E50  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_38] 4 +
mov [esi+114h] ebp +
jnz loc_452785  +
mov ebp offset asc_47CC84 +
mov [esp+4Ch+var_34] ebx +
jmp loc_452746  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 47CC86h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_4527A2  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_452727  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_45272A  +
cmp eax 0FFh +
jz loc_4527DF  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_4527A6  +
mov ebx [esp+4Ch+var_34] +
mov eax [ebx+4] +
mov ebp [eax+8] +
mov eax [ebp+0] +
cmp eax 45h +
jnz loc_4527BC  +
jmp loc_452816  +
mov ebp [ebp+4] +
mov eax [ebp+0] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_4527B6  +
mov edx [esp+4Ch+var_38] +
mov ecx ebp +
mov eax esi +
call sub_451E50  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_45278F  +
mov ecx offset aDefaultArg_0 +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_452844  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 47CC94h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_45288A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_452825  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_452828  +
mov eax [ebp+8] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset aLd +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_4529A0  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_34] edi +
mov edi eax +
jmp loc_4528E3  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_45292A  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_4528C8  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+120h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_4528CB  +
mov edi [esp+4Ch+var_34] +
mov ecx offset asc_47CC99 +
mov ebx ecx +
jmp loc_45295A  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 47CC9Ch +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_4527B6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_452937  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_45293A  +
mov eax [esi+100h] +
jmp loc_45292E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_4529EA  +
mov edx [eax+8] +
test edx edx +
jz loc_452A70  +
mov eax [eax] +
test eax eax +
jnz loc_4529C5  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_452620  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_452B30  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_452BD7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_452A45  +
mov eax ebx +
mov edx edi +
call sub_451E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_452BA0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_452C10  +
mov eax [ebx+100h] +
mov esi offset unk_47D120 +
jmp loc_452AAF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_47D122 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_452AF5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_452A90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_452A93  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_452620  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_452B67  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_4529F0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4529FE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452B1A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452A53  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452A1E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_452620  +
mov edx [ebx+100h] +
jmp loc_452A0F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_452D10  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_452D10  +
mov eax esi +
mov edx 1 +
jmp loc_452C7E  +
and ch 0Eh +
jnz loc_452DF1  +
mov eax [eax] +
test eax eax +
jz loc_452D10  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_452D10  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_452C69  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_452C60  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_452E06  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_452EE8  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_452E17  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452E1A  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_452620  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_452E7A  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_452D6C  +
mov edx [ebx+118h] +
test edx edx +
jz loc_452DA7  +
cmp eax 0FFh +
jz loc_452DBD  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_452620  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_44E670  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jnz loc_452D73  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452D76  +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_452CA0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_452CD9  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_452620  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_452EB1  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_452D44  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452D47  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452E5D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452CBD  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [ecx] +
cmp dword ptr [ecx] 4 +
jz loc_452F50  +
mov esi [eax+118h] +
test esi esi +
jz loc_453010  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+34h+var_1C] +
mov ebp [eax+114h] +
mov dword ptr [eax+114h] 0 +
mov eax [eax+110h] +
mov [ebx+110h] edx +
mov edx [esi] +
mov [esp+34h+var_1C] eax +
mov [esp+34h+var_18] edx +
mov ecx [edx+4] +
test ecx ecx +
jz loc_4530F6  +
mov edx [ebx+118h] +
test edx edx +
jz loc_453060  +
cmp byte ptr [ebx+104h] 3Ch +
mov [ebx+110h] eax +
jz loc_453105  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4530B0  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov edx [esi] +
mov ecx [edx+8] +
test ecx ecx +
jz loc_4530E7  +
mov edx [ebx+118h] +
test edx edx +
jz loc_453020  +
cmp eax 0FFh +
jz loc_453072  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov [ebx+114h] ebp +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_44E670  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_44E670  +
mov eax [ebx+100h] +
cmp byte ptr [ebx+104h] 3Eh +
jnz loc_452FE3  +
cmp eax 0FFh +
jz loc_45312B  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov eax edx +
mov byte ptr [ebx+104h] 20h +
jmp loc_452FE3  +
mov eax ebx +
mov edx edi +
call sub_44E670  +
mov eax [esp+34h+var_1C] +
jmp loc_452F93  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_452FF1  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_452FBB  +
mov dword ptr [ebx+118h] 1 +
jmp loc_452FE3  +
mov dword ptr [ebx+118h] 1 +
jmp loc_452F93  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_453162  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_452FAC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_453046  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_453115  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_4531D0  +
mov eax [eax+118h] +
test eax eax +
jz loc_4531C0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44E670  +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_4531B8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_453202  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4531B8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4531E7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_4531EA  +
***
push ebx  +
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_453268  +
cmp eax 30h +
jnz loc_453280  +
mov eax [ebx+118h] +
test eax eax +
jz loc_4532B6  +
test esi esi +
jz loc_4532C1  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_453268  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_453320  +
lea esi [eax+1] +
mov [ebx+100h] esi +
xor esi esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+118h] +
mov byte ptr [ebx+104h] 28h +
test eax eax +
jnz loc_453272  +
mov eax ebx +
call sub_44E670  +
test esi esi +
jnz loc_453276  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4532E8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4532D1  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_C] ecx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_20] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
xor eax eax +
mov ecx [esp+28h+var_C] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_10] +
jmp loc_453299  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 18Ch +
mov [ebp+var_17C] edx +
movzx edx byte ptr [eax] +
mov [ebp+var_180] ecx +
cmp dl 5Fh +
jz loc_453530  +
mov ecx 8 +
mov esi ebx +
mov edi offset a_global__0 +
cmps   +
setnbe cl  +
setb al  +
xor esi esi +
cmp cl al +
jnz loc_4533E0  +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_4533C0  +
cmp al 5Fh +
jnz loc_453520  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz cl  +
jz loc_4533D1  +
xor esi esi +
cmp al 44h +
jnz loc_4533E0  +
xor esi esi +
cmp byte ptr [ebx+0Ah] 5Fh +
jz loc_453600  +
lea esi [esi+0] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] edx +
call strlen  +
mov [ebp+var_170] ebx +
mov [ebp+var_168] 11h +
mov [ebp+var_164] ebx +
mov [ebp+var_15C] 0 +
mov [ebp+var_150] 0 +
mov ecx eax +
lea eax [ebx+eax] +
mov [ebp+var_16C] eax +
lea eax [ecx+ecx] +
mov [ebp+var_158] eax +
lea eax [eax+ecx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_14C] ecx +
mov [ebp+var_148] 0 +
mov [ebp+var_144] 0 +
mov [ebp+var_140] 0 +
call sub_454930  +
sub esp eax +
lea eax ds:12h[ecx*4] +
lea edi [esp+198h+var_18C] +
and eax 0FFFFFFF0h +
call sub_454930  +
mov edx [ebp+var_184] +
sub esp eax +
cmp esi 1 +
lea eax [esp+198h+var_18C] +
mov [ebp+var_160] edi +
mov [ebp+var_154] eax +
jz loc_453545  +
jb loc_4535E0  +
cmp esi 3 +
ja loc_4535E0  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edi [ebx+0Bh] +
mov [ebp+var_164] edi +
jnz loc_4534C0  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_4536A0  +
mov [esp+198h+var_198] edi +
lea ebx [ebp+var_170] +
call strlen  +
mov edx edi +
mov ecx eax +
mov eax ebx +
call sub_44BC70  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+198h+var_198] 0 +
call sub_44BC10  +
mov ebx [ebp+var_164] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] eax +
call strlen  +
mov ecx [ebp+var_184] +
add ebx eax +
mov [ebp+var_164] ebx +
movzx edx byte ptr [ebx] +
jmp loc_453550  +
cmp al 24h +
jnz loc_4533E0  +
jmp loc_4533C0  +
cmp byte ptr [eax+1] 5Ah +
mov esi 1 +
jnz loc_453396  +
nop   +
jmp loc_4533E0  +
xor ecx ecx +
cmp dl 5Fh +
jz loc_453610  +
xor eax eax +
test dl dl +
jnz loc_4535D2  +
test ecx ecx +
jz loc_4535D2  +
mov eax [ebp+var_17C] +
lea ebx [ebp+var_13C] +
mov edx 11h +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_34] eax +
mov eax [ebp+var_180] +
mov [ebp+var_28] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_30] eax +
mov eax ebx +
mov [ebp+var_24] 0 +
call sub_44E670  +
mov eax [ebp+var_3C] +
mov edx [ebp+var_30] +
mov [esp+198h+var_198] ebx +
mov byte ptr [ebp+eax+var_13C] 0 +
mov [esp+198h+var_190] edx +
mov [esp+198h+var_194] eax +
call [ebp+var_34]  +
mov edx [ebp+var_24] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_170] +
call sub_44CB50  +
mov ecx eax +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_453550  +
mov esi ecx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_4533E0  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
mov [ebp+var_164] eax +
cmp dl 5Ah +
jnz loc_453550  +
add ebx 2 +
mov edx 1 +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_44D490  +
test byte ptr [ebp+var_168] 1 +
mov ecx eax +
jnz loc_45366B  +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_453550  +
mov edx ecx +
mov eax ebx +
call sub_44BE10  +
mov ecx eax +
mov esi [ebp+var_164] +
movzx edx byte ptr [esi] +
cmp dl 2Eh +
jnz loc_453550  +
movzx eax byte ptr [esi+1] +
lea edx [eax-61h] +
cmp dl 19h +
jbe loc_453660  +
cmp al 5Fh +
jz loc_453660  +
sub eax 30h +
cmp al 9 +
jbe loc_453660  +
movzx edx byte ptr [esi] +
jmp loc_453550  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_44D490  +
mov ecx eax +
jmp loc_4534DB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_4536E3  +
test esi esi +
jz loc_453700  +
mov ecx [esp+2Ch+arg_8] +
test ecx ecx +
jnz loc_453700  +
test ebx ebx +
jz loc_4537A2  +
mov dword ptr [ebx] 0FFFFFFFDh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+2Ch+var_1C] +
mov edx offset loc_44C460 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
call sub_453370  +
test eax eax +
jz loc_4537D7  +
mov edx [esp+2Ch+var_10] +
mov ebp 1 +
mov edi [esp+2Ch+var_1C] +
test edx edx +
cmovz ebp [esp+2Ch+var_14] +
test edi edi +
jz loc_453793  +
test esi esi +
jz loc_4537C0  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov edx [esp+2Ch+arg_8] +
cmp eax [edx] +
jnb loc_4537B0  +
add eax 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
mov edi esi +
call free  +
test ebx ebx +
jz loc_4537D0  +
mov dword ptr [ebx] 0 +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_4537A2  +
cmp ebp 1 +
jz loc_4537F0  +
mov dword ptr [ebx] 0FFFFFFFEh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] esi +
call free  +
mov eax [esp+2Ch+arg_8] +
mov [eax] ebp +
jmp loc_45377F  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_4537B8  +
jmp loc_45377F  +
mov eax edi +
jmp loc_4536F3  +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call free  +
test ebx ebx +
jnz loc_45379C  +
xor eax eax +
jmp loc_4537A4  +
mov dword ptr [ebx] 0FFFFFFFFh +
xor eax eax +
jmp loc_4536F3  +
***
sub esp 0Ch +
mov eax [esp+10h] +
mov edx [esp+14h] +
test eax eax +
jz loc_453828  +
test edx edx +
jz loc_453828  +
mov ecx [esp+18h] +
call sub_453370  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFEh +
add esp 0Ch +
retn   +
***
mov eax 0FFFFFFFDh +
jmp loc_453824  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_453850  +
cmp eax 3 +
jz loc_453850  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_454550  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_46811C 2 +
mov eax [esp+18h+arg_4] +
jz loc_45389B  +
mov dword_46811C 2 +
cmp eax 2 +
jz loc_4538B1  +
cmp eax 1 +
jz loc_4538E0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_483030 +
cmp ebx offset unk_483030 +
jz loc_4538A5  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_4538C8  +
call eax  +
add ebx 4 +
cmp ebx offset unk_483030 +
jnz loc_4538C0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_454550  +
jmp loc_4538A5  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_481180 +
mov [esp+28h+var_28] eax +
call sub_453920  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_4539E0  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_481180 +
mov [esp+28h+var_28] eax +
call sub_453920  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_48117C +
mov [esp+28h+var_28] eax +
call sub_453920  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_453930  +
mov ds:dword_481180 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_453930  +
mov [esp+28h+var_28] 8 +
mov ds:dword_48117C eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_453940  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_453A78  +
cmp eax 0C000008Dh +
jnb loc_453AE0  +
cmp eax 0C0000005h +
jnz loc_453AE7  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_453B16  +
test eax eax +
jz loc_453A8D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_453ACD  +
cmp eax 0C0000094h +
jz loc_453AA1  +
cmp eax 0C0000096h +
jz loc_453AEE  +
cmp eax 0C0000093h +
jz loc_453AE0  +
mov eax ds:dword_480424 +
test eax eax +
jz loc_453AD2  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_453B46  +
test eax eax +
jz loc_453A8D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_453AA3  +
cmp eax 0C000001Dh +
jnz loc_453A8D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_453B30  +
test eax eax +
jz loc_453A8D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_453ACD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_453ACD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_453ACD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_453ACD  +
call sub_4541B0  +
jmp loc_453ACD  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_480428 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_453BC1  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_453BC7  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_480428 eax +
jmp loc_45A500  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError_0 +
cmp ecx 5 +
ja loc_453BFD  +
mov edx ds:off_47DDE0[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_453CA0  +
***
push edi  +
mov eax ds:dword_48042C +
retn   +
***
call eax  +
mov eax off_468118 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_468118 edx +
test eax eax +
jnz loc_4541D0  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_467BB0 +
cmp ebx 0FFFFFFFFh +
jz loc_454223  +
test ebx ebx +
jz loc_454212  +
call ds:dword_467BB0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_454203  +
mov [esp+18h+var_18] offset dword_4541C0 +
call sub_453A00  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_454229  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_467BB0[eax*4] +
test edx edx +
jnz loc_454227  +
jmp loc_4541FF  +
***
mov eax ds:dword_480438 +
test eax eax +
jz loc_454250  +
retn   +
mov ds:dword_480438 1 +
jmp sub_4541F0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_46CBD0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_454292  +
not eax  +
mov dword_46CBD4 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_454300  +
mov eax esi +
not eax  +
mov dword_46CBD0 esi +
mov dword_46CBD4 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_4542EC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_480788 +
call ds:EnterCriticalSection  +
mov edi ds:dword_480780 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_4543F9  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_4543F2  +
test ebx ebx +
jz loc_4543F2  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_4543D0  +
mov [esp+28h+var_28] offset unk_480788 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_454420  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_480784 +
test eax eax +
jnz loc_454440  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_45449C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_480788 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_480780 +
mov ds:dword_480780 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_480788 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_454433  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_480784 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_4544D0  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_480788 +
call ds:EnterCriticalSection  +
mov edx ds:dword_480780 +
sub esp 4 +
test edx edx +
jz loc_454501  +
mov eax [edx] +
cmp eax ebx +
jnz loc_4544FA  +
jmp loc_454538  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_454518  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_4544F2  +
mov dword ptr [esp] offset unk_480788 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_480788 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_454511  +
***
mov eax [edx+8] +
mov ds:dword_480780 eax +
mov eax edx +
jmp loc_45451E  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_4545A4  +
jb loc_454575  +
cmp eax 3 +
jnz loc_45456E  +
mov eax ds:dword_480784 +
test eax eax +
jnz loc_4545D2  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_480784 +
test eax eax +
jnz loc_4545E0  +
mov eax ds:dword_480784 +
cmp eax 1 +
jnz loc_45456E  +
mov ds:dword_480784 0 +
mov [esp+18h+var_18] offset unk_480788 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_45456E  +
mov eax ds:dword_480784 +
test eax eax +
jz loc_4545C0  +
mov ds:dword_480784 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_480788 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_4545AD  +
call sub_4543A0  +
jmp loc_45456E  +
call sub_4543A0  +
jmp loc_45457E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_454600  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_454620  +
xor eax eax +
retn   +
***
jmp sub_4545F0  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_454668  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_45465E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_45466A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_454650  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_454695  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_4546A0  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_454695  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_4546DA  +
jmp loc_454695  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_454700  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_4546D0  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_454728  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_454721  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_454630  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_454772  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_45476E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_4547A8  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_4547A3  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_4547A3  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_4547E3  +
test ebx ebx +
jz loc_4547F4  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_4547D6  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_454810  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_45480B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_454840  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_454876  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_454630  +
test eax eax +
jz loc_454880  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_454876  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_4548B0  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_4545F0  +
test eax eax +
jz loc_4548A7  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_4548A7  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_454630  +
test eax eax +
jz loc_4548A7  +
add esi 400000h +
mov edx esi +
jnz loc_4548F6  +
jmp loc_4548A7  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_454904  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_454920  +
test ebx ebx +
jg loc_4548F0  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_454952  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_45493D  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+8+arg_0] +
xor ebx ebx +
mov edx [esp+8+arg_4] +
nop   +
mov edi edx +
mov esi eax +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_454980  +
mov esi edi +
and esi 0FFh +
add ecx 8 +
movzx esi ds:byte_47DF00[esi] +
add ebx esi +
cmp ecx 40h +
jnz loc_454970  +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_4549F0  +
cmp ecx ebp +
ja loc_454A22  +
test ecx ecx +
mov ebx ecx +
jnz loc_4549D7  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_454A16  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_454A32  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_454A90  +
cmp esi ebp +
jb loc_454A90  +
xor eax eax +
jmp loc_4549E5  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_454AA0  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_454A83  +
cmp esi edx +
jz loc_454AA0  +
mov eax edi +
xor edx edx +
jmp loc_4549E5  +
mov eax 1 +
jmp loc_4549E5  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] offset dword_4807A8 +
call pthread_key_create  +
test eax eax +
setz al  +
movzx eax al +
mov dword_468120 eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_454C00 +
mov [esp+1Ch+var_1C] offset unk_4807A4 +
call pthread_once  +
test eax eax +
jnz loc_454C58  +
mov eax dword_468120 +
test eax eax +
js loc_454C58  +
add esp 1Ch +
retn   +
mov dword_468120 0 +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 20h +
mov ecx [edx] +
jmp loc_454CD3  +
xor edx edx +
xor ebx ebx +
mov eax [ecx+18h] +
cmp ecx [esi+10h] +
setz bl  +
shl ebx 2 +
test edx edx +
jnz loc_454CF0  +
test eax eax +
jz loc_454CC9  +
mov edx [esi] +
mov ecx [esi+4] +
mov [esp+28h+var_14] edi +
mov [esp+28h+var_18] esi +
mov [esp+28h+var_20] edx +
mov edx ebx +
or edx 2 +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] 1 +
call eax  +
cmp eax 7 +
jz loc_454D00  +
cmp eax 8 +
jnz loc_454CF0  +
test ebx ebx +
jnz loc_454D0C  +
mov eax [edi] +
mov ecx [eax] +
mov [edi] ecx +
test ecx ecx +
jnz loc_454C80  +
xor ebx ebx +
xor eax eax +
cmp ecx [esi+10h] +
mov edx 5 +
setz bl  +
shl ebx 2 +
test edx edx +
jz loc_454C94  +
lea esi [esi+0] +
add esp 20h +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
jmp sub_454D20  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx dword_468120 +
mov esi [eax] +
test edx edx +
js loc_454D6B  +
test edx edx +
jnz loc_454D4D  +
mov ds:dword_4807AC esi +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
mov eax ds:dword_4807A8 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
call sub_454C30  +
mov edx dword_468120 +
jmp loc_454D36  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov eax [eax+0Ch] +
mov [esp+40h+var_1C] eax +
mov eax [esi+10h] +
mov [esp+40h+var_18] eax +
mov eax [edx] +
jmp loc_454DAC  +
mov ds:dword_4807AC edx +
mov eax [ebx] +
mov eax [eax] +
mov [ebx] eax +
test eax eax +
jz loc_454E60  +
mov edx [eax+18h] +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_14] edx +
mov edx [esi+4] +
mov [esp+40h+var_28] eax +
mov eax [esi] +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
call eax  +
mov edx [esp+40h+var_14] +
test eax eax +
jnz loc_454EB4  +
test edx edx +
jz loc_454E35  +
mov edi [esi] +
mov ebp [esi+4] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_38] edi +
mov [esp+40h+var_34] ebp +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
call edx  +
cmp eax 7 +
jz loc_454EC1  +
cmp eax 8 +
jnz loc_454EB4  +
mov eax [ebx] +
mov edx [eax] +
mov eax dword_468120 +
test eax eax +
js loc_454EA0  +
test eax eax +
jz loc_454DA0  +
mov eax ds:dword_4807A8 +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call pthread_setspecific  +
jmp loc_454DA6  +
mov eax [esi] +
mov edx [esi+4] +
mov ecx [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_28] ecx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_3C] 1Ah +
mov [esp+40h+var_40] 1 +
call eax  +
test eax eax +
jnz loc_454EB4  +
add esp 3Ch +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_14] edx +
call sub_454C30  +
mov eax dword_468120 +
mov edx [esp+40h+var_14] +
jmp loc_454E42  +
add esp 3Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax dword_468120 +
mov ebx [esp+18h+arg_0] +
test eax eax +
js loc_454F20  +
test eax eax +
jnz loc_454EF7  +
mov eax ds:dword_4807AC +
mov ds:dword_4807AC ebx +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4807A8 +
mov [esp+18h+var_18] eax +
call pthread_getspecific  +
mov [ebx] eax +
mov eax ds:dword_4807A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_454C30  +
mov eax dword_468120 +
jmp loc_454EE1  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax] +
mov eax dword_468120 +
test eax eax +
js loc_454F68  +
test eax eax +
jnz loc_454F52  +
mov ds:dword_4807AC ebx +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4807A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_454C30  +
mov eax dword_468120 +
jmp loc_454F43  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov eax [eax+edx*4+8] +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jz loc_454FA0  +
mov eax [eax+28h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov [eax+edx*4+8] ecx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
mov eax [eax+4] +
add eax 1 +
retn   +
***
mov eax [esp+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_455000  +
mov eax [eax+4] +
add eax 1 +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov eax [eax] +
lea edx [ecx-1] +
mov [eax+4] edx +
retn   +
***
jmp sub_455030  +
***
mov eax [esp+arg_0] +
mov eax [eax] +
mov eax [eax+1Ch] +
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
retn   +
***
push ebx  +
sub esp 30h +
mov eax dword_468120 +
mov edi [esp+30h+arg_0] +
test eax eax +
js loc_455150  +
test eax eax +
mov esi ds:dword_4807AC +
jnz loc_455101  +
test esi esi +
mov [esp+30h+var_4] esi +
jz loc_4550F5  +
mov eax esi +
lea ebx [esp+30h+var_4] +
nop   +
mov eax [eax+18h] +
test eax eax +
jz loc_4550E7  +
mov [esp+30h+var_1C] ebx +
mov [esp+30h+var_20] edi +
mov edx [edi] +
mov ecx [edi+4] +
mov [esp+30h+var_2C] 1 +
mov [esp+30h+var_30] 1 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_24] ecx +
call eax  +
cmp eax 6 +
jz loc_455112  +
cmp eax 8 +
jnz loc_455140  +
mov eax [esp+30h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+30h+var_4] eax +
jnz loc_4550B0  +
mov eax 5 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4807A8 +
mov [esp+30h+var_30] eax +
call pthread_getspecific  +
mov esi eax +
jmp loc_4550A1  +
mov eax [esp+30h+var_4] +
mov edx ebx +
mov dword ptr [edi+0Ch] 0 +
mov [esp+30h+var_4] esi +
mov [edi+10h] eax +
mov eax edi +
call sub_454C70  +
cmp eax 7 +
jnz loc_4550FA  +
mov eax ebx +
call sub_454D20  +
lea esi [esi+0] +
add esp 30h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_454C30  +
mov eax dword_468120 +
jmp loc_455097  +
***
add esp 28h +
pop ebx  +
retn   +
***
mov eax ds:dword_4807A8 +
mov [esp] eax +
call pthread_getspecific  +
jmp loc_45517B  +
***
call sub_454C30  +
mov edx dword_468120 +
jmp loc_455172  +
***
sub esp 24h +
mov edx dword_468120 +
mov ebx [esp+24h+arg_0] +
test edx edx +
js loc_45522D  +
test edx edx +
mov eax ds:dword_4807AC +
jnz loc_45521E  +
mov ecx [ebx+0Ch] +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] eax +
mov edx esi +
mov eax ebx +
test ecx ecx +
jnz loc_45520E  +
call sub_454C70  +
cmp eax 7 +
jz loc_455217  +
call abort  +
nop   +
call sub_454D80  +
jmp loc_455204  +
mov eax esi +
call sub_454D20  +
mov eax ds:dword_4807A8 +
mov [esp+24h+var_24] eax +
call pthread_getspecific  +
jmp loc_4551EC  +
call sub_454C30  +
mov edx dword_468120 +
jmp loc_4551E3  +
***
mov ebx [esp+28h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_455280  +
mov edx dword_468120 +
test edx edx +
js loc_4552B0  +
test edx edx +
mov eax ds:dword_4807AC +
jnz loc_4552A0  +
mov [esp+28h+var_C] eax +
lea edx [esp+28h+var_C] +
mov eax ebx +
call sub_454D80  +
cmp eax 7 +
jz loc_455290  +
call abort  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
call sub_455080  +
add esp 28h +
pop ebx  +
retn   +
lea eax [esp+28h+var_C] +
call sub_454D20  +
lea esi [esi+0] +
mov eax ds:dword_4807A8 +
mov [esp+28h+var_28] eax +
call pthread_getspecific  +
jmp loc_455262  +
call sub_454C30  +
mov edx dword_468120 +
jmp loc_455259  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
test eax eax +
jz loc_4552DB  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] 1 +
call eax  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov edx dword_468120 +
mov ebx [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
test edx edx +
js loc_455360  +
test edx edx +
mov eax ds:dword_4807AC +
jnz loc_455350  +
test eax eax +
mov [esp+20h+var_4] eax +
lea esi [esp+20h+var_4] +
jz loc_45532B  +
lea esi [esi+0] +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_455341  +
mov eax [esp+20h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+20h+var_4] eax +
jnz loc_455310  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_455341  +
add esp 20h +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4807A8 +
mov [esp+20h+var_20] eax +
call pthread_getspecific  +
jmp loc_455301  +
call sub_454C30  +
mov edx dword_468120 +
jmp loc_4552F8  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] eax +
call sub_456EF0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+2Ch+var_28] eax +
call sub_456EF0  +
add esp 2Ch +
retn   +
***
mov eax [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_28] 4000h +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_1C] eax +
call sub_456EF0  +
mov byte ptr [ebx+eax] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4555DE  +
cmp byte ptr [ebx] 0 +
jz loc_4555A8  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_4555C0  +
test al 10h +
jz loc_4555A8  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_455494  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_4555CF  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_455523  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_455523  +
cmp al 5Ch +
jz loc_455523  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_455525  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_4555A0  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_4555A0  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_4555A0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4556F2  +
mov eax [ebx+228h] +
test eax eax +
js loc_4556DD  +
jz loc_455680  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_4556B0  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_4556DD  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_4556D3  +
mov dword ptr [ebx+228h] 1 +
jmp loc_455649  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_4556E5  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_4556BB  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_455673  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_45574F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_45573F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_455749  +
***
jmp sub_455770  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4557B3  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_45579A  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_4557AE  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4557E2  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_4557DD  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_45588D  +
cmp esi 0FFFFFFFFh +
jl loc_455880  +
jz loc_455850  +
mov [esp] ebx +
call sub_455770  +
nop   +
lea esi [esi+0] +
jmp loc_45583E  +
mov [esp] ebx +
call sub_4555F0  +
test eax eax +
jz loc_455877  +
cmp esi [ebx+228h] +
jg loc_455832  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_455863  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_455877  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_455877  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_4558D8  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_4558CB  +
jmp loc_4558D8  +
cmp byte ptr [edx] 0 +
jz loc_4558D6  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_4558C6  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 48h +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [esp+24h] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_20] eax +
mov eax [esp+48h+arg_C] +
fld  tbyte ptr [esp+48h+var_28] +
mov [esp+48h+var_1C] eax +
fxam   +
fstsw  ax +
fstp  st +
test ah 1 +
jz loc_455930  +
test ah 4 +
jz loc_4559B0  +
mov [esp+48h+var_10] 3 +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
jmp loc_455944  +
test ah 4 +
jnz loc_455991  +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
mov [esp+48h+var_10] 0 +
and edx 8000h +
mov ebx [esp+48h+arg_18] +
mov [ebx] edx +
lea edx [esp+48h+var_C] +
mov [esp+48h+var_2C] edx +
mov edx [esp+48h+arg_14] +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset unk_468128 +
mov [esp+48h+var_30] edx +
mov edx [esp+48h+arg_10] +
mov [esp+48h+var_34] edx +
lea edx [esp+48h+var_10] +
mov [esp+48h+var_3C] edx +
lea edx [esp+48h+var_28] +
mov [esp+48h+var_40] edx +
call sub_4578E0  +
add esp 48h +
pop ebx  +
retn   +
test ah 40h +
jz loc_4559C0  +
mov [esp+48h+var_10] 2 +
movzx edx word ptr [esp+48h+var_20] +
mov eax 0FFFFBFC3h +
jmp loc_455944  +
mov [esp+48h+var_10] 4 +
xor eax eax +
xor edx edx +
jmp loc_45594A  +
movzx edx word ptr [esp+48h+var_20] +
mov [esp+48h+var_10] 1 +
mov eax edx +
and eax 7FFFh +
sub eax 403Eh +
jmp loc_455944  +
***
mov ecx [edx+4] +
test ch 40h +
jnz loc_4559F4  +
mov ebx [edx+20h] +
cmp [edx+24h] ebx +
jle loc_455A04  +
and ch 20h +
jnz loc_455A10  +
mov ebx [edx] +
mov ecx [edx+20h] +
mov [ebx+ecx] al +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_14] ecx +
call fputc  +
mov edx [esp+18h+var_C] +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
mov [esp+50h+var_38] eax +
lea ebp [esp+50h+var_20] +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov [esp+50h+var_4C] 0 +
mov [esp+50h+var_50] ebp +
call sub_458E50  +
mov eax [ebx+0Ch] +
test eax eax +
js loc_455A77  +
cmp esi eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_455B02  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_455A91  +
test byte ptr [ebx+5] 4 +
jz loc_455B0B  +
mov [esp+50h+var_34] esi +
mov eax [esp+50h+var_34] +
test eax eax +
jle loc_455AED  +
add [esp+50h+var_38] 2 +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+var_38] +
movzx eax word ptr [eax-2] +
mov [esp+50h+var_50] ebp +
mov [esp+50h+var_4C] eax +
call sub_458E50  +
test eax eax +
jle loc_455AED  +
lea esi [ebp+eax+0] +
mov edi ebp +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_4559E0  +
cmp edi esi +
jnz loc_455AC8  +
sub [esp+50h+var_34] 1 +
jmp loc_455A95  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_455AE1  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_455A91  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_455B11  +
jmp loc_455A91  +
***
mov eax [ecx+0Ch] +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
test eax eax +
js loc_455B45  +
cmp edx eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_455BC0  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_455B7A  +
test byte ptr [ebx+5] 4 +
jnz loc_455B7A  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_455B61  +
test esi esi +
jz loc_455BAC  +
nop   +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_4559E0  +
sub esi 1 +
jnz loc_455B80  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_455BB9  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_455BA0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_455B7A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
mov dword ptr [ecx+0Ch] 0FFFFFFFFh +
jz loc_455C20  +
mov ebp [ecx+4] +
lea edi [esp+1Ch+var_10+1] +
mov byte ptr [esp+1Ch+var_10] 2Dh +
lea eax [esp+1Ch+var_10] +
and ebp 20h +
xor esi esi +
movzx ebx byte ptr [edx+esi] +
and ebx 0FFFFFFDFh +
or ebx ebp +
mov [edi+esi] bl +
add esi 1 +
cmp esi 3 +
jnz loc_455BF7  +
lea edx [edi+3] +
sub edx eax +
call sub_455B30  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ecx+4] +
test ebp 100h +
jz loc_455C40  +
mov byte ptr [esp+1Ch+var_10] 2Bh +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_455BF2  +
test ebp 40h +
jz loc_455C57  +
mov byte ptr [esp+1Ch+var_10] 20h +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_455BF2  +
lea eax [esp+1Ch+var_10] +
mov edi eax +
jmp loc_455BF2  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov [ebp+var_30] eax +
mov [ebp+var_28] eax +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov [ebp+var_2C] edx +
mov [ebp+var_24] edx +
test eax eax +
cmovns ebx eax +
add ebx 17h +
test ch 10h +
mov [ebp+var_1C] eax +
jz loc_455C9A  +
cmp word ptr [edi+1Ch] 0 +
jnz loc_455E70  +
mov eax [edi+8] +
cmp ebx eax +
cmovge eax ebx +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
test cl 80h +
lea eax [esp+48h+var_38] +
mov [ebp+var_20] eax +
jz loc_455CCC  +
mov ebx [ebp+var_2C] +
test ebx ebx +
js loc_455EE0  +
and cl 7Fh +
mov [edi+4] ecx +
mov eax [ebp+var_28] +
mov edx [ebp+var_24] +
mov esi eax +
mov eax edx +
or eax esi +
jz loc_455F0E  +
mov eax [ebp+var_20] +
mov [ebp+var_28] edi +
mov edi edx +
mov ebx eax +
lea ecx [ebx+1] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
mov [ebp+var_1C] ecx +
call sub_454AB0  +
add eax 30h +
mov [ebx] al +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
call sub_4549A0  +
mov ecx [ebp+var_1C] +
mov esi eax +
mov eax edx +
or eax esi +
mov edi edx +
jz loc_455D74  +
cmp [ebp+var_20] ecx +
jz loc_455D62  +
mov eax [ebp+var_28] +
test byte ptr [eax+5] 10h +
jz loc_455D62  +
cmp word ptr [eax+1Ch] 0 +
jz loc_455D62  +
mov eax ecx +
sub eax [ebp+var_20] +
cdq   +
shr edx 1Eh +
add eax edx +
and eax 3 +
sub eax edx +
cmp eax 3 +
jz loc_455D66  +
mov ebx ecx +
jmp loc_455CE8  +
lea ecx [ebx+2] +
mov byte ptr [ebx+1] 2Ch +
mov ebx ecx +
jmp loc_455CE8  +
mov edi [ebp+var_28] +
mov ebx ecx +
mov eax [edi+0Ch] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov esi ebx +
test ecx ecx +
jle loc_455DA1  +
mov eax [ebp+var_20] +
sub eax ebx +
add eax ecx +
test eax eax +
jle loc_455DA1  +
lea esi [ebx+eax] +
add ebx 1 +
cmp ebx esi +
mov byte ptr [ebx-1] 30h +
jnz loc_455D96  +
cmp esi [ebp+var_20] +
jz loc_455EF8  +
mov eax [edi+8] +
test eax eax +
jle loc_455E09  +
mov edx [ebp+var_20] +
sub edx esi +
add edx eax +
mov eax [edi+4] +
test edx edx +
mov [edi+8] edx +
jle loc_455E0C  +
test eax 1C0h +
jz loc_455DCF  +
sub edx 1 +
mov [edi+8] edx +
mov edx [edi+0Ch] +
test edx edx +
js loc_455E95  +
test ah 4 +
jnz loc_455E0C  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_455E0C  +
lea esi [esi+0] +
mov edx edi +
mov eax 20h +
call sub_4559E0  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_455DF0  +
mov eax [edi+4] +
test al 80h +
jz loc_455E61  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Dh +
cmp [ebp+var_20] ebx +
mov esi [ebp+var_20] +
jnb loc_455E4C  +
nop   +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_4559E0  +
cmp ebx esi +
jnz loc_455E20  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jle loc_455E59  +
nop   +
mov edx edi +
mov eax 20h +
call sub_4559E0  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_455E40  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ah 1 +
jz loc_455E87  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Bh +
jmp loc_455E16  +
mov eax ebx +
mov edx 55555556h +
imul  edx +
mov eax ebx +
sar eax 1Fh +
sub edx eax +
add ebx edx +
jmp loc_455C9A  +
test al 40h +
mov ebx esi +
jz loc_455E16  +
add ebx 1 +
mov byte ptr [esi] 20h +
jmp loc_455E16  +
mov edx eax +
and edx 600h +
cmp edx 200h +
jnz loc_455DDA  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_455E0C  +
lea esi [esi+0] +
add esi 1 +
mov byte ptr [esi-1] 30h +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_455EC0  +
jmp loc_455E09  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
neg eax  +
adc edx 0 +
neg edx  +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
jmp loc_455CCC  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_455DAA  +
mov byte ptr [esi] 30h +
add esi 1 +
jmp loc_455DAA  +
mov ebx [ebp+var_20] +
jmp loc_455D7F  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
cmp eax 6Fh +
mov [ebp+var_28] eax +
mov eax 18h +
mov [ebp+var_34] ecx +
mov ecx 12h +
cmovz ecx eax +
setnz al  +
movzx ebx al +
movzx eax al +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_0] +
lea ebx ds:7[ebx*8] +
mov [ebp+var_24] edx +
add [ebp+var_1C] 3 +
mov eax [eax+0Ch] +
mov edx eax +
mov [ebp+var_30] eax +
xor eax eax +
test edx edx +
cmovns eax edx +
add ecx eax +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
test ah 10h +
mov [ebp+var_38] eax +
jz loc_455F8D  +
mov eax [ebp+arg_0] +
cmp word ptr [eax+1Ch] 0 +
jnz loc_4561B1  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp ecx eax +
cmovl ecx eax +
mov [ebp+var_2C] eax +
lea eax [ecx+0Fh] +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
mov eax [ebp+var_34] +
or eax [ebp+var_24] +
mov [ebp+var_20] esp +
jz loc_456210  +
movzx ecx byte ptr [ebp+var_28] +
mov eax esp +
and ecx 20h +
mov byte ptr [ebp+var_24] cl +
jmp loc_455FE2  +
mov [eax-1] cl +
movzx ecx byte ptr [ebp+var_1C] +
xor edx edx +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
or ecx esi +
jz loc_456000  +
mov edx esi +
add eax 1 +
and edx ebx +
lea ecx [edx+30h] +
cmp cl 39h +
jle loc_455FC5  +
add edx 37h +
or dl byte ptr [ebp+var_24] +
mov [eax-1] dl +
jmp loc_455FC8  +
cmp [ebp+var_20] eax +
jz loc_456210  +
mov edi [ebp+var_30] +
test edi edi +
jle loc_4561C8  +
mov ecx [ebp+var_20] +
sub ecx eax +
add ecx edi +
test ecx ecx +
jle loc_4561C8  +
lea edi [eax+ecx] +
add eax 1 +
cmp eax edi +
mov byte ptr [eax-1] 30h +
jnz loc_456026  +
cmp edi [ebp+var_20] +
jz loc_4561F0  +
mov eax edi +
sub eax [ebp+var_20] +
cmp [ebp+var_2C] eax +
jle loc_4560F2  +
mov esi [ebp+var_2C] +
sub esi eax +
mov eax [ebp+arg_0] +
test esi esi +
mov [eax+8] esi +
jle loc_456078  +
cmp [ebp+var_28] 6Fh +
jz loc_45606A  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_456166  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
js loc_45617D  +
lea eax [esi-1] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
cmp [ebp+var_28] 6Fh +
mov ebx eax +
jz loc_456096  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_456150  +
test esi esi +
jle loc_4560A3  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 4 +
jz loc_456110  +
cmp edi [ebp+var_20] +
jbe loc_4560CD  +
mov [ebp+var_1C] esi +
mov esi [ebp+var_20] +
mov [ebp+var_20] ebx +
mov ebx edi +
mov edi [ebp+arg_0] +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_4559E0  +
cmp ebx esi +
jnz loc_4560B6  +
mov esi [ebp+var_1C] +
mov ebx [ebp+var_20] +
test esi esi +
jle loc_4560EA  +
mov esi [ebp+arg_0] +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_4559E0  +
lea eax [ebx+1] +
test eax eax +
jg loc_4560D4  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov esi 0FFFFFFFFh +
mov [ebp+var_1C] 0FFFFFFFEh +
mov dword ptr [eax+8] 0FFFFFFFFh +
jmp loc_45607E  +
mov ebx [ebp+var_1C] +
mov esi eax +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_4559E0  +
lea eax [ebx+1] +
test eax eax +
jg loc_456115  +
mov ebx [ebp+var_1C] +
xor eax eax +
test ebx ebx +
lea esi [ebx-1] +
cmovns eax ebx +
sub esi eax +
lea ebx [esi-1] +
jmp loc_4560A3  +
sub esi 3 +
mov [ebp+var_1C] esi +
mov esi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+var_28] +
add edi 2 +
mov byte ptr [edi-1] 30h +
mov ebx [ebp+var_1C] +
mov [edi-2] al +
jmp loc_456096  +
lea eax [esi-2] +
test eax eax +
jle loc_456142  +
mov esi eax +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
jns loc_456078  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 600h +
cmp eax 200h +
jnz loc_456078  +
add esi edi +
add edi 1 +
cmp edi esi +
mov byte ptr [edi-1] 30h +
jnz loc_456195  +
mov [ebp+var_1C] 0FFFFFFFEh +
mov esi 0FFFFFFFFh +
jmp loc_45607E  +
mov eax ecx +
mov edx 55555556h +
imul  edx +
mov eax ecx +
sar eax 1Fh +
sub edx eax +
add ecx edx +
jmp loc_455F8D  +
cmp [ebp+var_28] 6Fh +
mov edi eax +
jnz loc_456031  +
mov esi [ebp+arg_0] +
test byte ptr [esi+5] 8 +
jz loc_456031  +
add edi 1 +
mov byte ptr [eax] 30h +
jmp loc_456031  +
mov eax [ebp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_45603A  +
mov byte ptr [edi] 30h +
mov eax [eax+8] +
add edi 1 +
mov [ebp+var_2C] eax +
jmp loc_45603A  +
mov eax [ebp+var_38] +
mov edi [ebp+arg_0] +
and ah 0F7h +
mov [edi+4] eax +
mov eax [ebp+var_20] +
jmp loc_456009  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [eax+10h] 0FFFFFFFDh +
jz loc_4562C5  +
movzx edx word ptr [eax+14h] +
test dx dx +
jz loc_4562A3  +
mov eax [ebx+10h] +
mov [ebp+var_2C] esp +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_454930  +
sub esp eax +
lea edi [esp+48h+var_38] +
lea eax [ebp+var_1C] +
mov [ebp+var_1C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edi +
call sub_458E50  +
test eax eax +
jle loc_4562B7  +
lea esi [edi+eax] +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_4559E0  +
cmp edi esi +
jnz loc_456286  +
mov esp [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_4559E0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_4559E0  +
jmp loc_456298  +
mov [ebp+var_1C] 0 +
call localeconv  +
lea edx [ebp+var_1C] +
mov eax [eax] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] 10h +
mov [esp+48h+var_44] eax +
lea eax [ebp-1Eh] +
mov [esp+48h+var_48] eax +
call sub_459130  +
test eax eax +
jle loc_456305  +
movzx edx [ebp+var_1E] +
mov [ebx+14h] dx +
mov [ebx+10h] eax +
jmp loc_456249  +
movzx edx word ptr [ebx+14h] +
jmp loc_4562FD  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test esi esi +
mov ebx [esp+28h+arg_0] +
mov ecx [ebx+8] +
jle loc_456570  +
cmp esi ecx +
jge loc_456433  +
sub ecx esi +
mov [ebx+8] ecx +
test ecx ecx +
js loc_456433  +
mov eax [ebx+0Ch] +
cmp eax ecx +
jge loc_456433  +
sub ecx eax +
test ecx ecx +
mov [ebx+8] ecx +
jle loc_45643F  +
test eax eax +
jle loc_4565D1  +
sub ecx 1 +
test esi esi +
mov [ebx+8] ecx +
jg loc_456447  +
nop   +
test ecx ecx +
jle loc_456392  +
test ebp ebp +
jz loc_456531  +
sub ecx 1 +
test ecx ecx +
mov [ebx+8] ecx +
jz loc_456392  +
mov eax [ebx+4] +
test ah 6 +
jz loc_4564B3  +
test ebp ebp +
jnz loc_4564C8  +
mov eax [ebx+4] +
test ah 1 +
jnz loc_456585  +
test al 40h +
jnz loc_4565C0  +
mov edx [ebx+8] +
test edx edx +
jle loc_4563C8  +
mov eax [ebx+4] +
and eax 600h +
cmp eax 200h +
jz loc_456596  +
lea eax [ebx+1Ch] +
test esi esi +
mov ebp 55555556h +
mov [esp+28h+var_1C] eax +
jle loc_4564E0  +
lea esi [esi+0] +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_4563F2  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_4559E0  +
sub esi 1 +
jz loc_4564EC  +
test byte ptr [ebx+5] 10h +
jz loc_4563E0  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_4563E0  +
mov eax esi +
imul  ebp +
mov eax esi +
sar eax 1Fh +
sub edx eax +
lea eax [edx+edx*2] +
cmp esi eax +
jnz loc_4563E0  +
mov eax [esp+28h+var_1C] +
mov ecx ebx +
mov edx 1 +
call sub_455A40  +
jmp loc_4563E0  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov ecx 0FFFFFFFFh +
test esi esi +
jle loc_456370  +
test byte ptr [ebx+5] 10h +
jz loc_456370  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_456370  +
lea eax [esi+2] +
mov edx 55555556h +
mov [esp+28h+var_1C] eax +
imul  edx +
mov eax [esp+28h+var_1C] +
sar eax 1Fh +
sub edx eax +
cmp edx 1 +
jle loc_456370  +
test ecx ecx +
jle loc_456392  +
mov eax ecx +
sub eax edx +
add eax 1 +
jmp loc_456498  +
test ecx ecx +
jz loc_4565E5  +
sub ecx 1 +
cmp ecx eax +
jnz loc_456490  +
mov [ebx+8] ecx +
jmp loc_456370  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4564A7  +
test ebp ebp +
jz loc_45639A  +
mov edx ebx +
mov eax 2Dh +
call sub_4559E0  +
jmp loc_4563AE  +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_456544  +
mov eax ebx +
call sub_456230  +
test esi esi +
mov eax [ebx+0Ch] +
jz loc_45651F  +
jmp loc_456552  +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_456515  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_4559E0  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_456503  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
test eax 1C0h +
jz loc_456389  +
jmp loc_45637C  +
test byte ptr [ebx+5] 8 +
jnz loc_4564F3  +
test esi esi +
lea esi [esi+0] +
jz loc_45651F  +
add eax esi +
mov [ebx+0Ch] eax +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
add esi 1 +
js loc_456557  +
jmp loc_45651C  +
test ecx ecx +
jle loc_456339  +
sub ecx 1 +
mov [ebx+8] ecx +
nop   +
jmp loc_456341  +
mov edx ebx +
mov eax 2Bh +
call sub_4559E0  +
jmp loc_4563AE  +
sub edx 1 +
mov [ebx+8] edx +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4565A0  +
jmp loc_4563C8  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
jmp loc_4563AE  +
test byte ptr [ebx+5] 8 +
jz loc_45643F  +
nop   +
lea esi [esi+0] +
jmp loc_456361  +
mov dword ptr [ebx+8] 0 +
jmp loc_456392  +
***
jmp sub_456600  +
***
push edi  +
mov ebp edx +
push esi  +
mov esi 1 +
push ebx  +
mov ebx 66666667h +
sub esp 1Ch +
mov [esp+28h+var_24] eax +
mov eax ecx +
mov edi [esp+28h+arg_0] +
sar eax 1Fh +
mov [esp+28h+var_1C] eax +
mov eax ecx +
imul  ebx +
mov [esp+28h+var_20] ecx +
sar ecx 1Fh +
sar edx 2 +
mov ebx edx +
sub ebx ecx +
jz loc_456653  +
mov ecx 66666667h +
mov eax ebx +
add esi 1 +
imul  ecx +
sar ebx 1Fh +
sar edx 2 +
sub edx ebx +
mov ebx edx +
jnz loc_456640  +
mov eax [edi+28h] +
mov edx [edi+8] +
cmp esi eax +
cmovl esi eax +
lea eax [esi+2] +
cmp edx eax +
jg loc_4566C0  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov eax [esp+28h+var_24] +
mov ecx 1 +
mov edx ebp +
mov [esp+28h+var_28] edi +
add esi 1 +
call sub_456310  +
mov eax [edi+28h] +
mov [edi+0Ch] eax +
mov eax [edi+4] +
mov edx eax +
and eax 20h +
or edx 1C0h +
or eax 45h +
mov [edi+4] edx +
mov edx edi +
call sub_4559E0  +
mov eax [esp+28h+var_20] +
mov ecx edi +
add [edi+8] esi +
mov edx [esp+28h+var_1C] +
call sub_455C60  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edx eax +
mov [edi+8] edx +
jmp loc_45666C  +
***
mov ebx eax +
sub esp 44h +
mov eax [eax+0Ch] +
test eax eax +
js loc_456750  +
add eax 1 +
fld  [esp+44h+arg_0] +
mov [esp+44h+var_34] eax +
lea edx [esp+44h+var_1C] +
fstp  [esp+44h+var_14] +
mov eax dword ptr [esp+44h+var_14] +
mov [esp+44h+var_2C] edx +
lea edx [esp+44h+var_18] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_44] eax +
mov eax dword ptr [esp+44h+var_14+4] +
mov [esp+44h+var_40] eax +
mov eax dword ptr [esp+44h+var_14+8] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_8] +
mov [esp+44h+var_38] eax +
mov eax 2 +
call sub_4558E0  +
mov ecx [esp+44h+var_18] +
cmp ecx 0FFFF8000h +
mov esi eax +
jz loc_456760  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_44] ebx +
call sub_456600  +
mov [esp+44h+var_44] esi +
call sub_4593B0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 7 +
jmp loc_4566E1  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov ecx ebx +
call sub_455BD0  +
mov [esp+44h+var_44] esi +
call sub_4593B0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_456830  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 3 +
call sub_4558E0  +
mov ecx [esp+40h+var_14] +
cmp ecx 0FFFF8000h +
mov edi eax +
jz loc_456841  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_40] ebx +
call sub_456310  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_45681A  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_456801  +
mov [esp+40h+var_40] edi +
call sub_4593B0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_456793  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_455BD0  +
mov [esp+40h+var_40] edi +
call sub_4593B0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_456990  +
jz loc_456973  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 2 +
call sub_4558E0  +
mov esi [esp+40h+var_14] +
cmp esi 0FFFF8000h +
mov edi eax +
jz loc_4569B0  +
cmp esi 0FFFFFFFDh +
jl loc_456940  +
mov eax [ebx+0Ch] +
cmp esi eax +
jg loc_456940  +
test byte ptr [ebx+5] 8 +
jnz loc_4569A1  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax esi +
test eax eax +
mov [ebx+0Ch] eax +
js loc_4569C0  +
mov eax [esp+40h+var_18] +
mov edx edi +
mov ecx esi +
mov [esp+40h+var_40] ebx +
call sub_456310  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_456964  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_456918  +
mov [esp+40h+var_40] edi +
call sub_4593B0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test byte ptr [ebx+5] 8 +
jnz loc_456984  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+40h+var_18] +
mov ecx esi +
mov edx edi +
mov [esp+40h+var_40] ebx +
call sub_456600  +
mov [esp+40h+var_40] edi +
call sub_4593B0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 1 +
mov eax 1 +
jmp loc_456879  +
sub dword ptr [ebx+0Ch] 1 +
jmp loc_456954  +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_456879  +
sub eax esi +
mov [ebx+0Ch] eax +
jmp loc_4568FB  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_455BD0  +
jmp loc_456964  +
mov edx [ebx+8] +
test edx edx +
jle loc_4568FB  +
add eax edx +
mov [ebx+8] eax +
jmp loc_4568FB  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
fld  [esp+5Ch+arg_0] +
fld  st +
fstp  tbyte ptr [esp+5Ch+var_36+2] +
fxam   +
fstsw  ax +
and ax 4500h +
cmp ax 100h +
jz loc_456E75  +
movzx edx word ptr [esp+30h] +
mov esi edx +
and esi 8000h +
jnz loc_456BC1  +
fxam   +
fstsw  ax +
fstp  st +
and ax 4500h +
cmp ax 500h +
jz loc_456E87  +
and dx 7FFFh +
jz loc_456C56  +
mov esi [esp+5Ch+var_36+2] +
lea eax [edx-3FFFh] +
mov edi [esp+2Ch] +
mov edx [ebx+0Ch] +
cmp edx 0Eh +
jbe loc_456BD6  +
mov ecx edi +
or ecx esi +
jz loc_456E9A  +
lea ecx [esp+5Ch+var_24] +
mov ebp ebx +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_54] ecx +
nop   +
lea esi [esi+0] +
mov ecx esi +
and ecx 0Fh +
cmp ecx esi +
jz loc_456CB0  +
mov edx [ebp+0Ch] +
test edx edx +
jle loc_456A8A  +
sub edx 1 +
mov [ebp+0Ch] edx +
mov edx [esp+5Ch+var_54] +
shrd esi edi +
shr edi 4 +
test ecx ecx +
jz loc_456C90  +
lea ebx [edx+1] +
cmp ecx 9 +
mov [esp+5Ch+var_54] ebx +
jle loc_456CA4  +
movzx ebx byte ptr [ebp+4] +
add ecx 37h +
and ebx 20h +
or ecx ebx +
mov [edx] cl +
mov ecx edi +
or ecx esi +
jnz loc_456A70  +
mov ebx ebp +
mov ebp [esp+5Ch+var_54] +
cmp ebp [esp+5Ch+var_48] +
jz loc_456ECB  +
mov edi [ebx+4] +
mov [esp+5Ch+var_54] edi +
mov edi [ebx+8] +
test edi edi +
mov [esp+5Ch+var_44] edi +
jle loc_456E29  +
cwde   +
mov edx ebp +
mov esi eax +
mov eax [ebx+0Ch] +
sub edx [esp+5Ch+var_48] +
mov [esp+5Ch+var_40] esi +
test eax eax +
lea ecx [edx+eax] +
mov eax [esp+5Ch+var_54] +
cmovg edx ecx +
and eax 1C0h +
cmp eax 1 +
sbb eax eax +
lea edi [edx+eax+6] +
mov eax esi +
mov edx 66666667h +
imul  edx +
mov eax esi +
sar eax 1Fh +
sar edx 2 +
mov ecx edx +
sub ecx eax +
jz loc_456EC1  +
mov esi 2 +
mov eax 66666667h +
add edi 1 +
imul  ecx +
add esi 1 +
sar ecx 1Fh +
sar edx 2 +
sub edx ecx +
mov ecx edx +
jnz loc_456B31  +
movsx esi si +
cmp [esp+5Ch+var_44] edi +
jle loc_456D10  +
mov eax [esp+5Ch+var_44] +
sub eax edi +
test [esp+5Ch+var_54] 600h +
jnz loc_456E43  +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_456D17  +
lea esi [esi+0] +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_456B80  +
mov eax [ebx+4] +
mov [esp+5Ch+var_54] eax +
test byte ptr [esp+5Ch+var_54] 80h +
jz loc_456D22  +
nop   +
lea esi [esi+0] +
mov edx ebx +
mov eax 2Dh +
call sub_4559E0  +
jmp loc_456D3B  +
or dword ptr [ebx+4] 80h +
jmp loc_456A19  +
shld edi esi +
add esi esi +
test edi edi +
jns loc_456BD0  +
mov ecx 0Eh +
xor ebp ebp +
shrd esi edi +
sub ecx edx +
shr edi 1 +
mov [esp+5Ch+var_50] edi +
shl ecx 2 +
mov edi 4 +
mov [esp+5Ch+var_54] esi +
shld ebp edi +
xor esi esi +
shl edi cl +
test cl 20h +
cmovnz ebp edi +
cmovnz edi esi +
add [esp+5Ch+var_54] edi +
adc [esp+5Ch+var_50] ebp +
mov ebp [esp+5Ch+var_50] +
mov edi [esp+5Ch+var_54] +
test ebp ebp +
js loc_456E6D  +
shld ebp edi +
add edi edi +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_50] ebp +
mov edi [esp+5Ch+var_50] +
mov ecx 0Fh +
xor ebp ebp +
mov esi [esp+5Ch+var_54] +
sub ecx edx +
shl ecx 2 +
shrd esi edi +
shr edi cl +
and ecx 20h +
cmovnz esi edi +
cmovnz edi ebp +
jmp loc_456A5D  +
mov edi [esp+2Ch] +
mov esi [esp+5Ch+var_36+2] +
mov eax edi +
or eax esi +
jz loc_456E38  +
test edi edi +
js loc_456ED0  +
mov edx 0FFFFC001h +
shld edi esi +
mov eax edx +
add esi esi +
sub edx 1 +
test edi edi +
jns loc_456C75  +
jmp loc_456A47  +
cmp edx [esp+5Ch+var_48] +
ja loc_456C9D  +
mov ebx [ebp+0Ch] +
test ebx ebx +
js loc_456D05  +
lea ebx [edx+1] +
mov [esp+5Ch+var_54] ebx +
add ecx 30h +
jmp loc_456AB9  +
mov edx [esp+5Ch+var_48] +
cmp [esp+5Ch+var_54] edx +
ja loc_456CD0  +
test byte ptr [ebp+5] 8 +
jnz loc_456CD0  +
mov ebx [ebp+0Ch] +
mov edx [esp+5Ch+var_54] +
test ebx ebx +
jle loc_456CDA  +
nop   +
lea esi [esi+0] +
mov ebx [esp+5Ch+var_54] +
lea edx [ebx+1] +
mov byte ptr [ebx] 2Eh +
cmp edi 0 +
ja loc_456CE4  +
cmp esi 1 +
jbe loc_456CFC  +
lea ebx [eax-1] +
shrd esi edi +
mov eax ebx +
shr edi 1 +
cmp edi 0 +
lea ebx [eax-1] +
ja loc_456CE7  +
cmp esi 1 +
ja loc_456CE7  +
xor esi esi +
xor edi edi +
jmp loc_456A95  +
mov [esp+5Ch+var_54] edx +
jmp loc_456ABB  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
test byte ptr [esp+5Ch+var_54] 80h +
jnz loc_456BB0  +
test [esp+5Ch+var_54] 100h +
jnz loc_456E4B  +
test byte ptr [esp+5Ch+var_54] 40h +
jnz loc_456E5C  +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 58h +
call sub_4559E0  +
mov eax [ebx+8] +
test eax eax +
jle loc_456D89  +
test byte ptr [ebx+5] 2 +
jz loc_456D89  +
sub eax 1 +
mov [ebx+8] eax +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_456D70  +
cmp ebp [esp+5Ch+var_48] +
mov edi [esp+5Ch+var_48] +
ja loc_456DB7  +
jmp loc_456DDE  +
movzx eax word ptr [ebx+1Ch] +
test ax ax +
mov word ptr [esp+5Ch+var_36] ax +
jz loc_456DB3  +
mov ecx ebx +
mov edx 1 +
lea eax [esp+5Ch+var_36] +
call sub_455A40  +
cmp ebp edi +
jz loc_456DDE  +
sub ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp eax 2Eh +
jz loc_456E20  +
cmp eax 2Ch +
jz loc_456D95  +
mov edx ebx +
call sub_4559E0  +
nop   +
jmp loc_456DB3  +
mov edx ebx +
mov eax 30h +
call sub_4559E0  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_456DD2  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 50h +
call sub_4559E0  +
mov eax [esp+5Ch+var_40] +
mov ecx ebx +
add [ebx+8] esi +
or dword ptr [ebx+4] 1C0h +
cdq   +
call sub_455C60  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_456230  +
jmp loc_456DB3  +
cwde   +
mov esi 2 +
mov [esp+5Ch+var_40] eax +
jmp loc_456D17  +
xor eax eax +
xor esi esi +
xor edi edi +
jmp loc_456A47  +
mov [ebx+8] eax +
jmp loc_456D17  +
mov edx ebx +
mov eax 2Bh +
call sub_4559E0  +
jmp loc_456D3B  +
mov edx ebx +
mov eax 20h +
call sub_4559E0  +
jmp loc_456D3B  +
add eax 1 +
jmp loc_456C2F  +
fstp  st +
mov ecx ebx +
mov edx offset unk_47E000 +
xor eax eax +
call sub_455BD0  +
jmp loc_456E11  +
mov ecx ebx +
mov edx offset unk_47E004 +
mov eax esi +
call sub_455BD0  +
jmp loc_456E11  +
lea edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_48] edi +
mov edi [ebx+4] +
test edx edx +
mov [esp+5Ch+var_54] edi +
jle loc_456EDA  +
mov byte ptr [esp+5Ch+var_24] 2Eh +
lea edx [esp+5Ch+var_24+1] +
lea ebp [edx+1] +
mov byte ptr [edx] 30h +
jmp loc_456AD8  +
mov esi 2 +
jmp loc_456B4D  +
mov edx [ebx+0Ch] +
jmp loc_456EA2  +
mov eax 0FFFFC002h +
jmp loc_456A47  +
and edi 800h +
mov edx [esp+5Ch+var_48] +
jz loc_456EB6  +
jmp loc_456EAD  +
***
push esi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_C] +
mov edi [esp+7Ch+arg_C] +
mov ebx [eax] +
mov eax ebx +
and eax 0FFFFFFCFh +
mov [edi] eax +
mov eax ebx +
and eax 7 +
cmp eax 4 +
ja loc_458DAC  +
jmp ds:off_47E1B0[eax*4]  +
mov eax [esp+7Ch+arg_0] +
xor edx edx +
mov esi [eax] +
cmp esi 20h +
jle loc_457931  +
mov eax 20h +
add eax eax +
add edx 1 +
cmp esi eax +
jg loc_457928  +
mov [esp+7Ch+var_7C] edx +
call sub_4596E0  +
mov edi [esp+7Ch+arg_8] +
mov ebp eax +
lea eax [esi-1] +
sar eax 5 +
lea edi [edi+eax*4] +
mov eax [esp+7Ch+arg_8] +
lea ecx [ebp+14h] +
mov edx ecx +
mov dword ptr [esp+7Ch+var_64] ecx +
nop   +
lea esi [esi+0] +
mov ecx [eax] +
add eax 4 +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
jnb loc_457960  +
mov ecx dword ptr [esp+7Ch+var_64] +
sub edx ecx +
sar edx 2 +
jmp loc_45798A  +
test eax eax +
jz loc_457E45  +
mov edx eax +
lea eax [edx-1] +
mov edi [ecx+eax*4] +
test edi edi +
jz loc_457980  +
bsr eax [ebp+edx*4+10h] +
mov [ebp+10h] edx +
shl edx 5 +
mov [esp+7Ch+var_54] edx +
xor eax 1Fh +
sub [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_45A240  +
mov edi [esp+7Ch+arg_4] +
test eax eax +
mov [esp+7Ch+var_10] eax +
jnz loc_457E60  +
mov ecx [ebp+10h] +
test ecx ecx +
jnz loc_457A78  +
mov [esp+7Ch+var_7C] ebp +
call sub_4597B0  +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 1 +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_7C] offset a0_1 +
mov [esp+7Ch+var_78] eax +
call sub_459360  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 3 +
mov [esp+7Ch+var_7C] offset aNan_0 +
mov [esp+7Ch+var_78] eax +
call sub_459360  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 8 +
mov [esp+7Ch+var_7C] offset aInfinity +
mov [esp+7Ch+var_78] eax +
call sub_459360  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_459F00  +
mov eax [esp+7Ch+var_54] +
lea eax [edi+eax-1] +
mov [esp+7Ch+var_24] eax +
fstp  [esp+7Ch+var_64] +
mov edx dword ptr [esp+7Ch+var_64+4] +
and edx 0FFFFFh +
mov [esp+7Ch+var_50] edx +
cdq   +
or [esp+7Ch+var_50] 3FF00000h +
mov ecx [esp+7Ch+var_50] +
mov dword ptr [esp+7Ch+var_64+4] ecx +
mov ecx edx +
fld  [esp+7Ch+var_64] +
xor ecx eax +
fsub  ds:flt_47E1C4 +
sub ecx edx +
sub ecx 435h +
test ecx ecx +
fmul  ds:dbl_47E1C8 +
fadd  ds:dbl_47E1D0 +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_47E1D8 +
faddp st(1) st +
jle loc_457AF9  +
mov [esp+7Ch+var_24] ecx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_47E1E0 +
faddp st(1) st +
fnstcw  [esp+7Ch+var_1E] +
movzx ecx [esp+7Ch+var_1E] +
mov ch 0Ch +
mov [esp+7Ch+var_20] cx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_58] +
fldcw  [esp+7Ch+var_1E] +
fldz   +
fucomip st st(1) +
ja loc_4582E5  +
fstp  st +
mov ecx eax +
shl ecx 14h +
add ecx [esp+7Ch+var_50] +
cmp [esp+7Ch+var_58] 16h +
mov [esp+7Ch+var_34] 1 +
mov dword ptr [esp+7Ch+var_64+4] ecx +
ja loc_457B65  +
mov ecx [esp+7Ch+var_58] +
fld  ds:dbl_47E240[ecx*8] +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_457EA0  +
sub [esp+7Ch+var_58] 1 +
mov [esp+7Ch+var_34] 0 +
mov edx [esp+7Ch+var_54] +
mov [esp+7Ch+var_44] 0 +
sub edx eax +
sub edx 1 +
mov [esp+7Ch+var_4C] edx +
js loc_4582D0  +
mov ecx [esp+7Ch+var_58] +
test ecx ecx +
js loc_4582B0  +
add [esp+7Ch+var_4C] ecx +
mov [esp+7Ch+var_30] ecx +
mov [esp+7Ch+var_3C] 0 +
cmp [esp+7Ch+arg_10] 9 +
ja loc_457E82  +
cmp [esp+7Ch+arg_10] 5 +
jle loc_457E8D  +
sub [esp+7Ch+arg_10] 4 +
xor eax eax +
cmp [esp+7Ch+arg_10] 3 +
jz loc_45851E  +
jle loc_458210  +
cmp [esp+7Ch+arg_10] 4 +
mov [esp+7Ch+var_38] 1 +
jz loc_457EB0  +
cmp [esp+7Ch+arg_10] 5 +
jnz loc_458226  +
mov ecx [esp+7Ch+var_58] +
add ecx [esp+7Ch+arg_14] +
mov [esp+7Ch+var_28] ecx +
add ecx 1 +
test ecx ecx +
mov [esp+7Ch+var_50] ecx +
jle loc_458779  +
cmp ecx 0Eh +
setbe dl  +
and edx eax +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_2C] edx +
call sub_459320  +
mov edx [esp+7Ch+var_2C] +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
sub eax 1 +
mov [esp+7Ch+var_48] eax +
jz loc_457C6D  +
mov eax 2 +
cmovns eax [esp+7Ch+var_48] +
and ebx 8 +
mov [esp+7Ch+var_48] eax +
jz loc_457C6D  +
mov eax 3 +
sub eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_48] eax +
test dl dl +
jz loc_457F36  +
mov eax [esp+7Ch+var_48] +
or eax [esp+7Ch+var_58] +
jnz loc_457F36  +
mov eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_10] 0 +
fld  [esp+7Ch+var_64] +
test eax eax +
jz loc_457CA1  +
fld1   +
fucomip st st(1) +
ja loc_458AFF  +
fld  st +
mov eax [esp+7Ch+var_50] +
fadd st st(1) +
fadd  ds:flt_47E1FC +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
test eax eax +
jz loc_457EFC  +
mov ecx [esp+7Ch+var_50] +
fld  st +
mov [esp+7Ch+var_2C] 0 +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_4587DA  +
fld  ds:flt_47E204 +
fdiv  ds:dbl_47E238[ecx*8] +
fnstcw  [esp+7Ch+var_1E] +
mov edx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 0 +
movzx eax [esp+7Ch+var_1E] +
mov ebx edx +
add ebx 1 +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fsub  [esp+7Ch+var_64] +
fxch  st(1) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [edx] al +
fucomi st st(1) +
ja loc_457DD2  +
fld  st(1) +
fsubr  ds:flt_47E1F0 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_4589A0  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_457F22  +
fld  ds:flt_47E1F4 +
jmp loc_457D9B  +
fld  st(1) +
fsubr  ds:flt_47E1F0 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_4589A8  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_457F28  +
fxch  st(1) +
fxch  st(2) +
fmul st(1) st +
add ebx 1 +
fmul st(2) st +
fxch  st(2) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [ebx-1] al +
fucomi st st(1) +
jbe loc_457D70  +
fstp  st +
fstp  st(1) +
fstp  st(1) +
jmp loc_457DD6  +
fstp  st +
fstp  st(1) +
fldz   +
fxch  st(1) +
mov eax [esp+7Ch+var_2C] +
fucomip st st(1) +
fstp  st +
jp loc_457DEA  +
jz loc_458714  +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 10h +
lea esi [esi+0] +
mov [esp+7Ch+var_7C] ebp +
call sub_4597B0  +
mov eax [esp+7Ch+arg_18] +
mov esi [esp+7Ch+var_58] +
mov byte ptr [ebx] 0 +
mov [eax] esi +
mov eax [esp+7Ch+arg_1C] +
test eax eax +
jz loc_457E2C  +
mov eax [esp+7Ch+arg_1C] +
mov [eax] ebx +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_50] +
or [eax] esi +
mov eax [esp+7Ch+var_40] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+10h] 0 +
mov [esp+7Ch+var_54] 0 +
jmp loc_4579AA  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_45A120  +
mov eax [esp+7Ch+var_10] +
mov edi [esp+7Ch+arg_4] +
sub [esp+7Ch+var_54] eax +
add edi eax +
jmp loc_4579C5  +
mov [esp+7Ch+arg_10] 0 +
add eax 3FEh +
cmp eax 7F7h +
setbe al  +
jmp loc_457BC2  +
mov [esp+7Ch+var_34] 0 +
jmp loc_457B65  +
mov edx [esp+7Ch+arg_14] +
test edx edx +
jle loc_458764  +
cmp [esp+7Ch+arg_14] 0Eh +
setbe dl  +
mov ecx [esp+7Ch+arg_14] +
and edx eax +
mov [esp+7Ch+var_10] ecx +
mov eax ecx +
mov [esp+7Ch+var_28] ecx +
mov [esp+7Ch+var_50] ecx +
jmp loc_457C26  +
fld  st +
fadd st st(1) +
fadd  ds:flt_47E1FC +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
fld  st +
fsub  ds:flt_47E200 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomi st st(1) +
ja loc_4588AD  +
fxch  st(1) +
fchs   +
fucomip st st(1) +
fstp  st +
ja loc_458275  +
jmp loc_457F32  +
fstp  st +
fstp  st +
jmp loc_457F32  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_457F32  +
fstp  st +
fstp  [esp+7Ch+var_64] +
test edi edi +
js loc_457FF1  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_58] +
cmp ebx [eax+14h] +
jg loc_457FF1  +
mov eax [esp+7Ch+var_50] +
fld  ds:dbl_47E240[ebx*8] +
test eax eax +
jg loc_45864B  +
mov eax [esp+7Ch+arg_14] +
shr eax 1Fh +
test al al +
jz loc_45864B  +
mov edi [esp+7Ch+var_50] +
test edi edi +
jnz loc_458279  +
fmul  ds:flt_47E200 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jnb loc_45827B  +
mov eax ebx +
xor edi edi +
add eax 2 +
mov [esp+7Ch+var_58] eax +
mov dword ptr [esp+7Ch+var_64] 0 +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 20h +
lea ebx [eax+1] +
mov byte ptr [eax] 31h +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_4597B0  +
test edi edi +
jz loc_457E00  +
cmp [esp+7Ch+var_4C] edi +
jnz loc_458501  +
mov [esp+7Ch+var_7C] edi +
call sub_4597B0  +
jmp loc_457E00  +
mov ecx [esp+7Ch+var_38] +
test ecx ecx +
jz loc_458480  +
mov ebx [esp+7Ch+arg_0] +
mov ecx edi +
sub esi [esp+7Ch+var_54] +
mov edx [ebx+4] +
sub ecx esi +
lea eax [esi+1] +
mov [esp+7Ch+var_10] eax +
cmp ecx edx +
jge loc_4584A0  +
cmp [esp+7Ch+arg_10] 3 +
jz loc_4584A0  +
cmp [esp+7Ch+arg_10] 5 +
jz loc_4584A0  +
mov eax edi +
sub eax edx +
add eax 1 +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_10] eax +
jle loc_458061  +
mov edx [esp+7Ch+var_50] +
test edx edx +
jle loc_458061  +
cmp [esp+7Ch+var_50] eax +
jl loc_4584AE  +
mov esi [esp+7Ch+var_3C] +
mov ebx [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] 1 +
add [esp+7Ch+var_44] eax +
add [esp+7Ch+var_4C] eax +
call sub_459900  +
mov edi eax +
mov eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_4580A2  +
test ebx ebx +
jle loc_4580A2  +
mov eax [esp+7Ch+var_4C] +
cmp eax ebx +
cmovg eax ebx +
sub [esp+7Ch+var_44] eax +
sub ebx eax +
sub [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_10] eax +
mov ecx [esp+7Ch+var_3C] +
test ecx ecx +
jle loc_4580F2  +
mov edx [esp+7Ch+var_38] +
test edx edx +
jz loc_4584EA  +
test esi esi +
jle loc_4580E6  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] esi +
call sub_459A80  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
mov edi eax +
call sub_459930  +
mov [esp+7Ch+var_7C] ebp +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_4597B0  +
mov eax dword ptr [esp+7Ch+var_64] +
mov ebp eax +
mov eax [esp+7Ch+var_3C] +
sub eax esi +
jnz loc_4584EE  +
mov [esp+7Ch+var_7C] 1 +
call sub_459900  +
mov esi [esp+7Ch+var_30] +
test esi esi +
mov dword ptr [esp+7Ch+var_64] eax +
jle loc_45811A  +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_459A80  +
mov dword ptr [esp+7Ch+var_64] eax +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_3C] 0 +
jle loc_458728  +
mov eax [esp+7Ch+var_30] +
mov esi 1Fh +
test eax eax +
jz loc_45814C  +
mov esi dword ptr [esp+7Ch+var_64] +
mov eax [esi+10h] +
bsr esi [esi+eax*4+10h] +
xor esi 1Fh +
sub esi [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_44] +
sub esi 4 +
and esi 1Fh +
add edx esi +
mov eax esi +
test edx edx +
mov [esp+7Ch+var_10] esi +
jle loc_458178  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] edx +
call sub_459C20  +
mov ebp eax +
mov eax [esp+7Ch+var_10] +
add eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_458194  +
mov [esp+7Ch+var_78] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_459C20  +
mov dword ptr [esp+7Ch+var_64] eax +
mov eax [esp+7Ch+var_34] +
test eax eax +
jnz loc_45852B  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jg loc_458300  +
cmp [esp+7Ch+arg_10] 2 +
jle loc_458300  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jnz loc_458285  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 5 +
mov [esp+7Ch+var_7C] eax +
call sub_459820  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_459D30  +
test eax eax +
jle loc_458285  +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FAC  +
cmp [esp+7Ch+arg_10] 2 +
mov [esp+7Ch+var_38] 0 +
jz loc_457EB0  +
mov [esp+7Ch+var_24] esi +
xor edx edx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_47E1E8 +
mov [esp+7Ch+var_38] 1 +
mov [esp+7Ch+var_28] 0FFFFFFFFh +
mov [esp+7Ch+var_50] 0FFFFFFFFh +
mov [esp+7Ch+arg_14] 0 +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
add eax 3 +
mov [esp+7Ch+var_10] eax +
jmp loc_457C26  +
fstp  st +
jmp loc_45827B  +
fstp  st +
mov dword ptr [esp+7Ch+var_64] 0 +
xor edi edi +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 10h +
neg eax  +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
mov ecx [esp+7Ch+var_58] +
sub [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_30] 0 +
neg ecx  +
mov [esp+7Ch+var_3C] ecx +
jmp loc_457B9C  +
mov ecx edx +
neg ecx  +
mov [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_4C] 0 +
jmp loc_457B80  +
fild  [esp+7Ch+var_58] +
fucomip st st(1) +
fstp  st +
jp loc_4582F5  +
jz loc_457B21  +
sub [esp+7Ch+var_58] 1 +
jmp loc_457B21  +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_45858B  +
add ebx esi +
test ebx ebx +
jle loc_458320  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] ebx +
call sub_459C20  +
mov edi eax +
mov ebx [esp+7Ch+var_3C] +
mov esi edi +
test ebx ebx +
jnz loc_458A8A  +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 1 +
mov [esp+7Ch+var_4C] ebx +
jmp loc_458419  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_44] eax +
call sub_4597B0  +
mov eax [esp+7Ch+var_44] +
mov ecx eax +
or ecx [esp+7Ch+arg_10] +
jnz loc_458376  +
mov ecx [esp+7Ch+arg_8] +
test byte ptr [ecx] 1 +
jnz loc_458376  +
mov ecx [esp+7Ch+var_48] +
test ecx ecx +
jz loc_458C6B  +
test ebx ebx +
js loc_4588CA  +
or ebx [esp+7Ch+arg_10] +
jnz loc_458397  +
mov ebx [esp+7Ch+arg_8] +
test byte ptr [ebx] 1 +
jz loc_4588CA  +
test eax eax +
jg loc_458B55  +
add [esp+7Ch+var_4C] 1 +
movzx eax byte ptr [esp+7Ch+var_54] +
mov ebx [esp+7Ch+var_4C] +
mov [ebx-1] al +
mov eax [esp+7Ch+var_50] +
cmp [esp+7Ch+var_10] eax +
jz loc_458B46  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_459820  +
cmp edi esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov [esp+7Ch+var_7C] edi +
mov ebp eax +
jz loc_458490  +
call sub_459820  +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov edi eax +
call sub_459820  +
mov esi eax +
add [esp+7Ch+var_10] 1 +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4593D0  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] ebp +
mov ebx eax +
add ebx 30h +
mov [esp+7Ch+var_54] ebx +
mov [esp+7Ch+var_3C] eax +
call sub_459D30  +
mov [esp+7Ch+var_78] esi +
mov ebx eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_459D80  +
mov edx eax +
mov eax 1 +
mov ecx [edx+0Ch] +
test ecx ecx +
jnz loc_458343  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_44] edx +
call sub_459D30  +
mov edx [esp+7Ch+var_44] +
jmp loc_458343  +
mov esi [esp+7Ch+var_3C] +
xor edi edi +
mov ebx [esp+7Ch+var_44] +
jmp loc_45807F  +
call sub_459820  +
mov edi eax +
mov esi eax +
jmp loc_458414  +
cmp [esp+7Ch+arg_10] 1 +
jle loc_458061  +
mov edi [esp+7Ch+var_3C] +
mov eax [esp+7Ch+var_50] +
mov esi edi +
sub eax 1 +
sub esi eax +
cmp edi eax +
jge loc_4584D1  +
mov edx eax +
xor esi esi +
sub edx [esp+7Ch+var_3C] +
add [esp+7Ch+var_30] edx +
mov [esp+7Ch+var_3C] eax +
mov eax [esp+7Ch+var_50] +
test eax eax +
js loc_458A5D  +
mov [esp+7Ch+var_10] eax +
mov ebx [esp+7Ch+var_44] +
jmp loc_458069  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_459A80  +
mov ebp eax +
jmp loc_4580F2  +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_457FE4  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call sub_4597B0  +
jmp loc_457FE4  +
mov [esp+7Ch+var_38] 0 +
jmp loc_457BFA  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_459D30  +
test eax eax +
jns loc_4581A0  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
sub [esp+7Ch+var_58] 1 +
call sub_459820  +
mov ebp eax +
mov eax [esp+7Ch+var_38] +
test eax eax +
jnz loc_458CFC  +
cmp [esp+7Ch+var_28] 0 +
mov eax [esp+7Ch+var_28] +
jg loc_458587  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_458D34  +
mov [esp+7Ch+var_50] eax +
mov esi [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] edi +
mov edi dword ptr [esp+7Ch+var_64] +
jmp loc_4585C4  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_459820  +
add [esp+7Ch+var_10] 1 +
mov ebp eax +
mov [esp+7Ch+var_78] edi +
add ebx 1 +
mov [esp+7Ch+var_7C] ebp +
call sub_4593D0  +
add eax 30h +
mov [ebx-1] al +
cmp esi [esp+7Ch+var_10] +
jg loc_4585A5  +
mov edi [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_4C] 0 +
mov eax [esp+7Ch+var_48] +
test eax eax +
jz loc_4589F6  +
cmp eax 2 +
jz loc_458A2E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_458BE2  +
movzx edx byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
jmp loc_458626  +
cmp eax ecx +
jz loc_4587BB  +
movzx edx byte ptr [eax-1] +
mov ebx eax +
cmp dl 39h +
lea eax [ebx-1] +
jz loc_458618  +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
fld  [esp+7Ch+var_64] +
fld  st +
mov edi [esp+7Ch+var_40] +
fdiv st st(2) +
fnstcw  [esp+7Ch+var_1E] +
mov [esp+7Ch+var_10] 1 +
lea ebx [edi+1] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(2) +
mov [edi] dl +
fsubp st(1) st +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_458CED  +
mov edx [esp+7Ch+var_10] +
cmp [esp+7Ch+var_50] edx +
jz loc_458797  +
fld  ds:flt_47E1F4 +
mov ecx [esp+7Ch+var_50] +
jmp loc_4586CC  +
mov edx [esp+7Ch+var_10] +
cmp ecx edx +
jz loc_458795  +
add edx 1 +
fmul st(1) st +
add ebx 1 +
mov [esp+7Ch+var_10] edx +
fld  st(1) +
fdiv st st(3) +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(3) +
mov [ebx-1] dl +
fsubp st(2) st +
fldz   +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jp loc_4586C0  +
jnz loc_4586C0  +
fstp  st +
fstp  st +
fstp  st +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 0 +
jmp loc_457E00  +
cmp [esp+7Ch+var_54] 1 +
jnz loc_458130  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
add eax 1 +
cmp [esp+7Ch+arg_4] eax +
jle loc_458130  +
add [esp+7Ch+var_44] 1 +
add [esp+7Ch+var_4C] 1 +
mov [esp+7Ch+var_3C] 1 +
jmp loc_458130  +
mov edx 1 +
mov [esp+7Ch+arg_14] 1 +
jmp loc_457ECA  +
cmp [esp+7Ch+var_50] 0Eh +
mov [esp+7Ch+var_10] 1 +
setbe dl  +
and edx eax +
mov eax 1 +
jmp loc_457C26  +
fstp  st +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_458ACE  +
fstp  st +
fstp  st +
cmp [esp+7Ch+var_48] 1 +
jz loc_458BCD  +
mov eax [esp+7Ch+var_58] +
jmp loc_457DEA  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] 20h +
mov byte ptr [eax] 31h +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
fnstcw  [esp+7Ch+var_1E] +
fld  [esp+7Ch+var_64] +
fmul  ds:dbl_47E238[ecx*8] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
fld  ds:flt_47E1F4 +
fxch  st(2) +
mov [esp+7Ch+var_20] ax +
jmp loc_458819  +
fmul st st(2) +
add edx 1 +
mov [esp+7Ch+var_10] edx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_458837  +
mov [esp+7Ch+var_24] eax +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
add ebx 1 +
add eax 30h +
mov [ebx-1] al +
mov edx [esp+7Ch+var_10] +
cmp edx ecx +
jnz loc_458810  +
fstp  st(2) +
fxch  st(1) +
fld  ds:flt_47E204 +
fld  st(2) +
fadd st st(1) +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
ja loc_4589B2  +
fsubrp st(2) st +
fxch  st(1) +
fucomip st st(1) +
jbe loc_457F30  +
fstp  st(1) +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_458880  +
jz loc_458C5E  +
mov [esp+7Ch+var_50] 10h +
jmp loc_458896  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 30h +
lea edx [ebx-1] +
jz loc_458890  +
mov eax [esp+7Ch+var_2C] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457E00  +
fstp  st +
fstp  st +
fstp  st +
mov [esp+7Ch+var_58] 2 +
xor edi edi +
mov dword ptr [esp+7Ch+var_64] 0 +
jmp loc_457FAC  +
mov edx [esp+7Ch+var_48] +
mov ebx [esp+7Ch+var_4C] +
test edx edx +
jz loc_458BA6  +
cmp dword ptr [ebp+10h] 1 +
jle loc_458B9C  +
cmp [esp+7Ch+var_48] 2 +
jnz loc_458953  +
jmp loc_458BBC  +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [ebx-1] al +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_459820  +
cmp edi esi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
cmovz edi eax +
mov [esp+7Ch+var_50] eax +
call sub_459820  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_4593D0  +
mov edx [esp+7Ch+var_50] +
mov esi edx +
add eax 30h +
mov [esp+7Ch+var_54] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_459D30  +
test eax eax +
jg loc_4588F0  +
cmp [esp+7Ch+var_54] 39h +
jz loc_458BFA  +
add [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_50] 20h +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [ebx-1] al +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_4589BA  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
jmp loc_4589BA  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov ecx [esp+7Ch+var_40] +
jmp loc_4589CE  +
cmp edx ecx +
jz loc_458A74  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 39h +
lea edx [ebx-1] +
jz loc_4589C0  +
mov [esp+7Ch+var_40] ecx +
add eax 1 +
mov [edx] al +
mov eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457E00  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_459C20  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_459D30  +
cmp eax 0 +
jg loc_45860E  +
jnz loc_458A2E  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_45860E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_458D95  +
mov [esp+7Ch+var_50] 10h +
jmp loc_458A44  +
mov ebx eax +
cmp byte ptr [ebx-1] 30h +
lea eax [ebx-1] +
jz loc_458A42  +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
mov ebx [esp+7Ch+var_44] +
xor eax eax +
sub ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 0 +
jmp loc_458069  +
mov [esp+7Ch+var_40] ecx +
mov eax 31h +
add [esp+7Ch+var_2C] 1 +
mov byte ptr [ecx] 30h +
jmp loc_4589DC  +
mov eax [edi+4] +
mov [esp+7Ch+var_7C] eax +
call sub_4596E0  +
lea ecx [eax+0Ch] +
mov ebx eax +
mov eax [edi+10h] +
mov [esp+7Ch+var_7C] ecx +
lea edx ds:8[eax*4] +
lea eax [edi+0Ch] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call memcpy  +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] ebx +
call sub_459C20  +
mov esi eax +
jmp loc_45832E  +
fadd st st +
fucomi st st(1) +
ja loc_458BC9  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_458AE6  +
jz loc_458CB5  +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_458896  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jz loc_457EE6  +
mov ecx [esp+7Ch+var_28] +
test ecx ecx +
jle loc_457F32  +
fld  st +
fmul  ds:flt_47E1F4 +
mov [esp+7Ch+var_2C] 0FFFFFFFFh +
fld  st +
fmul  ds:flt_47E1F8 +
fadd  ds:flt_47E1FC +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
jmp loc_457CD1  +
mov ebx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
jmp loc_4585EF  +
cmp [esp+7Ch+var_48] 2 +
jz loc_45839F  +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_458BFA  +
movzx edx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [esp+7Ch+var_50] 20h +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_4588E4  +
test eax eax +
jg loc_458C14  +
mov [esp+7Ch+var_50] 0 +
cmp dword ptr [ebp+10h] 1 +
jle loc_458CD6  +
mov [esp+7Ch+var_50] 10h +
jmp loc_45897F  +
fstp  st +
fstp  st +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] edi +
jmp loc_4589CE  +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_45860E  +
mov [esp+7Ch+var_50] 0 +
jmp loc_458A44  +
mov byte ptr [ebx] 39h +
mov edx 39h +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov ecx [esp+7Ch+var_40] +
mov edi esi +
jmp loc_458626  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_459C20  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_459D30  +
cmp eax 0 +
jle loc_458D3D  +
cmp [esp+7Ch+var_54] 39h +
jz loc_458BFA  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add eax 31h +
mov [esp+7Ch+var_54] eax +
jmp loc_458BB2  +
mov [esp+7Ch+var_50] 0 +
jmp loc_458896  +
mov ecx ebx +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_458BFA  +
test ecx ecx +
jle loc_458D6B  +
mov ecx [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add ecx 31h +
mov [esp+7Ch+var_54] ecx +
movzx ecx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [eax] cl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_457FC6  +
test al 1 +
movzx eax byte ptr [ebx-1] +
jnz loc_458D5A  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_458896  +
cmp dword ptr [ebp+14h] 0 +
mov eax 10h +
cmovz eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_50] eax +
jmp loc_45897F  +
jnz loc_4586A1  +
fstp  st +
fstp  st +
jmp loc_458710  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_459820  +
cmp [esp+7Ch+var_28] 0 +
mov edi eax +
mov eax [esp+7Ch+var_28] +
jg loc_458D2B  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_458D34  +
mov [esp+7Ch+var_50] eax +
jmp loc_45830C  +
mov [esp+7Ch+var_50] eax +
jmp loc_4581BA  +
lea esi [esi+0] +
jnz loc_458D4D  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_458C3F  +
mov [esp+7Ch+var_50] 20h +
jmp loc_458BB2  +
mov esi [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] esi +
jmp loc_4589CE  +
cmp dword ptr [ebp+10h] 1 +
mov [esp+7Ch+var_50] 10h +
jg loc_458C95  +
cmp dword ptr [ebp+14h] 1 +
sbb ecx ecx +
mov [esp+7Ch+var_50] ecx +
not [esp+7Ch+var_50]  +
and [esp+7Ch+var_50] 10h +
jmp loc_458C95  +
cmp dword ptr [ebp+14h] 0 +
mov [esp+7Ch+var_50] 0 +
jnz loc_458A38  +
jmp loc_458A44  +
xor eax eax +
jmp loc_457A04  +
***
sub esp 48h +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
test edx edx +
mov word ptr [ebp+var_1C] ax +
jnz loc_458DE6  +
cmp ax 0FFh +
ja loc_458E38  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
mov eax 1 +
leave   +
retn   +
lea eax [ebp+var_C] +
mov [esp+48h+var_2C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_38] eax +
lea eax [ebp+var_1C] +
mov [esp+48h+var_40] eax +
call ds:WideCharToMultiByte  +
sub esp 20h +
test eax eax +
jz loc_458E38  +
mov edx [ebp+var_C] +
test edx edx +
jz locret_458DE4  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
leave   +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
lea eax [esp+20h+var_5] +
mov esi [esp+20h+arg_4] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
movzx esi si +
mov edi [eax] +
call sub_45A6D0  +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] edi +
mov [esp+20h+var_18] eax +
call sub_458DC0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_458EA0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
call sub_45A6D0  +
mov [esp+1Ch] eax +
mov eax ds:__mb_cur_max +
mov ebp [eax] +
mov eax [esp+54h] +
mov edi [eax] +
test edi edi +
jz loc_458F93  +
test ebx ebx +
jz loc_458F47  +
mov eax [esp+58h] +
xor esi esi +
test eax eax +
jz loc_458F22  +
mov eax edi +
mov edi ebp +
mov ebp eax +
jmp loc_458EF3  +
add ebx eax +
add esi eax +
cmp byte ptr [ebx-1] 0 +
jz loc_458F32  +
add ebp 2 +
cmp [esp+58h] esi +
jbe loc_458F20  +
mov eax [esp+1Ch] +
mov [esp+0Ch] edi +
mov [esp+8] eax +
movzx eax word ptr [ebp+0] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_458DC0  +
test eax eax +
jg loc_458EE0  +
mov eax 0FFFFFFFFh +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi ebp +
mov eax [esp+54h] +
mov [eax] edi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov dword ptr [eax] 0 +
add esp 3Ch +
pop ebx  +
lea eax [esi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+58h] +
lea esi [esp+2Bh] +
test edx edx +
jz loc_458F9F  +
mov eax ebx +
mov ebx edi +
mov edi eax +
jmp loc_458F72  +
add edi eax +
cmp byte ptr [esp+eax+2Ah] 0 +
jz loc_458FA6  +
add ebx 2 +
cmp [esp+58h] edi +
jbe loc_458F9D  +
mov eax [esp+1Ch] +
mov [esp+0Ch] ebp +
mov [esp+8] eax +
movzx eax word ptr [ebx] +
mov [esp] esi +
mov [esp+4] eax +
call sub_458DC0  +
test eax eax +
jg loc_458F60  +
jmp loc_458F13  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
mov eax ebx +
jmp loc_458F18  +
***
lea eax [edi-1] +
jmp loc_458F18  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
test ebx ebx +
jz loc_4590F4  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_459100  +
mov eax [esi] +
mov dword ptr [esi] 0 +
mov [ebp+var_C] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_459080  +
cmp [ebp+arg_14] 1 +
jbe loc_459060  +
cmp byte ptr [ebp+var_C] 0 +
jnz loc_459091  +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] eax +
call ds:IsDBCSLeadByteEx  +
sub esp 8 +
test eax eax +
jz loc_459060  +
cmp [ebp+arg_8] 1 +
jbe loc_45911C  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_459107  +
lea esp [ebp-8] +
mov eax 2 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_4590B7  +
movzx eax byte ptr [ebx] +
mov edx [ebp+arg_0] +
mov [edx] ax +
lea esp [ebp-8] +
mov eax 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
xor eax eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [ebp+var_C+1] al +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_28] eax +
lea eax [ebp+var_C] +
mov [esp+38h+var_30] eax +
jmp loc_459033  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_459107  +
mov eax 1 +
jmp loc_45908A  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_45908A  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
jmp loc_45908A  +
movzx eax byte ptr [ebx] +
mov [esi] al +
mov eax 0FFFFFFFEh +
jmp loc_45908A  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [esp+38h+arg_0] +
mov word ptr [esp+38h+var_A] ax +
lea eax [esp+38h+var_A] +
mov esi [esp+38h+arg_C] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
mov edi [eax] +
call sub_45A6D0  +
test esi esi +
mov edx offset unk_4807B8 +
cmovnz edx esi +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_24] edi +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_34] eax +
call sub_458FB0  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov eax offset unk_4807B4 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+5Ch] +
mov esi [esp+54h] +
mov ebp [esp+50h] +
mov edi [esp+58h] +
test edx edx +
cmovnz eax [esp+5Ch] +
mov [esp+5Ch] eax +
call sub_45A6D0  +
test esi esi +
mov [esp+18h] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+1Ch] eax +
jz loc_4592B0  +
mov ecx [esi] +
test ecx ecx +
jz loc_4592B0  +
test ebp ebp +
jz loc_459253  +
test edi edi +
jz loc_4592B0  +
mov [esp+54h] esi +
xor ebx ebx +
mov esi ebp +
mov ebp [esp+54h] +
jmp loc_459208  +
mov ecx [ebp+0] +
add ebx eax +
add esi 2 +
add ecx eax +
cmp edi ebx +
mov [ebp+0] ecx +
jbe loc_459238  +
mov eax [esp+1Ch] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+14h] eax +
mov eax [esp+18h] +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp+0Ch] eax +
mov eax edi +
sub eax ebx +
mov [esp+8] eax +
call sub_458FB0  +
test eax eax +
jg loc_4591F7  +
test eax eax +
jnz loc_4592A6  +
cmp ebx edi +
nop   +
jnb loc_4592A6  +
mov dword ptr [ebp+0] 0 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor ebx ebx +
test edi edi +
mov [esp+2Eh] ax +
jz loc_4592A6  +
mov [esp+58h] edi +
lea ebp [esp+2Eh] +
mov edi esi +
mov esi [esp+1Ch] +
jmp loc_45927E  +
mov ecx [edi] +
add ebx eax +
add ecx eax +
cmp [esp+58h] ebx +
mov [edi] ecx +
jbe loc_4592A6  +
mov eax [esp+18h] +
mov [esp+14h] esi +
mov [esp+8] esi +
mov [esp+4] ecx +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_458FB0  +
test eax eax +
jg loc_459270  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
xor eax eax +
push ebx  +
sub esp 34h +
mov [esp+2Eh] ax +
mov eax ds:__mb_cur_max +
mov ebx [esp+48h] +
mov esi [eax] +
call sub_45A6D0  +
test ebx ebx +
mov edx offset unk_4807B0 +
cmovnz edx ebx +
mov [esp+0Ch] edx +
mov [esp+14h] esi +
mov [esp+10h] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
lea eax [esp+2Eh] +
mov [esp] eax +
call sub_458FB0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov ecx [esp+18h+arg_0] +
cmp ecx 13h +
jle loc_459340  +
mov eax 4 +
add eax eax +
add ebx 1 +
lea edx [eax+0Fh] +
cmp edx ecx +
jl loc_459334  +
mov [esp+18h+var_18] ebx +
call sub_4596E0  +
mov [eax] ebx +
add esp 18h +
add eax 4 +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov [esp+14h+var_14] eax +
call sub_459320  +
movzx edx byte ptr [ebx] +
lea ecx [ebx+1] +
test dl dl +
mov [eax] dl +
mov edx eax +
jz loc_459397  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
add edx 1 +
test bl bl +
mov [edx] bl +
jnz loc_459387  +
test esi esi +
jz loc_45939D  +
mov [esi] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
mov edx [eax+10h] +
xor eax eax +
cmp edx [edi+10h] +
jg loc_4595C3  +
mov eax [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_0] +
add eax 14h +
mov edi eax +
mov [esp+4Ch+var_14] eax +
lea eax [edx-1] +
xor edx edx +
mov [esp+4Ch+var_1C] eax +
shl eax 2 +
add edi eax +
lea ebx [esi+14h] +
add eax ebx +
mov [esp+4Ch+var_24] edi +
mov edi [edi] +
mov [esp+4Ch+var_10] eax +
mov eax [eax] +
mov [esp+4Ch+var_20] ebx +
lea ecx [edi+1] +
div  ecx +
mov [esp+4Ch+var_3C] edi +
test eax eax +
mov ebp eax +
mov [esp+4Ch+var_18] eax +
jz loc_4594FF  +
mov edi [esp+4Ch+var_14] +
mov esi ebx +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_38] 0 +
nop   +
add edi 4 +
mov eax ebp +
mov ecx [esi] +
mul  dword ptr [edi-4] +
add eax [esp+4Ch+var_2C] +
adc edx [esp+4Ch+var_28] +
xor ebx ebx +
mov [esp+4Ch+var_28] ebx +
xor ebx ebx +
mov [esp+4Ch+var_34] eax +
mov [esp+4Ch+var_30] 0 +
sub ecx [esp+4Ch+var_34] +
sbb ebx [esp+4Ch+var_30] +
sub ecx [esp+4Ch+var_3C] +
sbb ebx [esp+4Ch+var_38] +
add esi 4 +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_38] 0 +
mov eax ebx +
and eax 1 +
cmp [esp+4Ch+var_24] edi +
mov [esp+4Ch+var_3C] eax +
mov [esi-4] ecx +
jnb loc_459460  +
mov eax [esp+4Ch+var_10] +
mov edi [eax] +
test edi edi +
jnz loc_4594FF  +
mov ecx [esp+4Ch+var_20] +
mov esi eax +
sub eax 4 +
cmp ecx eax +
jnb loc_4594F4  +
mov esi [esi-4] +
test esi esi +
jnz loc_4594F4  +
mov edx [esp+4Ch+var_1C] +
jmp loc_4594E6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_4594F0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_4594E0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_459D30  +
test eax eax +
js loc_4595BF  +
xor esi esi +
xor edi edi +
lea eax [ebp+1] +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] esi +
mov esi [esp+4Ch+var_14] +
mov [esp+4Ch+var_38] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_18] eax +
lea esi [esi+0] +
add esi 4 +
mov eax [ebp+0] +
xor ebx ebx +
mov ecx [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+4Ch+var_3C] +
sbb edx [esp+4Ch+var_38] +
add ebp 4 +
mov [esp+4Ch+var_38] 0 +
mov ebx edx +
and ebx 1 +
cmp edi esi +
mov [esp+4Ch+var_3C] ebx +
mov [ebp-4] eax +
jnb loc_459540  +
mov eax [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_1C] +
lea edx [eax+ebx*4] +
mov edi [edx] +
test edi edi +
jnz loc_4595BF  +
mov ecx [esp+4Ch+var_20] +
lea eax [edx-4] +
cmp ecx eax +
jnb loc_4595B4  +
mov esi [edx-4] +
test esi esi +
jnz loc_4595B4  +
mov edx ebx +
jmp loc_4595A6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_4595B0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_4595A0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+var_18] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov edx ds:dword_481108 +
cmp edx 2 +
jz loc_45965A  +
test edx edx +
jz loc_459617  +
cmp edx 1 +
jnz loc_45960B  +
mov ebx ds:Sleep +
mov [esp+18h+var_18] 1 +
call ebx  +
mov edx ds:dword_481108 +
sub esp 4 +
cmp edx 1 +
jz loc_4595F4  +
cmp edx 2 +
jz loc_45965A  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 1 +
xchg eax ds:dword_481108 +
test eax eax +
jnz loc_459677  +
mov ebx ds:InitializeCriticalSection +
mov [esp+18h+var_18] offset unk_481120 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset unk_481138 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset loc_4596A0 +
call sub_453A00  +
mov ds:dword_481108 2 +
lea eax [esi+esi*2] +
lea eax ds:481120h[eax*8] +
mov [esp+18h+var_18] eax +
call ds:EnterCriticalSection  +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
cmp eax 2 +
mov edx ds:dword_481108 +
jnz loc_4595E9  +
mov ds:dword_481108 2 +
jmp loc_45965A  +
***
mov eax 3 +
xchg eax ds:dword_481108 +
cmp eax 2 +
jz loc_4596B1  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov ebx ds:DeleteCriticalSection +
mov dword ptr [esp] offset unk_481120 +
call ebx  +
sub esp 4 +
mov dword ptr [esp] offset unk_481138 +
call ebx  +
mov ebx [ebp-4] +
sub esp 4 +
leave   +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
call sub_4595D0  +
cmp esi 9 +
jg loc_459727  +
mov ebx ds:dword_4810E0[esi*4] +
test ebx ebx +
jz loc_459772  +
mov eax [ebx] +
cmp ds:dword_481108 2 +
mov ds:dword_4810E0[esi*4] eax +
jnz loc_45975A  +
mov [esp+28h+var_28] offset unk_481120 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_45975A  +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
shl eax 3 +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_4597AA  +
cmp ds:dword_481108 2 +
mov [ebx+4] esi +
mov [ebx+8] edi +
jz loc_459715  +
mov dword ptr [ebx+10h] 0 +
mov eax ebx +
mov dword ptr [ebx+0Ch] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx off_468140 +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
mov edx ebx +
sub edx offset unk_4807E0 +
sar edx 3 +
add edx eax +
cmp edx 120h +
ja loc_45973A  +
lea eax [ebx+eax*8] +
mov off_468140 eax +
jmp loc_45974B  +
xor eax eax +
jmp loc_45976A  +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_4597E7  +
cmp dword ptr [ebx+4] 9 +
jg loc_4597F0  +
xor eax eax +
call sub_4595D0  +
mov eax [ebx+4] +
cmp ds:dword_481108 2 +
mov edx ds:dword_4810E0[eax*4] +
mov ds:dword_4810E0[eax*4] ebx +
mov [ebx] edx +
jz loc_459800  +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov ebx [ebp+var_4] +
leave   +
jmp free  +
mov [esp+18h+var_18] offset unk_481120 +
call ds:LeaveCriticalSection  +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_8] +
mov eax [eax+10h] +
mov ebp edi +
sar ebp 1Fh +
mov [esp+38h+var_1C] eax +
mov eax [esp+38h+arg_0] +
lea ebx [eax+14h] +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_28] eax +
sar eax 1Fh +
mov [esp+38h+var_24] eax +
mov eax [ebx+ecx*4] +
mov esi [esp+38h+var_24] +
imul esi eax +
mul  [esp+38h+var_28] +
add edx esi +
add eax edi +
adc edx ebp +
xor ebp ebp +
mov [ebx+ecx*4] eax +
add ecx 1 +
mov edi edx +
cmp [esp+38h+var_1C] ecx +
jg loc_459853  +
mov edx ebp +
mov eax [esp+38h+arg_0] +
or edx edi +
jz loc_45989E  +
mov edx [esp+38h+var_1C] +
cmp edx [eax+8] +
jge loc_4598A6  +
mov edx [esp+38h+arg_0] +
mov eax [esp+38h+var_1C] +
mov [edx+eax*4+14h] edi +
add eax 1 +
mov [edx+10h] eax +
mov eax edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
mov [esp+38h+var_28] eax +
add eax 1 +
mov [esp+38h+var_38] eax +
call sub_4596E0  +
test eax eax +
mov ebx eax +
jz loc_4598F8  +
lea ecx [eax+0Ch] +
mov eax [esp+38h+arg_0] +
mov eax [eax+10h] +
mov [esp+38h+var_38] ecx +
lea edx ds:8[eax*4] +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_30] edx +
add eax 0Ch +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call sub_4597B0  +
mov [esp+38h+arg_0] ebx +
jmp loc_45988A  +
xor eax eax +
jmp loc_45989E  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_4596E0  +
test eax eax +
jz loc_459921  +
mov edx [esp+1Ch+arg_0] +
mov dword ptr [eax+10h] 1 +
mov [eax+14h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov esi [edi+10h] +
mov ebx [ebp+10h] +
cmp esi ebx +
jge loc_459955  +
mov eax esi +
mov esi ebx +
mov ebx eax +
mov eax edi +
mov edi ebp +
mov ebp eax +
lea eax [esi+ebx] +
cmp eax [edi+8] +
mov [esp+3Ch+var_1C] eax +
setnle al  +
movzx eax al +
add eax [edi+4] +
mov [esp+3Ch+var_3C] eax +
call sub_4596E0  +
test eax eax +
mov [esp+3Ch+var_10] eax +
jz loc_459A7B  +
mov ecx [esp+3Ch+var_1C] +
lea eax [eax+14h] +
mov [esp+3Ch+var_24] eax +
lea ecx [eax+ecx*4] +
mov edx ecx +
cmp eax edx +
mov [esp+3Ch+var_14] ecx +
jnb loc_4599A5  +
mov edx [esp+3Ch+var_14] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp edx eax +
ja loc_459998  +
lea eax [edi+14h] +
mov [esp+3Ch+var_18] eax +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_2C] eax +
lea eax [ebp+14h] +
lea ebx [eax+ebx*4] +
cmp eax ebx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_20] ebx +
jnb loc_459A35  +
add [esp+3Ch+var_28] 4 +
mov eax [esp+3Ch+var_28] +
mov ebp [eax-4] +
test ebp ebp +
jz loc_459A26  +
mov edi [esp+3Ch+var_24] +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] 0 +
jmp loc_4599F2  +
mov edi eax +
add esi 4 +
mov ecx [edi] +
mov eax ebp +
mul  dword ptr [esi-4] +
xor ebx ebx +
add ecx eax +
adc ebx edx +
add ecx [esp+3Ch+var_34] +
adc ebx [esp+3Ch+var_30] +
xor edx edx +
cmp [esp+3Ch+var_2C] esi +
mov [esp+3Ch+var_30] edx +
lea eax [edi+4] +
mov [esp+3Ch+var_34] ebx +
mov [edi] ecx +
ja loc_4599F0  +
mov eax [esp+3Ch+var_34] +
mov [edi+4] eax +
mov eax [esp+3Ch+var_28] +
add [esp+3Ch+var_24] 4 +
cmp [esp+3Ch+var_20] eax +
ja loc_4599C5  +
mov esi [esp+3Ch+var_1C] +
test esi esi +
jle loc_459A68  +
mov ebx [esp+3Ch+var_14] +
mov esi [ebx-4] +
test esi esi +
jnz loc_459A68  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
sub ebx eax +
mov eax ebx +
jmp loc_459A5F  +
mov ecx [eax+edx*4-4] +
test ecx ecx +
jnz loc_459A64  +
sub edx 1 +
jnz loc_459A57  +
mov [esp+3Ch+var_1C] edx +
mov eax [esp+3Ch+var_10] +
mov ebx [esp+3Ch+var_1C] +
mov [eax+10h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_459A73  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax ebx +
and eax 3 +
jnz loc_459B40  +
sar ebx 2 +
mov eax edx +
test ebx ebx +
jz loc_459AF5  +
mov edi ds:dword_4807C0 +
test edi edi +
jz loc_459B8E  +
test bl 1 +
jnz loc_459AC9  +
sar ebx 1 +
jz loc_459AF3  +
mov esi [edi] +
test esi esi +
nop   +
jz loc_459B00  +
mov edi esi +
test bl 1 +
jz loc_459AB6  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edx +
mov [ebp+var_1C] edx +
call sub_459930  +
test eax eax +
mov esi eax +
jz loc_459B65  +
mov edx [ebp+var_1C] +
mov [esp+28h+var_28] edx +
call sub_4597B0  +
sar ebx 1 +
mov edx esi +
jnz loc_459ABA  +
mov eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_4595D0  +
mov esi [edi] +
mov edx [ebp+var_1C] +
test esi esi +
jz loc_459B6F  +
cmp ds:dword_481108 2 +
jnz loc_459AC2  +
mov [ebp+var_1C] edx +
mov edi esi +
mov [esp+28h+var_28] offset unk_481138 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_459AC4  +
mov eax ds:dword_47E21C[eax*4] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] eax +
call sub_459820  +
test eax eax +
mov edx eax +
jnz loc_459A9A  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edi +
call sub_459930  +
test eax eax +
mov esi eax +
mov [edi] eax +
jz loc_459B65  +
mov dword ptr [eax] 0 +
mov edx [ebp+var_1C] +
jmp loc_459B16  +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_4595D0  +
mov edi ds:dword_4807C0 +
mov edx [ebp+var_1C] +
test edi edi +
jz loc_459BD0  +
cmp ds:dword_481108 2 +
jnz loc_459AB1  +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] offset unk_481138 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_459AB1  +
mov [esp+28h+var_28] 1 +
call sub_4596E0  +
test eax eax +
mov edi eax +
jz loc_459C00  +
mov dword ptr [eax+14h] 271h +
mov edx [ebp+var_1C] +
mov dword ptr [eax+10h] 1 +
mov ds:dword_4807C0 eax +
mov dword ptr [eax] 0 +
jmp loc_459BA8  +
mov ds:dword_4807C0 0 +
xor eax eax +
jmp loc_459B67  +
***
jmp sub_459C20  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi eax +
mov edx [eax+4] +
mov eax [eax+10h] +
mov ebx esi +
sar ebx 5 +
add eax ebx +
lea ebp [eax+1] +
mov [esp+2Ch+var_14] eax +
mov eax [edi+8] +
cmp ebp eax +
jle loc_459C59  +
lea esi [esi+0] +
add eax eax +
add edx 1 +
cmp ebp eax +
jg loc_459C50  +
mov [esp+2Ch+var_2C] edx +
call sub_4596E0  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_459D2A  +
test ebx ebx +
lea edx [eax+14h] +
jle loc_459C87  +
xor eax eax +
mov dword ptr [edx+eax*4] 0 +
add eax 1 +
cmp eax ebx +
jnz loc_459C76  +
lea edx [edx+eax*4] +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_0] +
mov ecx [edi+10h] +
add eax 14h +
and esi 1Fh +
mov [esp+2Ch+var_20] esi +
lea edi [eax+ecx*4] +
mov ecx edi +
jz loc_459D16  +
mov [esp+2Ch+var_1C] 20h +
mov [esp+2Ch+var_10] ebp +
mov ebp ecx +
sub [esp+2Ch+var_1C] esi +
xor esi esi +
jmp loc_459CC2  +
mov edx edi +
mov ebx [eax] +
add eax 4 +
movzx ecx byte ptr [esp+2Ch+var_20] +
lea edi [edx+4] +
shl ebx cl +
movzx ecx byte ptr [esp+2Ch+var_1C] +
or ebx esi +
mov [edx] ebx +
mov esi [eax-4] +
shr esi cl +
cmp ebp eax +
ja loc_459CC0  +
mov eax [esp+2Ch+var_14] +
mov ebp [esp+2Ch+var_10] +
mov [edx+4] esi +
add eax 2 +
test esi esi +
cmovnz ebp eax +
mov edi [esp+2Ch+var_18] +
lea eax [ebp-1] +
mov [edi+10h] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4597B0  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp ebx eax +
mov [edx-4] ecx +
ja loc_459D18  +
jmp loc_459CF6  +
xor eax eax +
jmp loc_459D0E  +
***
mov edx [esp+arg_4] +
mov eax [ecx+10h] +
mov ebx [edx+10h] +
sub eax ebx +
test eax eax +
jnz loc_459D69  +
shl ebx 2 +
add ecx 14h +
lea eax [ecx+ebx] +
lea edx [edx+ebx+14h] +
jmp loc_459D58  +
cmp ecx eax +
jnb loc_459D70  +
sub edx 4 +
sub eax 4 +
mov ebx [edx] +
cmp [eax] ebx +
jz loc_459D54  +
sbb eax eax +
or eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] ebx +
call sub_459D30  +
test eax eax +
jz loc_459EC2  +
js loc_459EE8  +
xor edi edi +
mov eax [esi+4] +
mov [esp+2Ch+var_2C] eax +
call sub_4596E0  +
test eax eax +
mov edx eax +
mov [esp+2Ch+var_10] eax +
jz loc_459EF8  +
mov [eax+0Ch] edi +
mov eax [esi+10h] +
add esi 14h +
lea ebp [ebx+14h] +
lea edi [edx+14h] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_14] eax +
lea eax [esi+eax*4] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+10h] +
mov [esp+2Ch+var_20] 0 +
lea eax [ebp+eax*4+0] +
mov [esp+2Ch+var_18] eax +
lea esi [esi+0] +
add ebp 4 +
add esi 4 +
mov ecx [ebp-4] +
mov eax [esi-4] +
xor edx edx +
xor ebx ebx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+2Ch+var_24] +
sbb edx [esp+2Ch+var_20] +
add edi 4 +
mov [esp+2Ch+var_20] 0 +
mov ecx edx +
and ecx 1 +
cmp [esp+2Ch+var_18] ebp +
mov [esp+2Ch+var_24] ecx +
mov [edi-4] eax +
ja loc_459E00  +
cmp [esp+2Ch+var_1C] esi +
jbe loc_459E8A  +
mov ebx [esp+2Ch+var_20] +
mov ecx [esp+2Ch+var_24] +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_24] esi +
nop   +
add esi 4 +
mov eax [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
add edi 4 +
mov ebp edx +
xor ebx ebx +
and ebp 1 +
cmp [esp+2Ch+var_1C] esi +
mov ecx ebp +
mov [edi-4] eax +
ja loc_459E50  +
mov ebp [esp+2Ch+var_24] +
mov edi [esp+2Ch+var_1C] +
mov ebx [esp+2Ch+var_18] +
not ebp  +
lea edx [ebp+edi+0] +
shr edx 2 +
lea edi [ebx+edx*4+4] +
test eax eax +
jnz loc_459EAF  +
mov edx [esp+2Ch+var_14] +
mov eax edx +
shl eax 2 +
sub edi eax +
mov eax edx +
nop   +
lea esi [esi+0] +
sub eax 1 +
mov edx [edi+eax*4-4] +
test edx edx +
jz loc_459EA0  +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov [eax+10h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0 +
call sub_4596E0  +
test eax eax +
jz loc_459EF8  +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edi 1 +
mov esi ebx +
mov ebx eax +
jmp loc_459DAB  +
xor eax eax +
jmp loc_459EBA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
lea ebx [eax+14h] +
mov eax [eax+10h] +
lea ebp [ebx+eax*4] +
mov edx [ebp-4] +
lea esi [ebp-4] +
bsr eax edx +
xor eax 1Fh +
sub ecx eax +
cmp eax 0Ah +
mov [edi] ecx +
jg loc_459F70  +
mov ecx 0Bh +
mov edi edx +
sub ecx eax +
shr edi cl +
or edi 3FF00000h +
mov dword ptr [esp+20h+var_20+4] edi +
xor edi edi +
cmp ebx esi +
mov dword ptr [esp+20h+var_20] 0 +
jnb loc_459F59  +
mov edi [ebp-8] +
shr edi cl +
lea ecx [eax+15h] +
shl edx cl +
or edi edx +
mov dword ptr [esp+20h+var_20] edi +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
cmp ebx esi +
jnb loc_459F7C  +
mov edi [ebp-8] +
lea esi [ebp-8] +
mov ecx eax +
sub ecx 0Bh +
mov [esp+20h+var_14] ecx +
jz loc_459FD0  +
movzx ecx byte ptr [esp+20h+var_14] +
mov ebp 2Bh +
sub ebp eax +
mov eax edi +
mov dword ptr [esp+20h+var_20] 0 +
shl edx cl +
mov ecx ebp +
shr eax cl +
or edx 3FF00000h +
or edx eax +
xor eax eax +
cmp esi ebx +
mov dword ptr [esp+20h+var_20+4] edx +
jbe loc_459FB9  +
mov eax [esi-4] +
shr eax cl +
movzx ecx byte ptr [esp+20h+var_14] +
shl edi cl +
or eax edi +
mov dword ptr [esp+20h+var_20] eax +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or edx 3FF00000h +
mov dword ptr [esp+20h+var_20] edi +
mov dword ptr [esp+20h+var_20+4] edx +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
test cl cl +
mov [eax] cl +
jnz loc_45A104  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esp+10h+arg_0] +
mov ecx [esp+10h+arg_4] +
mov edx [esi+10h] +
lea ebp [eax+14h] +
mov eax ecx +
sar eax 5 +
cmp eax edx +
jge loc_45A1D0  +
lea eax [ebp+eax*4+0] +
and ecx 1Fh +
lea edi [ebp+edx*4+0] +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ecx +
jz loc_45A1F0  +
mov esi [esp+10h+var_C] +
mov eax [esp+10h+var_10] +
mov [esp+10h+var_8] 20h +
sub [esp+10h+var_8] eax +
mov ebx [esi] +
lea edx [esi+4] +
mov ecx eax +
shr ebx cl +
cmp edi edx +
jbe loc_45A22E  +
mov esi ebp +
mov [esp+10h+var_4] ebp +
mov ebp [esp+10h+var_8] +
lea esi [esi+0] +
mov eax [edx] +
mov ecx ebp +
add esi 4 +
add edx 4 +
shl eax cl +
movzx ecx byte ptr [esp+10h+var_10] +
or eax ebx +
mov [esi-4] eax +
mov ebx [edx-4] +
shr ebx cl +
cmp edi edx +
ja loc_45A190  +
sub edi [esp+10h+var_C] +
mov ebp [esp+10h+var_4] +
lea eax [edi-5] +
shr eax 2 +
lea eax [ebp+eax*4+4] +
test ebx ebx +
mov [eax] ebx +
jz loc_45A1C9  +
add eax 4 +
sub eax ebp +
sar eax 2 +
jmp loc_45A21B  +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+14h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi eax +
mov edx ebp +
jbe loc_45A1D0  +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
ja loc_45A1F6  +
mov eax [esp+10h+var_C] +
not eax  +
add eax edi +
shr eax 2 +
lea eax ds:4[eax*4] +
sar eax 2 +
mov esi [esp+10h+arg_0] +
test eax eax +
mov [esi+10h] eax +
jz loc_45A1DB  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
jmp loc_45A1C0  +
***
mov ecx [eax+10h] +
lea edx [eax+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_45A27A  +
mov ecx [eax+14h] +
xor eax eax +
test ecx ecx +
jz loc_45A266  +
jmp loc_45A272  +
mov ecx [edx] +
test ecx ecx +
jnz loc_45A272  +
add edx 4 +
add eax 20h +
cmp ebx edx +
ja loc_45A260  +
pop ebx  +
retn   +
bsf ecx ecx +
add eax ecx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
retn   +
***
mov eax [esp+arg_0] +
xchg eax ds:dword_481160 +
retn   +
***
jmp ds:fflush  +
***
jmp ds:freopen  +
***
jmp ds:__setusermatherr  +
***
mov eax ds:dword_481164 +
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_481164 +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_set_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_45A550 +
mov [ebp+arg_0] ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_468150 eax +
leave   +
jmp eax  +
***
sub esp 18h +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_get_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_45A540 +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_46814C eax +
leave   +
jmp eax  +
***
mov eax ds:dword_481168 +
mov eax [eax] +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 2 +
call setlocale  +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] eax +
call strchr  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_45A64A  +
add edx 1 +
mov [esp+1Ch+var_1C] edx +
call atoi  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
test eax eax +
mov ebx eax +
jz loc_45A6B5  +
mov esi ds:GetProcAddress +
mov [esp+18h+var_14] offset a___lc_codepage +
mov [esp+18h+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jz loc_45A695  +
mov off_468154 eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
mov [esp+18h+var_14] offset a__lc_codepage +
mov [esp+18h+var_18] ebx +
call esi  +
mov edx eax +
sub esp 8 +
test edx edx +
mov ds:dword_481168 eax +
mov eax offset loc_45A600 +
jnz loc_45A688  +
mov eax offset sub_45A610 +
mov off_468154 eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
***
mov eax off_468154 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4553B0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_455370  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4553F0  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_0] +
test esi esi +
jz loc_45A917  +
mov eax [esi] +
test eax eax +
jnz loc_45A8F7  +
jmp loc_45A909  +
mov eax ebx +
mov ebx [eax+10h] +
add eax 30h +
mov [esp+14h+var_14] eax +
call sub_4552C0  +
test ebx ebx +
jnz loc_45A8F5  +
mov [esp+14h+arg_0] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 24h +
movzx ebx byte ptr [eax+14h] +
cmp bl 0FFh +
jz loc_45A990  +
mov esi ebx +
and esi 7 +
mov ecx esi +
cmp cl 2 +
jz loc_45A986  +
jbe loc_45A972  +
mov ecx esi +
cmp cl 3 +
jz loc_45A976  +
lea ecx ds:0[edx*8] +
mov edx esi +
neg ecx  +
cmp dl 4 +
jnz loc_45A981  +
mov edx [eax+8] +
add ecx [eax+0Ch] +
movzx eax bl +
lea ebx [esp+24h+var_8] +
mov [esp+24h+var_24] ebx +
call sub_45AC00  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
test cl cl +
jnz loc_45A981  +
lea ecx ds:0[edx*4] +
neg ecx  +
jmp loc_45A953  +
call abort  +
lea ecx [edx+edx] +
neg ecx  +
jmp loc_45A953  +
xor ecx ecx +
jmp loc_45A953  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [ecx] +
mov ecx edx +
mov [ebp+var_1C] eax +
mov eax [edx] +
call dword ptr [eax+8]  +
test al al +
jz loc_45A9C7  +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov ecx esi +
mov eax [eax+10h] +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ebx +
call eax  +
sub esp 0Ch +
test al al +
jz loc_45A9EE  +
mov edx [ebp+var_1C] +
mov [edi] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
xor eax eax +
push ebx  +
sub esp 1Ch +
test edi edi +
mov [esp+28h+var_1C] ecx +
jz loc_45AA1D  +
mov [esp+28h+var_28] edi +
call sub_455040  +
mov ebx [esp+28h+var_1C] +
lea esi [ebp+1] +
mov [ebx] eax +
movzx edx byte ptr [ebp+0] +
cmp dl 0FFh +
jz loc_45AAC0  +
movzx ebp dl +
mov edx edi +
mov eax ebp +
call sub_45AB50  +
lea edx [ebx+4] +
mov ecx esi +
mov [esp+28h+var_28] edx +
mov edx eax +
mov eax ebp +
call sub_45AC00  +
mov esi eax +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
mov esi [esp+28h+var_1C] +
cmp al 0FFh +
mov [esi+14h] al +
jz loc_45AAD0  +
xor edi edi +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or edi eax +
test bl bl +
js loc_45AA67  +
mov eax [esp+28h+var_1C] +
add edi edx +
mov [eax+0Ch] edi +
lea eax [edx+1] +
mov esi [esp+28h+var_1C] +
xor edi edi +
movzx edx byte ptr [edx] +
xor ecx ecx +
mov [esi+15h] dl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_45AA98  +
mov esi [esp+28h+var_1C] +
add edi eax +
mov [esi+10h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+28h+var_1C] +
mov [edi+4] eax +
jmp loc_45AA52  +
mov eax [esp+28h+var_1C] +
mov dword ptr [eax+0Ch] 0 +
jmp loc_45AA87  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_1C] ecx +
not esi  +
add esi [eax+0Ch] +
xor edx edx +
xor ecx ecx +
lea esi [esi+0] +
add esi 1 +
movzx eax byte ptr [esi-1] +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or edx ebx +
test al al +
js loc_45AB00  +
test edx edx +
jz loc_45AB39  +
mov eax edi +
call sub_45A920  +
lea ecx [esp+28h+var_1C] +
mov edx ebp +
call sub_45A9A0  +
test al al +
jz loc_45AAF8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp al 0FFh +
jz loc_45AB78  +
and eax 70h +
cmp al 20h +
jz loc_45ABA0  +
jbe loc_45AB80  +
cmp al 40h +
jz loc_45AB90  +
cmp al 50h +
jz loc_45AB78  +
cmp al 30h +
jnz loc_45AB88  +
mov [esp+1Ch+var_1C] edx +
call sub_455060  +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
test al al +
jz loc_45AB78  +
cmp al 10h +
jz loc_45AB78  +
call abort  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] edx +
call sub_455040  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] edx +
call sub_455070  +
add esp 1Ch +
retn   +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp al 50h +
mov [esp+34h+var_28] edx +
jz loc_45ACC5  +
mov eax esi +
and eax 0Fh +
cmp al 0Ch +
ja loc_45ACC0  +
movzx eax al +
jmp ds:off_47C158[eax*4]  +
mov edx [ecx] +
lea ebx [ecx+4] +
test edx edx +
jz loc_45AC4F  +
mov eax esi +
and eax 70h +
cmp al 10h +
mov eax esi +
cmovnz edi [esp+34h+var_28] +
add edx edi +
test al al +
jns loc_45AC4F  +
mov edx [edx] +
mov eax [esp+34h+arg_0] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx] +
lea ebx [ecx+8] +
jmp loc_45AC35  +
movsx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_45AC35  +
lea edx [esp+34h+var_18] +
mov eax ecx +
call sub_45A8A0  +
mov edx [esp+34h+var_18] +
mov ebx eax +
jmp loc_45AC35  +
xor edx edx +
mov ebx ecx +
mov ebp edx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx-1] +
mov eax edx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or ebp eax +
test dl dl +
js loc_45AC90  +
mov edx ebp +
jmp loc_45AC35  +
movzx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_45AC35  +
call abort  +
lea ebx [ecx+3] +
mov eax [esp+34h+arg_0] +
and ebx 0FFFFFFFCh +
mov edx [ebx] +
add ebx 4 +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D40 +
mov dword ptr [esp+40h] offset loc_45AD75 +
mov [esp+44h] esp +
call sub_454ED0  +
mov dword ptr [esp+20h] 1 +
call dword ptr [esp+60h]  +
call abort  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_45AD94  +
sub eax 1 +
jz loc_45ADAD  +
sub esp 0Ch +
call [esp+0Ch+arg_0]  +
call sub_463DD0  +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+0] ecx +
mov dword ptr [ecx] offset off_47EB90 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EB90 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EBA8 +
call sub_462D80  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EBA8 +
jmp sub_462D80  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EBE8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EBE8 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EC08 +
call sub_45AE50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EC08 +
jmp sub_45AE50  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EA68 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EA68 +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_46E120[eax] +
mov ebp ds:dword_46E120[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45B6C7  +
cmp edx 1 +
jz loc_45B652  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_45B6D1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45B6C0  +
cmp edx 1 +
jz loc_45B680  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_45B680  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_45B680  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_45B680  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_45B652  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_45B652  +
jmp loc_45B6C7  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_45B870  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_46E120[eax] +
mov ebx ds:dword_46E120[eax] +
mov ecx ds:dword_46E12C[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_45B8C5  +
cmp edx 1 +
jz loc_45B794  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_45B8A7  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_45B7E3  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_45B810  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45B830  +
cmp edx 1 +
jnz loc_45B7D0  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_45B7DE  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_45B7DE  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_45B7DE  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_45B863  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_45B8DA  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_45B8D0  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_45B721  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_45B8F0  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_45B721  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_45B78C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_45B78C  +
jmp loc_45B863  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_45B8DA  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_45B863  +
xor eax eax +
jmp loc_45B863  +
***
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_46E120[eax] +
mov ebp ds:dword_46E120[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45BD47  +
cmp edx 1 +
jz loc_45BCD2  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_45BD51  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45BD40  +
cmp edx 1 +
jz loc_45BD00  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_45BD00  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_45BD00  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_45BD00  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_45BCD2  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_45BCD2  +
jmp loc_45BD47  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_45BEF0  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_46E120[eax] +
mov ebx ds:dword_46E120[eax] +
mov ecx ds:dword_46E12C[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_45BF45  +
cmp edx 1 +
jz loc_45BE14  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_45BF27  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_45BE63  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_45BE90  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_45BEB0  +
cmp edx 1 +
jnz loc_45BE50  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_45BE5E  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_45BE5E  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_45BE5E  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_45BEE3  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_45BF5A  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_45BF50  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_45BDA1  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_45BF70  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_45BDA1  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_45BE0C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_45BE0C  +
jmp loc_45BEE3  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_45BF5A  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_45BEE3  +
xor eax eax +
jmp loc_45BEE3  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_46E120[eax] +
mov eax ds:dword_46E120[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45C3B1  +
cmp edx 1 +
jz loc_45C349  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_45C3B1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45C3C0  +
cmp edx 1 +
jz loc_45C380  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_45C380  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_45C525  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_46E120[eax] +
lea ebp dword_46E120[eax] +
mov ecx ds:dword_46E12C[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_45C554  +
cmp eax 1 +
jz loc_45C488  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_45C572  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_45C4A5  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_45C510  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45C4D0  +
cmp edx 1 +
jnz loc_45C498  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_45C4A0  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_45C578  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_45C560  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_45C3FD  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_45C580  +
mov esi [esi+4] +
jmp loc_45C3FD  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_45C578  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_45C4FF  +
xor eax eax +
jmp loc_45C4FF  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_46E120[eax] +
mov eax ds:dword_46E120[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45C931  +
cmp edx 1 +
jz loc_45C8C9  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_45C931  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45C940  +
cmp edx 1 +
jz loc_45C900  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_45C900  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_45CAA5  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_46E120[eax] +
lea ebp dword_46E120[eax] +
mov ecx ds:dword_46E12C[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_45CAD4  +
cmp eax 1 +
jz loc_45CA08  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_45CAF2  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_45CA25  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_45CA90  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45CA50  +
cmp edx 1 +
jnz loc_45CA18  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_45CA20  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_45CAF8  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_45CAE0  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_45C97D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_45CB00  +
mov esi [esi+4] +
jmp loc_45C97D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_45CAF8  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_45CA7F  +
xor eax eax +
jmp loc_45CA7F  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [ecx] +
mov [ebp+var_48] ecx +
mov ebx [eax+18h] +
mov ecx edi +
mov [ebp+var_50] edi +
mov edi [eax+4] +
lea esi [edi+edi*2] +
shl esi 2 +
add ecx esi +
mov [ebp+var_34] ecx +
mov ecx eax +
mov eax [eax+8] +
sub eax [ecx+0Ch] +
lea edx [eax+eax] +
cmp edi edx +
jb loc_45CCBD  +
shl eax 3 +
cmp edi eax +
ja loc_45CCB4  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_45CCDD  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jnz loc_45CD38  +
mov [esp+68h+var_64] 0Ch +
mov [esp+68h+var_68] edi +
call sub_4371E0  +
mov [ebp+var_30] eax +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_45CDB5  +
test edi edi +
jz loc_45CB9D  +
mov ecx [ebp+var_30] +
lea edx [edi+edi*2] +
mov eax ecx +
lea edx [ecx+edx*4] +
nop   +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 0Ch +
cmp eax edx +
jnz loc_45CB90  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_45CD73  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_30] +
mov [ebp+var_4C] edi +
mov [eax+4] edi +
mov [eax] ecx +
mov ecx eax +
mov [eax+18h] ebx +
mov eax [eax+0Ch] +
shl ebx 4 +
sub [ecx+8] eax +
mov eax [ebp+var_50] +
mov dword ptr [ecx+0Ch] 0 +
mov [ebp+var_44] ebx +
mov edi eax +
mov esi [edi] +
test esi esi +
jz loc_45CC88  +
cmp esi 1 +
jz loc_45CC88  +
mov ebx [ebp+var_44] +
sar esi 3 +
mov eax ebx +
mov ebx ds:dword_46E120[ebx] +
add eax offset dword_46E120 +
mov ecx [eax+0Ch] +
mov [ebp+var_38] eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_40] ebx +
mov ebx eax +
mov eax esi +
mul  dword ptr [ebx+4] +
mov eax esi +
mov ebx esi +
mov [ebp+var_3C] ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp+var_30] +
shr eax cl +
imul eax [ebp+var_2C] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edx+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_45CC78  +
mov ecx [ebp+var_38] +
mov eax esi +
mul  dword ptr [ecx+8] +
lea eax [esi+1] +
movzx ecx byte ptr [ebp+var_3C] +
sub esi edx +
shr esi 1 +
add esi edx +
mov edx [ebp+var_40] +
shr esi cl +
mov ecx [ebp+var_4C] +
sub edx 2 +
imul esi edx +
sub eax esi +
mov esi [ebp+var_30] +
lea esi [esi+0] +
add ebx eax +
mov edx ebx +
sub edx ecx +
cmp ecx ebx +
cmovbe ebx edx +
lea edx [ebx+ebx*2] +
lea edx [esi+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_45CC60  +
mov eax edx +
mov edx [edi] +
mov [eax] edx +
mov edx [edi+4] +
mov [eax+4] edx +
mov edx [edi+8] +
mov [eax+8] edx +
add edi 0Ch +
cmp [ebp+var_34] edi +
ja loc_45CBD5  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
mov eax [ebp+var_50] +
mov [esp+68h+var_68] eax +
jz loc_45CD66  +
call j_free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 20h +
jbe loc_45CB44  +
mov [esp+68h+var_68] edx +
call sub_4035D0  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_46E120[eax] +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jz loc_45CB51  +
lea eax [edi+edi*2] +
mov ecx ds:dword_48011C +
shl eax 2 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_48] +
mov [ebp+var_20] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_20] +
mov [esp+68h+var_68] eax +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_45CB51  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
jbe loc_45CB51  +
mov [eax+8] edx +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jz loc_45CB5E  +
lea eax [edi+edi*2] +
shl eax 2 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] eax +
call sub_4039C0  +
mov [ebp+var_30] eax +
jmp loc_45CB71  +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_48] +
mov ecx ds:dword_48011C +
mov [ebp+var_1C] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] eax +
call sub_45C2E0  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_45CBAA  +
mov eax [eax+4] +
mov edx [eax] +
cmp esi edx +
ja loc_45CDB0  +
sub edx esi +
mov [eax] edx +
jmp loc_45CBAA  +
call sub_467A70  +
mov [esp+68h+var_60] offset aAlloc_entrie_3 +
mov [esp+68h+var_64] 28Eh +
mov [esp+68h+var_68] offset a____GccGccHa_2 +
call sub_406BF0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+84h+var_84] ecx +
mov dword ptr [ecx] offset off_47EAA8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EAA8 +
retn   +
***
sub esp 18h +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
movzx eax byte ptr [eax+4] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_40DD10  +
xor eax eax +
sub esp 8 +
leave   +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EC48 +
call sub_461E30  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EC48 +
jmp sub_461E30  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EEC8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EEC8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EEC8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EEC8 +
retn   +
***
mov dword_46CB98 0FFFFFFFFh +
mov dword_46CB9C offset dword_46CB98 +
retn   +
***
mov dword_46CB90 0FFFFFFFDh +
mov dword_46CBA0 offset dword_46CB90 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EAA8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EAA8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EAA8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EAA8 +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
mov edx [edx+4] +
mov [esp+1Ch+var_14] edx +
mov edx [eax+4] +
mov [esp+1Ch+var_18] edx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [ecx] +
mov esi [esp+10h+arg_0] +
lea eax [ebx+1] +
cmp ebx 2 +
mov [ecx] eax +
jle loc_45CFE0  +
mov eax [ecx+20h] +
sub ebx 3 +
test eax eax +
jz loc_45D018  +
mov edx [ecx+1Ch] +
cmp ebx edx +
jge loc_45CFF6  +
mov edx [esi] +
mov ecx [esi+4] +
mov [eax+ebx*8] edx +
mov [eax+ebx*8+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov eax [esi] +
mov edx [esi+4] +
mov [ecx+ebx*8+4] eax +
mov [ecx+ebx*8+8] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [edx+edx] +
shl edx 4 +
mov [ecx+1Ch] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_4] ecx +
call sub_437230  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_45CFC7  +
mov dword ptr [ecx+1Ch] 10h +
mov [esp+10h+var_10] 80h +
mov [esp+10h+var_4] ecx +
call sub_4371B0  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_45CFC7  +
***
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov esi [esp+10h+arg_0] +
lea edx [eax+1] +
cmp eax 1 +
mov [ecx] edx +
jle loc_45D0A0  +
mov edx [ecx+10h] +
lea ebx [eax-2] +
test edx edx +
jz loc_45D0B0  +
mov eax [ecx+0Ch] +
cmp ebx eax +
jge loc_45D075  +
mov eax [esi] +
mov [edx+ebx*4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [eax+eax] +
shl eax 3 +
mov [ecx+0Ch] edi +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] ecx +
call sub_437230  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_45D067  +
mov edx [esi] +
mov [ecx+eax*4+4] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov dword ptr [ecx+0Ch] 10h +
mov [esp+10h+var_10] 40h +
mov [esp+10h+var_4] ecx +
call sub_4371B0  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_45D067  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+14h] +
mov dword ptr [esp] 14h +
mov esi [ebp+10h] +
mov [ebp-3Ch] ecx +
call loc_464170  +
mov [eax] edi +
mov ebx eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] ebx +
mov [ebp-24h] edi +
mov [ebx+4] eax +
mov eax [ebp+18h] +
mov [ebx+8] eax +
mov eax [ebp+0Ch] +
mov [ebx+0Ch] eax +
mov eax esi +
mov [ebx+10h] al +
mov eax [ebp+8] +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov esi [eax+18h] +
lea eax [ebp-24h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_43F310  +
mov ecx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-28h] ecx +
mov [esp+8] eax +
lea eax [ebp-28h] +
mov [esp] eax +
call sub_43F310  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-2Ch] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_45B5E0  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_45D238  +
mov eax [ebp-2Ch] +
mov [esp] eax +
call sub_4640C0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-3Ch] +
lea ebx [ebp-30h] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_45C2E0  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_45D344  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
mov dword ptr [esp] 10h +
call loc_464170  +
mov edx [ebp-2Ch] +
mov [ebp-44h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov eax [ebp-3Ch] +
mov eax [eax+18h] +
mov [ebp-40h] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_43F310  +
mov edx [ebp-44h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-20h] +
mov [esp] eax +
mov [ebp-20h] ecx +
call sub_43F310  +
mov edx [ebp-44h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-40h] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_45B700  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_45D33C  +
mov edx [ebp-2Ch] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_45D204  +
***
mov eax [ebp-3Ch] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_45C3E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_45D372  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
push esi  +
push esi  +
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
call pthread_mutex_unlock  +
test eax eax +
jnz loc_45D7A3  +
add esp 1Ch +
retn   +
call sub_45DB40  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [ecx] offset off_47ED08 +
call sub_462D50  +
mov [esp+38h+var_38] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47ED08 +
jmp sub_462D50  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47ED20 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47ED20 +
jmp sub_462D50  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47ED38 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47ED38 +
jmp sub_462D50  +
***
lea eax [esp+68h+var_8] +
mov [esp+68h+var_2C] eax +
lea eax [esp+68h+var_4C] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_34] offset sub_465090 +
mov [esp+68h+var_30] offset dword_467DBC +
mov [esp+68h+var_28] offset dword_45D9C0 +
mov [esp+68h+var_24] esp +
call sub_454ED0  +
cmp byte_46CBC8 0 +
jnz loc_45D97D  +
mov byte_46CBC8 1 +
call sub_464710  +
test eax eax +
jz loc_45D9DB  +
mov eax [eax+4] +
xor edx edx +
cmp byte ptr [eax] 2Ah +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
setz dl  +
add eax edx +
mov ecx eax +
mov [esp+68h+var_50] eax +
lea eax [esp+68h+var_C] +
mov [esp+68h+var_68] ecx +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_C] 0FFFFFFFFh +
mov [esp+68h+var_48] 0FFFFFFFFh +
call sub_4536C0  +
mov [esp+68h+var_60] 30h +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCalle +
mov [esp+68h+var_54] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov eax ds:_iob +
add eax 40h +
cmp [esp+68h+var_C] 0 +
mov [esp+68h+var_64] eax +
jz loc_45D96F  +
mov eax [esp+68h+var_50] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2 +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset asc_47C501 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
cmp [esp+68h+var_C] 0 +
jz loc_45D9B2  +
mov [esp+68h+var_48] 1 +
call sub_464FD0  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
jmp loc_45D92B  +
mov eax ds:_iob +
mov [esp+68h+var_60] 1Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_0 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
call abort  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call free  +
jmp loc_45D962  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_1 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call abort  +
call loc_464770  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call sub_4551D0  +
mov eax [esp+68h+var_54] +
sub edx 1 +
mov [esp+68h+var_68] eax +
jnz loc_45DAB9  +
call sub_4644C0  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
mov edx ds:_iob +
mov [esp+68h+var_60] 0Bh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aWhat +
mov [esp+68h+var_48] 2 +
mov [esp+68h+var_54] eax +
lea eax [edx+40h] +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov edx ds:_iob +
lea eax [edx+40h] +
mov [esp+68h+var_64] eax +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_68] 0Ah +
add eax 40h +
mov [esp+68h+var_64] eax +
call fputc  +
call loc_464770  +
jmp loc_45DA0B  +
lea esi [esi+0] +
call sub_4644C0  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call loc_464770  +
jmp loc_45DA0B  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47ED50 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47ED50 +
jmp sub_462D50  +
***
sub esp 1Ch +
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4 +
call loc_464380  +
mov dword ptr [eax] offset off_47ED50 +
mov [esp+1Ch+var_14] offset sub_45DB00 +
mov [esp+1Ch+var_18] offset off_47E478 +
mov [esp+1Ch+var_1C] eax +
call sub_465030  +
nop   +
nop   +
nop   +
mov eax [esp+1Ch+var_14] +
mov edx [esp+1Ch+var_18] +
mov eax [eax] +
cmp [edx] eax +
setz al  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+4] +
mov eax [eax] +
cmp [edx] eax +
setz al  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [eax+4] +
mov eax [esp+10h] +
mov ecx [esi] +
mov ebx [eax+4] +
mov edx [ebx] +
cmp ecx edx +
setb al  +
cmp ecx edx +
jz loc_45DBE3  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+8] +
cmp [esi+8] eax +
jz loc_45DBF4  +
setb al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+4] +
cmp [esi+4] eax +
setb al  +
jmp loc_45DBDD  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_45F1B0  +
sub esp 4 +
test al al +
jnz loc_45DC22  +
cmp [ebp+arg_8] 3 +
jbe loc_45DC30  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx] +
mov ecx ebx +
mov edx [ebp+arg_4] +
mov eax [eax+14h] +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] edx +
call eax  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_8] +
mov [esp+18h+var_18] eax +
call sub_45F1B0  +
sub esp 4 +
test al al +
jz loc_45DC7F  +
mov edx [ebp+arg_4] +
mov dword ptr [ebx+0Ch] 8 +
mov dword ptr [ebx+4] 6 +
mov [ebx] edx +
mov ebx [ebp+var_4] +
leave   +
retn 0Ch  +
***
push esi  +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
mov eax [ecx] +
lea esi [ebp+var_18] +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov edx [ebx] +
mov eax [eax+18h] +
mov [ebp+var_10] 10h +
mov [ebp+var_C] 0 +
mov [esp+28h+var_24] edx +
mov edx [ebp+arg_0] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] edx +
call eax  +
mov edx [ebp+var_14] +
xor eax eax +
and edx 6 +
sub esp 0Ch +
cmp edx 6 +
jnz loc_45DCEB  +
mov eax [ebp+var_18] +
mov [ebx] eax +
mov eax 1 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov eax [esp+arg_4] +
cmp [esp+arg_C] eax +
setz al  +
movzx eax al +
lea eax [eax+eax*4+1] +
retn 10h  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_20] edi +
call sub_45DC50  +
mov edx [ebp+var_1C] +
sub esp 0Ch +
test al al +
jz loc_45DDC0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+18h] +
mov [ebp+arg_8] edi +
mov [ebp+arg_4] esi +
mov [ebp+arg_0] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [ebp+var_28] ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_C] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] edx +
mov ebx [ebp+arg_18] +
mov [ebp+var_20] edx +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_1C] eax +
call sub_45F1B0  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_45DE48  +
mov eax [ebp+var_24] +
test edi edi +
mov [ebx] esi +
mov [ebx+4] eax +
js loc_45DE80  +
xor eax eax +
add esi edi +
cmp [ebp+var_1C] esi +
setz al  +
lea eax [eax+eax*4+1] +
mov [ebx+0Ch] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 1Ch  +
cmp esi [ebp+var_1C] +
jz loc_45DE90  +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov eax [ecx] +
mov eax [eax+1Ch] +
mov [ebp+arg_18] ebx +
mov ebx [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov esi [ebp+var_24] +
mov [ebp+arg_0] edi +
mov [ebp+arg_8] edx +
mov [ebp+arg_14] ebx +
mov ebx [ebp+var_2C] +
mov [ebp+arg_4] esi +
mov [ebp+arg_10] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
cmp edi 0FFFFFFFEh +
jnz loc_45DE3C  +
mov dword ptr [ebx+0Ch] 1 +
jmp loc_45DE3C  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_28] +
mov [ebp+var_20] edx +
mov [esp+38h+var_38] eax +
call sub_45F1B0  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_45DE4D  +
mov eax [ebp+var_24] +
mov [ebx+8] eax +
jmp loc_45DE3C  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_8] +
cmp esi ebx +
mov [ebp+var_1C] eax +
jz loc_45DF00  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+20h] +
mov [ebp+arg_8] edi +
mov edi [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov [ebp+arg_4] ebx +
mov [ebp+arg_0] edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+28h+var_28] edi +
mov [ebp+var_20] edx +
call sub_45F1B0  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_45DEDE  +
lea esp [ebp-0Ch] +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
retn   +
***
sub esp 68h +
lea eax [ebp+var_8] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_4C] +
mov [ebp+var_50] ecx +
mov [ebp+var_34] offset sub_465090 +
mov [ebp+var_30] offset dword_467CD0 +
mov [ebp+var_28] offset loc_45E073 +
mov [ebp+var_24] esp +
mov [esp+68h+var_68] eax +
call sub_454ED0  +
lea eax [ebp-9] +
mov [esp+68h+var_60] eax +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] 0 +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_45F270  +
mov edx [ebp+var_50] +
cmp [ebp+arg_4] 2 +
mov [edx] eax +
jz loc_45E050  +
jle loc_45E005  +
cmp [ebp+arg_4] 3 +
jz loc_45DFE5  +
cmp [ebp+arg_4] 4 +
nop   +
jnz loc_45E030  +
mov [esp+68h+var_64] 0Eh +
mov [esp+68h+var_68] offset aBrokenPromise +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_460030  +
lea eax [ebp+var_4C] +
sub esp 8 +
mov [esp+68h+var_68] eax +
call sub_454F30  +
mov eax [ebp+var_50] +
leave   +
retn 8  +
mov [esp+68h+var_64] 13h +
mov [esp+68h+var_68] offset aNoAssociatedSt +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_460030  +
jmp loc_45DFD0  +
cmp [ebp+arg_4] 1 +
jnz loc_45E030  +
mov [esp+68h+var_64] 18h +
mov [esp+68h+var_68] offset aFutureAlreadyR +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_460030  +
jmp loc_45DFD0  +
mov [esp+68h+var_64] 0Dh +
mov [esp+68h+var_68] offset aUnknownError +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_460030  +
jmp loc_45DFD0  +
mov [esp+68h+var_64] 19h +
mov [esp+68h+var_68] offset aPromiseAlready +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_460030  +
jmp loc_45DFD0  +
add ebp 8 +
mov edx [ebp+var_50] +
mov eax [ebp+var_44] +
mov ecx [edx] +
mov [ebp+var_54] eax +
lea eax [ebp-9] +
mov [esp+68h+var_68] eax +
sub ecx 0Ch +
call sub_45F7F0  +
push eax  +
mov eax [ebp+var_54] +
mov [esp+68h+var_68] eax +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax offset aSystem +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call strerror  +
lea edx [ebp+var_9] +
mov ecx ebx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call sub_460F10  +
mov eax ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
leave   +
retn 8  +
***
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call strerror  +
lea edx [ebp+var_9] +
mov ecx ebx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call sub_460F10  +
mov eax ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
leave   +
retn 8  +
***
retn   +
***
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_45E18C  +
add eax [ecx+8] +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
mov edx [ecx+8] +
mov [eax] edx +
mov eax 1 +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_45E1DC  +
add eax [ecx+0Ch] +
retn 4  +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_454930  +
sub esp eax +
mov ebx ecx +
mov eax [esp+10h+arg_104C] +
mov ebp [eax+4] +
mov edi [eax+8] +
mov esi [eax] +
jmp loc_45E246  +
lea esi [eax+4] +
mov [esp+10h+var_C] offset aGcc +
mov [esp+10h+var_10] esi +
call strstr  +
test eax eax +
jnz loc_45E243  +
mov [esp+10h+var_8] esi +
lea esi [esp+10h+arg_2C] +
mov [esp+10h] ebp +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] offset aSIS +
call sub_45A790  +
mov eax [ebx+14h] +
xor edx edx +
mov ecx [ebx+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov edi [ebx] +
mov [esp+10h+arg_5C] 0 +
mov [esp+10h+arg_18] eax +
mov eax [ebx+10h] +
mov dword ptr [esp+10h+arg_24] ecx +
fild  [esp+10h+arg_24] +
fld  ds:flt_46F344 +
mov [esp+10h+arg_14] eax +
mov eax [esp+10h+arg_1050] +
fmul st(1) st +
mov eax [eax+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov [esp+10h+arg_8] ecx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax [ebx+8] +
fild  [esp+10h+arg_24] +
fdivp st(2) st +
fxch  st(1) +
mov dword ptr [esp+10h+arg_24] edi +
mov [esp+10h+arg_4] eax +
mov eax [esp+10h+arg_1050] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
fstp  [esp+10h+arg_C] +
mov eax [eax] +
fild  [esp+10h+arg_24] +
fmulp st(1) st +
mov dword ptr [esp+10h+arg_24+4] edx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax ds:_iob +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_8] esi +
fild  [esp+10h+arg_24] +
fdivp st(1) st +
add eax 40h +
mov [esp+10h+var_C] offset a48s10li4_1f10l +
fstp  qword ptr [esp+10h] +
mov [esp+10h+var_10] eax +
call sub_45A760  +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebx  +
mov edx [ecx] +
mov eax 1 +
mov ebx [esp+8] +
cmp ebx edx +
jb loc_45E348  +
add edx [edx-0Ch] +
cmp ebx edx +
setnbe al  +
pop ebx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45E390  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ecx] +
mov edi [esp+1Ch+arg_8] +
mov ebp [esp+1Ch+arg_0] +
mov ebx [esi-0Ch] +
test edi edi +
jnz loc_45E3B7  +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
test ebx ebx +
jz loc_45E3A8  +
sub ebx 1 +
cmp [esp+1Ch+arg_4] ebx +
cmovbe ebx [esp+1Ch+arg_4] +
jmp loc_45E3D9  +
test ebx ebx +
lea eax [ebx-1] +
jz loc_45E3A8  +
mov ebx eax +
mov [esp+1Ch+var_14] edi +
movsx eax byte ptr [esi+ebx] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memchr  +
test eax eax +
jz loc_45E3D0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45E390  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ecx [ecx] +
mov eax 0FFFFFFFFh +
movzx ebx byte ptr [esp+8] +
mov edx [ecx-0Ch] +
test edx edx +
jnz loc_45E448  +
pop ebx  +
retn 8  +
***
lea eax [edx-1] +
cmp [esp+0Ch] eax +
cmovbe eax [esp+0Ch] +
jmp loc_45E460  +
cmp bl [ecx+eax] +
lea edx [eax-1] +
jz loc_45E444  +
mov eax edx +
cmp eax 0FFFFFFFFh +
jnz loc_45E456  +
pop ebx  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45E4B0  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esp+1Ch+arg_4] +
test esi esi +
jz loc_45E4F9  +
mov edi [ecx] +
mov ebp [edi-0Ch] +
cmp ebp ebx +
jbe loc_45E4F9  +
mov [esp+1Ch+var_14] esi +
movsx eax byte ptr [edi+ebx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call memchr  +
test eax eax +
jnz loc_45E503  +
add ebx 1 +
cmp ebp ebx +
ja loc_45E4D1  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45E4B0  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
movsx eax byte ptr [ebp+8] +
mov [ebp+8] eax +
leave   +
jmp loc_45EA00  +
***
mov eax ecx +
retn 4  +
***
sub esp 1Ch +
mov edx [ecx] +
mov eax 3FFFFFFCh +
sub eax [edx-0Ch] +
add eax [esp+20h] +
cmp eax [esp+24h] +
jb loc_45E57D  +
add esp 1Ch +
retn 0Ch  +
***
mov eax [esp+28h] +
mov [esp] eax +
call loc_463570  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45E5D0  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ecx] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov ebx [esi-0Ch] +
test ebx ebx +
jnz loc_45E5F7  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
sub ebx 1 +
cmp [esp+1Ch+arg_4] ebx +
cmovbe ebx [esp+1Ch+arg_4] +
jmp loc_45E60E  +
test ebx ebx +
lea eax [ebx-1] +
jz loc_45E632  +
mov ebx eax +
mov [esp+1Ch+var_14] ebp +
movsx eax byte ptr [esi+ebx] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call memchr  +
test eax eax +
jnz loc_45E605  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45E5D0  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ecx [ecx] +
mov eax 0FFFFFFFFh +
movzx ebx byte ptr [esp+8] +
mov edx [ecx-0Ch] +
test edx edx +
jnz loc_45E698  +
pop ebx  +
retn 8  +
***
lea eax [edx-1] +
cmp [esp+0Ch] eax +
cmovbe eax [esp+0Ch] +
jmp loc_45E6A8  +
mov eax edx +
cmp [ecx+eax] bl +
jnz loc_45E694  +
test eax eax +
lea edx [eax-1] +
jnz loc_45E6A6  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45E700  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ecx] +
mov esi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_8] +
mov eax [ebx-0Ch] +
cmp esi eax +
mov [esp+1Ch+var_10] eax +
jb loc_45E72B  +
jmp loc_45E750  +
add esi 1 +
cmp esi [esp+1Ch+var_10] +
jnb loc_45E750  +
mov [esp+1Ch+var_14] edi +
movsx eax byte ptr [ebx+esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memchr  +
test eax eax +
jnz loc_45E722  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45E700  +
sub esp 0Ch +
leave   +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
mov edx [ecx] +
mov eax [esp+14h] +
mov esi [esp+10h] +
mov edi [edx-0Ch] +
cmp eax edi +
jnb loc_45E7BC  +
movzx ebx byte ptr [edx+eax] +
mov ecx esi +
cmp bl cl +
jz loc_45E7B5  +
jmp loc_45E7C1  +
cmp [edx+eax] bl +
jnz loc_45E7C1  +
add eax 1 +
cmp eax edi +
jb loc_45E7B0  +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
sub esp 1Ch +
mov edx [ecx] +
mov eax [esp+20h] +
cmp eax [edx-0Ch] +
jnb loc_45E7E6  +
add eax edx +
add esp 1Ch +
retn 4  +
***
mov dword ptr [esp] offset aBasic_stringAt +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [ecx] +
add eax [eax-0Ch] +
retn   +
***
mov eax [ecx+8] +
shr eax 1Fh +
retn   +
***
mov eax [ecx+8] +
test eax eax +
setnle al  +
retn   +
***
mov eax [ecx] +
mov edx [eax-0Ch] +
lea eax [eax+edx-1] +
retn   +
***
mov eax [ecx] +
add eax [eax-0Ch] +
retn   +
***
push ebx  +
sub esp 18h +
mov ecx [ecx] +
mov eax [esp+28h] +
mov edx [esp+24h] +
mov ebx [ecx-0Ch] +
cmp eax ebx +
ja loc_45E8A6  +
sub ebx eax +
cmp ebx edx +
cmova ebx edx +
test ebx ebx +
jz loc_45E88B  +
add eax ecx +
cmp ebx 1 +
jz loc_45E894  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp+8] ebx +
mov [esp] eax +
call memcpy  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn 0Ch  +
***
movzx eax byte ptr [eax] +
mov edx [esp+20h] +
mov [edx] al +
add esp 18h +
mov eax ebx +
pop ebx  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_stringCo +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [ecx] +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45E910  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [ecx] +
mov ebp [esp+2Ch+arg_8] +
mov edi [esi-0Ch] +
test ebp ebp +
jnz loc_45E940  +
cmp [esp+2Ch+arg_4] edi +
cmovbe eax [esp+2Ch+arg_4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
cmp ebp edi +
ja loc_45E932  +
sub edi ebp +
cmp [esp+2Ch+arg_4] edi +
ja loc_45E932  +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax] +
mov eax [esp+2Ch+arg_4] +
lea ebx [eax+1] +
lea eax [ebp-1] +
add esi ebx +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_0] +
mov ebp edx +
add eax 1 +
mov [esp+2Ch+var_10] eax +
jmp loc_45E97C  +
add ebx 1 +
add esi 1 +
cmp edi eax +
jb loc_45E9B0  +
mov ecx ebp +
mov eax ebx +
cmp [esi-1] cl +
lea edx [ebx-1] +
jnz loc_45E972  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
call memcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_45E9C0  +
mov eax ebx +
jmp loc_45E972  +
mov eax 0FFFFFFFFh +
jmp loc_45E932  +
mov eax edx +
jmp loc_45E932  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45E910  +
sub esp 0Ch +
leave   +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
mov ebx 0FFFFFFFFh +
sub esp 10h +
mov esi [ecx] +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov edx [esi-0Ch] +
cmp eax edx +
jb loc_45EA27  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
mov ecx edi +
sub edx eax +
movsx edi cl +
add eax esi +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
call memchr  +
mov edx eax +
sub edx esi +
test eax eax +
cmovnz ebx edx +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
mov edx [esp+4] +
mov eax ecx +
mov edx [edx] +
mov [ecx] edx +
retn 4  +
***
mov eax [ecx] +
mov eax [eax-0Ch] +
retn   +
***
mov eax [ecx] +
retn   +
***
mov eax [ecx] +
retn   +
***
mov edx [esp+4] +
mov eax ecx +
mov edx [edx] +
mov [ecx] edx +
retn 4  +
***
mov eax [ecx] +
mov eax [eax-0Ch] +
test eax eax +
setz al  +
retn   +
***
mov eax [ecx] +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_45EB10  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ecx] +
mov esi [esp+1Ch+arg_8] +
mov ebp [esp+1Ch+arg_0] +
mov ebx [edi-0Ch] +
cmp esi ebx +
jbe loc_45EB37  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
sub ebx esi +
cmp ebx [esp+1Ch+arg_4] +
cmova ebx [esp+1Ch+arg_4] +
jmp loc_45EB4D  +
test ebx ebx +
lea eax [ebx-1] +
jz loc_45EB70  +
mov ebx eax +
lea eax [edi+ebx] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jnz loc_45EB44  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [ebp+0Ch] +
mov [esp+4] edx +
call sub_45EB10  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ecx [ecx] +
mov eax 0FFFFFFFFh +
movzx ebx byte ptr [esp+8] +
mov edx [ecx-0Ch] +
test edx edx +
jnz loc_45EBC8  +
pop ebx  +
retn 8  +
***
lea eax [edx-1] +
cmp [esp+0Ch] eax +
cmovbe eax [esp+0Ch] +
jmp loc_45EBE0  +
cmp [ecx+eax] bl +
lea edx [eax-1] +
jz loc_45EBC4  +
mov eax edx +
cmp eax 0FFFFFFFFh +
jnz loc_45EBD6  +
pop ebx  +
retn 8  +
***
mov eax [ecx] +
sub eax 0Ch +
retn   +
***
mov eax [ecx] +
retn   +
***
mov eax [ecx] +
mov eax [eax-0Ch] +
retn   +
***
mov edx [esp+4] +
mov eax ecx +
mov edx [edx] +
add edx [edx-0Ch] +
mov [ecx] edx +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov edx [ebp+8] +
mov ebx [ebp+0Ch] +
mov eax [edx] +
cmp ebx [eax-0Ch] +
ja loc_45EC68  +
mov eax [ebp+10h] +
mov esi ecx +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+8] eax +
call sub_461020  +
mov eax esi +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_stringSu +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [ecx] +
retn   +
***
mov eax [ecx] +
add eax [eax-0Ch] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [ecx] +
mov edi [esp+30h] +
mov ebx [ebp-0Ch] +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov [esp] ebp +
cmp eax ebx +
mov esi eax +
mov eax ebx +
cmovbe eax esi +
sub ebx esi +
mov [esp+8] eax +
call memcmp  +
test eax eax +
cmovz eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [ecx] +
mov edx [esp+20h] +
mov esi [eax-0Ch] +
mov edx [edx] +
mov ecx esi +
mov ebx [edx-0Ch] +
mov [esp+4] edx +
mov [esp] eax +
cmp ebx esi +
cmovbe ecx ebx +
sub esi ebx +
mov [esp+8] ecx +
call memcmp  +
test eax eax +
cmovz eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn 4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [ecx] +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov esi [ebp-0Ch] +
cmp ebx esi +
ja loc_45ED8B  +
sub esi ebx +
cmp esi eax +
cmova esi eax +
mov eax [esp+38h] +
mov [esp] eax +
call strlen  +
cmp eax esi +
mov edi eax +
mov eax esi +
cmovbe eax edi +
add ebx ebp +
mov [esp+8] eax +
mov eax [esp+38h] +
sub esi edi +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
cmovz eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_string_2 +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov edx [esp+20h] +
mov edi [esp+24h] +
mov ebx [esp+2Ch] +
mov esi [eax-0Ch] +
cmp edx esi +
ja loc_45EDEF  +
sub esi edx +
mov ecx ebx +
cmp esi edi +
cmova esi edi +
cmp esi ebx +
cmovbe ecx esi +
add edx eax +
mov [esp+8] ecx +
mov ecx [esp+28h] +
sub esi ebx +
mov [esp] edx +
mov [esp+4] ecx +
call memcmp  +
test eax eax +
cmovz eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov dword ptr [esp] offset aBasic_string_2 +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov edx [esp+20h] +
mov ebx [esp+24h] +
mov esi [eax-0Ch] +
cmp edx esi +
ja loc_45EE50  +
mov ecx [esp+28h] +
sub esi edx +
cmp esi ebx +
cmova esi ebx +
mov ecx [ecx] +
mov ebx [ecx-0Ch] +
mov [esp+4] ecx +
cmp esi ebx +
mov edi ebx +
cmovbe edi esi +
add edx eax +
mov [esp+8] edi +
sub esi ebx +
mov [esp] edx +
call memcmp  +
test eax eax +
cmovz eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_string_2 +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [ecx] +
mov edx [esp+30h] +
mov ebp [esp+34h] +
mov ebx [esp+3Ch] +
mov esi [eax-0Ch] +
cmp edx esi +
ja loc_45EEC7  +
mov ecx [esp+38h] +
mov ecx [ecx] +
mov edi [ecx-0Ch] +
cmp ebx edi +
ja loc_45EEC7  +
sub esi edx +
cmp esi ebp +
cmova esi ebp +
sub edi ebx +
cmp edi [esp+40h] +
cmova edi [esp+40h] +
cmp esi edi +
mov ebp edi +
cmovbe ebp esi +
add ebx ecx +
add edx eax +
sub esi edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] edx +
call memcmp  +
test eax eax +
cmovz eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov dword ptr [esp] offset aBasic_string_2 +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edx [esp+4] +
mov eax ecx +
mov edx [edx] +
add edx [edx-0Ch] +
mov [ecx] edx +
retn 4  +
***
sub esp 1Ch +
mov edx [ecx] +
mov eax [esp+20h] +
cmp eax [edx-0Ch] +
ja loc_45EF04  +
add esp 1Ch +
retn 8  +
***
mov eax [esp+24h] +
mov [esp] eax +
call loc_463670  +
mov eax [ecx] +
mov edx [esp+8] +
mov eax [eax-0Ch] +
sub eax [esp+4] +
cmp eax edx +
cmova eax edx +
retn 8  +
***
mov eax [ecx] +
mov eax [eax-8] +
retn   +
***
mov eax 3FFFFFFCh +
retn   +
***
mov eax [ecx] +
retn   +
***
mov eax [ecx] +
add eax [esp+4] +
retn 4  +
***
retn   +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+4] +
mov ecx [ecx] +
mov edx [eax] +
mov edx [edx+10h] +
mov [esp] ecx +
mov ecx eax +
call edx  +
sub esp 4 +
leave   +
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 60h +
lea esi [ebp+var_4C] +
mov [esp+68h+var_68] esi +
mov [ebp+var_34] offset sub_465090 +
mov [ebp+var_30] offset dword_467CCC +
call sub_454ED0  +
mov eax [ebx+0Ch] +
mov ecx [ebx+8] +
mov edx [eax] +
mov edx [edx+0Ch] +
mov [esp+68h+var_64] ecx +
lea ecx [ebp+var_C] +
mov [esp+68h+var_68] eax +
mov [ebp+var_48] 0 +
call edx  +
mov ebx [ebp+var_C] +
mov eax 0FFFFFFFFh +
sub esp 8 +
xadd [ebx-4] eax +
test eax eax +
jle loc_45F016  +
mov [esp+70h+var_70] esi +
call sub_454F30  +
lea esp [ebp-8] +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
lea eax [ebp-0Dh] +
lea ecx [ebx-0Ch] +
mov [esp+70h+var_70] eax +
call sub_45F7D0  +
sub esp 4 +
jmp loc_45F005  +
***
retn   +
***
retn   +
***
mov edx [esp+arg_0] +
xor eax eax +
cmp [edx+4] ecx +
jz loc_45F060  +
retn 8  +
mov eax [esp+arg_4] +
cmp [edx] eax +
setz al  +
retn 8  +
***
push ebx  +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov eax [eax+10h] +
mov [esp+18h+var_18] edx +
call eax  +
xor ecx ecx +
sub esp 4 +
cmp [ebx+4] edx +
jz loc_45F0A0  +
mov eax ecx +
mov ebx [ebp+var_4] +
leave   +
retn 8  +
cmp [ebx] eax +
mov ebx [ebp+var_4] +
leave   +
setz cl  +
mov eax ecx +
retn 8  +
***
mov edx ecx +
mov eax [esp+arg_0] +
retn 4  +
***
mov eax [ecx] +
mov eax [eax-50h] +
retn   +
***
mov eax [ecx] +
retn   +
***
mov edx [ecx] +
xor eax eax +
test edx edx +
mov edx offset dword_461F10 +
cmovnz eax edx +
xor edx edx +
retn   +
***
mov eax [ecx] +
test eax eax +
setz al  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_45F1B0  +
sub esp 4 +
leave   +
retn 0Ch  +
***
retn 8  +
***
retn   +
***
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ecx +
jz loc_45F1E8  +
mov edx [ecx+4] +
cmp byte ptr [edx] 2Ah +
jz loc_45F1E0  +
mov eax [eax+4] +
xor ecx ecx +
cmp byte ptr [eax] 2Ah +
mov [esp+1Ch+var_1C] edx +
setz cl  +
add eax ecx +
mov [esp+1Ch+var_18] eax +
call strcmp  +
test eax eax +
jz loc_45F1E8  +
xor eax eax +
add esp 1Ch +
retn 4  +
mov eax 1 +
add esp 1Ch +
retn 4  +
***
mov eax [esp+4] +
sub eax [esp+8] +
retn   +
***
mov eax [esp+4] +
mov [ecx] eax +
retn 8  +
***
mov eax [esp+4] +
mov [ecx] eax +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [eax-4] +
test edx edx +
jle loc_45F263  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0 +
call sub_460CD0  +
mov eax [ebx] +
sub esp 0Ch +
mov dword ptr [eax-4] 0FFFFFFFFh +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0 +
mov edi [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_14] eax +
call sub_45F940  +
test ebx ebx +
mov esi eax +
lea eax [eax+0Ch] +
jz loc_45F2BF  +
cmp ebx 1 +
lea ebp [esi+0Ch] +
jz loc_45F2D4  +
mov eax edi +
movsx edi al +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call memset  +
mov eax ebp +
mov dword ptr [esi+8] 0 +
mov [esi] ebx +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
mov [esi+0Ch] al +
mov eax ebp +
jmp loc_45F2BF  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0 +
sub ebx edi +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ebx +
call sub_45F940  +
cmp ebx 1 +
mov esi eax +
lea ebp [eax+0Ch] +
jz loc_45F340  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call memcpy  +
mov dword ptr [esi+8] 0 +
mov eax ebp +
mov [esi] ebx +
mov byte ptr [esi+ebx+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
mov [esi+0Ch] al +
jmp loc_45F323  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
test ebp ebp +
jz loc_45F3C0  +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0 +
sub ebx ebp +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ebx +
call sub_45F940  +
cmp ebx 1 +
mov edi eax +
lea esi [eax+0Ch] +
jz loc_45F3B0  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] esi +
call memcpy  +
mov dword ptr [edi+8] 0 +
mov eax esi +
mov [edi] ebx +
mov byte ptr [esi+ebx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebp+0] +
mov [edi+0Ch] al +
jmp loc_45F397  +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_45F3D4  +
mov [esp+1Ch+var_1C] offset aBasic_string_0 +
call loc_4630B0  +
mov eax [esp+1Ch+arg_8] +
xor ebx ebx +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] eax +
call sub_45F940  +
mov edi eax +
lea esi [eax+0Ch] +
jmp loc_45F387  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
test ebp ebp +
jz loc_45F470  +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0 +
sub ebx ebp +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ebx +
call sub_45F940  +
cmp ebx 1 +
mov edi eax +
lea esi [eax+0Ch] +
jz loc_45F460  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] esi +
call memcpy  +
mov dword ptr [edi+8] 0 +
mov eax esi +
mov [edi] ebx +
mov byte ptr [esi+ebx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebp+0] +
mov [edi+0Ch] al +
jmp loc_45F447  +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_45F484  +
mov [esp+1Ch+var_1C] offset aBasic_string_0 +
call loc_4630B0  +
mov eax [esp+1Ch+arg_8] +
xor ebx ebx +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] eax +
call sub_45F940  +
mov edi eax +
lea esi [eax+0Ch] +
jmp loc_45F437  +
***
mov eax offset unk_46CBAC +
retn   +
***
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ecx [esp+4] +
sub eax edx +
cmp eax 1 +
jz loc_45F4E4  +
mov [esp+0Ch] eax +
mov [esp+8] edx +
mov [esp+4] ecx +
jmp memcpy  +
***
movzx eax byte ptr [edx] +
mov [ecx] al +
retn   +
***
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ecx [esp+4] +
sub eax edx +
cmp eax 1 +
jz loc_45F514  +
mov [esp+0Ch] eax +
mov [esp+8] edx +
mov [esp+4] ecx +
jmp memcpy  +
***
movzx eax byte ptr [edx] +
mov [ecx] al +
retn   +
***
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ecx [esp+4] +
sub eax edx +
cmp eax 1 +
jz loc_45F544  +
mov [esp+0Ch] eax +
mov [esp+8] edx +
mov [esp+4] ecx +
jmp memcpy  +
***
movzx eax byte ptr [edx] +
mov [ecx] al +
retn   +
***
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ecx [esp+4] +
sub eax edx +
cmp eax 1 +
jz loc_45F574  +
mov [esp+0Ch] eax +
mov [esp+8] edx +
mov [esp+4] ecx +
jmp memcpy  +
***
movzx eax byte ptr [edx] +
mov [ecx] al +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
lea eax [ebp-4Ch] +
lea edx [ebp-18h] +
mov [ebp-54h] eax +
mov [ebp-50h] ecx +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467CF4 +
mov [ebp-2Ch] edx +
mov dword ptr [ebp-28h] offset loc_45F5F3 +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov eax [ebp-50h] +
mov eax [eax] +
mov ebx [eax-0Ch] +
cmp [eax-8] ebx +
ja loc_45F5D8  +
mov eax [ebp-54h] +
mov [esp] eax +
call sub_454F30  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 1 +
call sub_460BE0  +
sub esp 4 +
jmp loc_45F5C5  +
***
add ebp 18h +
mov eax [ebp-44h] +
mov [esp] eax +
call sub_4644C0  +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call loc_464770  +
lea eax [ebp-4Ch] +
mov [ebp-54h] eax +
jmp loc_45F5C5  +
***
push edi  +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_C] +
mov edi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_24] eax +
call sub_460CD0  +
sub esp 0Ch +
test ebx ebx +
jz loc_45F6F5  +
add edi [esi] +
cmp ebx 1 +
jz loc_45F701  +
mov eax [ebp+arg_8] +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_24] eax +
call memcpy  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_8] +
movzx eax byte ptr [eax] +
mov [edi] al +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
movsx eax byte ptr [esp+8] +
mov [esp+8] eax +
jmp sub_45F270  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov esi [esp+20h] +
cmp esi [eax-0Ch] +
jnb loc_45F75A  +
mov edx [eax-4] +
test edx edx +
js loc_45F750  +
call sub_45F230  +
mov eax [ebx] +
add esp 14h +
add eax esi +
pop ebx  +
pop esi  +
retn 4  +
***
mov dword ptr [esp] offset aBasic_stringAt +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 54h +
lea esi [esp+1Ch] +
mov [esp] esi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CE0 +
call sub_454ED0  +
mov eax [ebx] +
mov edx [eax-4] +
test edx edx +
js loc_45F7AD  +
mov ecx ebx +
mov dword ptr [esp+20h] 0 +
call sub_45F230  +
mov eax [ebx] +
mov ebx [eax-0Ch] +
mov [esp] esi +
add ebx eax +
call sub_454F30  +
add esp 54h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
call sub_4640C0  +
add esp 1Ch +
retn 4  +
***
mov eax 0FFFFFFFFh +
xadd [ecx+8] eax +
test eax eax +
jle loc_45F801  +
retn 4  +
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
call sub_4640C0  +
add esp 1Ch +
retn 4  +
***
mov eax [ecx+8] +
push ebp  +
mov ebp esp +
test eax eax +
js loc_45F8A6  +
add dword ptr [ecx+8] 1 +
leave   +
lea eax [ecx+0Ch] +
retn 8  +
***
mov dword ptr [ebp+0Ch] 0 +
leave   +
jmp sub_45F8C0  +
***
push ebx  +
mov ebx ecx +
sub esp 10h +
mov edx [ecx+4] +
mov eax [esp+10h+arg_4] +
mov ecx [esp+10h+arg_0] +
add eax [ebx] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_10] eax +
call sub_45F940  +
mov edx [ebx] +
test edx edx +
mov esi eax +
lea eax [eax+0Ch] +
jz loc_45F90F  +
cmp edx 1 +
lea edi [esi+0Ch] +
jz loc_45F925  +
lea eax [ebx+0Ch] +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] edi +
call memcpy  +
mov edx [ebx] +
mov eax edi +
mov dword ptr [esi+8] 0 +
mov [esi] edx +
mov byte ptr [eax+edx] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
mov eax edi +
mov edx [ebx] +
jmp loc_45F90F  +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
cmp ebx 3FFFFFFCh +
ja loc_45F9A7  +
cmp ebx eax +
lea edx [ebx+0Dh] +
jbe loc_45F990  +
lea edx [eax+eax] +
cmp ebx edx +
cmovb ebx edx +
lea edx [ebx+1Dh] +
cmp edx 1000h +
jbe loc_45F98D  +
cmp eax ebx +
jnb loc_45F98D  +
lea eax [ebx+1000h] +
and edx 0FFFh +
sub eax edx +
mov ebx 3FFFFFFCh +
cmp eax 3FFFFFFCh +
cmovbe ebx eax +
lea edx [ebx+0Dh] +
mov [esp+18h+var_18] edx +
call loc_464170  +
mov [eax+4] ebx +
mov dword ptr [eax+8] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] offset aBasic_string_s +
call loc_463570  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4 +
mov eax [ecx] +
mov edx [eax-0Ch] +
lea esi [edx-1] +
mov edx [eax-4] +
test edx edx +
js loc_45F9DD  +
call sub_45F230  +
mov eax [ebx] +
add esp 4 +
add eax esi +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 50h +
mov ebx [esp+60h] +
lea edi [esp+1Ch] +
mov [esp] edi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CDC +
call sub_454ED0  +
mov edx [ebx] +
mov eax [edx-4] +
test eax eax +
js loc_45FA32  +
mov ecx ebx +
mov dword ptr [esp+20h] 0 +
call sub_45F230  +
mov edx [ebx] +
mov [esp] edi +
mov [esi] edx +
call sub_454F30  +
add esp 50h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
mov edx [ecx] +
push ebx  +
mov ebx [esp+8] +
mov eax [edx-4] +
test eax eax +
js loc_45FA75  +
mov eax [ebx] +
cmp dword ptr [eax-4] 0 +
jns loc_45FA6D  +
mov dword ptr [eax-4] 0 +
mov [ecx] eax +
mov [ebx] edx +
pop ebx  +
retn 4  +
***
mov dword ptr [edx-4] 0 +
jmp loc_45FA5E  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 50h +
lea edi [esp+1Ch] +
mov [esp] edi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CD8 +
call sub_454ED0  +
mov ebx [esi] +
mov eax [ebx-4] +
test eax eax +
js loc_45FABE  +
mov ecx esi +
mov dword ptr [esp+20h] 0 +
call sub_45F230  +
mov ebx [esi] +
mov [esp] edi +
call sub_454F30  +
add esp 50h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 50h +
lea ebx [ebp-3Ch] +
mov [esp] ebx +
mov dword ptr [ebp-24h] offset sub_465090 +
mov dword ptr [ebp-20h] offset dword_467CE8 +
call sub_454ED0  +
mov eax [esi] +
mov ecx esi +
mov eax [eax-0Ch] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp] 0 +
mov dword ptr [ebp-38h] 0 +
mov [esp+4] eax +
call sub_460CD0  +
sub esp 0Ch +
mov [esp] ebx +
call sub_454F30  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
sub ebx [ecx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_460CD0  +
mov eax [esi] +
mov dword ptr [eax-4] 0FFFFFFFFh +
add eax ebx +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
sub edx eax +
jnz loc_45FB90  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
sub eax [ecx] +
mov ebx ecx +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] eax +
mov esi eax +
call sub_460CD0  +
mov eax [ebx] +
mov dword ptr [eax-4] 0FFFFFFFFh +
add eax esi +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [ebx] +
mov edx [ebp+8] +
mov ecx [ebp+0Ch] +
mov eax [eax-0Ch] +
mov esi eax +
sub esi edx +
cmp esi ecx +
cmovbe ecx esi +
cmp edx eax +
ja loc_45FC16  +
mov [esp+4] ecx +
mov ecx ebx +
mov dword ptr [esp+8] 0 +
mov [esp] edx +
call sub_460CD0  +
mov eax ebx +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esp] offset aBasic_stringEr +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 8 +
mov eax [ecx] +
mov edx [eax-4] +
test edx edx +
js loc_45FC46  +
call sub_45F230  +
mov eax [ebx] +
add esp 8 +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov esi [ebp+8] +
mov [esp] esi +
call strlen  +
test eax eax +
jz loc_45FC7A  +
mov [esp+4] eax +
mov ecx ebx +
mov [esp] esi +
call sub_45FCC0  +
sub esp 8 +
lea esp [ebp-8] +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_45FCB2  +
mov eax [ebp+8] +
mov [esp+4] edx +
mov [esp] eax +
call sub_45FCC0  +
sub esp 8 +
mov eax ebx +
mov ebx [ebp-4] +
leave   +
retn 8  +
***
push edi  +
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ecx-0Ch] +
test edx edx +
jz loc_45FDF8  +
mov eax [ebx] +
mov esi [eax-0Ch] +
lea edi [esi+edx] +
cmp edi [eax-8] +
jbe loc_45FE04  +
mov ecx ebx +
mov [esp+28h+var_28] edi +
mov [ebp+var_1C] edx +
call sub_460BE0  +
mov eax [ebp+arg_0] +
mov edx [ebp+var_1C] +
mov ecx [eax] +
mov eax [ebx] +
sub esp 4 +
mov esi [eax-0Ch] +
add eax esi +
cmp edx 1 +
jz loc_45FE10  +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
mov eax [ebx] +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] edi +
mov byte ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
cmp dword ptr [eax-4] 0 +
jg loc_45FDB4  +
jmp loc_45FDD1  +
movzx edx byte ptr [ecx] +
mov [eax] dl +
jmp loc_45FDE8  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+8] +
mov eax [ebp+10h] +
mov edx [edi] +
mov esi [edx-0Ch] +
cmp [ebp+0Ch] esi +
ja loc_45FEB7  +
sub esi [ebp+0Ch] +
mov ebx ecx +
cmp esi eax +
cmova esi eax +
test esi esi +
jz loc_45FE95  +
mov eax [ecx] +
mov ecx [eax-0Ch] +
lea edi [esi+ecx] +
cmp edi [eax-8] +
jbe loc_45FEA1  +
mov ecx ebx +
mov [esp] edi +
call sub_460BE0  +
mov eax [ebp+8] +
mov edx [eax] +
mov eax [ebx] +
sub esp 4 +
mov ecx [eax-0Ch] +
add edx [ebp+0Ch] +
add eax ecx +
cmp esi 1 +
jz loc_45FEB0  +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [ebx] +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] edi +
mov byte ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
cmp dword ptr [eax-4] 0 +
jg loc_45FE54  +
jmp loc_45FE6B  +
***
movzx edx byte ptr [edx] +
mov [eax] dl +
jmp loc_45FE85  +
***
mov dword ptr [esp] offset aBasic_stringAp +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
test eax eax +
jz loc_45FEF2  +
mov [esp+4] eax +
mov [esp] edx +
call sub_45FCC0  +
sub esp 8 +
mov eax ebx +
mov ebx [ebp-4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
test edx edx +
jz loc_45FF25  +
movsx eax al +
mov [esp+4] eax +
mov [esp] edx +
call sub_45FF30  +
sub esp 8 +
mov eax ebx +
mov ebx [ebp-4] +
leave   +
retn 8  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx 3FFFFFFCh +
sub esp 1Ch +
mov eax [ecx] +
mov edi [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov ecx [eax-0Ch] +
sub ebx ecx +
cmp ebx edi +
jb loc_45FFB8  +
lea ebx [edi+ecx] +
cmp ebx [eax-8] +
jbe loc_45FFA7  +
mov ecx esi +
mov [esp+28h+var_28] ebx +
mov [ebp+var_1C] edx +
call sub_460BE0  +
mov eax [esi] +
mov edx [ebp+var_1C] +
mov ecx [eax-0Ch] +
sub esp 4 +
add eax ecx +
cmp edi 1 +
jz loc_45FFB4  +
movsx edx dl +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call memset  +
mov eax [esi] +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ebx +
mov byte ptr [eax+ebx] 0 +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
cmp dword ptr [eax-4] 0 +
jg loc_45FF59  +
add eax ecx +
cmp edi 1 +
jnz loc_45FF78  +
mov [eax] dl +
jmp loc_45FF8B  +
mov [esp+28h+var_28] offset aBasic_stringAp +
call loc_463570  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov eax ecx +
mov ecx [ecx] +
mov ebx [esp+2Ch+var_24] +
mov edx [ecx-4] +
test edx edx +
js loc_45FFF7  +
mov edx [ebx] +
cmp dword ptr [edx-4] 0 +
jns loc_45FFEF  +
mov dword ptr [edx-4] 0 +
mov [eax] edx +
mov [ebx] ecx +
pop ebx  +
retn 4  +
mov dword ptr [ecx-4] 0 +
jmp loc_45FFE0  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_460030  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [ebp+arg_4] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
cmp ebx 3FFFFFFCh +
mov esi [edx-0Ch] +
ja loc_4600FC  +
cmp eax edx +
jnb loc_460080  +
mov [esp+38h+var_2C] ebx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_38] 0 +
call sub_45F6B0  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
lea edi [edx+esi] +
cmp eax edi +
ja loc_460054  +
mov edi [edx-4] +
test edi edi +
jg loc_460054  +
mov esi eax +
sub esi edx +
cmp ebx esi +
ja loc_4600D0  +
cmp ebx 1 +
jz loc_4600F3  +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] eax +
mov [ebp+var_1C] ecx +
call memcpy  +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
mov dword ptr [edx-4] 0 +
mov eax ecx +
mov [edx-0Ch] ebx +
mov byte ptr [edx+ebx] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
test esi esi +
jz loc_4600B3  +
cmp ebx 1 +
jz loc_4600F3  +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] eax +
mov [ebp+var_1C] ecx +
call memmove  +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
jmp loc_4600B3  +
movzx eax byte ptr [eax] +
mov [edx] al +
mov edx [ecx] +
jmp loc_4600B3  +
mov [esp+38h+var_38] offset aBasic_stringAs +
call loc_463570  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 20h +
mov eax [ebp+arg_0] +
mov esi [ebx] +
mov eax [eax] +
lea edx [esi-0Ch] +
lea ecx [eax-0Ch] +
cmp ecx edx +
jz loc_46014B  +
mov edx [eax-4] +
test edx edx +
js loc_460156  +
add dword ptr [eax-4] 1 +
mov esi eax +
mov edx [ebx] +
mov ecx 0FFFFFFFFh +
xadd [edx-4] ecx +
test ecx ecx +
jle loc_460170  +
mov [ebx] esi +
lea esp [ebp-8] +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
lea eax [ebp+var_C+3] +
mov [esp+64h+var_60] 0 +
mov [esp+64h+var_64] eax +
call sub_45F8C0  +
sub esp 8 +
mov esi eax +
jmp loc_460139  +
sub edx 0Ch +
mov [esp+64h+var_64] edx +
call sub_4640C0  +
mov [ebx] esi +
jmp loc_46014B  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
mov ebx [ebp+10h] +
mov edi [edx] +
mov edx [edi-0Ch] +
mov esi edx +
sub esi eax +
cmp esi ebx +
cmovbe ebx esi +
cmp eax edx +
ja loc_4601BF  +
add eax edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_460030  +
sub esp 8 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_stringAs +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
leave   +
jmp sub_460030  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx] +
movsx edx byte ptr [ebp+0Ch] +
mov eax [eax-0Ch] +
mov [esp+0Ch] edx +
mov edx [ebp+8] +
mov dword ptr [esp] 0 +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_45F620  +
sub esp 10h +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
sub eax [ecx] +
mov [ebp+8] eax +
leave   +
jmp sub_460310  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
movsx eax byte ptr [ebp+0Ch] +
sub ebx [ecx] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
mov [esp+0Ch] eax +
call sub_45F620  +
mov eax [esi] +
mov dword ptr [eax-4] 0FFFFFFFFh +
add eax ebx +
sub esp 10h +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
movsx edx byte ptr [ebp+10h] +
mov eax [ebp+8] +
sub eax [ecx] +
mov dword ptr [esp+4] 0 +
mov [esp+0Ch] edx +
mov edx [ebp+0Ch] +
mov [esp] eax +
mov [esp+8] edx +
call sub_45F620  +
sub esp 10h +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+0Ch] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp] eax +
call sub_460310  +
sub esp 0Ch +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov eax [esi] +
mov ecx [ebp+arg_4] +
mov ebx [ebp+arg_8] +
mov edi [eax-0Ch] +
cmp [ebp+arg_0] edi +
ja loc_460468  +
mov edx 3FFFFFFCh +
sub edx edi +
cmp ebx edx +
ja loc_460474  +
cmp ecx eax +
jnb loc_460370  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] ecx +
mov ecx esi +
mov [esp+38h+var_2C] ebx +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] eax +
call sub_45F6B0  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
add edi eax +
cmp ecx edi +
ja loc_460342  +
mov edx [eax-4] +
test edx edx +
jg loc_460342  +
mov edi ecx +
mov ecx esi +
sub edi eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] eax +
call sub_460CD0  +
mov eax [esi] +
lea ecx [eax+edi] +
add eax [ebp+arg_0] +
sub esp 0Ch +
mov edi eax +
lea eax [ecx+ebx] +
cmp edi eax +
jb loc_4603C4  +
cmp ebx 1 +
jnz loc_4603D6  +
movzx eax byte ptr [ecx] +
mov [edi] al +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
cmp ecx edi +
jb loc_4603F2  +
cmp ebx 1 +
jnz loc_460420  +
movzx eax byte ptr [eax] +
mov [edi] al +
mov eax esi +
jmp loc_460362  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] ecx +
call memcpy  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov edx edi +
sub edx ecx +
cmp edx 1 +
jnz loc_460450  +
movzx eax byte ptr [ecx] +
mov [edi] al +
mov eax ebx +
add ebx edi +
sub eax edx +
add edi edx +
cmp eax 1 +
jnz loc_460437  +
movzx eax byte ptr [ebx] +
mov [edi] al +
mov eax esi +
jmp loc_460362  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call memcpy  +
mov eax esi +
jmp loc_460362  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] edi +
call memcpy  +
mov eax esi +
jmp loc_460362  +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] ecx +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] edx +
call memcpy  +
mov edx [ebp+var_1C] +
jmp loc_460400  +
mov [esp+38h+var_38] offset aBasic_stringIn +
call loc_463670  +
mov [esp+38h+var_38] offset aBasic_stringIn +
call loc_463570  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp+54h+var_50] eax +
mov eax [ebp+arg_0] +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_54] eax +
call sub_460310  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
mov ebx [ebp+14h] +
mov edi [edx] +
mov edx [edi-0Ch] +
mov esi edx +
sub esi eax +
cmp esi ebx +
cmovbe ebx esi +
cmp eax edx +
ja loc_4604F6  +
add eax edi +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp+8] ebx +
mov [esp] eax +
call sub_460310  +
sub esp 0Ch +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov dword ptr [esp] offset aBasic_stringIn +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov edx [ecx] +
mov eax [ebp+8] +
movsx ebx byte ptr [ebp+10h] +
cmp eax [edx-0Ch] +
ja loc_46054A  +
mov edx [ebp+0Ch] +
mov [esp+0Ch] ebx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+8] edx +
call sub_45F620  +
mov ebx [ebp-4] +
sub esp 10h +
leave   +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_stringIn +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 50h +
mov ebx [esp+60h] +
lea edi [esp+1Ch] +
mov [esp] edi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CE4 +
call sub_454ED0  +
mov edx [ebx] +
mov eax [edx-4] +
test eax eax +
js loc_4605A2  +
mov ecx ebx +
mov dword ptr [esp+20h] 0 +
call sub_45F230  +
mov edx [ebx] +
add edx [edx-0Ch] +
mov [esp] edi +
mov [esi] edx +
call sub_454F30  +
add esp 50h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
push ebx  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov edx [ecx] +
mov ebx [ebp+arg_4] +
cmp eax 3FFFFFFCh +
mov edx [edx-0Ch] +
ja loc_460642  +
cmp eax edx +
jbe loc_460608  +
sub eax edx +
jnz loc_460630  +
mov ebx [ebp+var_4] +
leave   +
retn 8  +
jnb loc_460601  +
sub edx eax +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_460CD0  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 8  +
movsx ebx bl +
mov [ebp+arg_4] ebx +
mov ebx [ebp+var_4] +
mov [ebp+arg_0] eax +
leave   +
jmp sub_45FF30  +
mov [esp+18h+var_18] offset aBasic_stringRe +
call loc_463570  +
nop   +
nop   +
mov eax [esp+18h+var_C] +
mov edx [esp+18h+var_14] +
mov ecx [esp+18h+var_10] +
cmp eax 1 +
jz loc_460672  +
mov [esp+18h+var_C] eax +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] edx +
jmp memcpy  +
movzx eax byte ptr [ecx] +
mov [edx] al +
retn   +
***
mov eax [esp+4] +
mov [ecx] eax +
retn 4  +
***
mov eax [ecx] +
mov eax [eax-4] +
test eax eax +
js locret_4606A0  +
jmp sub_45F230  +
***
retn   +
***
mov eax [esp+0Ch] +
mov edx [esp+4] +
mov ecx [esp+8] +
cmp eax 1 +
jz loc_4606D2  +
mov [esp+0Ch] eax +
mov [esp+8] ecx +
mov [esp+4] edx +
jmp memmove  +
***
movzx eax byte ptr [ecx] +
mov [edx] al +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
sub [ebp+14h] ebx +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+10h] +
mov ebx [ebp+8] +
mov [esp] esi +
call strlen  +
mov ecx edi +
mov [esp+8] esi +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
sub eax ebx +
sub ebx [edi] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4608E0  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
sub [ebp+14h] ebx +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+10h] +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
mov ebx [ebx] +
sub eax edx +
sub edx [ecx] +
mov esi [ebx-0Ch] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov [esp] edx +
mov [esp+0Ch] esi +
call sub_4608E0  +
sub esp 10h +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
sub [ebp+14h] ebx +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
sub [ebp+14h] ebx +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp-4] +
sub eax edx +
sub edx [ecx] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_4608E0  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
push ebx  +
movsx ebx byte ptr [ebp+14h] +
sub eax edx +
sub edx [ecx] +
mov [ebp+14h] ebx +
mov ebx [ebp-4] +
mov [ebp+0Ch] eax +
mov [ebp+8] edx +
leave   +
jmp sub_45F620  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+10h] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp+8] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
call sub_4608E0  +
sub esp 10h +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
sub esp 68h +
lea edx [ebp+var_8] +
mov [ebp+var_2C] edx +
lea edx [ebp+var_4C] +
mov [ebp+var_50] ecx +
mov [ebp+var_34] offset sub_465090 +
mov [ebp+var_30] offset word_467D16 +
mov [ebp+var_28] offset loc_460AD0 +
mov [ebp+var_24] esp +
mov [esp+68h+var_68] edx +
call sub_454ED0  +
mov eax [ebp+var_50] +
mov eax [eax] +
mov edx [eax-0Ch] +
cmp [ebp+arg_0] edx +
ja loc_460ABD  +
mov ecx edx +
sub ecx [ebp+arg_0] +
cmp ecx [ebp+arg_4] +
cmova ecx [ebp+arg_4] +
mov [ebp+var_54] ecx +
sub ecx edx +
add ecx 3FFFFFFCh +
cmp [ebp+arg_C] ecx +
ja loc_460AAA  +
cmp [ebp+arg_8] eax +
jnb loc_460990  +
mov eax [ebp+arg_C] +
mov [esp+68h+var_5C] eax +
mov eax [ebp+arg_8] +
mov [esp+68h+var_60] eax +
mov eax [ebp+var_54] +
mov [esp+68h+var_64] eax +
mov eax [ebp+arg_0] +
mov [esp+68h+var_68] eax +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_45F6B0  +
sub esp 10h +
mov [ebp+var_50] eax +
lea eax [ebp+var_4C] +
mov [esp+68h+var_68] eax +
call sub_454F30  +
mov eax [ebp+var_50] +
leave   +
retn 10h  +
add edx eax +
cmp [ebp+arg_8] edx +
ja loc_460948  +
mov edx [eax-4] +
test edx edx +
jg loc_460948  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_8] +
add ecx [ebp+arg_C] +
add edx eax +
cmp ecx edx +
ja loc_4609F5  +
mov edx [ebp+arg_8] +
sub edx eax +
mov [ebp+var_58] edx +
mov eax [ebp+arg_C] +
mov [esp+68h+var_60] eax +
mov eax [ebp+var_54] +
mov [esp+68h+var_64] eax +
mov eax [ebp+arg_0] +
mov [esp+68h+var_68] eax +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_460CD0  +
mov eax [ebp+var_50] +
mov edx [ebp+var_58] +
mov eax [eax] +
sub esp 0Ch +
add edx eax +
add eax [ebp+arg_0] +
cmp [ebp+arg_C] 1 +
jnz loc_460A17  +
movzx edx byte ptr [edx] +
mov [eax] dl +
jmp loc_460978  +
mov edx [ebp+var_54] +
add edx [ebp+arg_0] +
add edx eax +
cmp [ebp+arg_8] edx +
jb loc_460A30  +
mov edx [ebp+arg_8] +
sub edx eax +
mov eax [ebp+arg_C] +
add eax edx +
mov [ebp+var_58] eax +
mov eax [ebp+var_54] +
sub [ebp+var_58] eax +
jmp loc_4609B5  +
mov ecx [ebp+arg_C] +
mov [esp+68h+var_64] edx +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_60] ecx +
call memcpy  +
jmp loc_460978  +
lea eax [ebp-9] +
mov [esp+68h+var_64] ecx +
mov byte ptr [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] eax +
mov eax [ebp+arg_8] +
mov [esp+68h+var_68] eax +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_45F350  +
mov edx [ebp+arg_C] +
mov [esp+68h+var_5C] edx +
mov [ebp+var_58] eax +
mov [esp+68h+var_60] eax +
mov ecx [ebp+var_54] +
mov [esp+68h+var_64] ecx +
mov ecx [ebp+arg_0] +
mov [esp+68h+var_68] ecx +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 1 +
call sub_45F6B0  +
mov edx [ebp+var_58] +
sub esp 10h +
mov [ebp+var_50] eax +
mov eax 0FFFFFFFFh +
xadd [edx-4] eax +
test eax eax +
jg loc_460978  +
mov eax [ebp+var_58] +
sub eax 0Ch +
mov [esp+68h+var_68] eax +
call sub_4640C0  +
jmp loc_460978  +
mov [esp+68h+var_68] offset aBasic_string_1 +
mov [ebp+var_48] 0FFFFFFFFh +
call loc_463570  +
mov [esp+68h+var_68] offset aBasic_string_1 +
mov [ebp+var_48] 0FFFFFFFFh +
call loc_463670  +
add ebp 8 +
mov eax [ebp+var_44] +
mov ecx [ebp+var_58] +
mov [ebp+var_50] eax +
lea eax [ebp-9] +
sub ecx 0Ch +
mov [esp+68h+var_68] eax +
call sub_45F7F0  +
push ecx  +
mov eax [ebp+var_50] +
mov [esp+68h+var_68] eax +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov edx [eax-0Ch] +
mov [esp+84h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+84h+var_78] edx +
mov [esp+84h+var_80] eax +
mov eax [ebp+arg_0] +
mov [esp+84h+var_84] eax +
call sub_4608E0  +
sub esp 10h +
leave   +
retn 0Ch  +
***
add eax edi +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+0Ch] ebx +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
call sub_4608E0  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov [ebp+14h] edi +
mov [ebp+10h] esi +
mov [ebp+0Ch] ebx +
mov [ebp+8] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45F620  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 20h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
cmp edx [eax-8] +
jz loc_460C30  +
mov esi [eax-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp+var_A+1] +
mov [esp+28h+var_28] eax +
cmp edx esi +
cmovb edx esi +
sub edx esi +
mov [esp+28h+var_24] edx +
call sub_45F8C0  +
mov edx [ebx] +
mov ecx 0FFFFFFFFh +
sub esp 8 +
xadd [edx-4] ecx +
test ecx ecx +
jle loc_460C40  +
mov [ebx] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [eax-4] +
test ecx ecx +
jg loc_460BF4  +
jmp loc_460C25  +
sub edx 0Ch +
mov [esp+28h+var_28] edx +
mov [ebp+var_1C] eax +
call sub_4640C0  +
mov eax [ebp+var_1C] +
jmp loc_460C23  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx] +
mov eax [eax-0Ch] +
lea edx [eax-1] +
cmp edx eax +
ja loc_460C8F  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call sub_460CD0  +
sub esp 0Ch +
leave   +
retn   +
***
mov dword ptr [esp] offset aBasic_stringEr +
call loc_463670  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+8] +
mov edx [esp+4] +
mov ecx [esp+0Ch] +
cmp eax 1 +
jz loc_460CC5  +
movsx ecx cl +
mov [esp+0Ch] eax +
mov [esp+8] ecx +
mov [esp+4] edx +
jmp memset  +
***
mov [edx] cl +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx] +
mov ebp [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_0] +
mov esi [eax-0Ch] +
mov edx [eax-8] +
sub ebx ebp +
add ebx esi +
sub esi edi +
sub esi ebp +
cmp ebx edx +
ja loc_460D01  +
cmp dword ptr [eax-4] 0 +
jle loc_460D91  +
lea eax [esp+3Ch+var_D] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_28] ecx +
call sub_45F940  +
test edi edi +
mov ecx [esp+3Ch+var_28] +
lea edx [eax+0Ch] +
jz loc_460D48  +
mov edx [ecx] +
cmp edi 1 +
mov [esp+3Ch+var_24] edx +
lea edx [eax+0Ch] +
mov [esp+3Ch+var_28] edx +
jnz loc_460DF5  +
mov edx [esp+3Ch+var_24] +
movzx edx byte ptr [edx] +
mov [eax+0Ch] dl +
mov edx [esp+3Ch+var_28] +
test esi esi +
jz loc_460D61  +
add ebp edi +
add edi [esp+3Ch+arg_8] +
add ebp [ecx] +
add edi edx +
cmp esi 1 +
jnz loc_460DD0  +
movzx eax byte ptr [ebp+0] +
mov [edi] al +
mov eax [ecx] +
mov esi 0FFFFFFFFh +
xadd [eax-4] esi +
test esi esi +
jle loc_460E20  +
mov [ecx] edx +
mov eax edx +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ebx +
mov byte ptr [eax+ebx] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
cmp ebp [esp+3Ch+arg_8] +
jz loc_460D79  +
test esi esi +
jz loc_460D79  +
add ebp edi +
add edi [esp+3Ch+arg_8] +
add ebp eax +
add edi eax +
cmp esi 1 +
jz loc_460DC6  +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] ecx +
call memmove  +
mov ecx [esp+3Ch+var_28] +
mov eax [ecx] +
jmp loc_460D79  +
movzx eax byte ptr [ebp+0] +
mov [edi] al +
mov eax [ecx] +
jmp loc_460D79  +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] edx +
call memcpy  +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_460D61  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_28] +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
mov edx [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_20] +
jmp loc_460D48  +
sub eax 0Ch +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] edx +
call sub_4640C0  +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_460D75  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [ecx] +
mov edi [ebp+8] +
mov edx [eax-0Ch] +
lea ebx [edx+1] +
cmp ebx [eax-8] +
ja loc_460E62  +
mov ecx [eax-4] +
test ecx ecx +
jle loc_460E74  +
mov [esp] ebx +
mov ecx esi +
call sub_460BE0  +
mov eax [esi] +
mov edx [eax-0Ch] +
sub esp 4 +
mov ecx edi +
mov [eax+edx] cl +
mov eax [esi] +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ebx +
mov byte ptr [eax+ebx] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 60h +
mov ebx [esp+70h] +
lea esi [esp+1Ch] +
mov [esp] esi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CF0 +
call sub_454ED0  +
mov eax [ebx] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
mov dword ptr [esp+20h] 0 +
mov [edi] eax +
lea eax [esp+5Fh] +
mov [esp+8] eax +
call sub_45F270  +
mov [ebx] eax +
mov [esp] esi +
call sub_454F30  +
add esp 60h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
push ebx  +
mov esi ecx +
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_460F2E  +
mov [esp+14h+var_14] ebx +
call strlen  +
add eax ebx +
mov edx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_C] edx +
call sub_45F350  +
mov [esi] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov edx [esp+24h] +
mov [esp] eax +
add edx eax +
mov [esp+4] edx +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
mov [esp+8] eax +
call sub_45F270  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov edx [eax-4] +
test edx edx +
js loc_460FF3  +
add dword ptr [eax-4] 1 +
mov [ebx] eax +
mov ebx [ebp+var_4] +
leave   +
retn 4  +
lea ecx [eax-0Ch] +
lea eax [ebp+var_A+1] +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] eax +
call sub_45F8C0  +
mov [ebx] eax +
sub esp 8 +
mov ebx [ebp+var_4] +
leave   +
retn 4  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov edx [edx] +
mov ebx [edx-0Ch] +
mov edi ebx +
sub edi eax +
cmp edi esi +
cmovbe esi edi +
add esi eax +
add esi edx +
cmp eax ebx +
ja loc_461073  +
mov ebp ecx +
add eax edx +
lea ecx [esp+2Ch+var_D] +
mov [esp+2Ch+var_28] esi +
mov byte ptr [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_45F400  +
mov [ebp+0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+2Ch+var_2C] offset aBasic_stringBa +
call loc_463670  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+58h+var_28] +
mov eax [esp+58h+var_24] +
mov esi [esp+58h+var_20] +
mov edx [edx] +
mov ebx [edx-0Ch] +
mov edi ebx +
sub edi eax +
cmp edi esi +
cmovbe esi edi +
add esi eax +
add esi edx +
cmp eax ebx +
ja loc_4610D3  +
mov ebp ecx +
mov ecx [esp+58h+var_1C] +
add eax edx +
mov [esp+58h+var_54] esi +
mov byte ptr [esp+58h+var_4C] 0 +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_50] ecx +
call sub_45F400  +
mov [ebp+0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+58h+var_58] offset aBasic_stringBa +
call loc_463670  +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov edx [esp+74h+var_4C] +
mov eax [esp+74h+var_54] +
mov [esp+74h+var_68] 0 +
mov [esp+74h+var_6C] edx +
mov edx [esp+74h+var_50] +
mov [esp+74h+var_74] eax +
add edx eax +
mov [esp+74h+var_70] edx +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov [esp+8] eax +
movsx eax byte ptr [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F270  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 28h +
lea eax [esp+1Fh] +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_45F270  +
mov [ebx] eax +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F2E0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F400  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 60h +
mov ebx [esp+70h] +
lea esi [esp+1Ch] +
mov [esp] esi +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CEC +
call sub_454ED0  +
mov eax [ebx] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
mov dword ptr [esp+20h] 0 +
mov [edi] eax +
lea eax [esp+5Fh] +
mov [esp+8] eax +
call sub_45F270  +
mov [ebx] eax +
mov [esp] esi +
call sub_454F30  +
add esp 60h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
push esi  +
mov eax 0FFFFFFFFh +
push ebx  +
mov esi ecx +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jz loc_46129E  +
mov [esp] ebx +
call strlen  +
add eax ebx +
mov edx [esp+24h] +
mov [esp] ebx +
mov byte ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_45F350  +
mov [esi] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov edx [esp+24h] +
mov [esp] eax +
add edx eax +
mov [esp+4] edx +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
mov [esp+8] eax +
call sub_45F270  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ebp+8] +
mov eax [eax] +
mov edx [eax-4] +
test edx edx +
js loc_461363  +
add dword ptr [eax-4] 1 +
mov [ebx] eax +
mov ebx [ebp-4] +
leave   +
retn 4  +
***
lea ecx [eax-0Ch] +
lea eax [ebp-9] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_45F8C0  +
mov [ebx] eax +
sub esp 8 +
mov ebx [ebp-4] +
leave   +
retn 4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov eax [esp+44h] +
mov esi [esp+48h] +
mov edx [edx] +
mov ebx [edx-0Ch] +
mov edi ebx +
sub edi eax +
cmp edi esi +
cmovbe esi edi +
add esi eax +
add esi edx +
cmp eax ebx +
ja loc_4613E3  +
mov ebp ecx +
add eax edx +
lea ecx [esp+1Fh] +
mov [esp+4] esi +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp] eax +
call sub_45F400  +
mov [ebp+0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] offset aBasic_stringBa +
call loc_463670  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov eax [esp+34h] +
mov esi [esp+38h] +
mov edx [edx] +
mov ebx [edx-0Ch] +
mov edi ebx +
sub edi eax +
cmp edi esi +
cmovbe esi edi +
add esi eax +
add esi edx +
cmp eax ebx +
ja loc_461443  +
mov ebp ecx +
mov ecx [esp+3Ch] +
add eax edx +
mov [esp+4] esi +
mov byte ptr [esp+0Ch] 0 +
mov [esp] eax +
mov [esp+8] ecx +
call sub_45F400  +
mov [ebp+0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov dword ptr [esp] offset aBasic_stringBa +
call loc_463670  +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov edx [esp+24h] +
mov [esp] eax +
add edx eax +
mov [esp+4] edx +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov [esp+8] eax +
movsx eax byte ptr [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F270  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 28h +
lea eax [esp+1Fh] +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_45F270  +
mov [ebx] eax +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F2E0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F350  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+28h] +
mov byte ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45F400  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+8] +
mov [esp] ebx +
call strlen  +
mov ecx esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_460030  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
leave   +
jmp loc_460110  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
call sub_460030  +
mov eax ebx +
mov ebx [ebp-4] +
sub esp 8 +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
movsx edx byte ptr [ebp+8] +
mov eax [eax-0Ch] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] 0 +
mov [esp+4] eax +
call sub_45F620  +
mov eax ebx +
mov ebx [ebp-4] +
sub esp 10h +
leave   +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 8 +
mov eax [ecx] +
mov edx [eax-4] +
test edx edx +
js loc_4616D6  +
call sub_45F230  +
mov eax [ebx] +
add eax [esp+10h] +
add esp 8 +
pop ebx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov esi [ebp+8] +
mov [esp] esi +
call strlen  +
test eax eax +
jz loc_46171A  +
mov [esp+4] eax +
mov ecx ebx +
mov [esp] esi +
call sub_45FCC0  +
sub esp 8 +
lea esp [ebp-8] +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
leave   +
jmp sub_45FD90  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
test eax eax +
jz loc_461762  +
mov [esp+4] eax +
mov [esp] edx +
call sub_45FCC0  +
sub esp 8 +
mov eax ebx +
mov ebx [ebp-4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [ecx] +
mov edi [ebp+8] +
mov edx [eax-0Ch] +
lea esi [edx+1] +
cmp esi [eax-8] +
ja loc_461792  +
mov ecx [eax-4] +
test ecx ecx +
jle loc_4617A4  +
mov [esp] esi +
mov ecx ebx +
call sub_460BE0  +
mov eax [ebx] +
mov edx [eax-0Ch] +
sub esp 4 +
mov ecx edi +
mov [eax+edx] cl +
mov eax [ebx] +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] esi +
mov byte ptr [eax+esi] 0 +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EDB0 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EDB0 +
jmp sub_462D50  +
***
sub esp 58h +
add ebp 8 +
mov eax [ebp-34h] +
mov ecx [ebp-40h] +
mov [ebp-44h] eax +
call sub_462D50  +
mov eax [ebp-44h] +
mov [esp+0] eax +
mov dword ptr [ebp-38h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
call sub_4618B0  +
mov [esp+1Ch+var_1C] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ecx+4] +
mov dword ptr [ecx] offset off_47EDC8 +
xadd [eax-4] edx +
test edx edx +
jle loc_4618E0  +
mov ecx ebx +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
lea ecx [eax-0Ch] +
lea eax [ebp+var_A+1] +
mov [esp+28h+var_28] eax +
call sub_45F7D0  +
mov ecx ebx +
sub esp 4 +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461D00  +
mov dword ptr [ebx] offset off_47EDE0 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EDE0 +
call sub_461DB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EDE0 +
jmp sub_461DB0  +
***
sub esp 68h +
add ebp 8 +
mov eax [ebp-44h] +
mov edx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Dh] +
mov [esp+0] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp+0] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [ecx] offset off_47EDF8 +
call sub_461DB0  +
mov [esp+1Ch+var_1C] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EDF8 +
jmp sub_461DB0  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461800  +
mov dword ptr [ebx] offset off_47EE10 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EE10 +
call sub_4618B0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EE10 +
jmp sub_4618B0  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EE28 +
call sub_4618B0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EE28 +
jmp sub_4618B0  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461800  +
mov dword ptr [ebx] offset off_47EE40 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EE40 +
call sub_4618B0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EE40 +
jmp sub_4618B0  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461800  +
mov dword ptr [ebx] offset off_47EE58 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EE58 +
call sub_4618B0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EE58 +
jmp sub_4618B0  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EE70 +
call sub_461DB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EE70 +
jmp sub_461DB0  +
***
call eax  +
mov [esp] esi +
mov dword ptr [ebx+4] 0 +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_47ED80 +
add ecx 4 +
jmp loc_461FA0  +
***
sub esp 18h +
lea ecx [ecx+4] +
mov dword ptr [ecx-4] offset off_47ED80 +
call sub_461FB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47ED80 +
add ecx 4 +
jmp sub_461FB0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EF98 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EF98 +
retn   +
***
sub esp 58h +
add ebp 8 +
mov eax [ebp-34h] +
mov ecx [ebp-40h] +
mov [ebp-44h] eax +
call sub_462D50  +
mov eax [ebp-44h] +
mov [esp+0] eax +
mov dword ptr [ebp-38h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
call sub_461DB0  +
mov [esp+1Ch+var_1C] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ecx+4] +
mov dword ptr [ecx] offset off_47EEA0 +
xadd [eax-4] edx +
test edx edx +
jle loc_461DE0  +
mov ecx ebx +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
lea ecx [eax-0Ch] +
lea eax [ebp+var_A+1] +
mov [esp+28h+var_28] eax +
call sub_45F7D0  +
mov ecx ebx +
sub esp 4 +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
mov dword ptr [ecx] offset off_47EEC8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EEC8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EEC8 +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461D00  +
mov dword ptr [ebx] offset off_47EF08 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF08 +
call sub_461DB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF08 +
jmp sub_461DB0  +
***
mov ebx ecx +
sub esp 54h +
lea esi [esp+54h+var_38] +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_20] offset sub_465090 +
mov [esp+54h+var_1C] offset dword_467D78 +
call sub_454ED0  +
mov eax [ebx] +
test eax eax +
jz loc_461EF3  +
sub dword ptr [eax-60h] 1 +
jnz loc_461EF3  +
mov eax [eax-4Ch] +
test eax eax +
jz loc_461EE3  +
mov ecx [ebx] +
mov [esp+54h+var_34] 0 +
call eax  +
mov eax [ebx] +
mov [esp+54h+var_54] eax +
call loc_464900  +
mov dword ptr [ebx] 0 +
mov [esp+54h+var_54] esi +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] 0 +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461D00  +
mov dword ptr [ebx] offset off_47EF20 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF20 +
call sub_461DB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF20 +
jmp sub_461DB0  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_461800  +
mov dword ptr [ebx] offset off_47EF38 +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn 4  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF38 +
call sub_4618B0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF38 +
jmp sub_4618B0  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF50 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF50 +
jmp sub_462D50  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 54h +
lea ebx [esp+1Ch] +
mov [esp] ebx +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D84 +
call sub_454ED0  +
mov [esp] esi +
mov dword ptr [esp+20h] 0 +
call pthread_cond_broadcast  +
test eax eax +
jnz loc_462155  +
mov [esp] ebx +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] eax +
call sub_463770  +
nop   +
nop   +
nop   +
push esi  +
mov esi ecx +
push ebx  +
sub esp 54h +
lea ebx [esp+1Ch] +
mov [esp] ebx +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D80 +
call sub_454ED0  +
mov [esp] esi +
mov dword ptr [esp+20h] 0 +
call pthread_cond_signal  +
test eax eax +
jnz loc_4621A5  +
mov [esp] ebx +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] eax +
call sub_463770  +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov eax [esp+20h] +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call pthread_cond_wait  +
test eax eax +
jnz loc_4621CF  +
add esp 1Ch +
retn 4  +
***
mov [esp] eax +
call sub_463770  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov dword ptr [ecx] 0FFFFFFFFh +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 54h +
lea ebx [esp+1Ch] +
mov [esp] ebx +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D7C +
call sub_454ED0  +
mov [esp] esi +
mov dword ptr [esp+20h] 0 +
call pthread_cond_destroy  +
mov [esp] ebx +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] 0FFFFFFFFh +
mov dword ptr [ecx+4] 0FFFFFFFFh +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 54h +
lea ebx [esp+1Ch] +
mov [esp] ebx +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D88 +
call sub_454ED0  +
mov [esp] esi +
mov dword ptr [esp+20h] 0 +
call pthread_cond_destroy  +
mov [esp] ebx +
call sub_454F30  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ecx+4] +
cmp eax [ecx+8] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
jz loc_462304  +
test eax eax +
jz loc_462300  +
mov edx [eax-4] +
mov [eax] edx +
mov edx [ecx+4] +
lea eax [edx+4] +
mov [ecx+4] eax +
lea eax [edx-4] +
mov esi [esi] +
sub eax ebx +
sar eax 2 +
test eax eax +
jnz loc_4622E3  +
mov [ebx] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
shl eax 2 +
sub edx eax +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edx +
call memmove  +
jmp loc_4622D7  +
xor edx edx +
jmp loc_4622C3  +
mov edx [ecx] +
sub eax edx +
mov edi eax +
sar edi 2 +
test edi edi +
jz loc_4623E2  +
lea eax [edi+edi] +
cmp edi eax +
jbe loc_4623F5  +
mov eax ebx +
mov edi 0FFFFFFFCh +
sub eax edx +
mov edx eax +
sar edx 2 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_14] edx +
call loc_464170  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov ebp eax +
lea eax [ebp+edx*4+0] +
test eax eax +
jz loc_462354  +
mov edx [esi] +
mov [eax] edx +
mov edx [ecx] +
mov eax ebx +
xor esi esi +
sub eax edx +
sar eax 2 +
test eax eax +
jz loc_462382  +
lea esi ds:0[eax*4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_14] ecx +
call memmove  +
mov ecx [esp+2Ch+var_14] +
mov eax [ecx+4] +
lea edx [ebp+esi+4] +
xor esi esi +
sub eax ebx +
sar eax 2 +
test eax eax +
jz loc_4623BB  +
lea esi ds:0[eax*4] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_14] edx +
call memmove  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov eax [ecx] +
add esi edx +
test eax eax +
jz loc_4623D3  +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] ecx +
call sub_4640C0  +
mov ecx [esp+2Ch+var_14] +
add edi ebp +
mov [ecx] ebp +
mov [ecx+4] esi +
mov [ecx+8] edi +
jmp loc_4622D9  +
mov eax ebx +
mov edi 4 +
sub eax edx +
mov edx eax +
sar edx 2 +
jmp loc_46232E  +
cmp eax 3FFFFFFFh +
ja loc_462320  +
mov ebp ebx +
sub ebp edx +
mov edx ebp +
xor ebp ebp +
shl edi 3 +
sar edx 2 +
test eax eax +
jz loc_462348  +
jmp loc_46232E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ecx+4] +
cmp eax [ecx+8] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
jz loc_462484  +
test eax eax +
jz loc_462480  +
mov edx [eax-4] +
mov [eax] edx +
mov edx [ecx+4] +
lea eax [edx+4] +
mov [ecx+4] eax +
lea eax [edx-4] +
mov esi [esi] +
sub eax ebx +
sar eax 2 +
test eax eax +
jnz loc_462463  +
mov [ebx] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
shl eax 2 +
sub edx eax +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edx +
call memmove  +
jmp loc_462457  +
xor edx edx +
jmp loc_462443  +
mov edx [ecx] +
sub eax edx +
mov edi eax +
sar edi 2 +
test edi edi +
jz loc_462562  +
lea eax [edi+edi] +
cmp edi eax +
jbe loc_462575  +
mov eax ebx +
mov edi 0FFFFFFFCh +
sub eax edx +
mov edx eax +
sar edx 2 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_14] edx +
call loc_464170  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov ebp eax +
lea eax [ebp+edx*4+0] +
test eax eax +
jz loc_4624D4  +
mov edx [esi] +
mov [eax] edx +
mov edx [ecx] +
mov eax ebx +
xor esi esi +
sub eax edx +
sar eax 2 +
test eax eax +
jz loc_462502  +
lea esi ds:0[eax*4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_14] ecx +
call memmove  +
mov ecx [esp+2Ch+var_14] +
mov eax [ecx+4] +
lea edx [ebp+esi+4] +
xor esi esi +
sub eax ebx +
sar eax 2 +
test eax eax +
jz loc_46253B  +
lea esi ds:0[eax*4] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_14] edx +
call memmove  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov eax [ecx] +
add esi edx +
test eax eax +
jz loc_462553  +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] ecx +
call sub_4640C0  +
mov ecx [esp+2Ch+var_14] +
add edi ebp +
mov [ecx] ebp +
mov [ecx+4] esi +
mov [ecx+8] edi +
jmp loc_462459  +
mov eax ebx +
mov edi 4 +
sub eax edx +
mov edx eax +
sar edx 2 +
jmp loc_4624AE  +
cmp eax 3FFFFFFFh +
ja loc_4624A0  +
mov ebp ebx +
sub ebp edx +
mov edx ebp +
xor ebp ebp +
shl edi 3 +
sar edx 2 +
test eax eax +
jz loc_4624C8  +
jmp loc_4624AE  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ecx+4] +
cmp ebx [ecx+8] +
mov [ebp+var_2C] ecx +
jz loc_4628D9  +
test ebx ebx +
jz loc_4628D2  +
mov eax [ebx-0Ch] +
mov ecx [ebx-8] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
sub ecx eax +
sar ecx 2 +
test ecx ecx +
jnz loc_462865  +
xor edx edx +
xor edi edi +
xor ecx ecx +
xor esi esi +
add ecx esi +
test edx edx +
mov [ebx] esi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
jz loc_46279D  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] esi +
call memmove  +
mov eax [ebp+var_2C] +
add esi edi +
mov [ebx+4] esi +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
add eax 0Ch +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [edx+4] eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov edi [eax+4] +
sub edi ecx +
sar edi 2 +
test edi edi +
jnz loc_4628A0  +
xor edx edx +
xor esi esi +
xor edi edi +
xor ebx ebx +
add edi ebx +
test edx edx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] edi +
jz loc_462802  +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] ebx +
call memmove  +
mov eax [ebp+var_2C] +
add ebx esi +
mov [ebp+var_20] ebx +
mov esi [eax+4] +
lea ebx [esi-0Ch] +
sub esi 18h +
sub esi [ebp+arg_0] +
sar esi 2 +
imul esi esi +
test esi esi +
jle loc_46283B  +
lea eax [ebx-18h] +
sub ebx 0Ch +
mov [esp+48h+var_48] eax +
mov ecx ebx +
call sub_4625A0  +
sub esp 4 +
sub esi 1 +
jnz loc_462823  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_24] +
mov [esp+48h+var_48] eax +
call sub_4625A0  +
mov eax [ebp+var_24] +
sub esp 4 +
test eax eax +
jz loc_46285B  +
mov [esp+48h+var_48] eax +
call sub_4640C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
cmp ecx 3FFFFFFFh +
ja loc_462B84  +
shl ecx 2 +
mov [esp+48h+var_48] ecx +
mov [ebp+var_30] ecx +
call loc_464170  +
mov edx [ebx-8] +
mov ecx [ebp+var_30] +
mov esi eax +
mov eax [ebx-0Ch] +
sub edx eax +
sar edx 2 +
lea edi ds:0[edx*4] +
jmp loc_46277F  +
cmp edi 3FFFFFFFh +
ja loc_462B84  +
shl edi 2 +
mov [esp+48h+var_48] edi +
call loc_464170  +
mov edx [ebp+arg_4] +
mov ecx [edx] +
mov edx [edx+4] +
mov ebx eax +
sub edx ecx +
sar edx 2 +
lea esi ds:0[edx*4] +
jmp loc_4627E3  +
xor eax eax +
jmp loc_4627A8  +
mov eax [ebp+var_2C] +
mov eax [eax] +
sub ebx eax +
sar ebx 2 +
imul ebx ebx +
test ebx ebx +
jnz loc_462A36  +
mov ebx [ebp+arg_0] +
mov edx 1 +
sub ebx eax +
sar ebx 2 +
imul ebx ebx +
lea eax [edx+edx*2] +
shl eax 2 +
mov [ebp+var_3C] edx +
mov [esp+48h+var_48] eax +
call loc_464170  +
mov [ebp+var_38] eax +
mov edx [ebp+var_38] +
lea eax [ebx+ebx*2] +
lea ebx [edx+eax*4] +
test ebx ebx +
jz loc_46298C  +
mov eax [ebp+arg_4] +
xor edi edi +
xor esi esi +
mov edx [ebp+arg_4] +
mov eax [eax+4] +
sub eax [edx] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
sar eax 2 +
test eax eax +
mov dword ptr [ebx+8] 0 +
jnz loc_462B67  +
mov eax [ebp+arg_4] +
add edi esi +
mov [ebx+8] edi +
xor edi edi +
mov [ebx] esi +
mov [ebx+4] esi +
mov edx [eax] +
mov eax [eax+4] +
sub eax edx +
sar eax 2 +
test eax eax +
jz loc_462987  +
lea edi ds:0[eax*4] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] esi +
call memmove  +
add esi edi +
mov [ebx+4] esi +
mov eax [ebp+var_2C] +
mov ebx [ebp+var_38] +
mov esi [eax] +
cmp [ebp+arg_0] esi +
jnz loc_4629E7  +
jmp loc_462A60  +
add edx edi +
xor ecx ecx +
mov [ebx] edi +
mov [ebx+4] edi +
mov [ebx+8] edx +
mov eax [esi] +
mov edx [esi+4] +
sub edx eax +
sar edx 2 +
test edx edx +
jz loc_4629D7  +
lea ecx ds:0[edx*4] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
mov [ebp+var_30] ecx +
call memmove  +
mov ecx [ebp+var_30] +
add ecx edi +
mov [ebx+4] ecx +
add esi 0Ch +
add ebx 0Ch +
cmp [ebp+arg_0] esi +
jz loc_462A60  +
test ebx ebx +
jz loc_4629DC  +
mov eax [esi+4] +
xor edx edx +
xor edi edi +
sub eax [esi] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
sar eax 2 +
test eax eax +
mov dword ptr [ebx+8] 0 +
jz loc_4629A0  +
cmp eax 3FFFFFFFh +
ja loc_462B84  +
lea edx ds:0[eax*4] +
mov [esp+48h+var_48] edx +
mov [ebp+var_30] edx +
call loc_464170  +
mov edx [ebp+var_30] +
mov edi eax +
jmp loc_4629A0  +
lea edx [ebx+ebx] +
cmp ebx edx +
jbe loc_462B89  +
mov ebx [ebp+arg_0] +
mov [ebp+var_3C] 15555555h +
sub ebx eax +
mov eax 0FFFFFFFCh +
sar ebx 2 +
imul ebx ebx +
jmp loc_46290D  +
mov eax [ebp+var_2C] +
add ebx 0Ch +
mov esi [ebp+arg_0] +
mov eax [eax+4] +
cmp [ebp+arg_0] eax +
mov [ebp+var_30] eax +
jnz loc_462AC7  +
jmp loc_462B1C  +
add edx edi +
xor ecx ecx +
mov [ebx] edi +
mov [ebx+4] edi +
mov [ebx+8] edx +
mov eax [esi] +
mov edx [esi+4] +
sub edx eax +
sar edx 2 +
test edx edx +
jz loc_462AB7  +
lea ecx ds:0[edx*4] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
mov [ebp+var_34] ecx +
call memmove  +
mov ecx [ebp+var_34] +
add ecx edi +
mov [ebx+4] ecx +
add ebx 0Ch +
add esi 0Ch +
cmp [ebp+var_30] esi +
jz loc_462B16  +
test ebx ebx +
jz loc_462ABC  +
mov eax [esi+4] +
xor edx edx +
xor edi edi +
sub eax [esi] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
sar eax 2 +
test eax eax +
mov dword ptr [ebx+8] 0 +
jz loc_462A80  +
cmp eax 3FFFFFFFh +
ja loc_462B84  +
lea edx ds:0[eax*4] +
mov [esp+48h+var_48] edx +
mov [ebp+var_34] edx +
call loc_464170  +
mov edx [ebp+var_34] +
mov edi eax +
jmp loc_462A80  +
mov eax [ebp+var_2C] +
mov esi [eax+4] +
mov eax [ebp+var_2C] +
mov edi [eax] +
cmp edi esi +
jz loc_462B3F  +
mov eax [edi] +
test eax eax +
jz loc_462B33  +
mov [esp+48h+var_48] eax +
call sub_4640C0  +
add edi 0Ch +
cmp edi esi +
jnz loc_462B25  +
mov eax [ebp+var_2C] +
mov esi [eax] +
test esi esi +
jz loc_462B4B  +
mov [esp+48h+var_48] esi +
call sub_4640C0  +
mov eax [ebp+var_3C] +
mov edi [ebp+var_38] +
mov edx [ebp+var_2C] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
mov [edx] edi +
mov [edx+4] ebx +
mov [edx+8] eax +
jmp loc_46285B  +
cmp eax 3FFFFFFFh +
ja loc_462B84  +
lea edi ds:0[eax*4] +
mov [esp+48h+var_48] edi +
call loc_464170  +
mov esi eax +
jmp loc_462953  +
call sub_462E90  +
cmp edx 15555555h +
ja loc_462A41  +
mov ebx [ebp+arg_0] +
sub ebx eax +
sar ebx 2 +
imul ebx ebx +
test edx edx +
jnz loc_462904  +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
jmp loc_462918  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF68 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF68 +
jmp sub_462D50  +
***
sub esp 58h +
lea edx [ebp+var_8] +
mov [ebp+var_1C] edx +
lea edx [ebp+var_3C] +
mov [ebp+var_40] ecx +
mov [ebp+var_24] offset sub_465090 +
mov [ebp+var_20] offset dword_467D28 +
mov [ebp+var_18] offset aGLeLuLmIeIuSc +
mov [ebp+var_14] esp +
mov [esp+58h+var_58] edx +
call sub_454ED0  +
mov eax [ebp+var_40] +
mov dword ptr [eax] offset off_47ED98 +
lea ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [esp+58h+var_58] eax +
mov [ebp+var_38] 1 +
call sub_460FD0  +
sub esp 4 +
lea eax [ebp+var_3C] +
mov [esp+58h+var_58] eax +
call sub_454F30  +
leave   +
retn 4  +
***
sub esp 18h +
call sub_462CB0  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebp esp +
push ebx  +
mov ebx ecx +
sub esp 24h +
mov eax [ecx+4] +
mov dword ptr [ecx] offset off_47ED98 +
xadd [eax-4] edx +
test edx edx +
jle loc_462CE0  +
mov ecx ebx +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
lea ecx [eax-0Ch] +
lea eax [ebp+var_A+1] +
mov [esp+28h+var_28] eax +
call sub_45F7D0  +
mov ecx ebx +
sub esp 4 +
call sub_462D50  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_47EF80 +
call sub_462D50  +
mov [esp+18h+var_18] ebx +
call sub_4640C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_47EF80 +
jmp sub_462D50  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EF98 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EF98 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_47EFC8 +
call sub_4640C0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_47EFC8 +
retn   +
***
sub esp 1Ch +
mov eax off_46CB8C +
mov [esp+1Ch+var_1C] eax +
call sub_45ADF0  +
mov edx [esp+1Ch+var_18] +
mov eax off_46CB88 +
mov off_46CB88 edx +
retn   +
***
cmp byte_468158 0 +
jz loc_462DD0  +
mov eax offset dword_46CBC4 +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset byte_468158 +
call sub_464CD0  +
test eax eax +
jz loc_462E19  +
mov ecx offset dword_46CBC4 +
mov dword_46CBC4 0 +
call sub_461E00  +
mov [esp+1Ch+var_1C] offset byte_468158 +
mov dword_46CBC4 offset off_47EC48 +
call loc_464E70  +
mov [esp+1Ch+var_1C] offset loc_465620 +
call sub_453A00  +
mov eax offset dword_46CBC4 +
add esp 1Ch +
retn   +
***
mov edx [esp+4] +
mov eax dword_46CBCC +
mov dword_46CBCC edx +
retn   +
***
mov eax offset dword_46CBA4 +
retn   +
***
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4 +
call loc_464380  +
mov dword ptr [eax] offset off_47EF80 +
mov [esp+1Ch+var_14] offset sub_462D20 +
mov [esp+1Ch+var_18] offset off_47E568 +
mov [esp+1Ch+var_1C] eax +
call sub_465030  +
nop   +
nop   +
nop   +
push edi  +
push esi  +
push ebx  +
mov esi [esp+28h+var_18] +
call sub_464A10  +
mov edi [eax] +
test edi edi +
jz loc_462EED  +
mov eax [edi+30h] +
mov edx [edi+34h] +
mov ecx eax +
add ecx 0BCD4D500h +
mov ebx edx +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_462F00  +
mov dword ptr [esi] 0 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ecx 1 +
ja loc_462EED  +
and eax 1 +
test eax eax +
jnz loc_462F20  +
add edi 50h +
mov [esi] edi +
add dword ptr [edi-60h] 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
retn   +
mov edi [edi] +
test edi edi +
mov [esi] edi +
jnz loc_462F11  +
jmp loc_462EF3  +
***
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C38 +
mov dword ptr [ebp-28h] offset loc_463084 +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
lea edx [ebp-0Ch] +
sub esp 8 +
mov [esp] edx +
mov ecx [ebp-50h] +
call sub_462BF0  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
lea ecx [edx-0Ch] +
sub esp 4 +
mov [esp] eax +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_462CB0 +
mov dword ptr [esp+4] offset off_47E494 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov edx [ebp-50h] +
mov [ebp-54h] eax +
mov [esp] edx +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467BF0 +
mov dword ptr [ebp-28h] offset loc_46315B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461800  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_4618B0 +
mov dword ptr [esp+4] offset off_47E4AC +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463184  +
sub eax 1 +
jz loc_463172  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C20 +
mov dword ptr [ebp-28h] offset loc_46325B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461900  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461950 +
mov dword ptr [esp+4] offset off_47E4B8 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463284  +
sub eax 1 +
jz loc_463272  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 58h +
lea eax [ebp-8] +
mov [ebp-1Ch] eax +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-24h] offset sub_465090 +
mov dword ptr [ebp-20h] offset word_467C4E +
mov dword ptr [ebp-18h] offset loc_463329 +
mov [ebp-14h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 0Ch +
call loc_464380  +
mov edx eax +
mov eax [ebp+8] +
mov ecx edx +
mov [esp] eax +
mov dword ptr [ebp-38h] 1 +
mov [ebp-40h] edx +
call sub_461960  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461A60 +
mov dword ptr [esp+4] offset off_47E4C4 +
mov eax [ebp-40h] +
mov [esp] eax +
mov dword ptr [ebp-38h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-34h] +
mov ecx [ebp-40h] +
mov [ebp-44h] eax +
mov [esp] ecx +
call loc_464900  +
mov eax [ebp-44h] +
mov [esp] eax +
mov dword ptr [ebp-38h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467BF8 +
mov dword ptr [ebp-28h] offset loc_4633FB +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461A70  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461AC0 +
mov dword ptr [esp+4] offset off_47E4D0 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463424  +
sub eax 1 +
jz loc_463412  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset word_467C46 +
mov dword ptr [ebp-28h] offset dword_463524 +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 10h +
call loc_464380  +
mov [ebp-50h] eax +
call sub_462DC0  +
lea ecx [ebp-0Ch] +
mov [ebp-54h] eax +
lea eax [ebp-0Dh] +
mov [esp+4] eax +
mov dword ptr [esp] offset aStdFuture_erro +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461800  +
mov ecx [ebp-0Ch] +
sub esp 4 +
mov eax 0FFFFFFFFh +
xadd [ecx-4] eax +
test eax eax +
jle loc_463513  +
mov edx [ebp-50h] +
mov eax [ebp+8] +
mov dword ptr [edx] offset off_47EE28 +
mov [edx+8] eax +
mov eax [ebp-54h] +
mov [edx+0Ch] eax +
mov dword ptr [esp+8] offset sub_461AF0 +
mov dword ptr [esp+4] offset off_47E4DC +
mov [esp] edx +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
lea eax [ebp-0Eh] +
sub ecx 0Ch +
mov [esp] eax +
call sub_45F7D0  +
push edx  +
jmp loc_4634DF  +
***
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C08 +
mov dword ptr [ebp-28h] offset loc_46361B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461B00  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461B50 +
mov dword ptr [esp+4] offset off_47E4E8 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463644  +
sub eax 1 +
jz loc_463632  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C10 +
mov dword ptr [ebp-28h] offset loc_46371B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461B60  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461BB0 +
mov dword ptr [esp+4] offset off_47E4F4 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463744  +
sub eax 1 +
jz loc_463732  +
sub esp 68h +
lea eax [ebp+var_8] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_4C] +
mov [ebp+var_34] offset sub_465090 +
mov [ebp+var_30] offset word_467C3E +
mov [ebp+var_28] offset dword_463844 +
mov [ebp+var_24] esp +
mov [esp+68h+var_68] eax +
call sub_454ED0  +
mov [esp+68h+var_68] 10h +
call loc_464380  +
mov [ebp+var_50] eax +
call sub_462E80  +
mov ecx [ebp+arg_0] +
mov [ebp+var_54] eax +
mov edx eax +
mov eax [eax] +
mov eax [eax+0Ch] +
mov [esp+68h+var_64] ecx +
lea ecx [ebp+var_C] +
mov [esp+68h+var_68] edx +
mov [ebp+var_48] 1 +
call eax  +
sub esp 8 +
lea edx [ebp+var_C] +
mov [esp+70h+var_70] edx +
mov ecx [ebp+var_50] +
mov [ebp+var_48] 2 +
call sub_461D00  +
mov ecx [ebp+var_C] +
sub esp 4 +
mov eax 0FFFFFFFFh +
xadd [ecx-4] eax +
test eax eax +
jle loc_463833  +
mov eax [ebp+var_50] +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_47EE70 +
mov [eax+8] ecx +
mov ecx [ebp+var_54] +
mov [eax+0Ch] ecx +
mov [esp+70h+var_68] offset sub_461BE0 +
mov [esp+70h+var_6C] offset off_47E500 +
mov [esp+70h+var_70] eax +
mov [ebp+var_48] 0FFFFFFFFh +
call sub_465030  +
lea eax [ebp-0Dh] +
sub ecx 0Ch +
mov [esp+70h+var_70] eax +
call sub_45F7D0  +
push edx  +
jmp loc_4637FF  +
***
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C18 +
mov dword ptr [ebp-28h] offset loc_46396B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461D00  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461DB0 +
mov dword ptr [esp+4] offset off_47E518 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463994  +
sub eax 1 +
jz loc_463982  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C28 +
mov dword ptr [ebp-28h] offset loc_463A6B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_461E40  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_461E90 +
mov dword ptr [esp+4] offset off_47E52C +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463A94  +
sub eax 1 +
jz loc_463A82  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C30 +
mov dword ptr [ebp-28h] offset loc_463B6B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_462020  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_462070 +
mov dword ptr [esp+4] offset off_47E538 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463B94  +
sub eax 1 +
jz loc_463B82  +
mov eax [ebp-0Ch] +
lea ecx [eax-0Ch] +
lea eax [ebp-0Dh] +
mov [esp] eax +
call sub_45F7F0  +
push eax  +
mov eax [ebp-50h] +
mov [esp] eax +
call loc_464900  +
mov eax [ebp-54h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_4551D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
mov ebp esp +
sub esp 68h +
lea eax [ebp-8] +
mov [ebp-2Ch] eax +
lea eax [ebp-4Ch] +
mov dword ptr [ebp-34h] offset sub_465090 +
mov dword ptr [ebp-30h] offset dword_467C00 +
mov dword ptr [ebp-28h] offset loc_463C6B +
mov [ebp-24h] esp +
mov [esp] eax +
call sub_454ED0  +
mov dword ptr [esp] 8 +
call loc_464380  +
lea ecx [ebp-0Ch] +
mov [ebp-50h] eax +
lea eax [ebp-0Eh] +
mov [esp+4] eax +
mov eax [ebp+8] +
mov [esp] eax +
mov dword ptr [ebp-48h] 1 +
call sub_460F10  +
sub esp 8 +
lea edx [ebp-0Ch] +
mov [esp] edx +
mov ecx [ebp-50h] +
mov dword ptr [ebp-48h] 2 +
call sub_462080  +
mov edx [ebp-0Ch] +
lea eax [ebp-0Dh] +
sub esp 4 +
mov [esp] eax +
lea ecx [edx-0Ch] +
call sub_45F7F0  +
sub esp 4 +
mov dword ptr [esp+8] offset sub_4620D0 +
mov dword ptr [esp+4] offset off_47E544 +
mov eax [ebp-50h] +
mov [esp] eax +
mov dword ptr [ebp-48h] 0FFFFFFFFh +
call sub_465030  +
add ebp 8 +
mov eax [ebp-44h] +
mov [ebp-54h] eax +
mov eax [ebp-48h] +
test eax eax +
jz loc_463C94  +
sub eax 1 +
jz loc_463C82  +
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov eax [esp+arg_0] +
mov ebp [esp+arg_8] +
mov ebx edi +
sub ebx eax +
mov edx ebx +
sar ebx 4 +
sar edx 2 +
test ebx ebx +
jle loc_463D5F  +
mov ecx [ebp+0] +
cmp [eax] ecx +
jz loc_463D70  +
cmp ecx [eax+4] +
jz loc_463DB9  +
cmp ecx [eax+8] +
jz loc_463DB4  +
cmp ecx [eax+0Ch] +
mov esi eax +
jnz loc_463D4E  +
jmp loc_463DBE  +
cmp [esi+10h] ecx +
jz loc_463D70  +
cmp [edx+4] ecx +
lea esi [esi+0] +
jz loc_463D90  +
cmp [edx+8] ecx +
jz loc_463D98  +
cmp [edx+0Ch] ecx +
jz loc_463DA0  +
mov esi edx +
lea edx [esi+10h] +
sub ebx 1 +
mov eax edx +
jnz loc_463D35  +
mov edx edi +
sub edx eax +
sar edx 2 +
cmp edx 2 +
jz loc_463D75  +
cmp edx 3 +
jz loc_463DA8  +
cmp edx 1 +
jz loc_463D87  +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0] +
cmp [eax] edx +
jz loc_463D70  +
add eax 4 +
cmp [eax] edx +
jz loc_463D70  +
mov eax edi +
jmp loc_463D70  +
mov edx [ebp+0] +
jmp loc_463D7F  +
pop ebx  +
lea eax [esi+14h] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
lea eax [esi+18h] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
lea eax [esi+1Ch] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0] +
cmp [eax] edx +
jz loc_463D70  +
add eax 4 +
jmp loc_463D78  +
add eax 8 +
jmp loc_463D70  +
add eax 4 +
jmp loc_463D70  +
add eax 0Ch +
jmp loc_463D70  +
***
sub esp 1Ch +
add ebp 8 +
add ebp 8 +
add ebp 8 +
mov eax [esp+arg_0] +
test eax eax +
jz locret_4640D0  +
jmp free  +
retn   +
***
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_465090 +
mov [esp+58h+var_20] offset dword_467C54 +
mov [esp+58h+var_18] offset loc_464141 +
mov [esp+58h+var_14] esp +
call sub_454ED0  +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_38] 1 +
mov [esp+58h+var_58] eax +
call loc_464170  +
mov [esp+58h+var_40] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_454F30  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
***
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_46415C  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467BDC +
mov dword ptr [esp+40h] offset loc_46422E +
mov [esp+44h] esp +
call sub_454ED0  +
mov eax [esp+60h] +
test eax eax +
mov eax 1 +
cmovnz eax [esp+60h] +
mov [esp+60h] eax +
jmp loc_4641D7  +
mov eax dword_46CBCC +
test eax eax +
jz loc_4641FC  +
mov dword ptr [esp+20h] 1 +
call eax  +
mov eax [esp+60h] +
mov [esp] eax +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4641C0  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
mov eax [esp+18h] +
add esp 58h +
pop ebp  +
retn   +
***
mov dword ptr [esp] 4 +
call loc_464380  +
mov dword ptr [eax] offset off_47EF80 +
mov dword ptr [esp+8] offset sub_462D20 +
mov dword ptr [esp+4] offset off_47E568 +
mov [esp] eax +
mov dword ptr [esp+20h] 1 +
call sub_465030  +
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_464249  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CA8 +
mov dword ptr [esp+40h] offset loc_464345 +
mov [esp+44h] esp +
call sub_454ED0  +
mov dword ptr [esp] 50h +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4642C5  +
call sub_464A10  +
mov edi [esp+18h] +
mov ecx 14h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
mov eax [esp+18h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_46CB94 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_46435C  +
mov edx dword_46816C +
xor ecx ecx +
mov eax edx +
jmp loc_4642FA  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_464340  +
test al 1 +
jnz loc_4642F0  +
mov eax 1 +
shl eax cl +
or eax edx +
mov dword_46816C eax +
lea eax [ecx+ecx*4] +
shl eax 4 +
add eax offset unk_46C180 +
mov dword ptr [esp] offset dword_46CB94 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_464299  +
call sub_45DB40  +
lea esi [esi+0] +
call sub_463DD0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_464361  +
sub ecx 1 +
jz loc_464361  +
call sub_45DB10  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_464376  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467C88 +
mov dword ptr [esp+40h] offset loc_464485 +
mov [esp+44h] esp +
call sub_454ED0  +
mov eax [esp+60h] +
add eax 60h +
mov [esp] eax +
mov [esp+18h] eax +
call malloc  +
test eax eax +
mov [esp+14h] eax +
jz loc_464407  +
call sub_464A10  +
mov edi [esp+14h] +
mov ecx 18h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
mov edi [esp+14h] +
lea eax [esp+1Ch] +
mov [esp] eax +
add edi 60h +
mov [esp+14h] edi +
call sub_454F30  +
mov eax [esp+14h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_46CB94 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_46449C  +
cmp dword ptr [esp+18h] 200h +
mov edx dword_468168 +
ja loc_464480  +
mov eax edx +
xor ecx ecx +
jmp loc_46443F  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_464480  +
test al 1 +
jnz loc_464435  +
mov eax 1 +
shl eax cl +
or eax edx +
shl ecx 9 +
mov dword_468168 eax +
lea eax dword_468180[ecx] +
mov dword ptr [esp] offset dword_46CB94 +
mov [esp+14h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_4643D0  +
call sub_45DB40  +
nop   +
call sub_463DD0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4644A1  +
sub ecx 1 +
jz loc_4644A1  +
push ebx  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_464570  +
mov [esp+18h+var_18] ebx +
call sub_4644C0  +
mov eax [ebx] +
mov edx [ebx+4] +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
ja loc_464570  +
cmp eax 1 +
ja loc_464570  +
mov eax [ebx-24h] +
mov [esp+18h+var_18] eax +
call loc_45AD30  +
lea esi [esi+0] +
call sub_463DD0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
***
push ebp  +
sub esp 88h +
lea eax [esp+80h] +
mov [esp+4Ch] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
mov dword ptr [esp+44h] offset sub_465090 +
mov dword ptr [esp+48h] offset dword_467C78 +
mov dword ptr [esp+50h] offset loc_46461B +
mov [esp+54h] esp +
call sub_454ED0  +
mov eax [esp+90h] +
mov [esp] eax +
call sub_4644C0  +
mov eax [esp+90h] +
mov eax [eax-10h] +
mov [esp+20h] eax +
mov eax [esp+90h] +
mov eax [eax-18h] +
mov [esp+1Ch] eax +
mov eax [esp+90h] +
mov eax [eax-24h] +
mov [esp+24h] eax +
mov eax [esp+90h] +
mov eax [eax-0Ch] +
mov [esp+70h] eax +
mov eax [esp+90h] +
mov eax [eax-28h] +
mov dword ptr [esp+30h] 1 +
mov [esp] eax +
call sub_45ADF0  +
mov eax [esp+34h] +
mov [esp+28h] eax +
mov eax [esp+30h] +
test eax eax +
jz loc_464632  +
sub eax 1 +
jz loc_464691  +
sub esp 0Ch +
call sub_464A10  +
mov eax [eax] +
test eax eax +
jz loc_464737  +
test byte ptr [eax+30h] 1 +
jnz loc_464730  +
mov eax [eax] +
add esp 0Ch +
retn   +
mov eax [eax] +
sub eax 50h +
jmp loc_464724  +
xor eax eax +
jmp loc_464726  +
***
sub esp 1Ch +
mov dword ptr [esp+8] 1Eh +
mov dword ptr [esp+4] offset aDeletedVirtual +
mov dword ptr [esp] 2 +
call _write  +
call sub_463DD0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
sub esp 18h +
call sub_464B00  +
mov edx [eax] +
test edx edx +
jz loc_4647A7  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_4647B0  +
add edx 30h +
mov dword ptr [eax] 0 +
mov [esp] edx +
call sub_4552C0  +
add esp 18h +
pop ebx  +
retn   +
***
cmp ecx 1 +
ja loc_464796  +
mov ecx [edx+14h] +
test ecx ecx +
js loc_4647D0  +
sub ecx 1 +
jz loc_4647E0  +
cmp ecx 0FFFFFFFFh +
jz loc_4647F2  +
mov [edx+14h] ecx +
add esp 18h +
pop ebx  +
retn   +
***
add ecx 1 +
jnz loc_4647C6  +
mov ebx [edx+10h] +
mov [eax] ebx +
jmp loc_4647C6  +
***
mov ecx [edx+10h] +
add edx 30h +
mov [eax] ecx +
mov [esp] edx +
call sub_4552C0  +
jmp loc_4647A7  +
***
call sub_463DD0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467CB8 +
mov dword ptr [esp+40h] offset loc_4648C1 +
mov [esp+44h] esp +
call sub_454ED0  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset unk_46C180 +
jb loc_46484C  +
cmp dword ptr [esp+60h] offset dword_46CB80 +
jb loc_464865  +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset unk_46C180 +
mov edx 0CCCCCCCDh +
mul  edx +
mov dword ptr [esp] offset dword_46CB94 +
mov dword ptr [esp+20h] 1 +
mov [esp+18h] edx +
shr dword ptr [esp+18h] 6 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4648D8  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_46CB94 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_46816C eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_464854  +
call sub_45DB40  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4648DD  +
sub ecx 1 +
jz loc_4648DD  +
call sub_45DB10  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_4648F2  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467C98 +
mov dword ptr [esp+40h] offset loc_4649BD +
mov [esp+44h] esp +
call sub_454ED0  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset dword_468180 +
jb loc_46494C  +
cmp dword ptr [esp+60h] offset unk_46C180 +
jb loc_464968  +
sub eax 60h +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset dword_468180 +
mov dword ptr [esp] offset dword_46CB94 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 1 +
shr dword ptr [esp+18h] 9 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4649D4  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_46CB94 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_468168 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_464957  +
call sub_45DB40  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4649D9  +
sub ecx 1 +
jz loc_4649D9  +
call sub_45DB10  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_4649EE  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+4] +
mov eax [eax-8] +
retn   +
***
lea eax [esp+58h+var_8] +
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_465090 +
mov [esp+58h+var_20] offset dword_467D58 +
mov [esp+58h+var_18] offset loc_464B7B +
mov [esp+58h+var_14] esp +
call sub_454ED0  +
cmp byte_46CB84 0 +
mov [esp+58h+var_40] offset unk_468160 +
jnz loc_464B60  +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_454F30  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
mov eax dword_46CB80 +
mov [esp+58h+var_38] 1 +
mov [esp+58h+var_58] eax +
call pthread_getspecific  +
mov [esp+58h+var_40] eax +
jmp loc_464B45  +
***
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_464B96  +
call sub_4551D0  +
call loc_464580  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467D94 +
mov dword ptr [esp+40h] offset loc_464C65 +
mov [esp+44h] esp +
call sub_454ED0  +
mov dword ptr [esp+4] offset loc_45CEF0 +
mov dword ptr [esp] offset unk_46CBC0 +
mov dword ptr [esp+20h] 1 +
call pthread_once  +
mov eax dword_46CBA0 +
mov [esp] eax +
call pthread_mutex_lock  +
test eax eax +
jnz loc_464C60  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
add esp 58h +
pop ebp  +
retn   +
***
call sub_45DB10  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_464CA1  +
sub eax 1 +
jz loc_464C8E  +
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_465090 +
mov [esp+58h+var_20] offset dword_467D8C +
mov [esp+58h+var_18] offset loc_464E34 +
mov [esp+58h+var_14] esp +
call sub_454ED0  +
mov eax [esp+58h+arg_0] +
movzx eax byte ptr [eax] +
test al al +
mov [esp+58h+var_40] 0 +
jz loc_464D30  +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_454F30  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
mov [esp+58h+var_54] offset loc_45CEF0 +
mov [esp+58h+var_58] offset unk_46CBC0 +
mov [esp+58h+var_38] 0FFFFFFFFh +
call pthread_once  +
mov eax dword_46CBA0 +
mov [esp+58h+var_58] eax +
call pthread_mutex_lock  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_464DC2  +
jmp loc_464E63  +
cmp byte ptr [eax+1] 0 +
jz loc_464DF0  +
mov [esp+58h+var_54] offset loc_45CEF0 +
mov [esp+58h+var_58] offset unk_46CBC0 +
mov [esp+58h+var_38] 1 +
call pthread_once  +
mov eax dword_46CBA0 +
mov [esp+58h+var_54] offset loc_45CED0 +
mov [esp+58h+var_58] offset unk_46CBBC +
mov [esp+58h+var_44] eax +
call pthread_once  +
mov eax [esp+58h+var_44] +
mov [esp+58h+var_54] eax +
mov eax dword_46CB9C +
mov [esp+58h+var_58] eax +
call pthread_cond_wait  +
test eax eax +
jnz loc_464E02  +
mov eax [esp+58h+arg_0] +
cmp byte ptr [eax] 0 +
jz loc_464D66  +
mov eax dword_46CBA0 +
mov [esp+58h+var_38] 0 +
mov [esp+58h+var_58] eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_464D17  +
call sub_45DB40  +
lea esi [esi+0] +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_40] 1 +
mov byte ptr [eax+1] 1 +
jmp loc_464DCB  +
mov [esp+58h+var_58] 4 +
call loc_464380  +
mov dword ptr [eax] offset off_47ED20 +
mov [esp+58h+var_50] offset sub_45D800 +
mov [esp+58h+var_54] offset off_47E460 +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_38] 1 +
call sub_465030  +
mov ecx dword_46CBA0 +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_38] 0 +
mov [esp+58h+var_44] eax +
call sub_45D790  +
mov eax [esp+58h+var_44] +
mov [esp+58h+var_38] 0FFFFFFFFh +
mov [esp+58h+var_58] eax +
call sub_4551D0  +
call sub_45DB10  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
***
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_465090 +
mov dword ptr [esp+38h] offset dword_467DA8 +
mov dword ptr [esp+40h] offset loc_464F3C +
mov [esp+44h] esp +
call sub_454ED0  +
mov dword ptr [esp+4] offset loc_45CEF0 +
mov dword ptr [esp] offset unk_46CBC0 +
mov dword ptr [esp+20h] 1 +
call pthread_once  +
mov eax dword_46CBA0 +
mov [esp] eax +
call pthread_mutex_lock  +
test eax eax +
jnz loc_464F37  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_454F30  +
add esp 58h +
pop ebp  +
retn   +
***
call sub_45DB10  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_464F78  +
sub eax 1 +
jz loc_464F65  +
sub esp 1Ch +
call sub_464A10  +
mov edx [eax] +
add dword ptr [eax+4] 1 +
test edx edx +
jz loc_465013  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_465018  +
mov dword ptr [eax] 0 +
lea ebx [edx+30h] +
mov [esp+18h+var_18] ebx +
call sub_455240  +
mov [esp+18h+var_18] ebx +
call sub_4644C0  +
call sub_463DD0  +
cmp ecx 1 +
ja loc_464FFA  +
neg dword ptr [edx+14h]  +
jmp loc_465000  +
***
mov eax [esp+18h+arg_0] +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0ACh+arg_8] +
mov edx [esp+0ACh+arg_C] +
mov [esp+0ACh+var_58] offset sub_465090 +
mov [esp+0ACh+var_54] offset dword_467C68 +
mov [esp+0ACh+var_94] eax +
lea eax [esp+0ACh+var_C] +
mov [esp+0ACh+var_50] eax +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_90] edx +
mov [esp+0ACh+var_4C] offset loc_4655E7 +
mov [esp+0ACh+var_48] esp +
call sub_454ED0  +
cmp [esp+0ACh+arg_0] 1 +
mov [esp+0ACh+var_34] 0 +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_8C] 3 +
jz loc_465120  +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
call sub_454F30  +
mov eax [esp+0ACh+var_8C] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ACh+var_94] +
mov edx [esp+0ACh+var_90] +
mov byte ptr [esp+0ACh+var_94] 1 +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
jbe loc_465220  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_465233  +
cmp [esp+0ACh+arg_4] 6 +
jnz loc_465233  +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-18h] +
mov [esp+0ACh+var_88] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-10h] +
mov [esp+0ACh+var_7C] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-0Ch] +
cmp eax 1 +
mov [esp+0ACh+var_80] eax +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 3 +
test byte ptr [esp+0ACh+arg_4] 8 +
jz loc_4653A0  +
cmp eax 1 +
jz loc_4655F3  +
mov edx [esp+0ACh+var_88] +
test edx edx +
js loc_4655F8  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_A8] 0 +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_454FB0  +
mov eax [esp+0ACh+var_88] +
mov [esp+0ACh+var_A8] 1 +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_454FB0  +
mov eax [esp+0ACh+var_80] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_455010  +
mov [esp+0ACh+var_8C] 7 +
jmp loc_465105  +
cmp eax 1 +
setnbe byte ptr [esp+0ACh+var_94]  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_46514C  +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_AC] eax +
call sub_455030  +
test eax eax +
mov [esp+0ACh+var_7C] eax +
jz loc_465420  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_45AA00  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_8C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_45AB50  +
mov [esp+0ACh+var_1C] eax +
lea eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_454FE0  +
cmp [esp+0ACh+var_30] 1 +
mov esi eax +
sbb esi 0 +
test esi esi +
js loc_465420  +
jz loc_46542D  +
mov eax [esp+0ACh+var_8C] +
xor ebp ebp +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or ebp edx +
test bl bl +
js loc_4652D0  +
xor edi edi +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_4652F0  +
sub esi 1 +
jnz loc_4652C7  +
lea eax [ebp+1] +
test edi edi +
mov [esp+0ACh+var_80] eax +
jnz loc_46543F  +
cmp [esp+0ACh+var_80] 0 +
jz loc_465420  +
mov eax 2 +
mov [esp+0ACh+var_88] 0 +
mov [esp+0ACh+var_84] 0 +
test byte ptr [esp+0ACh+arg_4] 1 +
jz loc_46518F  +
cmp eax 2 +
jz loc_465420  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_8C] 6 +
jnz loc_465105  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+var_88] +
mov [eax-18h] esi +
mov esi [esp+0ACh+var_84] +
mov [eax-14h] esi +
mov esi [esp+0ACh+var_7C] +
mov [eax-10h] esi +
mov esi [esp+0ACh+arg_10] +
mov eax [esp+0ACh+var_34] +
mov [esi-8] eax +
mov eax esi +
mov esi [esp+0ACh+var_80] +
mov [eax-0Ch] esi +
jmp loc_465105  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_46519D  +
cmp eax 1 +
jz loc_4655D8  +
mov eax [esp+0ACh+var_88] +
test eax eax +
jns loc_4651B2  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_45AA00  +
mov edx [esp+0ACh+arg_14] +
movzx eax [esp+0ACh+var_10] +
call sub_45AB50  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_1C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_45AB50  +
mov esi [esp+0ACh+arg_10] +
mov [esi-0Ch] eax +
jmp loc_4651B2  +
mov [esp+0ACh+var_8C] 8 +
jmp loc_465105  +
mov [esp+0ACh+var_80] 0 +
mov eax 1 +
jmp loc_46532B  +
mov eax [esp+0ACh+var_14] +
lea eax [eax+edi-1] +
mov edi [esp+0ACh+var_80] +
mov [esp+0ACh+var_84] eax +
test edi edi +
jz loc_465420  +
test eax eax +
jz loc_465326  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_88] offset off_47E408 +
and eax 8 +
mov [esp+0ACh+var_74] eax +
jnz loc_4654A9  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_88] offset off_47E41C +
jnz loc_4654A9  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+arg_10] +
add eax 20h +
test byte ptr [esi] 1 +
jz loc_46549E  +
mov eax [esi-30h] +
mov [esp+0ACh+var_34] eax +
mov eax [eax-50h] +
mov [esp+0ACh+var_88] eax +
mov [esp+0ACh+var_75] 0 +
jmp loc_4654F1  +
jle loc_465524  +
lea eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_45A920  +
test eax eax +
jz loc_46556C  +
mov esi [esp+0ACh+var_88] +
test esi esi +
jnz loc_4655C2  +
mov eax [esp+0ACh+var_28] +
test eax eax +
jz loc_4655A5  +
add eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_84] +
lea edx [esp+0ACh+var_2C] +
call sub_45A8A0  +
lea edx [esp+0ACh+var_28] +
mov [esp+0ACh+var_8C] eax +
call sub_45A8A0  +
mov edx [esp+0ACh+var_2C] +
cmp edx 0 +
jnz loc_4654B0  +
mov [esp+0ACh+var_75] 1 +
jmp loc_4654DA  +
mov ebx [esp+0ACh+var_88] +
test ebx ebx +
jz loc_46553B  +
mov ecx [esp+0ACh+var_74] +
test ecx ecx +
jnz loc_46553B  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_465581  +
not edx  +
xor esi esi +
add edx [esp+0ACh+var_18] +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or esi eax +
test bl bl +
js loc_465548  +
test esi esi +
setz al  +
test al al +
jz loc_4654DA  +
mov eax [esp+0ACh+var_2C] +
mov [esp+0ACh+var_88] eax +
mov eax 3 +
jmp loc_46533B  +
mov [esp+0ACh+var_AC] edx +
mov ecx [esp+0ACh+var_34] +
lea eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_88] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_45AAE0  +
xor eax 1 +
jmp loc_465564  +
cmp [esp+0ACh+var_75] 0 +
jz loc_465420  +
mov [esp+0ACh+var_88] 0 +
mov eax 2 +
jmp loc_46533B  +
mov edx [esp+0ACh+var_88] +
lea ecx [esp+0ACh+var_34] +
call sub_45A9A0  +
test al al +
jnz loc_46556C  +
jmp loc_4654DA  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_AC] eax +
call sub_464530  +
mov eax [esp+0ACh+var_68] +
mov [esp+0ACh+var_AC] eax +
call sub_4644C0  +
call sub_463DD0  +
mov [esp+0ACh+var_6C] 1 +
call sub_462D90  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov dword_46CBA8 offset off_47EEC8 +
retn   +
***
mov ecx offset dword_46CBC4 +
mov dword_46CBC4 offset off_47EC48 +
jmp sub_461E30  +
***
cmp byte_46CB84 0 +
jnz loc_465651  +
mov byte_46CB84 0 +
retn   +
***
sub esp 1Ch +
mov eax dword_46CB80 +
mov [esp] eax +
call pthread_key_delete  +
mov byte_46CB84 0 +
add esp 1Ch +
retn   +
***
mov dword_46CBA4 offset off_47EEC8 +
retn   +
***
push edi  +
push esi  +
push ebx  +
and esp 0FFFFFFF0h +
sub esp 140h +
call sub_454240  +
mov eax [ebp+arg_4] +
mov ebx [eax] +
mov [esp+14Ch+var_14C] ebx +
call strlen  +
add eax ebx +
cmp ebx eax +
jz loc_4656CC  +
movzx edx byte ptr [eax-1] +
cmp dl 2Fh +
jz loc_4656CC  +
cmp dl 5Ch +
jnz loc_4656C5  +
jmp loc_4656CC  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jz loc_4656CC  +
cmp dl 2Fh +
jz loc_4656CC  +
sub eax 1 +
cmp ebx eax +
jnz loc_4656B7  +
mov [esp+14Ch+var_14C] eax +
mov ds:dword_480140 eax +
call sub_437150  +
call nullsub_1  +
mov eax off_46800C +
mov [esp+14Ch+var_148] 0 +
mov [esp+14Ch+var_14C] eax +
call sub_4063C0  +
lea eax [ebp+arg_4] +
mov [esp+14Ch+var_148] eax +
lea eax [ebp+arg_0] +
mov [esp+14Ch+var_14C] eax +
call sub_437730  +
mov [esp+14Ch+var_14C] 50h +
mov ds:dword_4800CC 0Ah +
call sub_4371B0  +
mov [esp+14Ch+var_14C] 208h +
mov ds:dword_4800D8 0Ah +
mov ds:dword_4800D4 eax +
call sub_4371B0  +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
mov ds:dword_4800E0 eax +
mov [esp+14Ch+var_13C] 0 +
mov [esp+14Ch+var_140] offset off_46DF20 +
mov [esp+14Ch+var_144] offset aAbcdfhilmnoPrs +
mov [esp+14Ch+var_148] esi +
mov [esp+14Ch+var_14C] ebx +
call sub_437AB0  +
cmp eax 0FFFFFFFFh +
jz loc_4658F3  +
sub eax 61h +
cmp eax 17h +
ja loc_4658E9  +
jmp ds:off_46DD7C[eax*4]  +
mov ds:dword_480088 1 +
jmp loc_465741  +
mov eax ds:_iob +
mov [esp+14Ch+var_140] offset a7_3_0 +
mov [esp+14Ch+var_144] offset aGcc_0 +
mov [esp+14Ch+var_148] offset aGcovSS +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax ds:_iob +
mov [esp+14Ch+var_144] offset aC +
mov [esp+14Ch+var_148] offset aCopyrightS2017 +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
mov eax ds:_iob +
mov [esp+14Ch+var_148] offset aThisIsFreeSoft +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov [esp+14Ch+var_14C] 0 +
call exit  +
mov ds:dword_48009C 1 +
jmp loc_465741  +
mov eax ds:dword_4803A4 +
mov [esp+14Ch+var_14C] eax +
mov ds:dword_480078 eax +
call strlen  +
mov ds:dword_480074 eax +
jmp loc_465741  +
mov ds:dword_480070 1 +
jmp loc_465741  +
mov ds:dword_48006C 1 +
jmp loc_465741  +
mov eax ds:dword_4803A4 +
mov ds:dword_48007C eax +
jmp loc_465741  +
mov dword_468004 0 +
jmp loc_465741  +
mov ds:dword_480090 1 +
jmp loc_465741  +
mov ds:dword_48008C 1 +
jmp loc_465741  +
mov ds:dword_480094 1 +
mov dword_468004 1 +
jmp loc_465741  +
xor eax eax +
call sub_401560  +
mov ds:dword_480080 1 +
jmp loc_465741  +
mov ds:dword_480098 1 +
jmp loc_465741  +
mov ds:dword_480068 1 +
jmp loc_465741  +
mov ds:dword_4800A0 1 +
jmp loc_465741  +
mov ds:dword_480084 1 +
jmp loc_465741  +
mov eax 1 +
call sub_401560  +
mov eax dword_4680F0 +
mov edi eax +
mov [esp+14Ch+var_114] eax +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_4658E9  +
mov edx eax +
sub edx [esp+14Ch+var_114] +
sub edx 1 +
jle loc_46591A  +
mov ds:dword_4800A4 1 +
mov edi [esp+14Ch+var_114] +
lea esi ds:0[edi*4] +
mov [esp+14Ch+var_12C] esi +
mov esi 1 +
sub esi edi +
mov [esp+14Ch+var_120] edi +
mov [esp+14Ch+var_138] esi +
jmp loc_465A94  +
add ebx 1 +
mov [esp+14Ch+var_14C] ebx +
call sub_4371B0  +
mov [esp+14Ch+var_148] esi +
mov [esp+14Ch+var_14C] eax +
mov ebx eax +
call strcpy  +
mov [esp+14Ch+var_14C] ebx +
call sub_437300  +
mov [esp+14Ch+var_148] 2Eh +
mov [esp+14Ch+var_14C] eax +
call strrchr  +
test eax eax +
jz loc_465978  +
mov byte ptr [eax] 0 +
mov [esp+14Ch+var_14C] ebx +
call strlen  +
lea edx [eax+6] +
mov esi eax +
mov [esp+14Ch+var_14C] edx +
mov [esp+14Ch+var_F4] edx +
call sub_4371B0  +
mov [esp+14Ch+var_148] ebx +
mov [esp+14Ch+var_14C] eax +
mov edi eax +
mov ds:dword_4800B4 eax +
add edi esi +
call strcpy  +
mov edx [esp+14Ch+var_F4] +
mov eax 6Fh +
mov dword ptr [edi] 6E63672Eh +
mov [edi+4] ax +
mov [esp+14Ch+var_14C] edx +
call sub_4371B0  +
mov [esp+14Ch+var_148] ebx +
mov edi eax +
mov [esp+14Ch+var_14C] eax +
add esi edi +
mov ds:dword_4800AC eax +
call strcpy  +
mov eax 61h +
mov [esi+4] ax +
mov dword ptr [esi] 6463672Eh +
mov [esp+14Ch+var_14C] ebx +
call free  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_E0] 0 +
call sub_4021C0  +
test eax eax +
jz loc_466933  +
mov eax ds:dword_480020 +
lea edi [esp+14Ch+var_AC] +
mov [esp+14Ch+var_14C] eax +
call _fileno  +
mov [esp+14Ch+var_148] edi +
mov [esp+14Ch+var_14C] eax +
call ds:_fstati64  +
xor edx edx +
test eax eax +
cmovz edx [esp+14Ch+var_88] +
mov ds:dword_4800B8 edx +
call sub_401FF0  +
cmp eax 67636E6Fh +
jz loc_465B96  +
bswap eax  +
cmp eax 67636E6Fh +
jz loc_465B8C  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_148] offset aSNotAGcovNotes +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
call sub_401EB0  +
add [esp+14Ch+var_120] 1 +
mov eax [ebp+arg_0] +
add [esp+14Ch+var_12C] 4 +
cmp eax [esp+14Ch+var_120] +
jz loc_466959  +
mov edx ds:dword_480098 +
test edx edx +
jz loc_465ABE  +
sub eax [esp+14Ch+var_114] +
mov [esp+14Ch+var_14C] offset aProcessingFile +
mov [esp+14Ch+var_144] eax +
mov eax [esp+14Ch+var_138] +
add eax [esp+14Ch+var_120] +
mov [esp+14Ch+var_148] eax +
call sub_45A740  +
mov eax [ebp+arg_4] +
mov edi [esp+14Ch+var_12C] +
mov esi [eax+edi] +
mov [esp+14Ch+var_14C] esi +
call strlen  +
mov ebx eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_14C] eax +
call free  +
mov eax ds:dword_4800AC +
mov [esp+14Ch+var_14C] eax +
call free  +
mov eax ds:dword_48007C +
mov ds:dword_4800B4 0 +
mov ds:dword_4800AC 0 +
mov ds:dword_4800B8 0 +
test eax eax +
mov ds:dword_4800B0 0 +
jz loc_465940  +
cmp byte ptr [eax] 0 +
jz loc_465940  +
mov [esp+14Ch+var_14C] eax +
lea edi [esp+14Ch+var_AC] +
call strlen  +
lea eax [ebx+eax+2] +
mov [esp+14Ch+var_14C] eax +
call sub_4371B0  +
mov byte ptr [eax] 0 +
mov ebx eax +
mov eax ds:dword_48007C +
mov [esp+14Ch+var_148] edi +
mov [esp+14Ch+var_14C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_465B76  +
movzx eax [esp+14Ch+var_A6] +
and ax 0F000h +
cmp ax 4000h +
jz loc_4668D9  +
mov eax ds:dword_48007C +
mov [esp+14Ch+var_14C] ebx +
mov [esp+14Ch+var_148] eax +
call strcat  +
jmp loc_465959  +
mov ds:dword_48003C 1 +
call sub_401FF0  +
cmp eax 4137332Ah +
jz loc_465C17  +
mov edx eax +
shr edx 18h +
mov byte ptr [esp+14Ch+var_CD] dl +
mov edx eax +
shr edx 10h +
mov byte ptr [esp+14Ch+var_CD+1] dl +
mov edx eax +
mov byte ptr [esp+14Ch+var_CD+3] al +
lea eax [esp+14Ch+var_CD] +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
shr edx 8 +
mov [esp+14Ch+var_13C] edi +
mov [esp+14Ch+var_148] offset aSVersion_4sPre +
mov byte ptr [esp+14Ch+var_CD+2] dl +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
mov byte ptr [esp+14Ch+var_AC] 41h +
mov byte ptr [esp+14Ch+var_AC+1] 37h +
mov byte ptr [esp+14Ch+var_AC+2] 33h +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
mov byte ptr [esp+14Ch+var_AC+3] 2Ah +
call sub_406B60  +
call sub_401FF0  +
xor esi esi +
mov [esp+14Ch+var_104] 0 +
mov edi esi +
mov [esp+14Ch+var_F8] 0 +
mov ds:dword_4800B0 eax +
lea eax [esp+14Ch+var_E0] +
mov [esp+14Ch+var_124] eax +
jmp loc_465CA0  +
test al al +
jz loc_465CF4  +
mov ecx [edi+18h] +
test ecx ecx +
jz loc_466728  +
mov eax [edi] +
mov [esp+14Ch+var_148] offset aSAlreadySeenBl +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax [esp+14Ch+var_11C] +
mov edx [esp+14Ch+var_FC] +
call sub_402090  +
mov eax ds:dword_480020 +
test eax eax +
jz loc_465D42  +
mov eax ds:dword_480034 +
test eax eax +
jnz loc_465D42  +
call sub_401FF0  +
test eax eax +
mov ebx eax +
jz loc_465D63  +
call sub_401FF0  +
mov [esp+14Ch+var_FC] eax +
mov eax ds:dword_480038 +
test eax eax +
jle loc_4668BD  +
mov eax ds:dword_480028 +
mov [esp+14Ch+var_11C] eax +
mov eax ds:dword_480024 +
add [esp+14Ch+var_11C] eax +
cmp ebx 1000000h +
jz loc_4664EA  +
test edi edi +
setnz al  +
cmp ebx 1410000h +
jz loc_465C3F  +
cmp ebx 1430000h +
jz loc_466595  +
cmp ebx 1450000h +
jz loc_4667A3  +
mov eax [esp+14Ch+var_F8] +
test eax eax +
jz loc_465C79  +
mov esi [esp+14Ch+var_F8] +
lea edx [ebx-1] +
xor edx ebx +
mov eax esi +
sub eax 1 +
xor eax esi +
shr eax 8 +
cmp eax edx +
jz loc_466784  +
xor edi edi +
mov [esp+14Ch+var_F8] 0 +
jmp loc_465C79  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_148] offset aSCorrupted +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
call sub_401EB0  +
mov eax [esp+14Ch+var_E0] +
test eax eax +
mov [esp+14Ch+var_110] eax +
jz loc_466897  +
mov eax [esp+14Ch+var_110] +
call sub_4022C0  +
mov eax [esp+14Ch+var_110] +
mov edi [eax+38h] +
mov dword ptr [eax+38h] 0 +
mov [esp+14Ch+var_124] edi +
mov edi [eax+24h] +
mov eax [esp+14Ch+var_110] +
test edi edi +
jz loc_4664B2  +
mov edi [eax+30h] +
mov ebx [eax+2Ch] +
mov eax ds:dword_4800E0 +
imul ecx edi +
mov [esp+14Ch+var_F4] eax +
add ecx eax +
mov eax [ecx+30h] +
lea edx [ecx+30h] +
test eax eax +
jnz loc_465DCC  +
jmp loc_465DD1  +
lea edx [eax+34h] +
mov eax [eax+34h] +
test eax eax +
jz loc_465DD1  +
cmp ebx [eax+2Ch] +
jb loc_465DC2  +
mov esi [esp+14Ch+var_110] +
mov [esi+34h] eax +
mov eax esi +
mov [edx] esi +
mov esi [esi+1Ch] +
test esi esi +
mov [esp+14Ch+var_100] esi +
jz loc_465E63  +
mov eax [eax+18h] +
mov edx eax +
mov [esp+14Ch+var_F8] eax +
lea eax [esi+esi*2] +
shl eax 4 +
add eax edx +
mov [esp+14Ch+var_FC] eax +
lea esi [esi+0] +
mov esi [esp+14Ch+var_F8] +
mov edx [esi+28h] +
mov eax [esi+24h] +
test edx edx +
lea esi [edx-1] +
jz loc_465E4D  +
mov ecx [eax] +
test ecx ecx +
jnz loc_465FF2  +
mov ecx [eax+4] +
cmp ecx edi +
jz loc_465E3D  +
imul edi edi +
mov esi [esp+14Ch+var_F4] +
add esi edi +
mov edi ecx +
cmp [esi+0Ch] ebx +
ja loc_465E3B  +
add ebx 1 +
mov [esi+0Ch] ebx +
mov edi [eax+4] +
xor ebx ebx +
add eax 4 +
sub edx 2 +
add eax 4 +
test edx edx +
lea esi [edx-1] +
jnz loc_465E11  +
add [esp+14Ch+var_F8] 30h +
mov eax [esp+14Ch+var_FC] +
cmp [esp+14Ch+var_F8] eax +
jnz loc_465E00  +
imul ecx edi +
add ecx [esp+14Ch+var_F4] +
cmp [ecx+0Ch] ebx +
ja loc_465E6E  +
add ebx 1 +
mov [ecx+0Ch] ebx +
mov eax [esp+14Ch+var_110] +
mov edi [eax+24h] +
mov eax [esp+14Ch+var_100] +
test eax eax +
lea ebx [eax-1] +
jz loc_4664CA  +
mov eax [esp+14Ch+var_110] +
mov esi [esp+14Ch+var_100] +
mov eax [eax+18h] +
lea ecx [esi+esi*2] +
shl ecx 4 +
mov [esp+14Ch+var_F4] eax +
add ecx eax +
nop   +
lea esi [esi+0] +
mov eax [ecx-30h] +
test eax eax +
jz loc_465EBE  +
xor esi esi +
jmp loc_465EB4  +
mov esi eax +
mov eax edx +
mov edx [eax+20h] +
mov [eax+20h] esi +
test edx edx +
jnz loc_465EB0  +
mov [ecx-30h] eax +
mov eax [ecx-2Ch] +
test eax eax +
jz loc_465EDE  +
xor esi esi +
jmp loc_465ED4  +
mov esi eax +
mov eax edx +
mov edx [eax+24h] +
mov [eax+24h] esi +
test edx edx +
jnz loc_465ED0  +
sub ebx 1 +
sub ecx 30h +
mov [ecx+4] eax +
cmp ebx 0FFFFFFFFh +
jnz loc_465EA0  +
cmp [esp+14Ch+var_100] 1 +
jbe loc_4664CA  +
mov esi [esp+14Ch+var_F4] +
mov eax [esi+14h] +
or eax [esi+10h] +
jnz loc_46647B  +
mov eax [esp+14Ch+var_F4] +
mov dword ptr [eax+10h] 0FFFFFFFFh +
mov dword ptr [eax+14h] 0 +
mov esi [esp+14Ch+var_F4] +
mov eax [esi+3Ch] +
or eax [esi+38h] +
jnz loc_46642D  +
mov eax [esp+14Ch+var_F4] +
mov dword ptr [eax+38h] 0FFFFFFFFh +
mov dword ptr [eax+3Ch] 0 +
mov [esp+14Ch+var_11C] eax +
mov eax [esp+14Ch+var_110] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+14Ch+var_10C] eax +
jz loc_466472  +
mov esi [esp+14Ch+var_11C] +
mov [esp+14Ch+var_FC] 0 +
mov [esp+14Ch+var_100] 0 +
mov [esp+14Ch+var_F8] esi +
mov esi edi +
lea esi [esi+0] +
mov eax [esp+14Ch+var_F8] +
mov eax [eax] +
test eax eax +
mov [esp+14Ch+var_104] eax +
jz loc_466048  +
xor ecx ecx +
xor edi edi +
xor ebx ebx +
mov [esp+14Ch+var_F4] ecx +
jmp loc_465FB0  +
mov edx [eax+4] +
mov ecx [esp+14Ch+var_F4] +
test ecx ecx +
jz loc_465FA5  +
cmp edx ecx +
mov ecx 1 +
cmovb edi ecx +
mov eax [eax+20h] +
test eax eax +
jz loc_466000  +
mov [esp+14Ch+var_F4] edx +
movzx edx byte ptr [eax+18h] +
and edx 4 +
cmp dl 1 +
adc ebx 0 +
test byte ptr [eax+18h] 2 +
jnz loc_465F90  +
test esi esi +
jz loc_465FD5  +
mov edx [esi] +
add esi 8 +
mov ecx [esi-4] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov edx [esp+14Ch+var_F8] +
or byte ptr [eax+18h] 1 +
add dword ptr [edx+8] 0FFFFFFFFh +
adc dword ptr [edx+0Ch] 0FFFFFFFFh +
mov edx [eax+4] +
add dword ptr [edx+10h] 0FFFFFFFFh +
adc dword ptr [edx+14h] 0FFFFFFFFh +
jmp loc_465F93  +
cmp ebx ecx +
mov edx esi +
cmovb ebx ecx +
jmp loc_465E43  +
cmp ebx 1 +
jz loc_4660A4  +
test edi edi +
mov ebx [esp+14Ch+var_104] +
jz loc_466048  +
xor ecx ecx +
mov edx ebx +
xor edi edi +
mov [esp+14Ch+var_F4] esi +
nop   +
lea esi [esi+0] +
mov eax [edx+20h] +
test eax eax +
jz loc_46603A  +
mov esi [eax+4] +
cmp [edx+4] esi +
ja loc_466080  +
mov ecx edx +
mov edx eax +
mov eax [edx+20h] +
test eax eax +
jnz loc_466027  +
test edi edi +
mov esi [esp+14Ch+var_F4] +
jnz loc_466011  +
mov eax [esp+14Ch+var_F8] +
mov [eax] ebx +
mov eax [esp+14Ch+var_F8] +
or byte ptr [eax+21h] 40h +
add eax 30h +
mov edi [esp+14Ch+var_100] +
add [esp+14Ch+var_FC] 1 +
mov [eax-4] edi +
mov edi [esp+14Ch+var_10C] +
cmp [esp+14Ch+var_FC] edi +
jz loc_4660F0  +
mov edi [esp+14Ch+var_F8] +
mov [esp+14Ch+var_F8] eax +
mov [esp+14Ch+var_100] edi +
jmp loc_465F70  +
test ecx ecx +
jz loc_4660A0  +
mov [ecx+20h] eax +
mov ecx [eax+20h] +
mov edi 1 +
mov [edx+20h] ecx +
mov ecx eax +
mov [eax+20h] edx +
jmp loc_466020  +
mov ebx eax +
jmp loc_466087  +
mov eax [esp+14Ch+var_104] +
mov ecx [esp+14Ch+var_F8] +
jmp loc_4660BB  +
mov eax [eax+20h] +
test eax eax +
jz loc_466009  +
movzx edx byte ptr [eax+18h] +
test dl 4 +
jnz loc_4660B0  +
or edx 0FFFFFF80h +
test byte ptr [ecx+22h] 1 +
mov [eax+18h] dl +
jz loc_4660B0  +
and edx 8 +
jz loc_4660B0  +
mov edx [eax+4] +
cmp eax [edx+4] +
jnz loc_4660B0  +
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_4660B0  +
or byte ptr [edx+22h] 2 +
jmp loc_4660B0  +
lea eax [edi+edi*2] +
mov edi [esp+14Ch+var_11C] +
shl eax 4 +
lea ecx [edi+eax-30h] +
mov esi ecx +
test esi esi +
jz loc_4661CC  +
mov [esp+14Ch+var_F4] 0 +
movzx ebx byte ptr [esi+21h] +
mov eax [esi+0Ch] +
mov edi [esi+2Ch] +
and ebx 0FFFFFFBFh +
or eax [esi+8] +
mov [esi+21h] bl +
jnz loc_466160  +
mov ecx [esi] +
xor eax eax +
xor edx edx +
test ecx ecx +
jz loc_46613D  +
nop   +
add eax [ecx+8] +
adc edx [ecx+0Ch] +
mov ecx [ecx+20h] +
test ecx ecx +
jnz loc_466130  +
mov [esi+18h] eax +
mov eax [esp+14Ch+var_F4] +
or ebx 30h +
mov [esi+21h] bl +
mov [esi+1Ch] edx +
mov [esp+14Ch+var_F4] esi +
mov [esi+2Ch] eax +
test edi edi +
jz loc_466182  +
mov esi edi +
jmp loc_466110  +
mov eax [esi+14h] +
or eax [esi+10h] +
jnz loc_466154  +
mov ecx [esi+4] +
xor eax eax +
xor edx edx +
test ecx ecx +
jz loc_46613D  +
add eax [ecx+8] +
adc edx [ecx+0Ch] +
mov ecx [ecx+24h] +
test ecx ecx +
jnz loc_466173  +
jmp loc_46613D  +
mov ecx [esp+14Ch+var_F4] +
test ecx ecx +
jz loc_4661CC  +
xor esi esi +
mov [esp+14Ch+var_F8] esi +
mov eax [ecx+8] +
and byte ptr [ecx+21h] 0DFh +
mov esi [ecx+2Ch] +
xor eax 1 +
or eax [ecx+0Ch] +
jz loc_4662E0  +
mov eax [ecx+10h] +
xor eax 1 +
or eax [ecx+14h] +
jz loc_466242  +
test esi esi +
jz loc_4661C0  +
mov ecx esi +
jmp loc_466190  +
mov esi [esp+14Ch+var_F8] +
test esi esi +
jnz loc_466108  +
mov eax [esp+14Ch+var_10C] +
test eax eax +
jz loc_466208  +
mov eax [esp+14Ch+var_11C] +
test byte ptr [eax+21h] 10h +
jz loc_4663E2  +
mov edx [esp+14Ch+var_11C] +
xor eax eax +
mov ebx [esp+14Ch+var_10C] +
add edx 30h +
jmp loc_466201  +
movzx ecx byte ptr [edx+21h] +
add edx 30h +
and ecx 10h +
jz loc_4663E2  +
add eax 1 +
cmp eax ebx +
jnz loc_4661F1  +
mov eax [esp+14Ch+var_110] +
test byte ptr [eax+14h] 1 +
jnz loc_46641B  +
mov eax off_468008 +
mov edi [esp+14Ch+var_110] +
mov [eax] edi +
lea eax [edi+38h] +
mov off_468008 eax +
mov eax [esp+14Ch+var_124] +
test eax eax +
jz loc_465A7D  +
mov eax [esp+14Ch+var_124] +
mov [esp+14Ch+var_110] eax +
jmp loc_465D81  +
mov ebx [ecx+4] +
xor edi edi +
mov eax [ecx+18h] +
mov edx [ecx+1Ch] +
test ebx ebx +
jz loc_466265  +
sub eax [ebx+8] +
sbb edx [ebx+0Ch] +
test byte ptr [ebx+18h] 1 +
cmovz edi ebx +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_466251  +
mov ebx [edi] +
mov [edi+8] eax +
mov [edi+0Ch] edx +
or byte ptr [edi+18h] 1 +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
movzx ecx byte ptr [ebx+21h] +
mov [esp+14Ch+var_F4] eax +
add [esp+14Ch+var_F4] 0FFFFFFFFh +
mov eax [esp+14Ch+var_F4] +
mov [esp+14Ch+var_F0] edx +
adc [esp+14Ch+var_F0] 0FFFFFFFFh +
test cl 10h +
mov edx [esp+14Ch+var_F0] +
mov [ebx+8] eax +
mov [ebx+0Ch] edx +
jz loc_466380  +
mov eax [esp+14Ch+var_F4] +
xor eax 1 +
or eax [esp+14Ch+var_F0] +
jnz loc_4661B5  +
test cl 20h +
jnz loc_4661B5  +
or ecx 20h +
mov [ebx+2Ch] esi +
mov esi ebx +
mov [ebx+21h] cl +
mov ecx esi +
jmp loc_466190  +
mov ebx [ecx] +
xor edi edi +
mov eax [ecx+18h] +
mov edx [ecx+1Ch] +
test ebx ebx +
jz loc_466304  +
nop   +
sub eax [ebx+8] +
sbb edx [ebx+0Ch] +
test byte ptr [ebx+18h] 1 +
cmovz edi ebx +
mov ebx [ebx+20h] +
test ebx ebx +
jnz loc_4662F0  +
mov ebx [edi+4] +
mov [edi+8] eax +
mov [edi+0Ch] edx +
or byte ptr [edi+18h] 1 +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
movzx edi byte ptr [ebx+21h] +
mov dword ptr [ecx+8] 0 +
mov [esp+14Ch+var_F4] eax +
add [esp+14Ch+var_F4] 0FFFFFFFFh +
mov eax [esp+14Ch+var_F4] +
mov [esp+14Ch+var_F0] edx +
adc [esp+14Ch+var_F0] 0FFFFFFFFh +
test edi 10h +
mov edx [esp+14Ch+var_F0] +
mov dword ptr [ecx+0Ch] 0 +
mov [ebx+10h] eax +
mov [ebx+14h] edx +
jz loc_4663B0  +
mov eax [esp+14Ch+var_F4] +
xor eax 1 +
or eax [esp+14Ch+var_F0] +
jnz loc_4661A6  +
test edi 20h +
jnz loc_4661A6  +
mov eax edi +
or eax 20h +
mov [ebx+2Ch] esi +
mov esi ebx +
mov [ebx+21h] al +
jmp loc_4661A6  +
mov eax [esp+14Ch+var_F0] +
or eax [esp+14Ch+var_F4] +
jnz loc_4661B5  +
test cl 40h +
jnz loc_4661B5  +
mov eax [esp+14Ch+var_F8] +
or ecx 40h +
mov [ebx+21h] cl +
mov [esp+14Ch+var_F8] ebx +
mov [ebx+2Ch] eax +
jmp loc_4661B5  +
mov eax [esp+14Ch+var_F0] +
or eax [esp+14Ch+var_F4] +
jnz loc_4661A6  +
test edi 40h +
jnz loc_4661A6  +
mov eax [esp+14Ch+var_F8] +
mov [ebx+2Ch] eax +
mov eax edi +
or eax 40h +
mov [ebx+21h] al +
mov [esp+14Ch+var_F8] ebx +
jmp loc_4661A6  +
mov eax [esp+14Ch+var_110] +
mov eax [eax] +
mov [esp+14Ch+var_148] offset aSGraphIsUnsolv +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax [esp+14Ch+var_110] +
test byte ptr [eax+14h] 1 +
jz loc_466216  +
mov edi eax +
mov eax [eax+18h] +
mov edx [edi+1Ch] +
call sub_402130  +
jmp loc_466216  +
mov esi [esp+14Ch+var_110] +
mov eax [esi] +
mov [esp+14Ch+var_148] offset aSSHasArcsFromE +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax [esi+18h] +
mov [esp+14Ch+var_11C] eax +
mov eax [esp+14Ch+var_110] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+14Ch+var_10C] eax +
jnz loc_465F52  +
xor ecx ecx +
mov esi ecx +
jmp loc_466100  +
mov esi [esp+14Ch+var_110] +
mov eax [esi] +
mov [esp+14Ch+var_148] offset aSSHasArcsToEnt +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax [esi+18h] +
mov [esp+14Ch+var_F4] eax +
jmp loc_465F19  +
mov esi ds:dword_4800A8 +
test esi esi +
jnz loc_465DA2  +
call sub_4016E0  +
jmp loc_466229  +
mov esi [esp+14Ch+var_110] +
mov eax [esi] +
mov [esp+14Ch+var_148] offset aSSLacksEntryAn +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
jmp loc_466448  +
call sub_401FF0  +
mov ebx eax +
call sub_401FF0  +
mov esi eax +
call sub_401FF0  +
mov [esp+14Ch+var_F4] eax +
call sub_402020  +
mov [esp+14Ch+var_14C] eax +
call sub_437310  +
mov [esp+14Ch+var_100] eax +
call sub_402020  +
call sub_401AF0  +
mov [esp+14Ch+var_104] eax +
call sub_401FF0  +
mov [esp+14Ch+var_148] 3Ch +
mov [esp+14Ch+var_14C] 1 +
mov [esp+14Ch+var_F8] eax +
call sub_4371E0  +
mov edx [esp+14Ch+var_100] +
mov edi eax +
mov [eax] edx +
mov eax ds:dword_480090 +
test eax eax +
jnz loc_466872  +
mov eax [esp+14Ch+var_F4] +
mov [edi+8] ebx +
mov [edi+0Ch] esi +
mov dword ptr [edi+34h] 0 +
mov [edi+10h] eax +
mov eax [esp+14Ch+var_104] +
mov dword ptr [edi+38h] 0 +
mov [edi+30h] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_F8] 1000000h +
mov [edi+2Ch] eax +
mov eax [esp+14Ch+var_124] +
mov [eax] edi +
lea eax [edi+38h] +
mov [esp+14Ch+var_124] eax +
jmp loc_465C79  +
test al al +
jz loc_465D00  +
call sub_401FF0  +
mov edx eax +
mov [esp+14Ch+var_134] eax +
mov eax [esp+14Ch+var_FC] +
lea esi [edx+edx*2] +
mov [esp+14Ch+var_10C] esi +
shl [esp+14Ch+var_10C] 4 +
mov esi [esp+14Ch+var_10C] +
sub eax 1 +
shr eax 1 +
add esi [edi+18h] +
cmp edx [edi+1Ch] +
jnb loc_465D42  +
mov edx [esi] +
test edx edx +
jnz loc_465D42  +
mov [esp+14Ch+var_100] eax +
mov [esp+14Ch+var_130] 0 +
jmp loc_466612  +
mov edx [esp+14Ch+var_10C] +
mov eax [esp+14Ch+var_128] +
or byte ptr [eax+edx+22h] 1 +
movzx edx byte ptr [ecx+18h] +
mov [esp+14Ch+var_130] 1 +
or edx 20h +
mov [ecx+18h] dl +
and edx 2 +
jnz loc_46660D  +
add dword ptr [edi+28h] 1 +
sub [esp+14Ch+var_100] 1 +
mov eax [esp+14Ch+var_100] +
test eax eax +
jz loc_4666F3  +
call sub_401FF0  +
mov ebx eax +
call sub_401FF0  +
cmp ebx [edi+1Ch] +
mov [esp+14Ch+var_F4] eax +
jnb loc_465D42  +
mov [esp+14Ch+var_148] 28h +
mov [esp+14Ch+var_14C] 1 +
call sub_4371E0  +
mov edx [edi+18h] +
mov [esp+14Ch+var_128] edx +
mov ecx eax +
lea eax [ebx+ebx*2] +
movzx ebx byte ptr [esp+14Ch+var_F4] +
shl eax 4 +
add eax edx +
movzx edx byte ptr [ecx+18h] +
mov [ecx+4] eax +
and ebx 1 +
add ebx ebx +
mov byte ptr [esp+14Ch+var_110] bl +
mov ebx [esp+14Ch+var_F4] +
and edx 0FFFFFFF8h +
or dl byte ptr [esp+14Ch+var_110] +
mov [ecx] esi +
mov dword ptr [ecx+8] 0 +
shr ebx 1 +
and ebx 1 +
shl ebx 2 +
or edx ebx +
mov ebx [esp+14Ch+var_F4] +
and edx 0FFFFFFF7h +
mov dword ptr [ecx+0Ch] 0 +
shr ebx 2 +
and ebx 1 +
shl ebx 3 +
or edx ebx +
mov ebx [esi] +
mov [ecx+18h] dl +
mov [ecx+20h] ebx +
mov ebx [eax+4] +
add dword ptr [esi+8] 1 +
adc dword ptr [esi+0Ch] 0 +
mov [esi] ecx +
mov [ecx+24h] ebx +
add dword ptr [eax+10h] 1 +
adc dword ptr [eax+14h] 0 +
test dl 4 +
mov [eax+4] ecx +
jz loc_466604  +
mov ebx [esp+14Ch+var_134] +
test ebx ebx +
jnz loc_4665E5  +
or edx 40h +
mov [ecx+18h] dl +
or byte ptr [eax+22h] 4 +
movzx edx byte ptr [ecx+18h] +
jmp loc_466604  +
mov eax [esp+14Ch+var_130] +
test eax eax +
jz loc_465C79  +
mov eax [esi] +
test eax eax +
jz loc_465C79  +
movzx edx byte ptr [eax+18h] +
test dl 0Ch +
jnz loc_46671C  +
or edx 10h +
mov [eax+18h] dl +
or byte ptr [edi+14h] 1 +
mov eax [eax+20h] +
test eax eax +
jnz loc_466709  +
jmp loc_465C79  +
mov esi [esp+14Ch+var_FC] +
mov [edi+1Ch] esi +
mov [esp+14Ch+var_148] 30h +
mov [esp+14Ch+var_14C] esi +
call sub_4371E0  +
test esi esi +
mov [edi+18h] eax +
jz loc_465C79  +
xor ebx ebx +
jmp loc_466753  +
mov eax [edi+18h] +
lea edx [ebx+ebx*2] +
add ebx 1 +
shl edx 4 +
lea esi [eax+edx] +
call sub_401FF0  +
mov edx eax +
movzx eax word ptr [esi+20h] +
and dx 0FFFh +
and ax 0F000h +
or eax edx +
cmp ebx [esp+14Ch+var_FC] +
mov [esi+20h] ax +
jnz loc_466750  +
jmp loc_465C79  +
mov eax esi +
neg esi  +
mov edx esi +
xor ebx eax +
xor edx eax +
mov esi eax +
xor eax eax +
and edx ebx +
cmovnz edi eax +
cmovz eax esi +
mov [esp+14Ch+var_F8] eax +
jmp loc_465C79  +
test al al +
jz loc_465D0C  +
call sub_401FF0  +
mov [esp+14Ch+var_148] 4 +
mov esi eax +
mov eax [esp+14Ch+var_FC] +
sub eax 1 +
mov [esp+14Ch+var_14C] eax +
call sub_4371E0  +
cmp esi [edi+1Ch] +
mov ebx eax +
jnb loc_465D42  +
lea eax [esi+esi*2] +
mov [esp+14Ch+var_F4] eax +
mov eax [edi+18h] +
shl [esp+14Ch+var_F4] 4 +
mov esi [esp+14Ch+var_F4] +
mov eax [eax+esi+24h] +
test eax eax +
jnz loc_465D42  +
xor esi esi +
call sub_401FF0  +
test eax eax +
jz loc_466825  +
test esi esi +
jnz loc_466854  +
mov esi [esp+14Ch+var_104] +
mov edx 8 +
mov dword ptr [ebx] 0 +
mov [ebx+4] esi +
mov esi 3 +
mov [ebx+edx] eax +
call sub_401FF0  +
test eax eax +
jnz loc_4667FE  +
call sub_402020  +
test eax eax +
lea esi [esi+0] +
jz loc_466860  +
call sub_401AF0  +
mov dword ptr [ebx+esi*4] 0 +
mov edx eax +
mov [esp+14Ch+var_104] eax +
lea eax ds:0[esi*4] +
add esi 2 +
mov [ebx+eax+4] edx +
jmp loc_4667F5  +
lea edx ds:0[esi*4] +
add esi 1 +
jmp loc_466819  +
mov eax [esp+14Ch+var_F4] +
add eax [edi+18h] +
mov [eax+24h] ebx +
mov [eax+28h] esi +
jmp loc_465C79  +
mov [esp+14Ch+var_148] 1 +
mov [esp+14Ch+var_14C] edx +
call sub_438E10  +
test eax eax +
mov [edi+4] eax +
jnz loc_466552  +
mov eax [edi] +
mov [edi+4] eax +
jmp loc_466552  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_148] offset aSNoFunctionsFo +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_465A7D  +
mov [esp+14Ch+var_144] offset aGcov_position +
mov [esp+14Ch+var_148] 4Ah +
mov [esp+14Ch+var_14C] offset a____GccGccGc_0 +
call sub_406BF0  +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi ebx +
scas   +
mov eax ds:dword_48007C +
mov [esp+14Ch+var_148] eax +
mov edx ecx +
not edx  +
lea eax [ebx+edx-1] +
mov [esp+14Ch+var_14C] eax +
call sub_43DA70  +
mov edx ebx +
not edx  +
lea ecx [ebx+eax] +
movzx edx byte ptr [ecx+edx] +
cmp dl 2Fh +
jz loc_466915  +
cmp dl 5Ch +
jz loc_466915  +
mov word ptr [eax] 2Fh +
mov [esp+14Ch+var_14C] esi +
call sub_437300  +
mov [esp+14Ch+var_14C] ebx +
test eax eax +
cmovz eax esi +
mov [esp+14Ch+var_148] eax +
call strcat  +
jmp loc_465959  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_148] offset aSCannotOpenNot +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_465A7D  +
cmp ds:dword_4800A4 0 +
mov [esp+14Ch+var_114] 0 +
jnz loc_466979  +
mov eax [ebp+arg_4] +
mov edi [esp+14Ch+var_120] +
mov eax [eax+edi*4-4] +
mov [esp+14Ch+var_114] eax +
mov ebx ds:dword_4800DC +
mov esi ds:dword_4800E0 +
test ebx ebx +
jz loc_4669AB  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4669A3  +
mov [esp+14Ch+var_148] 10h +
mov [esp+14Ch+var_14C] eax +
call sub_4371E0  +
mov [esi+8] eax +
add esi 34h +
sub ebx 1 +
jnz loc_466989  +
mov eax ds:dword_4800E4 +
lea edi [esp+14Ch+var_AC] +
mov [esp+14Ch+var_130] edi +
test eax eax +
mov [esp+14Ch+var_11C] eax +
jz loc_466C26  +
xor eax eax +
mov edi [esp+14Ch+var_130] +
mov dword ptr [edi+eax] 0 +
add eax 4 +
cmp eax 20h +
jb loc_4669C9  +
mov edi [esp+14Ch+var_11C] +
cmp ds:dword_480090 0 +
mov [esp+14Ch+var_120] 1 +
mov eax [edi+4] +
cmovz eax [edi] +
xor esi esi +
mov ecx [edi+1Ch] +
mov [esp+14Ch+var_90] eax +
mov eax ds:dword_480080 +
test eax eax +
mov [esp+14Ch+var_134] eax +
mov eax esi +
cmovnz eax [esp+14Ch+var_130] +
xor edi edi +
test ecx ecx +
mov [esp+14Ch+var_128] eax +
jz loc_467256  +
mov esi [esp+14Ch+var_11C] +
mov eax [esp+14Ch+var_120] +
mov edx [esi+18h] +
lea eax [eax+eax*2] +
shl eax 4 +
lea eax [edx+eax-30h] +
mov edx [eax+1Ch] +
mov [esp+14Ch+var_104] eax +
mov eax [eax+18h] +
mov esi edx +
or esi eax +
mov [esp+14Ch+var_10C] eax +
mov [esp+14Ch+var_108] edx +
jz loc_466A63  +
cmp [esp+14Ch+var_120] 1 +
jz loc_466A63  +
cmp ecx [esp+14Ch+var_120] +
jz loc_466A63  +
mov eax [esp+14Ch+var_11C] +
add dword ptr [eax+20h] 1 +
mov eax [esp+14Ch+var_104] +
mov ebx [eax+24h] +
mov eax [eax+28h] +
mov [esp+14Ch+var_12C] ebx +
test eax eax +
mov [esp+14Ch+var_F8] eax +
jz loc_466B6F  +
mov eax ds:dword_4800E0 +
xor ecx ecx +
mov edx [esp+14Ch+var_108] +
mov [esp+14Ch+var_FC] 0 +
mov [esp+14Ch+var_110] eax +
mov eax [esp+14Ch+var_10C] +
mov esi edx +
or esi eax +
mov eax [esp+14Ch+var_128] +
mov [esp+14Ch+var_124] esi +
mov [esp+14Ch+var_100] eax +
jmp loc_466AD2  +
imul edx [ebx+4] +
add ecx 1 +
add edx [esp+14Ch+var_110] +
add ecx 1 +
cmp ecx [esp+14Ch+var_F8] +
lea eax [ebx+4] +
mov [esp+14Ch+var_FC] edx +
lea ebx [eax+4] +
jz loc_466B6F  +
mov eax [ebx] +
test eax eax +
jz loc_466AB0  +
shl eax 4 +
mov edi eax +
mov eax [esp+14Ch+var_FC] +
add edi [eax+8] +
mov eax [esp+14Ch+var_100] +
test eax eax +
jz loc_4671DD  +
test byte ptr [edi+0Ch] 1 +
jnz loc_466AFD  +
mov eax [esp+14Ch+var_100] +
add dword ptr [eax] 1 +
mov eax [edi+4] +
mov edx [edi] +
mov esi eax +
or esi edx +
jnz loc_4671D0  +
mov eax [esp+14Ch+var_124] +
mov [esp+14Ch+var_F4] 0 +
mov [esp+14Ch+var_F0] 0 +
test eax eax +
jz loc_466B2C  +
mov eax [esp+14Ch+var_100] +
add dword ptr [eax+4] 1 +
movzx eax byte ptr [edi+0Ch] +
mov edx eax +
or edx 1 +
mov [edi+0Ch] dl +
mov edx [esp+14Ch+var_104] +
cmp byte ptr [edx+21h] 0 +
js loc_466B48  +
or eax 3 +
mov [edi+0Ch] al +
mov eax [esp+14Ch+var_F4] +
add eax [esp+14Ch+var_10C] +
mov edx [esp+14Ch+var_F0] +
adc edx [esp+14Ch+var_108] +
add ecx 1 +
cmp ecx [esp+14Ch+var_F8] +
mov [edi] eax +
mov eax ebx +
mov [edi+4] edx +
lea ebx [eax+4] +
jnz loc_466AD2  +
mov eax [esp+14Ch+var_12C] +
mov [esp+14Ch+var_14C] eax +
call free  +
mov eax [esp+14Ch+var_104] +
cmp [esp+14Ch+var_120] 1 +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+28h] 0FFFFFFFFh +
mov eax [esp+14Ch+var_11C] +
mov ecx [eax+1Ch] +
jz loc_466BD7  +
cmp ecx [esp+14Ch+var_120] +
jz loc_466BDD  +
mov esi ds:dword_480084 +
test esi esi +
jz loc_4671EF  +
test edi edi +
mov eax edi +
jz loc_46723A  +
mov edx [eax+8] +
mov esi [esp+14Ch+var_104] +
mov [esi+2Ch] edx +
mov [eax+8] esi +
add [esp+14Ch+var_120] 1 +
jmp loc_466A21  +
mov eax [esp+14Ch+var_11C] +
mov ecx [eax+1Ch] +
cmp ecx [esp+14Ch+var_120] +
jnz loc_466BC6  +
test edi edi +
jz loc_467256  +
mov eax [esp+14Ch+var_134] +
test eax eax +
jz loc_466C13  +
mov eax [esp+14Ch+var_130] +
mov edx offset aFunction_0 +
call sub_402BB0  +
mov eax ds:_iob +
mov [esp+14Ch+var_148] offset asc_46DBC4 +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax [esp+14Ch+var_11C] +
mov eax [eax+38h] +
test eax eax +
mov [esp+14Ch+var_11C] eax +
jnz loc_4669C7  +
cmp [esp+14Ch+var_114] 0 +
jz loc_467092  +
mov eax ds:dword_4800D0 +
mov [esp+14Ch+var_13C] offset loc_401AD0 +
mov [esp+14Ch+var_140] 8 +
mov [esp+14Ch+var_144] eax +
mov eax ds:dword_4800D4 +
mov [esp+14Ch+var_148] eax +
mov eax [esp+14Ch+var_114] +
mov [esp+14Ch+var_14C] eax +
call bsearch  +
test eax eax +
jz loc_467085  +
mov edx ds:dword_4800E0 +
imul eax [eax+4] +
mov eax [edx+eax+2Ch] +
mov [esp+14Ch+var_114] eax +
lea eax [edx+10h] +
mov [esp+14Ch+var_F4] eax +
mov eax ds:dword_4800DC +
test eax eax +
mov [esp+14Ch+var_124] eax +
jnz loc_466CC2  +
jmp loc_46709D  +
mov eax [esp+14Ch+var_F4] +
mov edx [eax+1Ch] +
movzx eax byte ptr [edx] +
test al al +
jz loc_466CCC  +
cmp byte ptr [edx+1] 3Ah +
jz loc_4671C6  +
cmp al 5Ch +
jnz loc_4671B9  +
add [esp+14Ch+var_F4] 34h +
sub [esp+14Ch+var_124] 1 +
jz loc_46709D  +
mov ecx ds:dword_480070 +
test ecx ecx +
jnz loc_466C92  +
mov eax [esp+14Ch+var_F4] +
mov eax [eax+20h] +
test eax eax +
jz loc_466CE9  +
xor edx edx +
jmp loc_466CDF  +
mov edx eax +
mov eax ecx +
mov ecx [eax+34h] +
mov [eax+34h] edx +
test ecx ecx +
jnz loc_466CDB  +
mov edi [esp+14Ch+var_F4] +
mov [edi+20h] eax +
mov eax [edi-4] +
mov edi [edi-8] +
test eax eax +
mov [esp+14Ch+var_FC] edi +
lea edi [eax-1] +
mov [esp+14Ch+var_100] edi +
jz loc_466E86  +
mov edx ds:dword_480084 +
mov eax [esp+14Ch+var_FC] +
test edx edx +
jnz loc_466D90  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_466D3D  +
xor eax eax +
mov edi [esp+14Ch+var_F4] +
jmp loc_466D2A  +
mov eax ebx +
mov ebx esi +
mov esi [ebx+1Ch] +
mov edx ebx +
mov [ebx+1Ch] eax +
mov eax edi +
call sub_402040  +
test esi esi +
jnz loc_466D26  +
mov eax [esp+14Ch+var_FC] +
mov [eax+8] ebx +
mov eax [esp+14Ch+var_FC] +
test byte ptr [eax+0Ch] 1 +
jz loc_466D68  +
mov eax [esp+14Ch+var_F4] +
mov edi [esp+14Ch+var_FC] +
add dword ptr [eax] 1 +
mov eax [edi+4] +
or eax [edi] +
jz loc_466D68  +
mov eax [esp+14Ch+var_F4] +
add dword ptr [eax+4] 1 +
mov edi [esp+14Ch+var_100] +
add [esp+14Ch+var_FC] 10h +
mov eax edi +
sub eax 1 +
test edi edi +
jz loc_466E86  +
mov edx ds:dword_480084 +
mov [esp+14Ch+var_100] eax +
mov eax [esp+14Ch+var_FC] +
test edx edx +
jz loc_466D17  +
mov edi [eax+8] +
test edi edi +
jz loc_466D44  +
xor edx edx +
mov ecx [esp+14Ch+var_100] +
jmp loc_466DA3  +
mov edx edi +
mov edi eax +
mov eax [edi+2Ch] +
mov [edi+28h] ecx +
mov [edi+2Ch] edx +
test eax eax +
jnz loc_466D9F  +
mov eax [esp+14Ch+var_FC] +
mov [eax+8] edi +
mov ebx [edi+4] +
mov esi ds:dword_4800A0 +
test ebx ebx +
jnz loc_466DCD  +
jmp loc_466DE4  +
mov ebx [ebx+24h] +
test ebx ebx +
jz loc_466DE4  +
test esi esi +
nop   +
jz loc_466DC6  +
mov eax [esp+14Ch+var_F4] +
mov edx ebx +
call sub_402040  +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_466DCD  +
mov edi [edi+2Ch] +
test edi edi +
jnz loc_466DB7  +
mov eax [esp+14Ch+var_FC] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_46716C  +
mov [esp+14Ch+var_F8] ebx +
xor esi esi +
xor edi edi +
mov eax [esp+14Ch+var_F8] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_466E38  +
lea esi [esi+0] +
mov edx [ecx] +
cmp ebx edx +
jz loc_466E31  +
mov eax ebx +
jmp loc_466E24  +
cmp edx eax +
jz loc_466E31  +
mov eax [eax+2Ch] +
test eax eax +
jnz loc_466E20  +
add esi [ecx+8] +
adc edi [ecx+0Ch] +
mov ecx [ecx+24h] +
test ecx ecx +
jnz loc_466E10  +
mov eax [esp+14Ch+var_F8] +
mov edx ebx +
mov eax [eax] +
test eax eax +
jz loc_466E59  +
mov ecx [eax+8] +
mov ebx [eax+0Ch] +
mov [eax+10h] ecx +
mov [eax+14h] ebx +
mov eax [eax+20h] +
test eax eax +
jnz loc_466E44  +
mov ebx edx +
mov eax [esp+14Ch+var_F8] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+14Ch+var_F8] eax +
jnz loc_466E02  +
mov ebx [esp+14Ch+var_FC] +
mov edx 1 +
mov eax ebx +
call sub_403470  +
add eax esi +
adc edx edi +
mov [ebx] eax +
mov [ebx+4] edx +
jmp loc_466D44  +
mov edi [esp+14Ch+var_F4] +
mov edx offset aFile +
mov eax edi +
call sub_402BB0  +
mov eax [edi] +
add ds:dword_4800C0 eax +
mov eax [edi+4] +
add ds:dword_4800BC eax +
mov eax dword_468004 +
test eax eax +
jz loc_466CB2  +
mov eax [esp+14Ch+var_F4] +
cmp ds:dword_48008C 0 +
mov esi [eax+1Ch] +
jz loc_466EE0  +
mov eax [esp+14Ch+var_114] +
test eax eax +
jz loc_466EE0  +
mov [esp+14Ch+var_148] eax +
mov [esp+14Ch+var_14C] esi +
call strcmp  +
test eax eax +
jnz loc_467175  +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi esi +
scas   +
mov edx ecx +
not edx  +
lea ecx [edx+9] +
mov [esp+14Ch+var_14C] ecx +
call sub_4371B0  +
mov [esp+14Ch+var_FC] eax +
mov edx eax +
mov eax esi +
call sub_4019E0  +
cmp ds:dword_480088 0 +
mov dword ptr [eax] 6F63672Eh +
mov word ptr [eax+4] 76h +
jnz loc_4678D7  +
mov eax [esp+14Ch+var_F4] +
cmp dword ptr [eax] 0 +
jz loc_4678AA  +
mov esi [esp+14Ch+var_FC] +
mov [esp+14Ch+var_148] offset aW +
mov [esp+14Ch+var_14C] esi +
call fopen  +
test eax eax +
mov edi eax +
jz loc_4679E2  +
mov eax ds:_iob +
mov [esp+14Ch+var_144] esi +
mov [esp+14Ch+var_148] offset aCreatingS +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
cmp ds:dword_480094 0 +
jz loc_4672EE  +
mov esi [esp+14Ch+var_F4] +
mov eax [esi-10h] +
mov [esp+14Ch+var_148] offset aFileS +
mov [esp+14Ch+var_14C] edi +
mov [esp+14Ch+var_144] eax +
call sub_45A760  +
mov ebx [esi+20h] +
test ebx ebx +
jz loc_466FEC  +
mov eax ds:dword_480090 +
mov esi [ebx+4] +
test eax eax +
mov eax [ebx+18h] +
cmovz esi [ebx] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+14Ch+var_144] 0FFFFFFFFh +
mov [esp+14Ch+var_14C] 0 +
mov [esp+14Ch+var_148] 0 +
call sub_4027C0  +
mov edx [ebx+2Ch] +
mov [esp+14Ch+var_13C] esi +
mov [esp+14Ch+var_148] offset aFunctionDSS +
mov [esp+14Ch+var_14C] edi +
mov [esp+14Ch+var_144] edx +
mov [esp+14Ch+var_140] eax +
call sub_45A760  +
mov ebx [ebx+34h] +
test ebx ebx +
jnz loc_466F94  +
mov eax [esp+14Ch+var_F4] +
mov esi [eax-8] +
cmp dword ptr [eax-4] 1 +
mov [esp+14Ch+var_F8] esi +
lea ecx [esi+10h] +
mov esi 1 +
jbe loc_467775  +
mov [esp+14Ch+var_F8] edi +
mov edi ecx +
test byte ptr [edi+0Ch] 1 +
jnz loc_4672AC  +
mov ecx ds:dword_4800A0 +
test ecx ecx +
jz loc_467290  +
mov ebx [edi+8] +
test ebx ebx +
jnz loc_467065  +
jmp loc_467290  +
jle loc_46782A  +
mov eax offset aTaken +
mov [esp+14Ch+var_140] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_144] esi +
mov [esp+14Ch+var_148] offset aBranchDS +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_467290  +
test byte ptr [ebx+18h] 0A0h +
jnz loc_46705A  +
mov edx [ebx] +
mov eax offset aNotexec +
mov ecx [edx+1Ch] +
or ecx [edx+18h] +
jz loc_46703E  +
cmp dword ptr [ebx+0Ch] 0 +
jge loc_467033  +
jmp loc_467834  +
mov eax [esp+14Ch+var_114] +
call sub_4018A0  +
mov [esp+14Ch+var_114] eax +
mov edx ds:dword_4800E0 +
jmp loc_466C79  +
cmp [esp+14Ch+var_114] 0 +
jz loc_467136  +
mov ebx ds:dword_4800DC +
test ebx ebx +
jz loc_4670D1  +
imul eax ebx +
mov edx ds:dword_4800E0 +
lea esi [edx+eax-2Ch] +
mov eax [esi] +
sub esi 34h +
mov [esp+14Ch+var_14C] eax +
call free  +
sub ebx 1 +
jnz loc_4670BF  +
mov eax ds:dword_4800E0 +
mov [esp+14Ch+var_14C] eax +
call free  +
mov ebx ds:dword_4800D0 +
mov esi ds:dword_4800D4 +
test ebx ebx +
jz loc_4670FF  +
mov eax [esi+ebx*8-8] +
mov [esp+14Ch+var_14C] eax +
call free  +
sub ebx 1 +
jnz loc_4670EE  +
mov eax ds:dword_4800D4 +
mov [esp+14Ch+var_14C] eax +
call free  +
mov eax ds:dword_4800E4 +
test eax eax +
jz loc_46712C  +
mov edx [eax+38h] +
mov ds:dword_4800E4 edx +
call sub_4016E0  +
mov eax ds:dword_4800E4 +
test eax eax +
jnz loc_467115  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4800C0 +
mov edx ds:dword_4800BC +
test eax eax +
jnz loc_467162  +
mov eax ds:_iob +
mov [esp+14Ch+var_148] offset aNoExecutableLi +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_4670A8  +
call sub_402B60  +
jmp loc_4670A8  +
xor esi esi +
xor edi edi +
jmp loc_466E68  +
mov edi [esp+14Ch+var_114] +
or ebx 0FFFFFFFFh +
xor eax eax +
mov ecx ebx +
scas   +
mov edi esi +
mov edx ecx +
mov ecx ebx +
scas   +
not edx  +
not ecx  +
lea eax [edx+ecx+8] +
mov [esp+14Ch+var_14C] eax +
call sub_4371B0  +
mov edx eax +
mov [esp+14Ch+var_FC] eax +
mov eax [esp+14Ch+var_114] +
call sub_4019E0  +
mov byte ptr [eax+1] 23h +
add eax 2 +
mov byte ptr [eax-2] 23h +
jmp loc_466EFC  +
cmp al 2Fh +
jz loc_466CB2  +
jmp loc_466CCC  +
movzx eax byte ptr [edx+2] +
jmp loc_466CAA  +
mov [esp+14Ch+var_F4] edx +
mov [esp+14Ch+var_F0] eax +
jmp loc_466B2C  +
mov eax [edi] +
mov edx [edi+4] +
mov [esp+14Ch+var_F4] eax +
mov [esp+14Ch+var_F0] edx +
jmp loc_466B2C  +
mov ebx ds:dword_4800A0 +
test ebx ebx +
jz loc_466BC6  +
mov eax [esp+14Ch+var_104] +
mov ebx [eax] +
test ebx ebx +
jz loc_466BC6  +
mov esi [esp+14Ch+var_128] +
jmp loc_46721C  +
mov ebx [ebx+20h] +
test ebx ebx +
jz loc_466BD0  +
mov eax [edi+8] +
test esi esi +
mov [ebx+1Ch] eax +
mov [edi+8] ebx +
jz loc_467211  +
cmp byte ptr [ebx+18h] 0 +
js loc_467211  +
mov edx ebx +
mov eax esi +
call sub_402040  +
jmp loc_467211  +
mov eax [esp+14Ch+var_11C] +
imul edx [eax+30h] +
mov eax [eax+2Ch] +
add edx ds:dword_4800E0 +
shl eax 4 +
add eax [edx+8] +
jmp loc_466BB9  +
mov eax [esp+14Ch+var_11C] +
mov eax [eax] +
mov [esp+14Ch+var_148] offset aSNoLinesForS +
mov [esp+14Ch+var_140] eax +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov eax ds:dword_480080 +
jmp loc_466BE9  +
mov eax [esp+14Ch+var_F4] +
add esi 1 +
add edi 10h +
cmp esi [eax-4] +
jb loc_46700F  +
mov edi [esp+14Ch+var_F8] +
jmp loc_467775  +
mov eax [edi] +
mov edx [edi+4] +
mov [esp+14Ch+var_144] 0FFFFFFFFh +
mov [esp+14Ch+var_14C] 0 +
mov [esp+14Ch+var_148] 0 +
call sub_4027C0  +
mov [esp+14Ch+var_144] esi +
mov [esp+14Ch+var_148] offset aLcountUS +
mov [esp+14Ch+var_140] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
jmp loc_467019  +
mov eax [esp+14Ch+var_F4] +
mov eax [eax+1Ch] +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5dSourceS +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
cmp ds:dword_4800A4 0 +
jnz loc_4673AF  +
mov eax ds:dword_4800B4 +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5dGraphS +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov eax offset asc_46D96B +
cmp ds:dword_4800A8 0 +
cmovz eax ds:dword_4800AC +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_148] offset a9s5dDataS +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov eax ds:dword_4800C8 +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5dRunsU +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov eax ds:dword_4800C4 +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5dProgramsU +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov eax [esp+14Ch+var_F4] +
mov eax [eax-10h] +
mov [esp+14Ch+var_148] offset aR_0 +
mov [esp+14Ch+var_14C] eax +
call fopen  +
test eax eax +
mov [esp+14Ch+var_110] eax +
jz loc_4677D2  +
mov eax [esp+14Ch+var_F4] +
mov [esp+14Ch+var_10C] offset unk_46D7DF +
cmp dword ptr [eax-0Ch] 0 +
jnz loc_46742D  +
mov [esp+14Ch+var_140] 0 +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5dSourceIsNe +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
xor esi esi +
cmp ds:dword_4800A0 0 +
jz loc_46743F  +
mov eax [esp+14Ch+var_F4] +
mov esi [eax+20h] +
mov eax [esp+14Ch+var_F4] +
mov [esp+14Ch+var_100] 1 +
mov edx [eax-8] +
mov [esp+14Ch+var_F8] edx +
add edx 10h +
cmp dword ptr [eax-4] 1 +
mov [esp+14Ch+var_104] edx +
jbe loc_467725  +
mov [esp+14Ch+var_F8] edi +
mov edi esi +
test edi edi +
jz loc_467802  +
mov eax [edi+2Ch] +
mov ebx edi +
cmp eax [esp+14Ch+var_100] +
mov [esp+14Ch+var_120] eax +
jnz loc_4675C0  +
mov edx [ebx+18h] +
mov eax [edx+34h] +
mov esi [edx+48h] +
mov edi [edx+4Ch] +
test eax eax +
mov [esp+14Ch+var_11C] esi +
mov esi [edx+18h] +
mov [esp+14Ch+var_118] edi +
mov edi [edx+1Ch] +
jz loc_4674CD  +
mov edx ebx +
mov ecx [esp+14Ch+var_11C] +
mov ebx [esp+14Ch+var_118] +
lea esi [esi+0] +
test byte ptr [eax+18h] 4 +
jz loc_4674BC  +
sub ecx [eax+8] +
sbb ebx [eax+0Ch] +
mov eax [eax+24h] +
test eax eax +
jnz loc_4674B0  +
mov [esp+14Ch+var_118] ebx +
mov ebx edx +
mov [esp+14Ch+var_11C] ecx +
mov edx ds:dword_480090 +
mov eax [ebx+4] +
test edx edx +
cmovz eax [ebx] +
mov [esp+14Ch+var_148] offset aFunctionS +
mov [esp+14Ch+var_144] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
mov edx edi +
mov eax esi +
mov [esp+14Ch+var_144] 0FFFFFFFFh +
mov [esp+14Ch+var_14C] 0 +
mov [esp+14Ch+var_148] 0 +
call sub_4027C0  +
mov [esp+14Ch+var_148] offset aCalledS +
mov [esp+14Ch+var_144] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
mov edx [esp+14Ch+var_118] +
mov eax [esp+14Ch+var_11C] +
mov [esp+14Ch+var_14C] esi +
mov [esp+14Ch+var_148] edi +
mov [esp+14Ch+var_144] 0 +
call sub_4027C0  +
mov edi [esp+14Ch+var_F8] +
mov [esp+14Ch+var_148] offset aReturnedS +
mov [esp+14Ch+var_14C] edi +
mov [esp+14Ch+var_144] eax +
call sub_45A760  +
mov eax [ebx+20h] +
xor edx edx +
mov [esp+14Ch+var_144] 0 +
mov esi [ebx+1Ch] +
mov [esp+14Ch+var_148] 0 +
sub esi 2 +
mov [esp+14Ch+var_14C] esi +
call sub_4027C0  +
mov [esp+14Ch+var_148] offset aBlocksExecuted +
mov [esp+14Ch+var_14C] edi +
mov [esp+14Ch+var_144] eax +
call sub_45A760  +
mov [esp+14Ch+var_148] offset asc_46DBC4 +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov ebx [ebx+34h] +
test ebx ebx +
jz loc_467802  +
mov eax [esp+14Ch+var_120] +
cmp eax [ebx+2Ch] +
jz loc_467484  +
mov edi ebx +
mov ecx [esp+14Ch+var_10C] +
test ecx ecx +
jz loc_46783E  +
mov eax [esp+14Ch+var_110] +
call sub_401F10  +
test eax eax +
mov ebx eax +
mov [esp+14Ch+var_10C] eax +
jz loc_46783E  +
mov eax [esp+14Ch+var_104] +
movzx ecx byte ptr [eax+0Ch] +
mov eax offset asc_46D96B +
test cl 1 +
jz loc_467618  +
mov esi [esp+14Ch+var_104] +
mov edx [esi+4] +
mov eax [esi] +
mov esi edx +
or esi eax +
jnz loc_467809  +
and cl 2 +
mov eax offset asc_46D97B +
mov esi offset asc_46D975 +
cmovz eax esi +
mov esi [esp+14Ch+var_100] +
mov [esp+14Ch+var_144] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_13C] ebx +
mov [esp+14Ch+var_148] offset a9s5uS +
mov [esp+14Ch+var_140] esi +
mov [esp+14Ch+var_14C] eax +
call sub_45A760  +
mov edx ds:dword_480084 +
test edx edx +
jz loc_467871  +
mov eax [esp+14Ch+var_104] +
mov [esp+14Ch+var_11C] 0 +
mov esi [eax+8] +
xor eax eax +
test esi esi +
jz loc_467706  +
mov [esp+14Ch+var_120] edi +
mov edi eax +
test byte ptr [esi+22h] 2 +
jnz loc_4676D2  +
mov edx [esp+14Ch+var_104] +
mov eax [esp+14Ch+var_11C] +
test byte ptr [edx+0Ch] 1 +
lea ebx [eax+1] +
mov eax offset asc_46D96B +
jz loc_4676A6  +
mov edx [esi+1Ch] +
mov eax [esi+18h] +
mov ecx edx +
or ecx eax +
jnz loc_467850  +
cmp byte ptr [esi+21h] 0 +
mov eax offset asc_46D987 +
mov edx offset asc_46D981 +
cmovns eax edx +
mov edx [esp+14Ch+var_11C] +
mov [esp+14Ch+var_144] eax +
mov eax [esp+14Ch+var_F8] +
mov [esp+14Ch+var_148] offset a9s5uBlock2d +
mov [esp+14Ch+var_13C] edx +
mov edx [esp+14Ch+var_100] +
mov [esp+14Ch+var_14C] eax +
mov [esp+14Ch+var_140] edx +
call sub_45A760  +
mov [esp+14Ch+var_11C] ebx +
mov eax ds:dword_4800A0 +
test eax eax +
jz loc_4676F7  +
mov ebx [esi] +
test ebx ebx +
jz loc_4676F7  +
mov eax [esp+14Ch+var_F8] +
mov ecx ebx +
mov edx edi +
call sub_4029A0  +
mov ebx [ebx+20h] +
add edi eax +
test ebx ebx +
jnz loc_4676E1  +
mov esi [esi+2Ch] +
test esi esi +
jnz loc_467669  +
mov edi [esp+14Ch+var_120] +
mov eax [esp+14Ch+var_F4] +
add [esp+14Ch+var_100] 1 +
mov esi [esp+14Ch+var_100] +
add [esp+14Ch+var_104] 10h +
cmp esi [eax-4] +
jb loc_467469  +
mov edi [esp+14Ch+var_F8] +
cmp [esp+14Ch+var_10C] 0 +
jz loc_467762  +
mov ebx [esp+14Ch+var_100] +
jmp loc_467755  +
mov [esp+14Ch+var_140] ebx +
add ebx 1 +
mov [esp+14Ch+var_13C] eax +
mov [esp+14Ch+var_144] offset asc_46D96B +
mov [esp+14Ch+var_148] offset a9s5uS +
mov [esp+14Ch+var_14C] edi +
call sub_45A760  +
mov eax [esp+14Ch+var_110] +
call sub_401F10  +
test eax eax +
jnz loc_467732  +
cmp [esp+14Ch+var_110] 0 +
jz loc_467775  +
mov eax [esp+14Ch+var_110] +
mov [esp+14Ch+var_14C] eax +
call fclose  +
mov [esp+14Ch+var_14C] edi +
call ferror  +
test eax eax +
jz loc_4677A1  +
mov eax [esp+14Ch+var_FC] +
mov [esp+14Ch+var_148] offset aErrorWritingOu +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov [esp+14Ch+var_14C] edi +
call fclose  +
mov eax [esp+14Ch+var_FC] +
mov [esp+14Ch+var_14C] eax +
call free  +
mov eax ds:_iob +
mov [esp+14Ch+var_148] offset asc_46DBC4 +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_466CB2  +
mov eax [esp+14Ch+var_F4] +
mov eax [eax-10h] +
mov [esp+14Ch+var_148] offset aCannotOpenSour +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
mov [esp+14Ch+var_10C] 0 +
jmp loc_46742D  +
xor edi edi +
jmp loc_4675C0  +
mov [esp+14Ch+var_144] 0FFFFFFFFh +
mov [esp+14Ch+var_14C] 0 +
mov [esp+14Ch+var_148] 0 +
call sub_4027C0  +
jmp loc_467618  +
cmp dword ptr [ebx+8] 0 +
ja loc_467039  +
mov eax offset aNottaken +
jmp loc_46703E  +
mov [esp+14Ch+var_10C] 0 +
mov ebx offset aEof +
jmp loc_4675E3  +
mov [esp+14Ch+var_144] 0FFFFFFFFh +
mov [esp+14Ch+var_14C] 0 +
mov [esp+14Ch+var_148] 0 +
call sub_4027C0  +
jmp loc_4676A6  +
cmp ds:dword_4800A0 0 +
jz loc_467706  +
mov eax [esp+14Ch+var_104] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_467706  +
xor esi esi +
mov eax [esp+14Ch+var_F8] +
mov ecx ebx +
mov edx esi +
call sub_4029A0  +
mov ebx [ebx+1Ch] +
add esi eax +
test ebx ebx +
jnz loc_46788F  +
jmp loc_467706  +
mov edi [esp+14Ch+var_FC] +
mov [esp+14Ch+var_14C] edi +
call _unlink  +
mov eax ds:_iob +
mov [esp+14Ch+var_144] edi +
mov [esp+14Ch+var_148] offset aRemovingS +
add eax 20h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_4677A9  +
lea eax [esp+14Ch+var_AC] +
mov edi esi +
mov [esp+14Ch+var_14C] eax +
lea ebx [esp+14Ch+var_CD] +
call sub_43DAB0  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
lea eax [esp+14Ch+var_AC] +
mov [esp+14Ch+var_144] eax +
lea edi [esp+14Ch+var_E0] +
mov [esp+14Ch+var_14C] esi +
mov edx ecx +
not edx  +
lea ecx [edx-1] +
mov [esp+14Ch+var_148] ecx +
call sub_43E320  +
lea eax [esp+14Ch+var_E0] +
mov [esp+14Ch+var_148] eax +
lea eax [esp+14Ch+var_AC] +
mov [esp+14Ch+var_14C] eax +
call sub_43E270  +
movzx eax byte ptr [edi] +
add edi 1 +
mov [esp+14Ch+var_14C] ebx +
add ebx 2 +
mov [esp+14Ch+var_148] offset a02x +
mov [esp+14Ch+var_144] eax +
call sub_45A790  +
lea eax [esp+7Ch] +
cmp edi eax +
jnz loc_46792C  +
mov eax [esp+14Ch+var_FC] +
mov edi esi +
mov [esp+14Ch+var_14C] eax +
call free  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
lea ecx [edx+31h] +
mov [esp+14Ch+var_14C] ecx +
call sub_4371B0  +
mov edx eax +
mov [esp+14Ch+var_FC] eax +
mov eax esi +
call sub_4019E0  +
lea esi [esp+14Ch+var_CD] +
mov edx 20h +
lea edi [eax+2] +
test edi 1 +
mov byte ptr [eax+1] 23h +
mov byte ptr [eax] 23h +
jz loc_4679A0  +
movs   +
mov dl 1Fh +
test edi 2 +
jz loc_4679AD  +
movs   +
sub edx 2 +
mov ecx edx +
shr ecx 2 +
test dl 2 +
movs   +
jz loc_4679C4  +
movzx ecx word ptr [esi] +
mov [edi] cx +
mov ecx 2 +
and dl 1 +
jz loc_4679D0  +
movzx edx byte ptr [esi+ecx] +
mov [edi+ecx] dl +
mov dword ptr [eax+22h] 6F63672Eh +
mov word ptr [eax+26h] 76h +
jmp loc_466F1E  +
mov eax [esp+14Ch+var_FC] +
mov [esp+14Ch+var_148] offset aCouldNotOpenOu +
mov [esp+14Ch+var_144] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14Ch+var_14C] eax +
call sub_406B60  +
jmp loc_4677A9  +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_overhe +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMemS +
call sub_406BF0  +
nop   +
sub esp 1Ch +
mov ecx offset dword_480100 +
call sub_45D390  +
mov [esp+38h+var_38] offset sub_403660 +
call sub_453A00  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_1 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_1 +
call sub_406BF0  +
nop   +
sub esp 1Ch +
mov ecx offset dword_480240 +
call sub_45D590  +
mov [esp+38h+var_38] offset sub_408CD0 +
call sub_453A00  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aEnsure_termina +
mov [esp+1Ch+var_18] 356h +
mov [esp+1Ch+var_1C] offset a____GccGccEdit +
call sub_406BF0  +
nop   +
mov ds:dword_480268 0 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aMacro_real_tok +
mov [esp+1Ch+var_18] 439h +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_406BF0  +
nop   +
mov dword_46CB94 0FFFFFFFFh +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset loc_465610 +
mov dword_46CBA8 offset off_47ECC8 +
call sub_453A00  +
mov [esp+1Ch+var_1C] offset loc_465670 +
mov dword_46CBA4 offset off_47EC88 +
call sub_453A00  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_45A8E0 +
mov [esp+1Ch+var_1C] offset dword_46CB80 +
mov byte_46CB84 0 +
call pthread_key_create  +
mov [esp+1Ch+var_1C] offset loc_465640 +
test eax eax +
setz byte_46CB84  +
call sub_453A00  +
add esp 1Ch +
retn   +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_453A00  +
leave   +
retn   +
***
