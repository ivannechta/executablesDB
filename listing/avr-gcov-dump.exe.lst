sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_46B368 1 +
mov ds:dword_46B364 1 +
mov ds:dword_46B360 1 +
mov ds:dword_46B370 1 +
jz loc_4010B0  +
mov ds:dword_46B008 eax +
mov eax ds:dword_46B374 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_449B70  +
mov edx ds:dword_46B378 +
mov ds:dword_46C0DC eax +
mov ds:dword_46C0E0 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_449DB0  +
cmp dword_45611C 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_449E20 +
call sub_449E10  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_46B37C +
mov dword ptr [esp+10h] offset dword_46B000 +
mov dword ptr [esp+8] offset dword_46B014 +
mov dword ptr [esp+4] offset dword_46B018 +
mov ds:dword_46B000 eax +
mov eax ds:dword_46B380 +
mov dword ptr [esp] offset dword_46B01C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_46B010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_44AB70  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_46B374 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_46C0E4 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_46C0E8 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_46C0E8 +
test eax eax +
jz loc_401481  +
mov ds:dword_46B004 1 +
mov eax ds:dword_46C0E8 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_469760 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_44A120  +
mov [esp+88h+var_88] offset sub_449C60 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_46B384 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_456140  +
call sub_44A3F0  +
mov eax ds:_acmdln +
mov ds:dword_46C0D0 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_46C0CC eax +
mov ebx ds:dword_46B374 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_456000 eax +
mov eax ds:dword_46B01C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_46B018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_46B018 esi +
call sub_44A480  +
mov edx ds:dword_46B014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_46B01C +
mov ecx ds:dword_46B014 +
mov edx ds:dword_46B018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_455470  +
mov ecx ds:dword_46B008 +
test ecx ecx +
mov ds:dword_46B00C eax +
jz loc_4014AB  +
mov edx ds:dword_46B004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_46B00C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_46C0E8 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_46C0E8 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_46E008 +
mov [esp+88h+var_88] offset unk_46E000 +
call _initterm  +
test ebx ebx +
mov ds:dword_46C0E8 2 +
jnz loc_401261  +
xchg ebx ds:dword_46C0E4 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_46C0E8 1 +
mov [esp+88h+var_84] offset unk_46E018 +
mov [esp+88h+var_88] offset unk_46E00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_46B374 1 +
call sub_44A4A0  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_46B374 0 +
call sub_44A4A0  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_45AB84 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_45AB84 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
sub esp 14h +
mov edx ds:dword_46B028 +
mov ebx ds:dword_46B02C +
mov ecx ds:dword_46B038 +
sub ebx edx +
test ecx ecx +
jle loc_401690  +
cmp ebx eax +
mov esi eax +
jnb loc_4015F9  +
add ds:dword_46B024 edx +
test ebx ebx +
jnz loc_401610  +
mov edx ds:dword_46B040 +
lea eax [esi+ebx] +
mov ds:dword_46B028 0 +
mov ds:dword_46B02C ebx +
cmp eax edx +
ja loc_401634  +
mov eax ds:dword_46B044 +
mov ecx ds:dword_46B020 +
sub edx ebx +
shl edx 2 +
lea eax [eax+ebx*4] +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] eax +
call fread  +
shr eax 2 +
add eax ds:dword_46B02C +
cmp esi eax +
mov ds:dword_46B02C eax +
ja loc_401672  +
mov edx ds:dword_46B028 +
mov eax ds:dword_46B044 +
add esi edx +
mov ds:dword_46B028 esi +
lea eax [eax+edx*4] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_46B044 +
lea ecx ds:0[ebx*4] +
mov [esp+14h+var_C] ecx +
lea edx [eax+edx*4] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call memmove  +
jmp loc_401591  +
test edx edx +
mov ecx 400h +
cmovz edx ecx +
add edx eax +
lea eax [edx+edx] +
mov ds:dword_46B040 eax +
mov eax ds:dword_46B044 +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_435F50  +
mov edx ds:dword_46B040 +
mov ebx ds:dword_46B02C +
mov ds:dword_46B044 eax +
jmp loc_4015B7  +
sub esi eax +
xor eax eax +
add ds:dword_46B030 esi +
mov ds:dword_46B02C 0 +
jmp loc_401609  +
xor eax eax +
jmp loc_401609  +
***
sub esp 1Ch +
mov eax ds:dword_46B020 +
test eax eax +
jz loc_4016C8  +
mov [esp+1Ch+var_1C] eax +
call fclose  +
mov ds:dword_46B020 0 +
mov ds:dword_46B02C 0 +
mov eax ds:dword_46B044 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax ds:dword_46B034 +
mov ds:dword_46B040 0 +
mov ds:dword_46B044 0 +
mov ds:dword_46B038 0 +
add esp 1Ch +
retn   +
***
sub esp 0Ch +
mov eax 1 +
call sub_401560  +
test eax eax +
jz loc_401726  +
mov eax [eax] +
mov ecx ds:dword_46B03C +
mov edx eax +
test ecx ecx +
bswap edx  +
cmovnz eax edx +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
call sub_401700  +
test eax eax +
jz loc_401744  +
add esp 0Ch +
jmp sub_401560  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aGcov_position +
mov [esp+1Ch+var_18] 4Ah +
mov [esp+1Ch+var_1C] offset a____GccGccGcov +
call sub_405910  +
nop   +
push ebx  +
mov eax 2 +
sub esp 8 +
call sub_401560  +
test eax eax +
jz loc_4017B0  +
mov edx ds:dword_46B03C +
mov ecx [eax] +
test edx edx +
jnz loc_4017A0  +
mov edx [eax+4] +
xor ebx ebx +
add esp 8 +
or edx ebx +
mov eax ecx +
pop ebx  +
retn   +
mov edx [eax+4] +
bswap ecx  +
xor ebx ebx +
bswap edx  +
jmp loc_401793  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
***
mov eax ds:dword_46B028 +
add eax ds:dword_46B024 +
sub eax edi +
sub eax esi +
cmp ebx eax +
ja loc_401852  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
call sub_401730  +
mov ebx offset aNull_1 +
mov dword ptr [esp] offset aS_3 +
test eax eax +
cmovz eax ebx +
mov [esp+4] eax +
call sub_450920  +
call sub_401730  +
mov dword ptr [esp] offset aS_4 +
test eax eax +
cmovnz ebx eax +
mov [esp+4] ebx +
call sub_450920  +
call sub_401700  +
mov dword ptr [esp+20h] offset aU_1 +
mov [esp+24h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_450920  +
***
mov dword ptr [esp+20h] offset aPlaceholder +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_450920  +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aS_8 +
call sub_450920  +
mov eax ds:dword_46B04C +
test eax eax +
jz loc_4018F2  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] offset aLu +
call sub_450920  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] offset asc_45B6DC +
mov [esp+18h+var_18] offset a_S +
call sub_450920  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
mov eax 242Ch +
push edi  +
push esi  +
push ebx  +
call sub_44AB70  +
xor esi esi +
sub esp eax +
call sub_401700  +
lea edi [esp+0C80h] +
lea ebp [esp+478h] +
mov [esp+34h] eax +
mov [esp+0C58h] eax +
call sub_401700  +
mov [esp+38h] eax +
mov [esp+0C60h] eax +
call sub_401700  +
mov [esp+3Ch] eax +
mov [esp+0C64h] eax +
call loc_401770  +
mov [esp+28h] eax +
mov [esp+2Ch] edx +
mov [esp+0C68h] eax +
mov [esp+0C6Ch] edx +
call loc_401770  +
mov [esp+40h] eax +
mov [esp+44h] edx +
mov [esp+0C70h] eax +
mov [esp+0C74h] edx +
call loc_401770  +
mov ecx 5E8h +
mov [esp+48h] eax +
mov [esp+0C78h] eax +
xor eax eax +
mov [esp+0C7Ch] edx +
stos   +
lea edi [esp+458h] +
mov [esp+4Ch] edx +
mov ebx edi +
call sub_401700  +
add ebx 4 +
mov [ebx-4] eax +
mov [esp] eax +
mov dword ptr [esp+4] 0 +
call sub_44ABA0  +
add esi eax +
cmp ebx ebp +
jnz loc_4019C3  +
test esi esi +
jz loc_401AAF  +
mov [esp+30h] esi +
xor ebx ebx +
xor esi esi +
xor ebp ebp +
test ebx ebx +
jnz loc_401A45  +
mov ebp esi +
shl ebp 5 +
cmp esi 8 +
jz loc_401A27  +
lea eax [ebp+20h] +
jmp loc_401A14  +
mov ebp eax +
mov eax edx +
add esi 1 +
mov ebx [edi+esi*4-4] +
test ebx ebx +
jnz loc_401A45  +
cmp esi 8 +
lea edx [eax+20h] +
jnz loc_401A10  +
mov eax ds:dword_46B088 +
mov dword ptr [esp+4] offset aCorruptedProfi +
mov [esp] eax +
call sub_406E30  +
lea esi [esi+0] +
add ebp 1 +
shr ebx 1 +
test bl 1 +
jz loc_401A40  +
cmp ebp 0FBh +
ja loc_401BF5  +
call sub_401700  +
lea edx [ebp+ebp*2+0] +
add ebp 1 +
lea ecx ds:0[edx*8] +
mov [esp+20h] ecx +
shr ebx 1 +
mov [esp+ecx+0C80h] eax +
call loc_401770  +
mov ecx [esp+20h] +
mov [esp+ecx+0C88h] eax +
mov [esp+ecx+0C8Ch] edx +
call loc_401770  +
mov ecx [esp+20h] +
sub dword ptr [esp+30h] 1 +
mov [esp+ecx+0C90h] eax +
mov [esp+ecx+0C94h] edx +
jnz loc_4019F6  +
mov eax [esp+34h] +
lea ebx [esp+0C80h] +
xor esi esi +
mov dword ptr [esp] offset aChecksum0x08x +
mov [esp+4] eax +
call sub_450920  +
mov dword ptr [esp] offset asc_45B0D1 +
call sub_450920  +
mov eax [esp+2440h] +
xor ecx ecx +
xor edx edx +
call sub_4018C0  +
mov eax [esp+3Ch] +
mov dword ptr [esp] offset aCountsURunsU +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_450920  +
mov edx [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [esp] offset aSum_allLld +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_450920  +
mov edx [esp+44h] +
mov eax [esp+40h] +
mov dword ptr [esp] offset aRun_maxLld +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_450920  +
mov edx [esp+4Ch] +
mov eax [esp+48h] +
mov dword ptr [esp] offset aSum_maxLld +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_450920  +
mov dword ptr [esp] offset asc_45B0D1 +
call sub_450920  +
mov eax [esp+2440h] +
xor ecx ecx +
xor edx edx +
call sub_4018C0  +
mov dword ptr [esp] offset aCounterHistogr +
call sub_450920  +
mov ebp [ebx] +
test ebp ebp +
jz loc_401BD2  +
mov dword ptr [esp] offset asc_45B0D1 +
call sub_450920  +
mov eax [esp+2440h] +
xor edx edx +
xor ecx ecx +
call sub_4018C0  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [esp+14h] eax +
mov [esp+18h] edx +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
mov [esp+10h] edx +
mov dword ptr [esp] offset aDNumCountsUMin +
call sub_450920  +
add esi 1 +
add ebx 18h +
cmp esi 0FCh +
jnz loc_401B80  +
mov esi ds:dword_46B048 +
test esi esi +
jnz loc_401C0A  +
add esp 242Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_46B088 +
mov dword ptr [esp+4] offset aCorruptedPro_0 +
mov [esp] eax +
call sub_406E30  +
mov esi [esp+2Ch] +
xor edx edx +
mov ebx [esp+28h] +
mov ecx esi +
sar ecx 1Fh +
and ecx 7Fh +
mov eax ecx +
add eax ebx +
adc edx esi +
shrd eax edx +
sar edx 7 +
mov ecx eax +
lea esi [esp+58h] +
mov ebx edx +
mov [esi] ecx +
add ecx eax +
mov [esi+4] ebx +
adc ebx edx +
add esi 8 +
cmp esi edi +
jnz loc_401C31  +
mov esi [esp+2Ch] +
xor edx edx +
mov ebx [esp+28h] +
mov dword ptr [esp+30h] 0 +
mov dword ptr [esp+34h] 0FBh +
mov ecx esi +
sar ecx 1Fh +
and ecx 3FFh +
mov eax ecx +
mov ecx ebx +
add eax ebx +
mov ebx esi +
adc edx esi +
shrd eax edx +
sar edx 0Ah +
sub ecx eax +
sbb ebx edx +
xor ebp ebp +
mov [esp+450h] ecx +
xor eax eax +
xor edx edx +
mov [esp+454h] ebx +
lea ecx [esp+0C58h] +
mov ebx eax +
mov esi edx +
add ebx [ecx+17C0h] +
adc esi [ecx+17C4h] +
cmp esi [esp+ebp*8+5Ch] +
mov [esp+28h] ebx +
mov [esp+2Ch] esi +
jl loc_401D73  +
jg loc_401CC8  +
mov esi [esp+28h] +
cmp esi [esp+ebp*8+58h] +
jb loc_401D73  +
mov esi [ecx+17B0h] +
mov ebx [esp+30h] +
mov [esp+38h] esi +
add esi ebx +
mov [esp+3Ch] esi +
jmp loc_401CF4  +
mov eax [esp+20h] +
jg loc_401D63  +
cmp [esp+ebp*8+58h] eax +
jbe loc_401D3E  +
mov eax [esp+20h] +
mov edx [esp+24h] +
cmp ebx [esp+3Ch] +
jz loc_401D7D  +
cmp ebp 80h +
jz loc_401DAB  +
add ebx 1 +
mov esi ebx +
sub esi [esp+30h] +
cmp [esp+38h] esi +
jbe loc_401D69  +
add eax [ecx+17B8h] +
adc edx [ecx+17BCh] +
mov esi ebp +
shl esi 4 +
add esi edi +
mov [esp+20h] eax +
mov [esp+24h] edx +
mov eax [esp+24h] +
cmp [esp+ebp*8+5Ch] eax +
jge loc_401CE0  +
mov eax [ecx+17B8h] +
add ebp 1 +
add esi 10h +
mov edx [ecx+17BCh] +
mov [esi-10h] ebx +
mov [esi-8] eax +
mov [esi-4] edx +
cmp ebp 80h +
jnz loc_401D34  +
jmp loc_401CEC  +
***
mov edx [esp+24h] +
jmp loc_401CF4  +
***
mov eax [esp+28h] +
mov edx [esp+2Ch] +
jmp loc_401D25  +
***
mov ebx [esp+30h] +
add ebx [ecx+17B0h] +
sub dword ptr [esp+34h] 1 +
sub ecx 18h +
cmp ebp 7Fh +
ja loc_401EA5  +
mov eax [esp+34h] +
test eax eax +
js loc_401EA5  +
mov [esp+30h] ebx +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
jmp loc_401C96  +
***
mov dword ptr [esp] offset asc_45B0D1 +
lea esi [esp+460h] +
xor edi edi +
call sub_450920  +
mov eax [esp+2440h] +
xor ecx ecx +
xor edx edx +
mov ebx 4Eh +
mov ebp 51EB851Fh +
call sub_4018C0  +
mov dword ptr [esp] offset aCounterWorking +
call sub_450920  +
mov dword ptr [esp] offset asc_45B0D1 +
add edi 1 +
add esi 10h +
call sub_450920  +
mov eax [esp+2440h] +
xor ecx ecx +
xor edx edx +
call sub_4018C0  +
mov eax [esi-10h] +
mov ecx ebx +
mov edx [esi-0Ch] +
mov [esp+10h] eax +
mov [esp+14h] edx +
mov eax [esi-18h] +
mov dword ptr [esp] offset aU_02uNumCounts +
mov [esp+0Ch] eax +
mov eax ebx +
add ebx 4Eh +
mul  ebp +
shr edx 5 +
imul eax edx +
mov [esp+4] edx +
sub ecx eax +
mov [esp+8] ecx +
call sub_450920  +
cmp edi 7Fh +
jnz loc_401DE6  +
mov dword ptr [esp] offset asc_45B0D1 +
call sub_450920  +
mov eax [esp+2440h] +
xor edx edx +
xor ecx ecx +
call sub_4018C0  +
mov eax [esp+0C50h] +
mov edx [esp+0C54h] +
mov dword ptr [esp+8] 5Ah +
mov dword ptr [esp+4] 63h +
mov [esp+10h] eax +
mov eax [esp+0C48h] +
mov [esp+14h] edx +
mov dword ptr [esp] offset aU_02uNumCounts +
mov [esp+0Ch] eax +
call sub_450920  +
jmp loc_401BEA  +
***
add ebp 0FFFFFF80h +
jz loc_401DAB  +
mov dword ptr [esp+8] offset aCompute_workin +
mov dword ptr [esp+4] 3D9h +
mov dword ptr [esp] offset a____GccGccGcov +
call sub_405910  +
lea esi [esi+0] +
mov edx ds:dword_46B050 +
test edx edx +
jnz loc_401EE0  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
call sub_401700  +
mov [esp+0Ch] eax +
mov eax ds:dword_46B038 +
test eax eax +
jle loc_401F3C  +
mov edi ds:dword_46B024 +
mov ebp ds:dword_46B028 +
call sub_401700  +
test eax eax +
mov ebx eax +
jz loc_401F58  +
test esi esi +
jz loc_401FBC  +
mov [esp+4] esi +
mov esi offset asc_45B225 +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSU +
call sub_450920  +
mov eax ds:dword_46B038 +
test eax eax +
jg loc_401EFB  +
mov dword ptr [esp+8] offset aGcov_position +
mov dword ptr [esp+4] 4Ah +
mov dword ptr [esp] offset a____GccGccGcov +
call sub_405910  +
call sub_401730  +
test eax eax +
mov ebx eax +
jz loc_401FB4  +
mov dword ptr [esp] offset asc_45B0D1 +
mov esi offset asc_45B228 +
call sub_450920  +
mov eax [esp+30h] +
lea ecx [ebp+edi+0] +
xor edx edx +
call sub_4018C0  +
mov eax [esp+0Ch] +
mov dword ptr [esp] offset aBlockU +
mov [esp+4] eax +
call sub_450920  +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset unk_45B22A +
mov dword ptr [esp] offset aSS_0 +
call sub_450920  +
jmp loc_401EF2  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset asc_45B0D1 +
mov esi offset unk_45B22A +
call sub_450920  +
mov eax [esp+30h] +
lea ecx [ebp+edi+0] +
xor edx edx +
call sub_4018C0  +
mov eax [esp+0Ch] +
mov dword ptr [esp] offset aBlockU +
mov [esp+4] eax +
call sub_450920  +
jmp loc_401F1A  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx ds:dword_46B028 +
xor edx edx +
mov eax [esp+30h] +
add ecx ds:dword_46B024 +
call sub_4018C0  +
mov eax [esp+0Ch] +
mov dword ptr [esp] offset aBlockU +
mov [esp+4] eax +
call sub_450920  +
call sub_401700  +
mov ebp eax +
call sub_401700  +
mov [esp+4] ebp +
mov dword ptr [esp] offset aU04x +
mov edi eax +
mov [esp+8] eax +
call sub_450920  +
test edi edi +
jz loc_402064  +
test edi 1 +
mov eax 28h +
jz loc_402043  +
mov dword ptr [esp+4] 28h +
mov dword ptr [esp] offset aCtree +
call sub_450920  +
test edi 2 +
mov eax 2Ch +
jz loc_40204F  +
mov [esp+4] eax +
mov dword ptr [esp] offset aCfake +
call sub_450920  +
and edi 4 +
mov eax 2Ch +
jz loc_402058  +
mov [esp+4] eax +
mov dword ptr [esp] offset aCfall +
call sub_450920  +
jmp loc_402058  +
***
mov ecx ds:dword_46B028 +
xor edx edx +
mov eax edi +
add ecx ds:dword_46B024 +
call sub_4018C0  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aU_2 +
call sub_450920  +
call sub_401700  +
add ebx 1 +
mov dword ptr [esp] offset a04x +
mov [esp+4] eax +
call sub_450920  +
cmp ebx esi +
jnz loc_402180  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx ds:dword_46B028 +
xor edx edx +
mov eax edi +
add ecx ds:dword_46B024 +
call sub_4018C0  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aU_2 +
call sub_450920  +
call loc_401770  +
add ebx 1 +
mov dword ptr [esp] offset asc_45B28F +
mov [esp+1Ch] edx +
mov [esp+18h] eax +
call sub_450920  +
mov eax [esp+18h] +
mov edx [esp+1Ch] +
mov dword ptr [esp] offset aLld_0 +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_450920  +
cmp ebx esi +
jnz loc_402250  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
jmp loc_402309  +
lea eax [edx+1] +
cmp eax ecx +
jz loc_40233E  +
mov edx ecx +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ebx ds:dword_45B9C0[esi] +
ja loc_402302  +
cmp eax edx +
mov ecx edx +
jz loc_40233E  +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ds:dword_45B9C0[esi] ebx +
jnb loc_40231E  +
lea eax [edx+1] +
cmp eax ecx +
jnz loc_402309  +
mov edx eax +
shl edx 4 +
cmp ebx ds:dword_45B9C0[edx] +
ja loc_402351  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset aHash_table_hig +
mov [esp+18h+var_14] 60h +
mov [esp+18h+var_18] offset a____GccGccHash +
call sub_405910  +
lea esi [esi+0] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_46B078 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_4023AB  +
jmp loc_4024CB  +
add eax 8 +
cmp esi eax +
jbe loc_4024CB  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_4023A0  +
cmp edx 1 +
jz loc_4023A0  +
test ebx ebx +
jz loc_4024BE  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_4542F0  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_4542F0  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_4023F4  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_4023ED  +
cmp edx 1 +
jnz loc_4023B8  +
add eax 8 +
cmp esi eax +
ja loc_4023E0  +
mov ebx ds:dword_46B078 +
test ebx ebx +
jz loc_402435  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_40240F  +
sub eax 1 +
cmp edx eax +
ja loc_402408  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_4025F5  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_402604  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
mov ebx ds:dword_46B07C +
test ebx ebx +
jz loc_40247D  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_402457  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_402450  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_402561  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_402570  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
mov ebx ds:dword_46B060 +
test ebx ebx +
jz loc_4024B6  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_402498  +
sub eax 1 +
cmp edx eax +
ja loc_402491  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_4024D5  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_4024E0  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_4023C0  +
jmp loc_4023F4  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_4023B8  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_4024AE  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_452470  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_4024AE  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_402686  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_4024AE  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_4024AE  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_402475  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_402475  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_402686  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_402475  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_402475  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_40242D  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_40242D  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_402686  +
sub ecx esi +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_40242D  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_40242D  +
call sub_455BE0  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+38h+var_34] +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_402703  +
mov [esp+1Ch+arg_4] 1 +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
jmp sub_435F00  +
mov [esp+1Ch+var_14] offset aGgc_internal_c +
mov [esp+1Ch+var_18] 37h +
mov [esp+1Ch+var_1C] offset a____GccGccGgcN +
call sub_405910  +
nop   +
jmp sub_435F50  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+14h] +
test eax eax +
jz loc_402773  +
cmp eax [ebx+10h] +
jz loc_402773  +
sub eax 1 +
cmp [ebx+18h] eax +
jnb loc_402773  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call feof  +
test eax eax +
jnz loc_40276B  +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
test eax eax +
jnz loc_40276B  +
mov ecx [ebx+10h] +
mov edx [ebx+14h] +
cmp ecx edx +
jz loc_4027A2  +
mov eax [ebx+0Ch] +
mov esi ecx +
jmp loc_4027C7  +
lea eax [ecx+ecx] +
test ecx ecx +
mov esi 1000h +
cmovnz esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_435F50  +
mov edx [ebx+14h] +
mov [ebx+10h] esi +
mov [ebx+0Ch] eax +
mov ecx [ebx+8] +
sub esi edx +
add edx eax +
mov [esp+14h+var_14] edx +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_8] ecx +
call fread  +
mov esi eax +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_40276D  +
add [ebx+14h] esi +
test esi esi +
setnz al  +
jmp loc_40276D  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
mov eax edx +
sub esp 30h +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_402855  +
mov eax ds:dword_46B084 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] eax +
call sub_40DC10  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov eax ds:dword_46B084 +
mov [esp+38h+var_38] eax +
call sub_40DC30  +
mov ecx [esp+38h+var_1C] +
mov esi eax +
cmp esi 1 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
jbe loc_4028D0  +
xor eax eax +
test cl cl +
jz loc_4028F0  +
mov [esp+38h+var_30] eax +
mov eax ds:dword_46B084 +
lea edx [esp+38h+var_C] +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_40EC70  +
mov [esp+38h+var_38] ebx +
mov esi eax +
mov [esp+38h+var_2C] eax +
mov eax [esp+38h+var_C] +
mov [esp+38h+var_30] eax +
mov eax ds:dword_46B084 +
mov [esp+38h+var_34] eax +
call sub_40F3A0  +
cmp esi 1 +
mov [ebx+0Ch] edi +
jbe loc_4028D3  +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
xor eax eax +
mov edx offset aBuiltIn +
test esi esi +
cmovnz eax edx +
mov [ebx] eax +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_46B084 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_40F2A0  +
mov esi eax +
mov eax 1 +
jmp loc_402882  +
***
sub esp 14h +
mov [esp+14h+var_14] 2C4h +
call sub_454310  +
lea ecx [eax+4] +
mov dword ptr [eax] 10h +
lea esi [eax+2C4h] +
mov edx ecx +
lea ebx [eax+2Ch] +
mov dword ptr [edx] 0 +
mov eax edx +
add edx 2Ch +
mov dword ptr [edx-28h] 0 +
sub eax ecx +
mov dword ptr [edx-24h] 0 +
mov dword ptr [edx-20h] 0 +
mov dword ptr [edx-1Ch] 0 +
mov dword ptr [edx-18h] 0 +
mov dword ptr [edx-14h] 0 +
mov dword ptr [edx-10h] 0 +
mov dword ptr [edx-0Ch] 0 +
mov byte ptr [edx-8] 1 +
cmp edx esi +
mov dword ptr [ebx+eax] 0 +
jnz loc_402945  +
mov ds:dword_46B08C ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_402A06  +
mov ebx ds:dword_46B08C +
test ebx ebx +
jz loc_402A10  +
mov esi 10h +
xor ebp ebp +
nop   +
mov eax [ebx+4] +
test eax eax +
jz loc_4029EC  +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_4029EC  +
add dword ptr [ebx] 1 +
mov ebp ebx +
add ebx 2Ch +
sub esi 1 +
jnz loc_4029D0  +
test ebp ebp +
jz loc_402A06  +
add dword ptr [ebp+0] 1 +
add esp 1Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_402920  +
mov ebx ds:dword_46B08C +
jmp loc_4029C7  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+48h+var_34] ecx +
call sub_402750  +
mov edi [ebx+18h] +
mov eax [ebx+14h] +
sub eax edi +
jz loc_402CC0  +
add edi [ebx+0Ch] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] edi +
call memchr  +
test eax eax +
mov esi eax +
jz loc_402C89  +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
mov eax [ebx+8] +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_48] eax +
call ferror  +
mov ecx [esp+48h+var_30] +
test eax eax +
jnz loc_402CC0  +
mov eax esi +
sub eax edi +
mov [esp+48h+var_30] eax +
mov eax [ebx+18h] +
cmp eax [ebx+14h] +
mov [esp+48h+var_2C] eax +
jnb loc_402C1C  +
mov [ebp+0] edi +
mov eax [ebx+1Ch] +
lea ebp [eax+1] +
mov eax [ebx+20h] +
mov [ebx+1Ch] ebp +
cmp ebp eax +
mov [esp+48h+var_28] eax +
jbe loc_402CD0  +
test ecx ecx +
jz loc_402EF8  +
sub ecx [ebx+0Ch] +
mov [ebx+18h] ecx +
mov eax [esp+48h+var_34] +
mov esi [esp+48h+var_30] +
mov [eax] esi +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+18h] +
mov edi [ebx+0Ch] +
mov eax [ebx+14h] +
mov [esp-4+arg_0] 0Ah +
add edi edx +
sub eax edx +
mov [esp-4+arg_4] eax +
mov [esp+0] edi +
call memchr  +
test eax eax +
jnz loc_402F03  +
mov eax ebx +
call sub_402750  +
test al al +
jnz loc_402C60  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
mov byte ptr [ebx+24h] 1 +
add esi [ebx+14h] +
mov [esp+0] eax +
call ferror  +
test eax eax +
jnz loc_402CC0  +
test esi esi +
jz loc_40301F  +
xor ecx ecx +
jmp loc_402C05  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+28h] +
test edi edi +
jz loc_40304B  +
cmp dword ptr [edi+4] 63h +
ja loc_402C34  +
cmp [esp+48h+var_28] 64h +
ja loc_402DEB  +
mov eax [edi+4] +
cmp ebp eax +
jbe loc_402C34  +
sub esi [ebx+0Ch] +
test edi edi +
mov [esp+48h+var_28] esi +
jz loc_402F87  +
mov esi [edi] +
mov edx [edi+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_402DC9  +
cmp byte ptr [edi+3] 0 +
jns loc_402F11  +
mov dword ptr [ebx+28h] 0 +
lea eax [esi+1] +
mov byte ptr [esp+48h+var_1C] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax [edx+edx*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
mov [esp+48h+var_20] ecx +
mov [esp+48h+var_24] edx +
call sub_435F50  +
mov edx [esp+48h+var_24] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [ebx+28h] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_20] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+48h+var_1C] 0 +
mov [eax+3] dl +
jz loc_40307E  +
lea edx [eax+8] +
add edi 8 +
lea eax [esi+esi*2] +
shl eax 2 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_24] ecx +
call memcpy  +
mov edi [ebx+28h] +
mov edx esi +
mov ecx [esp+48h+var_24] +
mov [edi+4] esi +
mov esi [esp+48h+var_2C] +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
mov [edx+8] ebp +
mov [edx+0Ch] esi +
mov esi [esp+48h+var_28] +
mov [edx+10h] esi +
jmp loc_402C34  +
mov eax [edi+4] +
test eax eax +
mov [esp+48h+var_24] eax +
jz loc_402E09  +
imul eax ebp +
xor edx edx +
div  [esp+48h+var_28] +
cmp eax [esp+48h+var_24] +
jb loc_402C34  +
mov eax [edi] +
mov edx [esp+48h+var_24] +
sub esi [ebx+0Ch] +
and eax 7FFFFFFFh +
cmp edx eax +
jnz loc_402ED7  +
cmp byte ptr [edi+3] 0 +
jns loc_402F98  +
mov eax [esp+48h+var_24] +
mov dword ptr [ebx+28h] 0 +
mov byte ptr [esp+48h+var_28] 1 +
add eax 1 +
cmp eax 4 +
mov [esp+48h+var_1C] ecx +
mov ecx 4 +
cmovb eax ecx +
mov [esp+48h+var_20] eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
call sub_435F50  +
mov edx eax +
mov [ebx+28h] eax +
mov eax [esp+48h+var_20] +
mov dword ptr [edx+4] 0 +
and eax 7FFFFFFFh +
mov ecx eax +
mov eax [edx] +
and eax 80000000h +
or eax ecx +
mov ecx [esp+48h+var_1C] +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [esp+48h+var_28] 0 +
mov [edx+3] al +
jz loc_40303B  +
mov eax [esp+48h+var_24] +
add edx 8 +
add edi 8 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_28] ecx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+var_24] +
mov edi [ebx+28h] +
mov ecx [esp+48h+var_28] +
mov edx eax +
mov [edi+4] eax +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
lea eax [edx+8] +
mov [edx+8] ebp +
mov edx [esp+48h+var_2C] +
mov [eax+8] esi +
mov [eax+4] edx +
jmp loc_402C34  +
mov eax [ebx+14h] +
mov [ebx+18h] eax +
jmp loc_402C42  +
mov esi eax +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
jmp loc_402BEA  +
lea eax [esi+1] +
mov [esp+48h+var_44] eax +
mov eax [edi] +
mov [esp+48h+var_24] ecx +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_406F10  +
mov ecx [esp+48h+var_24] +
mov esi eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_403044  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
and esi 7FFFFFFFh +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_24] ecx +
call sub_435F50  +
mov ecx [esp+48h+var_24] +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_402DC9  +
mov byte ptr [esp+48h+var_1C] 0 +
xor esi esi +
mov eax 1 +
jmp loc_402D36  +
test edi edi +
jz loc_403055  +
mov eax [edi+4] +
mov [esp+48h+var_28] ecx +
add eax 1 +
mov [esp+48h+var_44] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_406F10  +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_24] eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_403077  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] ecx +
call sub_435F50  +
mov ecx [esp+48h+var_24] +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_28] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_402ED7  +
mov [esp-4+arg_4] offset aGet_next_line +
mov [esp-4+arg_0] 221h +
mov dword ptr [esp+0] offset a____GccGccInpu +
call sub_405910  +
mov edi edx +
xor edx edx +
jmp loc_402ED7  +
xor edi edi +
jmp loc_402F49  +
cmp [esp+48h+var_28] 64h +
jbe loc_403070  +
sub esi [ebx+0Ch] +
mov byte ptr [esp+48h+var_28] 0 +
mov eax 1 +
mov [esp+48h+var_24] 0 +
jmp loc_402E3C  +
xor eax eax +
jmp loc_402CF3  +
xor edi edi +
jmp loc_402FDD  +
mov edi eax +
xor edx edx +
jmp loc_402DC9  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx 1 +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_2C] 20h +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_34] offset aC +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_1C] eax +
call sub_450940  +
mov [esp+38h+var_34] offset asc_45BC41 +
mov [esp+38h+var_38] esi +
call sub_450940  +
cmp edi 1 +
jle loc_40312B  +
mov [esp+38h+var_34] esi +
movzx ecx byte ptr [ebp+19h] +
mov eax ebx +
xor edx edx +
add ebx 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+38h+var_20] +
add eax ecx +
div  [esp+38h+var_1C] +
mov ecx eax +
mov eax 66666667h +
imul  ecx +
mov eax ecx +
sar eax 1Fh +
sar edx 2 +
sub edx eax +
lea eax [edx+edx*4] +
add eax eax +
sub ecx eax +
add ecx 30h +
mov [esp+38h+var_38] ecx +
call fputc  +
cmp ebx edi +
jnz loc_4030E5  +
mov [esp+38h+arg_0] esi +
mov [esp+38h+arg_4] offset asc_45BC43 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_450940  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] offset aS_5 +
mov [esp+18h+var_18] eax +
call sub_450940  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset aSource_locatio +
mov [esp+18h+var_C] eax +
call sub_450940  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset asc_45BC43 +
call sub_450940  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
test eax eax +
jz loc_40320D  +
call sub_4029B0  +
test eax eax +
mov ebx eax +
jz loc_403208  +
mov dword ptr [eax+4] 0 +
mov eax [eax+8] +
test eax eax +
jz loc_4031CD  +
mov [esp] eax +
call fclose  +
mov eax [ebx+28h] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
test eax eax +
mov dword ptr [ebx+1Ch] 0 +
jz loc_4031F7  +
mov dword ptr [eax+4] 0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+20h] 0 +
mov byte ptr [ebx+24h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp+8] offset aDiagnostics_fi +
mov dword ptr [esp+4] 113h +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_405910  +
nop   +
lea esi [esi+0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov byte ptr [ecx+24h] 1 +
mov dword ptr [ecx+28h] 0 +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
test eax eax +
jz loc_40329C  +
mov [esp+18h+var_18] eax +
call fclose  +
mov dword ptr [ebx+8] 0 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4032B2  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+28h] +
test eax eax +
jz loc_4032CE  +
cmp byte ptr [eax+3] 0 +
js loc_4032D3  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_46B08C +
test eax eax +
jz locret_40332F  +
push esi  +
push ebx  +
sub esp 14h +
imul ebx [eax-4] +
add ebx eax +
cmp eax ebx +
jz loc_403315  +
sub ebx 2Ch +
nop   +
lea esi [esi+0] +
mov ecx ebx +
mov esi ebx +
call sub_403280  +
mov eax ds:dword_46B08C +
sub ebx 2Ch +
cmp eax esi +
jnz loc_403300  +
sub eax 4 +
mov [esp+1Ch+var_1C] eax +
call sub_4542E0  +
mov ds:dword_46B08C 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_403340  +
***
push esi  +
sub esp 0Ch +
mov eax [esp+0Ch+arg_0] +
call sub_4029B0  +
test eax eax +
jz loc_4034E8  +
movzx eax byte ptr [eax+24h] +
add esp 0Ch +
retn   +
mov eax [esp+0Ch+arg_0] +
call sub_402A20  +
test eax eax +
jnz loc_4034E0  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 2Ch +
lea eax [esp+1Ch] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40EC70  +
cmp eax 1 +
setz al  +
add esp 2Ch +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_402810  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
xor ecx ecx +
sub esp 8 +
mov ebx [esp+10h] +
mov edx [esp+14h] +
mov eax ebx +
call sub_402810  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_402810  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_46B084 +
mov ebx [esp+20h] +
mov [esp] eax +
mov [esp+4] ebx +
call sub_40EBB0  +
test eax eax +
jz loc_4035E0  +
mov eax ds:dword_46B084 +
mov [esp+4] ebx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_40EC70  +
mov ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40EC70  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_46B084 +
mov [esp+24h+var_24] eax +
call sub_40E8C0  +
mov ebx eax +
mov eax [esp+24h+arg_4] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_46B084 +
mov [esp+24h+var_24] eax +
call sub_40E7E0  +
mov esi eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_46B084 +
mov [esp+24h+var_24] eax +
call sub_40E7E0  +
mov eax ds:dword_46B084 +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call sub_40E5C0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
xor eax eax +
push esi  +
mov ecx 0Dh +
push ebx  +
sub esp 50h +
lea edx [esp+1Ch] +
mov edi edx +
stos   +
mov eax ds:dword_46B084 +
mov [esp+4] edx +
mov [esp] eax +
call sub_40F850  +
mov eax [esp+40h] +
mov esi [esp+3Ch] +
mov ebx [esp+24h] +
mov dword ptr [esp+4] offset aNumberOfExpand +
lea edi [esi+eax] +
add esi [esp+28h] +
add ebx eax +
add ebx [esp+38h] +
add esi eax +
mov eax [esp+2Ch] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov ecx [esp+2Ch] +
test ecx ecx +
jnz loc_403B80  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset aLineTableAlloc +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+20h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_403738  +
cmp eax 9FFFFFh +
jg loc_403B70  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdina +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+28h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_40377B  +
cmp eax 9FFFFFh +
jg loc_403B60  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapUse +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+1Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_4037BE  +
cmp eax 9FFFFFh +
jg loc_403B50  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdi_0 +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+24h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_403801  +
cmp eax 9FFFFFh +
jg loc_403B40  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapsAl +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+34h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_403844  +
cmp eax 9FFFFFh +
jg loc_403B30  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfMacroM +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+3Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_403887  +
cmp eax 9FFFFFh +
jg loc_403B20  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsUsedS +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+40h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_4038CA  +
cmp eax 9FFFFFh +
jg loc_403B10  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsLocat +
add eax 40h +
mov [esp] eax +
call sub_450940  +
cmp edi 27FFh +
mov eax 20h +
jle loc_40390B  +
cmp edi 9FFFFFh +
jg loc_403B00  +
sar edi 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] edi +
mov dword ptr [esp+4] offset aMacroMapsSize5 +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+44h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_40394E  +
cmp eax 9FFFFFh +
jg loc_403AF0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aDuplicatedMaps +
add eax 40h +
mov [esp] eax +
call sub_450940  +
cmp ebx 27FFh +
mov eax 20h +
jle loc_40398F  +
cmp ebx 9FFFFFh +
jg loc_403AE0  +
sar ebx 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTotalAllocated +
add eax 40h +
mov [esp] eax +
call sub_450940  +
cmp esi 27FFh +
mov edx 20h +
jle loc_4039D0  +
cmp esi 9FFFFFh +
jg loc_403AD0  +
sar esi 0Ah +
mov edx 6Bh +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aTotalUsedMapsS +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+48h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_403A13  +
cmp eax 9FFFFFh +
jg loc_403AC0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aAdHocTableSize +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+4Ch] +
mov dword ptr [esp+4] offset aAdHocTableEntr +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax ds:dword_46B084 +
mov eax [eax+58h] +
mov dword ptr [esp+4] offset aOptimized_rang +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax ds:dword_46B084 +
mov eax [eax+5Ch] +
mov dword ptr [esp+4] offset aUnoptimized_ra +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset asc_45BC43 +
add eax 40h +
mov [esp] eax +
call sub_450940  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_403A13  +
***
sar esi 14h +
mov edx 4Dh +
jmp loc_4039D0  +
***
sar ebx 14h +
mov eax 4Dh +
jmp loc_40398F  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_40394E  +
***
sar edi 14h +
mov eax 4Dh +
jmp loc_40390B  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_4038CA  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_403887  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_403844  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_403801  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_4037BE  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_40377B  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_403738  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aAverageNumberO +
cdq   +
idiv  ecx +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
jmp loc_4036FD  +
***
jmp loc_403E42  +
mov eax ds:dword_46B084 +
mov [esp+0Ch] ebx +
mov [esp+8] esi +
mov [esp+4] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sub_40F3A0  +
mov eax [esp+44h] +
mov ebp [esp+3Ch] +
mov edi [esp+40h] +
test eax eax +
jnz loc_403CF0  +
lea eax [esp+38h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] ebp +
call sub_403340  +
test eax eax +
jz loc_403E42  +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+0Ch] edi +
mov edi 1 +
mov [esp+8] ebp +
mov [esp+10h] ebx +
mov [esp+14h] eax +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aS3iLoc5i_S +
mov [esp] eax +
call sub_450940  +
movzx ecx byte ptr [esi+18h] +
mov eax [esp+38h] +
mov [esp] ebp +
shl edi cl +
sub edi 1 +
cmp edi eax +
lea edx [eax+1] +
cmovg edi edx +
call strlen  +
cmp dword ptr [esp+24h] 3E7h +
lea ebp [eax+0Eh] +
ja loc_403E08  +
cmp dword ptr [esp+24h] 63h +
ja loc_403E24  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebx +
call sub_403090  +
mov eax [esp+70h] +
mov ecx esi +
mov dword ptr [esp+8] 1 +
mov edx ebp +
mov [esp+4] edi +
mov [esp] ebx +
call sub_403090  +
jmp loc_403CF0  +
***
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 3E8h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_403090  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 64h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_403090  +
jmp loc_403DCB  +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_45BC43 +
mov [esp] eax +
call sub_450940  +
mov eax ds:dword_46B084 +
add dword ptr [esp+28h] 1 +
add dword ptr [esp+2Ch] 1Ch +
mov edx [eax+8] +
cmp [esp+28h] edx +
jb loc_403BF4  +
mov ebp [esp+70h] +
mov edx [eax+18h] +
mov ebx 7FFFFFFFh +
test edx edx +
jnz loc_4040AE  +
mov ecx [eax+28h] +
mov edx offset aUnallocatedLoc +
mov eax ebp +
mov [esp] ebx +
call sub_403150  +
mov eax ds:dword_46B084 +
mov dword ptr [esp+28h] 0 +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_40403D  +
mov [esp+70h] ebp +
mov eax [eax+10h] +
sub ebx 1 +
sub ebx [esp+28h] +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*8] +
mov edi [esi+0Ch] +
mov [esp] esi +
call sub_40EBA0  +
mov [esp+8] ebx +
xor ebx ebx +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aMacroISUTokens +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_450940  +
mov eax [esi] +
mov edx [esi+0Ch] +
mov dword ptr [esp+4] offset aSource_locatio +
mov [esp+8] eax +
add edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp] eax +
call sub_450940  +
mov eax [esi+14h] +
mov dword ptr [esp+4] offset aExpansionPoint +
mov [esp+8] eax +
mov [esp] eax +
call sub_406740  +
mov eax [esi] +
mov dword ptr [esp+4] offset aMapStart_locat +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_450940  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aMacro_location +
mov [esp] eax +
call sub_450940  +
mov eax [esi+0Ch] +
mov dword ptr [esp+24h] 4 +
test eax eax +
jnz loc_403FA0  +
jmp loc_40400E  +
mov eax [esi] +
cmp ebp eax +
jnb loc_404075  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTokenUHasXLoca +
mov [esp] ebp +
call sub_406740  +
add ebx 1 +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
jbe loc_40400E  +
mov eax [esi+10h] +
mov edx [esp+24h] +
mov ebp [eax+ebx*8] +
mov edi [eax+edx] +
mov eax [esp+70h] +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aUUU +
mov [esp] eax +
call sub_450940  +
cmp ebp edi +
jz loc_403F71  +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov dword ptr [esp+4] offset aTokenUHasXLo_0 +
mov [esp] ebp +
call sub_406740  +
mov [esp+8] ebx +
add ebx 1 +
mov [esp+0Ch] edi +
mov dword ptr [esp+4] offset aTokenUHasYLoca +
mov [esp] ebp +
call sub_406740  +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
ja loc_403FA0  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_45BC43 +
mov [esp] eax +
call sub_450940  +
mov eax ds:dword_46B084 +
add dword ptr [esp+28h] 1 +
mov ebx [eax+18h] +
cmp [esp+28h] ebx +
jb loc_403EB4  +
mov ebp [esp+70h] +
mov eax ebp +
mov ecx 7FFFFFFFh +
mov dword ptr [esp] 80000000h +
mov edx offset aMax_source_loc +
call sub_403150  +
mov eax ebp +
mov ecx 80000000h +
mov dword ptr [esp] 0FFFFFFFFh +
mov edx offset aAdHocLocations +
call sub_403150  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
sub edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aXLocationYLoca +
mov [esp] eax +
call sub_450940  +
jmp loc_403F93  +
***
mov edx [eax+28h] +
mov esi [eax] +
mov [esp+24h] edx +
jmp loc_403C0F  +
***
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ebx [edx] +
jmp loc_403E86  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
lea eax ds:0[ebx*4] +
mov [ecx] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call sub_4026A0  +
xor edx edx +
test ebx ebx +
mov [edi+4] eax +
jle loc_40412F  +
mov ecx [esi+edx*4] +
mov [eax+edx*4] ecx +
add edx 1 +
cmp edx ebx +
jnz loc_404122  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_46B084 +
mov [esp+1Ch+var_1C] eax +
call sub_40EC70  +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_46B084 +
mov [esp+1Ch+var_1C] eax +
call sub_40E7E0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_4042BF  +
mov ebx [esp+2Ch+arg_8] +
test ebx ebx +
jz loc_4042A3  +
mov eax [esp+2Ch+arg_0] +
mov ebx ecx +
mov [esp+2Ch+var_2C] eax +
call sub_404140  +
mov esi [ebx] +
mov edx [esi+18h] +
add dword ptr [esi+10h] 1 +
mov ecx eax +
mov ebp [esi+4] +
mov [esp+2Ch+var_18] eax +
shl edx 4 +
mov edi ds:dword_45B9CC[edx] +
lea eax dword_45B9C0[edx] +
mov [esp+2Ch+var_1C] eax +
mov ebx edi +
mov [esp+2Ch+var_10] edi +
mov edi ds:dword_45B9C0[edx] +
mov [esp+2Ch+var_14] edi +
mov edi eax +
mov eax ecx +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+var_18] +
mov edi [esi] +
mov ecx edx +
mov edx eax +
sub edx ecx +
shr edx 1 +
add edx ecx +
mov ecx ebx +
shr edx cl +
mov ebx eax +
imul edx [esp+2Ch+var_14] +
sub ebx edx +
lea edx [edi+ebx*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_404273  +
cmp eax [edx] +
jz loc_404280  +
mov ecx [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_18] +
mul  dword ptr [ecx+8] +
mov ecx edx +
mov edx [esp+2Ch+var_18] +
mov eax edx +
sub edx ecx +
shr edx 1 +
add eax 1 +
add edx ecx +
movzx ecx byte ptr [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] eax +
mov eax [esi+14h] +
shr edx cl +
mov ecx [esp+2Ch+var_14] +
sub ecx 2 +
imul edx ecx +
sub [esp+2Ch+var_1C] edx +
lea ecx [eax+1] +
mov eax [esp+2Ch+var_18] +
jmp loc_40425B  +
add ecx 1 +
cmp eax [edx] +
jz loc_404280  +
add ebx [esp+2Ch+var_1C] +
mov [esi+14h] ecx +
mov edx ebx +
sub edx ebp +
cmp ebp ebx +
cmovbe ebx edx +
lea edx [edi+ebx*8] +
cmp dword ptr [edx] 0 +
jnz loc_404254  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [edx+4] +
mov esi [esp+2Ch+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
mov [esi] edx +
mov esi [esp+2Ch+arg_8] +
mov [esi] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E5h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_405910  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E4h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_405910  +
nop   +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+24h] +
mov esi [ebp+10h] +
test eax eax +
jz loc_404A18  +
lea ecx [ebp-58h] +
call sub_411940  +
mov edi [ebp+8] +
mov [ebp-6Ch] esi +
test edi edi +
jz loc_4049FC  +
test esi esi +
mov ebx offset aUnknownLocatio +
jnz loc_404330  +
lea ecx [ebp-58h] +
call sub_411970  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+8] +
mov ebx offset aTrack_macro_ex +
mov [esp+0E8h+var_E8] eax +
call sub_41A090  +
cmp byte ptr [eax+2Dh] 2 +
jnz loc_404319  +
mov eax ds:dword_46B084 +
mov ebx offset aSeenLineDirect +
cmp byte ptr [eax+50h] 0 +
jnz loc_404319  +
mov ebx [ebp+0Ch] +
lea eax [ebp-6Ch] +
mov dword ptr [ebp-68h] 1 +
mov [ebp-64h] eax +
test ebx ebx +
jz loc_4044B0  +
lea eax [ebp-64h] +
mov ecx [ebp+0Ch] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp-68h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp-6Ch] +
mov [esp+0E8h+var_E8] eax +
call sub_404180  +
mov ecx [ebp-68h] +
mov ebx ecx +
sub esp 0Ch +
test ecx ecx +
jnz loc_4044B5  +
xor edi edi +
xor esi esi +
xor edx edx +
test esi esi +
jnz loc_404464  +
lea ebx [edi+8] +
xor eax eax +
test edi edi +
cmovnz eax ebx +
mov ebx [ebp+14h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+8] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ebx +
lea ebx [ebp-58h] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_416880  +
mov ebx eax +
lea esi [esi+0] +
test esi esi +
jz loc_4043F6  +
cmp byte ptr [esi+3] 0 +
js loc_4044A0  +
mov [esp+0E8h+var_E8] esi +
call free  +
test edi edi +
jz loc_40443C  +
mov eax [edi+4] +
test eax eax +
jz loc_40442E  +
mov eax [edi+0Ch] +
mov esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax 1 +
jmp loc_404429  +
mov eax [edi+eax*8+0Ch] +
add esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax esi +
cmp eax [edi+4] +
jb loc_404418  +
cmp byte ptr [edi+3] 0 +
js loc_404490  +
mov [esp+0E8h+var_E8] edi +
call free  +
test ebx ebx +
jnz loc_404319  +
mov eax [ebp-54h] +
cmp eax [ebp+18h] +
jle loc_404470  +
cmp eax [ebp+1Ch] +
jle loc_404480  +
cmp eax [ebp+20h] +
jg loc_4049CC  +
mov ebx offset aEnd_idxOutOfRa +
jmp loc_404319  +
lea edx [esi+8] +
jmp loc_4043A8  +
mov ebx offset aCaret_idxOutOf +
jmp loc_404319  +
mov ebx offset aStart_idxOutOf +
jmp loc_404319  +
mov dword ptr [edi+4] 0 +
jmp loc_40443C  +
mov dword ptr [esi+4] 0 +
jmp loc_4043F6  +
mov ebx 1 +
lea eax ds:8[ebx*8] +
and ebx 7FFFFFFFh +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_435F50  +
mov edi eax +
mov eax [eax] +
mov dword ptr [edi+4] 0 +
and eax 80000000h +
or eax ebx +
mov ebx [ebp-68h] +
mov [edi] eax +
shr eax 18h +
and eax 7Fh +
mov [edi+3] al +
test ebx ebx +
jz loc_404A34  +
lea eax [ebx+ebx*2] +
and ebx 7FFFFFFFh +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_435F50  +
mov ecx [ebp-68h] +
mov esi eax +
mov eax [eax] +
mov dword ptr [esi+4] 0 +
and eax 80000000h +
or eax ebx +
mov [esi] eax +
shr eax 18h +
and eax 7Fh +
test ecx ecx +
mov [esi+3] al +
jle loc_40439E  +
mov dword ptr [ebp-84h] 0 +
jmp loc_40475F  +
lea eax [edx+1] +
mov byte ptr [ebp-94h] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*8] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-9Ch] edx +
mov [ebp-98h] ecx +
call sub_435F50  +
mov ecx [ebp-98h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov [ebp-90h] eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov ecx edx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-94h] 0 +
mov [edx+3] al +
mov edx [ebp-9Ch] +
jz loc_404A3D  +
mov eax [ebp-90h] +
lea ecx ds:0[edx*8] +
add edi 8 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edi +
mov [ebp-94h] edx +
add eax 8 +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [ebp-90h] +
mov edx [ebp-94h] +
mov edi eax +
mov [eax+4] edx +
mov ecx edx +
lea eax [ecx+1] +
mov [edi+4] eax +
lea eax [edi+ecx*8] +
mov [eax+8] ebx +
mov ebx [ebp-8Ch] +
mov [eax+0Ch] ebx +
lea eax [ebp-5Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-7Ch] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_46B084 +
mov [esp+0E8h+var_E8] eax +
call sub_40EC70  +
mov eax [ebp-80h] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-88h] +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp-5Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_46B084 +
mov [esp+0E8h+var_E8] eax +
call sub_40E410  +
mov edx ds:dword_46B084 +
lea ecx [ebp-4Ch] +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_4171F0  +
sub esp 8 +
test esi esi +
jz loc_404953  +
mov ebx [esi] +
mov eax [esi+4] +
and ebx 7FFFFFFFh +
cmp ebx eax +
jnz loc_40472B  +
cmp byte ptr [esi+3] 0 +
jns loc_4048F4  +
lea eax [ebx+1] +
mov byte ptr [ebp-7Ch] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-80h] ecx +
call sub_435F50  +
mov ecx [ebp-80h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-7Ch] 0 +
mov [edx+3] al +
jz loc_404A46  +
lea ecx [ebx+ebx*2] +
add esi 8 +
lea eax [edx+8] +
shl ecx 2 +
mov [esp+0E8h+var_E4] esi +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
mov [ebp-7Ch] edx +
call memcpy  +
mov edx [ebp-7Ch] +
mov eax ebx +
mov [edx+4] ebx +
mov esi edx +
lea edx [eax+1] +
mov ecx [ebp-68h] +
mov [esi+4] edx +
mov edx [ebp-4Ch] +
lea eax [eax+eax*2] +
lea eax [esi+eax*4] +
add dword ptr [ebp-84h] 1 +
cmp [ebp-84h] ecx +
mov [eax+8] edx +
mov edx [ebp-48h] +
mov [eax+0Ch] edx +
mov edx [ebp-44h] +
mov [eax+10h] edx +
jge loc_404464  +
mov ebx [ebp-84h] +
mov eax [ebp-64h] +
mov eax [eax+ebx*4] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_46B084 +
mov [esp+0E8h+var_E8] eax +
call sub_40E7E0  +
mov ebx ds:dword_46B084 +
mov ecx 7FFFFFFFh +
mov [ebp-7Ch] edx +
mov edx [ebx+18h] +
test edx edx +
jz loc_40479D  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_404976  +
cmp eax 5FFFFFFFh +
ja loc_404980  +
cmp dword ptr [ebp-7Ch] 5FFFFFFFh +
ja loc_404990  +
xor ecx ecx +
mov edx eax +
lea eax [ebp-40h] +
call sub_402810  +
mov eax [ebp-3Ch] +
xor ecx ecx +
mov edx [ebp-7Ch] +
mov ebx [ebp-40h] +
mov [ebp-88h] eax +
mov eax [ebp-38h] +
mov [ebp-80h] eax +
lea eax [ebp-2Ch] +
call sub_402810  +
mov edx [ebp-24h] +
cmp ebx [ebp-2Ch] +
jnz loc_40499A  +
mov ecx [ebp-88h] +
cmp ecx [ebp-28h] +
jnz loc_4049A4  +
cmp [ebp-80h] edx +
mov [ebp-8Ch] edx +
jg loc_4049AE  +
lea eax [ebp-60h] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebx +
call sub_403340  +
test eax eax +
jz loc_4049B8  +
mov ebx [ebp-80h] +
mov edx [ebp-8Ch] +
lea ecx [ebx-1] +
sub edx ebx +
add eax ecx +
lea ebx [edx+1] +
add ecx ebx +
cmp ecx [ebp-60h] +
jg loc_4049C2  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_436F80  +
test edi edi +
mov [ebp-8Ch] eax +
jz loc_404963  +
mov edx [edi] +
mov ecx [edi+4] +
and edx 7FFFFFFFh +
cmp edx ecx +
jnz loc_404609  +
cmp byte ptr [edi+3] 0 +
js loc_404551  +
mov eax ecx +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_406F10  +
mov ecx [edi+4] +
mov [esp+0E8h+var_E8] edi +
mov [ebp-94h] ecx +
mov edx eax +
lea eax ds:8[eax*8] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-90h] edx +
call sub_435F50  +
mov edx [ebp-90h] +
mov ecx [ebp-94h] +
mov edi eax +
mov eax edx +
mov edx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] ecx +
and edx 80000000h +
or edx eax +
mov [edi] edx +
shr edx 18h +
and edx 7Fh +
mov [edi+3] dl +
jmp loc_404609  +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_406F10  +
mov ebx [esi+4] +
mov [esp+0E8h+var_E8] esi +
mov edx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-7Ch] edx +
call sub_435F50  +
mov edx [ebp-7Ch] +
mov esi eax +
mov eax edx +
mov edx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] ebx +
and edx 80000000h +
or edx eax +
mov eax ebx +
mov [esi] edx +
shr edx 18h +
and edx 7Fh +
mov [esi+3] dl +
jmp loc_40472B  +
xor ebx ebx +
mov eax 1 +
mov byte ptr [ebp-7Ch] 0 +
jmp loc_4046AA  +
mov byte ptr [ebp-94h] 0 +
xor edx edx +
mov eax 1 +
jmp loc_40455B  +
mov ebx offset aMacroExpansion +
jmp loc_4043E0  +
mov ebx offset aRangeStartsAft +
jmp loc_4043E0  +
mov ebx offset aRangeEndsAfter +
jmp loc_4043E0  +
mov ebx offset aRangeEndpoints +
jmp loc_4043E0  +
mov ebx offset aRangeEndpoin_0 +
jmp loc_4043E0  +
mov ebx offset aRangeEndpoin_1 +
jmp loc_4043E0  +
mov ebx offset aUnableToReadSo +
jmp loc_4043E0  +
mov ebx offset aLineIsNotWideE +
jmp loc_4043E0  +
mov eax [ebp-58h] +
mov edi [ebp+20h] +
mov ecx [eax+edi*8+4] +
mov edi [ebp+1Ch] +
mov edx [eax+edi*8] +
mov edi [ebp+18h] +
mov eax [eax+edi*8] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_403620  +
mov edi [ebp+24h] +
mov [edi] eax +
jmp loc_404319  +
mov [esp+0E8h+var_E0] offset aGet_substring_ +
mov [esp+0E8h+var_E4] 528h +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_405910  +
mov [esp+0E8h+var_E0] offset aGet_source_loc +
mov [esp+0E8h+var_E4] 5BBh +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_405910  +
xor ecx ecx +
xor esi esi +
jmp loc_40439E  +
mov edi ecx +
xor ecx ecx +
jmp loc_404609  +
mov esi edx +
xor eax eax +
jmp loc_40472B  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+8] +
mov edi [ebp+0Ch] +
cmp ebx 1 +
jle loc_404BBA  +
test edi edi +
jz loc_404BD6  +
mov eax [edi] +
mov esi ecx +
mov [esp] eax +
call sub_404140  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 8 +
mov [ebp-1Ch] eax +
call sub_4026A0  +
test eax eax +
mov [ebp-28h] eax +
jz loc_404ABB  +
mov [esp+4] edi +
mov ecx eax +
mov [esp] ebx +
call sub_4040E0  +
sub esp 8 +
mov ebx [esi] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx+ecx*2] +
shl eax 2 +
cmp edx eax +
mov [ebp-2Ch] ecx +
jbe loc_404B96  +
mov eax [ebx+18h] +
mov esi [ebp-1Ch] +
add dword ptr [ebx+10h] 1 +
shl eax 4 +
lea edi dword_45B9C0[eax] +
mov ecx ds:dword_45B9CC[eax] +
mov eax ds:dword_45B9C0[eax] +
mov [ebp-24h] ecx +
mov [ebp-20h] eax +
mov [ebp-30h] eax +
mov eax esi +
mul  dword ptr [edi+4] +
mov eax esi +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [ebp-20h] +
sub esi eax +
mov eax [edi+8] +
mov edi [ebx] +
lea edx [edi+esi*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_404B7D  +
mov ecx [ebp-1Ch] +
cmp ecx [edx] +
jz loc_404B86  +
mul  ecx +
lea eax [ecx+1] +
mov [ebp-20h] eax +
mov eax ecx +
movzx ecx byte ptr [ebp-24h] +
mov [ebp-24h] edi +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp-30h] +
shr eax cl +
mov ecx [ebp-2Ch] +
sub edx 2 +
imul eax edx +
sub [ebp-20h] eax +
mov eax [ebx+14h] +
lea edx [eax+1] +
jmp loc_404B60  +
mov edi [ebp-1Ch] +
add edx 1 +
cmp edi [eax] +
jz loc_404BA8  +
add esi [ebp-20h] +
mov [ebx+14h] edx +
mov eax esi +
sub eax ecx +
cmp esi ecx +
cmovnb esi eax +
mov eax [ebp-24h] +
lea eax [eax+esi*8] +
mov edi [eax] +
test edi edi +
jnz loc_404B56  +
mov edx eax +
mov eax [ebp-1Ch] +
add dword ptr [ebx+8] 1 +
mov [edx] eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_451080  +
mov eax [ebx+4] +
mov [ebp-2Ch] eax +
jmp loc_404AD4  +
***
mov edx eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CDh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_405910  +
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CEh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_405910  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_4509A0 +
mov dword ptr [esp] 20h +
call sub_4026A0  +
test eax eax +
mov ebx eax +
jz loc_404C5D  +
mov dword ptr [esp+0Ch] 1 +
mov ecx eax +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 40h +
call sub_451340  +
sub esp 10h +
mov [esi] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+14h] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] eax +
call sub_4094D0  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call sub_40A540  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_40A370  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_8] +
mov ebx [esp+2Ch+arg_10] +
test edi edi +
jz loc_404DF0  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_404D06  +
mov esi [esp+2Ch+arg_8] +
test esi esi +
jz loc_404D0F  +
mov eax [esp+2Ch+arg_8] +
mov edi offset aDiagnostic_c +
mov [esp+2Ch+var_2C] eax +
call sub_437270  +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_404D00  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
cmp eax 13h +
jg loc_404E14  +
mov ecx [esp+2Ch+arg_0] +
add eax 1 +
test ebx ebx +
mov [ecx] eax +
jz loc_404E21  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 400Bh +
call sub_440300  +
test eax eax +
cmovnz ebx eax +
xor edi edi +
mov [esp+2Ch+var_10] eax +
mov ebp ds:off_45C9F8[edi*4] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call strncmp  +
test eax eax +
jnz loc_404D74  +
movzx eax byte ptr [ebx+esi] +
cmp al 28h +
jz loc_404E00  +
test al al +
jz loc_404E00  +
add edi 1 +
cmp edi 4 +
jnz loc_404D3B  +
mov edx [esp+2Ch+arg_8] +
mov eax offset a???_0 +
mov ebp eax +
mov [esp+2Ch+var_28] offset a0xLxSSD +
test edx edx +
cmovnz ebp [esp+2Ch+arg_8] +
test ebx ebx +
cmovz ebx eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_450940  +
mov edx [esp+2Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_404CF7  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call free  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jnz loc_404CC7  +
jmp loc_404CF5  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_404E14  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_10] 0 +
jmp loc_404D7C  +
***
sub esp 2Ch +
mov edx [esp+2Ch+arg_8] +
test edx edx +
js loc_404E6C  +
mov eax offset unk_45C4C2 +
mov ecx eax +
jnz loc_404E70  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] offset aSSS_0 +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_450940  +
add esp 2Ch +
retn   +
mov [esp+2Ch+var_2C] edx +
call sub_4403E0  +
mov ecx offset asc_45C4C3 +
jmp loc_404E44  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_440430  +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+30h+var_28] 5 +
mov [esp+30h+var_2C] offset aLocus +
movzx eax byte ptr [eax+27h] +
mov [esp+30h+var_14] edx +
mov [esp+30h+var_30] eax +
call sub_40C2A0  +
mov ebp eax +
movzx eax byte ptr [esi+27h] +
mov [esp+30h+var_30] eax +
call sub_40C310  +
test ebx ebx +
jz loc_404F72  +
mov edi offset aBuiltIn_0 +
mov ecx 0Bh +
mov esi ebx +
cmps   +
jz loc_404F52  +
mov edi [esp+30h+var_14] +
cmp byte ptr [edi] 0 +
jnz loc_404F22  +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDS +
mov [esp+30h+var_24] eax +
call sub_404E80  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_1C] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDDS +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_24] eax +
call sub_404E80  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_24] eax +
mov [esp+30h+var_30] offset aSSS +
call sub_404E80  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_24] eax +
mov eax ds:dword_46B0A0 +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSS +
mov [esp+30h+var_28] eax +
call sub_404E80  +
jmp loc_404F1A  +
***
jmp sub_404FA0  +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_C] +
mov eax [ebx] +
lea edx [ebx+65h] +
mov [esp+18h+var_14] ecx +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ecx +
mov ecx [esp+18h+arg_4] +
call sub_404EA0  +
mov edx [ebx] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_40A510  +
mov eax [ebx] +
mov [esp+18h+var_14] offset unk_45C4C2 +
mov [esp+18h+var_18] eax +
call sub_40AB40  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_40A680  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+8] 5 +
mov dword ptr [esp+4] offset aLocus +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_40C2A0  +
mov esi eax +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_40C310  +
mov [esp+4] esi +
mov dword ptr [esp] offset aSSS_1 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_404E80  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] offset aColumns +
call getenv  +
test eax eax +
jz loc_405086  +
mov [esp+18h+var_18] eax +
call atoi  +
test eax eax +
cmovg ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
mov [esp+28h+var_28] 28h +
mov ebx [ebp+arg_4] +
call sub_435ED0  +
test eax eax +
mov [esi] eax +
jz loc_40511A  +
mov [esp+28h+var_24] 0 +
mov ecx eax +
mov [esp+28h+var_28] 0 +
call sub_40A570  +
sub esp 8 +
lea edi [esi+4] +
mov edx 38h +
test edi 1 +
jnz loc_40526F  +
test edi 2 +
jnz loc_405284  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_405151  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_405159  +
mov byte ptr [edi] 0 +
lea edi ds:0[ebx*4] +
mov byte ptr [esi+3Ch] 0 +
mov [esi+40h] ebx +
mov [esp+28h+var_28] edi +
call sub_435ED0  +
test ebx ebx +
mov [esi+44h] eax +
lea edx [eax+edi] +
jle loc_40518D  +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_405180  +
mov eax [esi] +
mov byte ptr [esi+58h] 0 +
mov eax [eax+1Ch] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call sub_405090  +
mov byte ptr [esi+60h] 5Eh +
mov byte ptr [esi+61h] 5Eh +
mov byte ptr [esi+62h] 5Eh +
mov byte ptr [esi+63h] 0 +
mov byte ptr [esi+64h] 0 +
mov byte ptr [esi+65h] 0 +
mov byte ptr [esi+66h] 0 +
mov byte ptr [esi+67h] 0 +
mov dword ptr [esi+68h] 0 +
mov byte ptr [esi+6Ch] 0 +
mov byte ptr [esi+6Dh] 0 +
mov byte ptr [esi+6Eh] 0 +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+74h] offset sub_405CB0 +
mov dword ptr [esi+78h] offset sub_404FA0 +
mov dword ptr [esi+7Ch] offset sub_404C70 +
mov dword ptr [esi+84h] 0 +
mov dword ptr [esi+88h] 0 +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+94h] 0 +
mov dword ptr [esi+98h] 0 +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+9Ch] 0 +
mov byte ptr [esi+0A0h] 0 +
mov byte ptr [esi+0A1h] 0 +
mov byte ptr [esi+0A2h] 0 +
mov byte ptr [esi+0A3h] 0 +
mov dword ptr [esi+0A4h] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+5] +
mov dl 37h +
test edi 2 +
mov byte ptr [esi+4] 0 +
jz loc_40513A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40513A  +
***
push ebx  +
mov eax 2 +
sub esp 18h +
mov edx [esp+24h] +
test edx edx +
cmovns eax edx +
mov edx [esp+20h] +
mov ebx [edx] +
mov [esp] eax +
call sub_40C330  +
mov [ebx+27h] al +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+34h] +
test eax eax +
jz loc_40530C  +
mov edx ds:dword_46B0A0 +
cmp byte ptr [ebx+3Ch] 0 +
mov eax [ebx] +
mov [esp+14h+var_C] edx +
jnz loc_405366  +
mov [esp+14h+var_10] offset aSSomeWarningsB +
mov [esp+14h+var_14] eax +
call sub_40BFC0  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call sub_40C080  +
call sub_4032E0  +
mov eax [ebx+44h] +
mov [esp+14h+var_14] eax +
call free  +
mov ecx [ebx] +
mov dword ptr [ebx+44h] 0 +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call free  +
mov esi [ebx+0A4h] +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_405360  +
mov eax [esi+4] +
mov [esp+14h+var_14] eax +
call sub_4406E0  +
mov [esp+14h+var_14] esi +
call sub_4542F0  +
mov dword ptr [ebx+0A4h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] offset aSAllWarningsBe +
mov [esp+14h+var_14] eax +
call sub_40BFC0  +
jmp loc_405302  +
***
mov eax [esp+arg_0] +
mov eax ds:dword_45CA20[eax*4] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov eax [edi] +
cmp byte ptr [eax+25h] 0 +
jnz loc_4054F0  +
cmp ebx 1 +
jbe loc_4054E3  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_46B084 +
mov [esp+3Ch+var_34] 2 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_40EC70  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_4054E3  +
cmp eax [edi+98h] +
jz loc_4054E3  +
mov [edi+98h] eax +
mov eax [eax+10h] +
test eax eax +
js loc_4054E3  +
mov edx ds:dword_46B084 +
imul eax eax +
add eax [edx] +
cmp byte ptr [edi+65h] 0 +
mov [esp+3Ch+var_10] eax +
jnz loc_405503  +
mov ebx [eax+1Ch] +
mov edx 0FFFFFFFFh +
movzx ecx byte ptr [eax+18h] +
mov ebp [eax+8] +
mov esi [edi] +
sub ebx 1 +
sub ebx [eax] +
shl edx cl +
and edx ebx +
shr edx cl +
add edx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aInFileIncluded +
mov [esp+3Ch+var_3C] esi +
call sub_40BFC0  +
mov eax [esp+3Ch+var_10] +
mov esi 1 +
mov edx [eax+10h] +
test edx edx +
js loc_4054C7  +
nop   +
mov eax ds:dword_46B084 +
imul edx edx +
add edx [eax] +
mov eax esi +
mov ebx [edx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov ebp [edx+8] +
mov [esp+3Ch+var_10] edx +
sub ebx 1 +
sub ebx [edx] +
shl eax cl +
neg eax  +
and eax ebx +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_38] offset aFromRSDR +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40BFC0  +
mov eax [esp+3Ch+var_10] +
mov edx [eax+10h] +
test edx edx +
jns loc_405470  +
mov eax [edi] +
mov [esp+3Ch+var_38] offset asc_45C5B0 +
mov [esp+3Ch+var_3C] eax +
call sub_40BFC0  +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40A680  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] eax +
call sub_40A680  +
mov eax [edi] +
mov byte ptr [eax+25h] 0 +
jmp loc_4053B3  +
movzx esi byte ptr [eax+18h] +
mov edx 1 +
mov ebp [eax+8] +
mov ecx esi +
shl edx cl +
mov ecx [eax+1Ch] +
mov ebx edx +
sub edx 1 +
neg ebx  +
sub ecx 1 +
sub ecx [eax] +
and ebx ecx +
movzx ecx byte ptr [eax+19h] +
and edx ebx +
shr edx cl +
mov ecx esi +
mov [esp+3Ch+var_28] edx +
shr ebx cl +
add ebx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] ebx +
mov [esp+3Ch+var_38] offset aInFileInclud_0 +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_40BFC0  +
jmp loc_40545E  +
***
push ebp  +
xor eax eax +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
mov esi [esp+30h] +
test ebx ebx +
js loc_405616  +
cmp ebx [esi+40h] +
jge loc_405616  +
cmp dword ptr [esp+38h] 0Dh +
jg loc_405616  +
mov eax [esi+44h] +
mov edx [esp+3Ch] +
lea eax [eax+ebx*4] +
test edx edx +
mov ebp [eax] +
jz loc_405620  +
test ebp ebp +
jz loc_405635  +
mov eax [esi+4Ch] +
mov ecx eax +
sub ecx 1 +
mov [esp+0Ch] eax +
mov eax [esi+48h] +
js loc_4055E2  +
lea edx [ecx+ecx*2] +
shl edx 2 +
lea edi [eax+edx] +
cmp [edi+4] ebx +
lea edx [eax+edx-0Ch] +
jnz loc_4055DA  +
jmp loc_405630  +
mov edi edx +
sub edx 0Ch +
cmp [edx+10h] ebx +
jz loc_405630  +
sub ecx 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_4055D0  +
mov edi [esp+0Ch] +
mov [esp] eax +
lea edi [edi+edi*2+3] +
shl edi 2 +
mov [esp+4] edi +
call sub_435F50  +
mov [esi+48h] eax +
lea eax [eax+edi-0Ch] +
mov edi [esp+3Ch] +
mov [eax+4] ebx +
mov [eax] edi +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax ebp +
add dword ptr [esi+4Ch] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+38h] +
mov [eax] esi +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [edi+8] +
jmp loc_4055E2  +
***
mov edx [esi+88h] +
mov bp 1 +
mov eax [esi+84h] +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_40565E  +
cmp byte ptr [esi+3Ch] 1 +
sbb ebp ebp +
and ebp 2 +
add ebp 4 +
mov eax [esi+44h] +
mov [eax+ebx*4] ebp +
jmp loc_4055A9  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [ebx+54h] +
mov eax [ebx+50h] +
lea edx ds:4[edx*4] +
mov [esp+4] edx +
mov [esp] eax +
call sub_435F50  +
mov edx [ebx+54h] +
lea ecx [edx+1] +
mov [ebx+54h] ecx +
mov ecx [ebx+4Ch] +
mov [ebx+50h] eax +
mov [eax+edx*4] ecx +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [ebx+54h] +
test eax eax +
jz loc_4056CF  +
mov edx [ebx+50h] +
sub eax 1 +
mov [ebx+54h] eax +
mov edi [edx+eax*4] +
mov eax [ebx+4Ch] +
lea esi [eax+eax*2+3] +
mov eax [ebx+48h] +
shl esi 2 +
mov [esp+4] esi +
mov [esp] eax +
call sub_435F50  +
mov edx [esp+24h] +
mov [ebx+48h] eax +
lea eax [eax+esi-0Ch] +
mov [eax] edx +
mov [eax+4] edi +
mov dword ptr [eax+8] 0Fh +
add dword ptr [ebx+4Ch] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
movzx edx byte ptr [ebp+0] +
cmp dl 2Eh +
jnz loc_4057F6  +
cmp byte ptr [ebp+1] 2Eh +
jnz loc_4057EA  +
movzx eax byte ptr [ebp+2] +
cmp al 5Ch +
jnz loc_4057E2  +
mov eax ebp +
jmp loc_40574F  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_405765  +
movzx edx byte ptr [eax+2] +
cmp dl 5Ch +
jnz loc_405760  +
add eax 3 +
movzx edx byte ptr [eax] +
cmp dl 2Eh +
jz loc_405740  +
mov edi edx +
jmp loc_40576A  +
cmp dl 2Fh +
jz loc_40574F  +
mov edi 2Eh +
mov edx offset a____GccGccDiag +
jmp loc_405782  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_40578D  +
movzx esi byte ptr [edx+2] +
mov ebx esi +
cmp bl 5Ch +
jnz loc_4057D7  +
add edx 3 +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_405771  +
mov ebx edi +
cmp bl cl +
jnz loc_4057B1  +
mov ebx edi +
test bl bl +
jnz loc_4057A4  +
jmp loc_4057B1  +
test cl cl +
jz loc_4057B1  +
add eax 1 +
add edx 1 +
movzx ecx byte ptr [eax] +
cmp cl [edx] +
jz loc_4057A0  +
cmp ebp eax +
jb loc_4057C9  +
jmp loc_4057D2  +
cmp dl 2Fh +
lea esi [esi+0] +
jz loc_4057D2  +
sub eax 1 +
cmp eax ebp +
jz loc_4057D2  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_4057B7  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 2Fh +
jz loc_405782  +
lea esi [esi+0] +
jmp loc_40578D  +
cmp al 2Fh +
jz loc_40573B  +
mov eax ebp +
mov edi 2Eh +
jmp loc_40576A  +
mov edi edx +
mov eax ebp +
jmp loc_40576A  +
***
sub esp 3Ch +
lea eax [esp+44h] +
mov [esp+18h] eax +
call ds:__imp__errno  +
lea edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+28h] 0 +
mov [esp+24h] eax +
lea eax [esp+18h] +
mov [esp+20h] eax +
mov eax [esp+40h] +
mov [esp+1Ch] eax +
mov eax off_456004 +
mov eax [eax] +
mov [esp+4] edx +
mov [esp] eax +
call sub_40BF70  +
mov eax off_456004 +
mov eax [eax] +
mov [esp] eax +
call sub_40C080  +
add esp 3Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44B5B0  +
add esp 1Ch +
retn   +
***
sub esp 14h +
sub esp 1Ch +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
cmp eax 0Dh +
ja loc_405A05  +
jmp ds:off_45C720[eax*4]  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_405A00  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+6Ch] 0 +
jnz loc_405AB1  +
add esp 3Ch +
retn   +
cmp eax 3 +
jz loc_405A50  +
mov [esp+3Ch+var_10] 0 +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_405A00  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseSubmitAF +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_405880  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jle loc_4059CA  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseIncludeT +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_405880  +
mov eax ds:_iob +
mov [esp+3Ch+var_34] offset aHttpsGcc_gnu_o +
mov [esp+3Ch+var_38] offset aSeeSForInstruc +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_405880  +
mov [esp+3Ch+var_3C] 4 +
call exit  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jz loc_405A21  +
call abort  +
mov [esp+3Ch+var_34] offset aDiagnostic_act +
mov [esp+3Ch+var_38] 215h +
mov [esp+3Ch+var_3C] offset a____GccGccDi_0 +
call sub_405910  +
mov [esp+3Ch+var_3C] eax +
call sub_4052D0  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationTer +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_405880  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] offset sub_404E30 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] 0 +
call sub_42F3C0  +
mov [esp+3Ch+var_10] 0 +
test eax eax +
jz loc_405988  +
lea edx [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_30] offset sub_404E30 +
mov [esp+3Ch+var_34] offset sub_404CB0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] eax +
call sub_42F510  +
jmp loc_405988  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationT_0 +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_405880  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4052D0  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
jmp sub_405AF0  +
***
sub esp 14h +
sub esp 14h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [ebp+arg_4] +
mov [esp+18h+var_18] 0 +
mov ebx [ebp+arg_0] +
mov ecx esi +
call sub_40A160  +
sub esp 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ebx +
call sub_405390  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_405BB0  +
mov edx [ebx] +
mov [ebp+arg_0] edx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp sub_40A510  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [ebp+0Ch] +
lea esi [ebp-74h] +
mov ebx [ebp+8] +
mov ecx esi +
lea edi [ebp-98h] +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp+14h] +
mov [ebp-9Ch] eax +
lea eax [ebp-9Ch] +
sub esp 8 +
mov [esp+8] eax +
mov eax [ebp+10h] +
mov dword ptr [esp+10h] 8 +
mov [esp+0Ch] esi +
mov [esp] edi +
mov [esp+4] eax +
call sub_405B50  +
cmp byte ptr [ebx+0A0h] 0 +
jnz loc_405DD7  +
mov eax [ebx] +
mov edx [eax+8] +
mov [esp+4] edi +
mov [esp] ebx +
mov [ebp-0ACh] edx +
call sub_405BB0  +
mov ecx [ebx] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_40A510  +
mov eax [ebx] +
mov [esp+4] edi +
mov [esp] eax +
call sub_40AB90  +
mov eax [ebx] +
mov [esp] eax +
call sub_40BEC0  +
mov eax [ebx] +
mov [esp] eax +
call sub_40A540  +
mov eax [ebx] +
mov edx [ebp-0ACh] +
mov [esp] eax +
mov [esp+4] edx +
call sub_40A510  +
mov dword ptr [esp+8] 8 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_4094D0  +
mov ecx esi +
call sub_40FB70  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 24h +
test eax eax +
jz loc_405F09  +
test edx edx +
mov ebx edx +
jz loc_405F25  +
mov [esp+28h+var_24] 22h +
mov [esp+28h+var_28] eax +
call sub_40A6D0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_405E4C  +
jmp loc_405E72  +
cmp cl 22h +
jz loc_405EC0  +
cmp cl 5Ch +
nop   +
jnz loc_405EA0  +
mov [esp+28h+var_24] offset asc_45C762 +
mov [esp+28h+var_28] esi +
call sub_40AB40  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_405E72  +
cmp cl 0Ah +
jz loc_405E88  +
jg loc_405E22  +
cmp cl 9 +
jnz loc_405EA0  +
add ebx 1 +
mov [esp+28h+var_24] offset aT +
mov [esp+28h+var_28] esi +
call sub_40AB40  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_405E4C  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 22h +
call sub_40A6D0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+28h+var_24] offset aN +
mov [esp+28h+var_28] esi +
call sub_40AB40  +
jmp loc_405E42  +
movzx eax cl +
movsx edx cl +
test byte ptr ds:word_4660A0[eax+eax] 10h +
jz loc_405ED5  +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] esi +
call sub_40A6D0  +
jmp loc_405E42  +
mov [esp+28h+var_24] offset asc_45C76B +
mov [esp+28h+var_28] esi +
call sub_40AB40  +
jmp loc_405E42  +
mov eax ecx +
and eax 7 +
mov [esp+28h+var_18] eax +
mov eax ecx +
shr al 3 +
shr cl 6 +
and eax 7 +
movzx ecx cl +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] offset aOOO +
mov [esp+28h+var_28] esi +
call sub_40C000  +
jmp loc_405E42  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C1h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_405910  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C2h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_405910  +
jmp sub_405F50  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [ebp+arg_4] +
mov [esp+88h+var_88] 0 +
mov esi [ebp+arg_0] +
mov ecx edi +
call sub_40A160  +
mov edx [edi+1Ch] +
sub esp 4 +
cmp edx 0Ah +
mov [ebp+var_4C] eax +
jz loc_405FE0  +
cmp edx 6 +
jz loc_405FE0  +
mov eax edx +
cmp eax 8 +
jz loc_4061F0  +
mov ecx [esi+9Ch] +
test ecx ecx +
jle loc_406004  +
cmp eax 0Dh +
jz loc_405F9F  +
cmp eax 3 +
jnz loc_405FA4  +
cmp ecx 1 +
jz loc_405FF4  +
cmp ecx 2 +
jle loc_40661D  +
mov eax ds:_iob +
mov [esp+88h+var_84] offset aInternalCompil +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_405880  +
mov [esp+88h+var_84] 3 +
mov [esp+88h+var_88] esi +
call sub_405940  +
call abort  +
lea esi [esi+0] +
cmp byte ptr [esi+6Dh] 0 +
jz loc_406210  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
call sub_40C080  +
mov edx [ebp+var_50] +
cmp byte ptr [esi+3Ch] 0 +
jz loc_406014  +
cmp dword ptr [edi+1Ch] 6 +
jz loc_406268  +
mov eax [edi+20h] +
test eax eax +
jnz loc_406141  +
mov eax [edi+1Ch] +
cmp eax 8 +
jz loc_4061E0  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] esi +
mov [ebp+var_4C] edx +
call sub_4058B0  +
mov eax [edi+1Ch] +
add dword ptr [esi+9Ch] 1 +
mov edx [ebp+var_4C] +
cmp eax 0Dh +
jnz loc_406581  +
mov ebx [esi+14h] +
test ebx ebx +
jle loc_406274  +
cmp byte ptr [esi+64h] 0 +
jz loc_406595  +
mov ecx [esi+80h] +
test ecx ecx +
jz loc_40608E  +
mov eax [edi] +
mov ebx [edi+4] +
mov [ebp+var_4C] edx +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ebx +
call ecx  +
mov eax [edi+1Ch] +
mov edx [ebp+var_4C] +
cmp eax 4 +
jnz loc_40609C  +
cmp edx 6 +
jz loc_406564  +
add dword ptr [esi+eax*4+4] 1 +
mov ebx [edi] +
cmp byte ptr [esi+63h] 0 +
mov [ebp+var_54] ebx +
jnz loc_406284  +
lea eax [edi+18h] +
mov [edi+0Ch] eax +
mov eax [esi] +
mov dword ptr [edi+18h] 0 +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] eax +
call sub_40AB90  +
mov eax [esi+74h] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_40BEC0  +
mov eax [esi+7Ch] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
cmp byte ptr [esi+0A3h] 0 +
jnz loc_406390  +
mov eax [edi+1Ch] +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call sub_405940  +
mov ecx [esi+0A4h] +
mov eax [ebp+var_54] +
mov dword ptr [edi+18h] 0 +
test ecx ecx +
mov [edi] eax +
jz loc_40612D  +
mov eax [edi+14h] +
mov [esp+88h+var_88] eax +
call sub_40D5C0  +
sub esp 4 +
sub dword ptr [esi+9Ch] 1 +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esi+68h] +
jz loc_40601F  +
mov ebx [esi+88h] +
mov ecx [esi+84h] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ebx +
call ecx  +
test eax eax +
jz loc_405FEA  +
mov ebx [esi+4Ch] +
mov edx [ebp+var_50] +
test ebx ebx +
jle loc_406546  +
sub ebx 1 +
mov [ebp+arg_4] edi +
jmp loc_4061A0  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_406575  +
mov edx [ebp+arg_4] +
cmp [edx+20h] ecx +
jz loc_406575  +
sub ebx 1 +
js loc_406540  +
mov ecx [esi+48h] +
lea eax [ebx+ebx*2] +
lea edi ds:0[eax*4] +
mov edx [ebp+var_4C] +
mov eax [ecx+eax*4] +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_46B084 +
mov [esp+88h+var_88] eax +
call sub_40EF10  +
test eax eax +
js loc_406197  +
add edi [esi+48h] +
mov eax [edi+8] +
cmp eax 0Fh +
jnz loc_406180  +
mov ebx [edi+4] +
jmp loc_406197  +
add dword ptr [esi+9Ch] 1 +
jmp loc_40609C  +
cmp byte ptr [esi+0A0h] 0 +
jnz loc_405FEA  +
mov ecx [esi+9Ch] +
test ecx ecx +
jg loc_405F95  +
jmp loc_406004  +
mov eax [ebp+var_4C] +
mov [ebp+var_50] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_46B084 +
mov [esp+88h+var_88] eax +
call sub_40EBB0  +
mov edx [ebp+var_50] +
test eax eax +
jz loc_406238  +
cmp byte ptr [esi+6Eh] 0 +
jz loc_405FEA  +
mov eax [edi+1Ch] +
cmp eax 0Ah +
jnz loc_405F82  +
cmp byte ptr [esi+66h] 1 +
mov ecx [esi+9Ch] +
sbb edx edx +
and edx 2 +
add edx 4 +
test ecx ecx +
mov [edi+1Ch] edx +
mov eax edx +
jg loc_405F95  +
jmp loc_406004  +
mov dword ptr [edi+1Ch] 4 +
jmp loc_406014  +
mov ecx [esi+18h] +
test ecx ecx +
jg loc_40605F  +
jmp loc_406069  +
mov ebx [edi+20h] +
mov ecx [esi+8Ch] +
mov [esp+88h+var_7C] eax +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] esi +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_4060B0  +
mov eax [edi+1Ch] +
mov edx ds:dword_45CA20[eax*4] +
mov [esp+88h+var_88] edx +
mov [ebp+var_4C] edx +
call strlen  +
mov edx [ebp+var_4C] +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_80] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_40C2A0  +
mov [ebp+var_4C] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_40C310  +
mov edx [ebp+var_4C] +
mov ecx eax +
mov eax [edi] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_45C7E8 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 45C7EAh +
mov [esp+88h+var_84] 45C7ECh +
mov [esp+88h+var_88] eax +
mov [ebp+var_50] ecx +
call sub_436FE0  +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov ecx [ebp+var_50] +
sub esp eax +
mov eax [edi] +
lea edx [esp+88h+var_59] +
and edx 0FFFFFFF0h +
mov ds:dword_46C0D4 edx +
mov edx [ebp+var_4C] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_45C7E8 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 45C7EAh +
mov [esp+88h+var_84] 45C7ECh +
mov [esp+88h+var_88] eax +
call sub_437060  +
mov [edi] eax +
mov [esp+88h+var_88] ebx +
call free  +
jmp loc_4060B0  +
mov eax [edi+14h] +
mov [ebp+var_50] eax +
mov eax [esi] +
test eax eax +
mov ebx eax +
jz loc_406601  +
mov eax [ebp+var_50] +
test eax eax +
jz loc_4065E5  +
mov eax [eax+44h] +
test eax eax +
jz loc_4064C4  +
mov eax [ebp+var_50] +
mov [ebp+arg_0] esi +
mov esi ebx +
mov dword ptr [ebp-5Ch] 0FFFFFFF8h +
mov [ebp+var_4C] 0 +
add eax 44h +
mov [ebp+var_60] eax +
mov [ebp+arg_4] edi +
cmp [ebp+var_4C] 1 +
jle loc_406530  +
mov ebx [ebp+var_50] +
mov eax [ebp-5Ch] +
add eax [ebx+54h] +
mov ebx [eax] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [esp+88h+var_84] eax +
lea eax [ebp+var_40] +
mov [esp+88h+var_88] eax +
call sub_403540  +
mov eax [ebp+var_3C] +
mov [esp+88h+var_84] offset aFixIt +
mov edi [ebp+var_38] +
mov [esp+88h+var_88] esi +
mov [ebp+var_59+1] eax +
call sub_40AB40  +
mov edx [ebp+var_40] +
mov eax esi +
call sub_405DF0  +
mov eax [ebx] +
lea ecx [ebp+var_44] +
mov eax [eax+14h] +
mov [esp+88h+var_88] ecx +
mov ecx ebx +
call eax  +
sub esp 4 +
test al al +
jz loc_4064D1  +
mov eax [ebp+var_44] +
mov [esp+8Ch+var_88] eax +
lea eax [ebp+var_2C] +
mov [esp+8Ch+var_8C] eax +
call sub_403540  +
mov eax [ebp+var_24] +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_8C] esi +
add eax 1 +
mov [esp+8Ch+var_78] eax +
mov eax [ebp+var_28] +
mov [esp+8Ch+var_7C] eax +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_84] eax +
call sub_40C000  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4064FF  +
cmp eax 1 +
jnz loc_406510  +
mov edx [ebx+0Ch] +
mov eax esi +
call sub_405DF0  +
mov [esp+8Ch+var_8C] esi +
call sub_40A680  +
mov eax [ebp+var_50] +
add [ebp+var_4C] 1 +
mov ebx [ebp+var_4C] +
add dword ptr [ebp-5Ch] 4 +
cmp ebx [eax+44h] +
jb loc_4063D7  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov eax [esi] +
mov ebx eax +
mov [esp+8Ch+var_8C] ebx +
call sub_40A370  +
jmp loc_4060FA  +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] esi +
call sub_40C000  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_406488  +
mov edx [ebx+8] +
mov eax esi +
call sub_405DF0  +
jmp loc_40649B  +
mov [esp+8Ch+var_84] offset aPrint_parseabl +
mov [esp+8Ch+var_88] 31Bh +
mov [esp+8Ch+var_8C] offset a____GccGccDi_0 +
call sub_405910  +
lea esi [esi+0] +
mov eax [ebp+var_60] +
mov ebx [ebp+var_4C] +
lea eax [eax+ebx*4+4] +
jmp loc_4063EA  +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
mov ecx [edi+20h] +
mov eax [esi+44h] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_406570  +
mov [edi+1Ch] eax +
cmp eax 1 +
jnz loc_406022  +
jmp loc_405FEA  +
add dword ptr [esi+34h] 1 +
jmp loc_4060A1  +
mov eax [edi+1Ch] +
jmp loc_406556  +
test eax eax +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
jnz loc_406553  +
jmp loc_406546  +
cmp eax 3 +
jz loc_406054  +
lea esi [esi+0] +
jmp loc_40608E  +
mov ecx edi +
mov [esp+88h+var_88] 0 +
call sub_40A160  +
push edx  +
lea edx [ebp+var_2C] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edx +
call sub_403540  +
mov eax [ebp+var_28] +
mov [esp+88h+var_84] offset aSDConfusedByEa +
mov [esp+88h+var_7C] eax +
mov eax [ebp+var_2C] +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_405880  +
mov [esp+88h+var_88] 4 +
call exit  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EFh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_405910  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EEh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_405910  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_40C080  +
jmp loc_405FAD  +
***
sub esp 54h +
mov ebx [esp+54h+arg_10] +
cmp ebx 0Bh +
jz loc_406690  +
mov eax [esp+54h+arg_0] +
lea esi [esp+54h+var_28] +
mov [esp+54h+var_44] ebx +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_405B50  +
cmp ebx 0Ah +
jnz loc_4066D7  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_8] eax +
mov eax off_456004 +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
call sub_405F50  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax off_456004 +
lea esi [esp+54h+var_28] +
cmp byte ptr [eax+67h] 1 +
mov [esp+54h+var_54] esi +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 6 +
mov [esp+54h+var_44] eax +
mov eax [esp+54h+arg_0] +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_405B50  +
mov eax off_456004 +
mov edx [eax+68h] +
mov [esp+54h+var_8] edx +
jmp loc_406678  +
cmp ebx 6 +
jz loc_40666B  +
jmp loc_406673  +
***
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_46B084 +
mov [esp+88h+var_88] eax +
call sub_40FE90  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 8 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_406630  +
mov ecx ebx +
call sub_40FB70  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_406630  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax ds:dword_46B088 +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
call sub_406630  +
mov ecx ebx +
mov esi eax +
call sub_40FB70  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_406630  +
mov ecx ebx +
mov esi eax +
call sub_40FB70  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_4068C0  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_406630  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_406630  +
mov ecx ebx +
mov esi eax +
call sub_40FB70  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_406970  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_406630  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_406630  +
mov ecx ebx +
mov esi eax +
call sub_40FB70  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_406630  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
lea eax [ebp+0Ch] +
push ebx  +
sub esp 84h +
mov [ebp-68h] eax +
mov eax ds:dword_46B088 +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+8] +
mov [esp] ebx +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_406630  +
mov ecx ebx +
call sub_40FB70  +
mov ebx [ebp-4] +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
lea eax [ebp+10h] +
push ebx  +
sub esp 84h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FE90  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_406630  +
mov ecx ebx +
call sub_40FB70  +
mov ebx [ebp-4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_406630  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_46B088 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_46B084 +
mov [esp+88h+var_88] eax +
call sub_40FE90  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 3 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_406630  +
mov [esp+88h+var_80] offset aInternal_error +
mov [esp+88h+var_84] 576h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_405910  +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_74] +
mov esi [ebp+arg_18] +
mov ecx ebx +
lea edi [ebp+var_98] +
mov [esp+144h+var_140] eax +
mov eax ds:dword_46B084 +
mov [esp+144h+var_144] eax +
call sub_40FE90  +
mov eax [ebp+arg_8] +
sub esp 8 +
mov [esp+144h+var_13C] eax +
mov eax [ebp+arg_10] +
mov [esp+144h+var_140] eax +
mov eax [ebp+arg_C] +
mov [esp+144h+var_144] eax +
call sub_40D7D0  +
mov edx [ebp+arg_14] +
mov [esp+144h+var_134] esi +
mov [esp+144h+var_138] ebx +
mov [esp+144h+var_144] edi +
mov [esp+144h+var_13C] edx +
mov [esp+144h+var_140] eax +
call sub_405AF0  +
cmp esi 6 +
jnz loc_406CA0  +
mov eax [ebp+arg_4] +
mov [ebp+var_78] eax +
mov eax off_456004 +
mov [esp+144h+var_140] edi +
mov [esp+144h+var_144] eax +
call sub_405F50  +
mov ecx ebx +
mov esi eax +
call sub_40FB70  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_406C30  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+54h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+18h] 6 +
mov [esp+10h] eax +
mov eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_406C30  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_406C30  +
add esp 3Ch +
retn   +
***
push ebx  +
sub esp 58h +
lea eax [esp+74h] +
mov [esp+28h] eax +
mov eax [esp+68h] +
lea ebx [esp+2Ch] +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp+4] eax +
mov eax [esp+6Ch] +
mov [esp] eax +
call sub_40D7D0  +
mov edx [esp+60h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_405AF0  +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp+4Ch] eax +
mov eax off_456004 +
mov [esp] eax +
call sub_405F50  +
add esp 58h +
pop ebx  +
retn   +
***
lea eax [ebp+arg_8] +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_4] +
cmp edx eax +
jnb loc_406F4E  +
test edx edx +
mov ecx 4 +
jz loc_406F30  +
cmp edx 0Fh +
ja loc_406F40  +
lea ecx [edx+edx] +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
lea ecx [edx+edx*2] +
shr ecx 1 +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aCalculate_allo +
mov [esp+1Ch+var_18] 0A7h +
mov [esp+1Ch+var_1C] offset a____GccGccVec_ +
call sub_405910  +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_45CAFD +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_450940  +
mov edx ds:dword_46B1B8 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_435F00  +
mov [ebp-4Ch] eax +
mov eax ds:dword_46B1B8 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_406FD1  +
jmp loc_407345  +
add ecx 8 +
cmp edx ecx +
jbe loc_407345  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_406FC6  +
cmp ebx 1 +
jz loc_406FC6  +
xor esi esi +
test eax eax +
jz loc_407333  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_407313  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_407014  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_40700D  +
cmp ebx 1 +
jnz loc_406FE0  +
add ecx 8 +
cmp edx ecx +
ja loc_407000  +
mov [ebp-48h] esi +
mov eax [ebp-48h] +
mov [esp+98h+var_8C] offset loc_453BB0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] eax +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call qsort  +
mov edx ds:dword_46B1B8 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_435F00  +
mov [ebp-50h] eax +
mov eax ds:dword_46B1B8 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_40707B  +
jmp loc_40734E  +
add ecx 8 +
cmp edx ecx +
jbe loc_40734E  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_407070  +
cmp ebx 1 +
jz loc_407070  +
xor edi edi +
lea esi [esi+0] +
test eax eax +
jz loc_407326  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_407300  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_4070C4  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_4070BD  +
cmp ebx 1 +
jnz loc_407090  +
add ecx 8 +
cmp edx ecx +
ja loc_4070B0  +
mov esi [ebp-50h] +
mov [esp+98h+var_8C] offset loc_453BB0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call qsort  +
test edi edi +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
jz loc_407170  +
lea eax [esi+edi*8] +
mov edx esi +
mov [ebp-44h] eax +
xor edi edi +
xor esi esi +
mov dword ptr [ebp-40h] 0 +
xor ebx ebx +
xor ecx ecx +
jmp loc_407136  +
mov ecx [ebp-3Ch] +
mov [ebp-40h] eax +
mov eax [edx+4] +
add edx 8 +
add ecx [eax+14h] +
add edi [eax+4] +
add esi [eax+8] +
mov [ebp-3Ch] ecx +
mov ecx [ebp-40h] +
add ecx [eax] +
add ebx [eax+10h] +
cmp edx [ebp-44h] +
mov eax ecx +
mov [ebp-30h] ecx +
mov ecx [ebp-3Ch] +
mov [ebp-2Ch] edi +
mov [ebp-28h] esi +
mov dword ptr [ebp-24h] 0 +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ecx +
jnz loc_407130  +
mov eax [ebp-50h] +
mov ebx 8Ch +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_7C] offset aPeakItems +
mov [esp+98h+var_80] offset aLeakItems +
mov [esp+98h+var_84] offset aTimes +
add eax 40h +
mov [esp+98h+var_88] offset aPeak +
mov [esp+98h+var_8C] offset aLeak +
mov [esp+98h+var_90] offset aHeapVectors +
mov [esp+98h+var_94] offset a48s11s15s10s17 +
mov [esp+98h+var_98] eax +
call sub_450940  +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_4071C8  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov ebx [ebp-48h] +
sub ebx 1 +
js loc_40722B  +
mov edi [ebp-4Ch] +
lea esi [ebp-30h] +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*8] +
mov ecx [edi+ebx*8+4] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_453FD0  +
sub esp 8 +
sub ebx 1 +
jns loc_407210  +
mov ebx 8Ch +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_407230  +
mov eax ds:_iob +
mov ebx 8Ch +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-20h] +
mov [esp+98h+var_90] offset aTotal +
mov [esp+98h+var_94] offset aS55li25li17li +
mov [esp+98h+var_84] eax +
mov eax [ebp-2Ch] +
mov [esp+98h+var_88] eax +
mov eax [ebp-30h] +
mov [esp+98h+var_8C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_450940  +
nop   +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_4072A0  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_45CAFD +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_450940  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp-50h] +
lea esi [esi+edi*8] +
add edi 1 +
mov [esi] ecx +
mov [esi+4] ebx +
jmp loc_4070A7  +
mov edi [ebp-4Ch] +
lea edi [edi+esi*8] +
add esi 1 +
mov [edi] ecx +
mov [edi+4] ebx +
jmp loc_406FF7  +
test edx edx +
jnz loc_407098  +
jmp loc_4070C4  +
test edx edx +
jnz loc_406FE8  +
nop   +
lea esi [esi+0] +
jmp loc_407014  +
xor edx edx +
xor eax eax +
jmp loc_406FDE  +
xor edx edx +
xor eax eax +
jmp loc_407088  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
mov ecx ds:dword_46B1BC +
mov esi ebx +
mov [ebp-3Ch] eax +
sar esi 3 +
lea eax [ebp-38h] +
mov [esp+4] esi +
mov [esp] eax +
mov [ebp-38h] ebx +
call sub_4529F0  +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_407420  +
mov ecx ds:dword_46B1BC +
lea edi [ebp-1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [ebp-1Ch] ebx +
call sub_4529F0  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_4073D6  +
mov eax [eax+4] +
mov edx [eax] +
cmp [ebp+0Ch] edx +
ja loc_4076CF  +
sub edx [ebp+0Ch] +
cmp byte ptr [ebp-3Ch] 0 +
mov [eax] edx +
jnz loc_4073E0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [ebp-1Ch] ebx +
mov ebx ds:dword_46B1BC +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] edi +
mov ecx ebx +
call sub_452AF0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_4073D6  +
mov dword ptr [eax] 1 +
add dword ptr [ebx+0Ch] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] 14h +
call loc_4543A0  +
mov dword ptr [eax] 0 +
mov edi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov [ebp-30h] eax +
mov eax ds:dword_46B1B8 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-34h] ebx +
mov [ebp-40h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_436D00  +
mov edx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_436D00  +
mov ecx [edi+8] +
mov edx eax +
mov eax 9E3779B9h +
sub eax ecx +
mov edi edx +
sub eax edx +
sub ecx edx +
shr edi 0Dh +
xor edi eax +
mov eax edi +
sub ecx edi +
shl eax 8 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shr ecx 0Dh +
sub edi eax +
xor ecx edx +
mov edx ecx +
sub edi ecx +
shr edx 0Ch +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shl edi 10h +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
sub edx edi +
shr ecx 5 +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 3 +
sub edi ecx +
xor eax edx +
mov edx eax +
sub edi eax +
shl edx 0Ah +
sub ecx eax +
xor edx edi +
mov eax ecx +
mov ecx [ebp-40h] +
sub eax edx +
shr edx 0Fh +
xor edx eax +
lea edi [ebp-30h] +
mov [esp] edi +
mov [esp+4] edx +
call sub_451DF0  +
mov edi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_4075AD  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_4542F0  +
mov edx [edi+4] +
add dword ptr [edx+0Ch] 1 +
mov eax [ebp-34h] +
lea edi [ebp-34h] +
mov ecx ds:dword_46B1BC +
mov [esp] edi +
mov [ebp-40h] edx +
sar eax 3 +
mov [esp+4] eax +
call sub_4529F0  +
mov edx [ebp-40h] +
mov eax [eax] +
sub esp 8 +
test eax eax +
jnz loc_40739C  +
mov eax [ebp-34h] +
mov ecx ds:dword_46B1BC +
mov dword ptr [esp+8] 1 +
mov [esp] edi +
sar eax 3 +
mov [esp+4] eax +
mov [ebp-40h] edx +
call sub_452AF0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
mov edx [ebp-40h] +
jnz loc_40759E  +
mov ecx [ebp-34h] +
mov [eax] ecx +
mov [eax+4] edx +
mov dword ptr [eax+8] 0 +
jmp loc_40739C  +
***
mov dword ptr [esp] 18h +
call loc_4543A0  +
mov edi [ebp-30h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [ebp-44h] eax +
mov eax ds:dword_46B1B8 +
mov [ebp-40h] eax +
mov eax [edi] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_436D00  +
mov ecx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-24h] ecx +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
call sub_436D00  +
mov edi [edi+8] +
mov ecx 9E3779B9h +
mov dword ptr [esp+8] 1 +
sub ecx edi +
mov edx eax +
sub ecx eax +
shr eax 0Dh +
sub edi edx +
xor eax ecx +
mov ecx edi +
mov edi eax +
sub ecx eax +
shl edi 8 +
xor edi ecx +
mov ecx edx +
sub ecx eax +
mov edx edi +
sub ecx edi +
sub eax edi +
shr edx 0Dh +
xor edx ecx +
mov ecx edx +
sub eax edx +
shr ecx 0Ch +
sub edi edx +
xor ecx eax +
mov eax edx +
mov edx ecx +
sub edi ecx +
shl edx 10h +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shr edi 5 +
sub ecx edx +
xor edi eax +
mov eax edi +
sub ecx edi +
shr eax 3 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shl ecx 0Ah +
sub edi eax +
xor ecx edx +
sub edi ecx +
shr ecx 0Fh +
xor ecx edi +
mov [esp+4] ecx +
mov ecx [ebp-40h] +
lea edi [ebp-30h] +
mov [esp] edi +
call sub_451F10  +
mov edx [ebp-44h] +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4076C7  +
mov ecx [ebp-30h] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_40753C  +
***
call sub_455C40  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp] 14h +
call loc_4543A0  +
mov esi ds:dword_46B1B8 +
mov dword ptr [eax] 0 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov eax [ebp+8] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-30h] ebx +
mov [ebp-34h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_436D00  +
mov edx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_436D00  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-30h] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_451DF0  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_4078D0  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_4542F0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-34h] +
lea ebx [ebp-34h] +
mov ecx ds:dword_46B1BC +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_4529F0  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_407890  +
mov eax [ebp+8] +
mov ecx ds:dword_46B1BC +
mov [ebp-1Ch] eax +
sar eax 3 +
mov [esp+4] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_4529F0  +
mov ebx [eax] +
sub esp 8 +
test ebx ebx +
jz loc_407887  +
mov eax [eax+4] +
mov edx [ebp+0Ch] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
ja loc_407882  +
mov edx [ebp+10h] +
add edx [eax+10h] +
cmp edx [eax+14h] +
mov [eax+10h] edx +
jbe loc_407878  +
mov [eax+14h] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [eax+8] edx +
jmp loc_407867  +
***
xor eax eax +
jmp loc_407867  +
***
mov eax [ebp-34h] +
mov ecx ds:dword_46B1BC +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_452AF0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_4078BE  +
mov edx [ebp-34h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
jmp loc_40782D  +
***
mov dword ptr [esp] 18h +
call loc_4543A0  +
mov edx [ebp-30h] +
mov [ebp-40h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax ds:dword_46B1B8 +
mov [ebp-3Ch] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_436D00  +
mov edx [ebp-40h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
mov [ebp-24h] ecx +
call sub_436D00  +
mov edx [ebp-40h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-3Ch] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_451F10  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4079E1  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_407809  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_46B1B8 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_407A1B  +
jmp loc_407B3B  +
add eax 8 +
cmp esi eax +
jbe loc_407B3B  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_407A10  +
cmp edx 1 +
jz loc_407A10  +
test ebx ebx +
jz loc_407B2E  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_4542F0  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_4542F0  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_407A64  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_407A5D  +
cmp edx 1 +
jnz loc_407A28  +
add eax 8 +
cmp esi eax +
ja loc_407A50  +
mov ebx ds:dword_46B1B8 +
test ebx ebx +
jz loc_407AA5  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_407A7F  +
sub eax 1 +
cmp edx eax +
ja loc_407A78  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_407C65  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_407C74  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
mov ebx ds:dword_46B1BC +
test ebx ebx +
jz loc_407AED  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_407AC7  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_407AC0  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_407BD1  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_407BE0  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
mov ebx ds:dword_46B1A0 +
test ebx ebx +
jz loc_407B26  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_407B08  +
sub eax 1 +
cmp edx eax +
ja loc_407B01  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_407B45  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_407B50  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_407A30  +
jmp loc_407A64  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_407A28  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_407B1E  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_452470  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_407B1E  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_407CF6  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_407B1E  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_407B1E  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_407AE5  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_407AE5  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_407CF6  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_407AE5  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_407AE5  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_407A9D  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_46B07C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_407A9D  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_407CF6  +
sub ecx esi +
mov esi ds:dword_46B07C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_452570  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_407A9D  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_407A9D  +
call sub_455C40  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+38h+var_34] +
mov edx [esp+38h+var_30] +
mov eax [ecx] +
sub eax [edx] +
jnz locret_407D14  +
mov eax [ecx+4] +
sub eax [edx+4] +
retn   +
***
push esi  +
push esi  +
mov ebx ecx +
push ebx  +
mov ebx ecx +
sub esp 14h +
lea ecx [ecx+20h] +
mov [esp+18h+var_18] 0FFFFFFFFh +
call sub_407FD0  +
mov eax [ebx+4] +
sub esp 4 +
mov [esp+18h+var_18] eax +
call sub_40A680  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov eax [ebx] +
cmp eax esi +
jle loc_408122  +
jmp loc_40812F  +
mov eax [edi+4] +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] eax +
call sub_40A6D0  +
mov eax [ebx] +
add eax 1 +
mov [ebx] eax +
cmp esi eax +
jg loc_408108  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
call sub_4080C0  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_408122  +
***
push edi  +
push edi  +
mov ebx eax +
sub esp 14h +
mov esi [eax+1Ch] +
test esi esi +
jle loc_40A0FC  +
cmp dword ptr [eax+18h] 1 +
jbe loc_40A0FC  +
mov eax [eax+8] +
test eax eax +
jz loc_40A111  +
mov [esp+14h+var_14] eax +
call strlen  +
mov edx esi +
sub edx eax +
cmp edx 1Fh +
jle loc_40A105  +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 20h +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_40A0F3  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ecx+10h] +
movzx eax byte ptr [ebp+10h] +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
mov eax ds:dword_46B084 +
mov [esp] eax +
call sub_40FF00  +
sub esp 10h +
leave   +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
mov ebx ecx +
mov edi ebx +
mov ecx 0Bh +
sub esp 20h +
stos   +
lea esi [ebx+2Ch] +
mov edi esi +
lea edx [ebx+0E8h] +
mov cl 0Bh +
stos   +
mov eax ds:_iob +
mov [ebx+58h] ebx +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+64h] 0 +
add eax 40h +
mov [ebx+60h] eax +
lea eax [ebx+68h] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_40A1C1  +
mov [esp+28h+var_28] ebx +
mov byte ptr [ebx+0E8h] 1 +
mov [esp+28h+var_18] offset loc_40D8A0 +
mov [esp+28h+var_1C] offset loc_40D860 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_440C70  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_18] offset loc_40D8A0 +
mov [esp+28h+var_1C] offset loc_40D860 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_440C70  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 18h +
lea eax [ecx+2Ch] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] 0 +
call sub_440DE0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 0 +
call sub_440DE0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_46A200 +
mov ecx [ecx+4] +
call sub_40A230  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
call sub_40A260  +
mov [esp+18h+var_18] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+4] +
mov eax [edx+58h] +
mov ecx [eax+8] +
cmp ecx [eax+4] +
jbe loc_40A2DB  +
cmp ecx [eax+10h] +
jb loc_40A2F6  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call sub_440DE0  +
mov edx [ebx+4] +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [eax+0Ch] ecx +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+4] +
mov ebx [edi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40A358  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [edi+58h] +
mov edx [esi+4] +
mov eax [eax+8] +
mov edx [edx+60h] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call fputs  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_40A2C0  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] ebx +
call sub_440CD0  +
mov eax [ebx+0Ch] +
jmp loc_40A328  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+4] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp byte ptr [eax+0E8h] 0 +
jnz loc_40A394  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call sub_40A310  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp loc_4505E0  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
mov [esp] ebx +
call sub_40A310  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+20h] eax +
add esp 18h +
pop ebx  +
jmp loc_4505E0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
movzx esi byte ptr [esp+34h] +
mov ebp [edi+4] +
mov ebx [ebp+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40A4F5  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [ebp+58h] +
mov ebp [eax+8] +
mov eax [edi+4] +
mov ebx [eax+60h] +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_40A455  +
jmp loc_40A4E5  +
cmp al 20h +
jz loc_40A468  +
cmp al 22h +
lea esi [esi+0] +
jz loc_40A472  +
cmp al 0Ah +
jz loc_40A484  +
mov [esp+4] ebx +
movsx eax byte ptr [ebp+0] +
add ebp 1 +
mov [esp] eax +
call fputc  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_40A4E5  +
cmp al 3Ch +
jz loc_40A468  +
jle loc_40A424  +
cmp al 5Ch +
lea esi [esi+0] +
jz loc_40A4B6  +
jg loc_40A4D8  +
cmp al 3Eh +
jnz loc_40A436  +
mov eax esi +
test al al +
lea esi [esi+0] +
jz loc_40A436  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_40A436  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_45CD7D +
call fwrite  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_40A436  +
***
cmp byte ptr [ebp+1] 0 +
jnz loc_40A472  +
mov dword ptr [esp+8] offset aPp_write_text_ +
mov dword ptr [esp+4] 0BEh +
mov dword ptr [esp] offset a____GccGccPret +
call sub_405910  +
sub eax 7Bh +
cmp al 2 +
ja loc_40A436  +
jmp loc_40A468  +
***
mov [esp+30h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40A2C0  +
***
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_440CD0  +
mov eax [ebx+0Ch] +
jmp loc_40A402  +
***
mov ebx [esp+8+arg_0] +
mov eax [esp+8+arg_4] +
mov [ebx+8] eax +
mov eax ebx +
call sub_40A0D0  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_40A55E  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov dword ptr [ecx] offset off_46A200 +
mov [esp+14h+var_10] 0ECh +
mov [esp+14h+var_14] 1 +
call sub_435F00  +
test eax eax +
mov esi eax +
jz loc_40A59E  +
mov ecx eax +
call sub_40A180  +
mov eax [esp+14h+arg_4] +
mov [ebx+4] esi +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov [ebx+1Ch] eax +
mov eax [esp+14h+arg_0] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax ebx +
mov byte ptr [ebx+24h] 0 +
mov byte ptr [ebx+25h] 0 +
mov byte ptr [ebx+26h] 1 +
mov byte ptr [ebx+27h] 0 +
call sub_40A0D0  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov esi [eax+4] +
mov ebx [esi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40A630  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [esi+58h] +
mov eax [eax+8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_440CD0  +
mov eax [ebx+0Ch] +
jmp loc_40A617  +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov edx [eax+58h] +
mov eax [edx+0Ch] +
cmp [edx+8] eax +
jz loc_40A666  +
sub eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax [eax+10h] +
sub eax [edx+64h] +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+4] +
mov ebx [eax+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_40A6B4  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0Ah +
mov eax [esi+4] +
mov byte ptr [esi+25h] 0 +
mov dword ptr [eax+64h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_440CD0  +
mov eax [ebx+0Ch] +
jmp loc_40A697  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+1Ch] +
mov edx [esi+4] +
test eax eax +
jle loc_40A6F2  +
mov eax [esi+10h] +
sub eax [edx+64h] +
test eax eax +
jle loc_40A713  +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jz loc_40A736  +
lea edx [eax+1] +
mov [edi+0Ch] edx +
mov [eax] bl +
mov eax [esi+4] +
add dword ptr [eax+64h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] esi +
call sub_40A680  +
movzx eax bl +
test byte ptr ds:word_4660A0[eax+eax] 40h +
jnz loc_40A70C  +
mov edx [esi+4] +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jnz loc_40A6FD  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edi +
call sub_440CD0  +
mov eax [edi+0Ch] +
jmp loc_40A6FD  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+20h] +
mov esi [edi+14h] +
test esi esi +
jle loc_40A77A  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] edi +
call sub_40A6D0  +
cmp ebx esi +
jnz loc_40A763  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_40A790  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [edi+8] +
test esi esi +
jz loc_40A814  +
mov eax [edi+18h] +
test eax eax +
jz loc_40A820  +
cmp eax 2 +
jnz loc_40A814  +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx [edi+4] +
mov edx [ebx+58h] +
mov ebp eax +
mov ecx [edx+0Ch] +
mov eax [edx+10h] +
sub eax ecx +
cmp ebp eax +
ja loc_40A860  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_10] edx +
call memcpy  +
mov edx [esp+1Ch+var_10] +
add [edx+0Ch] ebp +
xor edx edx +
test ebp ebp +
jg loc_40A7FC  +
jmp loc_40A810  +
add edx 1 +
add dword ptr [ebx+64h] 1 +
cmp ebp edx +
jz loc_40A810  +
cmp byte ptr [esi+edx] 0Ah +
jnz loc_40A7F1  +
add edx 1 +
cmp ebp edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_40A7FC  +
mov byte ptr [edi+24h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+24h] 0 +
jz loc_40A850  +
mov esi [edi+14h] +
test esi esi +
jle loc_40A814  +
xor ebx ebx +
nop   +
mov [esp+1Ch+var_18] 20h +
add ebx 1 +
mov [esp+1Ch+var_1C] edi +
call sub_40A6D0  +
cmp ebx esi +
jnz loc_40A830  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [edi+14h] 3 +
jmp loc_40A7AE  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_10] edx +
call sub_440CD0  +
mov edx [esp+1Ch+var_10] +
mov ecx [edx+0Ch] +
jmp loc_40A7CE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [ebp+4] +
mov edx [ebx+64h] +
test edx edx +
jz loc_40A8F6  +
mov ebp [ebx+58h] +
sub edi esi +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
sub eax edx +
cmp edi eax +
ja loc_40A924  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] esi +
call memcpy  +
mov eax esi +
add [ebp+0Ch] edi +
test edi edi +
lea edx [esi+edi] +
jg loc_40A8DB  +
jmp loc_40A8EE  +
add eax 1 +
add dword ptr [ebx+64h] 1 +
cmp eax edx +
jz loc_40A8EE  +
cmp byte ptr [eax] 0Ah +
jnz loc_40A8D0  +
add eax 1 +
cmp eax edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_40A8DB  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] ebp +
call sub_40A790  +
mov eax [ebp+1Ch] +
test eax eax +
jle loc_40A91C  +
cmp esi edi +
jnz loc_40A917  +
jmp loc_40A91C  +
add esi 1 +
cmp edi esi +
jz loc_40A91C  +
cmp byte ptr [esi] 20h +
jz loc_40A910  +
mov ebx [ebp+4] +
jmp loc_40A89D  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call sub_440CD0  +
mov edx [ebp+0Ch] +
jmp loc_40A8AE  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1Ch] +
cmp edx ecx +
mov [esp+28h+var_1C] eax +
jz loc_40A9D0  +
mov ebx edi +
lea esi [esi+0] +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 1 +
jnz loc_40A97B  +
cmp al 0Ah +
jz loc_40A97B  +
add ebx 1 +
cmp esi ebx +
jnz loc_40A960  +
mov eax [esp+28h+var_1C] +
test eax eax +
jle loc_40A99C  +
mov ecx [ebp+4] +
mov edx ebx +
mov eax [ebp+10h] +
sub edx edi +
sub eax [ecx+64h] +
cmp edx eax +
jl loc_40A99C  +
mov [esp+28h+var_28] ebp +
call sub_40A680  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
call sub_40A880  +
cmp ebx esi +
jz loc_40A9D0  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 1 +
jnz loc_40A9D8  +
cmp al 0Ah +
jz loc_40A9F9  +
cmp esi ebx +
jz loc_40A9D0  +
mov edi ebx +
jmp loc_40A958  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 20h +
mov [esp+28h+var_28] ebp +
call sub_40A6D0  +
lea edx [ebx+1] +
cmp esi edx +
jz loc_40A9D0  +
movzx eax byte ptr [ebx+1] +
mov ebx edx +
cmp al 0Ah +
jnz loc_40A9C4  +
mov [esp+28h+var_28] ebp +
add ebx 1 +
call sub_40A680  +
jmp loc_40A9C4  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
cmp ecx 0FFFFFFFFh +
mov [esp+44h+var_2C] edx +
mov [esp+44h+var_28] ecx +
jz loc_40AB25  +
mov esi [esp+44h+var_28] +
mov eax [esp+44h+var_2C] +
test esi esi +
jz loc_40AB36  +
lea ebx [eax+1] +
mov [esp+44h+var_30] eax +
lea ebp [esp+44h+var_1F] +
jmp loc_40AA5C  +
mov edx ebp +
mov eax edi +
call sub_40A940  +
mov [esp+44h+var_30] ebx +
add ebx 1 +
sub esi 1 +
jz loc_40AAC2  +
movzx eax byte ptr [ebx-1] +
lea ecx [ebx-1] +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 10h +
jnz loc_40AA54  +
cmp ecx [esp+44h+var_30] +
ja loc_40AAA7  +
mov [esp+44h+var_3C] eax +
mov [esp+44h+var_40] offset aX02x +
mov [esp+44h+var_44] ebp +
call sub_450970  +
mov edx [edi+1Ch] +
test edx edx +
lea ecx [ebp+eax+0] +
jg loc_40AA47  +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
call sub_40A880  +
jmp loc_40AA50  +
mov eax [edi+1Ch] +
lea ecx [ebx-2] +
test eax eax +
jle loc_40AAE8  +
mov edx [esp+44h+var_30] +
mov eax edi +
call sub_40A940  +
movzx eax byte ptr [ebx-1] +
jmp loc_40AA76  +
mov eax [esp+44h+var_28] +
add [esp+44h+var_2C] eax +
mov eax [edi+1Ch] +
test eax eax +
jle loc_40AB05  +
mov ecx [esp+44h+var_2C] +
mov eax edi +
mov edx [esp+44h+var_30] +
call sub_40A940  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_40A880  +
movzx eax byte ptr [ebx-1] +
jmp loc_40AA76  +
mov eax [esp+44h+var_2C] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_40] eax +
call sub_40A880  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_44] edx +
call strlen  +
mov [esp+44h+var_28] eax +
jmp loc_40AA2A  +
mov [esp+44h+var_30] eax +
jmp loc_40AACA  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea ecx [ebx+eax] +
mov eax [esi+1Ch] +
test eax eax +
jle loc_40AB70  +
add esp 14h +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
jmp sub_40A940  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] ecx +
call sub_40A880  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edi [ebx+18h] +
mov esi [ebx+1Ch] +
mov dword ptr [ebx+18h] 1 +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ebx +
call sub_40AB90  +
mov [esp+10h+var_10] ebx +
call sub_40BEC0  +
mov [ebx+18h] edi +
mov [ebx+1Ch] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_24] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+3Ch+var_18] eax +
lea eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] eax +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_40BF70  +
add esp 3Ch +
retn   +
***
lea eax [esp+38h+arg_8] +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_14] eax +
lea eax [esp+38h+var_20] +
mov [esp+38h+var_18] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_1C] eax +
lea eax [esp+38h+var_1C] +
mov [esp+38h+var_34] eax +
call sub_40AB90  +
mov [esp+38h+var_38] ebx +
call sub_40BEC0  +
add esp 38h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_40C076  +
mov dword ptr [esp+4] 20h +
mov [esp] ebx +
call sub_40A6D0  +
mov dword ptr [ebx+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_40A680  +
mov [esp+18h+var_18] ebx +
call sub_40A370  +
mov byte ptr [ebx+25h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
jmp loc_40C0B0  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esp+24h] +
add [esi+14h] eax +
mov [esp] esi +
call sub_40A680  +
mov edi [esi+14h] +
test edi edi +
jle loc_40C0E9  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] esi +
call sub_40A6D0  +
cmp ebx edi +
jnz loc_40C0D2  +
mov byte ptr [esi+25h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movsx eax byte ptr [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40A6D0  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] 20h +
add esp 18h +
pop ebx  +
jmp sub_40A6D0  +
***
push ebp  +
xor ebp ebp +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov eax [esp+50h] +
mov [esp] eax +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_40C174  +
jmp loc_40C1FF  +
mov edx [esp+2Ch] +
cmp edx 1Fh +
jbe loc_40C18B  +
sub edx 7Fh +
cmp edx 20h +
jbe loc_40C18B  +
cmp eax 1 +
cmovnz edi ebp +
add ebx eax +
cmp esi ebx +
jbe loc_40C1F0  +
mov eax [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add eax ebx +
call loc_409FA0  +
test eax eax +
jnz loc_40C157  +
lea eax ds:1[esi*4] +
mov [esp] eax +
call off_45600C  +
mov ebx [esp+50h] +
add esi ebx +
mov edi eax +
mov ebp eax +
jmp loc_40C1B4  +
add ebx 1 +
add ebp 1 +
mov [ebp-1] al +
cmp ebx esi +
jz loc_40C1DD  +
movzx eax byte ptr [ebx] +
lea edx [eax-20h] +
cmp dl 5Eh +
jbe loc_40C1A7  +
mov [esp] ebp +
add ebx 1 +
add ebp 4 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a03o_0 +
call sub_450970  +
cmp ebx esi +
jnz loc_40C1B4  +
mov byte ptr [ebp+0] 0 +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
test al al +
jnz loc_40C1FF  +
cmp ds:byte_46B1C0 0 +
jz loc_40C210  +
mov eax [esp+50h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esi+esi*4] +
xor ebx ebx +
lea eax [eax+eax+1] +
mov [esp] eax +
call off_45600C  +
mov [esp+1Ch] eax +
mov ebp eax +
jmp loc_40C23F  +
movzx eax byte ptr [edi] +
add ebx edx +
add ebp 1 +
mov [ebp-1] al +
cmp esi ebx +
jbe loc_40C284  +
mov edi [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add edi ebx +
mov eax edi +
call loc_409FA0  +
cmp eax 1 +
mov edx eax +
jz loc_40C230  +
mov [esp+18h] eax +
mov eax [esp+2Ch] +
mov [esp] ebp +
add ebp 0Ah +
mov dword ptr [esp+4] offset aU08x +
mov [esp+8] eax +
call sub_450970  +
mov edx [esp+18h] +
add ebx edx +
cmp esi ebx +
ja loc_40C23F  +
mov byte ptr [ebp+0] 0 +
mov eax [esp+1Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 0 +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
jz loc_40C2F8  +
mov edx off_456020 +
test edx edx +
jz loc_40C2F8  +
mov ebx offset off_456020 +
jmp loc_40C2D9  +
add ebx 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_40C300  +
movzx eax byte ptr [ebx+8] +
cmp eax edi +
jnz loc_40C2D0  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call memcmp  +
test eax eax +
jnz loc_40C2D0  +
mov eax [ebx+4] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax offset unk_45CF80 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp [esp+arg_0] 0 +
mov edx offset unk_45CF80 +
mov eax offset aMK +
cmovz eax edx +
retn   +
***
retn   +
***
mov eax [esp+4] +
sub eax [esp+8] +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_40C374  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call sub_4406E0  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov eax [esp+14h+arg_0] +
lea esi [eax+eax+2] +
mov eax [ecx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_435F50  +
mov [ebx+0Ch] esi +
mov [ebx+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [esp+8] offset sub_40C350 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset strcmp +
mov byte ptr [ecx] 1 +
call sub_4405F0  +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
mov eax [esp+2Ch+arg_4] +
jnz loc_40C3F2  +
add esp 2Ch +
retn 8  +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_18] al +
lea eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_10] eax +
mov eax [ecx+4] +
mov [esp+2Ch+var_28] offset sub_453030 +
mov [esp+2Ch+var_1C] edx +
lea edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] offset sub_452FA0 +
call sub_440A80  +
add esp 2Ch +
retn 8  +
***
sub esp 1Ch +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_40C505  +
mov [esp+28h+var_28] ebx +
mov esi ecx +
call sub_40C430  +
sub esp 4 +
test eax eax +
jz loc_40C4B0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 0Ch +
call loc_4543A0  +
mov [eax] ebx +
mov edi eax +
mov [esp+28h+var_20] offset sub_40CD70 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] offset loc_40C340 +
call sub_4405F0  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov [edi+4] eax +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_4407D0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_20] offset aGet_or_insert_ +
mov [esp+28h+var_24] 169h +
mov [esp+28h+var_28] offset a____GccGccEdit +
call sub_405910  +
nop   +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_3C] offset sub_40CD70 +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_44] offset loc_40C340 +
mov [ecx] eax +
call sub_4405F0  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 9 +
mov ebx [ebp+arg_4] +
mov [esp+48h+var_44] offset aDiffHunk +
mov edi [ebp+arg_8] +
movzx eax byte ptr [eax+27h] +
sub edi ebx +
add edi 1 +
mov [esp+48h+var_48] eax +
call sub_40C2A0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] offset a@@IIII@@ +
mov [esp+48h+var_48] eax +
call sub_40C000  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C310  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
cmp [ebp+arg_8] ebx +
jl loc_40C875  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_440940  +
test eax eax +
jz loc_40C831  +
mov edx [eax+4] +
test edx edx +
jz loc_40C831  +
mov edi ebx +
jmp loc_40C68E  +
mov eax [eax+4] +
test eax eax +
jz loc_40C6A1  +
add edi 1 +
mov eax [esi+4] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call sub_440940  +
test eax eax +
jnz loc_40C684  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffDelete +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C2A0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
cmp edi ebx +
jle loc_40C7E0  +
mov [ebp+arg_4] ebx +
lea esi [esi+0] +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
call sub_403340  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] 2Dh +
mov [esp+48h+var_3C] ecx +
mov ecx esi +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40C570  +
sub esp 10h +
cmp ebx edi +
jnz loc_40C6E0  +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C310  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C2A0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov [ebp+var_2C] edi +
mov edi [ebp+arg_0] +
jmp loc_40C7AC  +
mov eax [eax+4] +
test eax eax +
jz loc_40C7BF  +
mov edx [eax+8] +
mov ecx esi +
add ebx 1 +
mov eax [eax+4] +
mov [esp+48h+var_44] 2Bh +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
call sub_40C570  +
sub esp 10h +
cmp ebx [ebp+var_2C] +
jz loc_40C637  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_440940  +
test eax eax +
jnz loc_40C776  +
mov [esp+48h+var_40] offset aPrint_diff_hun +
mov [esp+48h+var_44] 250h +
mov [esp+48h+var_48] offset a____GccGccEdit +
call sub_405910  +
nop   +
lea esi [esi+0] +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C310  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C2A0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
jmp loc_40C637  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_48] eax +
call sub_403340  +
mov edx [ebp+var_1C] +
mov ecx esi +
mov [esp+48h+var_44] 20h +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40C570  +
sub esp 10h +
cmp [ebp+arg_8] ebx +
jge loc_40C65E  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
sub esp 1Ch +
mov eax [ecx+4] +
mov edx [esp+20h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_440940  +
test eax eax +
jz loc_40C8A3  +
mov eax [eax+4] +
add esp 1Ch +
retn 4  +
***
xor eax eax +
jmp loc_40C89D  +
***
push ebx  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 3Ch +
mov esi [ebp+arg_0] +
lea eax [ebp+var_1E+1] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] ecx +
call sub_40C8B0  +
sub esp 4 +
test eax eax +
mov [ebp+var_2C] eax +
jg loc_40C993  +
jmp loc_40C9F2  +
mov eax [eax+4] +
test eax eax +
jz loc_40C9A9  +
mov eax [eax+4] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] eax +
call sub_40AB40  +
cmp [ebp+var_2C] ebx +
jle loc_40C98B  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
call sub_40A6D0  +
add ebx 1 +
cmp [ebp+var_2C] ebx +
jl loc_40C9F2  +
mov eax [ebp+var_30] +
mov eax [eax+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_440940  +
test eax eax +
jnz loc_40C960  +
mov eax [ebp+var_30] +
lea ecx [ebp+var_1E+2] +
mov eax [eax] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_403340  +
test eax eax +
jz loc_40CA1D  +
mov edx [ebp+var_1E+2] +
xor edi edi +
test edx edx +
jle loc_40C976  +
mov [ebp+var_34] ebx +
mov ebx edi +
mov edi eax +
movsx edx byte ptr [edi+ebx] +
add ebx 1 +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edx +
call sub_40A6D0  +
cmp [ebp+var_1E+2] ebx +
jg loc_40C9D5  +
mov ebx [ebp+var_34] +
jmp loc_40C976  +
cmp byte ptr [ebp+var_1E+1] 0 +
mov eax 1 +
jnz loc_40CA13  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
mov [ebp+var_2C] eax +
call sub_40A6D0  +
mov eax [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
cmp [ebp+arg_4] 0 +
jnz loc_40CB0C  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_4409A0  +
test eax eax +
jz loc_40CB9D  +
mov esi [eax+4] +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_40C8B0  +
sub esp 4 +
test esi esi +
mov [ebp+var_30] eax +
jz loc_40CB02  +
mov edx [esi] +
mov ecx 1 +
lea eax [edx-3] +
test eax eax +
cmovg ecx eax +
mov [ebp+var_2C] ecx +
jmp loc_40CAA7  +
mov eax [eax+4] +
test eax eax +
jz loc_40CABA  +
mov edi [esi] +
mov edx [eax] +
lea ecx [edi+3] +
lea edi [edx-3] +
cmp ecx edi +
jl loc_40CABF  +
mov esi eax +
mov eax [ebx+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_440A20  +
test eax eax +
jnz loc_40CA90  +
mov eax [esi] +
lea ecx [eax+3] +
mov eax [ebp+var_30] +
cmp ecx eax +
cmovg ecx eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] ecx +
mov ecx ebx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40C5D0  +
mov edx [esi] +
mov eax [ebx+4] +
sub esp 0Ch +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_440A20  +
test eax eax +
jz loc_40CB02  +
mov esi [eax+4] +
test esi esi +
jnz loc_40CA76  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Dh +
mov [esp+48h+var_44] offset aDiffFilename +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C2A0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40C000  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_0 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40C000  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_40C310  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_40AB40  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_4409A0  +
test eax eax +
jnz loc_40CA58  +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_40C8B0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebx  +
push ebx  +
sub esp 14h +
mov eax [ecx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+10h] +
test eax eax +
jz loc_40CCA4  +
mov edx [eax+4] +
test edx edx +
jz loc_40CCB0  +
xor edx edx +
xor ebx ebx +
jmp loc_40CC8B  +
cmp ebx [eax+4] +
jnb loc_40CCB0  +
mov ecx [eax+edx*4+8] +
test ecx ecx +
jz loc_40CC9B  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
add ebx 1 +
test eax eax +
mov edx ebx +
jnz loc_40CC86  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_40CCD0  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+10h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [ecx+4] +
mov ebx [ebp+arg_0] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] ebx +
call sub_440940  +
test eax eax +
jz loc_40CD12  +
mov eax [eax+4] +
test eax eax +
jz loc_40CD12  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 14h +
call loc_4543A0  +
mov [esp+28h+var_24] ebx +
mov edi eax +
mov eax [esi] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_40CBC0  +
mov eax [edi+4] +
sub esp 8 +
test eax eax +
jz loc_40CD51  +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_4407D0  +
mov eax edi +
jmp loc_40CD08  +
mov ecx edi +
call sub_40CC60  +
mov [esp+28h+var_28] edi +
call sub_4542F0  +
xor eax eax +
jmp loc_40CD08  +
***
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_40CD90  +
mov ecx ebx +
call sub_40CC60  +
mov [esp+8+arg_0] ebx +
add esp 8 +
pop ebx  +
jmp sub_4542F0  +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov edx [ecx+10h] +
mov eax [ebp+arg_0] +
test edx edx +
jz loc_40CDE3  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_40CDE3  +
xor ecx ecx +
xor ebx ebx +
jmp loc_40CDC6  +
cmp ebx [edx+4] +
jnb loc_40CDE3  +
mov ecx [edx+ecx*4+8] +
add ebx 1 +
mov edx [ecx] +
mov edx [edx+8] +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [esi+10h] +
mov ecx ebx +
sub esp 4 +
test edx edx +
jnz loc_40CDC1  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_440940  +
test eax eax +
jz loc_40CE25  +
mov ecx [eax+4] +
mov eax [ebp+arg_4] +
test ecx ecx +
jz locret_40CE21  +
mov [esp+18h+var_18] eax +
call sub_40CDA0  +
sub esp 4 +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_40C430  +
mov ecx eax +
sub esp 4 +
mov eax [ebp+10h] +
test ecx ecx +
jz locret_40CE5F  +
mov [esp+4] eax +
mov eax [ebp+0Ch] +
mov [esp] eax +
call sub_40CDF0  +
sub esp 8 +
leave   +
retn 0Ch  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_40CDA0  +
mov esi eax +
sub esp 4 +
sub esi 1 +
mov edi eax +
js loc_40D09C  +
mov eax [ebx+8] +
cmp esi eax +
jg loc_40CFE1  +
mov edx [ebp+arg_8] +
add edx eax +
cmp edx [ebx+0Ch] +
mov [ebp+var_1C] edx +
jge loc_40CFF0  +
mov edx [ebx+4] +
lea ecx [edx+esi] +
add eax edx +
cmp ecx eax +
ja loc_40D0B8  +
sub eax ecx +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_8] +
mov [esp+38h+var_34] ecx +
add eax esi +
add eax edx +
mov [esp+38h+var_38] eax +
call memmove  +
mov eax [ebp+arg_8] +
add esi [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_4] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebp+var_1C] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_40D0D4  +
mov eax [ebx+4] +
mov ecx [ebp+var_1C] +
mov byte ptr [eax+ecx] 0 +
mov [esp+38h+var_38] 0Ch +
call loc_4543A0  +
mov [eax+4] edi +
mov edi [ebx+10h] +
mov esi eax +
mov dword ptr [eax] offset off_46A188 +
mov eax [ebp+arg_8] +
test edi edi +
mov [esi+8] eax +
jz loc_40CF4C  +
mov edx [edi] +
and edx 7FFFFFFFh +
cmp edx [edi+4] +
jnz loc_40CFC5  +
cmp byte ptr [edi+3] 0 +
js loc_40D005  +
mov eax [ebx+10h] +
test eax eax +
jz loc_40D0E2  +
mov edi [eax+4] +
lea edx [edi+1] +
mov [esp+38h+var_34] edx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_406F10  +
mov ecx eax +
lea edi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_40D0EF  +
mov edx [eax+4] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_435F50  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov edi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] edx +
and ecx 80000000h +
or ecx eax +
mov [edi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [edi+3] cl +
jmp loc_40CFC8  +
mov edx [edi+4] +
lea eax [edx+1] +
mov [edi+4] eax +
mov eax 1 +
mov [edi+edx*4+8] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+38h+var_38] edx +
mov ecx ebx +
call sub_40C380  +
mov eax [ebx+8] +
sub esp 4 +
jmp loc_40CEB2  +
mov dword ptr [ebx+10h] 0 +
lea eax [edx+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_435F50  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_40D0D9  +
lea ecx ds:0[edx*4] +
add eax 8 +
add edi 8 +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov edi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [edi+4] edx +
jmp loc_40CFC8  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2E6h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2EFh +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
call sub_455C80  +
mov edi eax +
xor edx edx +
jmp loc_40CFC8  +
mov byte ptr [ebp+var_1C] 0 +
xor edx edx +
mov al 1 +
jmp loc_40D013  +
xor edx edx +
jmp loc_40CF87  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_40CCE0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_40D138  +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40CE70  +
sub esp 0Ch +
leave   +
retn 10h  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_2C] +
mov edx [ebx+4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_403540  +
mov esi [ebp+var_24] +
test esi esi +
jnz loc_40D173  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov eax [ebp+var_2C] +
mov ecx edi +
mov [esp+48h+var_48] eax +
call sub_40C480  +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_40D167  +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_40] edx +
mov edx [ebp+var_28] +
mov [esp+48h+var_3C] ecx +
mov ecx eax +
mov [esp+48h+var_48] edx +
call sub_40D100  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_40CDA0  +
mov ecx ebx +
mov esi eax +
mov eax [ebp+arg_4] +
sub esp 4 +
mov [esp+38h+var_38] eax +
call sub_40CDA0  +
mov edx esi +
sub esp 4 +
sub edx 1 +
mov edi eax +
mov [ebp+var_1C] edx +
lea eax [eax-1] +
js loc_40D44B  +
test eax eax +
js loc_40D467  +
cmp esi edi +
jg loc_40D386  +
mov edx [ebx+8] +
cmp [ebp+var_1C] edx +
jge loc_40D386  +
cmp eax edx +
jge loc_40D386  +
mov ecx [ebp+arg_C] +
add ecx edx +
mov [ebp+var_20] ecx +
mov ecx eax +
sub ecx [ebp+var_1C] +
add ecx 1 +
sub [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
cmp ecx [ebx+0Ch] +
jge loc_40D392  +
mov ecx [ebx+4] +
lea eax [ecx+eax+1] +
add edx ecx +
cmp eax edx +
ja loc_40D488  +
sub edx eax +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_1C] +
add eax [ebp+arg_C] +
mov [esp+38h+var_30] edx +
add ecx eax +
mov [esp+38h+var_38] ecx +
call memmove  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_1C] +
add eax [ebx+4] +
mov [esp+38h+var_30] edx +
mov edx [ebp+arg_8] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call memcpy  +
mov eax [ebp+var_20] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_40D483  +
mov edx [ebp+var_20] +
mov eax [ebx+4] +
mov byte ptr [eax+edx] 0 +
mov [esp+38h+var_38] 10h +
call loc_4543A0  +
mov [eax+8] edi +
not edi  +
mov edx eax +
mov [eax+4] esi +
add esi edi +
add esi [ebp+arg_C] +
mov dword ptr [eax] offset off_46A1E8 +
mov [eax+0Ch] esi +
mov esi [ebx+10h] +
test esi esi +
jz loc_40D3B0  +
mov edi [esi] +
and edi 7FFFFFFFh +
cmp edi [esi+4] +
jnz loc_40D446  +
cmp byte ptr [esi+3] 0 +
jns loc_40D3B0  +
mov dword ptr [ebx+10h] 0 +
lea eax [edi+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_435F50  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_40D4A4  +
add eax 8 +
add esi 8 +
lea ecx ds:0[edi*4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov esi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [esi+4] edi +
jmp loc_40D42D  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+38h+var_38] ecx +
mov ecx ebx +
mov [ebp+var_24] eax +
call sub_40C380  +
mov edx [ebx+8] +
mov eax [ebp+var_24] +
sub esp 4 +
jmp loc_40D241  +
mov eax [ebx+10h] +
test eax eax +
jz loc_40D4B1  +
mov edi [eax+4] +
mov [ebp+var_1C] edx +
lea ecx [edi+1] +
mov [esp+38h+var_34] ecx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_406F10  +
mov edx [ebp+var_1C] +
mov ecx eax +
lea esi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_40D4AA  +
mov edi [eax+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_435F50  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov esi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] edi +
and ecx 80000000h +
or ecx eax +
mov [esi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [esi+3] cl +
lea eax [edi+1] +
mov [esi+4] eax +
mov eax 1 +
mov [esi+edi*4+8] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov edi [esi+4] +
jmp loc_40D42D  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 318h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 319h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
call sub_455C80  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 329h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
mov esi eax +
xor edi edi +
jmp loc_40D42D  +
xor edi edi +
jmp loc_40D3F1  +
mov byte ptr [ebp+var_1C] 0 +
xor edi edi +
mov al 1 +
jmp loc_40D2F9  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_40CCE0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_40D4FF  +
mov eax [ebp+arg_10] +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40D1C0  +
sub esp 10h +
leave   +
retn 14h  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [ebp+arg_0] +
mov [ebp+var_54] ecx +
lea eax [ebp+var_40] +
mov ecx [ebx+4] +
mov edi [ebx+8] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ecx +
call sub_403540  +
mov eax [ebp+var_3C] +
mov [esp+68h+var_64] edi +
mov esi [ebp+var_40] +
mov [ebp+var_4C] eax +
mov eax [ebp+var_38] +
mov [ebp+var_50] eax +
lea eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call sub_403540  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_24] +
cmp eax esi +
jz loc_40D568  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov esi [ebp+var_28] +
cmp esi [ebp+var_4C] +
jnz loc_40D55C  +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_40D55C  +
test edx edx +
jz loc_40D55C  +
mov edi [ebp+var_54] +
mov [esp+68h+var_68] eax +
mov [ebp+var_4C] edx +
mov ecx edi +
call sub_40C480  +
mov edx [ebp+var_4C] +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_40D55C  +
mov ecx [ebx+0Ch] +
mov ebx [ebx+10h] +
mov [esp+68h+var_60] edx +
mov edx [ebp+var_50] +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] ecx +
mov ecx eax +
mov [esp+68h+var_58] ebx +
mov [esp+68h+var_64] edx +
call sub_40D4C0  +
sub esp 14h +
jmp loc_40D55E  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
jz loc_40D636  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+58h] 0 +
jnz loc_40D655  +
add eax 44h +
xor ebx ebx +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov edi 0FFFFFFF8h +
mov eax [eax+44h] +
test eax eax +
jz loc_40D636  +
mov [ebp+var_1C] ecx +
cmp ebx 1 +
jle loc_40D680  +
mov edx [ebp+arg_0] +
mov eax [edx+54h] +
add eax edi +
mov esi [eax] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40D640  +
cmp eax 1 +
jnz loc_40D662  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_40D510  +
sub esp 4 +
test al al +
jz loc_40D652  +
mov eax [ebp+arg_0] +
add ebx 1 +
add edi 4 +
cmp ebx [eax+44h] +
jb loc_40D5F3  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_40D140  +
sub esp 4 +
test al al +
jnz loc_40D628  +
mov esi [ebp+var_1C] +
mov byte ptr [esi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+38h+var_30] offset aAdd_fixits +
mov [esp+38h+var_34] 0F3h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_405910  +
nop   +
mov eax [ebp+var_20] +
lea eax [eax+ebx*4+4] +
jmp loc_40D604  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp [ecx+0Ch] eax +
jle locret_40D6A0  +
leave   +
retn 4  +
***
leave   +
jmp sub_40C380  +
***
mov edx [ecx+4] +
mov byte ptr [edx+eax] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 40h +
lea ebx [ebp+var_30] +
mov ecx ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 0 +
call sub_40A570  +
mov ecx esi +
xor esi esi +
sub esp 8 +
mov [esp+48h+var_48] ebx +
call sub_40C930  +
sub esp 4 +
test al al +
jz loc_40D78B  +
mov [esp+48h+var_48] ebx +
call sub_40A600  +
mov [esp+48h+var_48] eax +
call sub_440E70  +
mov esi eax +
mov ecx ebx +
call sub_40A260  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp byte ptr [ecx] 0 +
jz locret_40D7C3  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_40C480  +
sub esp 4 +
mov ecx eax +
call sub_40D740  +
leave   +
retn 4  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_8] 1 +
cmovz eax [esp+arg_0] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h] +
mov [esp] eax +
call strlen  +
mov esi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_435ED0  +
mov [esp+8] esi +
mov dword ptr [esp+4] 20h +
mov ebx eax +
mov [esp] eax +
call memset  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ecx] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [ecx] +
test eax eax +
jnz loc_40D842  +
jmp loc_40D852  +
mov eax ebx +
mov ebx [eax] +
mov [esp] eax +
call free  +
test ebx ebx +
mov [esi] ebx +
jnz loc_40D840  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
cmp eax 10000h +
jz loc_40D874  +
mov [esp+4] eax +
jmp sub_435ED0  +
***
mov eax ds:dword_46B1C8 +
test eax eax +
jz loc_40D886  +
mov edx [eax] +
mov ds:dword_46B1C8 edx +
retn   +
***
mov dword ptr [esp+4] 10000h +
jmp sub_435ED0  +
***
mov eax [esp+4] +
mov edx [eax] +
sub edx eax +
cmp edx 10000h +
jz loc_40D8C0  +
mov [esp+4] eax +
jmp free  +
***
mov edx ds:dword_46B1C8 +
mov [eax] edx +
mov ds:dword_46B1C8 eax +
retn   +
***
xor eax eax +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_40D8F3  +
pop ebx  +
retn   +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jnz loc_40D8F1  +
mov ebx [edx+8] +
cmp [ecx+8] ebx +
jnz loc_40D8F1  +
mov eax [edx+0Ch] +
cmp [ecx+0Ch] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
jmp loc_40D920  +
mov edx [esp+8] +
mov eax [esp+4] +
mov edx [edx] +
add [eax] edx +
mov eax 1 +
retn   +
***
retn 10h  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
cmp edx 4 +
setz dl  +
jnz loc_40D978  +
mov eax [eax+18h] +
cmp [ebx+14h] eax +
jz loc_40D9A0  +
mov edx [ebx+10h] +
lea ecx [eax+eax*2] +
lea esi [edx+ecx*8] +
add ebx 18h +
jmp loc_40D988  +
mov eax [eax+8] +
cmp [ebx+4] eax +
jz loc_40D9A0  +
imul esi eax +
add esi [ebx] +
add ebx 8 +
add eax 1 +
mov [ebx] eax +
mov eax edi +
mov [esi+4] al +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi [ebx+34h] +
mov eax offset sub_435F50 +
test esi esi +
cmovz esi eax +
test dl dl +
mov eax [ebx+38h] +
jz loc_40DA18  +
mov edx [ebx+14h] +
lea edx [edx+edx*2+180h] +
shl edx 4 +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [ebx+10h] +
shr edx 4 +
mov [ebx+14h] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call esi  +
mov edx [ebx+18h] +
lea ecx [edx+edx*2] +
mov [ebx+10h] eax +
lea esi [eax+ecx*8] +
mov eax [ebx+14h] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+18h] +
jmp loc_40D973  +
mov ecx [ebx+4] +
lea edx [ecx+80h] +
imul edx edx +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 24924925h +
mov ecx [ebx] +
shr eax 2 +
mul  edx +
mov [ebx+4] edx +
imul edx edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] edx +
call esi  +
mov edx [ebx+8] +
imul esi edx +
mov [ebx] eax +
add esi eax +
mov eax [ebx+4] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
imul eax eax +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+8] +
jmp loc_40D985  +
***
sub esp 3Ch +
mov edx [ecx+4] +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_403580  +
mov edx [esp+3Ch+arg_0] +
xor eax eax +
cmp [esp+3Ch+var_20] edx +
jz loc_40DAA8  +
add esp 3Ch +
retn 8  +
mov eax [esp+3Ch+arg_4] +
cmp [esp+3Ch+var_1C] eax +
setz al  +
add esp 3Ch +
retn 8  +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_46A148 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_46A0E8 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_46A148 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_46A0E8 +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_46A1A8 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_46A0E8 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_46A1A8 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_46A0E8 +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx+3Ch] +
mov [esp] eax +
call sub_436630  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 14h +
mov esi [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_40D8E0 +
mov dword ptr [esp+4] offset loc_40D8D0 +
mov dword ptr [esp] 64h +
call sub_436590  +
mov edx [esi+40h] +
test edx edx +
mov [esi+3Ch] eax +
jnz loc_40DBE3  +
jmp loc_40DC07  +
mov eax [esi+3Ch] +
mov edx ebx +
add ebx 1 +
mov dword ptr [esp+8] 1 +
shl edx 4 +
add edx [esi+48h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_436AE0  +
cmp [esi+40h] ebx +
ja loc_40DBE0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax] +
retn   +
***
jmp loc_40DC50  +
push edi  +
mov edx 60h +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test bl 1 +
mov edi ebx +
jnz loc_40DCD0  +
test edi 2 +
jnz loc_40DCE0  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_40DC84  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_40DC8C  +
mov byte ptr [edi] 0 +
mov dword ptr [ebx+28h] 1 +
mov dword ptr [ebx+2Ch] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_40D8E0 +
mov dword ptr [esp+4] offset loc_40D8D0 +
mov dword ptr [esp] 64h +
call sub_436590  +
mov [ebx+3Ch] eax +
mov eax [esp+24h] +
mov [ebx+4Ch] eax +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
***
lea edi [ebx+1] +
mov dl 5Fh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_40DC6D  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40DC6D  +
***
jmp loc_40DD00  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+8] +
lea ebx [eax-1] +
imul ebx ebx +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
js loc_40DD50  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aLineMap_cFileS +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [ebx+10h] +
xor ebx ebx +
cmp eax 0FFFFFFFFh +
jz loc_40DD14  +
imul ebx eax +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
jns loc_40DD1B  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+28h] +
cmp eax 5FFFFFFFh +
lea edi [eax+1] +
ja loc_40DD91  +
mov ecx [ebx+54h] +
mov edx 1 +
shl edx cl +
test ecx ecx +
lea edi [edx+eax] +
jnz loc_40DEA0  +
cmp esi 1 +
jz loc_40DEAD  +
mov edx esi +
mov eax ebx +
call sub_40D950  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_40DDB6  +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
jz loc_40DE35  +
cmp esi 3 +
jz loc_40DF10  +
cmp esi 1 +
jz loc_40DE4F  +
movzx eax byte ptr [esp+1Ch+arg_8] +
mov [ebp+0] edi +
mov [ebp+14h] al +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_10] +
mov [ebp+0Ch] eax +
mov eax [ebx+8] +
sub eax 1 +
test esi esi +
mov [ebx+0Ch] eax +
mov byte ptr [ebp+18h] 0 +
mov byte ptr [ebp+19h] 0 +
mov [ebx+28h] edi +
mov [ebx+2Ch] edi +
mov dword ptr [ebx+30h] 0 +
jnz loc_40DEF7  +
mov esi [ebx+20h] +
test esi esi +
jz loc_40DF96  +
mov eax [ebx+8] +
sub eax 2 +
cmp byte ptr [ebx+24h] 0 +
mov [ebp+10h] eax +
lea eax [esi+1] +
mov [ebx+20h] eax +
jnz loc_40DF20  +
mov eax ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 3 +
jz loc_40DF10  +
cmp esi 1 +
mov [esp+1Ch+arg_C] offset aStdin +
jnz loc_40DDC8  +
mov ecx [ebp-0Ch] +
xor eax eax +
cmp ecx 0FFFFFFFFh +
jz loc_40DE5E  +
imul eax ecx +
add eax [ebx] +
mov edx [esp+1Ch+arg_C] +
test edx edx +
jnz loc_40DDC8  +
mov ecx [eax+8] +
mov [esp+1Ch+arg_C] ecx +
mov ecx [eax+1Ch] +
mov [esp+1Ch+arg_10] ecx +
mov ecx [eax] +
sub [esp+1Ch+arg_10] ecx +
movzx ecx byte ptr [eax+18h] +
shr [esp+1Ch+arg_10] cl +
mov ecx [eax+0Ch] +
movzx eax byte ptr [eax+14h] +
add [esp+1Ch+arg_10] ecx +
mov [esp+1Ch+arg_8] eax +
jmp loc_40DDC8  +
neg edx  +
and edi edx +
cmp esi 1 +
jnz loc_40DD9A  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov ebp [eax+10h] +
test ebp ebp +
jns loc_40DD9A  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jz loc_40DFB1  +
mov edx 1 +
mov eax ebx +
call sub_40D950  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
mov eax offset aStdin +
cmovnz eax [esp+1Ch+arg_C] +
mov [esp+1Ch+arg_C] eax +
jmp loc_40DE4F  +
cmp esi 2 +
jz loc_40DF66  +
cmp esi 1 +
mov eax ebp +
jz loc_40DF76  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 2 +
jmp loc_40DDC8  +
mov eax ds:_iob +
mov [esp+1Ch+var_1C] 2Eh +
add eax 40h +
mov [esp+1Ch+var_18] eax +
call putc  +
sub esi 1 +
jnz loc_40DF20  +
mov eax [ebp+8] +
mov [esp+1Ch+var_18] offset aS_1 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_450940  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-0Ch] +
mov [ebp+10h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
mov ecx [ebp-0Ch] +
cmp ecx 0FFFFFFFFh +
jz loc_40DF89  +
imul eax ecx +
add eax [ebx] +
mov eax [eax+10h] +
mov [ebp+10h] eax +
mov eax ebp +
jmp loc_40DF03  +
cmp byte ptr [ebx+24h] 0 +
mov dword ptr [ebp+10h] 0FFFFFFFFh +
mov dword ptr [ebx+20h] 1 +
jnz loc_40DF3D  +
mov eax ebp +
jmp loc_40DE2D  +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
jmp loc_40DF03  +
***
mov eax [esp+4] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [ebx+34h] +
test esi esi +
cmovz esi eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_40E074  +
mov ebp 7FFFFFFFh +
xor eax eax +
sub ebp [esp+1Ch+arg_C] +
mov edx 7FFFFFFFh +
cmp ebp [ebx+2Ch] +
jbe loc_40E06C  +
xor eax eax +
cmp edx ebp +
jb loc_40E06C  +
mov edx 4 +
mov eax ebx +
call sub_40D950  +
mov [eax] ebp +
mov edi eax +
mov eax [esp+1Ch+arg_4] +
mov [edi+8] eax +
mov eax [esp+1Ch+arg_C] +
mov [edi+0Ch] eax +
lea ebp ds:0[eax*4] +
shl eax 3 +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call esi  +
mov ecx [esp+1Ch+arg_8] +
mov [edi+14h] ecx +
mov [edi+10h] eax +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [ebx+18h] +
sub eax 1 +
mov [ebx+1Ch] eax +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10h] +
lea eax [eax+eax*2-3] +
lea eax [edx+eax*8] +
mov edx [eax] +
xor eax eax +
mov ebp edx +
sub ebp [esp+1Ch+arg_C] +
cmp [ebx+2Ch] ebp +
jb loc_40E008  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ebx [esp+arg_8] +
mov ecx [edx+10h] +
mov [ecx+eax*8] ebx +
mov ebx [esp+arg_C] +
mov ecx [edx+10h] +
mov [ecx+eax*8+4] ebx +
add eax [edx] +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_0] +
mov edx [esp+4Ch+arg_8] +
mov eax [ebx+8] +
mov edi [ebx+28h] +
mov ebp [ebx+2Ch] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov [esp+4Ch+var_28] edi +
mov edi [eax] +
mov esi [eax+0Ch] +
mov ecx edi +
mov [esp+4Ch+var_18] edi +
movzx edi byte ptr [eax+18h] +
mov [esp+4Ch+var_2C] esi +
mov esi ebp +
sub esi ecx +
mov ecx edi +
shr esi cl +
movzx ecx byte ptr [eax+19h] +
add esi [esp+4Ch+var_2C] +
mov [esp+4Ch+var_13] cl +
mov [esp+4Ch+var_20] ecx +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_1C] esi +
sub ecx esi +
mov [esp+4Ch+var_24] ecx +
js loc_40E147  +
cmp ecx 0Ah +
jle loc_40E211  +
imul ecx edi +
cmp ecx 3E8h +
jle loc_40E211  +
cmp edx 1000h +
ja loc_40E15D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40E260  +
cmp [esp+4Ch+var_28] 70000000h +
ja loc_40E251  +
mov [esp+4Ch+var_12] 0 +
xor ebp ebp +
xor esi esi +
mov [esp+4Ch+var_11] 0 +
mov [esp+4Ch+var_10] 0 +
mov edx [esp+4Ch+var_24] +
test edx edx +
js loc_40E197  +
mov edx [esp+4Ch+var_1C] +
cmp [esp+4Ch+var_2C] edx +
jz loc_40E2C0  +
mov edx [eax+8] +
mov edi [esp+4Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_3C] edi +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] ebx +
call sub_40DD60  +
mov edi [eax] +
mov ecx [eax+0Ch] +
movzx edx [esp+4Ch+var_11] +
mov [eax+18h] dl +
movzx edx [esp+4Ch+var_12] +
mov [eax+19h] dl +
mov eax [esp+4Ch+arg_4] +
sub eax ecx +
mov ecx ebp +
shl eax cl +
add eax edi +
mov edx [ebx+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40E1F7  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_40E251  +
cmp eax [ebx+28h] +
mov [ebx+2Ch] eax +
jbe loc_40E206  +
mov [ebx+28h] eax +
mov [ebx+30h] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edi +
mov esi 1 +
sub ecx [esp+4Ch+var_20] +
shl esi cl +
cmp esi edx +
jbe loc_40E147  +
cmp ecx 9 +
jle loc_40E234  +
cmp edx 50h +
jbe loc_40E147  +
cmp [esp+4Ch+var_28] 50000000h +
ja loc_40E308  +
mov esi [ebx+30h] +
mov eax [esp+4Ch+var_24] +
mov ecx edi +
shl eax cl +
add eax ebp +
jmp loc_40E1DF  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+4Ch+var_28] 50000000h +
jbe loc_40E2B0  +
mov [esp+4Ch+var_12] 0 +
mov [esp+4Ch+var_10] 0 +
cmp edx 7Fh +
jbe loc_40E360  +
mov ecx 7 +
mov ebp 1 +
lea esi [esi+0] +
add ecx 1 +
mov esi ebp +
shl esi cl +
cmp edx esi +
jnb loc_40E290  +
mov edx [esp+4Ch+var_10] +
lea ebp [ecx+edx] +
mov edx ebp +
mov [esp+4Ch+var_11] dl +
jmp loc_40E181  +
mov esi [ebx+54h] +
mov ecx esi +
mov [esp+4Ch+var_10] esi +
mov [esp+4Ch+var_12] cl +
jmp loc_40E277  +
mov ecx edi +
mov edx 1 +
shl edx cl +
mov ecx [esp+4Ch+var_28] +
sub ecx [esp+4Ch+var_18] +
sub edx 1 +
and edx ecx +
movzx ecx [esp+4Ch+var_13] +
shr edx cl +
mov ecx ebp +
sub ecx [esp+4Ch+var_10] +
shr edx cl +
test edx edx +
jnz loc_40E197  +
mov edi [esp+4Ch+var_20] +
cmp [esp+4Ch+var_10] edi +
jl loc_40E197  +
mov ecx [esp+4Ch+var_2C] +
mov edi [esp+4Ch+var_18] +
jmp loc_40E1C3  +
cmp [esp+4Ch+var_13] 0 +
jnz loc_40E33D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40E242  +
mov ecx [ebx+30h] +
test ecx ecx +
jnz loc_40E15D  +
cmp [esp+4Ch+var_28] 6FFFFFFFh +
ja loc_40E15D  +
xor esi esi +
jmp loc_40E245  +
cmp edx 1000h +
ja loc_40E15D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_40E26A  +
jmp loc_40E15D  +
mov esi 80h +
mov ecx 7 +
jmp loc_40E29B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
cmp [ebx+30h] esi +
mov edx [ebx+2Ch] +
jbe loc_40E3A7  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+19h] +
shl esi cl +
lea eax [edx+esi] +
cmp eax [ebx+28h] +
jb loc_40E3A1  +
mov [ebx+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 1000h +
jbe loc_40E3B7  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp edx 60000000h +
ja loc_40E3AF  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+18h] +
sub edx [eax] +
shr edx cl +
add edx [eax+0Ch] +
lea eax [esi+32h] +
mov [esp+14h+var_C] eax +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ebx +
call sub_40E0D0  +
mov edx eax +
mov eax [ebx+8] +
lea ecx [eax-1] +
mov eax edx +
imul ecx ecx +
add ecx [ebx] +
cmp byte ptr [ecx+18h] 0 +
jz loc_40E3A1  +
mov eax ecx +
jmp loc_40E390  +
***
jmp sub_40E410  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
mov ebx [esp+arg_0] +
movzx ecx byte ptr [edx+18h] +
sub eax [edx+0Ch] +
shl eax cl +
add eax [edx] +
cmp eax 60000000h +
ja loc_40E446  +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi [esp+arg_C] +
shl esi cl +
add eax esi +
mov ecx [ebx+18h] +
mov edx 7FFFFFFFh +
test ecx ecx +
jz loc_40E45E  +
lea edx [ecx+ecx*2-3] +
mov ecx [ebx+10h] +
lea edx [ecx+edx*8] +
mov edx [edx] +
cmp eax edx +
lea ecx [edx-1] +
cmovnb eax ecx +
cmp eax [ebx+28h] +
jbe loc_40E46E  +
mov [ebx+28h] eax +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_40E480  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40E500  +
mov ecx [esi+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40E500  +
shl eax 4 +
mov edx [ecx+eax] +
cmp edx [esi+28h] +
ja loc_40E510  +
cmp edx 1 +
jbe loc_40E5B1  +
test esi esi +
jz loc_40E5B1  +
mov ecx [esi+0Ch] +
mov ebx [esi] +
mov ebp [esi+8] +
imul edi ecx +
add edi ebx +
cmp edx [edi] +
jb loc_40E575  +
lea eax [ecx+1] +
mov [esp+4+var_4] eax +
mov eax edi +
cmp ebp [esp+4+var_4] +
jz loc_40E530  +
cmp edx [edi+1Ch] +
jb loc_40E530  +
mov eax ecx +
mov ecx ebp +
jmp loc_40E591  +
xor eax eax +
test esi esi +
jz loc_40E530  +
cmp [esi+28h] edx +
jnb loc_40E4B9  +
nop   +
lea esi [esi+0] +
mov ecx [esi+1Ch] +
mov edi [esi+10h] +
mov ebx [esi+18h] +
lea eax [ecx+ecx*2] +
lea ebp [edi+eax*8] +
cmp [ebp+0] edx +
ja loc_40E54D  +
test ecx ecx +
mov eax ebp +
jz loc_40E530  +
cmp [ebp-18h] edx +
jbe loc_40E5AA  +
nop   +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx eax +
mov ebx eax +
jnb loc_40E564  +
add eax ecx +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp [edi+ebp*8] edx +
jbe loc_40E538  +
lea ecx [eax+1] +
cmp ebx ecx +
jbe loc_40E564  +
lea eax [ecx+ebx] +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp edx [edi+ebp*8] +
jb loc_40E54A  +
cmp ecx eax +
mov ebx eax +
jb loc_40E53E  +
mov [esi+1Ch] ebx +
lea eax [ebx+ebx*2] +
add esp 4 +
pop ebx  +
lea eax [edi+eax*8] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_40E591  +
lea edi [ecx+eax] +
shr edi 1 +
imul ebp edi +
cmp edx [ebx+ebp] +
cmovb ecx edi +
cmovnb eax edi +
mov edi ecx +
sub edi eax +
cmp edi 1 +
ja loc_40E580  +
mov [esi+0Ch] eax +
imul eax eax +
add esp 4 +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx-1] +
xor ecx ecx +
jmp loc_40E54D  +
xor eax eax +
jmp loc_40E530  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_8] +
mov ebp [esp+3Ch+arg_C] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40E5EA  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov eax [esp+3Ch+arg_10] +
test eax eax +
setz dl  +
test ebx ebx +
jz loc_40E661  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_40E66F  +
cmp ebx edi +
jz loc_40E6D4  +
test dl dl +
jnz loc_40E746  +
mov eax [esp+3Ch+arg_10] +
lea edx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_18] edi +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
mov eax [esi+3Ch] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_436AE0  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_40E6F0  +
mov ecx [esi+48h] +
mov eax edx +
sub eax ecx +
sar eax 4 +
or eax 80000000h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test dl dl +
jnz loc_40E659  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_40E5FF  +
cmp ebx edi +
jnz loc_40E607  +
cmp ebx ebp +
ja loc_40E6D4  +
cmp ebx 1 +
jbe loc_40E6D4  +
cmp ebx 4FFFFFFFh +
ja loc_40E6D4  +
mov eax [esi+18h] +
test eax eax +
jz loc_40E7C1  +
mov ecx [esi+10h] +
lea eax [eax+eax*2-3] +
lea eax [ecx+eax*8] +
mov eax [eax] +
cmp ebx eax +
jnb loc_40E6D4  +
cmp ebp eax +
jnb loc_40E6D4  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] edx +
call sub_40E480  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebp +
sub eax ebx +
shl edx cl +
shr eax cl +
cmp eax edx +
mov edx [esp+3Ch+var_30] +
jnb loc_40E6D4  +
add dword ptr [esi+58h] 1 +
or eax ebx +
jmp loc_40E659  +
cmp ebx ebp +
jnz loc_40E607  +
test dl dl +
jz loc_40E60F  +
mov eax ebx +
jmp loc_40E659  +
mov edi [esi+40h] +
mov eax [esi+44h] +
cmp edi eax +
jb loc_40E750  +
mov edx [esi+34h] +
mov ecx offset sub_435F50 +
mov edi [esi+48h] +
test edx edx +
cmovz edx ecx +
test eax eax +
jnz loc_40E790  +
mov dword ptr [esi+44h] 80h +
mov ax 800h +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call edx  +
mov edx eax +
sub edx edi +
mov [esp+3Ch+var_24] edx +
sar edx 1Fh +
cmp dword ptr [esi+44h] 80h +
mov [esi+48h] eax +
mov [esp+3Ch+var_20] edx +
ja loc_40E79E  +
mov edi [esi+40h] +
jmp loc_40E753  +
add dword ptr [esi+5Ch] 1 +
jmp loc_40E60F  +
mov eax [esi+48h] +
mov edx edi +
add edi 1 +
shl edx 4 +
add eax edx +
mov [ebx] eax +
mov eax [esp+3Ch+var_1C] +
mov ecx [esi+48h] +
mov [esi+40h] edi +
mov [ecx+edx] eax +
mov eax [esp+3Ch+var_18] +
mov [ecx+edx+4] eax +
mov eax [esp+3Ch+var_14] +
mov [ecx+edx+8] eax +
mov eax [esp+3Ch+var_10] +
mov [ecx+edx+0Ch] eax +
mov edx [ebx] +
jmp loc_40E64D  +
lea ecx [eax+eax] +
mov [esi+44h] ecx +
shl eax 5 +
jmp loc_40E71D  +
mov eax [esi+3Ch] +
lea edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset loc_40D920 +
mov [esp+3Ch+var_3C] eax +
call sub_436C40  +
mov eax [esi+48h] +
jmp loc_40E741  +
cmp ebx 7FFFFFFEh +
ja loc_40E6D4  +
mov eax 7FFFFFFFh +
jmp loc_40E69F  +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40E810  +
shl edx 4 +
add edx [eax+48h] +
mov eax [edx+4] +
mov edx [edx+8] +
add esp 8 +
pop ebx  +
retn   +
cmp ebx 1 +
jbe loc_40E860  +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40E82D  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_40E860  +
cmp ebx 50000000h +
ja loc_40E860  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40E480  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebx +
shl edx cl +
sub edx 1 +
and edx ebx +
sub eax edx +
shl edx cl +
add edx eax +
jmp loc_40E804  +
add esp 8 +
mov eax ebx +
mov edx ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40E890  +
add esp 8 +
pop ebx  +
retn   +
mov eax [esp+8+arg_0] +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40E480  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test eax ebx +
setz al  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40E8E0  +
shl edx 4 +
add edx [eax+48h] +
mov ebx [edx] +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_40E8F8  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_40E91A  +
cmp ebx 1 +
jbe loc_40E91A  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_40E480  +
movzx ecx byte ptr [eax+19h] +
mov eax 0FFFFFFFFh +
shl eax cl +
and ebx eax +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
jmp sub_40E930  +
***
push esi  +
mov esi eax +
mov eax edx +
push ebx  +
and eax 7FFFFFFFh +
sub esp 8 +
cmp edx eax +
mov ebx edx +
jz loc_40E95A  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_40E95A  +
cmp byte ptr [eax+4] 4 +
jnz loc_40E96A  +
mov ebx [eax+14h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40E480  +
test eax eax +
jnz loc_40E951  +
test edi edi +
jz loc_40E970  +
mov [edi] eax +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov ebp [ebx+8] +
mov eax [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edx ebp +
and edx 7FFFFFFFh +
mov edi eax +
cmp ebp edx +
mov [esp+2Ch+var_14] ecx +
jz loc_40E9B2  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_40E9C8  +
mov eax edx +
shl eax 4 +
add eax [esi+48h] +
mov edi [eax] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_40E480  +
test eax eax +
mov edx eax +
jz loc_40E9F0  +
cmp byte ptr [eax+4] 4 +
jnz loc_40E9F0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_40E480  +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_40EA0E  +
cmp byte ptr [eax+4] 4 +
jz loc_40E9E0  +
cmp edx eax +
jnz loc_40E9E0  +
mov eax [edx] +
movzx ecx byte ptr [edx+18h] +
sub edi eax +
sub ebp eax +
mov eax ebp +
mov esi edi +
shr eax cl +
shr esi cl +
add eax [edx+0Ch] +
add esi [edx+0Ch] +
cmp eax esi +
jnz loc_40E9E0  +
mov eax 1 +
shl eax cl +
movzx ecx byte ptr [edx+19h] +
sub eax 1 +
and edi eax +
and eax ebp +
shr eax cl +
shr edi cl +
add eax 1 +
cmp edi eax +
jnz loc_40E9E0  +
mov eax [esp+2Ch+var_14] +
mov [ebx+8] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edx [ebx+10h] +
mov esi eax +
mov eax [ebx+0Ch] +
lea edx [esi+edx+1] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_435F50  +
mov edi [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [ebx+0Ch] eax +
add eax [ebx+10h] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add esi [ebx+10h] +
mov [ebx+10h] esi +
mov byte ptr [eax+esi] 0 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_40EAC0  +
cmp byte ptr [eax+4] 4 +
setz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov ecx eax +
and ecx 7FFFFFFFh +
cmp eax ecx +
jz loc_40EAF2  +
mov eax ecx +
mov ecx [esp+arg_0] +
shl eax 4 +
add eax [ecx+48h] +
mov eax [eax] +
sub eax [edx] +
mov edx [edx+10h] +
mov eax [edx+eax*8] +
retn   +
***
mov edx [esp+10h+arg_4] +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] 0 +
mov ecx edx +
and ecx 7FFFFFFFh +
cmp edx ecx +
jz loc_40EB79  +
mov edx [eax+48h] +
shl ecx 4 +
add edx ecx +
mov edx [edx] +
cmp edx 1 +
jbe loc_40EB92  +
lea ecx [esp+10h+var_4] +
call sub_40E930  +
mov eax [esp+10h+var_4] +
mov eax [eax+8] +
add esp 10h +
retn   +
xor eax eax +
jmp loc_40EB8E  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov eax [eax] +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov esi [esp+8+arg_0] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40EBD0  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
cmp ebx 1 +
jbe loc_40EC20  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] esi +
call sub_40E480  +
test eax eax +
jz loc_40EC20  +
cmp byte ptr [eax+4] 4 +
jnz loc_40EC28  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40EBFF  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
mov edx [eax+10h] +
sub ebx [eax] +
mov ebx [edx+ebx*8] +
cmp ebx 1 +
ja loc_40EBD5  +
mov ebx [eax+14h] +
mov [esp+8+var_8] esi +
mov [esp+8+var_4] ebx +
call sub_40E480  +
test eax eax +
jnz loc_40EBE5  +
nop   +
add esp 8 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [eax+14h] +
add esp 8 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+8] +
mov ecx [esp+4] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40EC62  +
shl eax 4 +
add eax [ecx+48h] +
mov edx [eax] +
cmp [ecx+28h] edx +
setb al  +
retn   +
***
xor eax eax +
test ecx ecx +
jnz loc_40EC5B  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov ecx [esp+10h+arg_8] +
mov edi [esp+10h+arg_C] +
mov eax ebx +
mov edx ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40EC9D  +
mov edx eax +
shl edx 4 +
add edx [esi+48h] +
mov edx [edx] +
cmp edx 1 +
jbe loc_40ED13  +
cmp ecx 1 +
jz loc_40ECF4  +
cmp ecx 2 +
jz loc_40ED26  +
test ecx ecx +
nop   +
jz loc_40ED55  +
mov [esp+10h+var_8] offset aLinemap_resolv +
mov [esp+10h+var_C] 631h +
mov [esp+10h+var_10] offset a____GccLibcppL +
call sub_405910  +
cmp byte ptr [eax+4] 4 +
jnz loc_40ED04  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40ECEC  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40E480  +
test eax eax +
jnz loc_40ECD2  +
test edi edi +
jz loc_40ED0A  +
mov [edi] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_40ED0A  +
mov dword ptr [edi] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ebx eax +
jz loc_40ED43  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_40ED43  +
cmp byte ptr [eax+4] 4 +
jnz loc_40ED04  +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8+4] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_40E480  +
test eax eax +
jnz loc_40ED34  +
jmp loc_40ED04  +
add esp 10h +
mov ecx edi +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_40E930  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40EEB0  +
mov ecx [ebx+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_40EEB0  +
shl eax 4 +
mov ecx [ecx+eax] +
cmp [ebx+28h] ecx +
mov eax edx +
jb loc_40EDC2  +
cmp edx 1 +
ja loc_40EDD0  +
mov eax edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_40EDC0  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] ebx +
call sub_40EC70  +
mov edx [esp+3Ch+var_10] +
movzx ebp byte ptr [edx+19h] +
mov edi [edx] +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov ecx ebp +
shl eax cl +
mov ecx eax +
mov eax esi +
add ecx esi +
cmp edi ecx +
jnb loc_40EDC2  +
movzx ecx byte ptr [edx+18h] +
sub eax edi +
mov edi eax +
mov [esp+3Ch+arg_0] ebx +
shr edi cl +
mov [esp+3Ch+var_20] edi +
mov edi [edx+0Ch] +
add [esp+3Ch+var_20] edi +
mov edi 1 +
shl edi cl +
mov ecx ebp +
sub edi 1 +
and edi eax +
mov eax [ebx+8] +
shr edi cl +
sub eax 1 +
imul eax eax +
add eax [ebx] +
cmp eax edx +
jz loc_40EEDA  +
nop   +
mov ebx [esp+3Ch+arg_8] +
movzx ebp cl +
shl ebx cl +
mov ecx ebx +
add ecx esi +
cmp ecx [edx+1Ch] +
jnb loc_40EEC0  +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] edx +
movzx ecx byte ptr [edx+18h] +
mov eax esi +
add edi [esp+3Ch+arg_8] +
sub ecx ebp +
mov ebp 1 +
shl ebp cl +
cmp edi ebp +
jnb loc_40EDC2  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] eax +
call sub_40E410  +
cmp eax [ebx+28h] +
mov edi eax +
jbe loc_40EEE9  +
mov eax esi +
jmp loc_40EDC2  +
test ebx ebx +
jz loc_40EDBB  +
mov ecx edx +
jmp loc_40EDB4  +
mov ebx [esp+3Ch+var_20] +
lea ebp [edx+1Ch] +
cmp [edx+28h] ebx +
ja loc_40EEA4  +
movzx ecx byte ptr [edx+35h] +
mov edx ebp +
cmp eax edx +
jnz loc_40EE50  +
mov ebx [esp+3Ch+arg_0] +
movzx ebp cl +
mov edx eax +
mov [esp+3Ch+var_10] eax +
jmp loc_40EE6A  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
call sub_40E480  +
cmp eax [esp+3Ch+var_10] +
jnz loc_40EEA4  +
mov eax edi +
jmp loc_40EDC2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_8] +
mov eax edi +
mov esi edi +
and eax 7FFFFFFFh +
cmp edi eax +
jz loc_40EF38  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax ebp +
mov edx ebp +
and eax 7FFFFFFFh +
cmp ebp eax +
jz loc_40EF4D  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
cmp esi edx +
jz loc_40F150  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_40F0A6  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
xor ecx ecx +
cmp eax [ebx+28h] +
ja loc_40F050  +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_40F08A  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
cmp eax [ebx+28h] +
ja loc_40EFC5  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_40EFA6  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_40EFB9  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
add esp 2Ch +
mov eax edx +
pop ebx  +
sub eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_40EC70  +
mov ecx [esp+2Ch+var_10] +
cmp eax esi +
mov edx eax +
jnz loc_40EF93  +
test cl cl +
jz loc_40EF93  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_40E480  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] eax +
call sub_40E480  +
mov edx [esp+2Ch+var_10] +
test edx edx +
mov esi eax +
jz loc_40F0F7  +
cmp byte ptr [edx+4] 4 +
jnz loc_40F0F7  +
test eax eax +
jz loc_40F106  +
cmp byte ptr [eax+4] 4 +
jnz loc_40F0F7  +
cmp edx eax +
jnz loc_40F0C8  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
sub eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
call sub_40EC70  +
mov edx [esp+2Ch+var_10] +
mov ecx 1 +
mov esi eax +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_40EF86  +
test ebx ebx +
jnz loc_40EF8E  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jnz loc_40EF9E  +
jmp loc_40EFA6  +
test ebx ebx +
jnz loc_40F122  +
mov eax edx +
xor ecx ecx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_40EF86  +
jmp loc_40EF93  +
cmp esi edx +
jz loc_40F041  +
mov eax [esi] +
cmp [edx] eax +
lea esi [esi+0] +
jnb loc_40F130  +
mov edi [edx+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] edi +
call sub_40E480  +
test eax eax +
mov edx eax +
jz loc_40F0F7  +
cmp byte ptr [edx+4] 4 +
jnz loc_40F0F7  +
test esi esi +
jz loc_40F106  +
cmp byte ptr [esi+4] 4 +
jz loc_40F0C0  +
cmp edx esi +
jnz loc_40F106  +
test edx edx +
lea esi [esi+0] +
jnz loc_40F041  +
mov [esp+2Ch+var_24] offset aLinemap_compar +
mov [esp+2Ch+var_28] 557h +
mov [esp+2Ch+var_2C] offset a____GccLibcppL +
call sub_405910  +
mov eax esi +
jmp loc_40EF6C  +
mov ebp [esi+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
mov [esp+2Ch+var_28] ebp +
call sub_40E480  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
jmp loc_40F0E7  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov ebx [esp+20h] +
mov esi [esp+1Ch] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40F200  +
mov edx [esi+48h] +
shl eax 4 +
mov ebx [edx+eax] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40F200  +
shl eax 4 +
mov edx [edx+eax] +
xor eax eax +
cmp [esi+28h] edx +
jb loc_40F1A3  +
jmp loc_40F1F3  +
mov ebx eax +
mov [esp+4] ebx +
mov ebp ebx +
mov [esp] esi +
call sub_40E480  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_40F1C5  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov ecx [eax] +
mov edi [eax+10h] +
sub ebp ecx +
mov eax [edi+ebp*8] +
mov edx eax +
mov ebp eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_40F1E5  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
cmp [esi+28h] ebp +
jb loc_40F1A1  +
sub ebx ecx +
cmp eax [edi+ebx*8+4] +
setz al  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
test esi esi +
jz loc_40F1F3  +
mov edx ebx +
jmp loc_40F198  +
***
push esi  +
push ebx  +
sub esp 8 +
mov eax [esp+8+arg_4] +
mov esi [esp+8+arg_8] +
mov ebx [esp+8+arg_0] +
mov edx eax +
and edx 7FFFFFFFh +
mov ebp [esi] +
cmp eax edx +
jz loc_40F24C  +
mov ecx [ebx+48h] +
shl edx 4 +
mov eax [ecx+edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_40F24C  +
shl edx 4 +
mov eax [ecx+edx] +
mov edx [ebp+10h] +
sub eax [ebp+0] +
mov edi [edx+eax*8] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_40E480  +
test eax eax +
jz loc_40F277  +
cmp byte ptr [eax+4] 4 +
jnz loc_40F277  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebp+14h] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_40E480  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40F2D2  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_40E480  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_40F2EC  +
cmp byte ptr [eax+4] 4 +
jz loc_40F2F6  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_40EC70  +
cmp eax 1 +
jbe loc_40F321  +
mov edx [esp+2Ch+var_10] +
cmp byte ptr [edx+14h] 0 +
jz loc_40F2EC  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jz loc_40F372  +
cmp byte ptr [edx+4] 4 +
jnz loc_40F372  +
lea ebp [esp+2Ch+var_14] +
jmp loc_40F33B  +
cmp byte ptr [edx+4] 4 +
jnz loc_40F372  +
cmp eax 1 +
ja loc_40F390  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_40F210  +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
mov ebx eax +
call sub_40EC70  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jnz loc_40F335  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_40F2EC  +
mov eax [esp+2Ch+arg_8] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
cmp byte ptr [eax+14h] 0 +
jnz loc_40F340  +
jmp loc_40F372  +
***
sub esp 14h +
mov edx [esp+14h+arg_C] +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
mov ebx [esp+14h+arg_8] +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jz loc_40F3F3  +
mov edx esi +
shl edx 4 +
add edx [ecx+48h] +
mov esi [edx+0Ch] +
mov edx [edx] +
mov [eax+0Ch] esi +
cmp edx 1 +
jbe loc_40F447  +
test ebx ebx +
jz loc_40F474  +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
jz loc_40F450  +
shl esi 4 +
add esi [ecx+48h] +
mov esi [esi] +
cmp [ecx+28h] esi +
jb loc_40F458  +
mov ecx [ebx+8] +
sub edx [ebx] +
mov [eax] ecx +
movzx ecx byte ptr [ebx+18h] +
mov esi edx +
shr esi cl +
add esi [ebx+0Ch] +
mov [eax+4] esi +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [ebx+19h] +
sub esi 1 +
and esi edx +
shr esi cl +
cmp byte ptr [ebx+14h] 0 +
mov [eax+8] esi +
setnz byte ptr [eax+10h]  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_40F415  +
mov esi edx +
jmp loc_40F410  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6D5h +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_405910  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6CDh +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_405910  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+70h+var_10] +
mov edi [esp+70h+var_C] +
mov eax [esp+70h+var_8] +
mov edx [esp+70h+var_4] +
test esi esi +
mov [esp+70h+var_44] offset aLc_enter +
mov [esp+70h+var_40] offset aLc_leave +
mov [esp+70h+var_3C] offset aLc_rename +
mov [esp+70h+var_38] offset aLc_rename_verb +
mov [esp+70h+var_34] offset aLc_enter_macro +
jz loc_40F650  +
test dl dl +
jnz loc_40F5A0  +
imul ebx eax +
add ebx [edi] +
movzx ebp byte ptr [ebx+4] +
mov [esp+70h+var_54] offset a??? +
mov ecx ebp +
cmp cl 4 +
ja loc_40F502  +
movzx ebp cl +
mov ecx [esp+ebp*4+70h+var_44] +
mov [esp+70h+var_54] ecx +
test dl dl +
jnz loc_40F5B0  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_40F616  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aNo +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_5C] ecx +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_450940  +
mov ebp [ebx+10h] +
cmp ebp [edi+8] +
jnb loc_40F625  +
mov ecx [ebx+0Ch] +
imul edx ebp +
mov eax [ebx+8] +
add edx [edi] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_64] ecx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_54] edx +
call sub_450940  +
mov edx [esp+70h+var_54] +
test edx edx +
jz loc_40F65E  +
mov eax [edx+8] +
mov [esp+70h+var_64] eax +
mov [esp+70h+var_68] ebp +
mov [esp+70h+var_6C] offset aIncludedFromDS +
mov [esp+70h+var_70] esi +
call sub_450940  +
jmp loc_40F5FE  +
mov ecx [edi+10h] +
lea ebx [eax+eax*2] +
lea ebx [ecx+ebx*8] +
jmp loc_40F4E4  +
mov edx [ebx] +
mov edi [esp+70h+var_54] +
mov [esp+70h+var_58] offset aNo +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_5C] edi +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_450940  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov eax [eax] +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_6C] offset aMacroSUTokens +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_68] eax +
call sub_450940  +
mov [esp+70h+var_10] esi +
mov [esp+70h+var_C] offset asc_45D1F9 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_450940  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aYes +
jmp loc_40F51E  +
mov edx [ebx+0Ch] +
mov eax [ebx+8] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_68] eax +
call sub_450940  +
mov eax offset aNone +
jmp loc_40F584  +
mov ecx ds:_iob +
lea esi [ecx+40h] +
jmp loc_40F4D7  +
mov eax offset aNone +
jmp loc_40F584  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+74h] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_40F692  +
mov edi [esp+70h] +
shl eax 4 +
add eax [edi+48h] +
mov ebx [eax] +
test ebx ebx +
jnz loc_40F6A0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov dword ptr [esp+8] 2 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40EC70  +
mov edx [esp+4Ch] +
test edx edx +
jz loc_40F780  +
mov esi [edx+8] +
mov ebp eax +
movzx ecx byte ptr [edx+18h] +
sub ebp [edx] +
mov [esp+38h] esi +
mov esi 1 +
mov edi ebp +
shr edi cl +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi ebp +
add edi [edx+0Ch] +
shr esi cl +
xor ecx ecx +
cmp byte ptr [edx+14h] 0 +
setnz cl  +
cmp ebx eax +
mov [esp+3Ch] ecx +
jnz loc_40F766  +
mov ecx [edx+10h] +
cmp ecx 0FFFFFFFFh +
jz loc_40F772  +
mov ebp [esp+70h] +
imul ecx ecx +
add ecx [ebp+0] +
jz loc_40F772  +
mov ecx [ecx+8] +
xor ebp ebp +
mov [esp+28h] eax +
mov eax [esp+3Ch] +
mov [esp+24h] ebx +
mov [esp+20h] ebp +
mov [esp+14h] esi +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+10h] edi +
mov [esp+1Ch] edx +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
mov eax [esp+78h] +
mov dword ptr [esp+4] offset aPSFSLDCDSDMPED +
mov [esp] eax +
call sub_450940  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp 1 +
mov ecx offset off_45D24B +
jmp loc_40F71E  +
***
xor ebp ebp +
mov ecx offset aNull_2 +
jmp loc_40F71E  +
***
mov ecx offset unk_45D24A +
mov ebp 0FFFFFFFFh +
mov dword ptr [esp+3Ch] 0FFFFFFFFh +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+38h] ecx +
jmp loc_40F71E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
test ebp ebp +
jz loc_40F830  +
mov esi [ebp+8] +
test esi esi +
jz loc_40F830  +
mov ebx esi +
sub ebx 1 +
js loc_40F830  +
imul esi esi +
sub esi 1Ch +
jmp loc_40F7E8  +
sub esi 1Ch +
sub ebx 1 +
js loc_40F830  +
mov eax [ebp+0] +
mov eax [eax+esi+8] +
test eax eax +
jz loc_40F7E0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_440EB0  +
test eax eax +
jnz loc_40F7E0  +
mov eax [ebp+8] +
sub eax 1 +
cmp eax ebx +
jz loc_40F840  +
add ebx 1 +
imul ebx ebx +
add ebx [ebp+0] +
mov edx [ebx] +
sub edx 1 +
mov eax [esp+1Ch+arg_8] +
mov [eax] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+28h] +
jmp loc_40F81B  +
***
push esi  +
push ebx  +
sub esp 20h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov eax [eax+4] +
mov [esp+20h+var_18] eax +
imul eax eax +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+8] +
mov [esp+20h+var_14] eax +
imul eax eax +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+14h] +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+20h+var_8] eax +
mov eax [esp+20h+arg_0] +
mov ebp [eax+10h] +
test ebp ebp +
jz loc_40F97F  +
mov eax [eax+18h] +
mov [esp+20h+var_4] eax +
lea eax [eax+eax*2-3] +
lea eax [ebp+eax*8+0] +
cmp ebp eax +
mov [esp+20h+var_1C] eax +
ja loc_40F90A  +
xor edx edx +
mov [esp+20h+var_20] 0 +
nop   +
mov esi [ebp+0Ch] +
mov eax [esp+20h+var_20] +
lea eax [eax+esi*8] +
add esi esi +
mov [esp+20h+var_20] eax +
jz loc_40F8F9  +
mov eax [ebp+10h] +
xor ecx ecx +
mov [esp+20h+arg_4] edi +
lea esi [esi+0] +
mov edi [eax+4] +
lea ebx [edx+4] +
cmp [eax] edi +
cmovz edx ebx +
add ecx 2 +
add eax 8 +
cmp ecx esi +
jb loc_40F8E0  +
mov edi [esp+20h+arg_4] +
add ebp 18h +
jz loc_40F904  +
cmp ebp [esp+20h+var_1C] +
jbe loc_40F8C0  +
mov eax [esp+20h+var_4] +
jmp loc_40F917  +
mov eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov esi [esp+20h+var_18] +
mov [edi+18h] eax +
lea eax [eax+eax*2] +
mov ecx ds:dword_46B1D0 +
shl eax 3 +
mov [edi+20h] eax +
mov eax [esp+20h+arg_0] +
mov [edi] esi +
mov esi [esp+20h+var_14] +
mov [edi+10h] ecx +
mov ecx ds:dword_46B1CC +
mov [edi+28h] edx +
mov eax [eax+44h] +
mov [edi+4] esi +
mov esi [esp+20h+var_10] +
mov [edi+14h] ecx +
shl eax 4 +
mov [edi+8] esi +
mov esi [esp+20h+var_C] +
mov [edi+2Ch] eax +
mov eax [esp+20h+arg_0] +
mov [edi+0Ch] esi +
mov esi [esp+20h+var_8] +
mov eax [eax+40h] +
mov [edi+1Ch] esi +
mov esi [esp+20h+var_20] +
mov [edi+30h] eax +
mov [edi+24h] esi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+20h+arg_0] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov eax [eax+18h] +
jmp loc_40F917  +
***
jmp loc_40F9A0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov esi [esp+40h] +
mov edi [esp+48h] +
mov ebp [esp+4Ch] +
test ebx ebx +
jz loc_40FA27  +
test esi esi +
jz loc_40FAF1  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aOfOrdinaryMaps +
mov [esp] esi +
mov [esp+8] eax +
call sub_450940  +
mov eax [ebx+18h] +
mov dword ptr [esp+4] offset aOfMacroMapsD +
mov [esp] esi +
mov [esp+8] eax +
call sub_450940  +
mov eax [ebx+20h] +
mov dword ptr [esp+4] offset aIncludeStackDe +
mov [esp] esi +
mov [esp+8] eax +
call sub_450940  +
mov eax [ebx+28h] +
mov dword ptr [esp+4] offset aHighestLocatio +
mov [esp] esi +
mov [esp+8] eax +
call sub_450940  +
test edi edi +
jnz loc_40FA90  +
test ebp ebp +
jnz loc_40FA30  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] offset aMacroLineMaps +
mov [esp] esi +
call sub_450940  +
mov eax [ebx+18h] +
test eax eax +
jz loc_40FA74  +
xor edi edi +
lea esi [esi+0] +
mov [esp+8] edi +
add edi 1 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] esi +
call loc_40F490  +
cmp edi ebp +
jz loc_40FA74  +
cmp edi [ebx+18h] +
jb loc_40FA50  +
mov [esp+40h] esi +
mov dword ptr [esp+44h] offset asc_45D1F9 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_450940  +
***
mov dword ptr [esp+4] offset aOrdinaryLineMa +
mov [esp] esi +
call sub_450940  +
mov edx [ebx+8] +
test edx edx +
jz loc_40FADC  +
xor eax eax +
lea esi [esi+0] +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+1Ch] eax +
call loc_40F490  +
mov eax [esp+1Ch] +
add eax 1 +
cmp eax edi +
jz loc_40FADC  +
cmp eax [ebx+8] +
jb loc_40FAB0  +
mov dword ptr [esp+4] offset asc_45D1F9 +
mov [esp] esi +
call sub_450940  +
jmp loc_40FA23  +
***
mov eax ds:_iob +
lea esi [eax+40h] +
jmp loc_40F9C3  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 44h +
mov edx [ecx] +
lea eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_403580  +
mov ebx [esp+48h+var_30] +
cmp ebx [esp+48h+arg_0] +
jz loc_40FB30  +
xor eax eax +
add esp 44h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebp esp +
leave   +
jmp loc_40FB00  +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [ecx+44h] +
lea edi [ecx+44h] +
test eax eax +
jz loc_40FBB4  +
lea esi [esi+0] +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_40FB9E  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_40FBA9  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_40FB90  +
mov eax [ebp+54h] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [ebp+24h] +
mov [esp+28h+var_28] eax +
call free  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_40FBF5  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
mov eax [eax] +
retn 4  +
lea eax [ecx+eax*8+8] +
mov eax [eax] +
retn 4  +
***
mov eax [esp+4] +
cmp eax 2 +
jle loc_40FC13  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
***
lea eax [ecx+eax*8+8] +
retn 4  +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_40FC33  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
lea eax [ecx+eax*8+8] +
retn 4  +
***
sub esp 38h +
mov edx [esp+38h+arg_4] +
mov ebx [esp+38h+arg_0] +
test edx edx +
jnz loc_40FC80  +
cmp byte ptr [ebx+2Ch] 0 +
jz loc_40FCB6  +
mov edx [ebx+30h] +
mov [eax] edx +
mov edx [ebx+34h] +
mov [eax+4] edx +
mov edx [ebx+38h] +
mov [eax+8] edx +
mov edx [ebx+3Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+40h] +
mov [eax+10h] edx +
add esp 38h +
pop ebx  +
retn 8  +
cmp edx 2 +
jle loc_40FCB0  +
mov ecx [ebx+24h] +
lea edx [ecx+edx*8-18h] +
mov edx [edx] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_34] edx +
call sub_403580  +
mov eax [esp+38h+var_2C] +
add esp 38h +
pop ebx  +
retn 8  +
lea edx [ebx+edx*8+8] +
jmp loc_40FC8C  +
mov [esp+38h+var_2C] ecx +
mov ecx [ebx+8] +
lea edx [esp+38h+var_28] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ecx +
call sub_403580  +
mov edx [esp+38h+var_28] +
mov eax [esp+38h+var_2C] +
mov [ebx+30h] edx +
mov edx [esp+38h+var_24] +
mov [ebx+34h] edx +
mov edx [esp+38h+var_20] +
mov [ebx+38h] edx +
mov edx [esp+38h+var_1C] +
mov [ebx+3Ch] edx +
mov edx [esp+38h+var_18] +
mov [ebx+40h] edx +
mov edx [ebx+28h] +
test edx edx +
jz loc_40FCFE  +
mov [ebx+38h] edx +
mov byte ptr [ebx+2Ch] 1 +
jmp loc_40FC58  +
***
mov eax [esp+arg_0] +
mov byte ptr [ecx+2Ch] 0 +
mov [ecx+28h] eax +
retn 4  +
***
mov eax [ecx+44h] +
test eax eax +
jz loc_40FD47  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_40FD40  +
mov edx [ecx+54h] +
lea eax [edx+eax*4-0Ch] +
mov eax [eax] +
retn   +
***
lea eax [ecx+edx*4+48h] +
mov eax [eax] +
retn   +
***
xor eax eax +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 0Ch +
mov eax [ecx+44h] +
mov byte ptr [ecx+58h] 1 +
lea edi [ecx+44h] +
test eax eax +
jz loc_40FD94  +
nop   +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_40FD7E  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_40FD89  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_40FD70  +
mov dword ptr [ebp+44h] 0 +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ecx+58h] +
test al al +
jnz locret_40FDC8  +
sub esp 0Ch +
cmp dword ptr [esp+10h] 60000000h +
ja loc_40FDD0  +
add esp 0Ch +
retn 4  +
***
call sub_40FD50  +
mov eax 1 +
jmp loc_40FDC5  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_46A148 +
mov [esp+14h+var_14] esi +
mov [ecx+4] eax +
call sub_440E70  +
mov [esp+14h+var_14] esi +
mov [ebx+8] eax +
call strlen  +
mov [ebx+0Ch] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_8] +
mov edx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_46A1A8 +
mov [esp+14h+var_14] esi +
mov [ecx+8] edx +
mov [ecx+4] eax +
call sub_440E70  +
mov [esp+14h+var_14] esi +
mov [ebx+0Ch] eax +
call strlen  +
mov [ebx+10h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 0Ch  +
***
push ebp  +
add ecx 4 +
mov ebp esp +
sub esp 28h +
mov eax [ebp+8] +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] al +
lea eax [ebp-10h] +
mov [esp] eax +
call sub_453060  +
sub esp 4 +
leave   +
retn 8  +
***
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov [ecx-4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [ecx+24h] 0 +
mov byte ptr [ecx+28h] 0 +
mov dword ptr [ecx+40h] 0 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov dword ptr [ecx+4Ch] 0 +
mov dword ptr [ecx+50h] 0 +
mov byte ptr [ecx+54h] 0 +
mov [esp+28h+var_28] eax +
mov [ebp+var_C] 1 +
call sub_453060  +
sub esp 4 +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
cmp ebx [ecx+4] +
mov edx [ebp+arg_C] +
jz loc_40FF40  +
cmp ebx 2 +
lea eax [ecx+ebx*8+8] +
jg loc_40FF37  +
mov ecx [ebp+arg_8] +
mov [eax+4] dl +
mov [eax] ecx +
test ebx ebx +
jnz loc_40FF2E  +
mov byte ptr [esi+2Ch] 0 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [ecx+24h] +
lea eax [eax+ebx*8-18h] +
jmp loc_40FF1E  +
mov eax [ebp+arg_8] +
lea ecx [ecx+4] +
mov [ebp+var_C] dl +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov [esp+28h+var_28] eax +
call sub_453060  +
sub esp 4 +
jmp loc_40FF26  +
***
push ebp  +
add ecx 44h +
mov ebp esp +
sub esp 18h +
lea eax [ebp+8] +
mov [esp] eax +
call sub_453100  +
sub esp 4 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_40E7E0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_40FFC9  +
cmp eax 60000000h +
mov esi eax +
ja loc_40FFC2  +
mov eax [ebp+arg_4] +
mov [esp+38h+var_34] 0Ah +
mov [esp+38h+var_38] eax +
call strchr  +
test eax eax +
jz loc_40FFD3  +
mov ecx ebx +
call sub_40FD50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov [esp+38h+var_38] 10h +
call loc_4543A0  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_40FDE0  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_453100  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_40FF80  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_40E7E0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_4100C2  +
cmp edx 60000000h +
ja loc_4100D0  +
mov eax [ebx] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_30] 1 +
mov [ebp+var_2C] edx +
mov [esp+38h+var_38] eax +
call sub_40ED70  +
mov edx [ebp+var_2C] +
cmp eax edx +
mov esi eax +
jz loc_4100D0  +
mov [esp+38h+var_38] 10h +
call loc_4543A0  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_40FDE0  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_453100  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_40FD50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_410040  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_40E8C0  +
mov [esp+48h+var_44] esi +
mov edi eax +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_40E8C0  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_410174  +
cmp edi 60000000h +
ja loc_41016D  +
cmp eax 60000000h +
mov esi eax +
ja loc_41016D  +
mov eax [ebp+arg_8] +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] eax +
call strchr  +
test eax eax +
jz loc_410180  +
mov ecx ebx +
call sub_40FD50  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx+44h] +
test eax eax +
jz loc_4101C8  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_410210  +
mov edx [ebx+54h] +
lea eax [edx+eax*4-0Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_4101C8  +
mov edx [ebx] +
mov eax [ecx] +
mov [ebp+var_2C] edx +
mov edx [ebp+arg_8] +
mov eax [eax+18h] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_3C] edx +
mov edx [ebp+var_2C] +
mov [esp+48h+var_48] edx +
call eax  +
sub esp 10h +
test al al +
jnz loc_410174  +
mov [esp+58h+var_58] 14h +
call loc_4543A0  +
mov edx [ebp+arg_8] +
mov [esp+58h+var_58] edi +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_50] edx +
mov ecx eax +
mov [ebp+var_2C] eax +
call sub_40FE20  +
mov eax [ebp+var_2C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
sub esp 0Ch +
mov [esp+58h+var_58] eax +
call sub_453100  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea eax [ebx+edx*4+48h] +
jmp loc_41019A  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov dword ptr [esp+8] offset unk_45D24A +
mov [esp] eax +
mov [esp+4] edx +
call sub_410110  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_40E7E0  +
mov ecx ebx +
mov [esp+18h+var_10] offset unk_45D24A +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_410110  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov [esp] eax +
call sub_410250  +
sub esp 4 +
leave   +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_40E7E0  +
mov ecx [ebp+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_410110  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_4102B0  +
sub esp 8 +
leave   +
retn 4  +
***
sub ecx 39h +
cmp ecx 9 +
ja loc_4103A0  +
jmp ds:off_45D360[ecx*4]  +
mov ecx [edx+124h] +
mov [eax] ecx +
mov ecx [edx+128h] +
mov edx [edx+12Ch] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+13Ch] +
mov [eax] ecx +
mov ecx [edx+140h] +
mov edx [edx+144h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+130h] +
mov [eax] ecx +
mov ecx [edx+134h] +
mov edx [edx+138h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+148h] +
mov [eax] ecx +
mov ecx [edx+14Ch] +
mov edx [edx+150h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+118h] +
mov [eax] ecx +
mov ecx [edx+11Ch] +
mov edx [edx+120h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov esi [esp+28h] +
mov ecx [ebx+8] +
lea edx [esi+ecx] +
cmp edx [ebx+4] +
ja loc_410410  +
mov eax [ebx] +
add ecx eax +
mov eax [esp+24h] +
mov [esp+8] esi +
mov [esp] ecx +
mov [esp+4] eax +
call memcpy  +
mov eax 1 +
add [ebx+8] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax edx +
shr eax 2 +
add edx eax +
mov eax [ebx] +
mov [ebx+4] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_435F50  +
mov ecx [ebx+8] +
mov [ebx] eax +
jmp loc_4103EA  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax ecx +
mov [ebp+var_20] ecx +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] eax +
mov eax ds:_stricmp +
mov [ebp+var_28] edx +
mov [esp+48h+var_44] ecx +
mov [ebp+var_24] eax +
call eax  +
test eax eax +
jnz loc_410480  +
mov dword ptr [ebx] offset loc_4103D0 +
mov eax ebx +
mov dword ptr [ebx+4] 0FFFFFFFFh +
mov dword ptr [ebx+8] 0FFFFFFFFh +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_20] +
mov [esp+48h+var_48] eax +
call strlen  +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] ecx +
mov esi eax +
call strlen  +
mov edi eax +
lea eax [esi+eax+20h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea ecx [esp+48h+var_28+3] +
mov [ebp+var_1C] ecx +
mov ecx [ebp+arg_0] +
and [ebp+var_1C] 0FFFFFFF0h +
mov esi [ebp+var_1C] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] esi +
call memcpy  +
mov edx [ebp+var_20] +
lea eax [esi+edi+1] +
mov byte ptr [esi+edi] 2Fh +
xor edi edi +
mov esi offset off_461B00 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call strcpy  +
mov [ebp+var_2C] ebx +
mov ebx edi +
mov edi [ebp+var_24] +
nop   +
mov eax [esi] +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
call edi  +
test eax eax +
jz loc_410540  +
add ebx 1 +
add esi 0Ch +
cmp ebx 8 +
jnz loc_4104F0  +
mov eax [ebp+var_20] +
mov [esp+48h+var_40] offset aNoIconvImpleme +
mov ebx [ebp+var_2C] +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_38] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] eax +
call sub_41ECD0  +
jmp loc_41045B  +
mov edi ebx +
mov ebx [ebp+var_2C] +
lea eax [edi+edi*2] +
lea eax ds:461B00h[eax*4] +
mov edx [eax+4] +
mov eax [eax+8] +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx] edx +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_C] +
mov eax [ebx+8] +
mov edi [ebx] +
mov esi [ebx+4] +
add edi eax +
sub esi eax +
cmp esi 3 +
ja loc_4106D0  +
cmp [esp+1Ch+arg_8] 0 +
jnz loc_410846  +
mov eax [ebx+4] +
sub eax esi +
mov [ebx+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1Ch+arg_8] +
test ecx ecx +
jz loc_4106B7  +
mov eax [esp+1Ch+arg_4] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov byte ptr [esp+1Ch+var_14] al +
jbe loc_410728  +
mov [esp+1Ch+var_10] edi +
mov ebp ecx +
movzx ecx ds:byte_45E076[edx] +
movzx edi byte ptr [edx+45E070h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_410781  +
add edx 1 +
cmp edx 7 +
jnz loc_4106F6  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_4106C4  +
sub [esp+1Ch+arg_8] 1 +
add [esp+1Ch+arg_4] 1 +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jnz loc_41076C  +
movzx eax ch +
mov [edi+1] al +
mov eax ecx +
shr eax 10h +
mov [edi+2] al +
mov eax 3 +
mov [edi] cl +
mov edx [esp+1Ch+arg_8] +
shr ecx 18h +
sub esi 4 +
mov [edi+eax] cl +
test edx edx +
jz loc_4106B7  +
add edi 4 +
jmp loc_4106A7  +
movzx eax ch +
mov [edi+2] al +
mov eax ecx +
shr eax 10h +
mov [edi+1] al +
xor eax eax +
mov [edi+3] cl +
jmp loc_41074F  +
cmp [esp+1Ch+arg_8] edx +
mov edi [esp+1Ch+var_10] +
jnb loc_410792  +
mov ebx 16h +
jmp loc_41071C  +
mov eax [esp+1Ch+arg_4] +
and cl byte ptr [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] edi +
mov edi edx +
movzx ecx cl +
lea ebp [eax+1] +
jmp loc_4107BA  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax [esp+1Ch+arg_4] +
cmp eax edi +
jnb loc_4107D0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov edx eax +
and edx 0FFFFFFC0h +
cmp dl 80h +
jz loc_4107A8  +
jmp loc_410717  +
lea eax [ecx-80h] +
mov edx edi +
mov edi [esp+1Ch+var_14] +
cmp eax 7FFFFF7Fh +
ja loc_410717  +
cmp ecx 7FFh +
ja loc_4107F5  +
cmp edx 2 +
ja loc_410717  +
cmp ecx 0FFFFh +
ja loc_410806  +
cmp edx 3 +
ja loc_410717  +
cmp ecx 1FFFFFh +
ja loc_410817  +
cmp edx 4 +
ja loc_410717  +
cmp ecx 3FFFFFFh +
ja loc_410828  +
cmp edx 5 +
ja loc_410717  +
lea eax [ecx-0D800h] +
cmp eax 7FFh +
jbe loc_410717  +
sub [esp+1Ch+arg_8] edx +
mov [esp+1Ch+arg_4] ebp +
jmp loc_410732  +
mov eax [ebx+4] +
add esi 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edx +
call sub_435F50  +
mov edi [ebx+4] +
mov [ebx] eax +
sub eax esi +
add edi eax +
jmp loc_4106A7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax [esp+28h] +
mov ecx [eax] +
mov eax [esp+2Ch] +
test ecx ecx +
mov ebp [eax] +
mov eax 16h +
jnz loc_4108B0  +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx] +
mov dword ptr [esp] 2 +
movzx esi al +
cmp esi 7Fh +
mov [esp+4] al +
jbe loc_410900  +
mov edx [esp] +
mov [esp+8] ebx +
movzx ebx ds:byte_45E076[edx] +
movzx edi byte ptr [edx+45E070h] +
movzx eax bl +
not eax  +
and eax esi +
cmp eax edi +
jz loc_4109D0  +
add edx 1 +
cmp edx 7 +
jnz loc_4108CD  +
add esp 0Ch +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [esp+28h] +
lea eax [ecx-1] +
mov [edi] eax +
mov edi [esp+24h] +
lea eax [ebx+1] +
mov [edi] eax +
cmp esi 0FFFFh +
mov eax [esp+30h] +
ja loc_410958  +
cmp dword ptr [eax] 1 +
jbe loc_41095D  +
mov ebx [esp+20h] +
xor eax eax +
mov ecx esi +
test ebx ebx +
setnz al  +
mov [ebp+eax+0] cl +
setz al  +
mov ecx esi +
movzx eax al +
movzx edx ch +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_4108A2  +
***
cmp dword ptr [eax] 3 +
ja loc_410976  +
mov eax [esp+24h] +
mov [eax] ebx +
mov eax [esp+28h] +
mov [eax] ecx +
add esp 0Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+20h] +
lea eax [esi-10000h] +
and esi 3FFh +
shr eax 0Ah +
mov edx esi +
add eax 0D800h +
add edx 0DC00h +
test ecx ecx +
jz loc_410AE0  +
mov [ebp+1] al +
movzx eax ah +
mov [ebp+0] al +
mov eax 2 +
mov [ebp+3] dl +
movzx edx dh +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_4108A2  +
***
cmp ecx edx +
mov edi ebx +
mov ebx [esp+8] +
mov [esp] edx +
mov eax 16h +
jb loc_4108A2  +
mov eax edi +
and al [esp+4] +
lea edi [ebx+1] +
mov [esp+4] ecx +
movzx esi al +
add edi 1 +
movzx eax byte ptr [edi-1] +
mov ecx eax +
and ecx 0FFFFFFC0h +
cmp cl 80h +
jnz loc_4108F2  +
and eax 3Fh +
shl esi 6 +
add esi eax +
mov eax edi +
sub eax ebx +
cmp eax edx +
jb loc_4109F6  +
lea eax [esi-80h] +
mov ecx [esp+4] +
mov [esp] edx +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFFFF7Fh +
ja loc_4108A2  +
cmp esi 7FFh +
ja loc_410A4A  +
cmp dword ptr [esp] 2 +
ja loc_4108A2  +
cmp esi 0FFFFh +
ja loc_410A61  +
cmp dword ptr [esp] 3 +
mov eax 2Ah +
ja loc_4108A2  +
cmp esi 1FFFFFh +
ja loc_410A78  +
cmp dword ptr [esp] 4 +
mov eax 2Ah +
ja loc_4108A2  +
cmp esi 3FFFFFFh +
ja loc_410A8F  +
cmp dword ptr [esp] 5 +
mov eax 2Ah +
ja loc_4108A2  +
lea eax [esi-0D800h] +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFh +
jbe loc_4108A2  +
mov edx [esp+24h] +
mov [edx] edi +
mov edi ecx +
sub edi [esp] +
cmp esi 10FFFFh +
mov edx edi +
mov edi [esp+28h] +
mov [edi] edx +
jbe loc_410912  +
mov edi [esp+24h] +
mov esi [esp+28h] +
mov [edi] ebx +
mov [esi] ecx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [ebp+0] al +
movzx eax ah +
mov [ebp+1] al +
mov eax 3 +
mov [ebp+2] dl +
jmp loc_4109AF  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+3Ch] +
mov eax [ebx+8] +
mov esi ebx +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
mov eax [esp+38h] +
test eax eax +
jnz loc_410B40  +
mov eax [esi+4] +
sub eax ebp +
mov [esi+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov [esp+0Fh] al +
jbe loc_410B90  +
movzx ebx ds:byte_45E076[edx] +
movzx edi byte ptr [edx+45E070h] +
movzx eax bl +
not eax  +
and eax ecx +
cmp eax edi +
jz loc_410C20  +
add edx 1 +
cmp edx 7 +
jnz loc_410B58  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_410B32  +
***
mov eax [esp+38h] +
lea ebx [eax-1] +
mov eax [esp+34h] +
add eax 1 +
cmp ecx 0FFFFh +
ja loc_410BE6  +
cmp ebp 1 +
jbe loc_410BEB  +
mov edi [esp+30h] +
xor edx edx +
test edi edi +
mov edi [esp+8] +
setnz dl  +
mov [edi+edx] cl +
setz dl  +
movzx ecx ch +
add dword ptr [esp+8] 2 +
movzx edx dl +
sub ebp 2 +
mov [edi+edx] cl +
test ebx ebx +
jz loc_410B25  +
mov [esp+34h] eax +
mov [esp+38h] ebx +
jmp loc_410B1D  +
***
cmp ebp 3 +
ja loc_410C30  +
mov eax [esi+4] +
add ebp 100h +
mov edx [esi] +
add eax 100h +
mov [esi+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_435F50  +
mov [esi] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [esi+4] +
add [esp+8] eax +
jmp loc_410B1D  +
***
cmp edx [esp+38h] +
jbe loc_410C96  +
mov ebx 16h +
jmp loc_410B82  +
***
mov edi [esp+30h] +
lea edx [ecx-10000h] +
and ecx 3FFh +
shr edx 0Ah +
add ecx 0DC00h +
add edx 0D800h +
test edi edi +
jz loc_410C80  +
mov edi [esp+8] +
mov [edi+1] dl +
movzx edx dh +
mov [edi] dl +
mov edx 2 +
mov [edi+3] cl +
mov edi [esp+8] +
movzx ecx ch +
sub ebp 4 +
add dword ptr [esp+8] 4 +
mov [edi+edx] cl +
jmp loc_410BD1  +
***
mov edi [esp+8] +
mov [edi] dl +
movzx edx dh +
mov [edi+1] dl +
mov edx 3 +
mov [edi+2] cl +
jmp loc_410C67  +
***
mov eax [esp+34h] +
mov edi edx +
and bl [esp+0Fh] +
add eax 1 +
movzx ecx bl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 0FFFFFFC0h +
cmp dl 80h +
jnz loc_410B7D  +
mov edx eax +
and ebx 3Fh +
sub edx [esp+34h] +
shl ecx 6 +
add ecx ebx +
cmp edx edi +
jb loc_410CA6  +
lea ebx [ecx-80h] +
mov edx edi +
cmp ebx 7FFFFF7Fh +
ja loc_410B7D  +
cmp ecx 7FFh +
ja loc_410CEF  +
cmp edi 2 +
ja loc_410B7D  +
cmp ecx 0FFFFh +
ja loc_410D00  +
cmp edx 3 +
ja loc_410B7D  +
cmp ecx 1FFFFFh +
ja loc_410D11  +
cmp edx 4 +
ja loc_410B7D  +
cmp ecx 3FFFFFFh +
ja loc_410D22  +
cmp edx 5 +
ja loc_410B7D  +
lea ebx [ecx-0D800h] +
cmp ebx 7FFh +
jbe loc_410B7D  +
mov ebx [esp+38h] +
sub ebx edx +
cmp ecx 10FFFFh +
ja loc_410B7D  +
jmp loc_410B9E  +
***
push ebp  +
mov eax 7 +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov esi [esp+2Ch] +
cmp dword ptr [esi] 3 +
ja loc_410D70  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov edi [eax] +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax 16h +
test ebx ebx +
jz loc_410D65  +
movzx eax byte ptr [edi] +
mov edx 2 +
movzx ecx al +
cmp ecx 7Fh +
mov [esp] al +
jbe loc_410DC6  +
mov [esp+4] edi +
mov ebp ecx +
movzx ecx ds:byte_45E076[edx] +
movzx edi byte ptr [edx+45E070h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_410E2A  +
add edx 1 +
cmp edx 7 +
jnz loc_410D9E  +
mov eax 2Ah +
jmp loc_410D65  +
***
mov eax [esp+24h] +
sub ebx 1 +
add edi 1 +
mov [eax] ebx +
mov eax [esp+20h] +
mov [eax] edi +
mov edx [esp+1Ch] +
mov eax [esp+28h] +
test edx edx +
mov eax [eax] +
jz loc_410E13  +
movzx edx ch +
mov [eax+2] dl +
mov edx ecx +
shr edx 10h +
mov [eax+1] dl +
xor edx edx +
mov [eax+3] cl +
shr ecx 18h +
mov [eax+edx] cl +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
xor eax eax +
sub dword ptr [esi] 4 +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx ch +
mov [eax+1] dl +
mov edx ecx +
shr edx 10h +
mov [eax+2] dl +
mov edx 3 +
mov [eax] cl +
jmp loc_410DF9  +
***
cmp ebx edx +
mov edi [esp+4] +
mov eax 16h +
jb loc_410D65  +
and cl [esp] +
lea ebp [edi+1] +
mov [esp] ebx +
movzx ecx cl +
jmp loc_410E60  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax edi +
cmp eax edx +
jnb loc_410E76  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ebx eax +
and ebx 0FFFFFFC0h +
cmp bl 80h +
jz loc_410E50  +
jmp loc_410DBF  +
***
lea edi [ecx-80h] +
mov ebx [esp] +
mov eax 2Ah +
cmp edi 7FFFFF7Fh +
ja loc_410D65  +
cmp ecx 7FFh +
ja loc_410E9E  +
cmp edx 2 +
ja loc_410D65  +
cmp ecx 0FFFFh +
ja loc_410EB4  +
cmp edx 3 +
mov eax 2Ah +
ja loc_410D65  +
cmp ecx 1FFFFFh +
ja loc_410ECA  +
cmp edx 4 +
mov eax 2Ah +
ja loc_410D65  +
cmp ecx 3FFFFFFh +
ja loc_410EE0  +
cmp edx 5 +
mov eax 2Ah +
ja loc_410D65  +
lea edi [ecx-0D800h] +
mov eax 2Ah +
cmp edi 7FFh +
jbe loc_410D65  +
mov eax [esp+20h] +
sub ebx edx +
mov [eax] ebp +
mov eax [esp+24h] +
mov [eax] ebx +
jmp loc_410DD8  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+4Ch] +
mov eax [ebx+8] +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
cmp dword ptr [esp+48h] 3 +
mov esi 16h +
ja loc_410F54  +
mov eax [esp+48h] +
test eax eax +
jnz loc_410FB0  +
mov eax [ebx+4] +
sub eax ebp +
mov [ebx+8] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+40h] +
test edx edx +
jz loc_410FC3  +
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax] +
movzx eax byte ptr [eax+1] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+2] +
shl edx 8 +
add eax edx +
mov edx 3 +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx+edx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_410FE8  +
mov esi 2Ah +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_410F4C  +
***
test esi esi +
jz loc_410F2B  +
cmp esi 7 +
jz loc_4110A6  +
jmp loc_410F9E  +
***
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax+3] +
movzx eax byte ptr [eax+2] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+1] +
shl edx 8 +
add eax edx +
xor edx edx +
jmp loc_410F81  +
***
cmp eax 7FFFFFFEh +
ja loc_410F99  +
cmp eax 7Fh +
jbe loc_411095  +
lea edx [esp+20h] +
mov ecx 1 +
mov [esp+0Ch] ebp +
mov [esp+4Ch] ebx +
jmp loc_411014  +
mov ecx edi +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
lea esi [edx-1] +
mov [edx-1] bl +
lea edi [ecx+1] +
ja loc_411010  +
movzx ebp ds:byte_45E082[edi] +
test eax ebp +
jnz loc_411010  +
mov ebp [esp+0Ch] +
lea esi [edx-2] +
or al ds:byte_45E07D[ecx] +
mov ebx [esp+4Ch] +
cmp edi ebp +
mov [edx-2] al +
ja loc_4110A6  +
lea eax [esp+20h] +
cmp esi eax +
jnb loc_411082  +
mov ecx [esp+8] +
mov edx esi +
nop   +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ecx 1 +
mov [ecx-1] al +
lea eax [esp+20h] +
cmp edx eax +
jnz loc_411060  +
add esi 1 +
lea eax [esp+21h] +
sub eax esi +
add [esp+8] eax +
sub ebp edi +
xor esi esi +
add dword ptr [esp+44h] 4 +
sub dword ptr [esp+48h] 4 +
jmp loc_410F37  +
***
test ebp ebp +
mov edi 1 +
mov [esp+1Fh] al +
lea esi [esp+1Fh] +
jnz loc_411058  +
mov eax [ebx+4] +
add ebp 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_435F50  +
mov [ebx] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [ebx+4] +
add [esp+8] eax +
jmp loc_410F2B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+4Ch] +
mov eax [ebp+8] +
mov edi [ebp+0] +
mov esi [ebp+4] +
add edi eax +
mov [esp+8] edi +
sub esi eax +
cmp dword ptr [esp+48h] 1 +
jbe loc_411150  +
mov edx [esp+40h] +
mov ebx [esp+44h] +
test edx edx +
setz al  +
setnz dl  +
movzx eax al +
movzx ecx dl +
movzx eax byte ptr [ebx+eax] +
movzx ecx byte ptr [ebx+ecx] +
shl eax 8 +
lea ebp [eax+ecx] +
lea eax [ebp-0DC00h] +
cmp eax 3FFh +
ja loc_411180  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx 16h +
mov eax [esp+48h] +
test eax eax +
jnz loc_411306  +
mov ebp [esp+4Ch] +
mov eax [ebp+4] +
sub eax esi +
mov [ebp+8] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [ebp-0D800h] +
cmp eax 3FFh +
ja loc_4111A0  +
cmp dword ptr [esp+48h] 3 +
ja loc_411203  +
mov ebx 16h +
jmp loc_411139  +
***
cmp ebp 7Fh +
ja loc_411243  +
mov eax ebp +
test esi esi +
mov [esp+1Fh] al +
lea edi [esp+1Fh] +
mov ecx 1 +
jnz loc_41129C  +
mov eax [esp+4Ch] +
add esi 100h +
mov edx [esp+4Ch] +
mov eax [eax+4] +
mov [esp+8] eax +
add eax 100h +
mov [edx+4] eax +
mov edx [edx] +
mov [esp+4] eax +
mov [esp] edx +
call sub_435F50  +
mov edx [esp+4Ch] +
mov [edx] eax +
sub eax esi +
mov [esp+8] eax +
mov eax [edx+4] +
add [esp+8] eax +
jmp loc_4110FC  +
***
test dl dl +
jnz loc_4112E0  +
mov eax [esp+44h] +
mov edx 2 +
movzx eax byte ptr [eax+3] +
shl eax 8 +
mov ebx [esp+44h] +
movzx edx byte ptr [ebx+edx] +
add eax edx +
lea edx [eax-0DC00h] +
cmp edx 3FFh +
ja loc_411134  +
mov edx ebp +
shl edx 0Ah +
lea ebp [eax+edx-35FDC00h] +
mov eax ebp +
mov ebx 1 +
lea edx [esp+20h] +
mov [esp+0Ch] ebp +
jmp loc_411258  +
mov ebx ecx +
mov edx edi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea edi [edx-1] +
lea ecx [ebx+1] +
ja loc_411254  +
movzx ebp ds:byte_45E082[ecx] +
test eax ebp +
jnz loc_411254  +
or al ds:byte_45E07D[ebx] +
cmp ecx esi +
mov ebp [esp+0Ch] +
lea edi [edx-2] +
mov [edx-2] al +
ja loc_4111C0  +
lea eax [esp+20h] +
cmp edi eax +
jnb loc_4112C4  +
mov edx [esp+8] +
mov eax edi +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+20h] +
cmp eax ebx +
jnz loc_4112A2  +
add edi 1 +
lea eax [esp+21h] +
sub eax edi +
add [esp+8] eax +
sub esi ecx +
cmp ebp 0FFFFh +
jbe loc_4112F5  +
add dword ptr [esp+44h] 4 +
xor ebx ebx +
sub dword ptr [esp+48h] 4 +
jmp loc_411155  +
***
mov eax [esp+44h] +
mov edx 3 +
movzx eax byte ptr [eax+2] +
shl eax 8 +
jmp loc_41121B  +
***
add dword ptr [esp+44h] 2 +
xor ebx ebx +
sub dword ptr [esp+48h] 2 +
jmp loc_411155  +
***
test ebx ebx +
jz loc_4110FC  +
cmp ebx 7 +
jz loc_4111C0  +
jmp loc_411139  +
***
push ebp  +
mov eax 16h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+2Ch] +
cmp dword ptr [edi] 3 +
ja loc_411340  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+24h] +
mov eax [esp+28h] +
test ecx ecx +
mov edx [eax] +
jnz loc_411390  +
movzx eax byte ptr [edx+3] +
movzx ecx byte ptr [edx+2] +
shl eax 18h +
shl ecx 10h +
add eax ecx +
movzx ecx byte ptr [edx+1] +
shl ecx 8 +
add eax ecx +
xor ecx ecx +
movzx edx byte ptr [edx+ecx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_4113B0  +
add esp 10h +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
shl ecx 18h +
shl eax 10h +
add eax ecx +
movzx ecx byte ptr [edx+2] +
shl ecx 8 +
add eax ecx +
mov ecx 3 +
jmp loc_411369  +
***
cmp eax 7FFFFFFEh +
ja loc_41137D  +
mov esi [esp+30h] +
cmp eax 7Fh +
mov ebp [esi] +
jbe loc_411470  +
lea edx [esp+10h] +
mov ebx 1 +
jmp loc_4113D5  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_4113D1  +
movzx edi ds:byte_45E082[ecx] +
test eax edi +
jnz loc_4113D1  +
or al ds:byte_45E07D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+34h] +
mov eax [eax] +
cmp ecx eax +
ja loc_411487  +
lea ebx [esp+10h] +
cmp esi ebx +
jnb loc_411446  +
mov edx esi +
mov ebx ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ebx 1 +
mov [ebx-1] al +
lea eax [esp+10h] +
cmp edx eax +
jnz loc_411420  +
lea eax [esp+11h] +
add esi 1 +
sub eax esi +
add ebp eax +
mov eax [esp+34h] +
mov eax [eax] +
mov esi [esp+34h] +
sub eax ecx +
mov [esi] eax +
mov eax [esp+30h] +
mov [eax] ebp +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
mov eax [esp+2Ch] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_411335  +
***
mov [esp+0Fh] al +
mov eax [esp+34h] +
lea esi [esp+0Fh] +
mov ecx 1 +
mov eax [eax] +
test eax eax +
jnz loc_411417  +
mov eax 7 +
jmp loc_411335  +
***
jmp loc_4114A0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+2Ch] +
mov ebx [esp+28h] +
mov edx [eax] +
mov eax [esp+30h] +
mov ecx [eax] +
mov eax 16h +
cmp ecx 1 +
jbe loc_4114F0  +
xor eax eax +
test ebx ebx +
setz al  +
movzx eax byte ptr [edx+eax] +
shl eax 8 +
test ebx ebx +
setnz bl  +
movzx esi bl +
movzx edi byte ptr [edx+esi] +
add edi eax +
mov eax 2Ah +
lea esi [edi-0DC00h] +
cmp esi 3FFh +
ja loc_4114F8  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [edi-0D800h] +
cmp eax 3FFh +
ja loc_4115B0  +
cmp ecx 3 +
mov eax 16h +
jbe loc_4114F0  +
test bl bl +
jz loc_411640  +
movzx eax byte ptr [edx+2] +
mov ecx 3 +
shl eax 8 +
movzx edx byte ptr [edx+ecx] +
add edx eax +
mov eax 2Ah +
lea ecx [edx-0DC00h] +
cmp ecx 3FFh +
ja loc_4114F0  +
mov eax [esp+34h] +
shl edi 0Ah +
lea edi [edx+edi-35FDC00h] +
mov eax [eax] +
mov [esp] eax +
mov eax edi +
mov ebx 1 +
lea edx [esp+14h] +
jmp loc_411564  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_411560  +
movzx ebp ds:byte_45E082[ecx] +
test eax ebp +
jnz loc_411560  +
or al ds:byte_45E07D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+38h] +
mov eax [eax] +
cmp ecx eax +
jbe loc_411635  +
mov eax 7 +
jmp loc_4114F0  +
***
mov eax [esp+34h] +
cmp edi 7Fh +
mov eax [eax] +
mov [esp] eax +
ja loc_411553  +
mov eax edi +
mov ecx 1 +
mov [esp+13h] al +
mov eax [esp+38h] +
lea esi [esp+13h] +
mov eax [eax] +
test eax eax +
jz loc_4115A2  +
mov edx [esp] +
mov eax esi +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+14h] +
cmp eax ebx +
jnz loc_4115E0  +
lea eax [esp+15h] +
add esi 1 +
sub eax esi +
add [esp] eax +
mov eax [esp+38h] +
mov eax [eax] +
mov esi [esp+38h] +
sub eax ecx +
cmp edi 0FFFFh +
mov [esi] eax +
mov eax [esp+34h] +
mov esi [esp] +
mov [eax] esi +
mov eax [esp+2Ch] +
jbe loc_411651  +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_4114F0  +
***
lea edx [esp+14h] +
cmp esi edx +
jb loc_4115D7  +
jmp loc_411607  +
***
movzx eax byte ptr [edx+3] +
mov ecx 2 +
shl eax 8 +
jmp loc_411527  +
***
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_4114F0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edx [ebx+2A0h] +
mov ecx [ebx+278h] +
mov esi [ebx+27Ch] +
movzx edi byte ptr [ebx+2A6h] +
cmp edx 1Fh +
jbe loc_4117D0  +
mov edx edi +
mov eax offset aUtf32be +
test dl dl +
mov edx offset aUtf32le +
cmovz eax edx +
mov edx offset aUtf8 +
test ecx ecx +
cmovz ecx edx +
test esi esi +
cmovz esi eax +
mov [esp] edx +
lea eax [esp+10h] +
mov edx ebx +
call sub_410430  +
mov eax [esp+10h] +
mov ecx offset aUtf8 +
mov edx ebx +
mov [ebx+118h] eax +
mov eax [esp+14h] +
mov [ebx+11Ch] eax +
mov eax [ebx+298h] +
mov [ebx+120h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_410430  +
mov eax [esp+10h] +
mov [ebx+124h] eax +
mov eax [esp+14h] +
mov [ebx+128h] eax +
mov eax [ebx+298h] +
mov [ebx+12Ch] eax +
mov eax edi +
test al al +
jz loc_4117F4  +
mov ecx offset aUtf16be +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_410430  +
mov eax [esp+10h] +
mov ecx offset aUtf32be +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_410430  +
mov eax [esp+10h] +
mov ecx esi +
mov edx ebx +
mov [ebx+13Ch] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+144h] 20h +
mov [ebx+140h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_410430  +
mov eax [esp+10h] +
mov [ebx+148h] eax +
mov eax [esp+14h] +
mov [ebx+14Ch] eax +
mov eax [ebx+2A0h] +
mov [ebx+150h] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp edx 0Fh +
mov eax offset aUtf8 +
jbe loc_4116AD  +
mov edx edi +
mov eax offset aUtf16be +
test dl dl +
mov edx offset aUtf16le +
cmovz eax edx +
jmp loc_4116AD  +
***
mov ecx offset aUtf16le +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_410430  +
mov eax [esp+10h] +
mov ecx offset aUtf32le +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
jmp loc_411765  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+34h] +
mov esi [esp+30h] +
cmp ebx 7Eh +
ja loc_4118E0  +
mov dword ptr [esp] 1 +
mov [esp+13h] bl +
mov dword ptr [esp+18h] 1 +
call sub_435ED0  +
mov edx [esi+11Ch] +
lea ecx [esp+14h] +
mov dword ptr [esp+1Ch] 0 +
mov [esp+14h] eax +
mov eax [esi+118h] +
mov [esp+0Ch] ecx +
lea ecx [esp+13h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
test al al +
jz loc_411904  +
cmp dword ptr [esp+1Ch] 1 +
jz loc_411924  +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xLxI +
mov dword ptr [esp+4] 4 +
call sub_41ECD0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xL_0 +
mov dword ptr [esp+4] 4 +
call sub_41ECD0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aConvertingToEx +
mov dword ptr [esp+4] 4 +
call sub_41EFD0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+14h] +
movzx ebx byte ptr [edx] +
mov [esp] edx +
call free  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] 40h +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 8 +
call sub_435ED0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
retn   +
***
sub esp 18h +
mov edx [ecx+4] +
mov eax [ecx+8] +
cmp edx eax +
jge loc_4119C0  +
mov eax [ecx] +
lea ecx [edx+1] +
mov [ebx+4] ecx +
mov ebx [esp+18h+arg_4] +
mov ecx [esp+18h+arg_0] +
mov [eax+edx*8+4] ebx +
mov [eax+edx*8] ecx +
add esp 18h +
pop ebx  +
retn 8  +
lea edx [eax+eax] +
mov [ecx+8] edx +
mov edx [ecx] +
shl eax 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_435F50  +
mov edx [ebx+4] +
mov [ebx] eax +
jmp loc_4119A2  +
***
push edi  +
mov edi ecx +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
test eax eax +
jle loc_411A20  +
mov eax [ebx] +
cmp eax 60000000h +
ja loc_411A07  +
mov ecx [ebx+4] +
add ecx eax +
mov [ebx] ecx +
mov [esp+28h+var_28] eax +
mov ecx edi +
add esi 1 +
mov [esp+28h+var_24] eax +
call sub_411990  +
sub esp 8 +
cmp esi [ebp+arg_0] +
jnz loc_4119F7  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_18] +
mov ebx [esp+2Ch+arg_1C] +
mov eax [eax] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+248h] 0 +
jnz loc_411B60  +
cmp byte ptr [eax+268h] 0 +
jz loc_411C83  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+28Ah] 0 +
jle loc_411B60  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aC99SUniversalC +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
mov eax [esp+2Ch+var_10] +
movzx edx byte ptr [eax-1] +
mov eax 4 +
cmp dl 75h +
jz loc_411ACE  +
cmp dl 55h +
mov al 8 +
jz loc_411ACE  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aIn_cpp_valid_u +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
mov eax 4 +
mov ebp [esp+2Ch+var_10] +
xor edi edi +
mov [esp+2Ch+var_14] eax +
movzx edx byte ptr [ebp+0] +
test byte ptr ds:(word_4660A0+1)[edx+edx] 1 +
jz loc_411B26  +
add ebp 1 +
test ebx ebx +
jz loc_411B09  +
test esi esi +
jz loc_411E6E  +
mov ecx [ebx] +
cmp ecx 60000000h +
ja loc_411B06  +
mov eax [ebx+4] +
add eax ecx +
mov [ebx] eax +
mov [esi+4] ecx +
movzx edx ds:byte_467C40[edx] +
shl edi 4 +
add edi edx +
sub [esp+2Ch+var_14] 1 +
jz loc_411BB0  +
cmp ebp [esp+2Ch+arg_8] +
jb loc_411AD8  +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
setnz cl  +
test ebx ebx +
setnz dl  +
test cl cl +
mov eax edx +
jz loc_41200D  +
test dl dl +
jz loc_41200D  +
mov eax [esp+2Ch+arg_14] +
mov dword ptr [eax] 0 +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jz loc_411A94  +
mov edi [esp+2Ch+arg_C] +
test edi edi +
jnz loc_411A94  +
mov eax [esp+2Ch+var_10] +
movzx eax byte ptr [eax-1] +
mov [esp+2Ch+var_24] offset aTheMeaningOfCI +
mov [esp+2Ch+var_28] 6 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41ED10  +
jmp loc_411A94  +
mov eax [esp+2Ch+arg_C] +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
test eax eax +
setnz al  +
sub esi 2 +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
cmp edi 9Fh +
jbe loc_411C26  +
test edi edi +
js loc_411BE4  +
lea edx [edi-0D800h] +
cmp edx 7FFh +
ja loc_411C42  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset a_SIsNotAValidU +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_20] ebp +
mov eax [esp+2Ch+arg_0] +
mov edi 1 +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
mov eax [esp+2Ch+arg_14] +
mov [eax] edi +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+248h] 0 +
jnz loc_411BD2  +
cmp edi 24h +
jz loc_411BD2  +
cmp edi 40h +
jz loc_411BD2  +
cmp edi 60h +
jnz loc_411BE4  +
cmp edi 24h +
jz loc_411CA0  +
test al al +
jz loc_411C13  +
cmp edi 10FFFFh +
jbe loc_411CE0  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalChara +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
jmp loc_411C13  +
mov [esp+2Ch+var_24] offset aUniversalCha_0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
jmp loc_411A94  +
test al al +
jz loc_411C13  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+262h] 0 +
jz loc_411CE0  +
cmp byte ptr [eax+264h] 0 +
jz loc_411CC8  +
cmp byte ptr [eax+0Ah] 0 +
jz loc_411EAD  +
mov eax [esp+2Ch+arg_10] +
mov edi 24h +
mov dword ptr [eax] 24h +
mov byte ptr [eax+4] 0 +
jmp loc_411C13  +
xor edx edx +
mov ecx 73Ch +
lea eax [edx+ecx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
cmp ds:dword_45E0A4[eax*8] edi +
jb loc_411DE0  +
cmp edx eax +
mov ecx eax +
jnz loc_411CE7  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_411DF5  +
mov eax [esp+2Ch+arg_0] +
mov ecx 8 +
cmp byte ptr [eax+274h] 0 +
jnz loc_411D43  +
cmp byte ptr [eax+268h] 0 +
mov cl 1 +
jnz loc_411D43  +
cmp byte ptr [eax+248h] 0 +
jz loc_411DF5  +
mov cl 4 +
movzx eax ds:word_45E0A0[edx*8] +
test ax cx +
jz loc_411C57  +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+274h] 0 +
jnz loc_411E64  +
mov ebx [esp+2Ch+arg_0] +
mov ecx eax +
xor esi esi +
and ecx 2 +
cmp byte ptr [ebx+268h] 0 +
cmovnz esi ecx +
movzx ebx ds:byte_45E0A2[edx*8] +
test bl bl +
jz loc_411DFF  +
mov ecx [esp+2Ch+arg_10] +
cmp bl [ecx+4] +
jnb loc_411DFF  +
mov dword ptr [ecx+8] 3 +
mov eax [esp+2Ch+arg_10] +
test si si +
mov [eax+4] bl +
jz loc_411C13  +
cmp [esp+2Ch+arg_C] 1 +
jnz loc_411C13  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalCha_1 +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
jmp loc_411C13  +
lea edx [eax+1] +
cmp ecx edx +
jnz loc_411CE7  +
nop   +
lea esi [esi+0] +
jmp loc_411D06  +
mov ecx 0Dh +
jmp loc_411D43  +
test ah 1 +
jz loc_411E8A  +
mov eax [esp+2Ch+arg_10] +
mov ecx [eax] +
lea eax [edi-1161h] +
cmp eax 14h +
mov [esp+2Ch+var_10] eax +
ja loc_411ED1  +
sub ecx 1100h +
cmp ecx 12h +
lea eax [edi-11A8h] +
ja loc_411E51  +
cmp eax 1Ah +
jbe loc_411F05  +
cmp [esp+2Ch+var_10] 14h +
jbe loc_411F05  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
test bl bl +
jnz loc_411D96  +
mov eax [esp+2Ch+arg_10] +
mov [eax] edi +
jmp loc_411D96  +
mov esi eax +
and esi 10h +
jmp loc_411D7A  +
mov [esp+2Ch+var_24] offset a_cpp_valid_ucn +
mov [esp+2Ch+var_28] 434h +
mov [esp+2Ch+var_2C] offset a____GccLibcppC +
call sub_405910  +
test al 80h +
jnz loc_411E51  +
test al 40h +
jz loc_411F1E  +
mov ecx [esp+2Ch+arg_10] +
mov eax 1 +
mov edx [ecx+8] +
test edx edx +
cmovg eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_411E51  +
mov byte ptr [eax+264h] 0 +
mov [esp+2Ch+var_24] offset aInIdentifierOr +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
jmp loc_411CC8  +
lea eax [edi-11A8h] +
cmp eax 1Ah +
ja loc_411F3F  +
sub ecx 0AC00h +
cmp ecx 2BA3h +
ja loc_411E51  +
mov eax ecx +
mov edx 24924925h +
shr eax 2 +
mul  edx +
imul edx edx +
cmp ecx edx +
jnz loc_411E51  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_411E51  +
test al 20h +
jz loc_411FFD  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_411E51  +
cmp edi 338h +
jz loc_411E51  +
ja loc_4124AF  +
cmp edi 311h +
jz loc_41249C  +
lea esi [esi+0] +
ja loc_4123BC  +
cmp edi 307h +
jz loc_412375  +
ja loc_413345  +
cmp edi 302h +
jz loc_4132FC  +
jbe loc_413DE7  +
cmp edi 304h +
jz loc_412313  +
jb loc_4121D1  +
cmp edi 306h +
jnz loc_41212B  +
cmp ecx 3A5h +
jz loc_411E32  +
ja loc_412095  +
cmp ecx 65h +
jz loc_411E32  +
ja loc_41205F  +
cmp ecx 49h +
lea esi [esi+0] +
jz loc_411E32  +
ja loc_41203F  +
cmp ecx 45h +
nop   +
lea esi [esi+0] +
jz loc_411E32  +
cmp ecx 47h +
jz loc_411E32  +
cmp ecx 41h +
jnz loc_411E51  +
jmp loc_411E32  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
jmp loc_411E51  +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
sub esi 2 +
test cl cl +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
jz loc_411BCA  +
mov eax ebp +
sub eax esi +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_24] offset aIncompleteUniv +
jmp loc_411BFA  +
cmp ecx 55h +
jz loc_411E32  +
cmp ecx 61h +
jz loc_411E32  +
cmp ecx 4Fh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 75h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
ja loc_4120DE  +
cmp ecx 69h +
jz loc_411E32  +
cmp ecx 6Fh +
nop   +
jz loc_411E32  +
cmp ecx 67h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 430h +
jz loc_411E32  +
ja loc_412150  +
cmp ecx 410h +
jz loc_411E32  +
ja loc_412105  +
cmp ecx 3B9h +
jz loc_411E32  +
cmp ecx 3C5h +
jz loc_411E32  +
cmp ecx 3B1h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jz loc_411E32  +
ja loc_412186  +
sub ecx 228h +
cmp ecx 1 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 418h +
jz loc_411E32  +
ja loc_41221B  +
sub ecx 415h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] offset aCharacterXMigh +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
jmp loc_411E51  +
cmp ecx 443h +
jz loc_411E32  +
lea esi [esi+0] +
jbe loc_4121A8  +
cmp ecx 1FB3h +
jz loc_411E32  +
nop   +
ja loc_412197  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 399h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FBCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 435h +
jb loc_411E51  +
cmp ecx 436h +
jbe loc_411E32  +
cmp ecx 438h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 76h +
ja loc_412265  +
cmp ecx 75h +
lea esi [esi+0] +
jnb loc_411E32  +
cmp ecx 56h +
ja loc_41223D  +
cmp ecx 55h +
nop   +
jnb loc_411E32  +
cmp ecx 49h +
jz loc_411E32  +
nop   +
ja loc_41222C  +
cmp ecx 41h +
jz loc_411E32  +
cmp ecx 45h +
nop   +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 423h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 65h +
jz loc_411E32  +
ja loc_4122AB  +
cmp ecx 59h +
nop   +
lea esi [esi+0] +
jz loc_411E32  +
cmp ecx 61h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 0F4h +
jz loc_411E32  +
ja loc_4122E7  +
cmp ecx 0CAh +
jz loc_411E32  +
nop   +
jbe loc_4122CD  +
cmp ecx 0E2h +
jz loc_411E32  +
cmp ecx 0EAh +
jz loc_411E32  +
cmp ecx 0D4h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 69h +
nop   +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 79h +
jz loc_411E32  +
cmp ecx 0C2h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1A1h +
ja loc_413E6B  +
cmp ecx 1A0h +
jnb loc_411E32  +
sub ecx 102h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0F6h +
ja loc_413A70  +
cmp ecx 0F5h +
jnb loc_411E32  +
cmp ecx 69h +
jz loc_411E32  +
ja loc_413A35  +
cmp ecx 4Fh +
lea esi [esi+0] +
jz loc_411E32  +
jbe loc_413A0C  +
cmp ecx 61h +
nop   +
jz loc_411E32  +
ja loc_4139F5  +
cmp ecx 55h +
nop   +
jz loc_411E32  +
cmp ecx 59h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 70h +
ja loc_41252F  +
cmp ecx 6Dh +
jnb loc_411E32  +
cmp ecx 54h +
ja loc_412479  +
cmp ecx 52h +
jnb loc_411E32  +
cmp ecx 41h +
jb loc_411E51  +
cmp ecx 49h +
jbe loc_411E32  +
sub ecx 4Dh +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 326h +
jz loc_413D6C  +
ja loc_413D09  +
cmp edi 31Bh +
jz loc_414CA5  +
jbe loc_413985  +
cmp edi 324h +
jz loc_413275  +
lea esi [esi+0] +
ja loc_413221  +
cmp edi 323h +
jnz loc_41212B  +
cmp ecx 17Eh +
ja loc_412E28  +
cmp ecx 174h +
jnb loc_411E32  +
cmp ecx 0F6h +
ja loc_412DCC  +
cmp ecx 0F1h +
jnb loc_411E32  +
cmp ecx 69h +
ja loc_4125B8  +
cmp ecx 68h +
jnb loc_411E32  +
cmp ecx 4Fh +
ja loc_412599  +
cmp ecx 4Bh +
jnb loc_411E32  +
cmp ecx 45h +
ja loc_412566  +
cmp ecx 44h +
jnb loc_411E32  +
sub ecx 41h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 57h +
jb loc_411E51  +
cmp ecx 5Ah +
jbe loc_411E32  +
sub ecx 61h +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 41h +
cmp ecx 34h +
ja loc_411E51  +
jmp ds:off_45D678[ecx*4]  +
cmp edi 0C56h +
jz loc_412B04  +
nop   +
lea esi [esi+0] +
ja loc_412AB1  +
cmp edi 9BEh +
jz loc_412D26  +
ja loc_4126B5  +
cmp edi 653h +
jz loc_412765  +
jbe loc_4126FC  +
cmp edi 655h +
jz loc_4127F7  +
jb loc_41267A  +
cmp edi 93Ch +
jnz loc_41212B  +
sub ecx 915h +
cmp ecx 1Eh +
ja loc_411E51  +
mov edx 1 +
shl edx cl +
and edx 4C483087h +
jz loc_411E51  +
jmp loc_411E32  +
cmp ecx 15Bh +
ja loc_412577  +
cmp ecx 15Ah +
jnb loc_411E32  +
cmp ecx 72h +
jb loc_411E51  +
cmp ecx 74h +
jbe loc_411E32  +
sub ecx 77h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 48h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 17Fh +
jz loc_411E32  +
ja loc_4125EF  +
sub ecx 160h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 5Ah +
ja loc_412605  +
cmp ecx 59h +
jnb loc_411E32  +
sub ecx 52h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0CFh +
ja loc_41264E  +
cmp ecx 0C8h +
jnb loc_411E32  +
cmp ecx 77h +
ja loc_412628  +
cmp ecx 72h +
jnb loc_411E32  +
sub ecx 6Bh +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1E62h +
cmp ecx 1 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 61h +
jb loc_411E51  +
cmp ecx 62h +
jbe loc_411E32  +
sub ecx 64h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 79h +
jb loc_411E51  +
cmp ecx 7Ah +
jbe loc_411E32  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0DDh +
ja loc_41281B  +
cmp ecx 0D9h +
jnb loc_411E32  +
sub ecx 0D1h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 64Ah +
jz loc_411E32  +
jbe loc_412D37  +
cmp ecx 6D2h +
jz loc_411E32  +
cmp ecx 6D5h +
jz loc_411E32  +
cmp ecx 6C1h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp edi 0B56h +
jz loc_412DAA  +
jbe loc_412D85  +
cmp edi 0BBEh +
jz loc_412D71  +
cmp edi 0BD7h +
jz loc_412D54  +
cmp edi 0B57h +
jnz loc_41212B  +
cmp ecx 0B47h +
jz loc_411E32  +
jmp loc_411E51  +
cmp edi 342h +
jz loc_412847  +
cmp edi 345h +
jnz loc_41212B  +
cmp ecx 1F0Fh +
ja loc_4127B6  +
cmp ecx 1F00h +
jnb loc_411E32  +
cmp ecx 3AEh +
jz loc_411E32  +
ja loc_412787  +
cmp ecx 397h +
jz loc_411E32  +
jbe loc_412776  +
cmp ecx 3A9h +
jz loc_411E32  +
cmp ecx 3ACh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 627h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 391h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B7h +
jz loc_411E32  +
jbe loc_4128AF  +
cmp ecx 3C9h +
jz loc_411E32  +
cmp ecx 3CEh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F74h +
jz loc_411E32  +
jbe loc_412A45  +
cmp ecx 1FB6h +
jz loc_411E32  +
jbe loc_412A33  +
cmp ecx 1FC6h +
jz loc_411E32  +
cmp ecx 1FF6h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 622h +
cmp ecx 5 +
ja loc_411E51  +
mov edx 1 +
shl edx cl +
and edx 23h +
jz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0E0h +
jb loc_411E51  +
cmp ecx 0E5h +
jbe loc_411E32  +
sub ecx 0E8h +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F59h +
jz loc_411E32  +
ja loc_412946  +
cmp ecx 1F09h +
ja loc_412902  +
cmp ecx 1F08h +
jnb loc_411E32  +
cmp ecx 3C5h +
jz loc_411E32  +
ja loc_4128D6  +
cmp ecx 3B1h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
jbe loc_4128C5  +
cmp ecx 3B7h +
jz loc_411E32  +
cmp ecx 3B9h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B1h +
jnz loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 0A8h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3C9h +
jb loc_411E51  +
cmp ecx 3CBh +
jbe loc_411E32  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F31h +
ja loc_41299E  +
cmp ecx 1F30h +
jnb loc_411E32  +
cmp ecx 1F20h +
jb loc_411E51  +
cmp ecx 1F21h +
jbe loc_411E32  +
sub ecx 1F28h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F99h +
ja loc_4129F6  +
cmp ecx 1F98h +
jnb loc_411E32  +
cmp ecx 1F81h +
ja loc_4129CA  +
cmp ecx 1F80h +
jnb loc_411E32  +
cmp ecx 1F60h +
jb loc_411E51  +
cmp ecx 1F61h +
jbe loc_411E32  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F38h +
jb loc_411E51  +
cmp ecx 1F39h +
jbe loc_411E32  +
sub ecx 1F50h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F88h +
jb loc_411E51  +
cmp ecx 1F89h +
jbe loc_411E32  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jz loc_411E32  +
jbe loc_412A85  +
cmp ecx 1FC3h +
jz loc_411E32  +
jbe loc_412A71  +
cmp ecx 1FF3h +
jz loc_411E32  +
cmp ecx 1FFEh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F7Ch +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 1F20h +
jb loc_411E51  +
cmp ecx 1F2Fh +
jbe loc_411E32  +
sub ecx 1F60h +
cmp ecx 10h +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FBFh +
jnz loc_411E51  +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 1FA0h +
jb loc_411E51  +
cmp ecx 1FA1h +
jbe loc_411E32  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 0DCFh +
jz loc_412C87  +
lea esi [esi+0] +
jbe loc_412C49  +
cmp edi 3099h +
jz loc_412B99  +
ja loc_412B3C  +
cmp edi 102Eh +
jz loc_412B2B  +
cmp edi 1B35h +
jz loc_412B15  +
cmp edi 0DDFh +
jnz loc_41212B  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0C46h +
jz loc_411E32  +
jmp loc_411E51  +
sub ecx 1B05h +
cmp ecx 3Dh +
ja loc_411E51  +
jmp ds:off_45D74C[ecx*4]  +
cmp ecx 1025h +
jz loc_411E32  +
jmp loc_411E51  +
cmp edi 110BAh +
jz loc_412C05  +
cmp edi 11127h +
jz loc_412BF0  +
cmp edi 309Ah +
jnz loc_41212B  +
cmp ecx 307Bh +
jz loc_411E32  +
ja loc_412BC5  +
cmp ecx 3072h +
jz loc_411E32  +
jbe loc_412BB2  +
cmp ecx 3075h +
jz loc_411E32  +
cmp ecx 3078h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 3046h +
cmp ecx 0B7h +
ja loc_411E51  +
jmp ds:off_45D844[ecx*4]  +
cmp ecx 306Fh +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 30D5h +
jz loc_411E32  +
ja loc_412C2C  +
cmp ecx 30CFh +
jz loc_411E32  +
cmp ecx 30D2h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 11131h +
cmp ecx 1 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
sub ecx 11099h +
cmp ecx 0Ch +
ja loc_411E51  +
mov edx 1 +
shl edx cl +
and edx 1005h +
jz loc_411E51  +
jmp loc_411E32  +
cmp ecx 30D8h +
jz loc_411E32  +
cmp ecx 30DBh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp edi 0CD6h +
jz loc_412D04  +
jbe loc_412CC9  +
cmp edi 0D57h +
jz loc_412CB8  +
cmp edi 0DCAh +
jz loc_412C9B  +
cmp edi 0D3Eh +
jnz loc_41212B  +
sub ecx 0D46h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0DD9h +
jz loc_411E32  +
cmp ecx 0DDCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0D46h +
jz loc_411E32  +
jmp loc_411E51  +
cmp edi 0CC2h +
jz loc_412D15  +
cmp edi 0CD5h +
jnz loc_41212B  +
sub ecx 0CBFh +
cmp ecx 0Bh +
ja loc_411E51  +
mov edx 1 +
shl edx cl +
and edx 881h +
jz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0CC6h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 0CC6h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 9C7h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 627h +
jz loc_411E32  +
cmp ecx 648h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0B92h +
jz loc_411E32  +
cmp ecx 0BC6h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 0BC6h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 9D7h +
jz loc_412DBB  +
cmp edi 0B3Eh +
jnz loc_41212B  +
cmp ecx 0B47h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 0B47h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 9C7h +
jz loc_411E32  +
jmp loc_411E51  +
cmp ecx 13Eh +
ja loc_41317D  +
cmp ecx 13Dh +
jnb loc_411E32  +
cmp ecx 11Bh +
ja loc_413155  +
cmp ecx 11Ah +
jnb loc_411E32  +
cmp ecx 103h +
ja loc_412E94  +
cmp ecx 0FFh +
jnb loc_411E32  +
sub ecx 0F9h +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E45h +
ja loc_412F45  +
cmp ecx 1E44h +
jnb loc_411E32  +
cmp ecx 227h +
ja loc_412F01  +
cmp ecx 226h +
jnb loc_411E32  +
cmp ecx 1E1h +
ja loc_412ED5  +
cmp ecx 1DEh +
jnb loc_411E32  +
cmp ecx 1B0h +
ja loc_412EC0  +
cmp ecx 1AFh +
jnb loc_411E32  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 10Eh +
jb loc_411E51  +
cmp ecx 10Fh +
jbe loc_411E32  +
sub ecx 112h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 1FBh +
ja loc_412F99  +
cmp ecx 1F8h +
jnb loc_411E32  +
sub ecx 1E8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E17h +
ja loc_4130D5  +
cmp ecx 1E14h +
jnb loc_411E32  +
cmp ecx 1E03h +
ja loc_4130C1  +
cmp ecx 1E02h +
jnb loc_411E32  +
sub ecx 22Ah +
cmp ecx 9 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E99h +
ja loc_413001  +
cmp ecx 1E97h +
jnb loc_411E32  +
cmp ecx 1E67h +
ja loc_412FD9  +
cmp ecx 1E64h +
jnb loc_411E32  +
cmp ecx 1E59h +
ja loc_412FC5  +
cmp ecx 1E58h +
jnb loc_411E32  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 200h +
jb loc_411E51  +
cmp ecx 217h +
jbe loc_411E32  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E7Dh +
ja loc_413041  +
cmp ecx 1E78h +
jnb loc_411E32  +
sub ecx 1E6Ah +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1ED7h +
ja loc_413099  +
cmp ecx 1ECEh +
jnb loc_411E32  +
cmp ecx 1EB5h +
ja loc_41306D  +
cmp ecx 1EAEh +
jnb loc_411E32  +
sub ecx 1EA2h +
cmp ecx 9 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E80h +
jb loc_411E51  +
cmp ecx 1E87h +
jbe loc_411E32  +
sub ecx 1E8Eh +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EBAh +
jb loc_411E51  +
cmp ecx 1EC5h +
jbe loc_411E32  +
sub ecx 1EC8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EEFh +
ja loc_4130FD  +
cmp ecx 1EE6h +
jnb loc_411E32  +
sub ecx 1EDAh +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E27h +
ja loc_413129  +
cmp ecx 1E26h +
jnb loc_411E32  +
sub ecx 1E22h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EF2h +
jb loc_411E51  +
cmp ecx 1EF3h +
jbe loc_411E32  +
sub ecx 1EF6h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E2Eh +
jb loc_411E51  +
cmp ecx 1E31h +
jbe loc_411E32  +
sub ecx 1E3Eh +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 12Dh +
ja loc_4131B9  +
cmp ecx 128h +
jnb loc_411E32  +
sub ecx 124h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 155h +
ja loc_4131F5  +
cmp ecx 154h +
jnb loc_411E32  +
cmp ecx 148h +
ja loc_4131DF  +
cmp ecx 147h +
jnb loc_411E32  +
sub ecx 143h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 130h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 139h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 161h +
ja loc_4132BC  +
cmp ecx 160h +
jnb loc_411E32  +
sub ecx 158h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E1h +
ja loc_413C35  +
cmp ecx 1DEh +
jnb loc_411E32  +
cmp ecx 0E5h +
ja loc_413C09  +
cmp ecx 0E0h +
jnb loc_411E32  +
cmp ecx 61h +
jz loc_411E32  +
ja loc_4132E8  +
cmp ecx 41h +
jnz loc_411E51  +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 171h +
ja loc_413C89  +
cmp ecx 168h +
jnb loc_411E32  +
cmp ecx 0DCh +
ja loc_413C75  +
cmp ecx 0D9h +
jnb loc_411E32  +
cmp ecx 55h +
jz loc_411E32  +
cmp ecx 75h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 164h +
jb loc_411E51  +
cmp ecx 165h +
jbe loc_411E32  +
sub ecx 168h +
cmp ecx 9 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 65h +
jz loc_411E32  +
ja loc_4147A5  +
cmp ecx 53h +
nop   +
jz loc_411E32  +
ja loc_41395A  +
cmp ecx 45h +
nop   +
jz loc_411E32  +
ja loc_4133B5  +
cmp ecx 41h +
nop   +
jz loc_411E32  +
cmp ecx 43h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp edi 30Ah +
jz loc_4135CC  +
jbe loc_413452  +
cmp edi 30Ch +
jz loc_4134B5  +
jb loc_41341D  +
cmp edi 30Fh +
jnz loc_41212B  +
cmp ecx 61h +
jz loc_411E32  +
nop   +
ja loc_4133EC  +
cmp ecx 49h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
jbe loc_4133D5  +
cmp ecx 52h +
jz loc_411E32  +
cmp ecx 55h +
nop   +
jz loc_411E32  +
cmp ecx 4Fh +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 47h +
jb loc_411E51  +
cmp ecx 4Ah +
jbe loc_411E32  +
cmp ecx 4Fh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 41h +
jz loc_411E32  +
cmp ecx 45h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 72h +
nop   +
jz loc_411E32  +
ja loc_4134F5  +
cmp ecx 69h +
nop   +
jz loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
cmp ecx 65h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
jbe loc_4135DF  +
cmp ecx 423h +
jz loc_411E32  +
cmp ecx 443h +
jz loc_411E32  +
cmp ecx 75h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp edi 308h +
jz loc_413693  +
cmp edi 309h +
jnz loc_41212B  +
cmp ecx 79h +
jz loc_411E32  +
ja loc_41364D  +
cmp ecx 59h +
lea esi [esi+0] +
jz loc_411E32  +
ja loc_413625  +
cmp ecx 49h +
nop   +
jz loc_411E32  +
ja loc_41360B  +
cmp ecx 41h +
nop   +
jz loc_411E32  +
cmp ecx 45h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 61h +
jz loc_411E32  +
nop   +
jbe loc_41355F  +
cmp ecx 75h +
jbe loc_413537  +
cmp ecx 0FCh +
jz loc_411E32  +
ja loc_41351A  +
cmp ecx 7Ah +
jz loc_411E32  +
cmp ecx 0DCh +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 75h +
jz loc_411E32  +
nop   +
jb loc_411E51  +
sub ecx 474h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1B7h +
jz loc_411E32  +
cmp ecx 292h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 72h +
jnb loc_411E32  +
cmp ecx 6Ch +
ja loc_41358B  +
cmp ecx 67h +
jnb loc_411E32  +
sub ecx 63h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 4Ch +
ja loc_4135AD  +
cmp ecx 4Bh +
jnb loc_411E32  +
cmp ecx 45h +
ja loc_41359C  +
cmp ecx 43h +
jnb loc_411E32  +
cmp ecx 41h +
nop   +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 47h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 55h +
ja loc_4135FB  +
cmp ecx 52h +
jnb loc_411E32  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 41h +
cmp ecx 38h +
ja loc_411E51  +
jmp ds:off_45DB24[ecx*4]  +
cmp ecx 4Fh +
jz loc_411E32  +
cmp ecx 55h +
nop   +
lea esi [esi+0] +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 5Ah +
nop   +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 4Fh +
nop   +
jz loc_411E32  +
cmp ecx 55h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 69h +
jz loc_411E32  +
nop   +
ja loc_4136E5  +
cmp ecx 61h +
jz loc_411E32  +
cmp ecx 65h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0F4h +
jz loc_411E32  +
ja loc_41378D  +
cmp ecx 0D4h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
ja loc_413770  +
cmp ecx 0C2h +
jz loc_411E32  +
cmp ecx 0CAh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B9h +
jz loc_411E32  +
nop   +
ja loc_4137B9  +
cmp ecx 69h +
ja loc_413735  +
cmp ecx 68h +
jnb loc_411E32  +
cmp ecx 4Fh +
jz loc_411E32  +
jbe loc_413715  +
cmp ecx 59h +
ja loc_4136FC  +
cmp ecx 57h +
nop   +
lea esi [esi+0] +
jnb loc_411E32  +
cmp ecx 55h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
cmp ecx 75h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 61h +
nop   +
jz loc_411E32  +
cmp ecx 65h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 45h +
jz loc_411E32  +
nop   +
ja loc_41382B  +
cmp ecx 41h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 0D5h +
jz loc_411E32  +
jbe loc_413850  +
cmp ecx 16Bh +
ja loc_41380E  +
cmp ecx 16Ah +
jnb loc_411E32  +
cmp ecx 0F5h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0E2h +
jz loc_411E32  +
cmp ecx 0EAh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1A1h +
ja loc_41383C  +
cmp ecx 1A0h +
jnb loc_411E32  +
sub ecx 102h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 430h +
jz loc_411E32  +
ja loc_4138B9  +
cmp ecx 418h +
ja loc_41388E  +
cmp ecx 415h +
jnb loc_411E32  +
cmp ecx 3D2h +
jz loc_411E32  +
jbe loc_41386C  +
cmp ecx 406h +
jz loc_411E32  +
cmp ecx 410h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 399h +
jz loc_411E32  +
cmp ecx 3A5h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 48h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 75h +
ja loc_41387D  +
cmp ecx 74h +
jnb loc_411E32  +
cmp ecx 6Fh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3C5h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 77h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 427h +
jz loc_411E32  +
ja loc_4138F2  +
cmp ecx 41Eh +
jz loc_411E32  +
cmp ecx 423h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 44Bh +
jz loc_411E32  +
ja loc_413925  +
cmp ecx 43Eh +
jz loc_411E32  +
jbe loc_41390F  +
cmp ecx 443h +
jz loc_411E32  +
cmp ecx 447h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 42Bh +
jz loc_411E32  +
cmp ecx 42Dh +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 435h +
cmp ecx 3 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 4D9h +
ja loc_4147E5  +
cmp ecx 4D8h +
jnb loc_411E32  +
cmp ecx 44Dh +
jz loc_411E32  +
cmp ecx 456h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 5Ah +
ja loc_4158F1  +
cmp ecx 59h +
jnb loc_411E32  +
cmp ecx 55h +
nop   +
jz loc_411E32  +
cmp ecx 57h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp edi 313h +
jz loc_414AA3  +
cmp edi 314h +
jnz loc_41212B  +
cmp ecx 3B7h +
jz loc_411E32  +
ja loc_414A66  +
cmp ecx 39Fh +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
ja loc_414B14  +
cmp ecx 395h +
jz loc_411E32  +
jbe loc_4148B6  +
cmp ecx 397h +
jz loc_411E32  +
cmp ecx 399h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 65h +
jz loc_411E32  +
cmp ecx 67h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 45h +
nop   +
jz loc_411E32  +
jbe loc_413ABF  +
cmp ecx 47h +
nop   +
jz loc_411E32  +
cmp ecx 49h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 0C6h +
jz loc_411E32  +
ja loc_413BB5  +
cmp ecx 75h +
jz loc_411E32  +
jbe loc_413BA6  +
cmp ecx 79h +
jz loc_411E32  +
cmp ecx 0C4h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B9h +
jz loc_411E32  +
lea esi [esi+0] +
ja loc_413B14  +
cmp ecx 22Fh +
ja loc_413AE9  +
cmp ecx 22Eh +
jnb loc_411E32  +
cmp ecx 1EBh +
ja loc_413AD5  +
cmp ecx 1EAh +
jnb loc_411E32  +
cmp ecx 0FCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 41h +
jnz loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
sub ecx 226h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 399h +
jz loc_411E32  +
jbe loc_413B53  +
cmp ecx 3A5h +
jz loc_411E32  +
cmp ecx 3B1h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E37h +
ja loc_413B82  +
cmp ecx 1E36h +
jnb loc_411E32  +
cmp ecx 423h +
jz loc_411E32  +
ja loc_413B65  +
cmp ecx 3C5h +
jz loc_411E32  +
cmp ecx 418h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 438h +
jz loc_411E32  +
cmp ecx 443h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jz loc_411E32  +
nop   +
ja loc_413BE0  +
sub ecx 1E5Ah +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 6Fh +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 0DCh +
jz loc_411E32  +
jbe loc_413BF5  +
cmp ecx 0E4h +
jz loc_411E32  +
cmp ecx 0E6h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FBCh +
jnz loc_411E51  +
lea esi [esi+0] +
jmp loc_411E32  +
sub ecx 0D5h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 100h +
jb loc_411E51  +
cmp ecx 103h +
jbe loc_411E32  +
sub ecx 1CDh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 227h +
ja loc_413CB1  +
cmp ecx 226h +
jnb loc_411E32  +
cmp ecx 1FAh +
jb loc_411E51  +
cmp ecx 1FBh +
jbe loc_411E32  +
sub ecx 200h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 217h +
ja loc_413CDD  +
cmp ecx 214h +
jnb loc_411E32  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EA2h +
jb loc_411E51  +
cmp ecx 1EABh +
jbe loc_411E32  +
sub ecx 1EAEh +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E78h +
jb loc_411E51  +
cmp ecx 1E7Bh +
jbe loc_411E32  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 32Dh +
jz loc_41561A  +
jbe loc_414836  +
cmp edi 330h +
jz loc_415687  +
cmp edi 331h +
jz loc_414A04  +
cmp edi 32Eh +
jnz loc_41212B  +
cmp ecx 21Fh +
ja loc_413DBB  +
cmp ecx 21Eh +
jnb loc_411E32  +
cmp ecx 68h +
jz loc_411E32  +
ja loc_413DA7  +
cmp ecx 48h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 165h +
ja loc_41577F  +
cmp ecx 164h +
jnb loc_411E32  +
cmp ecx 74h +
ja loc_4151FB  +
cmp ecx 73h +
jnb loc_411E32  +
sub ecx 53h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 124h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E22h +
jb loc_411E51  +
cmp ecx 1E23h +
jbe loc_411E32  +
sub ecx 1E26h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 300h +
jz loc_414178  +
cmp edi 301h +
jnz loc_41212B  +
cmp ecx 39Fh +
jz loc_411E32  +
ja loc_414101  +
cmp ecx 0CAh +
jz loc_411E32  +
lea esi [esi+0] +
ja loc_413F0F  +
cmp ecx 63h +
jz loc_411E32  +
nop   +
ja loc_413ECD  +
cmp ecx 50h +
ja loc_413E9B  +
cmp ecx 4Bh +
nop   +
jnb loc_411E32  +
cmp ecx 45h +
jz loc_411E32  +
nop   +
ja loc_413E7F  +
cmp ecx 41h +
jz loc_411E32  +
cmp ecx 43h +
nop   +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 47h +
jz loc_411E32  +
cmp ecx 49h +
nop   +
lea esi [esi+0] +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 57h +
nop   +
jz loc_411E32  +
ja loc_413F6C  +
cmp ecx 52h +
nop   +
jb loc_411E51  +
cmp ecx 53h +
jbe loc_411E32  +
cmp ecx 55h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 75h +
jz loc_411E32  +
ja loc_414095  +
cmp ecx 70h +
nop   +
ja loc_41407F  +
cmp ecx 6Bh +
jnb loc_411E32  +
cmp ecx 67h +
jz loc_411E32  +
cmp ecx 69h +
jz loc_411E32  +
cmp ecx 65h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 103h +
ja loc_413FDB  +
cmp ecx 102h +
jnb loc_411E32  +
cmp ecx 0E7h +
ja loc_413FAA  +
cmp ecx 0E5h +
jnb loc_411E32  +
cmp ecx 0D5h +
jbe loc_413F8D  +
cmp ecx 0DCh +
jz loc_411E32  +
cmp ecx 0E2h +
jz loc_411E32  +
cmp ecx 0D8h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 59h +
nop   +
jb loc_411E51  +
cmp ecx 5Ah +
jbe loc_411E32  +
cmp ecx 61h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0D4h +
jnb loc_411E32  +
cmp ecx 0CFh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0F5h +
ja loc_414017  +
cmp ecx 0F4h +
jnb loc_411E32  +
cmp ecx 0EAh +
jz loc_411E32  +
cmp ecx 0EFh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1A1h +
ja loc_414048  +
cmp ecx 1A0h +
jnb loc_411E32  +
cmp ecx 14Dh +
ja loc_414034  +
cmp ecx 14Ch +
jnb loc_411E32  +
sub ecx 112h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0F8h +
jz loc_411E32  +
cmp ecx 0FCh +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 168h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jz loc_411E32  +
jbe loc_4140C7  +
cmp ecx 397h +
jz loc_411E32  +
cmp ecx 399h +
jz loc_411E32  +
cmp ecx 395h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 72h +
cmp ecx 1 +
ja loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 0A8h +
jz loc_411E32  +
ja loc_4140DB  +
cmp ecx 77h +
jz loc_411E32  +
lea esi [esi+0] +
jb loc_411E51  +
sub ecx 79h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0C2h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 0C5h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F39h +
ja loc_414735  +
cmp ecx 1F38h +
jnb loc_411E32  +
cmp ecx 43Ah +
jz loc_411E32  +
ja loc_4146F5  +
cmp ecx 3BFh +
jz loc_411E32  +
ja loc_414202  +
cmp ecx 3B1h +
jz loc_411E32  +
jbe loc_4141E5  +
cmp ecx 3B7h +
jz loc_411E32  +
cmp ecx 3B9h +
jz loc_411E32  +
cmp ecx 3B5h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 415h +
jz loc_411E32  +
ja loc_414387  +
cmp ecx 0FCh +
jz loc_411E32  +
ja loc_414333  +
cmp ecx 6Fh +
nop   +
ja loc_41429D  +
cmp ecx 6Eh +
jnb loc_411E32  +
cmp ecx 55h +
jz loc_411E32  +
jbe loc_41427B  +
cmp ecx 61h +
jz loc_411E32  +
ja loc_41423B  +
cmp ecx 57h +
lea esi [esi+0] +
jz loc_411E32  +
cmp ecx 59h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 3A5h +
jz loc_411E32  +
cmp ecx 3A9h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3D2h +
jz loc_411E32  +
nop   +
jbe loc_414255  +
cmp ecx 41Ah +
jz loc_411E32  +
cmp ecx 433h +
jz loc_411E32  +
cmp ecx 413h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 65h +
nop   +
jz loc_411E32  +
cmp ecx 69h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 3C5h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 49h +
jz loc_411E32  +
ja loc_4142D5  +
cmp ecx 41h +
jz loc_411E32  +
cmp ecx 45h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0CAh +
jz loc_411E32  +
ja loc_414303  +
cmp ecx 79h +
nop   +
jz loc_411E32  +
ja loc_4142E6  +
cmp ecx 75h +
nop   +
lea esi [esi+0] +
jz loc_411E32  +
cmp ecx 77h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0A8h +
jz loc_411E32  +
cmp ecx 0C2h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0E2h +
jz loc_411E32  +
nop   +
ja loc_4143FE  +
cmp ecx 0D4h +
jz loc_411E32  +
cmp ecx 0DCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 397h +
jz loc_411E32  +
nop   +
jbe loc_414463  +
cmp ecx 3B5h +
jz loc_411E32  +
ja loc_414438  +
cmp ecx 3A5h +
jz loc_411E32  +
ja loc_41441B  +
cmp ecx 399h +
jz loc_411E32  +
cmp ecx 39Fh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F51h +
ja loc_414595  +
cmp ecx 1F50h +
jnb loc_411E32  +
cmp ecx 1F21h +
ja loc_414551  +
cmp ecx 1F20h +
jnb loc_411E32  +
cmp ecx 1F09h +
ja loc_414525  +
cmp ecx 1F08h +
jnb loc_411E32  +
cmp ecx 438h +
jz loc_411E32  +
ja loc_41450F  +
cmp ecx 418h +
jz loc_411E32  +
cmp ecx 435h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0EAh +
jz loc_411E32  +
cmp ecx 0F4h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3A9h +
jz loc_411E32  +
cmp ecx 3B1h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3BFh +
jz loc_411E32  +
ja loc_414493  +
cmp ecx 3B7h +
jz loc_411E32  +
cmp ecx 3B9h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 14Dh +
jbe loc_4144D7  +
cmp ecx 1B0h +
ja loc_4144BA  +
cmp ecx 1AFh +
jnb loc_411E32  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 3C5h +
jz loc_411E32  +
nop   +
jb loc_411E51  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jz loc_411E32  +
cmp ecx 395h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 14Ch +
jnb loc_411E32  +
cmp ecx 102h +
jb loc_411E51  +
cmp ecx 103h +
jbe loc_411E32  +
sub ecx 112h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 1F10h +
jb loc_411E51  +
cmp ecx 1F11h +
jbe loc_411E32  +
sub ecx 1F18h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F39h +
ja loc_4145EB  +
cmp ecx 1F38h +
jnb loc_411E32  +
cmp ecx 1F28h +
jb loc_411E51  +
cmp ecx 1F29h +
jbe loc_411E32  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F99h +
jbe loc_41465C  +
cmp ecx 1FBCh +
jz loc_411E32  +
jbe loc_414634  +
cmp ecx 1FCCh +
jz loc_411E32  +
nop   +
jbe loc_414617  +
cmp ecx 1FFCh +
jz loc_411E32  +
cmp ecx 1FFEh +
jz loc_411E32  +
cmp ecx 1FF3h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F40h +
jb loc_411E51  +
cmp ecx 1F41h +
jbe loc_411E32  +
sub ecx 1F48h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FBFh +
jz loc_411E32  +
cmp ecx 1FC3h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FA9h +
ja loc_4146A1  +
cmp ecx 1FA8h +
jnb loc_411E32  +
sub ecx 1FA0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F98h +
jnb loc_411E32  +
cmp ecx 1F81h +
ja loc_4146C9  +
cmp ecx 1F80h +
jnb loc_411E32  +
cmp ecx 1F61h +
ja loc_4146B5  +
cmp ecx 1F60h +
jnb loc_411E32  +
cmp ecx 1F59h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jnz loc_411E51  +
lea esi [esi+0] +
jmp loc_411E32  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F88h +
jb loc_411E51  +
cmp ecx 1F89h +
jbe loc_411E32  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F19h +
ja loc_4148C7  +
cmp ecx 1F18h +
jnb loc_411E32  +
cmp ecx 1F09h +
ja loc_414791  +
cmp ecx 1F08h +
jnb loc_411E32  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F91h +
ja loc_414954  +
cmp ecx 1F90h +
jnb loc_411E32  +
cmp ecx 1F61h +
ja loc_41492C  +
cmp ecx 1F60h +
jnb loc_411E32  +
cmp ecx 1F49h +
ja loc_4148EF  +
cmp ecx 1F48h +
jnb loc_411E32  +
sub ecx 1F40h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1F10h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 7Ah +
ja loc_41480A  +
cmp ecx 79h +
lea esi [esi+0] +
jnb loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
nop   +
jbe loc_4147F9  +
cmp ecx 75h +
jz loc_411E32  +
cmp ecx 77h +
nop   +
jz loc_411E32  +
cmp ecx 73h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
sub ecx 4E8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 67h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EB9h +
ja loc_415B4A  +
cmp ecx 1EB8h +
jnb loc_411E32  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp edi 327h +
jz loc_414D88  +
cmp edi 328h +
jnz loc_41212B  +
cmp ecx 130h +
jz loc_411E32  +
ja loc_414D2C  +
cmp ecx 0DCh +
ja loc_41548F  +
cmp ecx 0D9h +
jnb loc_411E32  +
cmp ecx 69h +
jz loc_411E32  +
ja loc_414CFD  +
cmp ecx 4Fh +
jz loc_411E32  +
ja loc_414B3F  +
cmp ecx 45h +
jz loc_411E32  +
cmp ecx 49h +
jz loc_411E32  +
cmp ecx 41h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F29h +
ja loc_414918  +
cmp ecx 1F28h +
jnb loc_411E32  +
sub ecx 1F20h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F50h +
jb loc_411E51  +
cmp ecx 1F51h +
jbe loc_411E32  +
cmp ecx 1F59h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F81h +
ja loc_41499B  +
cmp ecx 1F80h +
jnb loc_411E32  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jz loc_411E32  +
jbe loc_4149D8  +
cmp ecx 1FCCh +
jz loc_411E32  +
nop   +
ja loc_4149AF  +
cmp ecx 1FBFh +
jz loc_411E32  +
cmp ecx 1FC3h +
jz loc_411E32  +
cmp ecx 1FBCh +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 1F88h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FFCh +
jz loc_411E32  +
cmp ecx 1FFEh +
jz loc_411E32  +
cmp ecx 1FF3h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FA1h +
ja loc_4156EB  +
cmp ecx 1FA0h +
jnb loc_411E32  +
sub ecx 1F98h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 155h +
ja loc_4152BA  +
cmp ecx 154h +
jnb loc_411E32  +
cmp ecx 72h +
jz loc_411E32  +
ja loc_41526D  +
cmp ecx 54h +
nop   +
jz loc_411E32  +
ja loc_41523E  +
cmp ecx 4Ch +
nop   +
ja loc_415227  +
cmp ecx 4Bh +
jnb loc_411E32  +
cmp ecx 42h +
jz loc_411E32  +
cmp ecx 44h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jz loc_411E32  +
ja loc_414B82  +
cmp ecx 3C1h +
jz loc_411E32  +
ja loc_414AF7  +
cmp ecx 3B9h +
jz loc_411E32  +
cmp ecx 3BFh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B9h +
jz loc_411E32  +
nop   +
ja loc_414C0F  +
cmp ecx 39Fh +
jz loc_411E32  +
ja loc_414BE2  +
cmp ecx 395h +
jz loc_411E32  +
jbe loc_414BAF  +
cmp ecx 397h +
jz loc_411E32  +
cmp ecx 399h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3C5h +
jz loc_411E32  +
cmp ecx 3C9h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3A9h +
jz loc_411E32  +
ja loc_414B65  +
cmp ecx 3A1h +
jz loc_411E32  +
cmp ecx 3A5h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 61h +
jz loc_411E32  +
cmp ecx 65h +
nop   +
lea esi [esi+0] +
jz loc_411E32  +
cmp ecx 55h +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
cmp ecx 3B1h +
jz loc_411E32  +
cmp ecx 3B5h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FCCh +
jz loc_411E32  +
nop   +
ja loc_414BC5  +
cmp ecx 1FBCh +
jz loc_411E32  +
cmp ecx 1FC3h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 391h +
jnz loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 1FF3h +
jz loc_411E32  +
cmp ecx 1FFCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3B1h +
jz loc_411E32  +
nop   +
jbe loc_414C4F  +
cmp ecx 3B5h +
jz loc_411E32  +
cmp ecx 3B7h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FB3h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
ja loc_414C76  +
cmp ecx 3C1h +
jz loc_411E32  +
nop   +
jbe loc_414C65  +
cmp ecx 3C5h +
jz loc_411E32  +
cmp ecx 3C9h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 3A9h +
jnz loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 3BFh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FCCh +
jz loc_411E32  +
ja loc_415B8A  +
cmp ecx 1FBCh +
jz loc_411E32  +
cmp ecx 1FC3h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 171h +
ja loc_41555A  +
cmp ecx 168h +
jnb loc_411E32  +
cmp ecx 0DCh +
ja loc_41552E  +
cmp ecx 0D9h +
jnb loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
nop   +
ja loc_4154CB  +
cmp ecx 4Fh +
jz loc_411E32  +
cmp ecx 55h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0C5h +
ja loc_414DED  +
cmp ecx 0C0h +
jnb loc_411E32  +
cmp ecx 6Fh +
jz loc_411E32  +
cmp ecx 75h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 217h +
ja loc_414E55  +
cmp ecx 214h +
jnb loc_411E32  +
cmp ecx 1B0h +
ja loc_414E2D  +
cmp ecx 1AFh +
jnb loc_411E32  +
cmp ecx 171h +
ja loc_414E19  +
cmp ecx 168h +
jnb loc_411E32  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 148h +
ja loc_414F6D  +
cmp ecx 147h +
jnb loc_411E32  +
cmp ecx 0CBh +
ja loc_414F1D  +
cmp ecx 0C8h +
jnb loc_411E32  +
cmp ecx 54h +
ja loc_414FF5  +
cmp ecx 52h +
jnb loc_411E32  +
cmp ecx 48h +
ja loc_414EFD  +
cmp ecx 47h +
jnb loc_411E32  +
sub ecx 43h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0C8h +
jb loc_411E51  +
cmp ecx 0CFh +
jbe loc_411E32  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E1h +
ja loc_414E91  +
cmp ecx 1DEh +
jnb loc_411E32  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E1Bh +
ja loc_414ED1  +
cmp ecx 1E14h +
jnb loc_411E32  +
cmp ecx 231h +
ja loc_414EBD  +
cmp ecx 22Ah +
jnb loc_411E32  +
sub ecx 226h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FAh +
jb loc_411E51  +
cmp ecx 1FBh +
jbe loc_411E32  +
sub ecx 200h +
cmp ecx 0Fh +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1E00h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E53h +
ja loc_415029  +
cmp ecx 1E4Ch +
jnb loc_411E32  +
sub ecx 1E2Ch +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 4Bh +
jb loc_411E51  +
cmp ecx 4Ch +
jbe loc_411E32  +
cmp ecx 4Eh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 121h +
ja loc_415077  +
cmp ecx 11Ah +
jnb loc_411E32  +
cmp ecx 0F1h +
jz loc_411E32  +
ja loc_414FC9  +
cmp ecx 0D1h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 0E8h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 21Bh +
ja loc_41511F  +
cmp ecx 218h +
jnb loc_411E32  +
cmp ecx 1E9h +
ja loc_4150F7  +
cmp ecx 1E6h +
jnb loc_411E32  +
cmp ecx 15Dh +
ja loc_41509F  +
cmp ecx 158h +
jnb loc_411E32  +
sub ecx 154h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 106h +
jb loc_411E51  +
cmp ecx 10Fh +
jbe loc_411E32  +
sub ecx 112h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 6Ch +
ja loc_415055  +
cmp ecx 6Bh +
lea esi [esi+0] +
jnb loc_411E32  +
cmp ecx 63h +
jb loc_411E51  +
cmp ecx 65h +
jbe loc_411E32  +
sub ecx 67h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E72h +
jb loc_411E51  +
cmp ecx 1E7Bh +
jbe loc_411E32  +
sub ecx 1EA0h +
cmp ecx 51h +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 6Eh +
jz loc_411E32  +
nop   +
jb loc_411E51  +
sub ecx 72h +
cmp ecx 2 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 13Ah +
ja loc_4150CB  +
cmp ecx 139h +
jnb loc_411E32  +
sub ecx 124h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 160h +
jb loc_411E51  +
cmp ecx 161h +
jbe loc_411E32  +
sub ecx 164h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 13Dh +
jb loc_411E51  +
cmp ecx 13Eh +
jbe loc_411E32  +
sub ecx 143h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F9h +
ja loc_41515F  +
cmp ecx 1F8h +
jnb loc_411E32  +
sub ecx 1F4h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E2Bh +
ja loc_4151B7  +
cmp ecx 1E2Ah +
jnb loc_411E32  +
cmp ecx 1E0Fh +
ja loc_41518B  +
cmp ecx 1E0Ah +
jnb loc_411E32  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 204h +
jb loc_411E51  +
cmp ecx 207h +
jbe loc_411E32  +
sub ecx 210h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E12h +
jb loc_411E51  +
cmp ecx 1E1Bh +
jbe loc_411E32  +
sub ecx 1E20h +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E71h +
ja loc_4157EF  +
cmp ecx 1E58h +
jnb loc_411E32  +
cmp ecx 1E30h +
jb loc_411E51  +
cmp ecx 1E3Dh +
jbe loc_411E32  +
sub ecx 1E44h +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 15Ah +
jb loc_411E51  +
cmp ecx 15Dh +
jbe loc_411E32  +
sub ecx 160h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 4Eh +
jz loc_411E32  +
cmp ecx 52h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 68h +
jz loc_411E32  +
ja loc_41530E  +
cmp ecx 62h +
jz loc_411E32  +
cmp ecx 64h +
jz loc_411E32  +
cmp ecx 5Ah +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 13Ah +
ja loc_41542A  +
cmp ecx 139h +
jnb loc_411E32  +
cmp ecx 0F1h +
jz loc_411E32  +
ja loc_415401  +
cmp ecx 7Ah +
jz loc_411E32  +
cmp ecx 0D1h +
jz loc_411E32  +
cmp ecx 74h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E03h +
ja loc_41536A  +
cmp ecx 1E02h +
jnb loc_411E32  +
cmp ecx 1E9h +
ja loc_415342  +
cmp ecx 1E8h +
jnb loc_411E32  +
cmp ecx 165h +
ja loc_41532E  +
cmp ecx 164h +
jnb loc_411E32  +
sub ecx 158h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 6Bh +
jb loc_411E51  +
cmp ecx 6Ch +
jbe loc_411E32  +
cmp ecx 6Eh +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 179h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 213h +
ja loc_4153B2  +
cmp ecx 210h +
jnb loc_411E32  +
sub ecx 1F8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E45h +
ja loc_4153D9  +
cmp ecx 1E44h +
jnb loc_411E32  +
cmp ecx 1E23h +
jz loc_411E32  +
jbe loc_4153C5  +
cmp ecx 1E27h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 1E30h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 21Fh +
jnz loc_411E51  +
nop   +
jmp loc_411E32  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E6Bh +
ja loc_415452  +
cmp ecx 1E6Ah +
jnb loc_411E32  +
sub ecx 1E58h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 10Eh +
jb loc_411E51  +
cmp ecx 10Fh +
jbe loc_411E32  +
cmp ecx 125h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 144h +
ja loc_41547B  +
cmp ecx 143h +
jnb loc_411E32  +
sub ecx 13Dh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E90h +
jb loc_411E51  +
cmp ecx 1E91h +
jbe loc_411E32  +
cmp ecx 1E97h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 147h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0FCh +
ja loc_415502  +
cmp ecx 0F9h +
jnb loc_411E32  +
cmp ecx 0EFh +
ja loc_4154EE  +
cmp ecx 0E8h +
jnb loc_411E32  +
sub ecx 0E0h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 75h +
jz loc_411E32  +
jb loc_411E51  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 117h +
ja loc_41559A  +
cmp ecx 112h +
jnb loc_411E32  +
sub ecx 100h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 0FCh +
ja loc_4155C6  +
cmp ecx 0F9h +
jnb loc_411E32  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 231h +
ja loc_4155EE  +
cmp ecx 22Ah +
jnb loc_411E32  +
cmp ecx 20Fh +
ja loc_4155DA  +
cmp ecx 20Ch +
jnb loc_411E32  +
sub ecx 1D1h +
cmp ecx 0Bh +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 11Ah +
jb loc_411E51  +
cmp ecx 11Bh +
jbe loc_411E32  +
sub ecx 128h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 214h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E7Bh +
ja loc_415B5E  +
cmp ecx 1E72h +
jnb loc_411E32  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 13Eh +
ja loc_41598A  +
cmp ecx 13Dh +
jnb loc_411E32  +
cmp ecx 0D1h +
jz loc_411E32  +
ja loc_415946  +
cmp ecx 65h +
ja loc_41591C  +
cmp ecx 64h +
jnb loc_411E32  +
cmp ecx 4Ch +
jz loc_411E32  +
nop   +
jbe loc_41590B  +
cmp ecx 4Eh +
jz loc_411E32  +
nop   +
jb loc_411E51  +
sub ecx 54h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 171h +
ja loc_4157AB  +
cmp ecx 168h +
jnb loc_411E32  +
cmp ecx 0EFh +
ja loc_41573B  +
cmp ecx 0E8h +
jnb loc_411E32  +
cmp ecx 69h +
jz loc_411E32  +
ja loc_415715  +
cmp ecx 49h +
jz loc_411E32  +
nop   +
lea esi [esi+0] +
jbe loc_4156FF  +
cmp ecx 55h +
jz loc_411E32  +
cmp ecx 65h +
nop   +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 45h +
jnz loc_411E51  +
nop   +
lea esi [esi+0] +
jmp loc_411E32  +
cmp ecx 0CFh +
ja loc_415844  +
cmp ecx 0C8h +
jnb loc_411E32  +
cmp ecx 75h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 11Bh +
ja loc_41581B  +
cmp ecx 11Ah +
jnb loc_411E32  +
cmp ecx 0F9h +
jb loc_411E51  +
cmp ecx 0FCh +
jbe loc_411E32  +
sub ecx 112h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E67h +
ja loc_415858  +
cmp ecx 1E64h +
jnb loc_411E32  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E17h +
ja loc_4158AD  +
cmp ecx 1E14h +
jnb loc_411E32  +
cmp ecx 1DCh +
ja loc_415881  +
cmp ecx 1D3h +
jnb loc_411E32  +
sub ecx 1CFh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E96h +
jb loc_411E51  +
cmp ecx 1E97h +
jbe loc_411E32  +
sub ecx 1EB8h +
cmp ecx 0Fh +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 128h +
jb loc_411E51  +
cmp ecx 12Dh +
jbe loc_411E32  +
cmp ecx 130h +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E6Ah +
jb loc_411E51  +
cmp ecx 1E6Bh +
jbe loc_411E32  +
cmp ecx 1E97h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 204h +
jb loc_411E51  +
cmp ecx 20Bh +
jbe loc_411E32  +
sub ecx 214h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EC5h +
ja loc_415BA7  +
cmp ecx 1EBAh +
jnb loc_411E32  +
cmp ecx 1E2Eh +
jb loc_411E51  +
cmp ecx 1E2Fh +
jbe loc_411E32  +
sub ecx 1E78h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 61h +
jz loc_411E32  +
cmp ecx 63h +
lea esi [esi+0] +
jnz loc_411E51  +
jmp loc_411E32  +
sub ecx 44h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 75h +
nop   +
ja loc_4159DE  +
cmp ecx 74h +
jnb loc_411E32  +
cmp ecx 6Ch +
jz loc_411E32  +
cmp ecx 6Eh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 10Fh +
ja loc_415AFA  +
cmp ecx 10Eh +
jnb loc_411E32  +
cmp ecx 0EBh +
ja loc_415AD3  +
cmp ecx 0E8h +
jnb loc_411E32  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 217h +
ja loc_415A2E  +
cmp ecx 214h +
jnb loc_411E32  +
cmp ecx 171h +
ja loc_415A06  +
cmp ecx 168h +
jnb loc_411E32  +
cmp ecx 148h +
ja loc_4159F2  +
cmp ecx 147h +
jnb loc_411E32  +
sub ecx 143h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 0C8h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 164h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1F9h +
ja loc_415A6A  +
cmp ecx 1F8h +
jnb loc_411E32  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1E6Bh +
ja loc_415A92  +
cmp ecx 1E6Ah +
jnb loc_411E32  +
cmp ecx 1E17h +
ja loc_415A7E  +
cmp ecx 1E14h +
jnb loc_411E32  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 204h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1E44h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EC5h +
ja loc_415B22  +
cmp ecx 1EBAh +
jnb loc_411E32  +
cmp ecx 1E78h +
jb loc_411E51  +
cmp ecx 1E7Bh +
jbe loc_411E32  +
cmp ecx 1E97h +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 0F1h +
jz loc_411E32  +
nop   +
jb loc_411E51  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 11Bh +
ja loc_415B36  +
cmp ecx 11Ah +
jnb loc_411E32  +
sub ecx 112h +
cmp ecx 5 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 139h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
sub ecx 1ECCh +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1ECCh +
jb loc_411E51  +
cmp ecx 1ED9h +
jbe loc_411E32  +
sub ecx 1EE4h +
cmp ecx 3 +
ja loc_411E51  +
jmp loc_411E32  +
cmp ecx 1FF3h +
jz loc_411E32  +
cmp ecx 1FFCh +
jnz loc_411E51  +
jmp loc_411E32  +
cmp ecx 1EC8h +
jb loc_411E51  +
cmp ecx 1EC9h +
jbe loc_411E32  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_411E51  +
jmp loc_411E32  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 0DCh +
mov edx eax +
mov esi [ebp+arg_8] +
mov [ebp+var_C0] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_98] eax +
lea eax [ebp+var_44] +
call sub_410310  +
mov eax [ebp+var_44] +
test esi esi +
mov edx [ebp+arg_C] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_40] +
mov [ebp+var_90] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_B0] eax +
setnz al  +
test edx edx +
setnz cl  +
mov [ebp+var_A6] al +
xor al cl +
mov [ebp+var_A5] cl +
mov [ebp+var_A7] al +
jnz loc_416822  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_415C76  +
cmp dword ptr [ebx] 100h +
mov eax 100h +
cmovnb eax [ebx] +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_4C] eax +
call sub_435ED0  +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
mov edi [ebp+var_C0] +
test edi edi +
jz loc_4167B4  +
mov edi [ebp+var_B0] +
mov eax 1 +
mov edx 0FFFFFFFFh +
mov [ebp+var_B4] esi +
mov [ebp+var_AC] ebx +
mov [ebp+var_B8] 0 +
mov ecx edi +
shl eax cl +
sub eax 1 +
cmp edi 1Fh +
mov edi edx +
cmovbe edi eax +
xor esi esi +
mov [ebp+var_BC] edi +
mov [ebp+var_A4] edi +
mov [ebp+var_7C] esi +
mov eax [ebp+var_7C] +
cmp [ebp+var_A6] 0 +
cmovnz eax [ebp+var_B4] +
mov [ebp+var_7C] eax +
mov eax [ebp+var_AC] +
mov esi [eax+4] +
movzx eax byte ptr [esi] +
cmp al 75h +
jz loc_416621  +
cmp al 55h +
jz loc_415CFC  +
cmp al 4Ch +
mov ecx esi +
jnz loc_415D03  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 52h +
jz loc_416537  +
cmp al 27h +
jnz loc_41671E  +
mov eax [ebp+var_7C] +
lea ebx [ecx+1] +
test eax eax +
jz loc_415D2E  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_415D2E  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_AC] +
mov eax [eax] +
lea esi [esi+eax-1] +
mov edi esi +
lea esi [esi+0] +
cmp ebx edi +
jnb loc_415EDA  +
cmp byte ptr [ebx] 5Ch +
mov esi ebx +
jnz loc_415D5A  +
jmp loc_415DCD  +
cmp byte ptr [esi] 5Ch +
jz loc_4163E0  +
add esi 1 +
cmp esi edi +
nop   +
jnz loc_415D51  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_415D95  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4166C3  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_415DC5  +
cmp [ebp+var_8C] offset loc_4103D0 +
jnz loc_4167BB  +
mov eax [ebp+var_7C] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E4] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E8] eax +
call sub_4119E0  +
sub esp 8 +
cmp edi esi +
jbe loc_415EDA  +
mov eax [ebp+arg_0] +
xor ecx ecx +
lea ebx [esi+1] +
test eax eax +
lea eax [ebp+var_50] +
cmovz eax ecx +
mov [ebp+var_88] eax +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_415E07  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_80] eax +
ja loc_415DFE  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov [ebp+var_84] eax +
movzx ecx byte ptr [esi+1] +
lea eax [ecx-22h] +
cmp al 59h +
mov byte ptr [ebp+var_6D] cl +
ja loc_415E2E  +
movzx eax al +
jmp ds:off_45DDEC[eax*4]  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_415E60  +
test byte ptr ds:word_4660A0[ecx+ecx] 0ACh +
jz loc_416413  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aUnknownEscapeS +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
nop   +
mov eax [ebp+var_88] +
test eax eax +
jz loc_415E96  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6D] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] 1 +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4163F0  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_415ECF  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_84] eax +
ja loc_415EB4  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_84] +
mov [esp+0E8h+var_E4] eax +
call sub_411990  +
sub esp 8 +
lea ebx [esi+2] +
cmp ebx edi +
jb loc_415D48  +
add [ebp+var_B8] 1 +
mov eax [ebp+var_C0] +
add [ebp+var_AC] 8 +
add [ebp+var_B4] 0Ch +
cmp [ebp+var_B8] eax +
jnz loc_415CCA  +
mov esi [ebp+var_7C] +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_415F54  +
mov ecx [ebp+var_98] +
mov eax [ecx+298h] +
lea edx [ecx+2A6h] +
mov ecx [ebp+var_B0] +
mov [esp+0E8h+var_E4] ecx +
lea ecx [ebp+var_50] +
mov [esp+0E8h+var_E8] ecx +
xor ecx ecx +
call sub_410570  +
mov eax [ebp+var_48] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call sub_435F50  +
mov ecx [ebp+arg_0] +
mov [ebp+var_50] eax +
mov [ecx+4] eax +
mov eax [ebp+var_48] +
mov [ecx] eax +
test esi esi +
jz loc_41678C  +
mov eax [esi] +
cmp eax 60000000h +
ja loc_415F6C  +
mov edx [esi+4] +
add edx eax +
mov [esi] edx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] eax +
call sub_411990  +
mov [ebp+var_A7] 1 +
movzx eax [ebp+var_A7] +
sub esp 8 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+var_7C] +
movzx eax [ebp+var_A5] +
mov edx [ebp+var_84] +
test ecx ecx +
setnz cl  +
cmp cl al +
mov byte ptr [ebp+var_94] cl +
jnz loc_416798  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4164D0  +
cmp byte ptr [ebp+var_94] 0 +
lea ebx [esi+2] +
jz loc_415FEE  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_415FEC  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov edx eax +
cmp edi ebx +
jbe loc_4166FB  +
movzx eax byte ptr [esi+2] +
movzx eax ds:byte_467C40[eax] +
cmp al 63h +
jz loc_4166FB  +
xor esi esi +
xor ecx ecx +
mov [ebp+var_9C] edi +
mov edi edx +
mov [ebp+var_A0] esi +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_94] 0 +
jz loc_41604A  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_416048  +
mov edi [ebp+var_7C] +
mov esi [edi+4] +
add esi edx +
mov edi esi +
mov esi [ebp+var_7C] +
mov [esi] edi +
mov edi edx +
mov edx ecx +
shl ecx 4 +
and edx 0F0000000h +
add ecx eax +
or [ebp+var_A0] edx +
cmp ebx [ebp+var_9C] +
jz loc_416073  +
movzx eax byte ptr [ebx] +
movzx eax ds:byte_467C40[eax] +
cmp al 63h +
jnz loc_416020  +
mov edx [ebp+var_BC] +
xor eax eax +
mov esi [ebp+var_A0] +
mov [ebp+var_94] edi +
mov edi [ebp+var_9C] +
and edx ecx +
cmp ecx edx +
setnz al  +
or eax esi +
jnz loc_41666F  +
mov esi [ebp+var_88] +
test esi esi +
jz loc_4160D6  +
mov edx [ebp+var_98] +
mov eax [edx+298h] +
add edx 2A6h +
mov [esp+0E8h+var_E8] esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_410570  +
cmp [ebp+var_A5] 0 +
jz loc_415D40  +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_E4] eax +
call sub_411990  +
sub esp 8 +
jmp loc_415D40  +
mov byte ptr [ebp+var_6D] 0Bh +
jmp loc_415E60  +
mov byte ptr [ebp+var_6D] 9 +
jmp loc_415E60  +
mov byte ptr [ebp+var_6D] 0Dh +
jmp loc_415E60  +
mov byte ptr [ebp+var_6D] 0Ah +
jmp loc_415E60  +
mov byte ptr [ebp+var_6D] 0Ch +
jmp loc_415E60  +
mov byte ptr [ebp+var_6D] 8 +
jmp loc_415E60  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4164F9  +
mov byte ptr [ebp+var_6D] 7 +
jmp loc_415E60  +
mov eax [ebp+var_80] +
mov [ebp+var_6D+1] ebx +
mov ebx [ebp+var_7C] +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_59+1] eax +
mov eax [ebp+var_84] +
test ebx ebx +
setnz cl  +
mov [ebp+var_30] 0 +
mov [ebp+var_54] eax +
movzx eax [ebp+var_A5] +
mov byte ptr [ebp+var_94] cl +
cmp cl al +
jnz loc_4167D7  +
add esi 2 +
cmp byte ptr [ebp+var_94] 0 +
mov [ebp+var_6D+1] esi +
jz loc_4161BE  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4161BB  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov [ebp+var_54] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_CC] eax +
lea eax [ebp+var_59+1] +
mov [esp+0E8h+var_D0] eax +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_D4] eax +
lea eax [ebp+var_38] +
mov [esp+0E8h+var_D8] eax +
lea eax [ebp+var_6D+1] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E8] eax +
call sub_411A30  +
mov eax [ebp+var_68] +
cmp eax 7Fh +
ja loc_416451  +
mov byte ptr [ebp+var_59] al +
mov ebx 1 +
lea edx [ebp+var_59] +
lea ecx [ebp+var_64] +
jmp loc_41621A  +
movzx eax byte ptr [edx] +
add ecx 1 +
add edx 1 +
mov [ecx-1] al +
lea eax [ebp+var_59+1] +
cmp edx eax +
jb loc_416217  +
mov eax [ebp+var_88] +
test eax eax +
jz loc_41625C  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_64] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4166A0  +
cmp byte ptr [ebp+var_94] 0 +
jz loc_41629A  +
test ebx ebx +
jle loc_41629A  +
xor esi esi +
mov [ebp+var_88] edi +
mov edi esi +
mov esi [ebp+arg_C] +
mov eax [ebp+var_59+1] +
mov ecx esi +
add edi 1 +
mov edx [ebp+var_54] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
call sub_411990  +
sub esp 8 +
cmp ebx edi +
jnz loc_416276  +
mov edi [ebp+var_88] +
mov ebx [ebp+var_6D+1] +
jmp loc_415D40  +
mov eax [ebp+var_84] +
mov edx [ebp+var_7C] +
mov [ebp+var_94] eax +
movzx eax [ebp+var_A5] +
test edx edx +
setnz dl  +
mov byte ptr [ebp+var_9C] dl +
cmp dl al +
jnz loc_416754  +
xor edx edx +
cmp edi ebx +
jbe loc_41637C  +
mov edx [ebp+var_84] +
lea eax [esi+4] +
mov [ebp+var_A0] eax +
xor eax eax +
mov [ebp+var_94] ecx +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_9C] 0 +
jz loc_416318  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_416318  +
mov esi [ebp+var_7C] +
mov ecx [esi+4] +
add ecx edx +
mov esi ecx +
mov ecx [ebp+var_7C] +
mov [ecx] esi +
mov ecx [ebp+var_94] +
cmp ebx edi +
lea eax [ecx+eax*8-30h] +
jz loc_416340  +
cmp ebx [ebp+var_A0] +
jz loc_416340  +
movzx ecx byte ptr [ebx] +
lea esi [ecx-30h] +
cmp esi 7 +
mov [ebp+var_94] ecx +
jbe loc_4162F0  +
nop   +
mov [ebp+var_94] edx +
mov edx [ebp+var_A4] +
and edx eax +
cmp eax edx +
jz loc_41637C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aOctalEscapeSeq +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
mov edx [ebp+var_9C] +
mov ecx [ebp+var_88] +
test ecx ecx +
jz loc_4160D6  +
mov esi [ebp+var_98] +
mov eax [esi+298h] +
add esi 2A6h +
mov [esp+0E8h+var_E8] ecx +
mov ecx edx +
mov edx esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_410570  +
jmp loc_4160D6  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_416516  +
mov byte ptr [ebp+var_6D] 1Bh +
jmp loc_415E60  +
cmp ebx esi +
jnb loc_415DC5  +
jmp loc_415D62  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingEsca +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41EFD0  +
jmp loc_415E96  +
lea ebx [ebp+var_38] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] offset a03o +
mov [esp+0E8h+var_E8] ebx +
call sub_450970  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ebx +
mov [esp+0E8h+var_E0] offset aUnknownEscap_0 +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
jmp loc_415E60  +
lea edx [ebp+var_59+1] +
mov ecx 1 +
mov [ebp+var_9C] edi +
jmp loc_416465  +
mov ecx ebx +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] bl +
lea esi [edx-1] +
lea ebx [ecx+1] +
ja loc_416461  +
movzx edi ds:byte_45E082[ebx] +
test eax edi +
jnz loc_416461  +
or al ds:byte_45E07D[ecx] +
cmp ebx 6 +
mov edi [ebp+var_9C] +
mov [edx-2] al +
jbe loc_4167F3  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUcnT +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41EFD0  +
jmp loc_41629A  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfXI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_9C] edx +
call sub_41ED10  +
mov edx [ebp+var_9C] +
jmp loc_415FCA  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfAI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
call sub_41ED10  +
jmp loc_41614C  +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aNonIsoStandard +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
jmp loc_4163D6  +
mov eax [ebp+var_7C] +
add ecx 2 +
test eax eax +
jz loc_41655F  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41655F  +
mov edi [ebp+var_7C] +
mov edx [edi+4] +
add eax edx +
cmp eax 60000000h +
mov [edi] eax +
ja loc_41655F  +
add eax edx +
mov [edi] eax +
mov eax [ebp+var_7C] +
mov edx ecx +
cmp byte ptr [edx] 28h +
jz loc_416584  +
add edx 1 +
test eax eax +
jz loc_416564  +
mov ebx [eax] +
cmp ebx 60000000h +
ja loc_416564  +
add ebx [eax+4] +
mov [eax] ebx +
cmp byte ptr [edx] 28h +
jnz loc_416569  +
mov eax [ebp+var_7C] +
lea ebx [edx+1] +
test eax eax +
jz loc_41659F  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_41659F  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
mov eax [ebp+var_AC] +
add esi [eax] +
mov eax ebx +
sub eax ecx +
lea edx [ebx+eax+1] +
cmp esi edx +
jb loc_4165B7  +
not eax  +
add esi eax +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_4165EA  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_4166C3  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_415EDA  +
cmp [ebp+var_8C] offset loc_4103D0 +
jnz loc_416806  +
mov eax [ebp+var_7C] +
sub esi ebx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] eax +
call sub_4119E0  +
sub esp 8 +
jmp loc_415EDA  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_416639  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_416639  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 38h +
jnz loc_415D03  +
mov ebx [ebp+var_7C] +
lea ecx [esi+2] +
test ebx ebx +
jz loc_416666  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_416666  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
movzx eax byte ptr [esi+2] +
jmp loc_415D03  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aHexEscapeSeque +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
mov edx [ebp+var_9C] +
mov ecx edx +
jmp loc_41609C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUc_0 +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41EFD0  +
jmp loc_41625C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingToEx +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41EFD0  +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call free  +
movzx eax [ebp+var_A7] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aXUsedWithNoFol +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
jmp loc_415D40  +
cmp al 22h +
jz loc_415D13  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_416770  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aMissingOpenQuo +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_41ECD0  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_4166E1  +
jmp loc_4166EC  +
mov [esp+0E8h+var_E0] offset aConvert_oct +
mov [esp+0E8h+var_E4] 540h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 64Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
mov [ebp+var_A7] 1 +
jmp loc_4166EC  +
mov [esp+0E8h+var_E0] offset aConvert_hex +
mov [esp+0E8h+var_E4] 4F9h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
xor esi esi +
jmp loc_415F04  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 66Ch +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
mov [esp+0E8h+var_E0] offset aConvert_ucn +
mov [esp+0E8h+var_E4] 48Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
sub edx 2 +
lea ecx [ebp+var_59+1] +
cmp edx ecx +
jnb loc_41622A  +
jmp loc_416212  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 641h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 5FCh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_405910  +
nop   +
push esi  +
push ebx  +
mov ebx [esp+0F0h+var_D8] +
mov esi [esp+0F0h+var_D4] +
mov eax [esp+0F0h+var_E4] +
mov edx [esp+0F0h+var_E0] +
mov ecx [esp+0F0h+var_DC] +
mov [esp+0F0h+var_D8] 0 +
mov [esp+0F0h+var_DC] 0 +
mov [esp+0F0h+var_E0] esi +
mov [esp+0F0h+var_E4] ebx +
pop ebx  +
pop esi  +
jmp sub_415BE0  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
lea eax [esp+24h+var_10] +
mov ecx [esp+24h+arg_14] +
mov edx ebx +
call sub_410310  +
mov eax offset aExecutionChara +
cmp [esp+24h+var_10] offset loc_4103D0 +
jz loc_4168B0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_10] +
mov esi [ebx+210h] +
mov dword ptr [ebx+210h] offset loc_4103C0 +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_C] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_14] +
mov [esp+24h+var_20] eax +
mov eax ebx +
call sub_415BE0  +
mov [ebx+210h] esi +
mov edx eax +
xor eax eax +
test dl dl +
mov edx offset aCpp_interpre_0 +
cmovz eax edx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_8] +
mov edx [esp+1Ch+arg_4] +
mov eax [ebx+298h] +
mov esi [ebx+120h] +
mov ebp [ebx+118h] +
mov edi [ebx+11Ch] +
mov [ebx+120h] eax +
mov eax [esp+1Ch+arg_C] +
mov dword ptr [ebx+118h] offset loc_4103D0 +
mov dword ptr [ebx+11Ch] 0FFFFFFFFh +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 3Eh +
call sub_415BE0  +
mov [ebx+118h] ebp +
mov [ebx+11Ch] edi +
mov [ebx+120h] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_4] +
mov [esp+6Ch+var_20] 0 +
mov [esp+6Ch+var_1C] 0 +
movzx eax byte ptr [eax+4] +
mov edx eax +
and edx 0FFFFFFFBh +
cmp dl 38h +
setnz bl  +
xor ecx ecx +
cmp al 3Ch +
movzx edx bl +
setz cl  +
lea edx [edx+ecx*2+2] +
cmp [esi+8] edx +
jz loc_416B27  +
mov esi [esp+6Ch+arg_4] +
mov ecx 1 +
mov [esp+6Ch+var_68] eax +
lea eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_60] 0 +
lea edx [esi+8] +
mov [esp+6Ch+var_64] 0 +
call sub_415BE0  +
test al al +
jz loc_416B46  +
test bl bl +
jz loc_416B70  +
mov eax [esp+6Ch+arg_4] +
mov edx [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+4] +
mov ecx eax +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_44] eax +
mov eax [esp+6Ch+var_1C] +
mov [esp+6Ch+var_40] eax +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A6h] +
mov [esp+6Ch+var_31] al +
lea eax [esp+6Ch+var_18] +
call sub_410310  +
mov esi [esp+6Ch+arg_0] +
mov eax [esp+6Ch+var_10] +
mov esi [esi+298h] +
cmp eax 1Fh +
mov [esp+6Ch+var_48] eax +
mov [esp+6Ch+var_54] esi +
ja loc_416C80  +
movzx ecx byte ptr [esp+6Ch+var_48] +
mov eax 1 +
shl eax cl +
sub eax 1 +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] eax +
jbe loc_416C93  +
mov ebp 0FFFFFFFFh +
mov eax [esp+6Ch+var_48] +
xor edx edx +
mov ecx [esp+6Ch+var_44] +
div  [esp+6Ch+var_54] +
lea esi [eax+eax] +
sub ecx esi +
test eax eax +
mov [esp+6Ch+var_38] esi +
jz loc_416CA7  +
mov edi [esp+6Ch+var_40] +
lea esi [ecx+eax] +
xor ebx ebx +
mov [esp+6Ch+var_50] eax +
xor edx edx +
movzx eax [esp+6Ch+var_31] +
add ecx edi +
add esi edi +
mov [esp+6Ch+var_4C] ecx +
jmp loc_416B1D  +
mov edi [esp+6Ch+var_4C] +
movzx edi byte ptr [edi+edx] +
movzx ecx byte ptr [esp+6Ch+var_54] +
and edi ebp +
add edx 1 +
sub esi 1 +
shl ebx cl +
mov ecx ebx +
mov ebx edi +
or ebx ecx +
cmp edx [esp+6Ch+var_50] +
jz loc_416CB0  +
test al al +
jnz loc_416AF6  +
movzx edi byte ptr [esi-1] +
jmp loc_416AFE  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aEmptyCharacter +
mov [esp+6Ch+var_68] 3 +
mov [esp+6Ch+var_6C] eax +
call sub_41ECD0  +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov edi [esp+6Ch+var_20] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+298h] +
mov eax [eax+29Ch] +
mov [esp+6Ch+var_50] eax +
div  ecx +
cmp ecx 1Fh +
mov [esp+6Ch+var_54] eax +
ja loc_416C73  +
mov ebp 1 +
shl ebp cl +
sub ebp 1 +
sub edi 1 +
jz loc_416E12  +
xor edx edx +
xor eax eax +
jmp loc_416BC2  +
mov edx ebx +
movzx ebx byte ptr [esi+eax] +
and ebx ebp +
cmp ecx 1Fh +
ja loc_416BD1  +
shl edx cl +
or ebx edx +
add eax 1 +
cmp eax edi +
jnz loc_416BC0  +
cmp [esp+6Ch+var_54] edi +
jb loc_416D37  +
cmp edi 1 +
jbe loc_416DB0  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_50] +
cmp byte ptr [eax+259h] 0 +
jnz loc_416DE4  +
xor eax eax +
mov byte ptr [esp+6Ch+var_54] 0 +
cmp ecx 1Fh +
ja loc_416C37  +
mov edx 1 +
mov ebp edx +
shl ebp cl +
sub ebp 1 +
cmp byte ptr [esp+6Ch+var_54] 0 +
jnz loc_416D30  +
sub ecx 1 +
shl edx cl +
test ebx edx +
jz loc_416D30  +
not ebp  +
or ebx ebp +
mov ecx [esp+6Ch+arg_8] +
mov [ecx] edi +
mov edi [esp+6Ch+arg_C] +
mov [edi] eax +
mov edi [esp+6Ch+arg_4] +
mov eax ebx +
cmp [edi+0Ch] esi +
jz loc_416B62  +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_54] ebx +
call free  +
mov eax [esp+6Ch+var_54] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp 0FFFFFFFFh +
jmp loc_416BAA  +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] 0FFFFFFFFh +
ja loc_416AB4  +
movzx ecx byte ptr [esp+6Ch+var_54] +
mov eax 1 +
shl eax cl +
lea ebp [eax-1] +
jmp loc_416AB9  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [esp+6Ch+var_44] +
cmp [esp+6Ch+var_38] eax +
mov esi [esp+6Ch+var_40] +
jb loc_416D80  +
mov eax [esp+6Ch+var_3C] +
sub eax 3Ah +
cmp [esp+6Ch+var_48] 1Fh +
ja loc_416CED  +
cmp eax 1 +
jbe loc_416CE9  +
mov edi [esp+6Ch+arg_0] +
cmp byte ptr [edi+2A5h] 0 +
jz loc_416DC7  +
and ebx [esp+6Ch+var_30] +
cmp eax 1 +
jbe loc_416D21  +
mov eax [esp+6Ch+arg_0] +
cmp byte ptr [eax+2A5h] 0 +
jnz loc_416D21  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_416C49  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 1 +
jmp loc_416D0F  +
and ebx ebp +
jmp loc_416C37  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_50] ecx +
mov [esp+6Ch+var_6C] eax +
call sub_41ECD0  +
mov ecx [esp+6Ch+var_50] +
cmp [esp+6Ch+var_54] 1 +
jbe loc_416DA8  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov ecx [eax+29Ch] +
jmp loc_416C03  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_41ECD0  +
mov esi [esp+6Ch+var_1C] +
jmp loc_416CC2  +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A4h] +
mov byte ptr [esp+6Ch+var_54] al +
jmp loc_416C0A  +
mov edx [esp+6Ch+var_48] +
sub edx 1 +
bt ebx edx +
jnb loc_416CE9  +
mov eax [esp+6Ch+var_30] +
not eax  +
or ebx eax +
jmp loc_416D02  +
mov [esp+6Ch+var_64] offset aMultiCharacter +
mov [esp+6Ch+var_68] 5 +
mov [esp+6Ch+var_6C] eax +
call sub_41ED10  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+29Ch] +
jmp loc_416C03  +
xor ebx ebx +
jmp loc_416DB0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_8] +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea eax [esp+48h+var_29] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_8] +
and [ebp+var_30] 0FFFFFFF0h +
test eax eax +
jz loc_41702C  +
mov eax [ebp+var_30] +
xor edi edi +
mov [ebp-2Ch] eax +
jmp loc_416E77  +
mov esi [ebp-2Ch] +
add edi 1 +
mov [esi] al +
lea eax [esi+1] +
mov [ebp-2Ch] eax +
cmp [ebp+arg_8] edi +
jbe loc_416F46  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax+edi] +
cmp al 5Ch +
jnz loc_416E60  +
mov ecx [ebp+arg_4] +
lea esi [edi+2] +
lea eax [edi+1] +
cmp byte ptr [ecx+edi+1] 75h +
setnz cl  +
cmp [ebp+arg_8] esi +
movzx ecx cl +
lea ecx ds:4[ecx*4] +
jbe loc_417009  +
mov edx [ebp+arg_4] +
movzx ebx byte ptr [edx+edi+2] +
test byte ptr ds:(word_4660A0+1)[ebx+ebx] 1 +
jz loc_417009  +
xor edx edx +
jmp loc_416ED7  +
test ecx ecx +
jz loc_416EF0  +
mov ebx [ebp+arg_4] +
movzx ebx byte ptr [ebx+eax] +
test byte ptr ds:(word_4660A0+1)[ebx+ebx] 1 +
jz loc_416EF0  +
mov esi eax +
movzx eax ds:byte_467C40[ebx] +
shl edx 4 +
sub ecx 1 +
add edx eax +
lea eax [esi+1] +
cmp [ebp+arg_8] eax +
mov edi eax +
ja loc_416EC0  +
cmp edx 24h +
jnz loc_416F06  +
mov eax [ebp-2Ch] +
mov byte ptr [eax] 24h +
add eax 1 +
mov [ebp-2Ch] eax +
jmp loc_416E6E  +
cmp edx 7Fh +
ja loc_416F78  +
mov eax [ebp+var_30] +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jnz loc_417021  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] offset aConvertingUcnT +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] eax +
call sub_41EFD0  +
mov eax [ebp-2Ch] +
sub eax [ebp+var_30] +
mov edi [ebp+arg_0] +
mov edx [edi+234h] +
mov [esp+48h+var_40] eax +
mov eax [ebp+var_30] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
call sub_41F480  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_19+1] +
mov edi 1 +
mov [ebp+var_34] eax +
jmp loc_416F89  +
mov edi ebx +
mov ecx eax +
mov ebx edx +
and ebx 3Fh +
shr edx 6 +
or ebx 0FFFFFF80h +
cmp edx 3Eh +
mov [ecx-1] bl +
lea eax [ecx-1] +
lea ebx [edi+1] +
ja loc_416F85  +
movzx esi ds:byte_45E082[ebx] +
test edx esi +
jnz loc_416F85  +
or dl ds:byte_45E07D[edi] +
lea esi [ecx-2] +
mov eax [ebp+var_34] +
mov [ebp+var_34] esi +
mov [ecx-2] dl +
mov edx [ebp+var_30] +
sub edx [ebp-2Ch] +
add edx [ebp+arg_8] +
cmp edx ebx +
jb loc_416F1F  +
lea edi [ebp+var_19+1] +
cmp esi edi +
jnb loc_417002  +
mov edx [ebp+var_34] +
mov ecx [ebp-2Ch] +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx-1] +
add ecx 1 +
lea edi [ebp+var_19+1] +
cmp edx edi +
mov [ecx-1] bl +
jnz loc_416FE0  +
mov edi [ebp+var_34] +
lea edx [ebp+var_19+2] +
add edi 1 +
sub edx edi +
add [ebp-2Ch] edx +
mov edi eax +
jmp loc_416E6E  +
mov esi eax +
mov eax [ebp+var_30] +
xor edx edx +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jz loc_416F1F  +
lea eax [ebp+var_19] +
mov [ebp+var_34] eax +
lea eax [esi+1] +
jmp loc_416FD7  +
xor eax eax +
jmp loc_416F4C  +
***
push edi  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
mov [ecx+8] ebx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_40E7E0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] eax +
call sub_40EC70  +
mov [esp+18h+var_18] ebx +
mov [esi] eax +
mov [esp+18h+var_14] eax +
call sub_40E480  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
mov [esi+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov edx [ecx] +
cmp edx 60000000h +
ja loc_417261  +
mov eax [ecx+4] +
add eax edx +
mov [ecx] eax +
mov eax edx +
retn   +
***
mov eax [esp+8] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D67Fh +
mov eax 1 +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
test eax eax +
jnz loc_4172A9  +
jmp loc_4172C2  +
mov ebx [ebx] +
add esi 1 +
test ebx ebx +
jz loc_4172C2  +
cmp byte ptr [ebx+8] 0 +
jz loc_4172A0  +
mov eax [ebx+0Ch] +
call sub_417290  +
mov ebx [ebx] +
add esi eax +
add esi 1 +
test ebx ebx +
jnz loc_4172A9  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_423B30  +
movzx ecx byte ptr [eax+4] +
cmp cl 35h +
jz loc_417320  +
test byte ptr [eax+6] 10h +
jnz loc_4173A0  +
cmp cl 16h +
jz loc_417354  +
mov [esp+18h+var_10] offset aMacroNamesMust +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41ECD0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
mov eax esi +
test al al +
jz loc_417345  +
cmp [ebx+2ACh] edx +
jz loc_4173C8  +
cmp [ebx+2BCh] edx +
jz loc_41737E  +
cmp [ebx+2C0h] edx +
jz loc_41737E  +
xor eax eax +
test byte ptr [edx+14h] 80h +
cmovz eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aNoMacroNameGiv +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_41ECD0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset a__has_include_ +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41ECD0  +
xor eax eax +
jmp loc_417313  +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+18h+var_10] offset aSCannotBeUsedA +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_41ECD0  +
xor eax eax +
jmp loc_417313  +
mov [esp+18h+var_10] offset aDefinedCannotB +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_41ECD0  +
xor eax eax +
jmp loc_417313  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_423B30  +
mov ecx eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_417420  +
xor edx edx +
cmp al 16h +
jnz loc_417426  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ecx+8] 1 +
jz loc_417458  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] ebx +
call sub_423D50  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aInvalidFlagSIn +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_41ECD0  +
add esp 14h +
xor edx edx +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+0Ch] +
movzx edx byte ptr [eax] +
sub edx 30h +
cmp edx esi +
jbe loc_417426  +
cmp edx 4 +
ja loc_417426  +
cmp edx 4 +
jnz loc_417474  +
cmp esi 3 +
jnz loc_417426  +
cmp edx 2 +
jnz loc_417411  +
test esi esi +
jnz loc_417426  +
lea esi [esi+0] +
jmp loc_417411  +
***
mov ebx eax +
sub esp 14h +
mov [esp+14h+var_14] ebx +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_417497  +
cmp dl 16h +
jz loc_417503  +
cmp dl 14h +
jnz loc_4174D2  +
mov [esp+14h+var_14] ebx +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
mov esi eax +
cmp dl 53h +
jz loc_4174B2  +
cmp dl 16h +
jz loc_417521  +
sub edx 3Eh +
cmp dl 4 +
jbe loc_4174E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ebx +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_4174E0  +
cmp dl 16h +
jz loc_417537  +
cmp dl 15h +
jnz loc_4174D2  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_41BC80  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_4174AD  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_41BC80  +
movzx edx byte ptr [esi+4] +
jmp loc_4174CA  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_41BC80  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_4174F6  +
***
sub esp 18h +
mov eax [eax+4Ch] +
mov edx [eax+4] +
test edx edx +
jz loc_417582  +
mov [esp+18h+var_18] ebx +
call sub_41BAF0  +
mov eax [ebx+4Ch] +
mov eax [eax+4] +
test eax eax +
jnz loc_417570  +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_41759E  +
nop   +
mov [esp+18h+var_18] ebx +
call sub_423B30  +
cmp byte ptr [eax+4] 16h +
jnz loc_417590  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov byte ptr [esi+0Fh] 1 +
jmp loc_4175CE  +
cmp dl 35h +
jnz loc_4175F0  +
mov ebx [eax+8] +
test byte ptr [ebx+14h] 80h +
jz loc_417612  +
mov [esp+14h+var_14] esi +
call sub_423B30  +
movzx edx byte ptr [eax+4] +
cmp dl 16h +
jnz loc_4175C0  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] offset aInvalidPragmaG +
mov [esp+14h+var_10] 3 +
call sub_41ECD0  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41762D  +
mov [esp+14h+var_14] ebx +
call sub_41DBA0  +
or word ptr [ebx+14h] 280h +
jmp loc_4175CE  +
mov eax [ebx] +
mov [esp+14h+var_C] offset aPoisoningExist +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] eax +
call sub_41ECD0  +
jmp loc_41761D  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
add byte ptr [ebx+10h] 1 +
mov dword ptr [edx] 0 +
mov [esp+48h+var_48] ebx +
mov [ebp+var_28] edx +
call sub_41DB20  +
mov [ebp+var_20] eax +
movzx eax byte ptr [eax+4] +
cmp al 16h +
jz loc_417872  +
cmp al 35h +
mov eax [ebp+var_20] +
jnz loc_417760  +
mov edi [eax] +
mov [esp+48h+var_48] ebx +
call sub_41DB20  +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_417794  +
cmp esi 4 +
jz loc_417823  +
cmp esi 11h +
jnz loc_4176B4  +
cmp al 16h +
jz loc_417702  +
mov [esp+48h+var_38] offset aMissingAfterPr +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_41EDD0  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_417855  +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [eax+4] edi +
mov edi [ebp+var_28] +
mov dword ptr [eax] 0 +
mov [edi] eax +
mov ecx [ebp+var_20] +
mov eax [ecx+8] +
mov edx [eax+4] +
lea eax [edx+1Fh] +
lea edi [edx+1] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea esi [esp-4+arg_1F] +
and esi 0FFFFFFF0h +
mov byte ptr [esi] 23h +
mov eax [ecx+8] +
mov ecx [eax] +
lea eax [esi+1] +
mov [esp-4+arg_4] edx +
mov [esp+0] eax +
mov [esp-4+arg_0] ecx +
call memcpy  +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_0] esi +
mov [esp+0] ebx +
call sub_4241A0  +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_38] offset aPredicateMustB +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 3 +
call sub_41EDD0  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 18h +
xor edi edi +
lea eax [ebx+24h] +
mov [ebp+var_2C] eax +
mov [ebp+var_1C] esi +
jmp loc_4177D4  +
mov esi [eax] +
mov edx edi +
shl edx 4 +
add edx ecx +
test edi edi +
mov [edx+8] esi +
mov esi [eax+4] +
mov [edx+0Ch] esi +
mov esi [eax+8] +
mov [edx+10h] esi +
mov eax [eax+0Ch] +
mov [edx+14h] eax +
jnz loc_4177CD  +
and word ptr [ecx+0Eh] 0FFFEh +
add [ebp+var_1C] 10h +
add edi 1 +
mov [esp+48h+var_48] ebx +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 15h +
jz loc_4176E6  +
cmp dl 16h +
jz loc_417838  +
mov edx [ebx+24h] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
sub edx ecx +
cmp edx [ebp+var_1C] +
jnb loc_4177A6  +
mov [ebp+var_24] eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] 18h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4215E0  +
mov edx [ebx+24h] +
mov eax [ebp+var_24] +
mov ecx [edx+8] +
jmp loc_4177A6  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_41BC80  +
jmp loc_417702  +
mov [esp+48h+var_40] offset aMissingToCompl +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_41ECD0  +
jmp loc_4176D8  +
mov [esp-4+arg_4] offset aPredicateSAnsw +
mov [esp-4+arg_0] 3 +
mov [esp+0] ebx +
call sub_41ECD0  +
jmp loc_4176D8  +
mov [esp+48h+var_40] offset aAssertionWitho +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_41ECD0  +
xor eax eax +
jmp loc_4176DA  +
***
jmp sub_4178A0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [eax+18h] +
mov [esp+1Ch+var_10] edx +
lea edx [eax+18h] +
mov [esp+1Ch+var_14] edx +
test ebp ebp +
jnz loc_4178D0  +
jmp loc_417917  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
mov ebp [eax] +
mov [esp+1Ch+var_14] eax +
test ebp ebp +
jz loc_417917  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebp+4] +
cmp eax [ecx+4] +
jnz loc_4178C0  +
test eax eax +
jz loc_417917  +
mov eax [esp+1Ch+var_10] +
lea edi [ebp+8] +
xor ebx ebx +
lea esi [eax+8] +
jmp loc_417900  +
mov eax [ebp+4] +
add ebx 1 +
add edi 10h +
add esi 10h +
cmp eax ebx +
jbe loc_417913  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_420F00  +
test eax eax +
jnz loc_4178F0  +
mov eax [ebp+4] +
cmp eax ebx +
jnz loc_4178C0  +
mov eax [esp+1Ch+var_14] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0F0h] +
mov edx [esp+30h+arg_0] +
mov ebp [eax-10h] +
xor eax eax +
test edx edx +
jz loc_417A14  +
mov eax [ebx+50h] +
mov eax [eax+4] +
add byte ptr [ebx+10h] 1 +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_14] ecx +
call sub_4212D0  +
mov ecx [esp+30h+var_14] +
sub byte ptr [ebx+10h] 1 +
mov [esp+30h+var_20] offset aS_6 +
test ecx ecx +
mov [esp+30h+var_24] 0 +
mov edi eax +
setnz al  +
cmp esi 1 +
mov [esp+30h+var_1C] edi +
mov [esp+30h+var_28] ebp +
jz loc_417A94  +
test esi esi +
jz loc_417A74  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] ebx +
call sub_41EDD0  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_417A58  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_41EE20  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_417A54  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_41EEC0  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov eax [esp+4] +
mov ecx 12h +
mov edx 1 +
mov dword ptr [esp+4] 1 +
jmp sub_4179F0  +
***
mov eax [esp+4] +
xor ecx ecx +
mov edx 3 +
mov dword ptr [esp+4] 1 +
jmp sub_4179F0  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_20] 0 +
add byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41DB90  +
mov edi eax +
mov eax [eax] +
mov edx [edi+0Ch] +
cmp byte ptr [edi+4] 35h +
mov [esp+4Ch+var_1C] eax +
mov eax [edi+4] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
mov eax [edi+8] +
mov [esp+4Ch+var_14] eax +
jz loc_417B88  +
cmp dword ptr [esi+1FCh] 0 +
mov eax 1 +
jz loc_417B76  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_41BC80  +
mov edx [esi+20h] +
mov eax [esi+1FCh] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edx +
call eax  +
movzx eax byte ptr [esi+10h] +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esi+1DCh] +
test ebx ebx +
jnz loc_417B9A  +
jmp loc_417B4A  +
mov ebx [ebx] +
test ebx ebx +
jz loc_417B4A  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_417B94  +
cmp byte ptr [ebx+8] 0 +
jz loc_417BE2  +
movzx edx byte ptr [ebx+0Bh] +
test dl dl +
jz loc_417BB4  +
sub byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_30] edx +
call sub_41DB20  +
mov edx [esp+4Ch+var_30] +
cmp byte ptr [eax+4] 35h +
mov ebp eax +
jz loc_417C70  +
xor ebx ebx +
test dl dl +
jz loc_417BDA  +
add byte ptr [esi+10h] 1 +
test ebx ebx +
jz loc_417C97  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_417C27  +
mov eax [esp+4Ch+var_20] +
mov byte ptr [esi+58h] 51h +
mov [esi+54h] eax +
movzx eax word ptr [edi+6] +
mov [esi+5Ah] ax +
mov eax [ebx+0Ch] +
mov byte ptr [esi+18h] 1 +
mov [esi+5Ch] eax +
movzx eax byte ptr [ebx+0Bh] +
mov [esi+19h] al +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_417C19  +
add eax 1 +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1E0h] +
test eax eax +
jz loc_417C42  +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] esi +
call eax  +
cmp byte ptr [ebx+0Bh] 0 +
jz loc_417C4C  +
sub byte ptr [esi+10h] 1 +
mov eax [ebx+0Ch] +
mov [esp+4Ch+var_4C] esi +
call eax  +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_417C16  +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+0Ch] +
mov eax [eax+8] +
test ebx ebx +
jnz loc_417C8A  +
jmp loc_417BD2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_417BD2  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_417C80  +
jmp loc_417BD2  +
cmp dword ptr [esi+1FCh] 0 +
jz loc_417B76  +
mov eax [esi+4Ch] +
mov eax [eax+4] +
test eax eax +
jz loc_417D20  +
mov [esp+4Ch+var_4C] 20h +
call sub_435ED0  +
mov edx [esp+4Ch+var_1C] +
mov [eax] edx +
mov edx [esp+4Ch+var_18] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_14] +
or word ptr [eax+6] 400h +
mov [eax+8] edx +
mov edx [esp+4Ch+var_10] +
mov [eax+0Ch] edx +
mov edx [ebp+0] +
mov [eax+10h] edx +
mov edx [ebp+4] +
mov [eax+14h] edx +
mov edx [ebp+8] +
mov [eax+18h] edx +
mov edx [ebp+0Ch] +
or word ptr [eax+16h] 400h +
mov [eax+1Ch] edx +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_41B880  +
jmp loc_417B64  +
mov eax 2 +
jmp loc_417B58  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [eax] +
mov [esp+2Ch+var_14] ecx +
mov ecx [eax+1BCh] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_1C] ebx +
mov ebx [eax+1C0h] +
mov edx ebx +
sub edx ecx +
cmp edx 13h +
jbe loc_417E10  +
mov edx [eax+1B8h] +
add ecx 14h +
mov [eax+1BCh] ecx +
cmp ecx edx +
jz loc_417E50  +
mov edi [eax+1C8h] +
mov esi ebx +
add ecx edi +
not edi  +
and ecx edi +
mov edi [eax+1B4h] +
mov ebp ecx +
mov [eax+1BCh] ecx +
sub ebp edi +
sub esi edi +
cmp ebp esi +
jbe loc_417DA1  +
mov [eax+1BCh] ebx +
mov ecx ebx +
mov [eax+1B8h] ecx +
mov esi [esp+2Ch+var_1C] +
mov ecx [eax+20h] +
mov [edx+4] ecx +
mov ecx [esi+34h] +
mov [edx] ecx +
mov ecx 1 +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_417DCA  +
mov ebx [esp+2Ch+var_18] +
test ebx ebx +
setz cl  +
mov [edx+0Ch] cl +
mov esi [esp+2Ch+var_14] +
cmp byte ptr [eax+0Ah] 0 +
setnz byte ptr [edx+0Dh]  +
cmp byte ptr [eax+0ECh] 0 +
mov [edx+10h] esi +
jz loc_417DEF  +
mov ecx [eax+0E4h] +
test ecx ecx +
jz loc_417E40  +
mov dword ptr [edx+8] 0 +
movzx ebx byte ptr [esp+2Ch+var_18] +
mov [eax+0Ah] bl +
mov eax [esp+2Ch+var_1C] +
mov [eax+34h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1B0h] +
mov [esp+2Ch+var_28] 14h +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call sub_440CD0  +
mov eax [esp+2Ch+var_10] +
mov ecx [eax+1BCh] +
mov ebx [eax+1C0h] +
jmp loc_417D5E  +
mov ecx [esp+2Ch+arg_0] +
mov [edx+8] ecx +
jmp loc_417DF6  +
or byte ptr [eax+1D8h] 2 +
jmp loc_417D75  +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_417E89  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] ebx +
call sub_426FF0  +
xor eax 1 +
movzx edx al +
mov eax [ebx+0E8h] +
mov ecx 4 +
mov [esp+18h+arg_0] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_417D30  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_4172D0  +
test eax eax +
mov esi eax +
jz loc_417F15  +
mov eax [ebx+21Ch] +
cmp byte ptr [ebx+24Ch] 0 +
setz byte ptr [ebx+0Dh]  +
test eax eax +
jz loc_417EE5  +
mov [esp+18h+var_18] ebx +
call eax  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_41DCC0  +
test al al +
jz loc_417F0F  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_417F0F  +
mov edx [ebx+20h] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] edx +
call eax  +
and word ptr [esi+14h] 0DFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
sub esp 18h +
cmp byte ptr [eax+270h] 0 +
jz loc_418040  +
cmp byte ptr [eax+18h] 0 +
jnz loc_418009  +
sub byte ptr [eax+10h] 1 +
cmp dword ptr [ebx+50h] offset off_462520 +
jz loc_41801A  +
mov [esp+18h+var_18] ebx +
call sub_42A360  +
cmp byte ptr [ebx+24Bh] 0 +
mov byte ptr [ebx+8] 0 +
mov byte ptr [ebx+0Ch] 0 +
setz byte ptr [ebx+0Dh]  +
mov byte ptr [ebx+0Bh] 0 +
mov dword ptr [ebx+50h] 0 +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [eax+18h] 0 +
jnz loc_41801A  +
test edx edx +
jz loc_41801A  +
call sub_417560  +
mov eax [ebx+10Ch] +
test eax eax +
jnz loc_41801A  +
lea eax [ebx+0F4h] +
mov [ebx+104h] eax +
mov eax [ebx+0FCh] +
mov [ebx+0F0h] eax +
jmp loc_41801A  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
test edx edx +
jnz loc_4180C4  +
jmp loc_4180E0  +
mov edi [esi] +
add esi 4 +
mov [esp+28h+var_28] edi +
call strlen  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_20] eax +
call sub_4241A0  +
mov [ebx+4] eax +
mov eax [esi-4] +
mov [esp+28h+var_28] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4180E0  +
cmp byte ptr [ebx+8] 0 +
jz loc_418093  +
mov edx [ebx+0Ch] +
mov ecx esi +
mov eax ebp +
call sub_418080  +
mov esi eax +
jmp loc_418093  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
test eax eax +
jnz loc_418128  +
jmp loc_41813C  +
mov eax [ebx+4] +
lea edi [esi+4] +
mov edx [eax+4] +
mov eax [eax] +
lea ecx [edx+1] +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_436F80  +
mov [esi] eax +
mov ebx [ebx] +
test ebx ebx +
jz loc_418140  +
mov esi edi +
cmp byte ptr [ebx+8] 0 +
jz loc_418100  +
mov eax [ebx+0Ch] +
mov edx esi +
call sub_4180F0  +
mov esi eax +
jmp loc_418100  +
mov edi edx +
nop   +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_418195  +
test dl dl +
mov esi ecx +
mov [esp+14h+var_14] ebx +
jnz loc_4181A0  +
call sub_423B30  +
cmp byte ptr [eax+4] 16h +
jz loc_418195  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+14h+var_C] offset aExtraTokensAtE +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_41ED50  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_41DB20  +
jmp loc_418171  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_41DB20  +
cmp byte ptr [eax+4] 3Eh +
jnz loc_4181F2  +
mov edx [ebx+1F8h] +
test edx edx +
jz loc_4181E3  +
mov ecx [ebx+20h] +
add eax 8 +
mov [esp+8] eax +
mov [esp] ebx +
mov [esp+4] ecx +
call edx  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_418150  +
***
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp] ebx +
mov dword ptr [esp+8] offset aInvalidSDirect +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41ECD0  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_418150  +
***
push ebp  +
mov ecx 10h +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
lea edx [esp+1Ch] +
mov eax esi +
call sub_417650  +
test eax eax +
mov ebx eax +
jz loc_4182B6  +
mov edx [esp+1Ch] +
mov dword ptr [edx] 0 +
movzx eax byte ptr [eax+14h] +
mov edi edx +
and eax 3Fh +
cmp al 2 +
jz loc_4182C8  +
mov eax [edi+4] +
shl eax 4 +
lea ebp [eax+8] +
mov eax [esi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_4182C0  +
mov [esp] ebp +
call eax  +
mov [esp+4] edi +
mov [esp+8] ebp +
mov [esp] eax +
mov [esp+1Ch] eax +
call memcpy  +
mov edi [esp+1Ch] +
movzx edx byte ptr [ebx+14h] +
xor ecx ecx +
mov eax esi +
mov [ebx+18h] edi +
and edx 0FFFFFFC0h +
or edx 2 +
mov [ebx+14h] dl +
xor edx edx +
call sub_418150  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+24h] +
add [eax+8] ebp +
jmp loc_41829B  +
***
mov eax ebx +
call sub_4178A0  +
mov eax [eax] +
test eax eax +
jz loc_4182F8  +
mov eax [ebx] +
mov dword ptr [esp+8] offset aSReAsserted +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
add eax 1 +
mov [esp+0Ch] eax +
call sub_41ECD0  +
jmp loc_4182B6  +
***
mov edi [esp+1Ch] +
mov eax [ebx+18h] +
mov [edi] eax +
jmp loc_418268  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
lea esi [esi+0] +
mov [esp+38h+var_38] ebx +
call sub_41DB20  +
cmp byte ptr [eax+4] 53h +
jz loc_418320  +
mov edx eax +
mov ecx [eax] +
mov eax [esp+38h+arg_0] +
mov [eax] ecx +
movzx eax byte ptr [edx+4] +
cmp al 3Eh +
jz loc_418393  +
cmp al 44h +
jz loc_41839B  +
cmp al 3 +
jnz loc_418400  +
mov eax ebx +
nop   +
call sub_417930  +
cmp dword ptr [ebx+50h] offset off_4625A4 +
mov dword ptr [edi] 1 +
mov esi eax +
jz loc_4183F3  +
test ebp ebp +
jz loc_41837B  +
cmp byte ptr [ebx+24Bh] 0 +
jz loc_418437  +
mov eax ebx +
xor ecx ecx +
mov edx 1 +
call sub_418150  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
cmp byte ptr [eax] 52h +
jz loc_418400  +
mov eax [edx+8] +
mov [esp+38h+var_28] edx +
sub eax 1 +
mov [esp+38h+var_38] eax +
call sub_435ED0  +
mov edx [esp+38h+var_28] +
mov esi eax +
mov eax [edx+8] +
lea ecx [eax-2] +
mov eax [edx+0Ch] +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] esi +
add eax 1 +
mov [esp+38h+var_34] eax +
call memcpy  +
mov edx [esp+38h+var_28] +
mov eax [edx+8] +
mov byte ptr [esi+eax-2] 0 +
xor eax eax +
cmp byte ptr [edx+4] 44h +
setz al  +
cmp dword ptr [ebx+50h] offset off_4625A4 +
mov [edi] eax +
jnz loc_41836A  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
cmp eax offset off_4625A4 +
jz loc_418504  +
mov eax [eax+4] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aSExpectsFilena +
mov [esp+38h+var_34] 3 +
call sub_41ECD0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] 20h +
call sub_435ED0  +
mov [esp+38h+var_28] eax +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_418500  +
mov [esp+38h+var_24] 8 +
xor edi edi +
mov [esp+38h+var_38] ebx +
call sub_423B30  +
movzx edx byte ptr [eax+4] +
mov ecx eax +
cmp dl 16h +
jz loc_4184E5  +
cmp dl 4Fh +
jz loc_4184A0  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+38h+var_30] offset aExtraTokensAtE +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
call sub_41ECD0  +
jmp loc_418461  +
lea edx [edi+1] +
cmp edx [esp+38h+var_24] +
jnb loc_4184B4  +
mov eax [esp+38h+var_28] +
mov [eax+edi*4] ecx +
mov edi edx +
jmp loc_418461  +
shl [esp+38h+var_24] 1 +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_1C] edx +
shl eax 2 +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+var_28] +
mov [esp+38h+var_38] eax +
call sub_435F50  +
mov edx [esp+38h+var_1C] +
mov ecx [esp+38h+var_20] +
mov [esp+38h+var_28] eax +
jmp loc_4184A9  +
shl edi 2 +
mov eax [esp+38h+var_28] +
mov dword ptr [eax+edi] 0 +
mov [ebp+0] eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_4184E8  +
mov eax offset aPragmaDependen +
jmp loc_418411  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp byte ptr [eax+24Bh] 0 +
lea ecx [esp+44h+var_1C] +
lea edx [esp+44h+var_20] +
setz byte ptr [eax+0Dh]  +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
mov eax ebx +
mov [esp+44h+var_1C] 0 +
call sub_418310  +
test eax eax +
mov esi eax +
jz loc_4185C6  +
cmp byte ptr [eax] 0 +
jz loc_418600  +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 0C7h +
ja loc_4185E0  +
mov eax ebx +
call sub_417560  +
mov eax [ebx+1ECh] +
test eax eax +
jz loc_41859E  +
mov edx [ebx+50h] +
mov ebp [esp+44h+var_1C] +
mov ecx [edx+4] +
mov edx [ebx+20h] +
mov [esp+44h+var_30] ebp +
mov ebp [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] ebp +
mov [esp+44h+var_44] ebx +
call eax  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_38] edi +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_3C] eax +
call sub_42D250  +
mov [esp+44h+var_44] esi +
call free  +
mov eax [esp+44h+var_1C] +
test eax eax +
jz loc_4185D6  +
mov [esp+44h+var_44] eax +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_3C] offset aIncludeNestedT +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_44] ebx +
call sub_41ECD0  +
jmp loc_4185BE  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+44h+var_34] offset aEmptyFilenameI +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_30] eax +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_3C] eax +
call sub_41EDD0  +
jmp loc_4185BE  +
***
mov eax [esp+arg_0] +
mov edx 2 +
jmp sub_418510  +
***
push ebx  +
mov edx 1 +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_418671  +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_418510  +
***
mov [esp] ebx +
mov dword ptr [esp+8] offset aInclude_nextIn +
mov dword ptr [esp+4] 0 +
call sub_41ECD0  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor edx edx +
jmp sub_418510  +
***
mov eax [esp+4] +
xor edx edx +
jmp sub_418510  +
***
push esi  +
xor ecx ecx +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
lea eax [esp+1Ch] +
mov [esp] eax +
lea edx [esp+18h] +
mov eax ebx +
call sub_418310  +
test eax eax +
mov esi eax +
jz loc_418741  +
mov eax [esp+18h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_42D830  +
test eax eax +
js loc_418747  +
jz loc_418739  +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCurrentFileIsO +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_41ECD0  +
mov [esp] ebx +
call sub_41DB20  +
cmp byte ptr [eax+4] 16h +
jz loc_418739  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_41BC80  +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp] 0 +
mov eax ebx +
call sub_4179F0  +
mov [esp] esi +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCannotFindSour +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_41ECD0  +
jmp loc_418739  +
***
push esi  +
mov edx 1 +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax ebx +
call sub_4172D0  +
test eax eax +
mov esi eax +
jz loc_4187BF  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_41879A  +
mov [esp] ebx +
call eax  +
mov eax [ebx+1F4h] +
test eax eax +
jz loc_4187B4  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
movzx eax byte ptr [esi+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4187D0  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_418150  +
***
movzx eax word ptr [esi+14h] +
shr ax 6 +
test al 10h +
jnz loc_418840  +
test al 4 +
jnz loc_418801  +
cmp byte ptr [ebx+267h] 0 +
jnz loc_418860  +
mov [esp] esi +
call sub_41DBA0  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_418150  +
***
cmp byte ptr [ebx+25Fh] 0 +
jz loc_4187E0  +
mov edx [esi] +
mov eax [ebx+20h] +
mov dword ptr [esp+10h] offset aUndefiningS +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Bh +
mov [esp] ebx +
call sub_41EE20  +
jmp loc_4187E0  +
***
mov eax [esi] +
mov dword ptr [esp+8] offset aUndefiningS +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
mov [esp+0Ch] eax +
call sub_41ECD0  +
jmp loc_4187E0  +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_41B220  +
jmp loc_4187E9  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_4188B0  +
xor esi esi +
mov edi 1 +
mov [esp+20h] esi +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 6 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_417D30  +
***
xor edx edx +
mov eax ebx +
call sub_4172D0  +
test eax eax +
mov esi eax +
jz loc_418890  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_418940  +
movzx eax word ptr [esi+14h] +
xor edi edi +
shr ax 6 +
test al 80h +
jnz loc_41890F  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_418970  +
mov eax [ebx+218h] +
test eax eax +
jz loc_41890F  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_418929  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_418150  +
jmp loc_418897  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr di 0Eh +
xor edi 1 +
shr ax 6 +
and edi 1 +
test al 4 +
jnz loc_4188D4  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_4188D4  +
***
test al 4 +
jz loc_418987  +
mov eax [ebx+228h] +
test eax eax +
jz loc_418987  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_4188FF  +
jmp loc_41890F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_4189D1  +
mov edi 1 +
mov dword ptr [esp+20h] 0 +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 3 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_417D30  +
***
xor edx edx +
mov eax ebx +
call sub_4172D0  +
test eax eax +
mov esi eax +
jz loc_4189B0  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_418A60  +
movzx eax word ptr [esi+14h] +
mov edi 1 +
shr ax 6 +
test al 80h +
jnz loc_418A33  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_418A90  +
mov eax [ebx+218h] +
test eax eax +
jz loc_418A33  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_418A4D  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_418150  +
jmp loc_4189B5  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr ax 6 +
shr di 0Eh +
and edi 1 +
test al 4 +
jnz loc_4189F8  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_4189F8  +
***
test al 4 +
jz loc_418AA7  +
mov eax [ebx+228h] +
test eax eax +
jz loc_418AA7  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_418A23  +
jmp loc_418A33  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esi] +
mov ebx [edi+34h] +
test ebx ebx +
jz loc_418B63  +
movzx eax byte ptr [ebx+0Dh] +
test al al +
jz loc_418B14  +
mov edx [ebx] +
test edx edx +
jz loc_418B35  +
cmp ebx [esi+1B4h] +
mov [edi+34h] edx +
mov [esi+0Ah] al +
jbe loc_418AFB  +
cmp ebx [esi+1C0h] +
jb loc_418B50  +
add esi 1B0h +
mov [esp+4] ebx +
mov [esp] esi +
call sub_440DE0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp byte ptr [esi+25Ch] 0 +
jz loc_418ADF  +
xor edx edx +
mov eax esi +
mov ecx 8 +
call sub_418150  +
mov edx [ebx] +
movzx eax byte ptr [ebx+0Dh] +
test edx edx +
jnz loc_418AE5  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_418AE5  +
mov byte ptr [esi+0ECh] 1 +
mov [esi+0E4h] ecx +
jmp loc_418AE5  +
***
mov [esi+1B8h] ebx +
mov [esi+1BCh] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+8] offset aEndifWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41ECD0  +
jmp loc_418B0D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
call sub_417490  +
test eax eax +
mov edx eax +
jz loc_418D55  +
mov ecx [eax+8] +
lea eax [ecx+20h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov edx [edx+0Ch] +
sub esp eax +
xor eax eax +
lea ebx [esp+38h+var_15] +
and ebx 0FFFFFFF0h +
cmp byte ptr [edx] 4Ch +
lea esi [edx+ecx-1] +
setz al  +
lea eax [edx+eax+1] +
mov edx ebx +
cmp eax esi +
jnb loc_418C07  +
mov edi ebx +
jmp loc_418BDD  +
add eax 1 +
add edx 1 +
cmp esi eax +
mov [edx-1] cl +
jbe loc_418C05  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_418BD0  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_418BF3  +
cmp bl 5Ch +
jnz loc_418BD0  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp esi eax +
mov [edx-1] cl +
ja loc_418BDD  +
mov ebx edi +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_418150  +
mov eax [ebp+arg_0] +
call sub_417560  +
mov [esp+38h+var_38] 14h +
call sub_435ED0  +
mov edx ebx +
mov esi eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418C50  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+38h+var_38] edx +
call sub_435ED0  +
mov [esi+4] eax +
mov edi eax +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call strcpy  +
mov eax [ebp+arg_0] +
mov eax [eax+2F8h] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_420850  +
test byte ptr [eax+14h] 3Fh +
mov ebx eax +
jnz loc_418CD3  +
or byte ptr [esi+10h] 4 +
mov eax [ebp+arg_0] +
mov [eax+2F8h] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41E750  +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] eax +
call strlen  +
mov edi eax +
lea eax [eax+2] +
mov [esp+38h+var_38] eax +
call sub_435ED0  +
mov [esi+8] eax +
mov byte ptr [eax+edi] 0Ah +
mov byte ptr [eax+edi+1] 0 +
mov edx [ebx+18h] +
mov edx [edx+8] +
mov [esi+0Ch] edx +
mov edx [ebx+18h] +
movzx ecx byte ptr [edx+14h] +
movzx edx byte ptr [esi+10h] +
shr cl 2 +
and ecx 1 +
and edx 0FFFFFFFEh +
or edx ecx +
mov [esi+10h] dl +
mov ecx [ebx+18h] +
and edx 0FFFFFFFDh +
movzx ecx byte ptr [ecx+14h] +
shr cl 2 +
and ecx 2 +
or edx ecx +
mov [esi+10h] dl +
mov [esp+38h+var_30] edi +
mov edi [ebp+var_1C] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edi +
call memcpy  +
jmp loc_418CC2  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragmaP +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41EDD0  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_418150  +
mov eax [ebp+arg_0] +
call sub_417560  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_418DE2  +
mov eax ebx +
xor ecx ecx +
xor edx edx +
call sub_418150  +
mov eax [ebx] +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42D230  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aPragmaOnceInMa +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_41ECD0  +
jmp loc_418DC1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_418EA7  +
cmp dword ptr [ebx+10h] 5 +
jz loc_418E63  +
movzx eax byte ptr [ebx+0Ch] +
mov dword ptr [ebx+10h] 5 +
mov [esi+0Ah] al +
cmp byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+0Ch] 1 +
mov dword ptr [ebx+8] 0 +
jnz loc_418E44  +
cmp byte ptr [esi+25Ch] 0 +
jnz loc_418E50  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add esp 24h +
mov eax esi +
pop ebx  +
mov ecx 8 +
pop esi  +
xor edx edx +
jmp sub_418150  +
***
mov dword ptr [esp+8] offset aElseAfterElse +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41ECD0  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset aTheConditional +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
mov [esp] esi +
call sub_41EDD0  +
jmp loc_418E1C  +
***
mov dword ptr [esp+8] offset aElseWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_41ECD0  +
jmp loc_418E44  +
***
jmp loc_418ED0  +
push ebx  +
mov ecx 11h +
sub esp 28h +
mov eax [esp+30h] +
lea edx [esp+1Ch] +
call sub_417650  +
test eax eax +
mov ebx eax +
jz loc_418EF7  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 2 +
jz loc_418F00  +
add esp 28h +
pop ebx  +
retn   +
***
mov edx [esp+1Ch] +
test edx edx +
jz loc_418F38  +
mov eax ebx +
call sub_4178A0  +
mov edx [eax] +
test edx edx +
jz loc_418F19  +
mov edx [edx] +
mov [eax] edx +
mov eax [ebx+18h] +
test eax eax +
jz loc_418F32  +
mov eax [esp+30h] +
xor ecx ecx +
xor edx edx +
call sub_418150  +
add esp 28h +
pop ebx  +
retn   +
***
and byte ptr [ebx+14h] 0C0h +
jmp loc_418F20  +
***
mov [esp] ebx +
call sub_41DBA0  +
jmp loc_418EF7  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 34h +
mov [esp] eax +
call sub_423B30  +
cmp byte ptr [eax+4] 3Eh +
jz loc_418FA0  +
mov eax esi +
mov ecx offset aError_0 +
test al al +
mov eax offset aWarning +
cmovz ecx eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset aInvalidPragm_1 +
mov dword ptr [esp+4] 3 +
mov [esp] ebx +
call sub_41ECD0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
add eax 8 +
lea edx [esp+28h] +
mov dword ptr [esp+10h] 3Eh +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_416910  +
test al al +
jz loc_418F67  +
mov eax [esp+28h] +
test eax eax +
jz loc_418F67  +
mov eax esi +
mov edx [esp+2Ch] +
cmp al 1 +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aS_6 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_41ECD0  +
mov eax [esp+2Ch] +
mov [esp] eax +
call free  +
jmp loc_418F94  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_418F50  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_418F50  +
***
sub esp 24h +
mov esi [esp+24h+arg_0] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_4190D4  +
cmp dword ptr [ebx+10h] 5 +
jz loc_419090  +
cmp byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 9 +
jz loc_419070  +
mov byte ptr [esi+0Ah] 1 +
mov dword ptr [ebx+8] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
call sub_426FF0  +
mov edx eax +
xor edx 1 +
mov [esi+0Ah] dl +
mov [ebx+0Ch] al +
jmp loc_41905D  +
mov [esp+24h+var_1C] offset aElifAfterElse +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_41ECD0  +
mov eax [ebx+4] +
mov [esp+24h+var_14] offset aTheConditional +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] esi +
call sub_41EDD0  +
jmp loc_41904C  +
mov [esp+24h+var_1C] offset aElifWithoutIf +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_41ECD0  +
jmp loc_419064  +
***
jmp sub_419100  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_419140  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_418150  +
mov eax ebx +
call sub_417560  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
call sub_42D680  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aPragmaSystem_h +
mov [esp+18h+var_14] 0 +
call sub_41ECD0  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov [esp+38h+var_20] ecx +
mov ebx [esp+38h+arg_0] +
jz loc_4192D0  +
mov [esp+38h+var_38] edx +
call strlen  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_4241A0  +
mov esi eax +
mov eax [edi+1DCh] +
test eax eax +
jnz loc_4191AE  +
jmp loc_419286  +
mov eax [eax] +
test eax eax +
jz loc_419286  +
cmp esi [eax+4] +
jnz loc_4191A4  +
cmp byte ptr [eax+8] 0 +
jz loc_419305  +
cmp [eax+0Bh] bl +
jnz loc_419356  +
lea ecx [eax+0Ch] +
mov esi [esp+38h+var_20] +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_4241A0  +
mov ecx [esp+38h+var_1C] +
mov ebx [ecx] +
mov esi eax +
test ebx ebx +
jnz loc_4191FD  +
jmp loc_419242  +
mov ebx [ebx] +
test ebx ebx +
jz loc_419242  +
cmp esi [ebx+4] +
jnz loc_4191F7  +
cmp byte ptr [ebx+8] 0 +
jnz loc_419305  +
test ebp ebp +
mov eax [esp+38h+var_20] +
jz loc_419330  +
mov [esp+38h+var_28] eax +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aPragmaSSIsAlre +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_41ECD0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_20] ecx +
call sub_423DD0  +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov edx [ecx] +
mov [eax] edx +
mov [ecx] eax +
mov [eax+4] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] edi +
call sub_423DD0  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov ecx [edi+1DCh] +
mov [eax] ecx +
mov [edi+1DCh] eax +
mov [eax+4] esi +
mov byte ptr [eax+8] 1 +
mov [eax+0Bh] bl +
jmp loc_4191C6  +
test bl bl +
lea ecx [eax+1DCh] +
jz loc_4191C9  +
mov eax [esp+38h+var_20] +
mov [esp+38h+var_30] offset aRegisteringPra +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
call sub_41ECD0  +
xor eax eax +
jmp loc_41923A  +
mov eax [esi] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] offset aRegisteringSAs +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_2C] eax +
call sub_41ECD0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aPragmaSIsAlrea +
mov [esp+38h+var_34] 4 +
call sub_41ECD0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aRegisteringP_0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_41ECD0  +
xor eax eax +
jmp loc_41923A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [ebp+arg_0] +
cmp byte ptr [ebx+11h] 0 +
setnz [ebp+var_79]  +
cmp byte ptr [ebx+13h] 0 +
setnz [ebp+var_7A]  +
jz loc_4193A5  +
mov byte ptr [ebx+10h] 0 +
cmp [ebp+var_79] 0 +
jz loc_4193C0  +
cmp byte ptr [ebx+26Ah] 0 +
jnz loc_419611  +
mov byte ptr [ebx+11h] 0 +
mov byte ptr [ebx+10h] 0 +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+0A8h+var_A8] ebx +
call sub_423B30  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_419562  +
cmp al 37h +
jz loc_4195C5  +
cmp al 16h +
jz loc_4194E8  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_4195BC  +
xor esi esi +
mov edi 1 +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_4194F0  +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] ebx +
mov [ebp+var_88] edx +
call sub_423D50  +
mov ecx eax +
mov [ebp+var_84] eax +
mov eax [ebx+230h] +
test eax eax +
jz loc_4197A1  +
mov [esp+0A8h+var_A0] offset off_4624C0 +
mov [esp+0A8h+var_A4] ecx +
mov [esp+0A8h+var_A8] ebx +
call eax  +
test eax eax +
mov [ebp+var_80] eax +
jz loc_4197A1  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov ecx [edx] +
lea edx [ebp+var_74] +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] ecx +
mov ecx edx +
call sub_40FE90  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov edx [edx] +
sub esp 8 +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] edx +
call sub_40E7E0  +
mov ecx [ebp+var_80] +
mov [esp+0A8h+var_A0] ecx +
mov [esp+0A8h+var_A4] edx +
lea edx [ebp+var_74] +
mov ecx edx +
mov [esp+0A8h+var_A8] eax +
call sub_410110  +
mov eax [ebp+var_80] +
mov ecx [ebp+var_84] +
sub esp 0Ch +
mov [esp+0A8h+var_94] eax +
lea eax [ebp+var_74] +
mov [esp+0A8h+var_98] ecx +
mov [esp+0A8h+var_9C] offset aInvalidPreproc +
mov [esp+0A8h+var_A0] eax +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
call sub_41EF60  +
lea ecx [ebp+var_74] +
call sub_40FB70  +
jmp loc_4194F0  +
mov edi 1 +
xor esi esi +
nop   +
cmp byte ptr [ebx+270h] 0 +
mov [ebx+50h] esi +
jnz loc_419556  +
test esi esi +
jz loc_419540  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+0A8h+var_A8] ebx +
call eax  +
mov edx edi +
mov eax ebx +
call sub_417FF0  +
cmp [ebp+var_79] 0 +
jz loc_419527  +
cmp byte ptr [ebx+18h] 0 +
jnz loc_419527  +
mov byte ptr [ebx+11h] 2 +
mov byte ptr [ebx+10h] 1 +
cmp [ebp+var_7A] 0 +
jz loc_419531  +
mov byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_41950A  +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
call sub_41BC80  +
jmp loc_41950A  +
mov eax ebx +
call sub_417F20  +
lea esi [esi+0] +
jmp loc_4194FC  +
mov eax [edx+8] +
movzx eax byte ptr [eax+0Ch] +
test al 1 +
jz loc_4193FB  +
shr al 1 +
movzx eax al +
lea eax [eax+eax*2] +
lea esi ds:462520h[eax*4] +
movzx eax byte ptr [ebx+26Bh] +
test byte ptr [esi+0Bh] 2 +
jnz loc_419594  +
mov byte ptr [ebx+0ECh] 0 +
test al al +
jz loc_419630  +
cmp byte ptr [ebx+2A8h] 0 +
jnz loc_419686  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_4195BC  +
movzx eax byte ptr [esi+0Bh] +
test al 8 +
jnz loc_41968A  +
xor edi edi +
xor esi esi +
jmp loc_4194F0  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_4195BC  +
cmp byte ptr [ebx+26Ah] 0 +
mov esi offset off_46243C +
movzx eax byte ptr [ebx+26Bh] +
jz loc_419587  +
test al al +
jnz loc_419587  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_419587  +
mov [esp+0A8h+var_A0] offset aStyleOfLineDir +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_41ECD0  +
movzx eax byte ptr [ebx+26Bh] +
jmp loc_419587  +
mov [esp+0A8h+var_A0] offset aEmbeddingADire +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_41ECD0  +
jmp loc_4193B8  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
cmp byte ptr [ebx+0Ah] 0 +
mov [ebx+9] al +
jnz loc_4196F8  +
cmp byte ptr [esi+0Ah] 2 +
jz loc_4196C0  +
test byte ptr [esi+0Bh] 20h +
jnz loc_419770  +
cmp esi offset off_4625D4 +
jnz loc_4196F8  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_419770  +
cmp byte ptr [ebx+25Ah] 0 +
jnz loc_41970D  +
jmp loc_41969A  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+9] al +
cmp byte ptr [ebx+0Ah] 0 +
mov edi 1 +
jz loc_4194F0  +
test byte ptr [esi+0Bh] 1 +
mov eax 0 +
cmovz esi eax +
jmp loc_4194F0  +
cmp esi offset off_4625D4 +
jz loc_4197EC  +
cmp byte ptr [ebx+26Ah] 0 +
jz loc_419654  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsAGccExtensi +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41ECD0  +
cmp byte ptr [ebx+25Ah] 0 +
jz loc_41969A  +
cmp esi offset off_46258C +
jz loc_4197CF  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_419740  +
cmp byte ptr [esi+0Ah] 0 +
jnz loc_41969A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aTraditionalCIg +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41ED10  +
jmp loc_41969A  +
cmp byte ptr [esi+0Ah] 0 +
jz loc_41969A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSuggestHidingS +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41ED10  +
jmp loc_41969A  +
cmp byte ptr [ebx+254h] 0 +
jz loc_4196F8  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsADeprecated +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41ED10  +
jmp loc_4196F8  +
mov eax [ebp+var_84] +
mov edi 1 +
xor esi esi +
mov [esp+0A8h+var_A0] offset aInvalidPrepr_0 +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_41ECD0  +
jmp loc_4194F0  +
mov [esp+0A8h+var_A0] offset aSuggestNotUsin +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
call sub_41ED10  +
jmp loc_41969A  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_419677  +
jmp loc_4196CC  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset loc_417270 +
mov [esp] eax +
call sub_424230  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov edx [esp+24h+arg_C] +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_14] edx +
mov edx [esp+24h+arg_8] +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
mov edx [esp+24h+arg_10] +
mov [esp+24h+var_1C] edx +
mov edx [esp+24h+arg_4] +
mov [esp+24h+var_20] edx +
call sub_40DD60  +
test eax eax +
mov esi eax +
jz loc_419884  +
mov edx [eax+0Ch] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_1C] 7Fh +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_40E0D0  +
mov eax [ebx+1E4h] +
test eax eax +
jz loc_4198A0  +
mov [esp+24h+arg_4] esi +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp eax  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_0] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov ecx [eax+8] +
movzx eax byte ptr [eax+14h] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] ecx +
mov byte ptr [esp+3Ch+var_20] al +
call sub_41BC80  +
mov [esp+3Ch+var_3C] esi +
call sub_41DB20  +
cmp byte ptr [eax+4] 37h +
jz loc_419926  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
call sub_423D50  +
mov [esp+3Ch+var_34] offset aSAfterIsNotAPo +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41ECD0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+8] +
mov ebx [eax+0Ch] +
test ebp ebp +
jz loc_419B08  +
movzx ecx byte ptr [ebx] +
lea edx [ebx+1] +
test byte ptr ds:word_4660A0[ecx+ecx] 4 +
jz loc_4198F6  +
add ebp ebx +
xor ebx ebx +
jmp loc_419961  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4660A0[ecx+ecx] 4 +
jz loc_4198F6  +
lea ebx [ebx+ebx*4] +
cmp edx ebp +
lea ebx [ecx+ebx*2-30h] +
jnz loc_419950  +
mov [esp+3Ch+var_3C] esi +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_419A00  +
cmp dl 16h +
jnz loc_4199D0  +
movzx eax byte ptr [esp+3Ch+var_20] +
mov ebp 3 +
mov [esp+3Ch+var_20] eax +
mov eax esi +
call sub_417560  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] eax +
call sub_419830  +
mov byte ptr [edi+50h] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_423D50  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] offset aSIsNotAValidFi +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_30] eax +
call sub_41ECD0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+3Ch+var_14] +
add eax 8 +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_2C] 3Eh +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
call sub_416910  +
test al al +
mov eax [esp+3Ch+var_24] +
cmovnz eax [esp+3Ch+var_10] +
xor edx edx +
mov [esp+3Ch+var_24] eax +
mov eax esi +
call sub_4173F0  +
cmp eax 1 +
jz loc_419B15  +
cmp eax 2 +
mov ebp 3 +
jz loc_419B64  +
xor edx edx +
cmp eax 3 +
mov [esp+3Ch+var_20] 0 +
jz loc_419B38  +
mov eax [esi] +
xor ecx ecx +
mov [eax+3Dh] dl +
xor edx edx +
mov eax esi +
call sub_418150  +
mov eax esi +
call sub_417560  +
cmp ebp 1 +
jnz loc_419B00  +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov edx [eax+10h] +
test edx edx +
js loc_419AD4  +
mov ecx [esp+3Ch+var_24] +
mov eax [esi+1Ch] +
test ecx ecx +
jz loc_41999E  +
imul edx edx +
add edx [eax] +
jz loc_41999E  +
mov eax [edx+8] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_440EB0  +
test eax eax +
jz loc_419B00  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] offset aFileSLinemarke +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41ED10  +
jmp loc_41991E  +
mov eax [esi+1Ch] +
jmp loc_41999E  +
xor ebx ebx +
lea esi [esi+0] +
jmp loc_41996C  +
mov eax [esp+3Ch+var_24] +
xor ebp ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_42D630  +
mov edx 1 +
mov eax esi +
call sub_4173F0  +
jmp loc_419A66  +
mov edx 3 +
mov eax esi +
call sub_4173F0  +
cmp eax 4 +
setz dl  +
add edx 1 +
cmp eax 4 +
setz al  +
movzx eax al +
mov [esp+3Ch+var_20] eax +
add [esp+3Ch+var_20] 1 +
jmp loc_419A79  +
mov edx 2 +
mov eax esi +
call sub_4173F0  +
mov bp 1 +
jmp loc_419A66  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+60h] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
cmp byte ptr [esi+268h] 1 +
movzx ebx byte ptr [eax+14h] +
mov eax [eax+8] +
mov [esp] esi +
mov [esp+2Bh] bl +
mov [esp+24h] eax +
sbb eax eax +
mov [esp+1Ch] eax +
and dword ptr [esp+1Ch] 80008000h +
add dword ptr [esp+1Ch] 7FFFFFFFh +
call sub_41DB20  +
mov [esp+20h] eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_419C15  +
cmp al 16h +
jz loc_419CD6  +
mov eax [esp+20h] +
mov [esp] esi +
mov [esp+4] eax +
call sub_423D50  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSAfterLineIsNo +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41ECD0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov [esp+2Ch] edi +
mov edx [eax+0Ch] +
mov ebx [eax+8] +
xor eax eax +
add ebx edx +
mov ebp ebx +
xor ebx ebx +
jmp loc_419C54  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4660A0[ecx+ecx] 4 +
jz loc_419BE1  +
lea edi [ebx+ebx*4] +
lea ecx [ecx+edi*2-30h] +
mov edi 1 +
cmp ebx ecx +
mov ebx ecx +
cmova eax edi +
cmp edx ebp +
jnz loc_419C30  +
cmp byte ptr [esi+26Ah] 0 +
mov edi [esp+2Ch] +
jz loc_419D13  +
test ebx ebx +
jz loc_419CF6  +
cmp [esp+1Ch] ebx +
jb loc_419CF6  +
test al al +
jnz loc_419CF6  +
nop   +
lea esi [esi+0] +
mov [esp] esi +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_419D68  +
cmp dl 16h +
jnz loc_419D38  +
mov eax esi +
call sub_417560  +
movzx eax byte ptr [esp+2Bh] +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+4] 3 +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_419830  +
mov byte ptr [edi+50h] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aUnexpectedEndO +
mov dword ptr [esp+4] 3 +
call sub_41ECD0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 2 +
mov [esp] esi +
call sub_41ECD0  +
jmp loc_419C80  +
***
test al al +
jz loc_419C80  +
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_41ECD0  +
jmp loc_419C80  +
***
mov [esp] esi +
mov [esp+4] eax +
call sub_423D50  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSIsNotAValidFi +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_41ECD0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea edx [esp+38h] +
add eax 8 +
mov [esp+0Ch] edx +
mov dword ptr [esp+10h] 3Eh +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] esi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+3Ch] 0 +
call sub_416910  +
mov edx 1 +
test al al +
mov eax [esp+24h] +
cmovnz eax [esp+3Ch] +
xor ecx ecx +
mov [esp+24h] eax +
mov eax esi +
call sub_418150  +
jmp loc_419C9E  +
***
jmp loc_419DD0  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov eax [esp+20h] +
mov edx [esp+24h] +
mov ecx [esp+28h] +
test ebx ebx +
mov esi [esp+30h] +
jz loc_419E10  +
mov dword ptr [esp] 0 +
call sub_419160  +
test eax eax +
jz loc_419E05  +
mov edx esi +
mov [eax+0Bh] dl +
mov [eax+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+28h] offset aRegisteringP_1 +
mov dword ptr [esp+24h] 4 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41ECD0  +
***
push ebx  +
sub esp 18h +
movzx eax byte ptr [esp+34h] +
mov ecx [esp+28h] +
mov edx [esp+24h] +
mov ebx [esp+30h] +
mov [esp] eax +
mov eax [esp+20h] +
call sub_419160  +
test eax eax +
jz loc_419E63  +
mov edx [esp+2Ch] +
mov byte ptr [eax+0Ah] 1 +
mov [eax+0Bh] bl +
mov [eax+0Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
xor edx edx +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0 +
mov eax ebx +
call sub_419160  +
mov ecx offset aPush_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_418DB0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aPop_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_418B80 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aPoison +
mov edx offset off_462382 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_41A340 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aSystem_header +
mov edx offset off_462382 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_4175B0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aDependency +
mov edx offset off_462382 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_419100 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aWarning +
mov edx offset off_462382 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_4186B0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov ecx offset aError_0 +
mov edx offset off_462382 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_419020 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_419160  +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_419010 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+1DCh] +
call sub_417290  +
shl eax 2 +
mov [esp] eax +
call sub_435ED0  +
mov ebx eax +
mov eax [esi+1DCh] +
mov edx ebx +
call sub_4180F0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 8 +
mov eax [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+1DCh] +
mov ecx ebx +
call sub_418080  +
mov [esp+10h] ebx +
add esp 8 +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edi [esp+28h+arg_0] +
lea edx [esp+28h+var_C] +
mov esi [esp+28h+arg_4] +
mov eax edi +
call sub_417650  +
mov dword ptr [esi] 0 +
test eax eax +
mov ebx eax +
jz loc_41A063  +
movzx eax byte ptr [eax+14h] +
xor ecx ecx +
and eax 3Fh +
cmp al 2 +
jz loc_41A047  +
mov [esi] ecx +
xor eax eax +
test ebx ebx +
setz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esp+28h+var_C] +
mov cl 1 +
test edx edx +
jz loc_41A037  +
mov eax ebx +
call sub_4178A0  +
xor ecx ecx +
mov eax [eax] +
test eax eax +
setnz cl  +
jmp loc_41A037  +
mov eax [edi+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jnz loc_41A039  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] edi +
call sub_41BC80  +
jmp loc_41A039  +
***
jmp sub_41A090  +
***
mov eax [esp+arg_0] +
add eax 240h +
retn   +
***
mov eax [esp+4] +
add eax 1E0h +
retn   +
***
push edi  +
mov ecx 15h +
push esi  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
lea edi [eax+1E0h] +
movs   +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
mov eax [ebx+180h] +
test eax eax +
jz loc_41A0E7  +
add esp 8 +
pop ebx  +
retn   +
***
call sub_42DF40  +
mov [ebx+180h] eax +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov ecx [ebx+1C0h] +
mov eax [ebx+1BCh] +
mov edx ecx +
sub edx eax +
cmp edx 6Fh +
jbe loc_41A1F0  +
mov edx [ebx+1B8h] +
add eax 70h +
mov [ebx+1BCh] eax +
cmp eax edx +
jz loc_41A217  +
mov esi [ebx+1C8h] +
add eax esi +
not esi  +
and eax esi +
mov esi [ebx+1B4h] +
mov edi eax +
mov [ebx+1BCh] eax +
sub edi esi +
mov [esp+1Ch+var_10] edi +
mov edi ecx +
sub edi esi +
cmp [esp+1Ch+var_10] edi +
jbe loc_41A171  +
mov [ebx+1BCh] ecx +
mov eax ecx +
test dl 1 +
mov edi edx +
mov [ebx+1B8h] eax +
mov esi 70h +
jnz loc_41A223  +
test edi 2 +
jnz loc_41A240  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jz loc_41A1AD  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_41A1B5  +
mov byte ptr [edi] 0 +
movzx ecx [esp+1Ch+arg_C] +
movzx eax byte ptr [edx+3Ch] +
mov [edx+0Ch] ebp +
mov [edx+8] ebp +
and ecx 1 +
add ecx ecx +
and eax 0FFFFFFFDh +
or eax ecx +
mov [edx+3Ch] al +
mov eax [ebx] +
add ebp [esp+1Ch+arg_8] +
mov byte ptr [edx+38h] 1 +
mov [edx+28h] eax +
mov eax edx +
mov [edx+10h] ebp +
mov [ebx] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+1B0h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] 70h +
call sub_440CD0  +
mov eax [ebx+1BCh] +
mov ecx [ebx+1C0h] +
jmp loc_41A128  +
or byte ptr [ebx+1D8h] 2 +
jmp loc_41A13F  +
lea edi [edx+1] +
mov si 6Fh +
test edi 2 +
mov byte ptr [edx] 0 +
jz loc_41A193  +
lea esi [esi+0] +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_41A193  +
***
jmp sub_41A260  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov ebx [eax+2F8h] +
call sub_417490  +
test eax eax +
mov ecx eax +
jz loc_41A5D0  +
mov edx [eax+8] +
lea eax [edx+20h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov ecx [ecx+0Ch] +
sub esp eax +
xor eax eax +
lea esi [esp+38h+var_15] +
and esi 0FFFFFFF0h +
cmp byte ptr [ecx] 4Ch +
lea edi [ecx+edx-1] +
mov edx esi +
setz al  +
lea eax [ecx+eax+1] +
cmp eax edi +
jnb loc_41A3D3  +
mov [ebp+var_1C] ebx +
jmp loc_41A3A3  +
add eax 1 +
add edx 1 +
cmp edi eax +
mov [edx-1] cl +
jbe loc_41A3D0  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_41A396  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_41A3B9  +
cmp bl 5Ch +
jnz loc_41A396  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp edi eax +
mov [edx-1] cl +
ja loc_41A3A3  +
nop   +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_418150  +
mov eax [ebp+arg_0] +
call sub_417560  +
test ebx ebx +
jz loc_41A498  +
mov [ebp+var_1C] 0 +
jmp loc_41A40D  +
test eax eax +
jz loc_41A498  +
mov [ebp+var_1C] ebx +
mov ebx eax +
mov edi [ebx+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call strcmp  +
test eax eax +
mov eax [ebx] +
jnz loc_41A400  +
mov edx [ebp+var_1C] +
test edx edx +
jz loc_41A61F  +
mov esi [ebp+var_1C] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_420850  +
test eax eax +
mov esi eax +
jz loc_41A47A  +
mov eax [ebp+arg_0] +
mov eax [eax+21Ch] +
test eax eax +
jz loc_41A45C  +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
cmp dl 1 +
jz loc_41A590  +
test dl dl +
jnz loc_41A580  +
test byte ptr [ebx+10h] 4 +
jz loc_41A4A0  +
mov eax [ebx+8] +
mov [esp+38h+var_38] eax +
call free  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call free  +
mov [esp+38h+var_38] ebx +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+8] +
mov [esp+38h+var_34] offset asc_4623D4 +
mov [esp+38h+var_38] esi +
call strcspn  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_4241A0  +
add edi [ebx+8] +
and byte ptr [eax+14h] 0C0h +
mov esi eax +
and word ptr [eax+14h] 0D67Fh +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 0Ah +
call strchr  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_2C] 1 +
sub eax edi +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41A100  +
test eax eax +
mov edi eax +
jz loc_41A665  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_420140  +
mov eax [ebp+arg_0] +
mov byte ptr [edi+3Dh] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_41DCC0  +
test al al +
jz loc_41A649  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41A260  +
mov eax [esi+18h] +
mov edx [ebx+0Ch] +
mov [eax+8] edx +
mov ecx [esi+18h] +
movzx edx byte ptr [ebx+10h] +
movzx eax byte ptr [ecx+14h] +
mov edi edx +
and edi 1 +
shl edi 2 +
and eax 0FFFFFFFBh +
or eax edi +
mov [ecx+14h] al +
mov ecx [esi+18h] +
shl edx 2 +
and edx 8 +
movzx eax byte ptr [ecx+14h] +
and eax 0FFFFFFF7h +
or eax edx +
mov [ecx+14h] al +
jmp loc_41A47A  +
mov [esp+38h+var_38] esi +
call sub_41DBA0  +
jmp loc_41A474  +
mov eax [ebp+arg_0] +
mov eax [eax+1F4h] +
test eax eax +
jz loc_41A5B3  +
mov edx [ebp+arg_0] +
mov edx [edx+20h] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edx +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+267h] 0 +
jnz loc_41A62D  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
jmp loc_41A46C  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragm_0 +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_41EDD0  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_418150  +
mov eax [ebp+arg_0] +
call sub_417560  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+arg_0] +
mov [esi+2F8h] eax +
jmp loc_41A432  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_41B220  +
jmp loc_41A5BF  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9EDh +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_405910  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9F1h +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_405910  +
jmp sub_41A690  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [edx] +
mov [ebp+var_28] ecx +
lea ecx [eax-1] +
add eax 1Dh +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov esi [edx+4] +
sub esp eax +
xor eax eax +
lea edi [esp+48h+var_2C+3] +
and edi 0FFFFFFF0h +
cmp byte ptr [esi] 4Ch +
setz al  +
lea edx [esi+eax+1] +
add esi ecx +
cmp edx esi +
mov eax edi +
jnb loc_41A912  +
mov [ebp+var_1C] ebx +
jmp loc_41A6E4  +
add edx 1 +
add eax 1 +
cmp esi edx +
mov [eax-1] cl +
jbe loc_41A710  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jnz loc_41A6D7  +
movzx ebx byte ptr [edx+1] +
cmp bl 22h +
jz loc_41A6FA  +
cmp bl 5Ch +
jnz loc_41A6D7  +
add edx 1 +
add eax 1 +
add edx 1 +
mov ecx ebx +
cmp esi edx +
mov [eax-1] cl +
ja loc_41A6E4  +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov esi eax +
sub esi edi +
mov byte ptr [eax] 0Ah +
mov eax [ebx+4Ch] +
mov [ebp+var_2C] eax +
mov eax [ebx+0F0h] +
mov [ebp+var_30] eax +
mov eax [ebx+104h] +
mov [esp+48h+var_44] 1Ch +
mov [esp+48h+var_48] 1 +
mov [ebp+var_34] eax +
call sub_435F00  +
mov [ebx+4Ch] eax +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call sub_41A100  +
mov eax [ebx] +
mov edx [eax+28h] +
test edx edx +
jz loc_41A770  +
mov edx [edx+2Ch] +
mov [eax+2Ch] edx +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+48h+var_48] ebx +
call sub_420140  +
mov esi [ebx+50h] +
mov dword ptr [ebx+50h] offset off_4625A4 +
mov [esp+48h+var_48] ebx +
call sub_417B00  +
mov edx 1 +
mov eax ebx +
call sub_417FF0  +
cmp byte ptr [ebx+58h] 51h +
mov [ebx+50h] esi +
jz loc_41A857  +
mov [esp+48h+var_48] 10h +
mov esi 1 +
call sub_435ED0  +
mov edi eax +
mov eax [ebx+54h] +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov eax [ebx+1E0h] +
test eax eax +
jz loc_41A803  +
mov edx [ebx+0F0h] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call eax  +
mov eax [ebx] +
mov dword ptr [eax+2Ch] 0 +
mov [esp+48h+var_48] ebx +
call sub_41A260  +
mov eax [ebx+4Ch] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebp+var_2C] +
mov [ebx+4Ch] eax +
mov eax [ebp+var_30] +
mov [ebx+0F0h] eax +
mov eax [ebp+var_34] +
mov [ebx+104h] eax +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] 0 +
call sub_41B880  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] 320h +
call sub_435ED0  +
mov edx 1 +
mov [ebp+var_24] 32h +
mov edi eax +
mov eax [ebx+54h] +
mov ecx edi +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov edi ebx +
mov ebx edx +
nop   +
mov edx ebx +
add ebx 1 +
shl edx 4 +
mov [esp+48h+var_48] edi +
lea esi [ecx+edx] +
mov [ebp+var_20] edx +
mov [ebp+var_1C] ecx +
call sub_41DB20  +
mov edx [ebp+var_20] +
mov ecx [eax] +
mov [esi] ecx +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov eax [eax+0Ch] +
mov ecx [ebp+var_1C] +
or word ptr [esi+6] 400h +
mov [esi+0Ch] eax +
mov eax [ebp+var_28] +
cmp byte ptr [ecx+edx+4] 52h +
mov [esi] eax +
jz loc_41A905  +
cmp [ebp+var_24] ebx +
jnz loc_41A890  +
mov eax [ebp+var_24] +
mov [esp+48h+var_48] ecx +
lea eax [eax+eax*2] +
mov edx eax +
shr edx 1Fh +
add eax edx +
mov [ebp+var_24] eax +
sar [ebp+var_24] 1 +
mov eax [ebp+var_24] +
shl eax 4 +
mov [esp+48h+var_44] eax +
call sub_435F50  +
mov ecx eax +
jmp loc_41A890  +
mov edx ebx +
mov ebx edi +
mov esi edx +
mov edi ecx +
jmp loc_41A803  +
xor esi esi +
jmp loc_41A717  +
***
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_417490  +
mov byte ptr [ebx+58h] 53h +
test eax eax +
jz loc_41A950  +
mov ecx [esp+18h+arg_4] +
lea edx [eax+8] +
mov eax ebx +
call sub_41A690  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset a_pragmaTakesAP +
mov [esp+18h+var_14] 3 +
call sub_41ECD0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_C] 1 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_41A100  +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [ebx+20h] eax +
call sub_420140  +
lea eax [esi+esi*2] +
cmp byte ptr [ebx+270h] 0 +
lea eax ds:462520h[eax*4] +
mov [ebx+50h] eax +
jz loc_41A9D2  +
mov eax ebx +
call sub_417F20  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+18h+var_18] ebx +
call eax  +
mov eax ebx +
mov edx 1 +
call sub_417FF0  +
mov [esp+18h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41A260  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
mov [ebp+var_1C] esi +
call memcpy  +
mov [esp+28h+var_24] 3Dh +
mov [esp+28h+var_28] edi +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
jz loc_41AA75  +
sub eax edi +
mov byte ptr [ebx+eax] 20h +
mov eax [ebp+arg_0] +
mov ecx ebx +
xor edx edx +
mov byte ptr [ebx+esi] 0Ah +
mov [esp+28h+var_28] esi +
call sub_41A970  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx+edx] 20h +
lea esi [edx+2] +
mov byte ptr [ebx+edx+1] 31h +
jmp loc_41AA5A  +
***
push ebx  +
sub esp 18h +
lea eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_440430  +
mov ebx eax +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_41AA00  +
mov [esp] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
xor edx edx +
mov [esp+28h+var_28] esi +
call sub_41A970  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+0Ch] +
mov [esp] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call memcpy  +
mov eax [ebp+8] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
mov edx 7 +
mov [esp] esi +
call sub_41A970  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp] esi +
mov [ebp-24h] ecx +
mov [ebp-1Ch] eax +
call strlen  +
mov dword ptr [esp+4] 3Dh +
mov [esp] esi +
mov edi eax +
call strchr  +
mov [ebp-20h] eax +
lea eax [edi+20h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebx +
call memcpy  +
mov ecx [ebp-20h] +
mov edx [ebp-24h] +
test ecx ecx +
jz loc_41AC12  +
sub ecx esi +
mov byte ptr [ebx+ecx] 28h +
lea eax [edi+1] +
mov byte ptr [ebx+edi] 29h +
mov byte ptr [ebx+eax] 0Ah +
mov ecx ebx +
mov [esp] eax +
mov eax [ebp-1Ch] +
call sub_41A970  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
jmp loc_41ABF9  +
***
mov edx [esp+8] +
mov ecx 10h +
mov eax [esp+4] +
jmp loc_41AB90  +
***
mov edx [esp+8] +
mov ecx 11h +
mov eax [esp+4] +
jmp loc_41AB90  +
***
mov esi offset unk_462528 +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+14h+arg_0] +
movzx edx word ptr [esi] +
add esi 0Ch +
mov eax [esi-10h] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] eax +
call sub_4241A0  +
lea edx [ebx+ebx+1] +
add ebx 1 +
and ebx 7Fh +
cmp esi offset unk_46260C +
mov [eax+0Ch] dl +
jnz loc_41AC71  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
jmp sub_417930  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
jz loc_41AD18  +
cmp ecx 2 +
jz loc_41AD13  +
test ecx ecx +
jz loc_41ACE0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov esi [eax] +
test esi esi +
jz loc_41ACD4  +
test ebx ebx +
jz loc_41AD20  +
test ecx ecx +
jnz loc_41AD00  +
mov ecx [eax+14h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
cmp ecx 2 +
jz loc_41AD26  +
cmp ecx 1 +
lea eax [esi+edx*4] +
jnz loc_41ACD6  +
mov edx [eax] +
mov [ebx] edx +
jmp loc_41ACD6  +
mov esi [eax+4] +
jmp loc_41ACE2  +
lea esi [eax+8] +
jmp loc_41ACE2  +
lea eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
mov ecx [eax+18h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
xor ebx ebx +
sub esp 14h +
cmp [esp+1Ch+arg_8] 0 +
lea edx [esp+1Ch+var_C] +
mov ecx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_C] 0 +
cmovnz ebx edx +
mov edx [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] ebx +
call sub_41ACC0  +
mov [eax] esi +
mov eax [esp+1Ch+var_C] +
test eax eax +
jz loc_41AD7C  +
mov [eax] edi +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
lea ecx [esp+14h+var_4] +
mov [esp+14h+var_14] ecx +
mov ecx edx +
xor edx edx +
mov [esp+14h+var_4] 0 +
call sub_41ACC0  +
test eax eax +
jz loc_41ADB7  +
mov eax [esp+14h+var_4] +
add esp 14h +
retn   +
xor eax eax +
jmp loc_41ADB3  +
***
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
test ecx ecx +
lea edi ds:0[edx*4] +
jz loc_41ADE2  +
shl edx 4 +
mov [esp+14h+var_14] edx +
call sub_435ED0  +
mov [ebx] eax +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] esi +
call sub_421430  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_41AE20  +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 1Ch +
mov esi 1Ch +
call sub_435ED0  +
test al 1 +
mov ecx eax +
jnz loc_41AE90  +
test cl 2 +
jnz loc_41AE80  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_41AE43  +
add ecx edx +
test esi 2 +
jz loc_41AE64  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_41AE6C  +
mov byte ptr [ecx] 0 +
mov edx [ebx] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [edx] eax +
jmp loc_41AE10  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub esi 2 +
jmp loc_41AE3C  +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 1Bh +
jmp loc_41AE37  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov edi [esp+28h+arg_0] +
jz loc_41AF00  +
add eax 4Ch +
call sub_41AE00  +
mov [eax+10h] esi +
mov ebx eax +
mov dword ptr [eax+18h] 2 +
mov [esp+28h+var_28] 0Ch +
call sub_435ED0  +
mov ecx [esp+28h+arg_4] +
mov [eax] ebp +
mov [eax+4] edi +
mov [eax+8] edi +
mov [ebx+14h] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
mov eax [esp+28h+arg_8] +
lea eax [ecx+eax*4] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [eax+4Ch] +
test edx edx +
jz loc_41AEB3  +
cmp dword ptr [edx+18h] 2 +
jz loc_41AF12  +
mov ebp [edx+14h] +
jmp loc_41AEB3  +
mov edx [edx+14h] +
mov ebp [edx] +
jmp loc_41AEB3  +
***
push edi  +
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [eax+24h] +
mov ebx [edx] +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
lea edx [ebx+1] +
mov eax edx +
shl eax 4 +
sub ecx esi +
cmp ecx eax +
jnb loc_41AFE6  +
lea eax [ebp+24h] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_20] 10h +
mov [esp+28h+var_28] ebp +
call sub_4215E0  +
mov eax [ebp+24h] +
mov ebx [edi] +
mov esi [eax+8] +
lea edx [ebx+1] +
mov [edi] edx +
shl ebx 4 +
add esp 1Ch +
lea eax [esi+ebx] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0F0h] +
mov [esp+44h+var_24] eax +
mov eax edi +
mov [esp+44h+var_28] edx +
lea edx [edx+0Ch] +
call sub_41AFA0  +
mov [edi+0F0h] eax +
mov [esp+44h+var_44] edi +
call sub_422520  +
mov [edi+0F0h] ebx +
mov [esp+44h+var_18] eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_41B1DB  +
mov ecx [esp+44h+var_24] +
cmp byte ptr [ecx+25Ah] 0 +
jz loc_41B1F7  +
mov ecx [esp+44h+var_28] +
movzx ebx word ptr [ecx+10h] +
test bx bx +
jz loc_41B1F7  +
cmp al 38h +
jz loc_41B073  +
cmp al 3Eh +
jnz loc_41B1F7  +
mov ecx [esp+44h+var_18] +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
lea ecx [eax+1] +
lea ebp [eax+edx-1] +
cmp ebp ecx +
jbe loc_41B1F7  +
mov esi ecx +
mov ecx ebp +
cmp ecx esi +
jbe loc_41B1D0  +
movzx eax byte ptr [esi] +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4660A0[edx+edx] +
test dh 2 +
jz loc_41B0D6  +
jmp loc_41B210  +
add esi 1 +
cmp esi ecx +
jz loc_41B1D0  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4660A0[edx+edx] +
test dh 2 +
jnz loc_41B210  +
cmp al 24h +
jnz loc_41B0B4  +
cmp byte ptr [edi+262h] 0 +
jz loc_41B0B4  +
cmp ecx esi +
jbe loc_41B1D0  +
movzx eax byte ptr [esi] +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4660A0[edx+edx] +
jmp loc_41B111  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4660A0[edx+edx] +
test dx 204h +
jnz loc_41B125  +
cmp al 24h +
jnz loc_41B12C  +
cmp byte ptr [edi+262h] 0 +
jz loc_41B12C  +
add esi 1 +
cmp ecx esi +
ja loc_41B103  +
mov edi esi +
sub edi [esp+44h+var_30] +
test ebx ebx +
jz loc_41B1BC  +
mov eax [esp+44h+var_28] +
lea edx [ebx+1] +
mov ebx 1 +
mov [esp+44h+var_1C] esi +
mov [esp+44h+var_20] ecx +
mov ebp [eax] +
mov esi ebp +
mov ebp edx +
jmp loc_41B161  +
add ebx 1 +
cmp ebx ebp +
jz loc_41B203  +
mov eax [esi+ebx*4-4] +
cmp [eax+4] edi +
jnz loc_41B156  +
mov eax [eax] +
mov [esp+44h+var_3C] edi +
mov [esp+44h+var_2C] eax +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_41B156  +
mov eax [esp+44h+var_2C] +
mov ecx [esp+44h+var_20] +
mov [esp+44h+var_3C] offset aMacroArgumentS +
mov esi [esp+44h+var_1C] +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_30] ecx +
mov [esp+44h+var_44] eax +
call sub_41ECD0  +
mov ecx [esp+44h+var_30] +
cmp esi ecx +
jnb loc_41B1F7  +
mov eax [esp+44h+var_28] +
cmp ecx esi +
movzx ebx word ptr [eax+10h] +
ja loc_41B098  +
mov [esp+44h+var_30] esi +
xor edi edi +
jmp loc_41B132  +
mov ecx [esp+44h+var_18] +
mov edx [ecx+8] +
test byte ptr [edx+15h] 10h +
jz loc_41B045  +
mov byte ptr [ecx+4] 50h +
movzx eax word ptr [edx+18h] +
mov [ecx+8] eax +
mov eax [esp+44h+var_18] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+44h+var_20] +
mov esi [esp+44h+var_1C] +
jmp loc_41B1BC  +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
jmp loc_41B111  +
***
sub esp 24h +
mov ebx [esp+24h+arg_4] +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41B240  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test byte ptr [ebx+15h] 1 +
jnz loc_41B234  +
mov esi [ebx+18h] +
test byte ptr [esi+14h] 8 +
jnz loc_41B234  +
mov eax [esp+24h+arg_0] +
mov edx [esi+8] +
mov eax [eax+1Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_40E480  +
mov eax [eax+10h] +
test eax eax +
jns loc_41B234  +
mov eax [esi+8] +
mov edx [ebx] +
mov [esp+24h+var_14] offset aMacroSIsNotUse +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_20] 0Eh +
mov [esp+24h+var_24] eax +
call sub_41EE20  +
jmp loc_41B234  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov eax [ebx+18h] +
cmp eax 0Ah +
ja loc_41B4D0  +
jmp ds:off_4627B4[eax*4]  +
mov eax [esi+224h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ebx eax +
nop   +
mov [esp+3Ch+var_38] 15h +
mov [esp+3Ch+var_3C] esi +
call sub_421670  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] offset aU_0 +
mov [esp+3Ch+var_3C] eax +
mov edi eax +
call sub_450970  +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+270h] 0 +
jz loc_41B566  +
mov edx [esi+1Ch] +
mov eax [edx+2Ch] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_40EB00  +
mov ebx eax +
jmp loc_41B2D0  +
cmp byte ptr [esi+256h] 0 +
jnz loc_41B543  +
mov eax [esi+154h] +
test eax eax +
jz loc_41B5B9  +
cmp dword ptr [ebx+18h] 1 +
jz loc_41B591  +
mov edi [esi+158h] +
test edi edi +
jnz loc_41B2F6  +
mov ebx 1 +
jmp loc_41B2D0  +
cmp eax 2 +
jz loc_41B5A0  +
mov eax [esi+0A0h] +
mov [esp+3Ch+var_3C] eax +
call sub_42D9C0  +
test eax eax +
mov ebx eax +
jz loc_41B728  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+eax+3] +
mov [esp+3Ch+var_38] eax +
call sub_421670  +
mov edi eax +
mov byte ptr [eax] 22h +
lea edx [eax+1] +
lea eax [ebx+ebp] +
cmp ebx eax +
jz loc_41B3CC  +
add ebx 1 +
movzx ecx byte ptr [ebx-1] +
cmp cl 22h +
jz loc_41B3BF  +
cmp cl 5Ch +
jnz loc_41B4F8  +
mov byte ptr [edx] 5Ch +
add edx 2 +
mov [edx-1] cl +
cmp ebx eax +
jnz loc_41B3AA  +
mov byte ptr [edx] 22h +
mov eax edi +
mov byte ptr [edx+1] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
mov ebx [eax+20h] +
sub ebx 1 +
jmp loc_41B2D0  +
mov eax [esi] +
test eax eax +
jz loc_41B352  +
xor ebx ebx +
cmp byte ptr [eax+3Dh] 0 +
setz bl  +
jmp loc_41B2D0  +
cmp byte ptr [esi+256h] 0 +
jnz loc_41B520  +
mov [esp+3Ch+var_3C] esi +
call sub_42DA60  +
mov edi [eax+30h] +
mov ebx eax +
test edi edi +
jnz loc_41B34E  +
mov [esp+3Ch+var_3C] eax +
call sub_42DA70  +
test eax eax +
jz loc_41B6F7  +
mov [esp+3Ch+var_3C] eax +
call sub_42D9D0  +
test eax eax +
jz loc_41B6FF  +
add eax 24h +
mov [esp+3Ch+var_3C] eax +
call localtime  +
test eax eax +
jz loc_41B6FF  +
mov [esp+3Ch+var_3C] eax +
call asctime  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_20] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+2] +
mov [esp+3Ch+var_38] eax +
call sub_421670  +
mov edx [esp+3Ch+var_20] +
mov byte ptr [eax] 22h +
mov edi eax +
lea eax [eax+1] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov byte ptr [edi+ebp] 22h +
mov [ebx+30h] edi +
jmp loc_41B34E  +
cmp byte ptr [esi+2A8h] 0 +
jz loc_41B4B5  +
cmp byte ptr [esi+8] 0 +
jnz loc_41B502  +
mov ebx [esi+2E8h] +
lea eax [ebx+1] +
mov [esi+2E8h] eax +
jmp loc_41B2D0  +
mov eax [ebx] +
mov ebx 1 +
mov [esp+3Ch+var_34] offset aInvalidBuiltIn +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41ECD0  +
jmp loc_41B2D0  +
mov [edx] cl +
add edx 1 +
jmp loc_41B3A6  +
mov [esp+3Ch+var_34] offset a__counter__Exp +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
call sub_41ECD0  +
jmp loc_41B4B5  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41ED10  +
jmp loc_41B415  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_41ED10  +
jmp loc_41B330  +
mov eax [esi+1Ch] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_40EC70  +
mov edx [esi+1Ch] +
jmp loc_41B313  +
mov edi [esi+154h] +
jmp loc_41B34E  +
mov eax [esi+1Ch] +
mov edx [eax+2Ch] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_40EB50  +
mov ebx eax +
jmp loc_41B381  +
mov eax [esi+15Ch] +
cmp eax 0FFFFFFFEh +
jz loc_41B66F  +
test eax eax +
js loc_41B689  +
lea eax [esi+15Ch] +
mov [esp+3Ch+var_3C] eax +
call gmtime  +
mov edi eax +
test edi edi +
jz loc_41B6C6  +
mov [esp+3Ch+var_38] 0Eh +
mov [esp+3Ch+var_3C] esi +
call sub_421670  +
mov ecx [edi+14h] +
mov edx [edi+0Ch] +
add ecx 76Ch +
mov [esi+154h] eax +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] edx +
mov edx [edi+10h] +
mov [esp+3Ch+var_38] offset aS2d4d +
mov [esp+3Ch+var_3C] eax +
mov edx ds:off_462F20[edx*4] +
mov [esp+3Ch+var_34] edx +
call sub_450970  +
mov [esp+3Ch+var_38] 0Bh +
mov [esp+3Ch+var_3C] esi +
call sub_421670  +
mov ebp [edi] +
mov ecx [edi+4] +
mov edx [edi+8] +
mov [esi+158h] eax +
mov [esp+3Ch+var_2C] ebp +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset a02d02d02d +
mov [esp+3Ch+var_3C] eax +
call sub_450970  +
jmp loc_41B33E  +
mov eax [esi+22Ch] +
test eax eax +
jz loc_41B689  +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov [esi+15Ch] eax +
jmp loc_41B5C8  +
mov edi ds:__imp__errno +
call edi  +
mov dword ptr [eax] 0 +
mov [esp+3Ch+var_3C] 0 +
call time  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_10] eax +
jz loc_41B6BF  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call localtime  +
mov edi eax +
jmp loc_41B5E0  +
call edi  +
cmp dword ptr [eax] 0 +
jz loc_41B6AC  +
mov [esp+3Ch+var_34] offset aCouldNotDeterm +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_41EFD0  +
mov dword ptr [esi+154h] offset a????????? +
mov dword ptr [esi+158h] offset a?????? +
jmp loc_41B33E  +
mov edi [ebx+30h] +
jmp loc_41B34E  +
mov [esp+3Ch+var_34] offset aCouldNotDete_0 +
mov edi offset a?????????????? +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_41EFD0  +
mov dword ptr [ebx+30h] offset a?????????????? +
jmp loc_41B2F6  +
mov [esp+3Ch+var_34] offset a_cpp_builtin_m +
mov [esp+3Ch+var_38] 12Eh +
mov [esp+3Ch+var_3C] offset a____GccLibcppM +
call sub_405910  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov edx [esp+40h+var_34] +
mov ebx [esp+40h+var_30] +
mov eax [esp+40h+var_38] +
add ebx edx +
nop   +
cmp edx ebx +
jz loc_41B782  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 22h +
jz loc_41B775  +
cmp cl 5Ch +
jnz loc_41B784  +
mov byte ptr [eax] 5Ch +
add eax 2 +
mov [eax-1] cl +
cmp edx ebx +
jnz loc_41B764  +
pop ebx  +
retn   +
mov [eax] cl +
add eax 1 +
jmp loc_41B760  +
***
sub esp 24h +
mov ecx [esp+24h+arg_4] +
mov eax [esp+24h+arg_C] +
mov ebx [esp+24h+arg_8] +
movzx edx word ptr [ecx+10h] +
cmp edx eax +
jz loc_41B850  +
jbe loc_41B834  +
lea esi [eax+1] +
cmp edx esi +
jnz loc_41B800  +
movzx ecx byte ptr [ecx+14h] +
test cl 2 +
jz loc_41B800  +
mov eax [esp+24h+arg_0] +
mov ebx 1 +
cmp byte ptr [eax+26Ah] 0 +
jz loc_41B82C  +
and ecx 4 +
jnz loc_41B82C  +
cmp byte ptr [eax+248h] 0 +
jz loc_41B860  +
mov [esp+24h+var_1C] offset aIsoC11Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_41ECD0  +
jmp loc_41B82C  +
mov ecx [ebx] +
mov [esp+24h+var_10] eax +
mov [esp+24h+var_14] edx +
mov [esp+24h+var_1C] offset aMacroSRequires +
mov [esp+24h+var_18] ecx +
mov eax [esp+24h+arg_0] +
xor ebx ebx +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] eax +
call sub_41ECD0  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov ecx [ebx] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_14] eax +
mov [esp+24h+var_1C] offset aMacroSPassedUA +
mov [esp+24h+var_18] ecx +
jmp loc_41B816  +
mov ebx 1 +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_1C] offset aIsoC99Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_41ECD0  +
jmp loc_41B82C  +
***
sub esp 4 +
mov ebx [esp+4+arg_4] +
mov esi [esp+4+arg_8] +
test ebx ebx +
jz loc_41B8C3  +
mov eax [esp+4+arg_0] +
add eax 4Ch +
call sub_41AE00  +
mov edx [esp+4+arg_C] +
shl edx 4 +
mov [eax+8] esi +
add esi edx +
mov dword ptr [eax+18h] 1 +
mov [eax+14h] ebx +
mov dword ptr [eax+10h] 0 +
mov [eax+0Ch] esi +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+4+arg_0] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_41B891  +
cmp dword ptr [eax+18h] 2 +
jz loc_41B8E0  +
mov ebx [eax+14h] +
jmp loc_41B891  +
mov eax [eax+14h] +
mov ebx [eax] +
jmp loc_41B891  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [edx+18h] 7 +
jz loc_41BA00  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_41B2A0  +
mov [esp+48h+var_48] eax +
mov [ebp+var_2C] eax +
call strlen  +
mov ecx eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
mov eax [ebp+var_2C] +
lea edx [esp+48h+var_2C+3] +
and edx 0FFFFFFF0h +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] edx +
call memcpy  +
mov edx [ebp+var_2C] +
mov ecx [ebp+var_30] +
mov byte ptr [edx+ecx] 0Ah +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
call sub_41A100  +
mov [esp+48h+var_48] ebx +
call sub_420140  +
mov [esp+48h+var_48] ebx +
call sub_420A10  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_422520  +
mov [ebp+var_2C] eax +
mov [eax] edi +
mov eax [ebx+4Ch] +
cmp dword ptr [eax+18h] 2 +
jz loc_41BA20  +
mov eax [ebp+var_2C] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_41B880  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jz loc_41B9EA  +
mov eax [esi] +
mov [esp+48h+var_40] offset aInvalidBuiltIn +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_41ECD0  +
mov [esp+48h+var_48] ebx +
call sub_41A260  +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [ebx+8] 0 +
jnz loc_41B9F7  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] ecx +
call sub_41A920  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_1C] +
mov edx 1 +
mov eax ebx +
mov [ebp+var_1C] 0 +
call sub_41ADC0  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] esi +
mov [ebp+var_30] eax +
mov eax [ebx+1Ch] +
mov [esp+48h+var_48] eax +
call sub_40DFD0  +
mov edx [ebx+1Ch] +
mov edi [ebp+var_30] +
mov ecx [ebp+var_2C] +
mov edx [edx+4Ch] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov eax edi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edx +
mov edx [ebp+var_1C] +
call sub_41AF20  +
mov eax [edi+4] +
mov ecx edi +
mov [esp+48h+var_40] 1 +
mov edx esi +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
mov eax ebx +
call sub_41AEA0  +
jmp loc_41B9C3  +
***
sub esp 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi+4Ch] +
lea eax [edi+30h] +
cmp ebx eax +
jz loc_41BBBE  +
mov esi [ebx+14h] +
test esi esi +
jz loc_41BB3B  +
cmp dword ptr [ebx+18h] 2 +
jz loc_41BB66  +
mov eax [ebx+4] +
test eax eax +
jz loc_41BB30  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41BBB0  +
cmp esi eax +
mov ebp esi +
jz loc_41BB98  +
and word ptr [esi+14h] 0F7FFh +
cmp [edi+68h] esi +
jz loc_41BB9F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_41BB4A  +
mov [esp+1Ch+var_1C] eax +
call sub_421640  +
mov eax [ebx+4] +
mov [edi+4Ch] eax +
mov dword ptr [eax] 0 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov edx [ebx+10h] +
mov ebp [esi] +
test edx edx +
jz loc_41BB85  +
mov eax [esi+4] +
test eax eax +
jz loc_41BB85  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov [esp+1Ch+var_1C] esi +
call free  +
test ebp ebp +
mov dword ptr [ebx+14h] 0 +
jnz loc_41BBB7  +
mov esi ebp +
cmp [edi+68h] esi +
jnz loc_41BB3B  +
mov eax [ebx+4] +
test eax eax +
jnz loc_41BB3B  +
mov dword ptr [edi+68h] 0 +
jmp loc_41BB3B  +
mov eax [eax] +
jmp loc_41BB2A  +
mov esi ebp +
jmp loc_41BB16  +
mov [esp+1Ch+var_14] offset a_cpp_pop_conte +
mov [esp+1Ch+var_18] 8FAh +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_405910  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41BC06  +
test eax eax +
jz loc_41BC10  +
mov eax [eax+18h] +
test eax eax +
jz loc_41BC10  +
movzx eax byte ptr [eax+14h] +
shr al 2 +
and eax 1 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_41BBF4  +
lea esi [esi+0] +
xor eax eax +
retn   +
***
mov edx [esp+arg_4] +
add [eax+108h] edx +
nop   +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_41BC70  +
mov ebx [eax+0F0h] +
lea ecx [ebx-10h] +
mov ebx [eax+104h] +
mov [eax+0F0h] ecx +
cmp ecx [ebx+8] +
jnz loc_41BC30  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_41BC30  +
mov [eax+104h] ecx +
mov ecx [ecx+0Ch] +
sub edx 1 +
cmp edx 0FFFFFFFFh +
mov [eax+0F0h] ecx +
jnz loc_41BC38  +
pop ebx  +
retn   +
***
sub esp 1Ch +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [ebp+var_28] edx +
mov [esp+48h+var_48] eax +
call sub_420B40  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_420B40  +
lea eax [esi+eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
mov eax [edi] +
lea esi [esp+48h+var_1D] +
and esi 0FFFFFFF0h +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_420BE0  +
mov edx [edi] +
cmp byte ptr [edx+4] 7 +
mov [ebp+var_1D+1] eax +
jz loc_41BE90  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+4] 53h +
jnz loc_41BE9C  +
mov byte ptr [eax] 0Ah +
sub eax esi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_41A100  +
mov [esp+48h+var_48] ebx +
call sub_420140  +
mov [esp+48h+var_48] ebx +
call sub_420A10  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_422520  +
mov edx [ebx] +
mov ecx [edx+10h] +
cmp [edx] ecx +
jz loc_41BED0  +
mov ecx [eax] +
mov [esp+48h+var_48] ebx +
mov [ebp+var_24] eax +
mov [ebp-20h] ecx +
call sub_41A260  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_41BC80  +
mov eax [ebp+var_1D+1] +
mov byte ptr [eax] 0 +
mov edx [edi] +
mov eax [ebp+var_24] +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov ecx [ebp-20h] +
mov [eax+0Ch] edx +
mov [edi] eax +
xor edi edi +
and word ptr [eax+6] 0FFF7h +
cmp dword ptr [ebx+244h] 0Fh +
mov [eax] ecx +
jz loc_41BE80  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_423D50  +
mov [esp+48h+var_34] esi +
mov [esp+48h+var_38] offset aPastingSAndSDo +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_30] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_40] eax +
call sub_41EDD0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4] 0 +
jnz loc_41BEC0  +
mov eax [ebp+var_1D+1] +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_420BE0  +
jmp loc_41BDA2  +
mov edx [ebp+var_1D+1] +
mov eax edx +
add eax 1 +
mov byte ptr [edx] 20h +
jmp loc_41BD95  +
mov [edi] eax +
mov edi 1 +
mov [esp+48h+var_48] ebx +
call sub_41A260  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+98h+var_64] edx +
mov byte ptr [ebp+0ECh] 0 +
mov byte ptr [ebp+0Bh] 0 +
mov byte ptr [ebp+6Ch] 1 +
movzx edx word ptr [edx+14h] +
mov [esp+98h+var_58] ecx +
mov eax edx +
shr ax 6 +
mov ecx eax +
and cx 84h +
cmp cx 4 +
jz loc_41C0A3  +
test al 4 +
jnz loc_41C058  +
mov esi [esp+98h+var_64] +
xor edi edi +
mov esi [esi+18h] +
test byte ptr [esi+14h] 1 +
mov [esp+98h+var_60] esi +
jnz loc_41C0E1  +
mov esi [esp+98h+var_64] +
mov ecx eax +
or ecx 20h +
shl ecx 6 +
movzx edx word ptr [esi+14h] +
and edx 3Fh +
or edx ecx +
test al 80h +
mov [esi+14h] dx +
jnz loc_41BF92  +
or al 0A0h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov [esi+14h] dx +
mov eax [ebp+214h] +
test eax eax +
jz loc_41BF92  +
mov edx [ebp+20h] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
call eax  +
mov eax [ebp+220h] +
test eax eax +
jz loc_41BFB4  +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_94] esi +
call eax  +
mov esi [esp+98h+var_60] +
movzx eax byte ptr [esi+14h] +
or eax 8 +
cmp word ptr [esi+10h] 0 +
mov [esi+14h] al +
jz loc_41C1C7  +
test edi edi +
jz loc_41C2E5  +
cmp byte ptr [ebp+8] 0 +
jz loc_41C2AB  +
lea eax [ebp+4Ch] +
mov [esp+98h+var_74] eax +
mov [esp+98h+var_78] ebp +
jmp loc_41BFF2  +
mov edi esi +
mov eax [esp+98h+var_74] +
mov ebp [edi+4] +
mov esi [edi] +
mov ebx [edi+8] +
mov dword ptr [edi] 0 +
call sub_41AE00  +
sub ebx ebp +
sar ebx 2 +
lea edx [ebp+ebx*4+0] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+10h] edi +
mov [eax+8] ebp +
mov [eax+0Ch] edx +
mov eax [esp+98h+var_78] +
cmp byte ptr [eax+26Dh] 0 +
jnz loc_41C03C  +
add ds:dword_46B1CC ebx +
test esi esi +
jnz loc_41BFF0  +
mov ebp [esp+98h+var_78] +
mov eax 2 +
mov byte ptr [ebp+6Ch] 0 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+68h] +
mov byte ptr [ebp+6Ch] 0 +
test byte ptr [eax+15h] 1 +
jz loc_41C088  +
mov eax [ebp+64h] +
mov ecx [esp+98h+arg_0] +
mov edx [esp+98h+var_64] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41B8F0  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+18h] +
test byte ptr [eax+14h] 1 +
jz loc_41C065  +
mov eax [ebp+0F0h] +
mov eax [eax-10h] +
mov [esp+98h+arg_0] eax +
jmp loc_41C068  +
or al 80h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov eax [esp+98h+var_64] +
mov [eax+14h] dx +
mov eax [ebp+228h] +
test eax eax +
jz loc_41C117  +
mov edi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edi +
call eax  +
test al al +
jz loc_41C117  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_41BF2E  +
add byte ptr [ebp+10h] 1 +
xor ebx ebx +
add dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 1 +
mov [esp+98h+var_98] ebp +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jnz loc_41C146  +
test ebx ebx +
jz loc_41C142  +
test byte ptr [ebx+6] 1 +
jnz loc_41C0F2  +
mov edx [eax+8] +
test edx edx +
cmovz ebx eax +
jmp loc_41C0F2  +
mov eax [ebp+214h] +
test eax eax +
jz loc_41C0D0  +
mov edx [ebp+20h] +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_90] esi +
call eax  +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_41BF2E  +
mov ebx eax +
jmp loc_41C0F2  +
cmp dl 14h +
jz loc_41C349  +
cmp dl 16h +
jnz loc_41C15E  +
lea edx [ebp+170h] +
cmp eax edx +
jnz loc_41C18E  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_41BC80  +
test ebx ebx +
jz loc_41C18E  +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_41B880  +
sub dword ptr [ebp+10Ch] 1 +
xor edi edi +
sub byte ptr [ebp+10h] 1 +
mov byte ptr [ebp+11h] 0 +
cmp byte ptr [ebp+25Ah] 0 +
jnz loc_41C311  +
test edi edi +
jz loc_41C1BC  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] ebp +
call sub_421400  +
mov byte ptr [ebp+6Ch] 0 +
xor eax eax +
jmp loc_41C07D  +
test al 20h +
jnz loc_41D478  +
mov eax [esp+98h+var_60] +
mov esi [eax+0Ch] +
mov ebx [eax+4] +
mov [esp+98h+var_74] esi +
cmp byte ptr [ebp+26Dh] 0 +
jz loc_41C2F3  +
mov esi [esp+98h+var_74] +
lea ecx [esp+98h+var_1C] +
mov eax ebp +
mov [esp+98h+var_1C] 0 +
mov edx esi +
call sub_41ADC0  +
mov ecx [esp+98h+arg_0] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_78] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_64] +
mov [esp+98h+var_8C] esi +
xor esi esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] ecx +
call sub_40DFD0  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_41C277  +
mov [esp+98h+var_6C] ebp +
mov ebp [esp+98h+var_74] +
mov [esp+98h+var_70] edi +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
add ebx 10h +
mov edx [esp+98h+var_1C] +
mov [esp+98h+var_8C] esi +
add esi 1 +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_78] +
call sub_41AF20  +
cmp esi ebp +
jnz loc_41C245  +
mov edi [esp+98h+var_70] +
mov ebp [esp+98h+var_6C] +
mov ecx [esp+98h+var_78] +
mov esi [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+4] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_1C] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41AEA0  +
mov eax [esp+98h+var_74] +
add ds:dword_46B1CC eax +
jmp loc_41BFCD  +
mov [esp+98h+var_98] ebp +
call sub_420A10  +
mov esi [esp+98h+var_58] +
xor edx edx +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] dx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] eax +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_41B880  +
jmp loc_41BFDF  +
mov byte ptr [ebp+6Ch] 0 +
mov eax 1 +
jmp loc_41C07D  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] eax +
call sub_41B880  +
jmp loc_41C29C  +
mov eax [esp+98h+var_64] +
mov eax [eax+18h] +
test byte ptr [eax+14h] 4 +
jnz loc_41C1AC  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aFunctionLikeMa +
mov [esp+98h+var_94] 6 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_41ED10  +
jmp loc_41C1AC  +
mov eax [esp+98h+var_64] +
mov byte ptr [ebp+11h] 2 +
cmp byte ptr [ebp+26Dh] 0 +
mov eax [eax+18h] +
setnz byte ptr [esp+98h+var_70]  +
movzx ebx word ptr [eax+10h] +
mov [esp+98h+var_5C] eax +
test bx bx +
jz loc_41D129  +
imul eax ebx +
imul ebx ebx +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_421430  +
mov edi eax +
mov [esp+98h+var_40] eax +
mov eax [eax+4] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov esi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_44] eax +
call memset  +
mov eax esi +
add eax ebx +
lea ecx [ebp+170h] +
mov [edi+8] eax +
mov [esp+98h+var_74] edi +
xor edi edi +
mov [esp+98h+var_48] ecx +
mov [esp+98h+var_50] esi +
mov [esp+98h+var_54] 0 +
lea esi [esi+0] +
mov esi [esp+98h+var_50] +
add [esp+98h+var_54] 1 +
cmp byte ptr [esp+98h+var_70] 0 +
mov [esi] eax +
jnz loc_41C6CF  +
mov [esp+98h+var_78] 2 +
mov ecx [esp+98h+var_78] +
xor ebx ebx +
mov [esp+98h+var_6C] 32h +
mov esi [esp+98h+var_50] +
mov [esp+98h+var_68] 0 +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jb loc_41C4BC  +
cmp byte ptr [esp+98h+var_70] 0 +
jz loc_41C42D  +
mov eax [esp+98h+var_6C] +
cmp [esp+98h+var_78] eax +
ja loc_41C506  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_41D590  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 53h +
jz loc_41C4E0  +
cmp al 14h +
jz loc_41C4E8  +
cmp al 15h +
jz loc_41C4F0  +
cmp al 13h +
jz loc_41C530  +
cmp al 16h +
jz loc_41C558  +
cmp al 25h +
jz loc_41C606  +
cmp al 51h +
jz loc_41C615  +
xor eax eax +
mov ecx [esp+98h+var_1C] +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_94] 0 +
setnz al  +
add ebx 1 +
mov [esp+98h+var_90] eax +
mov eax esi +
call sub_41AD40  +
lea eax [ebx+2] +
mov [esp+98h+var_78] eax +
mov eax [esi] +
mov ecx [esp+98h+var_78] +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jnb loc_41C418  +
mov [esp+98h+var_90] 0FA0h +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] ebp +
call sub_4214D0  +
mov [esp+98h+var_74] eax +
mov eax [eax+8] +
mov [esi] eax +
jmp loc_41C418  +
test ebx ebx +
jnz loc_41C476  +
mov eax [esi] +
jmp loc_41C4A8  +
add [esp+98h+var_68] 1 +
jmp loc_41C476  +
mov ecx [esp+98h+var_68] +
mov eax ecx +
sub eax 1 +
test ecx ecx +
jz loc_41C558  +
mov [esp+98h+var_68] eax +
jmp loc_41C476  +
add [esp+98h+var_6C] 3E8h +
mov ecx [esp+98h+var_6C] +
mov eax [esi+14h] +
lea edx ds:0[ecx*4] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_435F50  +
mov [esi+14h] eax +
jmp loc_41C42D  +
mov eax [esp+98h+var_68] +
test eax eax +
jnz loc_41C476  +
mov eax [esp+98h+var_5C] +
test byte ptr [eax+14h] 2 +
jz loc_41C558  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jz loc_41C476  +
mov esi edx +
test ebx ebx +
jz loc_41C57F  +
mov eax [esp+98h+var_50] +
mov edx [eax] +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jz loc_41C57A  +
jmp loc_41C57F  +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jnz loc_41C57F  +
sub ebx 1 +
jnz loc_41C570  +
mov eax [esp+98h+var_50] +
mov ecx [ebp+170h] +
mov edx [esp+98h+var_48] +
mov [eax+0Ch] ebx +
xor eax eax +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebx +
setnz al  +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_50] +
call sub_41AD40  +
mov eax [esp+98h+var_5C] +
movzx edx word ptr [eax+10h] +
movzx eax dx +
cmp [esp+98h+var_54] eax +
ja loc_41C5EA  +
mov ecx [esp+98h+var_50] +
mov ecx [ecx] +
lea ecx [ecx+ebx*4+4] +
mov ebx [esp+98h+var_74] +
mov [ebx+8] ecx +
mov ebx [esp+98h+var_50] +
mov ecx ebx +
add ecx 1Ch +
cmp [esp+98h+var_54] eax +
cmovz ecx ebx +
mov [esp+98h+var_50] ecx +
movzx eax byte ptr [esi+4] +
lea ecx [eax-15h] +
cmp cl 1 +
jbe loc_41C6E9  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
jmp loc_41C3D0  +
test byte ptr [edx+6] 40h +
jz loc_41C476  +
jmp loc_41C558  +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_4C] edx +
call sub_420A10  +
mov edx [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebx +
mov ecx eax +
mov eax [edx] +
mov ebx ecx +
mov [ecx] eax +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov eax [edx+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_41C689  +
mov edx [edi+8] +
mov eax [edi+0Ch] +
sub eax edx +
cmp eax 3 +
ja loc_41C66A  +
sub edx [edi+4] +
mov [esp+98h+var_98] ebp +
add edx edx +
mov [esp+98h+var_94] edx +
call sub_421430  +
mov edx [eax+8] +
mov [eax] edi +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jz loc_41C6B0  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_41D590  +
cmp byte ptr [eax+4] 16h +
mov ebx eax +
jz loc_41C6B0  +
test edi edi +
jnz loc_41C645  +
mov [esp+98h+var_94] 80h +
mov [esp+98h+var_98] ebp +
call sub_421430  +
mov edx [eax+8] +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jnz loc_41C676  +
nop   +
mov ecx ebx +
mov ebx [esp+98h+var_4C] +
mov byte ptr [ebp+11h] 2 +
mov byte ptr [ebp+10h] 1 +
cmp byte ptr [ecx+4] 16h +
jnz loc_41C4A6  +
mov esi ecx +
jmp loc_41C55A  +
mov [esp+98h+var_98] 0C8h +
call sub_435ED0  +
mov esi [esp+98h+var_50] +
mov [esi+14h] eax +
mov eax [esi] +
jmp loc_41C3E6  +
mov esi [esp+98h+var_54] +
cmp al 16h +
mov [esp+98h+var_3C] esi +
jz loc_41D265  +
cmp [esp+98h+var_54] 1 +
jz loc_41D238  +
mov eax [esp+98h+var_54] +
mov esi [esp+98h+var_5C] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] eax +
call sub_41B790  +
test al al +
jz loc_41D2A5  +
test byte ptr [esi+14h] 2 +
jz loc_41C74F  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jb loc_41D224  +
cmp [esp+98h+var_54] 1 +
jz loc_41D208  +
mov eax [esp+98h+var_60] +
sub byte ptr [ebp+10h] 1 +
sub dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 0 +
cmp word ptr [eax+10h] 0 +
jnz loc_41C7F5  +
mov eax [esp+98h+var_40] +
xor ebx ebx +
mov esi [eax+4] +
mov eax [esp+98h+var_3C] +
test eax eax +
jz loc_41C7D8  +
mov [esp+98h+var_78] edi +
mov edi esi +
mov esi [esp+98h+var_3C] +
mov edx [edi+4] +
test edx edx +
jz loc_41C79E  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+4] 0 +
mov edx [edi+14h] +
test edx edx +
jz loc_41C7B4  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+14h] 0 +
mov edx [edi+18h] +
test edx edx +
jz loc_41C7CA  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+18h] 0 +
add ebx 1 +
add edi 1Ch +
cmp ebx esi +
jnz loc_41C788  +
mov edi [esp+98h+var_78] +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] eax +
call sub_421640  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_41BF4D  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_20] 0 +
mov eax [eax+4] +
mov [esp+98h+var_38] eax +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 20h +
jnz loc_41D438  +
mov esi [esp+98h+var_60] +
mov eax [esi+0Ch] +
mov edx eax +
mov [esp+98h+var_78] eax +
mov eax [esi+4] +
shl edx 4 +
lea esi [eax+edx] +
mov [esp+98h+var_6C] esi +
cmp [esp+98h+var_6C] eax +
jbe loc_41D258  +
mov esi [esp+98h+var_78] +
mov [esp+98h+var_4C] edi +
mov [esp+98h+var_74] ebp +
mov [esp+98h+var_70] esi +
mov esi eax +
lea eax [ebp+4Ch] +
mov [esp+98h+var_48] eax +
lea eax [ebp+28h] +
mov [esp+98h+var_50] eax +
jmp loc_41C86D  +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_41CAD7  +
cmp byte ptr [esi+4] 50h +
jnz loc_41C860  +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
add [esp+98h+var_78] 2 +
add [esp+98h+var_70] 2 +
lea ebp [edi+eax-1Ch] +
movzx eax word ptr [esi+6] +
test al 4 +
jz loc_41CA91  +
mov eax [ebp+8] +
test eax eax +
jnz loc_41C860  +
mov eax [esp+98h+var_74] +
mov edx [eax+28h] +
mov eax [edx+8] +
mov edx [edx+0Ch] +
sub edx eax +
cmp edx 2 +
ja loc_41C8D2  +
mov eax [esp+98h+var_50] +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_90] 3 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] edi +
call sub_4215E0  +
mov eax [edi+28h] +
mov eax [eax+8] +
mov byte ptr [eax] 22h +
mov edi [ebp+0Ch] +
lea ebx [eax+1] +
test edi edi +
jz loc_41CA3D  +
mov [esp+98h+var_5C] 0 +
xor edi edi +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_44] esi +
mov eax [ebp+0] +
mov esi [esp+98h+var_68] +
mov esi [eax+esi*4] +
movzx eax byte ptr [esi+4] +
cmp al 53h +
jz loc_41D099  +
lea edx [eax-3Eh] +
cmp dl 4 +
jbe loc_41C92F  +
lea edx [eax-38h] +
cmp dl 4 +
jbe loc_41C92F  +
mov [esp+98h+var_98] eax +
call sub_425E60  +
test al al +
jz loc_41D40F  +
mov [esp+98h+var_98] esi +
call sub_420B40  +
mov [esp+98h+var_54] 1 +
shl eax 2 +
lea edx [eax+3] +
mov eax [esp+98h+var_74] +
mov ecx [eax+28h] +
mov eax [ecx+0Ch] +
sub eax ebx +
cmp edx eax +
ja loc_41D0BD  +
mov eax [ecx+8] +
lea ecx [ebx-1] +
cmp eax ecx +
jz loc_41C974  +
test edi edi +
cmovz edi esi +
test byte ptr [edi+6] 1 +
jz loc_41C974  +
mov byte ptr [ebx] 20h +
add ebx 1 +
mov ecx [esp+98h+var_54] +
test ecx ecx +
jz loc_41D076  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_421430  +
mov edi [eax+8] +
mov [esp+98h+var_54] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_98] eax +
call sub_420BE0  +
mov ecx [esp+98h+var_54] +
mov edx eax +
cmp edi edx +
jz loc_41C9DD  +
add edi 1 +
movzx eax byte ptr [edi-1] +
cmp al 22h +
jz loc_41C9D0  +
cmp al 5Ch +
jnz loc_41CA87  +
mov byte ptr [ebx] 5Ch +
add ebx 2 +
mov [ebx-1] al +
cmp edi edx +
jnz loc_41C9BD  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] eax +
call sub_421400  +
cmp byte ptr [esi+4] 3Dh +
jz loc_41D0F1  +
xor edi edi +
mov [esp+98h+var_5C] 0 +
add [esp+98h+var_68] 1 +
mov eax [esp+98h+var_68] +
cmp eax [ebp+0Ch] +
jb loc_41C8F9  +
test byte ptr [esp+98h+var_5C] 1 +
mov esi [esp+98h+var_44] +
jz loc_41CA3D  +
mov eax [esp+98h+var_74] +
sub ebx 1 +
mov [esp+98h+var_90] offset aInvalidStringL +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
call sub_41ECD0  +
mov eax [esp+98h+var_74] +
lea edx [ebx+2] +
mov byte ptr [ebx] 22h +
lea ecx [ebx+1] +
mov edi ecx +
mov eax [eax+28h] +
sub edi [eax+8] +
mov [eax+8] edx +
mov eax [esp+98h+var_74] +
sub ecx edi +
mov [esp+98h+var_68] ecx +
mov [esp+98h+var_98] eax +
call sub_420A10  +
mov ecx [esp+98h+var_68] +
xor edx edx +
mov byte ptr [ebx+1] 0 +
mov byte ptr [eax+4] 3Eh +
mov [eax+8] edi +
mov [eax+0Ch] ecx +
mov [eax+6] dx +
mov [ebp+8] eax +
jmp loc_41C860  +
mov [ebx] al +
add ebx 1 +
jmp loc_41C9B9  +
test al 8 +
jnz loc_41CAC3  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jbe loc_41CAA4  +
test byte ptr [esi-0Ah] 8 +
jnz loc_41CAC3  +
mov eax [ebp+4] +
test eax eax +
jz loc_41D2C9  +
mov edi [esp+98h+var_78] +
mov eax [ebp+10h] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_41C860  +
mov edi [esp+98h+var_78] +
mov eax [ebp+0Ch] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_41C860  +
mov edi [esp+98h+var_4C] +
mov ebp [esp+98h+var_74] +
movzx eax byte ptr [ebp+26Dh] +
test eax eax +
mov [esp+98h+var_48] eax +
jz loc_41CF91  +
mov esi [esp+98h+var_78] +
lea ecx [esp+98h+var_20] +
mov eax ebp +
mov edx esi +
call sub_41ADC0  +
mov edx esi +
mov esi [esp+98h+arg_0] +
cmp [esp+98h+var_48] 1 +
cmovz edx [esp+98h+var_70] +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] esi +
call sub_40DFD0  +
mov [esp+98h+var_68] eax +
mov eax [esp+98h+var_60] +
mov [esp+98h+var_78] 0 +
mov eax [eax+4] +
mov esi eax +
cmp esi [esp+98h+var_6C] +
lea eax [ebp+160h] +
mov [esp+98h+var_30] eax +
jnb loc_41CE5B  +
mov [esp+98h+var_2C] edi +
jmp loc_41CBB7  +
cmp byte ptr [ebp+26Dh] 1 +
mov edx [esp+98h+var_78] +
jbe loc_41CCE0  +
mov eax [esi] +
mov ecx esi +
mov edi [esp+98h+var_68] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] edi +
call sub_41AF20  +
add [esp+98h+var_78] 1 +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_41CE57  +
cmp byte ptr [esi+4] 50h +
jnz loc_41CB70  +
movzx edx word ptr [esi+6] +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
test dl 4 +
lea eax [edi+eax-1Ch] +
jz loc_41CE1A  +
cmp byte ptr [ebp+26Dh] 0 +
lea edi [eax+8] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41CFEB  +
mov [esp+98h+var_4C] 0 +
mov ebx 1 +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
cmp byte ptr [ebp+8] 0 +
jz loc_41CC14  +
cmp byte ptr [ebp+9] 0 +
jz loc_41CC27  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jz loc_41CC27  +
test byte ptr [esi-0Ah] 8 +
jz loc_41CF42  +
test ebx ebx +
jz loc_41CD76  +
mov eax ebx +
mov ebx [esp+98h+var_78] +
mov [esp+98h+var_5C] esi +
mov esi [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebp +
add eax ebx +
mov [esp+98h+var_54] eax +
jmp loc_41CC90  +
xor ecx ecx +
test edi edi +
mov ebp [esi] +
jz loc_41CC5A  +
mov ecx [edi] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_68] +
mov [esp+98h+var_94] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_74] +
call sub_41AF20  +
mov eax [esp+98h+var_50] +
test eax eax +
jz loc_41CCC0  +
cmp eax 2 +
jz loc_41CCC0  +
add ebx 1 +
cmp ebx [esp+98h+var_54] +
jz loc_41CCF1  +
mov eax [esp+98h+var_78] +
mov ecx [esp+98h+var_4C] +
cmp [esp+98h+var_48] 2 +
cmovge eax ebx +
cmp byte ptr [ecx+26Dh] 1 +
jbe loc_41CCD0  +
mov ecx [esp+98h+var_5C] +
cmp byte ptr [esp+98h+var_70] 0 +
mov edx [ecx] +
jnz loc_41CC50  +
mov ecx [edi] +
mov ebp [ecx] +
jmp loc_41CC5A  +
add edi 4 +
cmp byte ptr [esp+98h+var_70] 0 +
lea eax [esi+4] +
cmovnz esi eax +
jmp loc_41CC87  +
mov ecx [esp+98h+var_60] +
mov eax [esp+98h+var_5C] +
sub eax [ecx+4] +
sar eax 4 +
jmp loc_41CCA9  +
mov eax [esp+98h+var_60] +
mov edx esi +
sub edx [eax+4] +
sar edx 4 +
jmp loc_41CB81  +
mov esi [esp+98h+var_5C] +
mov ebp [esp+98h+var_4C] +
test byte ptr [esi+6] 8 +
jz loc_41CD11  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
mov [esp+98h+var_78] eax +
sub eax 4 +
mov [esp+98h+var_44] eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_41CD21  +
test byte ptr [esi+6] 8 +
jz loc_41D013  +
mov edi [esp+98h+var_44] +
test edi edi +
jz loc_41CD69  +
mov [esp+98h+var_98] ebp +
call sub_420A10  +
mov edx [edi] +
movzx edx byte ptr [edx+4] +
mov [eax+4] dl +
mov edx [edi] +
mov edi [esp+98h+var_44] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
mov edx [edi] +
test byte ptr [esi+6] 8 +
movzx edx word ptr [edx+6] +
jz loc_41CEB2  +
or edx 8 +
mov [eax+6] dx +
mov edi [esp+98h+var_44] +
mov [edi] eax +
mov eax [esp+98h+var_54] +
mov [esp+98h+var_78] eax +
jmp loc_41CBAA  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_41CDA7  +
cmp byte ptr [ebp+268h] 0 +
jnz loc_41CDA7  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_41CDA7  +
mov eax [ebp+0] +
test eax eax +
jz loc_41D181  +
cmp byte ptr [eax+3Dh] 0 +
jz loc_41D181  +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_41CE0D  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+248h] 0 +
mov [esp+98h+var_54] eax +
jnz loc_41CD11  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_41CD11  +
mov eax [ebp+0] +
test eax eax +
jz loc_41CDE4  +
cmp byte ptr [eax+3Dh] 0 +
jnz loc_41CD11  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] 16h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_41ED10  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_41CD11  +
and edx 8 +
jz loc_41CEBE  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41D109  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_41CC08  +
mov edi [esp+98h+var_2C] +
mov ebx [esp+98h+var_48] +
test ebx ebx +
jnz loc_41D046  +
mov esi [esp+98h+var_74] +
lea eax [ebp+4Ch] +
mov ebx [esi+8] +
sub ebx [esi+4] +
call sub_41AE00  +
mov ecx [esp+98h+var_64] +
shr ebx 2 +
mov [eax+10h] esi +
mov esi [esp+98h+var_34] +
mov dword ptr [eax+18h] 0 +
mov [eax+14h] ecx +
lea edx [esi+ebx*4] +
mov [eax+8] esi +
mov [eax+0Ch] edx +
mov esi [esp+98h+var_74] +
mov eax [esi+8] +
sub eax [esi+4] +
shr eax 2 +
add ds:dword_46B1CC eax +
jmp loc_41C76D  +
and edx 0FFFFFFF7h +
mov [eax+6] dx +
jmp loc_41CD63  +
mov edi [esp+98h+var_60] +
cmp esi [edi+4] +
jz loc_41CFB6  +
test byte ptr [esi-0Ah] 8 +
jz loc_41CFB6  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz cl  +
test cl cl +
mov byte ptr [esp+98h+var_70] cl +
mov [esp+98h+var_4C] 0 +
jz loc_41CEFF  +
xor edx edx +
call sub_41AD90  +
mov [esp+98h+var_4C] eax +
mov eax [esp+98h+var_74] +
mov ecx [eax+4] +
mov eax [eax+8] +
mov [esp+98h+var_5C] ecx +
mov edx eax +
sub edx ecx +
cmp edx 3 +
jbe loc_41D138  +
mov ecx [eax-4] +
lea edx [eax-4] +
mov [esp+98h+var_44] edx +
cmp byte ptr [ecx+4] 13h +
jz loc_41D3B0  +
xor eax eax +
test ebx ebx +
cmovnz edx eax +
mov [esp+98h+var_50] eax +
mov [esp+98h+var_44] edx +
jmp loc_41CC08  +
mov [esp+98h+var_98] ebp +
call sub_420A10  +
xor edx edx +
mov [eax+6] dx +
mov edx [esp+98h+var_78] +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
cmp byte ptr [ebp+26Dh] 1 +
jbe loc_41D170  +
mov ecx [eax] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_68] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_90] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ecx +
mov ecx eax +
mov eax [esp+98h+var_74] +
call sub_41AF20  +
jmp loc_41CC27  +
mov edx [esp+98h+var_78] +
xor ecx ecx +
mov eax ebp +
call sub_41ADC0  +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
jmp loc_41CB40  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+10h] +
mov edi [eax+4] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_41D14D  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
jmp loc_41CC08  +
mov edx 1 +
mov ebx 1 +
call sub_41AD90  +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41CC08  +
mov eax [ebp+160h] +
mov ecx [esp+98h+var_30] +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_8C] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] 0 +
call sub_41AF20  +
jmp loc_41CD21  +
mov ecx [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+8] +
sub eax [ecx+4] +
shr eax 2 +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_34] +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_20] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_41AEA0  +
jmp loc_41CE9A  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_420BE0  +
mov ebx eax +
jmp loc_41C9ED  +
test edi edi +
jz loc_41D407  +
test byte ptr [edi+6] 1 +
jnz loc_41CA01  +
mov esi [esi+8] +
mov eax 0 +
test esi esi +
cmovz edi eax +
jmp loc_41CA01  +
mov eax [esp+98h+var_50] +
sub ebx [ecx+8] +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_34] edx +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_98] eax +
call sub_4215E0  +
mov eax [esp+98h+var_74] +
mov edx [esp+98h+var_34] +
mov eax [eax+28h] +
mov eax [eax+8] +
add ebx eax +
jmp loc_41C95C  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 5Ch +
jnz loc_41C9F7  +
add [esp+98h+var_5C] 1 +
xor edi edi +
jmp loc_41CA01  +
xor edx edx +
call sub_41AD90  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41CC08  +
mov ebx 1Ch +
mov eax 0E4h +
jmp loc_41C37A  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_41CC08  +
mov edx 2 +
call sub_41AD90  +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_41CC08  +
mov ecx [esp+98h+var_60] +
mov edx esi +
sub edx [ecx+4] +
sar edx 4 +
jmp loc_41CF68  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_41D1D2  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+28Ah] 0 +
mov [esp+98h+var_54] eax +
jz loc_41CD11  +
mov eax [esp+98h+var_64] +
mov ecx [esi+8] +
mov edx [eax] +
setnle al  +
movzx eax al +
add eax 15h +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_41ED50  +
jmp loc_41CD11  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacr_0 +
mov [esp+98h+var_94] 15h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_41ED50  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_41CD11  +
mov esi [esp+98h+var_44] +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_41C74F  +
cmp byte ptr [ebp+269h] 0 +
jnz loc_41C74F  +
imul eax eax +
mov esi [esp+98h+var_44] +
mov dword ptr [esi+eax-1Ch] 0 +
jmp loc_41C74F  +
test dx dx +
jnz loc_41C704  +
mov eax [esp+98h+var_44] +
mov ecx [eax+0Ch] +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+98h+var_54] eax +
jmp loc_41C704  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_70] eax +
jmp loc_41CADF  +
mov eax [ebp+4Ch] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_41D4EE  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_41BC80  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aUnterminatedAr +
mov [esp+98h+var_94] 3 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_41ECD0  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] eax +
call sub_421400  +
mov byte ptr [ebp+11h] 0 +
sub dword ptr [ebp+10Ch] 1 +
sub byte ptr [ebp+10h] 1 +
jmp loc_41C19F  +
mov edi [ebp+0Ch] +
mov eax [esp+98h+var_74] +
test edi edi +
movzx ebx byte ptr [eax+26Dh] +
jz loc_41CAAF  +
cmp byte ptr [eax+25Ah] 0 +
mov edi eax +
mov byte ptr [eax+25Ah] 0 +
mov [esp+98h+var_98] 400h +
setnz byte ptr [esp+98h+var_68]  +
call sub_435ED0  +
mov [ebp+4] eax +
cmp byte ptr [edi+26Dh] 0 +
jz loc_41D31B  +
mov [esp+98h+var_98] 400h +
call sub_435ED0  +
mov [ebp+18h] eax +
test bl bl +
jz loc_41D545  +
mov eax [ebp+14h] +
mov edi [ebp+0Ch] +
mov edx [ebp+0] +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
lea ecx [edi+1] +
mov [esp+98h+var_90] ecx +
xor ecx ecx +
mov [esp+98h+var_94] edx +
xor edx edx +
call sub_41AEA0  +
mov eax [ebp+10h] +
mov ebx 100h +
lea edx [eax+1] +
cmp ebx edx +
jb loc_41D4FD  +
mov edi [esp+98h+var_74] +
lea edx [esp+98h+var_1C] +
mov eax edi +
call sub_41D590  +
cmp byte ptr [eax+4] 16h +
jz loc_41D4D2  +
xor ecx ecx +
mov edx [ebp+10h] +
cmp byte ptr [edi+26Dh] 0 +
mov [esp+98h+var_94] 2 +
setnz cl  +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_1C] +
mov [esp+98h+var_98] edx +
mov edx eax +
mov eax ebp +
call sub_41AD40  +
mov eax [ebp+10h] +
add eax 1 +
mov [ebp+10h] eax +
jmp loc_41D34F  +
mov ecx [esp+98h+var_60] +
test byte ptr [ecx+14h] 2 +
jz loc_41CF2E  +
movzx ecx word ptr [ecx+10h] +
cmp [esi+8] ecx +
jnz loc_41CF2E  +
test edi edi +
jz loc_41D3E1  +
mov ecx [edi] +
mov [esp+98h+var_50] 0 +
test ecx ecx +
jnz loc_41CC08  +
cmp [esp+98h+var_5C] eax +
jnb loc_41D138  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [eax+8] edx +
jmp loc_41CC08  +
mov edi [esi+8] +
jmp loc_41CA01  +
movzx eax byte ptr [esi+4] +
mov [esp+98h+var_98] eax +
call sub_425E70  +
test al al +
jnz loc_41C92F  +
mov [esp+98h+var_98] esi +
call sub_420B40  +
mov [esp+98h+var_54] 0 +
jmp loc_41C942  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_41D4A2  +
mov eax [esp+98h+var_60] +
mov eax [eax+4] +
cmp byte ptr [eax+4] 26h +
mov [esp+98h+var_6C] eax +
jz loc_41D4BD  +
add eax 10h +
xor ebx ebx +
add ebx 1 +
cmp ebx ecx +
jz loc_41D4A2  +
mov edx eax +
add eax 10h +
cmp byte ptr [edx+4] 26h +
jnz loc_41D455  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_78] ebx +
mov [esp+98h+var_6C] edx +
jmp loc_41C830  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41D4A2  +
mov ebx [esi+4] +
cmp byte ptr [ebx+4] 26h +
jz loc_41D4B0  +
lea edx [ebx+10h] +
xor esi esi +
jmp loc_41D49B  +
movzx eax byte ptr [edx+4] +
add edx 10h +
cmp al 26h +
jz loc_41D4A7  +
add esi 1 +
cmp esi ecx +
jnz loc_41D490  +
call sub_455CB0  +
mov [esp+98h+var_74] esi +
jmp loc_41C1DD  +
mov [esp+98h+var_74] 0 +
jmp loc_41C1DD  +
mov [esp+98h+var_70] 0 +
mov [esp+98h+var_78] 0 +
jmp loc_41CADF  +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_98] edi +
call sub_41BAF0  +
movzx eax byte ptr [esp+98h+var_68] +
mov [edi+25Ah] al +
jmp loc_41CAAF  +
cmp byte ptr [ebp+8] 0 +
jz loc_41D283  +
jmp loc_41D273  +
mov eax [ebp+4] +
lea edi ds:0[edx*8] +
mov [esp+98h+var_94] edi +
lea ebx [edx+edx] +
mov [esp+98h+var_98] eax +
call sub_435F50  +
mov [ebp+4] eax +
mov eax [esp+98h+var_74] +
cmp byte ptr [eax+26Dh] 0 +
jz loc_41D35A  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41D57A  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] eax +
call sub_435F50  +
mov [ebp+18h] eax +
jmp loc_41D35A  +
mov eax [ebp+0Ch] +
mov edi [ebp+0] +
lea ebx [eax+1] +
mov eax [esp+98h+var_48] +
call sub_41AE00  +
lea edx [edi+ebx*4] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov [eax+8] edi +
mov [eax+0Ch] edx +
jmp loc_41D347  +
mov [esp+98h+var_98] edi +
call sub_435ED0  +
mov [ebp+18h] eax +
jmp loc_41D35A  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
movzx eax byte ptr [eax+6Ch] +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1D] al +
lea esi [esi+0] +
mov eax [ebx+4Ch] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_41D890  +
mov edx [eax+18h] +
cmp edx 1 +
jz loc_41D7D0  +
test edx 0FFFFFFFDh +
jnz loc_41DA43  +
mov ecx [eax+8] +
cmp ecx [eax+0Ch] +
jnz loc_41D680  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_41D5F0  +
add ds:dword_46B1D0 1 +
mov [esp+4Ch+var_4C] ebx +
call sub_41BAF0  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41D5B0  +
lea ebp [ebx+160h] +
mov edx [esp+4Ch+var_2C] +
test edx edx +
jz loc_41D66D  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_41D61B  +
mov eax [ebp+0] +
mov [esp+4Ch+var_30] eax +
mov edi [esp+4Ch+var_2C] +
mov eax [esp+4Ch+var_30] +
mov [edi] eax +
cmp byte ptr [ebx+26Dh] 0 +
jnz loc_41D653  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_41D653  +
cmp dword ptr [edx+18h] 2 +
mov eax [edx+14h] +
jz loc_41DA20  +
test eax eax +
jz loc_41DB12  +
mov eax [ebx+64h] +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
cmp byte ptr [ebx+270h] 0 +
movzx ecx byte ptr [ebx+8] +
mov edx [ebx+20h] +
jnz loc_41D940  +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
movzx eax [esp+4Ch+var_1D] +
mov [ebx+6Ch] al +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jz loc_41D8A5  +
cmp edx 2 +
jnz loc_41DADA  +
mov edx [eax+14h] +
mov ebp [ecx] +
mov edi [edx+4] +
test edi edi +
jz loc_41D950  +
mov esi [edx+8] +
mov edi [esi] +
add esi 4 +
mov [edx+8] esi +
mov [esp+4Ch+var_30] edi +
add ecx 4 +
mov [eax+8] ecx +
test byte ptr [ebp+6] 8 +
jnz loc_41D7F3  +
cmp byte ptr [ebx+8] 0 +
movzx eax byte ptr [ebp+4] +
jz loc_41D6D2  +
cmp al 4Fh +
jz loc_41D5B0  +
cmp al 35h +
jnz loc_41D604  +
mov edx [ebp+8] +
movzx eax byte ptr [edx+14h] +
and eax 3Fh +
cmp al 1 +
jnz loc_41D604  +
test byte ptr [ebp+7] 4 +
jnz loc_41D604  +
test byte ptr [edx+15h] 8 +
jnz loc_41D9F1  +
cmp byte ptr [ebx+6Ch] 0 +
jnz loc_41D726  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_41D924  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_41D932  +
test eax eax +
jz loc_41D924  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_41D604  +
test byte ptr [edx+15h] 40h +
jz loc_41D780  +
mov edi [ebx+20Ch] +
test edi edi +
jz loc_41D604  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_423C70  +
cmp byte ptr [eax+4] 53h +
jz loc_41D764  +
test byte ptr [eax+6] 1 +
jz loc_41DA60  +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jz loc_41DA7E  +
lea esi [esi+0] +
mov eax [esp+4Ch+var_30] +
mov ecx ebp +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_41BEF0  +
test eax eax +
jz loc_41D604  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41D5B0  +
cmp eax 2 +
jz loc_41D5B0  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_420A10  +
xor ecx ecx +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] cx +
jmp loc_41D604  +
mov ebp [eax+8] +
cmp ebp [eax+0Ch] +
jz loc_41D5E2  +
mov edi [ebp+0] +
lea edx [ebp+10h] +
mov [eax+8] edx +
test byte ptr [ebp+6] 8 +
mov [esp+4Ch+var_30] edi +
jz loc_41D6C0  +
mov edi [ebx+4Ch] +
mov [esp+4Ch+var_14] ebp +
test edi edi +
jz loc_41DAF6  +
mov eax [edi+18h] +
cmp eax 2 +
jz loc_41D960  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_41DAF6  +
mov ecx [ebx+64h] +
mov [esp+4Ch+var_28] ecx +
mov [esp+4Ch+var_24] ebp +
xor esi esi +
mov ebp [esp+4Ch+var_28] +
jmp loc_41D868  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
cmp byte ptr [esi+4] 53h +
jnz loc_41D84B  +
test byte ptr [esi+6] 8 +
jnz loc_41DA27  +
mov [esp+4Ch+var_4C] esi +
lea ecx [esp+4Ch+var_14] +
mov edx ebp +
mov eax ebx +
call sub_41BD30  +
test al al +
jz loc_41D8D0  +
test byte ptr [esi+6] 8 +
jz loc_41D8D0  +
mov eax [edi+18h] +
cmp eax 1 +
jz loc_41D8C0  +
test eax eax +
jz loc_41D830  +
cmp eax 2 +
jnz loc_41D83B  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
mov eax [edi+14h] +
add dword ptr [eax+8] 4 +
jmp loc_41D83B  +
mov [esp+4Ch+var_4C] ebx +
call sub_423B30  +
mov ebp eax +
mov eax [eax] +
mov [esp+4Ch+var_30] eax +
jmp loc_41D6C0  +
mov ebp [ecx] +
add ecx 4 +
mov edi [ebp+0] +
mov [eax+8] ecx +
mov [esp+4Ch+var_30] edi +
jmp loc_41D6B6  +
mov esi [edi+8] +
lea eax [esi+10h] +
mov [edi+8] eax +
jmp loc_41D83B  +
cmp dword ptr [edi+18h] 2 +
mov ebp [esp+4Ch+var_24] +
jz loc_41D980  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_41B880  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41D5B0  +
mov [esp+4Ch+var_4C] ebx +
call sub_420A10  +
xor edx edx +
mov [eax+8] ebp +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+6] dx +
jmp loc_41D604  +
mov eax [ebp+0] +
mov [ebx+68h] edx +
mov [ebx+64h] eax +
jmp loc_41D726  +
mov eax [eax] +
jmp loc_41D71E  +
test cl cl +
cmovnz eax edx +
jmp loc_41D667  +
mov edi [ebp+0] +
mov [esp+4Ch+var_30] edi +
jmp loc_41D6B0  +
mov edx [edi+14h] +
mov esi [edx] +
test esi esi +
jz loc_41DAF6  +
mov edx [edx+8] +
mov ecx [edx-4] +
mov [esp+4Ch+var_28] ecx +
jmp loc_41D820  +
lea ecx [esp+4Ch+var_10] +
mov edx 1 +
mov eax ebx +
mov [esp+4Ch+var_10] 0 +
call sub_41ADC0  +
mov ecx [esp+4Ch+var_14] +
mov edx [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] 0 +
mov esi eax +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_41AF20  +
mov eax [esi+4] +
mov ecx esi +
mov edx [edi+14h] +
mov edx [edx] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] 1 +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_41AEA0  +
jmp loc_41D8FE  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_420A10  +
mov edx [esi+0Ch] +
mov ebp eax +
movzx eax byte ptr [esi+4] +
mov [ebp+4] al +
movzx eax word ptr [esi+6] +
or ah 4 +
mov [ebp+6] ax +
mov eax [esi+8] +
mov [ebp+0Ch] edx +
mov [ebp+8] eax +
jmp loc_41D604  +
mov eax [eax] +
jmp loc_41D642  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2DFh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_405910  +
mov [esp+4Ch+var_44] offset aReached_end_of +
mov [esp+4Ch+var_48] 93Eh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_405910  +
nop   +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jnz loc_41D780  +
jmp loc_41D604  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_423C70  +
cmp byte ptr [eax+4] 53h +
mov esi eax +
jz loc_41D604  +
test byte ptr [eax+6] 1 +
jnz loc_41D604  +
mov [esp+4Ch+var_4C] ebx +
call sub_420A10  +
mov [eax+8] esi +
xor esi esi +
mov byte ptr [eax+4] 53h +
mov [eax+6] si +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_41B880  +
jmp loc_41D604  +
mov [esp+4Ch+var_44] offset aConsume_next_t +
mov [esp+4Ch+var_48] 968h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_405910  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2B1h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_405910  +
mov eax [esp+4Ch+var_30] +
jmp loc_41D653  +
***
mov eax [esp+arg_0] +
xor edx edx +
jmp sub_41D590  +
***
nop   +
mov [esp] ebx +
call sub_42B1B0  +
test al al +
jnz loc_41DB50  +
sub byte ptr [ebx+13h] 1 +
sub byte ptr [ebx+10h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
jmp sub_41D590  +
***
mov eax [esp+arg_0] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D6FFh +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 10h +
jnz loc_41DC87  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
movzx edi dx +
mov [esp+2Ch+var_10] eax +
lea eax ds:4[edi*4] +
sub [esp+2Ch+var_10] ecx +
cmp [esp+2Ch+var_10] eax +
jb loc_41DC40  +
mov eax [esp+2Ch+arg_C] +
add edx 1 +
mov [ebp+10h] dx +
mov [ecx+edi*4] eax +
or word ptr [ebx+14h] 1000h +
movzx edx word ptr [ebp+10h] +
mov eax [esi+110h] +
movzx ecx dx +
lea edi ds:0[ecx*8] +
cmp edi [esi+114h] +
ja loc_41DC66  +
mov esi [ebx+18h] +
add ecx 1FFFFFFFh +
mov [eax+ecx*8] ebx +
mov [eax+ecx*8+4] esi +
xor eax eax +
mov [ebx+18h] dx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esi+24h] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] esi +
call sub_4215E0  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
movzx edi dx +
jmp loc_41DBF2  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_435F50  +
movzx edx word ptr [ebp+10h] +
mov [esi+114h] edi +
movzx ecx dx +
mov [esi+110h] eax +
jmp loc_41DC22  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] offset aDuplicateMacro +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_20] eax +
call sub_41ECD0  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov eax [edi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_41E1F0  +
mov [esp+3Ch+var_3C] 18h +
call eax  +
mov ebx eax +
mov eax [edi+20h] +
xor ecx ecx +
mov dword ptr [ebx] 0 +
mov [ebx+10h] cx +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+14h] +
mov edx eax +
and edx 0FFFFFFFDh +
mov [ebx+14h] dl +
cmp byte ptr [edi+267h] 0 +
mov dword ptr [ebx+0Ch] 0 +
setz dl  +
and eax 0FFFFFFD4h +
shl edx 3 +
or eax edx +
mov [ebx+14h] al +
mov eax [edi] +
test eax eax +
jz loc_41E207  +
cmp byte ptr [eax+3Dh] 0 +
setnz dl  +
movzx eax byte ptr [ebx+14h] +
shl edx 2 +
and eax 0FFFFFFFBh +
or eax edx +
mov [ebx+14h] al +
cmp byte ptr [edi+270h] 0 +
jz loc_41DE04  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
call sub_42B300  +
mov byte ptr [esp+3Ch+var_20] al +
movzx eax word ptr [ebx+10h] +
test eax eax +
lea ecx [eax-1] +
lea edx ds:0FFFFFFF8h[eax*8] +
jz loc_41DD95  +
mov esi [edi+110h] +
sub ecx 1 +
add esi edx +
sub edx 8 +
mov eax [esi] +
and word ptr [eax+14h] 0EFFFh +
cmp ecx 0FFFFFFFFh +
mov esi [esi+4] +
mov [eax+18h] esi +
jnz loc_41DD74  +
cmp byte ptr [esp+3Ch+var_20] 0 +
jz loc_41DDF7  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_41E140  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_41DF50  +
movzx eax byte ptr [ebp+14h] +
mov edi offset a__stdc_ +
mov ecx 7 +
mov [ebp+18h] ebx +
and eax 0FFFFFFC0h +
or eax 1 +
mov [ebp+14h] al +
mov eax [ebp+0] +
mov esi eax +
cmps   +
jz loc_41DF04  +
movzx eax word ptr [ebp+14h] +
and dx 2FFh +
shl edx 6 +
and eax 3Fh +
or eax edx +
mov [ebp+14h] ax +
movzx eax byte ptr [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] edi +
call sub_423B30  +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_41E1A4  +
cmp al 16h +
jz loc_41DE56  +
test byte ptr [esi+6] 1 +
jnz loc_41DE56  +
cmp byte ptr [edi+268h] 0 +
jz loc_41E2AE  +
cmp byte ptr [edi+248h] 0 +
jz loc_41E42B  +
mov [esp+3Ch+var_34] offset aIsoC11Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
test byte ptr [ebx+14h] 1 +
jz loc_41E0E4  +
mov edx ebx +
mov eax edi +
call sub_41B000  +
mov ecx eax +
mov [esp+3Ch+arg_4] ebp +
xor esi esi +
mov ebp ebx +
mov [esp+3Ch+var_20] 0 +
jmp loc_41DEA2  +
add [esp+3Ch+var_20] 1 +
sub eax 1 +
or byte ptr [ebp+14h] 20h +
mov [ecx+8] eax +
cmp bl 26h +
mov edx ebp +
setz al  +
mov esi eax +
mov eax edi +
call sub_41B000  +
mov ecx eax +
mov eax [ebp+0Ch] +
cmp eax 1 +
jbe loc_41DEB4  +
cmp byte ptr [ecx-0Ch] 25h +
jz loc_41DF70  +
movzx ebx byte ptr [ecx+4] +
cmp bl 16h +
jz loc_41DFC0  +
cmp bl 26h +
jnz loc_41DE8F  +
cmp eax 1 +
jz loc_41E110  +
movzx edx word ptr [ecx-0Ah] +
test dl 8 +
jnz loc_41DE80  +
sub eax 1 +
mov [ebp+0Ch] eax +
mov eax edx +
or eax 8 +
mov [ecx-0Ah] ax +
movzx eax word ptr [ecx+6] +
test al 2 +
jz loc_41DEF8  +
or dx 108h +
mov [ecx-0Ah] dx +
test al 1 +
jz loc_41DE8F  +
or word ptr [ecx-0Ah] 200h +
jmp loc_41DE8F  +
mov edi offset a__stdc_format_ +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_41DDE2  +
mov edi offset a__stdc_limit_m +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_41DDE2  +
mov ecx 17h +
mov esi eax +
mov edi offset a__stdc_constan +
mov eax edx +
cmps   +
setnbe bl  +
setb cl  +
or eax 10h +
cmp bl cl +
cmovnz edx eax +
jmp loc_41DDE2  +
movzx eax word ptr [ebp+14h] +
and dx 35Bh +
mov ecx edx +
shl ecx 6 +
and eax 3Fh +
or eax ecx +
mov [ebp+14h] ax +
jmp loc_41DDBB  +
test byte ptr [ebp+14h] 1 +
movzx ebx byte ptr [ecx+4] +
jz loc_41DEB8  +
cmp bl 50h +
jz loc_41E091  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_41DEB8  +
mov [esp+3Ch+var_34] offset aIsNotFollowedB +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
mov byte ptr [esp+3Ch+var_20] 0 +
jmp loc_41E133  +
mov edx esi +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
test dl dl +
jnz loc_41E116  +
mov edx [edi+24h] +
sub eax 1 +
mov edx [edx+8] +
and byte ptr [ebx+14h] 0EFh +
test eax eax +
mov [ebx+0Ch] eax +
mov [ebx+4] edx +
jz loc_41DFEC  +
and word ptr [edx+6] 0FFFEh +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_41E1D8  +
shl eax 4 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
mov esi [esp+3Ch+var_20] +
test esi esi +
mov [esp+3Ch+var_1C] eax +
jz loc_41E3F0  +
mov edx [ebx+0Ch] +
mov ecx edx +
sub ecx esi +
shl ecx 4 +
add ecx eax +
test edx edx +
jz loc_41E080  +
mov eax [ebx+4] +
shl edx 4 +
mov [esp+3Ch+var_20] ebx +
lea esi [eax+edx] +
mov edx [esp+3Ch+var_1C] +
jmp loc_41E056  +
mov [edx] ebx +
mov ebx [eax+4] +
add eax 10h +
add edx 10h +
mov [edx-0Ch] ebx +
mov ebx [eax-8] +
mov [edx-8] ebx +
mov ebx [eax-4] +
mov [edx-4] ebx +
cmp eax esi +
jz loc_41E07C  +
cmp byte ptr [eax+4] 26h +
mov ebx [eax] +
jnz loc_41E038  +
mov [ecx] ebx +
mov ebx [eax+4] +
add eax 10h +
add ecx 10h +
mov [ecx-0Ch] ebx +
mov ebx [eax-8] +
mov [ecx-8] ebx +
mov ebx [eax-4] +
mov [ecx-4] ebx +
cmp eax esi +
jnz loc_41E056  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ebx+4] eax +
jmp loc_41E133  +
movzx edx word ptr [ecx+6] +
test dl 1 +
jz loc_41E0A1  +
or dh 2 +
mov [ecx+6] dx +
mov esi edx +
or si 100h +
test byte ptr [ecx-0Ah] 2 +
cmovnz edx esi +
movzx esi word ptr [ecx-0Ah] +
sub eax 1 +
and edx 0FFFFFFFEh +
or edx 4 +
and esi 1 +
or edx esi +
mov [ecx+6] dx +
mov edx [ecx] +
mov [ecx-10h] edx +
mov edx [ecx+4] +
mov [ecx-0Ch] edx +
mov edx [ecx+8] +
mov [ecx-8] edx +
mov edx [ecx+0Ch] +
mov [ecx-4] edx +
mov [ebp+0Ch] eax +
jmp loc_41DE8F  +
lea edx [ebx+0Ch] +
mov eax edi +
call sub_41AFA0  +
mov ecx eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_41DE6B  +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset aCannotAppearAt +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
mov byte ptr [esp+3Ch+var_20] 0 +
mov byte ptr [edi+0Eh] 0 +
jmp loc_41DD62  +
cmp byte ptr [edi+267h] 0 +
jnz loc_41E412  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 10h +
jnz loc_41E217  +
test dl 4 +
jz loc_41E2FD  +
mov eax [edi+228h] +
test eax eax +
jz loc_41E18A  +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call eax  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_41E2FD  +
cmp byte ptr [edi+25Fh] 0 +
setnz al  +
test al al +
jnz loc_41E217  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_41DDB3  +
test byte ptr [esi+6] 1 +
jnz loc_41DE56  +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_423B30  +
movzx ecx byte ptr [eax+4] +
lea edx [ecx-13h] +
cmp dl 22h +
ja loc_41E5A4  +
movzx edx dl +
jmp ds:off_462D70[edx*4]  +
mov ecx [edi+24h] +
shl eax 4 +
add eax edx +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ecx+8] eax +
jmp loc_41E133  +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_3C] edi +
call sub_423DD0  +
mov ebx eax +
jmp loc_41DCEB  +
xor edx edx +
jmp loc_41DD36  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
and edx 14h +
mov eax 0Bh +
mov ecx [ebp+0] +
cmp dx 4 +
mov edx 0 +
cmovnz eax edx +
mov edx [edi+20h] +
mov [esp+3Ch+var_2C] offset aSRedefined +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_41EE70  +
test al al +
movzx eax byte ptr [ebp+14h] +
jz loc_41E2A6  +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jnz loc_41E2A6  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 4 +
jnz loc_41DF50  +
mov eax [ebp+18h] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] offset aThisIsTheLocat +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 5 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
call sub_41EDD0  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_41DDAB  +
cmp al 36h +
jz loc_41E5EB  +
jbe loc_41E5E3  +
cmp al 3Dh +
nop   +
jnz loc_41E448  +
mov eax [esi+0Ch] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] offset a_? +
mov [esp+3Ch+var_38] eax +
call strchr  +
cmp eax 1 +
sbb eax eax +
and eax 2 +
mov [esp+3Ch+var_34] offset aMissingWhitesp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
jmp loc_41DE56  +
test dh 1 +
jnz loc_41E198  +
mov eax [ebp+18h] +
mov [esp+3Ch+var_1C] eax +
movzx eax word ptr [eax+10h] +
cmp ax [ebx+10h] +
jnz loc_41E217  +
mov esi [esp+3Ch+var_1C] +
movzx ecx byte ptr [ebx+14h] +
xor cl [esi+14h] +
and ecx 3 +
jnz loc_41E217  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_41E380  +
mov ecx [esi] +
mov esi [ebx] +
mov eax [esi] +
cmp [ecx] eax +
jnz loc_41E217  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_12] dx +
mov [esp+3Ch+var_18] ebx +
mov ebx ecx +
sub eax 1 +
mov [esp+3Ch+var_10] eax +
xor eax eax +
mov edx [esp+3Ch+var_10] +
jmp loc_41E373  +
mov ecx [ebx+eax*4+4] +
add eax 1 +
cmp ecx [esi+eax*4] +
jnz loc_41E20E  +
cmp eax edx +
jnz loc_41E363  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
cmp byte ptr [edi+270h] 0 +
jnz loc_41E6B8  +
mov eax [esp+3Ch+var_1C] +
mov eax [eax+0Ch] +
cmp eax [ebx+0Ch] +
jnz loc_41E217  +
test eax eax +
jz loc_41E198  +
xor esi esi +
jmp loc_41E3C0  +
mov eax [esp+3Ch+var_1C] +
add esi 1 +
cmp esi [eax+0Ch] +
jnb loc_41E6D5  +
mov edx [ebx+4] +
mov eax esi +
shl eax 4 +
add edx eax +
mov [esp+3Ch+var_38] edx +
mov edx [esp+3Ch+var_1C] +
add eax [edx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_420F00  +
test eax eax +
jnz loc_41E3B0  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41E217  +
mov eax [ebx+0Ch] +
mov edx [ebx+4] +
shl eax 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
jmp loc_41E080  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call sub_41B220  +
jmp loc_41E14D  +
mov [esp+3Ch+var_34] offset aIsoC99Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
jmp loc_41DE56  +
cmp al 43h +
jz loc_41E5EB  +
xor eax eax +
jmp loc_41E2E4  +
mov [esp+3Ch+var_34] offset aMissingInMacro +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
mov eax [edi+24h] +
mov byte ptr [esp+3Ch+var_20] 0 +
mov eax [eax+8] +
mov [ebx] eax +
jmp loc_41E133  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_41E6FF  +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_34] eax +
call sub_41DBB0  +
test al al +
jnz loc_41E46F  +
mov [esp+3Ch+var_20] 1 +
jmp loc_41E1B6  +
mov ecx [esp+3Ch+var_20] +
movzx eax word ptr [ebx+10h] +
test ecx ecx +
jnz loc_41E540  +
test ax ax +
jz loc_41E540  +
mov [esp+3Ch+var_34] offset aParameterNameM +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
jmp loc_41E46F  +
mov eax [esp+3Ch+var_20] +
or byte ptr [ebx+14h] 2 +
test eax eax +
jz loc_41E601  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_41E52A  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_41E52A  +
cmp byte ptr [edi+248h] 0 +
jz loc_41E69B  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotPer +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_41ED50  +
mov [esp+3Ch+var_3C] edi +
call sub_423B30  +
cmp byte ptr [eax+4] 15h +
jnz loc_41E457  +
movzx eax word ptr [ebx+10h] +
mov edx [edi+24h] +
mov ecx [edx+8] +
mov [esp+3Ch+var_20] ecx +
mov [ebx] ecx +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_41E5F5  +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
movzx edx word ptr [ebx+10h] +
shl edx 2 +
mov ecx eax +
mov eax [ebx] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov ecx [esp+3Ch+var_20] +
mov [ebx] ecx +
or byte ptr [ebx+14h] 1 +
jmp loc_41DE56  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_41E1AE  +
jmp loc_41E4C9  +
cmp cl 4Fh +
jnz loc_41E5B6  +
cmp byte ptr [edi+24Ch] 0 +
jz loc_41E1B6  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_423D50  +
mov [esp+3Ch+var_34] offset aSMayNotAppearI +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
call sub_41ECD0  +
jmp loc_41E46F  +
cmp al 34h +
jnz loc_41E450  +
mov eax 2 +
jmp loc_41E2E4  +
mov ecx [esp+3Ch+var_20] +
lea eax [ecx+eax*4] +
mov [edx+8] eax +
jmp loc_41E58A  +
mov eax [edi+2B8h] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] eax +
call sub_41DBB0  +
cmp byte ptr [edi+268h] 0 +
mov byte ptr [edi+0Eh] 1 +
jnz loc_41E664  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_41E664  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_41E664  +
cmp byte ptr [edi+248h] 0 +
jz loc_41E6E2  +
mov [esp+3Ch+var_34] offset aAnonymousVaria +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_41ED50  +
jmp loc_41E52A  +
cmp byte ptr [edi+28Ah] 0 +
jle loc_41E52A  +
cmp byte ptr [edi+248h] 0 +
jnz loc_41E52A  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
jmp loc_41E52A  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotP_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_41ED50  +
jmp loc_41E52A  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42B530  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41E194  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_41E198  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_41ED50  +
jmp loc_41E52A  +
mov [esp+3Ch+var_34] offset aMacroParameter +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_41ECD0  +
jmp loc_41E46F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jz loc_41E796  +
and eax 3Fh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aInvalidHashTyp +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 1 +
jz loc_41E7D0  +
mov ebx [esp+2Ch+arg_0] +
mov edx [ebx+228h] +
test edx edx +
jz loc_41E769  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call edx  +
test al al +
jnz loc_41E7D0  +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
jmp loc_41E769  +
mov eax [esp+2Ch+arg_4] +
mov ebx [eax+18h] +
mov eax [eax+4] +
movzx ebp byte ptr [ebx+14h] +
lea esi [eax+eax*4] +
add esi esi +
test ebp 1 +
jnz loc_41E8D1  +
add esi 2 +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_41E909  +
mov [esp+2Ch+var_2C] ebx +
call sub_42B210  +
add esi eax +
mov eax [esp+2Ch+arg_0] +
cmp esi [eax+114h] +
ja loc_41E9A1  +
mov eax [eax+110h] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_420B80  +
test byte ptr [ebx+14h] 1 +
jz loc_41E896  +
lea edi [eax+1] +
xor esi esi +
mov byte ptr [eax] 28h +
movzx eax word ptr [ebx+10h] +
cmp esi eax +
jnb loc_41E890  +
mov edx [ebx] +
mov ebp [edx+esi*4] +
mov edx [esp+2Ch+arg_0] +
cmp [edx+2B8h] ebp +
jz loc_41E877  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
movzx eax word ptr [ebx+10h] +
add edi [ebp+4] +
add esi 1 +
cmp esi eax +
jnb loc_41E980  +
mov byte ptr [edi] 2Ch +
movzx eax word ptr [ebx+10h] +
add edi 1 +
cmp esi eax +
jb loc_41E849  +
lea eax [edi+1] +
mov byte ptr [edi] 29h +
lea esi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_41E9D0  +
mov eax [ebx+0Ch] +
test eax eax +
mov [esp+2Ch+var_10] eax +
jnz loc_41E9E3  +
mov eax [esp+2Ch+arg_0] +
mov byte ptr [esi] 0 +
mov eax [eax+110h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ecx word ptr [ebx+10h] +
add esi 6 +
test ecx ecx +
jz loc_41E7F2  +
mov edi [ebx] +
shl ecx 2 +
xor eax eax +
mov edx [edi+eax] +
add eax 4 +
cmp eax ecx +
mov edx [edx+4] +
lea esi [esi+edx+1] +
jnz loc_41E8E7  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_41E803  +
and ebp 20h +
jnz loc_41EABA  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_41E80D  +
xor edi edi +
jmp loc_41E965  +
mov eax [ebp+0Ch] +
add esi [eax+4] +
movzx eax word ptr [ebp+6] +
mov ecx eax +
and ecx 4 +
cmp cx 1 +
sbb esi 0FFFFFFFFh +
test al 8 +
lea ecx [esi+3] +
cmovnz esi ecx +
and eax 1 +
cmp ax 1 +
sbb esi 0FFFFFFFFh +
add edi 1 +
cmp edi [esp+2Ch+var_10] +
jz loc_41E80D  +
mov ebp edi +
shl ebp 4 +
add ebp [ebx+4] +
cmp byte ptr [ebp+4] 50h +
jz loc_41E930  +
mov [esp+2Ch+var_2C] ebp +
call sub_420B40  +
add esi eax +
jmp loc_41E936  +
test byte ptr [ebx+14h] 2 +
jz loc_41E845  +
mov byte ptr [edi] 2Eh +
add edi 3 +
mov byte ptr [edi-2] 2Eh +
mov byte ptr [edi-1] 2Eh +
movzx eax word ptr [ebx+10h] +
jmp loc_41E845  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+110h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_435F50  +
mov ecx [esp+2Ch+arg_0] +
mov [ecx+114h] esi +
mov [ecx+110h] eax +
jmp loc_41E823  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_42B260  +
mov esi eax +
jmp loc_41E8BC  +
test byte ptr [ebx+14h] 20h +
mov eax [ebx+4] +
jnz loc_41EA8B  +
xor ebp ebp +
mov edi eax +
mov edx ebp +
mov ebp ebx +
mov ebx edx +
jmp loc_41EA42  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_420BE0  +
mov esi eax +
test byte ptr [edi+6] 8 +
jz loc_41EA32  +
mov byte ptr [esi] 20h +
add esi 3 +
mov byte ptr [esi-2] 23h +
mov byte ptr [esi-1] 23h +
add ebx 1 +
cmp ebx [esp+2Ch+var_10] +
jnb loc_41E8BC  +
mov edi [ebp+4] +
mov ecx ebx +
shl ecx 4 +
add edi ecx +
movzx eax word ptr [edi+6] +
test al 1 +
jz loc_41EA5B  +
mov byte ptr [esi] 20h +
movzx eax word ptr [edi+6] +
add esi 1 +
test al 4 +
jz loc_41EA65  +
mov byte ptr [esi] 23h +
add esi 1 +
cmp byte ptr [edi+4] 50h +
jnz loc_41EA00  +
mov eax [edi+0Ch] +
mov ecx [eax+4] +
mov eax [eax] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [edi+0Ch] +
add esi [eax+4] +
jmp loc_41EA1E  +
cmp byte ptr [eax+4] 26h +
jz loc_41E8BC  +
lea edi [eax+10h] +
xor edx edx +
jmp loc_41EAAC  +
movzx ecx byte ptr [edi+4] +
add edi 10h +
cmp cl 26h +
jz loc_41EAEA  +
add edx 1 +
cmp edx [esp+2Ch+var_10] +
jnz loc_41EAA0  +
call sub_455CB0  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_41EAB5  +
mov eax [ebx+4] +
cmp byte ptr [eax+4] 26h +
jz loc_41E80D  +
add eax 10h +
xor edi edi +
jmp loc_41EAE1  +
movzx edx byte ptr [eax+4] +
add eax 10h +
cmp dl 26h +
jz loc_41EAFF  +
add edi 1 +
cmp edi ecx +
jnz loc_41EAD5  +
jmp loc_41EAB5  +
test edx edx +
lea esi [esi+0] +
jz loc_41E8BC  +
mov [esp+2Ch+var_10] edx +
jmp loc_41E9F0  +
mov [esp+2Ch+var_10] edi +
jmp loc_41E919  +
***
push esi  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_41EBC0  +
cmp byte ptr [eax+8] 0 +
jz loc_41EC04  +
mov ecx [eax+20h] +
jmp loc_41EBD4  +
mov ecx [eax+104h] +
mov edx [eax+0F0h] +
cmp edx [ecx+8] +
jz loc_41EC10  +
mov ecx [edx-10h] +
mov edx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] edx +
mov edx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call sub_41EB10  +
add esp 2Ch +
retn   +
mov edx [eax+1Ch] +
mov ecx [edx+2Ch] +
jmp loc_41EBD4  +
xor ecx ecx +
jmp loc_41EBD4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_10] +
mov eax [ebx+210h] +
test eax eax +
jz loc_41ECA5  +
mov eax [ebx+1Ch] +
lea esi [ebp+var_74] +
mov edx [ebp+arg_C] +
mov ecx esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] edx +
call sub_40FE90  +
sub esp 8 +
test edi edi +
jz loc_41EC67  +
mov [esp+98h+var_98] edi +
mov ecx esi +
call sub_40FD10  +
sub esp 4 +
mov edx [ebp+arg_18] +
mov eax [ebx+210h] +
mov [esp+98h+var_8C] esi +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_84] edx +
mov edx [ebp+arg_14] +
mov [esp+98h+var_88] edx +
mov edx [ebp+arg_8] +
mov [esp+98h+var_90] edx +
mov edx [ebp+arg_4] +
mov [esp+98h+var_94] edx +
call eax  +
mov ecx esi +
mov ebx eax +
call sub_40FB70  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aCpp_diagnost_0 +
mov [esp+98h+var_94] 0AAh +
mov [esp+98h+var_98] offset a____GccLibcppE +
call sub_405910  +
jmp sub_41ECD0  +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EBA0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EBA0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EBA0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov dword ptr [esp+4] 1 +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_41EBA0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EC20  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EC20  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EC20  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EC20  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EB10  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
sub esp 2Ch +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_4403E0  +
mov [esp+2Ch+var_24] offset aSS +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41ECD0  +
add esp 2Ch +
retn   +
***
sub esp 28h +
mov ebx [esp+28h+arg_8] +
cmp byte ptr [ebx] 0 +
cmovz ebx eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_4403E0  +
mov [esp+28h+var_18] ebx +
mov [esp+28h+var_1C] offset aSS +
mov [esp+28h+var_14] eax +
mov eax [esp+28h+arg_C] +
mov [esp+28h+var_20] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_41EF10  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 24h +
mov ecx [esp+28h+arg_0] +
mov [esp+28h+var_24] 50h +
mov [esp+28h+var_28] 1 +
shl esi cl +
call sub_435F00  +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_435ED0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] eax +
mov ebx eax +
call sub_440C70  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 4 +
mov dword ptr [ebx+18h] 0 +
call sub_435F00  +
mov [ebx+38h] esi +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+2Ch] eax +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_440DE0  +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_41F119  +
mov eax [ebx+2Ch] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_C] +
mov eax [ebx+38h] +
mov edx [ebx+2Ch] +
add dword ptr [ebx+44h] 1 +
mov ebp eax +
mov [esp+3Ch+var_18] eax +
sub eax 1 +
and esi eax +
mov edi [edx+esi*4] +
lea ecx ds:0[esi*4] +
mov [esp+3Ch+var_20] eax +
test edi edi +
jz loc_41F458  +
cmp edi 0FFFFFFFFh +
jz loc_41F44F  +
mov eax [esp+3Ch+arg_C] +
cmp [edi+8] eax +
mov [esp+3Ch+var_1C] ebp +
jz loc_41F3E1  +
mov eax [esp+3Ch+arg_C] +
mov ecx ebx +
shl eax 4 +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_20] +
and [esp+3Ch+var_24] eax +
mov eax [ebx+48h] +
mov ebx edx +
or [esp+3Ch+var_24] 1 +
mov edx [esp+3Ch+arg_C] +
lea ebp [eax+1] +
jmp loc_41F1B3  +
add ebp 1 +
add esi [esp+3Ch+var_24] +
and esi [esp+3Ch+var_20] +
mov [ecx+48h] ebp +
mov edi [ebx+esi*4] +
lea eax ds:0[esi*4] +
test edi edi +
jz loc_41F223  +
cmp edi 0FFFFFFFFh +
jz loc_41F210  +
cmp [edi+8] edx +
jnz loc_41F1B0  +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_41F1B0  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx [esp+3Ch+var_14] +
mov edx [esp+3Ch+var_10] +
test eax eax +
jnz loc_41F1B0  +
mov eax edi +
jmp loc_41F2CA  +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp eax edi +
cmovnz eax esi +
mov [esp+3Ch+var_1C] eax +
jmp loc_41F1B0  +
mov ebx ecx +
mov ecx eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_41F464  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
cmp edx [esp+3Ch+var_18] +
cmovnz ecx eax +
mov eax [ebx+30h] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx [esp+3Ch+var_24] +
mov edx eax +
mov [esp+3Ch+var_20] eax +
mov eax [ebx+2Ch] +
mov edi edx +
mov [eax+ecx] edx +
mov eax [esp+3Ch+arg_8] +
mov [edx+4] eax +
mov eax [esp+3Ch+arg_C] +
mov [edx+8] eax +
mov eax [ebx+34h] +
test eax eax +
jz loc_41F2D2  +
mov ecx [esp+3Ch+arg_8] +
lea edx [ecx+1] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+arg_8] +
mov byte ptr [esi+eax] 0 +
mov [edi] esi +
mov eax [ebx+3Ch] +
lea edx [eax+1] +
mov eax [ebx+38h] +
mov [ebx+3Ch] edx +
shl edx 2 +
lea ecx [eax+eax] +
mov [esp+3Ch+var_1C] ecx +
add ecx eax +
mov eax [esp+3Ch+var_20] +
cmp edx ecx +
jnb loc_41F350  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov edx [ebx+0Ch] +
lea ecx [eax+1] +
mov eax [ebx+10h] +
sub eax edx +
cmp eax ecx +
jb loc_41F43B  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add eax [esp+3Ch+arg_8] +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov edx [ebx+8] +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_41F46B  +
mov ecx [ebx+18h] +
mov esi [ebx+4] +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx [ebx+10h] +
mov edi eax +
sub edi esi +
mov [ebx+0Ch] eax +
mov ebp ecx +
sub ebp esi +
cmp edi ebp +
jbe loc_41F342  +
mov [ebx+0Ch] ecx +
mov eax ecx +
mov [ebx+8] eax +
mov eax [esp+3Ch+var_20] +
mov [eax] edx +
jmp loc_41F2A6  +
mov esi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
lea edi [esi-1] +
call sub_435F00  +
mov ecx [ebx+2Ch] +
mov edx [ebx+38h] +
mov [esp+3Ch+arg_0] ebx +
mov [esp+3Ch+var_18] ecx +
mov ebp ecx +
lea ecx [ecx+edx*4] +
mov [esp+3Ch+var_24] ecx +
nop   +
mov esi [ebp+0] +
lea edx [esi-1] +
cmp edx 0FFFFFFFDh +
ja loc_41F3B4  +
mov ebx [esi+8] +
mov edx edi +
and edx ebx +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jz loc_41F3B2  +
mov ecx ebx +
shl ecx 4 +
add ebx ecx +
and ebx edi +
or ebx 1 +
add edx ebx +
and edx edi +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_41F3A6  +
mov [ecx] esi +
add ebp 4 +
cmp [esp+3Ch+var_24] ebp +
ja loc_41F380  +
mov ebx [esp+3Ch+arg_0] +
cmp byte ptr [ebx+4Ch] 0 +
jnz loc_41F425  +
mov [ebx+2Ch] eax +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+38h] eax +
mov eax [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_41F184  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx eax +
mov eax edi +
test ecx ecx +
jz loc_41F2CA  +
mov eax [esp+3Ch+var_18] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
jmp loc_41F184  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_24] +
jmp loc_41F3C7  +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call sub_440CD0  +
mov edx [ebx+0Ch] +
jmp loc_41F2E9  +
mov [esp+3Ch+var_1C] esi +
jmp loc_41F184  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_41F243  +
xor eax eax +
jmp loc_41F2CA  +
or byte ptr [ebx+28h] 2 +
jmp loc_41F31F  +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_8] +
mov edi [esp+20h+arg_4] +
test esi esi +
jz loc_41F4DB  +
lea ebx [edi+esi] +
mov eax edi +
xor edx edx +
lea esi [esi+0] +
add eax 1 +
movzx ecx byte ptr [eax-1] +
imul edx edx +
cmp eax ebx +
lea edx [edx+ecx-71h] +
jnz loc_41F4A0  +
mov eax [esp+20h+arg_C] +
add edx esi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov [esp+20h+var_20] eax +
call sub_41F130  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor edx edx +
jmp loc_41F4B2  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_41F507  +
add ebx 4 +
cmp ebp ebx +
jbe loc_41F529  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_41F500  +
mov ecx [esi+40h] +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_14] edx +
call edi  +
test eax eax +
jnz loc_41F500  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_41F540  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_41F567  +
add ebx 4 +
cmp ebp ebx +
jbe loc_41F596  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_41F560  +
mov ecx [esi+40h] +
mov edx [esp+38h] +
mov [esp+4] eax +
mov [esp] ecx +
mov [esp+8] edx +
call edi  +
test eax eax +
jz loc_41F560  +
mov dword ptr [ebx] 0FFFFFFFFh +
add ebx 4 +
cmp ebp ebx +
ja loc_41F567  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+30h] +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_41F5BE  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov [ebx+2Ch] eax +
mov eax [esp+28h] +
mov [ebx+38h] eax +
mov eax [esp+2Ch] +
mov [ebx+3Ch] eax +
mov eax esi +
mov [ebx+4Ch] al +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
xor ebp ebp +
push edi  +
push esi  +
xor esi esi +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov eax [esp+60h] +
fldz   +
mov dword ptr [esp+20h] 0 +
mov ecx [eax+2Ch] +
mov eax [eax+38h] +
shl eax 2 +
mov [esp+28h] eax +
add eax ecx +
mov [esp+18h] eax +
jmp loc_41F63C  +
test eax eax +
jz loc_41F633  +
mov edi [eax+4] +
xor edx edx +
mov [esp+3Ch] edx +
mov [esp+38h] edi +
add ebp edi +
cmp ebx edi +
fild  qword ptr [esp+38h] +
cmovb ebx edi +
add esi 1 +
fmul st st +
faddp st(1) st +
add ecx 4 +
cmp [esp+18h] ecx +
jbe loc_41F651  +
mov eax [ecx] +
cmp eax 0FFFFFFFFh +
jnz loc_41F610  +
add dword ptr [esp+20h] 1 +
add ecx 4 +
cmp [esp+18h] ecx +
ja loc_41F63C  +
mov eax [esp+60h] +
xor edx edx +
mov [esp+1Ch] edx +
mov edx [esp+60h] +
fstp  qword ptr [esp+30h] +
mov eax [eax+3Ch] +
mov [esp] edx +
mov [esp+18h] eax +
call loc_440E40  +
mov edx [esp+18h] +
mov dword ptr [esp+4] offset aStringPoolEntr +
mov [esp+8] edx +
mov edx ds:_iob +
mov edi eax +
sub edi ebp +
lea eax [edx+40h] +
mov [esp] eax +
call sub_450940  +
mov eax [esp+18h] +
mov edx [esp+1Ch] +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aIdentifiersLu_ +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
xor edx edx +
fild  qword ptr [esp+38h] +
fst  qword ptr [esp+18h] +
mov [esp+3Ch] edx +
add eax 40h +
mov [esp+38h] esi +
fild  qword ptr [esp+38h] +
fmul  ds:flt_4630D4 +
mov [esp] eax +
fdivrp st(1) st +
fstp  qword ptr [esp+0Ch] +
call sub_450940  +
mov eax [esp+60h] +
mov eax [eax+38h] +
mov dword ptr [esp+4] offset aSlotsLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset aDeletedLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_450940  +
cmp edi 27FFh +
mov ecx 20h +
fld  qword ptr [esp+30h] +
jbe loc_41F74D  +
cmp edi 9FFFFFh +
ja loc_41F960  +
shr edi 0Ah +
mov ecx 6Bh +
cmp ebp 27FFh +
jbe loc_41F770  +
cmp ebp 9FFFFFh +
ja loc_41F951  +
mov edx ebp +
mov eax 6Bh +
shr edx 0Ah +
jmp loc_41F777  +
mov edx ebp +
mov eax 20h +
mov [esp+0Ch] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+20h] +
mov [esp+14h] ecx +
mov [esp+10h] edi +
mov [esp+8] edx +
add eax 40h +
mov dword ptr [esp+4] offset aBytesLuCLuCOve +
mov [esp] eax +
call sub_450940  +
cmp dword ptr [esp+28h] 27FFh +
fld  qword ptr [esp+20h] +
jbe loc_41F7D0  +
cmp dword ptr [esp+28h] 9FFFFFh +
ja loc_41F940  +
mov eax [esp+28h] +
mov edx 6Bh +
shr eax 0Ah +
jmp loc_41F7D9  +
mov eax [esp+28h] +
mov edx 20h +
mov [esp+8] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+28h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aTableSizeLuC +
add eax 40h +
mov [esp] eax +
call sub_450940  +
xor edx edx +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov [esp+38h] ebp +
mov eax [eax+48h] +
fild  qword ptr [esp+38h] +
fld  qword ptr [esp+18h] +
fdiv st(1) st +
mov [esp+38h] eax +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov eax [eax+44h] +
mov dword ptr [esp+4] offset aCollSearch_4f +
fld  st(1) +
fmul st st(2) +
fxch  st(2) +
fstp  qword ptr [esp+30h] +
fxch  st(1) +
fstp  qword ptr [esp+20h] +
fld  qword ptr [esp+28h] +
fdivrp st(1) st +
fstp  qword ptr [esp+28h] +
fild  qword ptr [esp+38h] +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
fild  qword ptr [esp+38h] +
fdivp st(1) st +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_450940  +
mov eax [esp+60h] +
xor edx edx +
mov eax [eax+44h] +
mov [esp+3Ch] edx +
mov dword ptr [esp+4] offset aInsSearch_4f +
mov [esp+38h] eax +
mov eax ds:_iob +
fild  qword ptr [esp+38h] +
fdivr  qword ptr [esp+18h] +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_450940  +
fld  qword ptr [esp+28h] +
fsub  qword ptr [esp+20h] +
fldz   +
fld  st +
fucomi st st(2) +
fld  qword ptr [esp+30h] +
ja loc_41F97F  +
fxch  st(3) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_41F970  +
fstp  st(1) +
jmp loc_41F8D2  +
fstp  st(1) +
fld  st +
fld  ds:dbl_4630D8 +
lea esi [esi+0] +
fld  st(1) +
fmul st st(2) +
fsub st st(3) +
fld  st(2) +
fadd st st(3) +
fdivp st(1) st +
fsub st(2) st +
fucomip st st(1) +
ja loc_41F8E0  +
fstp  st +
fstp  st(1) +
mov eax ds:_iob +
fstp  qword ptr [esp+10h] +
fstp  qword ptr [esp+8] +
mov dword ptr [esp+4] offset aAvg_Entry_2fBy +
add eax 40h +
mov [esp] eax +
call sub_450940  +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aLongestEntryLu +
add eax 40h +
mov [esp] eax +
call sub_450940  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+28h] +
mov edx 4Dh +
shr eax 14h +
jmp loc_41F7D9  +
***
mov edx ebp +
mov eax 4Dh +
shr edx 14h +
jmp loc_41F777  +
***
shr edi 14h +
mov ecx 4Dh +
jmp loc_41F74D  +
***
fucomi st st(1) +
jnz loc_41F8D0  +
fstp  st +
jmp loc_41F8F6  +
***
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov dword ptr [esp+8] offset aApprox_sqrt +
mov dword ptr [esp+4] 15Ch +
mov dword ptr [esp] offset a____GccLibcppS +
call sub_405910  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movq mm6 qword ptr ds:oword_463B20 +
movq mm5 qword ptr ds:oword_463B30 +
movq mm4 qword ptr ds:oword_463B40 +
movq mm3 qword ptr ds:oword_463B50 +
mov eax ecx +
and ecx 7 +
and eax 0FFFFFFF8h +
movq mm1 qword ptr [eax] +
shl edx cl +
jmp loc_41F9EF  +
add eax 8 +
mov edx 0FFFFFFFFh +
movq mm1 qword ptr [eax] +
movq mm2 mm1 +
movq mm0 mm1 +
pcmpeqb mm2 mm6 +
pcmpeqb mm0 mm5 +
por mm0 mm2 +
movq mm2 mm1 +
pcmpeqb mm2 mm4 +
por mm0 mm2 +
pcmpeqb mm1 mm3 +
por mm0 mm1 +
pmovmskb ecx mm0 +
and edx ecx +
jz loc_41F9E4  +
emms   +
bsf edx edx +
add eax edx +
retn   +
***
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movdqa xmm6 oword ptr ds:oword_463B20 +
movdqa xmm5 oword ptr ds:oword_463B30 +
movdqa xmm4 oword ptr ds:oword_463B40 +
movdqa xmm3 oword ptr ds:oword_463B50 +
mov eax ecx +
and ecx 0Fh +
and eax 0FFFFFFF0h +
movdqa xmm1 oword ptr [eax] +
shl edx cl +
jmp loc_41FA6C  +
add eax 10h +
mov edx 0FFFFFFFFh +
movdqa xmm1 oword ptr [eax] +
movdqa xmm2 xmm1 +
movdqa xmm0 xmm1 +
pcmpeqb xmm2 xmm6 +
pcmpeqb xmm0 xmm5 +
por xmm0 xmm2 +
movdqa xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pcmpeqb xmm2 xmm4 +
por xmm0 xmm2 +
por xmm0 xmm1 +
pmovmskb ecx xmm0 +
and edx ecx +
jz loc_41FA60  +
bsf edx edx +
add eax edx +
retn   +
***
mov ebx eax +
sub esp 14h +
mov esi [eax+20h] +
cmp esi [eax+24h] +
jz loc_41FAD6  +
mov eax [eax+18h] +
lea eax [eax+esi*8] +
add esi 1 +
mov [eax] edx +
mov [eax+4] ecx +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 64h +
lea eax [esi+esi] +
mov [ebx+24h] eax +
mov eax [ebx+18h] +
shl esi 4 +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_14] eax +
call sub_435F50  +
mov esi [ebx+20h] +
mov ecx [esp+14h+var_8] +
mov edx [esp+14h+var_C] +
mov [ebx+18h] eax +
jmp loc_41FAC2  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax] +
test eax eax +
jz loc_41FB23  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 10h +
call sub_435ED0  +
mov [ebx] eax +
mov esi eax +
mov [eax+4] ebx +
mov [esp+14h+var_14] 0FA0h +
call sub_435ED0  +
mov dword ptr [esi] 0 +
mov [esi+8] eax +
add eax 0FA0h +
mov [esi+0Ch] eax +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov esi [eax] +
mov edi [esi] +
movzx eax byte ptr [edi] +
cmp al 24h +
jz loc_41FB90  +
cmp byte ptr [ebx+263h] 0 +
jz loc_41FB83  +
cmp al 5Ch +
jz loc_41FBD3  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+262h] 0 +
jz loc_41FB83  +
add edi 1 +
mov ebp 1 +
mov [esi] edi +
cmp byte ptr [ebx+264h] 0 +
jz loc_41FB83  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_41FB83  +
mov byte ptr [ebx+264h] 0 +
mov [esp+48h+var_40] offset aInIdentifier_0 +
mov [esp+48h+var_44] 2 +
mov [esp+48h+var_48] ebx +
call sub_41ECD0  +
jmp loc_41FB83  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 55h +
jnz loc_41FB83  +
add edi 2 +
cmp edx 1 +
mov edx [esi+10h] +
sbb eax eax +
not eax  +
mov [esi] edi +
add eax 2 +
lea edi [esp+48h+var_1C] +
mov [esp+48h+var_2C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_411A30  +
test al al +
jnz loc_41FC30  +
sub dword ptr [esi] 2 +
jmp loc_41FB83  +
mov ebp 1 +
jmp loc_41FB83  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ebx] +
test cl cl +
mov [esp+2Ch+var_10] edx +
mov esi [esp+2Ch+arg_0] +
movzx edx byte ptr [edx] +
mov edi [eax] +
jnz loc_41FCAE  +
movzx eax byte ptr [edi] +
lea ebp [edx-71h] +
test ds:word_4660A0[eax+eax] 204h +
jz loc_41FC89  +
nop   +
imul ebp ebp +
add edi 1 +
lea ebp [ebp+eax-71h] +
movzx eax byte ptr [edi] +
test ds:word_4660A0[eax+eax] 204h +
jnz loc_41FC70  +
movzx eax byte ptr [edi-1] +
xor edx edx +
mov ecx esi +
mov byte ptr [esi+4] 0 +
mov [esi] eax +
mov eax [ebx] +
mov [eax] edi +
mov eax ebx +
call sub_41FB60  +
test al al +
jz loc_41FD80  +
mov eax [ebx] +
mov edi [eax] +
movzx edx byte ptr [edi] +
test ds:word_4660A0[edx+edx] 204h +
jnz loc_41FCE2  +
lea esi [esi+0] +
xor edx edx +
mov ecx esi +
mov eax ebx +
call sub_41FB60  +
test al al +
jz loc_41FCF1  +
mov edx [ebx] +
mov edi [edx] +
movzx edx byte ptr [edi] +
test ds:word_4660A0[edx+edx] 204h +
jz loc_41FCC0  +
mov byte ptr [esi+4] 0 +
mov [esi] edx +
mov edx [ebx] +
add dword ptr [edx] 1 +
mov edi [edx] +
jmp loc_41FCD3  +
mov eax [ebx] +
mov edi [esp+2Ch+var_10] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_416E20  +
mov esi eax +
mov eax [ebx] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_4241A0  +
mov ecx [esp+2Ch+arg_4] +
mov [ecx] eax +
movzx edx word ptr [esi+14h] +
shr dx 6 +
test dl 8 +
jz loc_41FD71  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_41FD71  +
and edx 2 +
jnz loc_41FDB7  +
cmp [ebx+2B8h] esi +
jz loc_41FDE0  +
test byte ptr [esi+15h] 80h +
jz loc_41FD71  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aIdentifierSIsA +
mov [esp+2Ch+var_28] 0Fh +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_41ED10  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [ebx+234h] +
mov [esp+2Ch+var_1C] 1 +
sub edi ecx +
add ebp edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_41F130  +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
jmp loc_41FD29  +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_41FD41  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aAttemptToUsePo +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_41ECD0  +
jmp loc_41FD41  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_41FD4D  +
cmp byte ptr [ebx+248h] 0 +
jz loc_41FE10  +
mov [esp+2Ch+var_24] offset a__va_args__Can +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_41ECD0  +
jmp loc_41FD4D  +
mov [esp+2Ch+var_24] offset a__va_args__C_0 +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_41ECD0  +
jmp loc_41FD4D  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx eax +
and ebx 0FFFFFFFCh +
and eax 3 +
mov edx [ebx] +
jz loc_41FE5B  +
lea ecx ds:0[eax*8] +
mov eax 0FFFFFFFFh +
shl eax cl +
and edx eax +
jmp loc_41FE5B  +
add ebx 4 +
mov edx [ebx] +
mov ecx edx +
mov ebp edx +
xor ecx 0D0D0D0Dh +
xor ebp 0A0A0A0Ah +
mov eax ecx +
add ecx 7EFEFEFFh +
not eax  +
mov edi edx +
xor eax ecx +
mov ecx ebp +
not ecx  +
add ebp 7EFEFEFFh +
xor edi 5C5C5C5Ch +
xor ecx ebp +
or eax ecx +
mov ecx edi +
mov esi edx +
add edi 7EFEFEFFh +
not ecx  +
xor esi 3F3F3F3Fh +
xor ecx edi +
or eax ecx +
mov ecx esi +
not ecx  +
add esi 7EFEFEFFh +
xor ecx esi +
or eax ecx +
test eax 81010100h +
jz loc_41FE56  +
xor eax eax +
lea ecx ds:0[eax*8] +
mov esi edx +
shr esi cl +
mov ecx esi +
cmp cl 0Ah +
jz loc_41FEE8  +
cmp cl 0Dh +
jz loc_41FEE8  +
cmp cl 5Ch +
jz loc_41FEE8  +
cmp cl 3Fh +
jz loc_41FEE8  +
add eax 1 +
cmp eax 4 +
jnz loc_41FEBA  +
jmp loc_41FE56  +
test eax eax +
js loc_41FE56  +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [edx] +
test al al +
movzx ebx al +
jns loc_41FFB8  +
mov esi ebx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx ebx +
add ecx 1 +
test bl 80h +
jnz loc_41FF20  +
mov ebx 7Fh +
sar ebx cl +
and ebx esi +
cmp ecx 1 +
jz loc_41FFD8  +
movzx eax byte ptr [edx+1] +
shl ebx 6 +
lea esi [edx+1] +
mov ebp eax +
and eax 0C0h +
and ebp 3Fh +
or ebx ebp +
add eax 0FFFFFF80h +
jnz loc_41FFBC  +
lea eax [edx+ecx-1] +
jmp loc_41FF7D  +
add esi 1 +
movzx edx byte ptr [esi] +
shl ebx 6 +
mov ebp ebx +
mov ebx edx +
and edx 0C0h +
and ebx 3Fh +
or ebx ebp +
add edx 0FFFFFF80h +
jnz loc_41FFBC  +
cmp esi eax +
jnz loc_41FF60  +
mov ebp ecx +
mov byte ptr [edi] 5Ch +
lea edx [edi+2] +
mov ecx 1Ch +
mov byte ptr [edi+1] 55h +
mov esi ebx +
add edx 1 +
shr esi cl +
sub ecx 4 +
and esi 0Fh +
cmp ecx 0FFFFFFFCh +
movzx eax ds:byte_4631F5[esi] +
mov [edx-1] al +
jnz loc_41FF92  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebp ebp +
jmp loc_41FF83  +
mov [esp+24h+var_1C] offset aUtf8_to_ucn +
mov [esp+24h+var_20] 0C56h +
mov [esp+24h+var_24] offset a____GccLibcp_0 +
call sub_405910  +
mov ebp 1 +
jmp loc_41FF83  +
***
sub esp 24h +
movzx esi byte ptr [edx] +
test byte ptr [esi+esi+4660A1h] 2 +
jz loc_420060  +
movzx ebx byte ptr [edx+1] +
sub esi 71h +
lea ecx [edx+1] +
test ds:word_4660A0[ebx+ebx] 204h +
jz loc_420021  +
imul esi esi +
add ecx 1 +
lea esi [esi+ebx-71h] +
movzx ebx byte ptr [ecx] +
test ds:word_4660A0[ebx+ebx] 204h +
jnz loc_420008  +
mov eax [eax] +
sub ecx edx +
add esi ecx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_41F130  +
test eax eax +
jz loc_420060  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
push ebx  +
jz loc_4200F1  +
xor eax eax +
cpuid   +
test eax eax +
jz loc_4200F1  +
mov eax 1 +
cpuid   +
and ecx 100000h +
mov eax offset loc_41FA20 +
jnz loc_4200EA  +
test edx 4000000h +
jnz loc_4200EA  +
and edx 2000000h +
mov eax offset loc_41F9B0 +
jz loc_420133  +
mov ds:dword_46B1D4 eax +
pop ebx  +
retn   +
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
jz loc_420133  +
mov eax 80000000h +
cpuid   +
cmp eax 80000000h +
jbe loc_420133  +
mov eax 80000001h +
cpuid   +
and edx offset loc_408000 +
cmp edx offset loc_408000 +
jnz loc_420133  +
mov eax offset loc_41F9B0 +
jmp loc_4200EA  +
mov eax offset sub_41FE30 +
mov ds:dword_46B1D4 eax +
pop ebx  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov esi [eax] +
mov ebx [esi+8] +
test byte ptr [esi+3Ch] 2 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+4] ebx +
mov [esi] ebx +
mov byte ptr [esi+38h] 0 +
jz loc_4201A6  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_42018E  +
cmp al 0Dh +
jnz loc_420184  +
jmp loc_42018E  +
cmp al 0Ah +
jz loc_42018E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 0Dh +
jnz loc_420180  +
cmp al 0Dh +
jz loc_4201F4  +
lea edx [ebx+1] +
mov ebp edx +
jmp loc_4201DA  +
cmp byte ptr [ebx+1] 3Fh +
jz loc_420278  +
add ebx 1 +
mov eax [esi+10h] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_20] eax +
call ds:dword_46B1D4  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_420207  +
cmp al 3Fh +
jz loc_420199  +
mov edx [esi+10h] +
cmp ebx edx +
jz loc_420192  +
cmp al 0Dh +
mov ebp ebx +
jz loc_42020E  +
test edi edi +
jnz loc_420220  +
lea edx [ebx+1] +
add ebp 1 +
mov byte ptr [ebx] 0Ah +
mov eax esi +
mov ecx 0Ah +
call sub_41FAB0  +
mov [esi+8] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+10h] ebx +
jz loc_420192  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_420192  +
lea ebp [ebx+2] +
lea edx [ebx+1] +
jmp loc_4201DA  +
mov edi ebx +
add ebx 1 +
jmp loc_4201A6  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_4201D0  +
lea ebp [ebx+1] +
cmp edx ebp +
jnz loc_4201D0  +
lea ebp [ebx+2] +
jmp loc_4201DA  +
movzx eax byte ptr [ebx-1] +
test byte ptr [eax+eax+4660A1h] 8 +
jz loc_420381  +
mov eax ebx +
sub eax 1 +
movzx edx byte ptr [eax-1] +
test byte ptr [edx+edx+4660A1h] 8 +
jnz loc_420234  +
mov [esp+24h+var_18] eax +
sub eax 1 +
cmp edi eax +
jnz loc_4201D4  +
cmp ebx [esp+24h+var_18] +
mov ecx 20h +
mov eax 5Ch +
mov edx edi +
cmovz ecx eax +
mov eax esi +
mov edi edx +
call sub_41FAB0  +
mov ebx [esp+24h+var_18] +
mov [esi+8] edi +
sub ebx 2 +
jmp loc_4202B3  +
movzx ecx byte ptr [ebx+2] +
cmp ds:byte_46B1E0[ecx] 0 +
jz loc_4201A3  +
mov eax esi +
mov edx ebx +
call sub_41FAB0  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_4201A3  +
movzx eax byte ptr [ebx+2] +
lea ebp [ebx+2] +
movzx eax ds:byte_46B1E0[eax] +
mov [ebx] al +
mov edi ebx +
lea eax [ebp+1] +
add ebx 1 +
mov [esp+24h+var_18] eax +
movzx eax byte ptr [ebp+1] +
cmp al 0Dh +
mov [edi+1] al +
jnz loc_420323  +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jz loc_420376  +
cmp byte ptr [ebp+2] 0Ah +
jz loc_42033A  +
mov edx [esi+8] +
cmp edx ebx +
jz loc_420314  +
movzx eax byte ptr [edi] +
movzx ecx al +
test byte ptr [ecx+ecx+4660A1h] 8 +
jz loc_420357  +
mov edi ebx +
jmp loc_42030D  +
movzx eax byte ptr [edi-1] +
movzx ecx al +
test byte ptr [ecx+ecx+4660A1h] 8 +
jz loc_42039C  +
sub edi 1 +
cmp edx edi +
jnz loc_4202F8  +
mov ebp [esp+24h+var_18] +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_4201DA  +
cmp al 0Ah +
jz loc_420341  +
cmp al 3Fh +
jz loc_4203B5  +
mov edi ebx +
mov ebp [esp+24h+var_18] +
jmp loc_4202B5  +
lea eax [ebp+2] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jnz loc_4202DD  +
mov ebp eax +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_4201DA  +
cmp al 5Ch +
jnz loc_420314  +
mov edi ebx +
mov ecx 5Ch +
lea ebp [edi-1] +
mov eax esi +
mov edx ebp +
call sub_41FAB0  +
lea ebx [edi-2] +
mov [esi+8] ebp +
jmp loc_42032F  +
lea edx [ebx+1] +
add ebp 2 +
jmp loc_4201DA  +
lea eax [ebx-1] +
cmp eax edi +
mov edx eax +
jnz loc_4201D4  +
mov [esp+24h+var_18] ebx +
mov ecx 5Ch +
jmp loc_420263  +
cmp al 5Ch +
jnz loc_420314  +
cmp ebx edi +
mov ecx 5Ch +
mov eax 20h +
cmovnz ecx eax +
jmp loc_420362  +
cmp byte ptr [ebp+2] 3Fh +
jnz loc_42032F  +
movzx ecx byte ptr [ebp+3] +
cmp ds:byte_46B1E0[ecx] 0 +
jz loc_42032F  +
mov eax esi +
mov edx ebx +
call sub_41FAB0  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_42032F  +
movzx eax byte ptr [ebp+3] +
movzx eax ds:byte_46B1E0[eax] +
mov [edi+1] al +
lea eax [ebp+3] +
mov [esp+24h+var_18] eax +
jmp loc_42032F  +
***
push ebx  +
sub esp 14h +
mov edx [eax] +
jmp loc_420448  +
cmp ebx ecx +
movzx ebx byte ptr [edx+3Ch] +
jbe loc_420430  +
test bl 2 +
jnz loc_420430  +
mov [edx+8] ecx +
mov [esp+18h+var_18] esi +
shr bl 2 +
call sub_41A260  +
mov edx [esi] +
and ebx 1 +
test edx edx +
jz loc_420470  +
test bl bl +
jnz loc_420470  +
movzx eax byte ptr [edx+38h] +
test al al +
jz loc_420478  +
mov ebx [edx+8] +
mov ecx [edx+10h] +
cmp ebx ecx +
jb loc_420483  +
cmp byte ptr [esi+11h] 0 +
jnz loc_420470  +
cmp ecx [edx+0Ch] +
jnz loc_420420  +
movzx ebx byte ptr [edx+3Ch] +
jmp loc_420430  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_420140  +
mov eax [esp+18h+var_C] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
mov ebx [ebp+0] +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
nop   +
mov eax [esp+3Ch+var_20] +
mov edi [esp+3Ch+var_1C] +
lea esi [eax+edx*8] +
mov eax [esi] +
cmp eax edi +
mov [esp+3Ch+var_18] eax +
ja loc_4206D0  +
lea edi [eax+1] +
mov eax [esi+4] +
add edx 1 +
sub edi [ebx+4] +
mov [ebx+1Ch] edx +
cmp eax 20h +
jnz loc_420553  +
mov eax [esp+3Ch+arg_4] +
test eax eax +
jz loc_4206D8  +
mov eax [ebx+10h] +
cmp [ebx+8] eax +
ja loc_4205F0  +
mov eax [esi] +
mov esi [ebp+1Ch] +
mov [ebx+4] eax +
mov eax [esi+8] +
lea edx [eax-1] +
imul edx edx +
add edx [esi] +
mov [esp+3Ch+var_34] 0 +
mov eax [esi+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov edi [edx+0Ch] +
sub eax [edx] +
mov [esp+3Ch+var_3C] esi +
shr eax cl +
lea eax [edi+eax+1] +
mov [esp+3Ch+var_38] eax +
call sub_40E0D0  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
jmp loc_4204C0  +
cmp eax 5Ch +
jz loc_4204F9  +
movzx ecx ds:byte_46B1E0[eax] +
test cl cl +
mov byte ptr [esp+3Ch+var_14] cl +
jz loc_4205C5  +
cmp byte ptr [ebp+258h] 0 +
jz loc_4204C0  +
mov ecx [esp+3Ch+arg_4] +
test ecx ecx +
jnz loc_420621  +
cmp byte ptr [ebp+24Dh] 0 +
jz loc_4206A0  +
mov edx [ebp+1Ch] +
movzx ecx byte ptr [esp+3Ch+var_14] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CCon +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_41EE20  +
jmp loc_4204AE  +
test eax eax +
jz loc_4204C0  +
mov [esp+3Ch+var_34] offset a_cpp_process_l +
mov [esp+3Ch+var_38] 48Bh +
mov [esp+3Ch+var_3C] offset a____GccLibcp_0 +
call sub_405910  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashNewli +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_41EDD0  +
mov eax [ebx+10h] +
mov [ebx+8] eax +
jmp loc_420505  +
cmp eax 2Fh +
jnz loc_4204C0  +
cmp byte ptr [ebp+24Dh] 0 +
mov ecx [esp+3Ch+var_18] +
jnz loc_420703  +
add ecx 3 +
mov [esp+3Ch+var_14] ecx +
mov ecx [esp+3Ch+var_18] +
movzx ecx byte ptr [ecx+3] +
test byte ptr [ecx+ecx+4660A1h] 8 +
mov byte ptr [esp+3Ch+var_18] cl +
jz loc_420687  +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_18] esi +
add ecx 1 +
movzx ebx byte ptr [ecx] +
movzx esi bl +
test byte ptr [esi+esi+4660A1h] 8 +
jnz loc_420664  +
mov esi [esp+3Ch+var_18] +
mov byte ptr [esp+3Ch+var_18] bl +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_14] ecx +
cmp byte ptr [esp+3Ch+var_18] 0Ah +
jnz loc_4204C0  +
mov ecx [esp+3Ch+var_14] +
cmp [esi+8] ecx +
jbe loc_4204C0  +
nop   +
mov edx [ebp+1Ch] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CIgn +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_41EE20  +
jmp loc_4204AE  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashAndNe +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_41EDD0  +
jmp loc_4204F9  +
cmp ecx [esi+8] +
jz loc_42058D  +
lea esi [esi+0] +
jmp loc_4204C0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov edi [ebp+0] +
mov edx [edi] +
movzx eax byte ptr [edx+1] +
lea ebx [edx+1] +
cmp al 2Fh +
jz loc_420830  +
cmp al 2Fh +
lea esi [ebx+1] +
jz loc_420757  +
cmp al 0Ah +
jz loc_4207B0  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
cmp al 2Fh +
lea esi [ebx+1] +
jnz loc_420746  +
cmp byte ptr [ebx-1] 2Ah +
jz loc_420814  +
cmp byte ptr [ebp+255h] 0 +
jz loc_42074A  +
movzx eax byte ptr [ebx+1] +
cmp al 2Ah +
jnz loc_42074E  +
cmp byte ptr [ebx+2] 2Fh +
jz loc_42074E  +
mov eax [ebp+1Ch] +
mov edx esi +
mov [edi] esi +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_1C] offset aWithinComment +
sub edx [edi+4] +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_2C] ebp +
call sub_41EE20  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
jmp loc_420750  +
mov [edi] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_4204A0  +
mov eax [edi+10h] +
cmp [edi+8] eax +
jnb loc_42083C  +
mov [esp+2Ch+var_2C] ebp +
call sub_420140  +
mov ebx [ebp+1Ch] +
mov eax [ebx+8] +
lea edx [eax-1] +
mov eax [edi+8] +
imul edx edx +
add edx [ebx] +
sub eax [edi+4] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov esi [edx+0Ch] +
sub eax [edx] +
mov [esp+2Ch+var_2C] ebx +
shr eax cl +
lea eax [esi+eax+1] +
mov [esp+2Ch+var_28] eax +
call sub_40E0D0  +
mov esi [edi] +
movzx eax byte ptr [esi] +
mov ebx esi +
jmp loc_420750  +
mov [edi] esi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] 1 +
call sub_4204A0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edx+2] +
movzx eax byte ptr [edx+2] +
jmp loc_42073F  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
movzx ecx byte ptr [esi] +
lea eax [esi+1] +
movzx edx byte ptr [esi+1] +
sub ecx 71h +
test ds:word_4660A0[edx+edx] 204h +
jz loc_42088F  +
imul ecx ecx +
add eax 1 +
lea ecx [ecx+edx-71h] +
movzx edx byte ptr [eax] +
test ds:word_4660A0[edx+edx] 204h +
jnz loc_420876  +
mov edx [ebx+234h] +
sub eax esi +
add ecx eax +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_14] 1 +
mov [esp+24h+var_24] edx +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_1C] eax +
call sub_41F130  +
movzx edx word ptr [eax+14h] +
mov esi eax +
shr dx 6 +
test dl 8 +
jz loc_420900  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_420900  +
and edx 2 +
jnz loc_420908  +
cmp esi [ebx+2B8h] +
jz loc_42092E  +
test byte ptr [esi+15h] 80h +
jz loc_420900  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aIdentifierSIsA +
mov [esp+24h+var_20] 0Fh +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_41ED10  +
nop   +
lea esi [esi+0] +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_4208CF  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aAttemptToUsePo +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_41ECD0  +
jmp loc_4208CF  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_4208D7  +
cmp byte ptr [ebx+248h] 0 +
jz loc_420957  +
mov [esp+24h+var_1C] offset a__va_args__Can +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_41ECD0  +
jmp loc_4208D7  +
mov [esp+24h+var_1C] offset a__va_args__C_0 +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_41ECD0  +
jmp loc_4208D7  +
***
mov eax [esp+4] +
add eax 2ECh +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
shl ebx 4 +
mov [esp+14h+var_14] ebx +
call sub_435ED0  +
mov dword ptr [esi] 0 +
add ebx eax +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov eax [esi+104h] +
mov edi [esi+0F0h] +
mov ebp [esi+108h] +
mov ebx [eax+0Ch] +
mov [esp+1Ch+var_10] eax +
mov eax edi +
sub ebx edi +
sar ebx 4 +
test ebp ebp +
jz loc_420A70  +
cmp ebx ebp +
jle loc_420A93  +
cmp ebx 1 +
jle loc_420A70  +
sub ebx 1 +
cmp ebx ebp +
cmovle ebp ebx +
mov [esp+1Ch+var_18] eax +
shl ebp 4 +
add eax 10h +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] eax +
call memmove  +
mov eax [esi+0F0h] +
jmp loc_420A7D  +
test ebx ebx +
jnz loc_420A7D  +
mov ecx [esp+1Ch+var_10] +
cmp [ecx+0Ch] eax +
jz loc_420AE0  +
lea edx [eax+10h] +
mov [esi+0F0h] edx +
mov edx [edi-10h] +
mov [eax] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+var_10] +
call sub_41FB10  +
cmp ebx ebp +
mov edx eax +
jl loc_420AF2  +
mov ecx [esi+104h] +
cmp ebx 1 +
mov eax [edx+8] +
mov [esp+1Ch+var_10] ecx +
mov ecx [ecx+0Ch] +
mov edx [ecx-10h] +
mov [eax] edx +
mov edx [ecx-0Ch] +
mov [eax+4] edx +
mov edx [ecx-8] +
mov [eax+8] edx +
mov ecx [ecx-4] +
mov [eax+0Ch] ecx +
mov eax [esi+0F0h] +
jg loc_420A48  +
jmp loc_420A70  +
mov eax ecx +
call sub_41FB10  +
mov [esi+104h] eax +
mov eax [eax+8] +
jmp loc_420A7D  +
mov ecx [eax+8] +
mov [esp+1Ch+var_10] eax +
mov eax ebp +
sub eax ebx +
shl eax 4 +
mov [esp+1Ch+var_18] ecx +
add ecx 10h +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ecx +
call memmove  +
mov edx [esp+1Ch+var_10] +
jmp loc_420AA2  +
***
mov eax [esp+arg_0] +
cmp byte ptr [eax+8] 0 +
jnz loc_420B30  +
jmp sub_420410  +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax+4] +
mov edx ds:dword_463D40[edx*8] +
cmp edx 1 +
jz loc_420B66  +
cmp edx 2 +
jnz loc_420B60  +
mov eax [eax+8] +
retn   +
mov eax 6 +
retn   +
mov eax [eax+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov edi [esp+0Ch+arg_4] +
mov esi [esp+0Ch+arg_0] +
mov eax [edi+4] +
mov ebp [edi] +
test eax eax +
jz loc_420BCE  +
xor ebx ebx +
jmp loc_420BAD  +
mov [esi] al +
add ebx 1 +
add esi 1 +
cmp [edi+4] ebx +
jbe loc_420BCE  +
lea edx [ebp+ebx+0] +
movzx eax byte ptr [edx] +
test al 80h +
jz loc_420BA0  +
mov eax esi +
add esi 0Ah +
call sub_41FF00  +
lea ebx [eax+ebx-1] +
add ebx 1 +
cmp [edi+4] ebx +
ja loc_420BAD  +
add esp 0Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_8] +
mov ecx [esp+10h+arg_C] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_463D40[edx*8] +
cmp eax 1 +
jz loc_420CA0  +
jle loc_420C64  +
cmp eax 2 +
jz loc_420C42  +
cmp eax 3 +
jnz loc_420C39  +
mov eax ds:off_463D44[edx*8] +
mov [esp+10h+var_8] offset aUnspellableTok +
mov [esp+10h+var_C] 4 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_4] eax +
call sub_41ECD0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
add ebx [esi+8] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jnz loc_420C39  +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_420CE6  +
test al 10h +
jnz loc_420CA0  +
mov eax ds:off_463D44[edx*8] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
test al al +
jz loc_420C39  +
add ebx 1 +
add edx 1 +
mov [ebx-1] al +
movzx eax byte ptr [edx-1] +
test al al +
jnz loc_420C85  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test cl cl +
jz loc_420CD0  +
mov eax [esi+0Ch] +
mov edx [eax+4] +
mov eax [eax] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
mov eax [esi+0Ch] +
add ebx [eax+4] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+8] +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_420B80  +
mov eax ds:dword_463F60[edx*4] +
jmp loc_420C7B  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [ecx] +
cmp [ebx+284h] eax +
jge loc_420D97  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_420D97  +
movzx eax byte ptr [edx+4] +
mov esi edx +
mov eax ds:dword_463D40[eax*8] +
cmp eax 1 +
jz loc_420DA5  +
cmp eax 2 +
jz loc_420DA0  +
mov eax 6 +
mov [esp+20h+var_20] eax +
mov [esp+20h+var_4] ecx +
call sub_435ED0  +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
mov edi eax +
call sub_420BE0  +
mov ecx [esp+20h+var_4] +
mov edx [esi] +
sub eax edi +
cmp dword ptr [ecx] 1 +
mov [esp+20h+var_8] edi +
mov [esp+20h+var_C] eax +
jz loc_420DB5  +
mov [esp+20h+var_10] offset a_SIsNotInNfc +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] 10h +
mov [esp+20h+var_20] ebx +
call sub_41EE20  +
mov [esp+20h+var_20] edi +
call free  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edx+8] +
jmp loc_420D30  +
mov eax [edx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_420D30  +
mov [esp+20h+var_10] offset a_SIsNotInNfkc +
jmp loc_420D73  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test al 2 +
jnz loc_420DD8  +
test al 10h +
jnz loc_420DE0  +
mov eax ds:off_463D44[edx*8] +
retn   +
***
mov eax ds:dword_463F60[edx*4] +
retn   +
***
mov [esp+4] edx +
jmp loc_42ED90  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_463D40[edx*8] +
cmp eax 1 +
jz loc_420E60  +
cmp eax 2 +
jz loc_420EC8  +
test eax eax +
jz loc_420E24  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_420EF0  +
test al 10h +
jnz loc_420E60  +
mov esi ds:off_463D44[edx*8] +
movzx eax byte ptr [esi] +
nop   +
add esi 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call putc  +
movzx eax byte ptr [esi] +
test eax eax +
jnz loc_420E40  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+8] +
mov edx [eax+4] +
mov edi [eax] +
test edx edx +
jz loc_420E1C  +
xor ebp ebp +
jmp loc_420EAC  +
lea eax [esp+2Ch+var_16] +
call sub_41FF00  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] 1 +
lea ebp [ebp+eax-1] +
lea eax [esp+2Ch+var_16] +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
mov eax [esi+8] +
add ebp 1 +
cmp [eax+4] ebp +
jbe loc_420E1C  +
lea edx [edi+ebp] +
test byte ptr [edx] 80h +
jnz loc_420E70  +
mov [esp+2Ch+var_28] ebx +
mov eax [eax] +
movzx eax byte ptr [eax+ebp] +
mov [esp+2Ch+var_2C] eax +
call fputc  +
jmp loc_420E9D  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_463F60[edx*4] +
jmp loc_420E3B  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov ecx [ebx+4] +
mov edx [esi+4] +
xor ch ch +
xor dh dh +
cmp ecx edx +
jz loc_420F23  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx ecx byte ptr [ebx+4] +
movzx edx cl +
mov edx ds:dword_463D40[edx*8] +
cmp edx 2 +
jz loc_420F70  +
cmp edx 3 +
jz loc_420F55  +
cmp edx 1 +
jz loc_420F98  +
cmp cl 26h +
mov al 1 +
jnz loc_420F1D  +
mov eax [esi+8] +
cmp [ebx+8] eax +
setz al  +
movzx eax al +
jmp loc_420F1D  +
cmp cl 50h +
mov eax 1 +
jnz loc_420F1D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jz loc_420FB5  +
xor eax eax +
jmp loc_420F1D  +
mov edx [ebx+8] +
cmp edx [esi+8] +
jnz loc_420F1D  +
mov [esp+18h+var_10] edx +
mov eax [esi+0Ch] +
mov [esp+18h+var_14] eax +
mov eax [ebx+0Ch] +
mov [esp+18h+var_18] eax +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
jmp loc_420F1D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jnz loc_420F1D  +
mov eax [esi+0Ch] +
cmp [ebx+0Ch] eax +
setz al  +
movzx eax al +
jmp loc_420F1D  +
mov esi [esi+0Ch] +
cmp [ebx+0Ch] esi +
jz loc_420F1D  +
xor eax eax +
jmp loc_420F1D  +
***
push ebp  +
mov edx 35h +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov eax [esp+1Ch] +
test byte ptr [ecx+6] 10h +
movzx ebp byte ptr [eax+4] +
movzx eax byte ptr [ecx+4] +
cmovz edx eax +
mov eax [esp+1Ch] +
movzx eax word ptr [eax+6] +
test al 10h +
jnz loc_421041  +
mov ebx ebp +
movzx edi bl +
mov esi edi +
test al 2 +
jz loc_421025  +
mov eax ds:dword_463F60[esi*4] +
movzx esi byte ptr [eax] +
cmp esi 3Dh +
jnz loc_421035  +
cmp edx 0Dh +
mov eax 1 +
jg loc_421035  +
***
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_463D40[esi*8] +
test eax eax +
jz loc_421050  +
mov esi 0FFFFFFFFh +
cmp edx 42h +
ja sub_4210A0  +
jmp ds:off_4632F8[edx*4]  +
***
mov esi 35h +
mov edi 35h +
jmp loc_421003  +
***
mov eax ds:off_463D44[esi*8] +
movzx esi byte ptr [eax] +
jmp loc_421011  +
***
and esi 0FFFFFFFBh +
xor eax eax +
cmp esi 3Ah +
setz al  +
jmp loc_421020  +
***
mov eax [ecx+0Ch] +
xor eax eax +
xor eax eax +
xor eax eax +
cmp esi 2Ah +
cmp esi 3Eh +
setz al  +
cmp esi 2Dh +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_421020  +
***
xor eax eax +
cmp esi 2Bh +
setz al  +
jmp loc_421020  +
***
cmp esi 25h +
jz loc_421110  +
cmp esi 3Ch +
jnz loc_421063  +
nop   +
mov eax 1 +
jmp loc_421020  +
***
xor eax eax +
cmp esi 3Eh +
setz al  +
jmp loc_421020  +
***
and edi 0FFFFFFFDh +
mov eax 1 +
cmp edi 35h +
jz loc_421020  +
cmp esi 2Bh +
jz loc_421020  +
sub esi 2Dh +
xor eax eax +
cmp esi 1 +
setbe al  +
jmp loc_421020  +
***
cmp edi 37h +
cmp esi 25h +
cmp esi 25h +
setz al  +
cmp esi 23h +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_421020  +
***
mov ebx [esp+arg_10] +
xor eax eax +
cmp byte ptr [ebx+271h] 0 +
jz loc_421020  +
cmp edi 35h +
jz loc_421110  +
mov ebx ebp +
movzx ebp bl +
cmp ds:dword_463D40[ebp*8] 2 +
jnz loc_421020  +
mov ebx [esp+arg_18] +
mov edx [ebx+0Ch] +
movzx edx byte ptr [edx] +
test byte ptr [edx+edx+4660A1h] 2 +
jnz loc_421110  +
jmp loc_421020  +
***
xor eax eax +
cmp esi 2Ah +
setz al  +
jmp loc_421020  +
***
mov eax [esp+arg_18] +
mov edx [eax+8] +
test edx edx +
jz loc_421110  +
mov eax [eax+0Ch] +
lea ebx [eax+edx] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:word_4660A0[ecx+ecx] 204h +
jnz loc_421251  +
cmp dl 24h +
jnz loc_421173  +
mov ecx [esp+arg_10] +
cmp byte ptr [ecx+262h] 0 +
jz loc_421173  +
add eax 1 +
cmp eax ebx +
jnz loc_421225  +
jmp loc_421110  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
call sub_41DB20  +
mov ebx eax +
cmp byte ptr [ebx+4] 16h +
jz loc_4212B0  +
mov [esp] ebx +
mov [esp+4] esi +
call sub_420DF0  +
mov [esp] edi +
call sub_41DB20  +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_421278  +
mov [esp+4] esi +
mov dword ptr [esp] 20h +
call putc  +
cmp byte ptr [ebx+4] 16h +
jnz loc_42127E  +
mov [esp+24h] esi +
mov dword ptr [esp+20h] 0Ah +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp putc  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_4213E2  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
lea edi [eax+78h] +
mov ebp eax +
mov [esp+2Ch+var_2C] edi +
add ebp 2 +
call sub_435ED0  +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] offset aS_7 +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call sub_450970  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41DB20  +
mov ebx eax +
nop   +
movzx eax byte ptr [ebx+4] +
cmp al 16h +
jz loc_4213BA  +
mov eax ds:dword_463D40[eax*8] +
cmp eax 1 +
jz loc_4213C8  +
cmp eax 2 +
jnz loc_4213D8  +
mov eax [ebx+8] +
lea eax [ebp+eax+2] +
cmp edi eax +
jnb loc_421365  +
add edi edi +
cmp eax edi +
cmovnb edi eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_435F50  +
mov esi eax +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+ebp] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_420BE0  +
mov ebp eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
sub ebp esi +
mov [esp+2Ch+var_2C] eax +
call sub_41DB20  +
mov ecx [esp+2Ch+var_10] +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_421320  +
mov byte ptr [ecx] 20h +
movzx eax byte ptr [ebx+4] +
add ebp 1 +
cmp al 16h +
jnz loc_42132C  +
mov byte ptr [esi+ebp] 0 +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_421348  +
mov eax 6 +
jmp loc_421348  +
mov [esp+2Ch+var_2C] 78h +
mov edi 78h +
xor ebp ebp +
call sub_435ED0  +
mov esi eax +
jmp loc_421311  +
***
mov ecx [esp+arg_0] +
mov edx ebx +
jmp loc_421412  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_421410  +
mov eax [ecx+2Ch] +
mov [edx] eax +
mov [ecx+2Ch] ebx +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
lea ebx [eax+2Ch] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_421468  +
lea esi [ecx+ecx*2] +
shr esi 1 +
add esi 1F40h +
mov edx [eax+0Ch] +
sub edx [eax+4] +
cmp ecx edx +
ja loc_421460  +
cmp edx esi +
jbe loc_4214B0  +
mov ebx eax +
mov eax [eax] +
test eax eax +
jnz loc_421452  +
cmp ecx 1F3Fh +
mov eax 1F50h +
mov ebx 1F40h +
ja loc_4214A0  +
mov [esp+14h+var_14] eax +
call sub_435ED0  +
lea edx [eax+ebx] +
mov [edx+4] eax +
mov [edx+8] eax +
mov eax edx +
mov [edx+0Ch] edx +
mov dword ptr [edx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ebx [ecx+7] +
and ebx 0FFFFFFF8h +
lea eax [ebx+10h] +
jmp loc_42147A  +
mov edx [eax] +
mov [ebx] edx +
mov edx [eax+4] +
mov dword ptr [eax] 0 +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov edx [esp+14h+arg_8] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call sub_421430  +
mov edx [ebx+8] +
mov [ebx] eax +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
sub eax edx +
mov [esp+14h+var_C] eax +
call memcpy  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+arg_0] +
mov ebp [eax] +
mov eax [esp+34h+arg_4] +
test ebp ebp +
mov ebx [eax] +
jz loc_4215B0  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
sub esi eax +
cmp ecx esi +
jbe loc_421589  +
mov [esp+34h+var_30] edx +
sub edi esi +
mov [esp+34h+var_2C] esi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call memcpy  +
mov edx [esp+34h+var_18] +
mov eax [esp+34h+var_1C] +
add [ebx+8] esi +
add edx esi +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call sub_4214D0  +
mov edx [esp+34h+var_18] +
mov ebx eax +
mov eax [eax+8] +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call memcpy  +
mov eax [esp+34h+arg_0] +
add [ebx+8] edi +
mov [eax] ebp +
mov eax [esp+34h+arg_4] +
mov [eax] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_34] eax +
call sub_421430  +
mov edx [esp+34h+var_18] +
mov ebp eax +
mov eax [eax+8] +
mov ebx ebp +
jmp loc_421589  +
***
jmp sub_4215E0  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
mov ebx [edi] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_421430  +
mov edx [ebx+8] +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] ecx +
sub eax edx +
mov [esp+10h+var_8] eax +
call memcpy  +
mov [esi] ebx +
mov [edi] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_421640  +
***
mov eax [esp+18h+arg_0] +
test eax eax +
jnz loc_421652  +
jmp loc_421663  +
mov eax ebx +
mov ebx [eax] +
mov eax [eax+4] +
mov [esp+18h+var_18] eax +
call free  +
test ebx ebx +
jnz loc_421650  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
mov ebx [eax] +
lea eax [ebx-1] +
mov [esp+28h+var_1C] eax +
jmp loc_4216F9  +
cmp al 2Dh +
jnz loc_421798  +
movzx eax byte ptr [ebx-1] +
and eax 0FFFFFFDFh +
cmp al 45h +
jz loc_4216F0  +
cmp al 50h +
jnz loc_42171C  +
cmp byte ptr [edi+24Fh] 0 +
jz loc_42171C  +
mov [esi] edx +
add ebx 1 +
mov byte ptr [esi+4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_4660A0[edx+edx] 204h +
jnz loc_4216F0  +
cmp al 2Eh +
jz loc_4216F0  +
cmp al 27h +
jnz loc_4216D0  +
cmp byte ptr [edi+276h] 0 +
jnz loc_4216F0  +
mov edx [edi] +
mov eax [edx] +
cmp eax ebx +
jnb loc_421742  +
cmp byte ptr [ebx-1] 27h +
jnz loc_421742  +
cmp byte ptr [edi+276h] 0 +
jnz loc_42173B  +
jmp loc_421742  +
cmp byte ptr [ebx-1] 27h +
jnz loc_421742  +
sub ebx 1 +
cmp ebx eax +
jnz loc_421735  +
mov [edx] ebx +
mov ecx esi +
xor edx edx +
mov eax edi +
call sub_41FB60  +
test al al +
jz loc_421759  +
mov eax [edi] +
mov ebx [eax] +
jmp loc_4216F9  +
mov esi [esp+28h+var_1C] +
sub ebx esi +
mov [ebp+0] ebx +
add ebx 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edi +
call sub_421670  +
mov ebx eax +
mov eax [ebp+0] +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] eax +
call memcpy  +
mov eax [ebp+0] +
mov byte ptr [ebx+eax] 0 +
mov [ebp+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Bh +
jz loc_4216D8  +
jmp loc_42171C  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
lea edx [ebx+1] +
mov [esp+28h+var_24] edx +
call sub_421670  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [esp+28h+arg_4] +
mov byte ptr [edi+ebx] 0 +
mov [esi+8] ebx +
mov [esi+0Ch] edi +
mov [esi+4] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+8Ch+var_6C] eax +
movzx eax byte ptr [ecx] +
mov [esp+8Ch+var_54] ecx +
mov edi [esp+8Ch+var_54] +
mov [esp+8Ch+var_58] edx +
movzx ebp al +
cmp ebp 55h +
jz loc_42182E  +
cmp ebp 4Ch +
jnz loc_4218AC  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 52h +
jz loc_421B38  +
cmp ebp 22h +
jz loc_421954  +
cmp ebp 27h +
jz loc_421A24  +
mov edi 44h +
mov ebp 3Eh +
movzx ecx byte ptr [esi] +
xor eax eax +
lea ebx [esi+1] +
movzx edx cl +
mov ecx [esp+8Ch+var_6C] +
cmp edx 5Ch +
jz loc_421890  +
nop   +
cmp edx ebp +
jz loc_4218F0  +
cmp edx 0Ah +
jz loc_4218E0  +
test edx edx +
jnz loc_4218D8  +
movzx edx byte ptr [esi+1] +
mov eax 1 +
mov esi ebx +
cmp edx 5Ch +
lea ebx [esi+1] +
jnz loc_421870  +
cmp byte ptr [ecx+0Bh] 0 +
jnz loc_4218D8  +
cmp byte ptr [esi+1] 0Ah +
mov edx 0Ah +
jz loc_421886  +
lea ebx [esi+2] +
movzx edx byte ptr [esi+2] +
mov esi ebx +
jmp loc_421888  +
cmp ebp 75h +
lea esi [edi+1] +
jnz loc_421835  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 38h +
jnz loc_421835  +
mov edi [esp+8Ch+var_54] +
lea esi [edi+3] +
movzx ebp byte ptr [edi+2] +
jmp loc_421835  +
movzx edx byte ptr [esi+1] +
mov esi ebx +
jmp loc_421888  +
cmp ebp 3Eh +
mov ebx esi +
mov edi 3Dh +
jz loc_421AB3  +
test al al +
jz loc_421902  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_421B1B  +
cmp edi 3Dh +
jz loc_4219F2  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_421990  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+28Bh] 0 +
jnz loc_421AC6  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_54] +
mov edx [esp+8Ch+var_58] +
mov eax [esi] +
mov [eax] ebx +
sub ebx ecx +
mov eax esi +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] ebx +
call sub_4217B0  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Ch +
mov edi 3Fh +
jz loc_42185A  +
cmp al 55h +
mov di 41h +
jz loc_42185A  +
cmp al 75h +
mov di 3Eh +
jnz loc_42185A  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+40h] +
jmp loc_42185A  +
add eax 234h +
mov edx ebx +
call sub_41FFE0  +
test al al +
jz loc_421A60  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_421929  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_421929  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_41EE20  +
jmp loc_421929  +
mov eax [esp+8Ch+var_6C] +
cmp dword ptr [eax+244h] 0Fh +
jz loc_42190B  +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] offset aMissingTermina +
mov [esp+8Ch+var_88] 2 +
mov [esp+8Ch+var_8C] eax +
call sub_41ECD0  +
jmp loc_42190B  +
cmp al 4Ch +
mov edi 39h +
jz loc_42185A  +
cmp al 55h +
mov di 3Bh +
jz loc_42185A  +
cmp al 75h +
mov di 38h +
jnz loc_42185A  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+3Ah] +
jmp loc_42185A  +
movzx eax byte ptr [ebx] +
test byte ptr [eax+eax+4660A1h] 2 +
jz loc_421929  +
mov [esp+8Ch+var_8C] edi +
call sub_425E20  +
mov [esp+8Ch+var_8C] eax +
call sub_425DA0  +
movzx edx byte ptr [ebx+1] +
test ds:word_4660A0[edx+edx] 204h +
mov edi eax +
lea eax [ebx+1] +
mov ebx eax +
jz loc_421929  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:word_4660A0[eax+eax] 204h +
jnz loc_421A9C  +
jmp loc_421929  +
mov eax [esp+8Ch+var_58] +
mov byte ptr [eax+4] 3 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 234h +
mov edx ebx +
call sub_41FFE0  +
test al al +
jz loc_421929  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_421929  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aC11RequiresASp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 17h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_41EE20  +
jmp loc_421929  +
mov [esp+8Ch+var_84] offset aNullCharacterS +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call sub_41ECD0  +
jmp loc_421902  +
mov edi [esp+8Ch+var_6C] +
cmp al 4Ch +
mov [esp+8Ch+var_39+1] 0 +
mov [esp+8Ch+var_34] 0 +
mov [esp+8Ch+var_4C] 3Fh +
mov edx [edi] +
mov ecx [edx+1Ch] +
mov edx [edx+18h] +
lea ebx [edx+ecx*8] +
jz loc_421B7F  +
cmp al 55h +
mov [esp+8Ch+var_4C] 41h +
jz loc_421B7F  +
cmp al 75h +
mov [esp+8Ch+var_4C] 3Eh +
jz loc_422064  +
mov ebp [esp+8Ch+var_54] +
lea eax [esi+1] +
mov [esp+8Ch+var_40] eax +
mov [esp+8Ch+var_64] eax +
xor eax eax +
mov [esp+8Ch+var_68] 0 +
mov edx ebp +
mov ebp eax +
mov [esp+8Ch+var_60] 0 +
mov [esp+8Ch+var_50] 0 +
mov [esp+8Ch+var_5C] 0 +
mov edi [ebx] +
cmp edi [esp+8Ch+var_64] +
jb loc_421E03  +
jz loc_421BF7  +
jmp loc_421C12  +
cmp ds:byte_46B1E0[eax] 0 +
jz loc_42229F  +
mov byte ptr [esp+8Ch+var_39] al +
mov eax [esp+8Ch+var_6C] +
mov esi ebx +
mov dword ptr [ebx+4] 0 +
cmp byte ptr [eax+24Dh] 0 +
jnz loc_421D00  +
cmp edi [esi+8] +
lea ebx [esi+8] +
jnz loc_421C12  +
mov eax [ebx+4] +
cmp eax 20h +
jz loc_421C67  +
cmp eax 5Ch +
jz loc_421C67  +
test eax eax +
jnz loc_421BC4  +
mov esi ebx +
cmp edi [esi+8] +
lea ebx [esi+8] +
jz loc_421BF7  +
mov eax [esp+8Ch+var_64] +
cmp [esp+8Ch+var_68] 10h +
lea edi [eax+1] +
movzx eax byte ptr [eax] +
movzx ecx al +
jbe loc_4224BA  +
mov esi [esp+8Ch+var_60] +
test esi esi +
jnz loc_421E61  +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_68] eax +
jbe loc_421E7A  +
mov esi edx +
mov ecx eax +
movzx eax byte ptr [esp+ecx+8Ch+var_1E] +
lea edx [eax-21h] +
cmp dl 5Dh +
mov [esp+ecx+8Ch+var_2F] al +
ja loc_421E31  +
movzx edx dl +
jmp ds:off_463590[edx*4]  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
lea ebp [esi+ebp+1] +
mov esi ebx +
call sub_421520  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset asc_463409 +
mov [esp+8Ch+var_8C] ecx +
mov ecx 1 +
call sub_421520  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_422280  +
cmp dword ptr [esi+4] 20h +
jz loc_421DAA  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_46340D +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 1 +
call sub_421520  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_422197  +
mov edx edi +
jmp loc_421BEF  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
add ebp esi +
call sub_421520  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset a?? +
mov [esp+8Ch+var_8C] ecx +
mov ecx 2 +
call sub_421520  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_422331  +
cmp byte ptr [esp+8Ch+var_39] 2Fh +
jnz loc_421E83  +
cmp edi [ebx+8] +
jnz loc_421E83  +
mov eax [ebx+0Ch] +
cmp eax 20h +
jnz loc_422374  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_463412 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 3 +
call sub_421520  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_422355  +
lea esi [ebx+8] +
cmp dword ptr [esi+4] 20h +
jnz loc_421CC2  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_46340B +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
call sub_421520  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4224CE  +
lea eax [esp+8Ch+var_34] +
mov edx offset asc_46340D +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_421520  +
mov edx edi +
jmp loc_421BEF  +
add ebx 8 +
jmp loc_421BB4  +
cmp ecx 0Fh +
ja loc_421E31  +
add ecx 1 +
cmp ecx [esp+8Ch+var_68] +
jb loc_421C48  +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
mov [esp+8Ch+var_64] edi +
jmp loc_421BB4  +
cmp al 28h +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
jnz loc_4220F1  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
mov [esp+eax+8Ch+var_2F] 22h +
jmp loc_421BB4  +
cmp [esp+8Ch+var_60] 2 +
jz loc_421EC3  +
cmp ecx 29h +
jz loc_421F51  +
cmp ecx 0Ah +
jz loc_421F72  +
mov [esp+8Ch+var_64] edi +
jmp loc_421BB4  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
add edi 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_39] +
mov edx esi +
add ebp 3 +
call sub_421520  +
movzx ecx byte ptr [esp+8Ch+var_39] +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4222E6  +
mov edx edi +
jmp loc_421C2A  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jbe loc_421F1C  +
cmp [esp+8Ch+var_5C] eax +
jb loc_421F1C  +
mov esi eax +
movzx eax [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+esi+8Ch+var_1E] al +
jnz loc_421F2A  +
mov [esp+8Ch+var_48] edx +
mov esi [esp+8Ch+var_68] +
mov [esp+8Ch+var_44] ecx +
mov edx [esp+8Ch+var_5C] +
mov eax [esp+8Ch+var_50] +
jmp loc_421F09  +
cmp eax edx +
ja loc_421F10  +
movzx ecx [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+eax+8Ch+var_1E] cl +
jnz loc_422014  +
add eax 1 +
cmp esi eax +
ja loc_421EF6  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_50] eax +
ja loc_4221B9  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jz loc_421E7A  +
cmp ecx 29h +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
jnz loc_421E71  +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 0 +
mov [esp+8Ch+var_60] 2 +
mov [esp+8Ch+var_50] 0 +
jmp loc_421BB4  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+8] 0 +
jnz loc_422423  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+11h] 0 +
jz loc_421F98  +
mov eax [eax] +
mov ebx [eax+10h] +
cmp [eax+8] ebx +
jnb loc_422423  +
mov ebx [esp+8Ch+var_6C] +
lea eax [esp+8Ch+var_34] +
sub edi edx +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
add ebp edi +
mov eax ebx +
call sub_421520  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jb loc_422025  +
mov edi [esp+8Ch+var_64] +
mov byte ptr [eax+38h] 1 +
mov [eax] edi +
mov edi [esp+8Ch+var_6C] +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] edi +
call sub_4204A0  +
cmp byte ptr [edi+8] 0 +
jnz loc_42207F  +
mov eax [esp+8Ch+var_6C] +
call sub_420410  +
test al al +
jz loc_42207F  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov edx [eax] +
mov ecx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+8Ch+var_64] edx +
lea ebx [eax+ecx*8] +
jmp loc_421BB4  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
jmp loc_421F2A  +
mov edi [esp+8Ch+var_6C] +
mov edx [edi+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+8Ch+var_84] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+8Ch+var_8C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+8Ch+var_88] eax +
call sub_40E0D0  +
mov eax [edi] +
jmp loc_421FC1  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea eax [eax+eax+40h] +
mov [esp+8Ch+var_4C] eax +
jmp loc_421B7F  +
mov eax [esp+8Ch+var_6C] +
mov edx 40h +
mov edi [esp+8Ch+var_58] +
mov eax [eax+1Ch] +
mov ebx [edi] +
mov byte ptr [edi+4] 16h +
mov eax [eax+2Ch] +
mov [edi+6] dx +
mov [edi] eax +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov edx eax +
jnz loc_4220B2  +
jmp loc_4220C4  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_4220B0  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] ebx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_41EDD0  +
jmp loc_421949  +
mov ebx [esp+8Ch+var_6C] +
mov edx [ebx] +
sub edi [edx+4] +
mov edx edi +
add edx 1 +
cmp ecx 10h +
jz loc_4222BB  +
cmp al 0Ah +
jz loc_422302  +
mov edi [esp+8Ch+var_58] +
mov ecx [edi] +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aInvalidCharact +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_41EDD0  +
mov ebx [esp+8Ch+var_6C] +
mov edi [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_40] +
mov edx [ebx] +
sub eax edi +
sub eax 1 +
lea ecx [edi+eax] +
mov [edx] ecx +
mov edx [esp+8Ch+var_58] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
mov [esp+8Ch+var_88] 3Dh +
call sub_4217B0  +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_421949  +
mov edx eax +
jmp loc_422180  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_42217E  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
jmp loc_421949  +
mov edx offset asc_46340D +
cmp edi edx +
jz loc_421BEF  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 0Ah +
jmp loc_421BEF  +
mov ebx ebp +
mov ebp edx +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_4223C1  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov [eax] edi +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_4223A0  +
sub edi ebp +
mov esi ebx +
add esi edi +
lea eax [esi+1] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_421670  +
mov ecx [esp+8Ch+var_58] +
mov [ecx+8] esi +
mov ebx eax +
movzx eax byte ptr [esp+8Ch+var_4C] +
mov [ecx+0Ch] ebx +
mov [ecx+4] al +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jz loc_422399  +
mov edx [eax+4] +
mov eax [eax+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] edx +
sub eax edx +
mov [esp+8Ch+var_84] eax +
call memcpy  +
mov eax [esp+8Ch+var_34] +
add ebx [eax+8] +
sub ebx [eax+4] +
mov eax [eax] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jnz loc_42221F  +
mov eax [esp+8Ch+var_39+1] +
mov edx eax +
jmp loc_422255  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_422253  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esi+2Ch] +
mov [edx] ecx +
mov [esi+2Ch] eax +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] ebx +
call memcpy  +
mov byte ptr [ebx+edi] 0 +
jmp loc_421949  +
cmp edi offset asc_463409 +
jz loc_421CB8  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 5Ch +
jmp loc_421CB8  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6C3h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_405910  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aRawStringDelim +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] ebx +
call sub_41EDD0  +
jmp loc_42213E  +
cmp edi esi +
jz loc_421EBC  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] cl +
jmp loc_421C2A  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidNewLine +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_41EDD0  +
jmp loc_42213E  +
cmp edi offset a?? +
jz loc_421D4D  +
mov eax [esp+8Ch+var_68] +
mov edx 3F3Fh +
add [esp+8Ch+var_68] 2 +
mov [esp+eax+8Ch+var_1E] dx +
jmp loc_421D4D  +
cmp edi offset asc_463412 +
jz loc_421D9D  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 2Fh +
jmp loc_421D9D  +
cmp eax 5Ch +
jz loc_421D6D  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6B4h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_405910  +
xor eax eax +
jmp loc_42224F  +
mov eax [esp+8Ch+var_4C] +
sub edi ebp +
mov ecx ebp +
mov edx [esp+8Ch+var_58] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
call sub_4217B0  +
jmp loc_421949  +
add eax 234h +
mov edx edi +
call sub_41FFE0  +
test al al +
jz loc_422466  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_4221CE  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_4221CE  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_41EE20  +
jmp loc_4221CE  +
mov eax [esp+8Ch+var_58] +
mov ebx ebp +
mov ebp edx +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_41EDD0  +
mov edi [esp+8Ch+var_64] +
mov [esp+8Ch+var_4C] 3Dh +
jmp loc_4221BD  +
movzx eax byte ptr [edi] +
test byte ptr [eax+eax+4660A1h] 2 +
jz loc_4221CE  +
mov eax [esp+8Ch+var_4C] +
mov [esp+8Ch+var_8C] eax +
call sub_425DA0  +
movzx edx byte ptr [edi+1] +
test ds:word_4660A0[edx+edx] 204h +
mov [esp+8Ch+var_4C] eax +
lea eax [edi+1] +
jnz loc_4224A2  +
jmp loc_4224EC  +
mov eax edi +
lea edi [eax+1] +
movzx eax byte ptr [eax+1] +
test ds:word_4660A0[eax+eax] 204h +
jnz loc_4224A0  +
jmp loc_4221CE  +
mov esi [esp+8Ch+var_68] +
mov byte ptr [esp+esi+8Ch+var_1E] al +
lea eax [esi+1] +
mov [esp+8Ch+var_68] eax +
jmp loc_421C2A  +
cmp edi offset asc_46340B +
jz loc_4224F3  +
mov eax [esp+8Ch+var_68] +
add ebp 1 +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 20h +
jmp loc_421CC2  +
mov edi eax +
jmp loc_4221CE  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_46340D +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_421520  +
jmp loc_4221A4  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+5Ch+arg_0] +
mov byte ptr [esp+5Ch+var_40] 0 +
mov edi [ebp+0F0h] +
lea eax [edi+10h] +
mov [ebp+0F0h] eax +
lea eax [ebp+0F4h] +
mov [esp+5Ch+var_3C] eax +
mov esi [ebp+0] +
xor ebx ebx +
mov [edi+6] bx +
cmp byte ptr [esi+38h] 0 +
jz loc_4225C5  +
cmp byte ptr [ebp+18h] 0 +
jnz loc_422EC0  +
cmp byte ptr [ebp+8] 0 +
jnz loc_422640  +
mov eax ebp +
call sub_420410  +
test al al +
jz loc_422640  +
mov eax [ebp+0] +
mov ebx 0 +
movzx ecx byte ptr [esp+5Ch+var_40] +
mov edx [ebp+10Ch] +
cmp eax esi +
cmovnz ecx ebx +
test edx edx +
mov byte ptr [esp+5Ch+var_40] cl +
jnz loc_4225B4  +
mov edi [ebp+0FCh] +
mov ecx [esp+5Ch+var_3C] +
lea edx [edi+10h] +
mov [ebp+104h] ecx +
mov [ebp+0F0h] edx +
mov esi 40h +
mov [edi+6] si +
mov esi eax +
cmp byte ptr [ebp+11h] 2 +
jz loc_422612  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_4225E5  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_422DB7  +
lea ecx [eax+1] +
mov [esi] ecx +
movzx ebx byte ptr [eax] +
mov eax [ebp+2FCh] +
movzx edx bl +
test eax eax +
mov [esp+5Ch+var_38] edx +
jz loc_422620  +
mov eax [eax] +
mov [edi] eax +
cmp bl 7Eh +
ja loc_422DB0  +
jmp ds:off_463884[edx*4]  +
mov ebx 41h +
mov [edi+6] bx +
jmp loc_4225C5  +
mov eax [ebp+1Ch] +
sub ecx [esi+4] +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call sub_40E370  +
mov edx [esp+5Ch+var_34] +
mov [edi] eax +
jmp loc_422602  +
mov byte ptr [edi+4] 16h +
cmp byte ptr [ebp+8] 0 +
jnz loc_422660  +
mov eax [ebp+1Ch] +
mov ecx 40h +
mov eax [eax+2Ch] +
mov [edi+6] cx +
mov [edi] eax +
nop   +
lea esi [esi+0] +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_18] 0 +
lea edx [edi+8] +
mov eax ebp +
mov [esp+5Ch+var_14] 0 +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_10] 0 +
mov byte ptr [edi+4] 37h +
call sub_4216B0  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov eax ebp +
call sub_420CF0  +
mov ebx [edi] +
cmp ebx 1 +
jbe loc_422660  +
cmp byte ptr [edi+4] 16h +
jz loc_422660  +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_4226C9  +
mov edx [ebp+4] +
test edx edx +
jz loc_422E02  +
mov edx [ebp+1Ch] +
sub eax [esi+4] +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_40E370  +
mov ecx [edi] +
mov edx [ebp+1Ch] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_50] eax +
call sub_40E5C0  +
mov [edi] eax +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi] +
lea eax [edi+0Ch] +
sub edx 1 +
mov byte ptr [edi+4] 35h +
xor ecx ecx +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_41FC40  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_420CF0  +
mov eax [edi+8] +
test byte ptr [eax+14h] 40h +
jz loc_422764  +
or word ptr [edi+6] 10h +
movzx eax byte ptr [eax+0Ch] +
shr al 1 +
mov [edi+4] al +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_4226A4  +
or word ptr [edi+6] 20h +
jmp loc_4226A4  +
mov ebx [ebp+0] +
xor ecx ecx +
or word ptr [edi+6] 1 +
mov [esp+5Ch+var_34] edi +
mov edi [esp+5Ch+var_38] +
mov eax [ebx] +
jmp loc_422808  +
cmp byte ptr [ebp+8] 0 +
jz loc_4227F0  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_4227F0  +
mov edx [ebp+1Ch] +
cmp edi 0Ch +
mov edi offset aFormFeed +
mov [esp+5Ch+var_38] ecx +
mov ecx offset aVerticalTab +
cmovnz edi ecx +
mov edx [edx+2Ch] +
mov [esp+5Ch+var_48] edi +
mov [esp+5Ch+var_4C] offset aSInPreprocessi +
sub eax [ebx+4] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_41EDD0  +
mov eax [ebx] +
mov ecx [esp+5Ch+var_38] +
lea esi [esi+0] +
lea edx [eax+1] +
mov [ebx] edx +
movzx edi byte ptr [eax] +
test byte ptr [edi+edi+4660A1h] 8 +
jz loc_422DD6  +
mov eax edx +
cmp edi 9 +
jz loc_4227F0  +
cmp edi 20h +
jz loc_4227F0  +
test edi edi +
jnz loc_422796  +
mov ecx 1 +
jmp loc_4227F0  +
mov byte ptr [edi+4] 34h +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 5 +
movzx eax byte ptr [edx] +
cmp al 3Eh +
jz loc_422FAB  +
cmp al 2Dh +
jz loc_42311F  +
cmp al 3Dh +
jnz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ch +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 2 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_422F9D  +
cmp al 3Eh +
jnz loc_4226A4  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Ch +
cmp byte ptr [edx+1] 3Dh +
jnz loc_4226A4  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 23h +
jmp loc_4226A4  +
mov byte ptr [edi+4] 0Eh +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 0 +
cmp byte ptr [eax] 3Dh +
jnz loc_4226A4  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 17h +
jmp loc_4226A4  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_422EDB  +
mov edx [esi] +
mov byte ptr [edi+4] 3 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_423103  +
cmp al 3Ch +
jz loc_423145  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_4226A4  +
cmp al 3Ah +
jz loc_4234E2  +
cmp al 25h +
jnz loc_4226A4  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 29h +
jmp loc_4226A4  +
mov byte ptr [edi+4] 2Bh +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 12h +
movzx eax byte ptr [edx] +
cmp al 3Ah +
jz loc_422F74  +
cmp al 3Eh +
jnz loc_4226A4  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_4226A4  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 28h +
jmp loc_4226A4  +
mov byte ptr [edi+4] 29h +
jmp loc_4226A4  +
mov byte ptr [edi+4] 14h +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 9 +
movzx eax byte ptr [edx] +
cmp al 26h +
jz loc_422FE7  +
cmp al 3Dh +
jnz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 20h +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 8 +
movzx edx byte ptr [eax] +
cmp dl 3Dh +
jz loc_422FD9  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_4226A4  +
cmp dl 3Ah +
jz loc_42346F  +
cmp dl 3Eh +
jnz loc_4226A4  +
add eax 1 +
mov [esi] eax +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 2Ah +
jmp loc_4226A4  +
mov byte ptr [edi+4] 2Ah +
jmp loc_4226A4  +
mov eax [esi+10h] +
cmp [esi] eax +
jb loc_422F2D  +
mov byte ptr [esi+38h] 1 +
jmp loc_422549  +
mov byte ptr [edi+4] 13h +
jmp loc_4226A4  +
cmp edx 4Ch +
mov ebx edx +
jz loc_423AAC  +
cmp byte ptr [ebp+252h] 0 +
jnz loc_422A5A  +
cmp edx 52h +
jz loc_422708  +
cmp byte ptr [ebp+250h] 0 +
jz loc_422708  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jz loc_423111  +
cmp al 22h +
jz loc_422AB5  +
cmp al 52h +
jz loc_4231F4  +
cmp al 38h +
jnz loc_42270A  +
cmp ebx 75h +
nop   +
jnz loc_42270A  +
movzx eax byte ptr [edx+1] +
cmp al 22h +
jz loc_422AB5  +
cmp al 27h +
jz loc_4238A8  +
cmp al 52h +
jnz loc_42270A  +
cmp byte ptr [edx+2] 22h +
jnz loc_42270A  +
cmp byte ptr [ebp+252h] 0 +
jz loc_42270A  +
lea ecx [edx-1] +
mov eax ebp +
mov edx edi +
call sub_421800  +
jmp loc_4226A4  +
mov eax [esi] +
mov [esp+5Ch+var_38] eax +
movzx eax byte ptr [eax] +
cmp eax 2Ah +
mov [esp+5Ch+var_34] eax +
jz loc_423166  +
cmp [esp+5Ch+var_34] 2Fh +
jnz loc_423858  +
cmp byte ptr [ebp+270h] 0 +
jnz loc_4235B0  +
mov edx [ebp+0] +
test edx edx +
jz loc_422B01  +
cmp byte ptr [edx+3Dh] 0 +
jnz loc_422B48  +
mov eax [ebp+244h] +
test eax eax +
jnz loc_422B20  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_422B20  +
test byte ptr [esi+3Ch] 1 +
jz loc_423516  +
nop   +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_422B3C  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_422B3C  +
test byte ptr [esi+3Ch] 1 +
jz loc_4234A6  +
sub eax 3 +
cmp eax 1 +
jbe loc_423193  +
mov ecx [edx] +
mov eax [ebp+1Ch] +
cmp byte ptr [ecx] 0Ah +
mov ebx [eax+2Ch] +
lea eax [ecx+1] +
jz loc_422B63  +
mov [edx] eax +
add eax 1 +
cmp byte ptr [eax-1] 0Ah +
jnz loc_422B58  +
mov [esp+5Ch+var_58] 1 +
mov [esp+5Ch+var_5C] ebp +
call sub_4204A0  +
mov eax [ebp+1Ch] +
cmp ebx [eax+2Ch] +
jz loc_422B9C  +
cmp byte ptr [ebp+255h] 0 +
jz loc_422B9C  +
mov [esp+5Ch+var_54] offset aMultiLineComme +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ED10  +
mov eax [ebp+0] +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_30] eax +
movzx eax byte ptr [ebp+260h] +
add ebx 1 +
cmp al 2 +
jz loc_423003  +
ja loc_422E1B  +
movzx ebx byte ptr [esp+5Ch+var_40] +
cmp al 1 +
mov eax 1 +
cmovz ebx eax +
mov byte ptr [esp+5Ch+var_40] bl +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_423706  +
or word ptr [edi+6] 1 +
jmp loc_4225C5  +
mov edx [esi] +
mov byte ptr [edi+4] 30h +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_4660A0[ecx+ecx] 4 +
jnz loc_422670  +
cmp al 2Eh +
jz loc_42312D  +
cmp al 2Ah +
jnz loc_4226A4  +
cmp byte ptr [ebp+248h] 0 +
jz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 33h +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax] 23h +
jz loc_422F66  +
mov dword ptr [edi+8] 0 +
jmp loc_4226A4  +
mov byte ptr [edi+4] 28h +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 6 +
cmp byte ptr [eax] 3Dh +
jnz loc_4226A4  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Dh +
jmp loc_4226A4  +
mov byte ptr [edi+4] 15h +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 4 +
movzx eax byte ptr [edx] +
cmp al 2Bh +
jz loc_422FF5  +
cmp al 3Dh +
jnz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Bh +
jmp loc_4226A4  +
mov eax [esi] +
lea ecx [esp+5Ch+var_18] +
mov edx 1 +
lea ebx [eax-1] +
mov eax ebp +
mov [esi] ebx +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_41FB60  +
test al al +
jnz loc_422EF8  +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
sub ecx 1 +
mov edx edi +
mov [esp+5Ch+var_58] 3Dh +
mov eax ebp +
mov [esp+5Ch+var_5C] 1 +
call sub_4217B0  +
jmp loc_4226A4  +
mov byte ptr [edi+4] 11h +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 1 +
cmp byte ptr [eax] 3Dh +
jnz loc_4226A4  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 18h +
jmp loc_4226A4  +
mov edx [esi] +
mov byte ptr [edi+4] 0Ah +
movzx eax byte ptr [edx] +
cmp al 7Ch +
jz loc_422F8F  +
cmp al 3Dh +
jnz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 21h +
jmp loc_4226A4  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_421800  +
jmp loc_4226A4  +
mov eax [esi] +
mov byte ptr [edi+4] 0Bh +
cmp byte ptr [eax] 3Dh +
jnz loc_4226A4  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 22h +
jmp loc_4226A4  +
mov byte ptr [edi+4] 27h +
jmp loc_4226A4  +
mov ecx [esi] +
jmp loc_422CF2  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_4204A0  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov eax [esi] +
jmp loc_4225E5  +
test cl cl +
mov edi [esp+5Ch+var_34] +
jz loc_422DF8  +
mov [esp+5Ch+var_54] offset aNullCharacte_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
mov edx [ebx] +
sub edx 1 +
mov [ebx] edx +
jmp loc_4225CD  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_4204A0  +
mov ebx [edi] +
mov eax [esi] +
jmp loc_4226C9  +
cmp al 4 +
ja loc_422BD2  +
mov ecx [esp+5Ch+var_38] +
movzx edx byte ptr [ecx+1] +
cmp dl 40h +
setz cl  +
jz loc_422E3C  +
cmp dl 2Dh +
jnz loc_42320C  +
mov [esp+5Ch+var_2C] ecx +
mov ecx [esp+5Ch+var_30] +
mov eax ebx +
not eax  +
add eax [ecx] +
cmp eax 0Ah +
jbe loc_422BD2  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 0Bh +
mov [esp+5Ch+var_58] offset aFallthrough +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov ecx [esp+5Ch+var_2C] +
mov al 0Ch +
test cl cl +
jnz loc_422EA6  +
add ebx eax +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax] 2Ah +
jz loc_42387E  +
cmp byte ptr [ebx] 0Ah +
jnz loc_422BD2  +
mov byte ptr [esp+5Ch+var_40] 1 +
jmp loc_422BD2  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+0Dh] 40h +
jnz loc_422BD2  +
mov eax 0Dh +
jmp loc_422E84  +
mov byte ptr [edi+4] 52h +
cmp byte ptr [ebp+19h] 0 +
mov byte ptr [ebp+18h] 0 +
jnz loc_422660  +
sub byte ptr [ebp+10h] 1 +
jmp loc_422660  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_421800  +
cmp byte ptr [edi+4] 3 +
jnz loc_4226A4  +
jmp loc_4228DA  +
lea eax [edi+0Ch] +
mov edx ebx +
mov byte ptr [edi+4] 35h +
mov ecx 1 +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
call sub_41FC40  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_420CF0  +
jmp loc_4226A4  +
mov edx [ebp+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+5Ch+var_54] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+5Ch+var_5C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+5Ch+var_58] eax +
call sub_40E0D0  +
jmp loc_422A1B  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
jmp loc_422C3F  +
cmp byte ptr [ebp+248h] 0 +
jz loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 31h +
jmp loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 10h +
jmp loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 19h +
jmp loc_4226A4  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 2Fh +
cmp byte ptr [edx+1] 2Ah +
jnz loc_4226A4  +
cmp byte ptr [ebp+248h] 0 +
jz loc_4226A4  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 32h +
jmp loc_4226A4  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Fh +
jmp loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 0Fh +
jmp loc_4226A4  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Dh +
jmp loc_4226A4  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov edx eax +
sub edx ebx +
cmp edx 7 +
jbe loc_422BD2  +
movzx edx byte ptr [ebx] +
and edx 0FFFFFFDFh +
cmp dl 46h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 41h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+4] +
mov ecx edx +
and ecx 0FFFFFFDFh +
cmp cl 53h +
jz loc_4230F7  +
add ebx 4 +
jmp loc_423076  +
add ebx 1 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jz loc_423070  +
cmp dl 9 +
jz loc_423070  +
cmp dl 2Dh +
jz loc_423070  +
and edx 0FFFFFFDFh +
cmp dl 54h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 52h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jz loc_422E9C  +
cmp dl 4Fh +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+4] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+5] +
and edx 0FFFFFFDFh +
cmp dl 47h +
jnz loc_4230E2  +
movzx edx byte ptr [ebx+6] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jz loc_422E9C  +
add ebx 1 +
mov edx eax +
sub edx ebx +
cmp edx 7 +
ja loc_423016  +
jmp loc_422BD2  +
movzx edx byte ptr [ebx+5] +
add ebx 5 +
jmp loc_423076  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ah +
jmp loc_4226A4  +
cmp ebx 52h +
jnz loc_422AB5  +
jmp loc_42270A  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Eh +
jmp loc_4226A4  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_4226A4  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 2Ch +
jmp loc_4226A4  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Dh +
cmp byte ptr [edx+1] 3Dh +
jnz loc_4226A4  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 24h +
jmp loc_4226A4  +
mov [esp+5Ch+var_5C] ebp +
call sub_420720  +
test al al +
jz loc_422B9C  +
mov [esp+5Ch+var_54] offset aUnterminatedCo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
jmp loc_422B9C  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+1] 2Ah +
jz loc_4235B0  +
test dword ptr [ebp+8] 0FF00FFh +
jnz loc_4235B0  +
test byte ptr [esi+3Ch] 1 +
jnz loc_422B48  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_422B48  +
cmp ebx 52h +
jz loc_42270A  +
cmp byte ptr [edx+1] 22h +
jnz loc_42270A  +
jmp loc_422AA8  +
cmp dl 6Ch +
nop   +
jz loc_423552  +
cmp al 4 +
jz loc_423659  +
nop   +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_423464  +
cmp dl 9 +
jz loc_423464  +
cmp dl 2Eh +
jz loc_423464  +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 45h +
mov [esp+5Ch+var_2C] ebx +
jnz loc_4235B9  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 0Ch +
jbe loc_422BD2  +
cmp dl 45h +
lea ecx [ebx+1] +
jz loc_423904  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_463843 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov edx [esp+5Ch+var_28] +
mov byte ptr [esp+5Ch+var_2C] 0 +
cmp byte ptr [ebx+4] 2Ch +
lea eax [ebx+5] +
lea ecx [ebx+4] +
cmovnz eax ecx +
cmp byte ptr [eax] 20h +
jnz loc_422BD2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
lea ebx [eax+1] +
jz loc_4232C2  +
cmp byte ptr [eax+1] 66h +
jz loc_422BD2  +
cmp dl 65h +
jz loc_423A9D  +
movzx edx byte ptr [eax+1] +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 46h +
jnz loc_422BD2  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov [esp+5Ch+var_20] eax +
sub eax ebx +
cmp eax 7 +
jbe loc_422BD2  +
cmp dl 46h +
jz loc_423A0E  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov [esp+5Ch+var_28] edx +
jnz loc_422BD2  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aAll_0 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_422BD2  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 73h +
cmp [esp+5Ch+var_24] eax +
jz loc_423A65  +
cmp byte ptr [esp+5Ch+var_28] 2Dh +
jz loc_423360  +
cmp byte ptr [esp+5Ch+var_28] 20h +
jnz loc_423952  +
lea ecx [ebx+5] +
cmp dl 66h +
jz loc_423371  +
cmp byte ptr [ecx] 54h +
jz loc_423A77  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
jnz loc_422BD2  +
cmp byte ptr [ecx] 74h +
jnz loc_422BD2  +
mov ebx [esp+5Ch+var_20] +
mov eax offset aHru_0 +
sub ebx ecx +
cmp ebx 3 +
jbe loc_422BD2  +
lea edx [ecx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_24] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov ecx [esp+5Ch+var_24] +
test eax eax +
jz loc_423B0D  +
cmp ebx 6 +
jbe loc_422BD2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov edx offset aHrough +
mov eax offset aHrough_0 +
mov [esp+5Ch+var_54] 6 +
cmovz eax edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov ecx [esp+5Ch+var_24] +
lea ebx [ecx+7] +
movzx edx byte ptr [ebx] +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_4238A0  +
cmp dl 9 +
jz loc_4238A0  +
cmp dl 2Eh +
jz loc_4238A0  +
cmp dl 2Dh +
mov eax ebx +
jnz loc_422E86  +
mov ecx [esp+5Ch+var_38] +
add ebx 1 +
lea edx [eax+2] +
cmp byte ptr [ecx] 2Ah +
jz loc_423AE1  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_422E93  +
test al al +
jz loc_422E93  +
cmp al 0Dh +
jz loc_422E93  +
add ebx 1 +
jmp loc_423444  +
add ebx 1 +
movzx edx byte ptr [ebx] +
jmp loc_423220  +
lea edx [eax+1] +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax+1] 25h +
jnz loc_4226A4  +
cmp byte ptr [eax+2] 3Ah +
jnz loc_4226A4  +
add eax 3 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
mov dword ptr [edi+8] 0 +
jmp loc_4226A4  +
mov [esp+5Ch+var_54] offset aCStyleCommen_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_422B48  +
cmp byte ptr [ebp+248h] 0 +
jz loc_423503  +
mov eax [ebp+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_423503  +
cmp byte ptr [edx+1] 3Ah +
jz loc_42393E  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 27h +
jmp loc_4226A4  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_41ECD0  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_422B48  +
mov eax [esp+5Ch+var_30] +
not ebx  +
add ebx [eax] +
cmp ebx 0Fh +
jbe loc_422BD2  +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 10h +
mov [esp+5Ch+var_58] offset aIntFallthrough +
mov eax ebx +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov eax ebx +
movzx eax byte ptr [eax+12h] +
lea ebx [ebx+12h] +
cmp al 9 +
jnz loc_4235A3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_423599  +
cmp al 20h +
jz loc_423599  +
jmp loc_422E86  +
mov byte ptr [edi+4] 7 +
jmp loc_4226A4  +
cmp al 49h +
nop   +
lea esi [esi+0] +
jnz loc_423896  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 13h +
jbe loc_422BD2  +
cmp dl 49h +
lea ecx [ebx+1] +
jz loc_42399C  +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
mov edx [esp+5Ch+var_2C] +
test eax eax +
jnz loc_422BD2  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_423B25  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aLy +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov edx [esp+5Ch+var_2C] +
add ebx 0Eh +
cmp dl 69h +
mov byte ptr [esp+5Ch+var_2C] 0 +
jz loc_423B15  +
movzx edx byte ptr [ebx] +
jmp loc_4232CF  +
cmp dl 20h +
jnz loc_423A57  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_423662  +
cmp al 20h +
jz loc_423662  +
mov eax [esp+5Ch+var_30] +
mov ecx [eax] +
mov eax ecx +
sub eax ebx +
cmp eax 7 +
mov [esp+5Ch+var_2C] ecx +
jbe loc_422BD2  +
mov [esp+5Ch+var_54] 7 +
mov [esp+5Ch+var_58] offset aFallthr +
mov [esp+5Ch+var_5C] ebx +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
cmp byte ptr [ebx+7] 55h +
mov ecx [esp+5Ch+var_2C] +
jz loc_423A06  +
lea edx [ebx+7] +
mov eax ecx +
sub eax edx +
cmp eax 3 +
jbe loc_422BD2  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Bh +
mov [esp+5Ch+var_58] offset aOugh +
mov [esp+5Ch+var_5C] edx +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
movzx eax byte ptr [ebx] +
cmp al 20h +
jnz loc_423ABE  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_4236F3  +
cmp al 20h +
jz loc_4236F3  +
jmp loc_422E86  +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_423712  +
or word ptr [edi+6] 20h +
mov eax [esp+5Ch+var_30] +
mov edx [eax] +
mov eax edx +
movzx edx byte ptr [edx-1] +
sub eax [esp+5Ch+var_38] +
test byte ptr [edx+edx+4660A1h] 4 +
lea ecx [eax+1] +
cmovnz ecx eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_423740  +
cmp byte ptr [ebp+11h] 0 +
mov [esp+5Ch+var_40] ecx +
jz loc_42374F  +
cmp [esp+5Ch+var_34] 2Fh +
lea eax [ecx+2] +
cmovnz eax ecx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_3C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_421670  +
mov ecx [esp+5Ch+var_3C] +
mov byte ptr [edi+4] 4Fh +
lea edx [ecx-1] +
mov ecx [esp+5Ch+var_38] +
mov ebx eax +
mov eax [esp+5Ch+var_40] +
mov [edi+0Ch] ebx +
mov [edi+8] eax +
lea eax [ebx+1] +
mov byte ptr [ebx] 2Fh +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
cmp byte ptr [ebp+8] 0 +
jnz loc_4237A0  +
cmp byte ptr [ebp+11h] 0 +
jz loc_4237AB  +
cmp [esp+5Ch+var_34] 2Fh +
jz loc_4238BA  +
cmp dword ptr [ebp+2F4h] 0 +
jnz loc_4237D0  +
mov dword ptr [ebp+2F4h] 100h +
mov [esp+5Ch+var_5C] 800h +
call sub_435ED0  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
cmp eax [ebp+2F4h] +
jz loc_42396E  +
mov ebx [edi+8] +
mov edx [ebp+2ECh] +
lea edx [edx+eax*8] +
lea eax [ebx+1] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_40] edx +
call sub_435ED0  +
mov edx [esp+5Ch+var_40] +
mov ecx [ebp+2F0h] +
mov [edx] eax +
mov eax [ebp+2ECh] +
mov edx [edi+0Ch] +
mov eax [eax+ecx*8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
mov edx [ebp+2F0h] +
mov eax [ebp+2ECh] +
mov eax [eax+edx*8] +
mov byte ptr [eax+ebx] 0 +
mov eax [ebp+2F0h] +
mov ecx [edi] +
mov edx [ebp+2ECh] +
mov [edx+eax*8+4] ecx +
add eax 1 +
mov [ebp+2F0h] eax +
jmp loc_4226A4  +
cmp [esp+5Ch+var_34] 3Dh +
jnz loc_4235B0  +
mov eax [esp+5Ch+var_38] +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Eh +
jmp loc_4226A4  +
cmp byte ptr [edx] 2Fh +
jnz loc_423B08  +
cmp byte ptr [ebx] 2Ah +
jnz loc_422BD2  +
cmp byte ptr [ebx+1] 2Fh +
jnz loc_422BD2  +
jmp loc_422E9C  +
mov byte ptr [esp+5Ch+var_2C] 0 +
jmp loc_4232CF  +
add ebx 1 +
jmp loc_423406  +
cmp byte ptr [ebp+251h] 0 +
jnz loc_422AB5  +
jmp loc_42270A  +
mov eax [esp+5Ch+var_40] +
mov byte ptr [ebx+1] 2Ah +
lea edx [eax-2] +
cmp edx 2 +
mov byte ptr [ebx+eax-2] 2Ah +
mov byte ptr [ebx+eax-1] 2Fh +
jbe loc_4237AB  +
mov eax 2 +
jmp loc_4238EA  +
add eax 1 +
cmp edx eax +
jz loc_4237AB  +
cmp byte ptr [ebx+eax] 2Fh +
jnz loc_4238DF  +
cmp byte ptr [ebx+eax-1] 2Ah +
jz loc_4238FE  +
cmp byte ptr [ebx+eax+1] 2Ah +
jnz loc_4238DF  +
mov byte ptr [ebx+eax] 7Ch +
jmp loc_4238DF  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_46383F +
mov [esp+5Ch+var_28] edx +
mov [esp+5Ch+var_2C] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_2C] +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_42326B  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_423298  +
movzx eax byte ptr [edx+2] +
and eax 0FFFFFFFBh +
cmp al 3Ah +
jnz loc_4226A4  +
jmp loc_423503  +
cmp byte ptr [esp+5Ch+var_2C] 1 +
sbb eax eax +
and eax 20h +
add eax 54h +
cmp [esp+5Ch+var_24] eax +
jnz loc_422BD2  +
jmp loc_423363  +
mov edx [ebp+2ECh] +
add eax eax +
mov [ebp+2F4h] eax +
shl eax 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
call sub_435F50  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
jmp loc_4237E2  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional_0 +
mov [esp+5Ch+var_24] edx +
mov [esp+5Ch+var_28] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_28] +
mov edx [esp+5Ch+var_24] +
test eax eax +
jnz loc_4235E3  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_423ACB  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Eh +
mov [esp+5Ch+var_58] offset aLyF +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_422BD2  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_423651  +
add ebx 8 +
jmp loc_4236E8  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aAll +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_4232FA  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_2C] 1 +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 53h +
jmp loc_423344  +
cmp dl 9 +
jz loc_423662  +
jmp loc_423670  +
cmp byte ptr [ebx+5] 20h +
jnz loc_42334E  +
lea ecx [ebx+6] +
jmp loc_423363  +
mov ebx [esp+5Ch+var_20] +
sub ebx ecx +
cmp ebx 3 +
jbe loc_422BD2  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov eax offset aHru +
mov edx offset aHru_0 +
cmovz eax edx +
jmp loc_423399  +
cmp byte ptr [eax+1] 46h +
jnz loc_4232CB  +
jmp loc_422BD2  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jnz loc_422A67  +
jmp loc_422AB5  +
cmp al 9 +
jz loc_4236F3  +
jmp loc_422E86  +
mov eax [esp+5Ch+var_2C] +
add ebx 0Ch +
cmp byte ptr [eax+0Ch] 66h +
jnz loc_4239FC  +
jmp loc_422BD2  +
movzx eax byte ptr [edx-1] +
lea ebx [edx-1] +
cmp al 2Ah +
jz loc_423875  +
test al al +
jz loc_42387E  +
cmp al 0Ah +
jz loc_42387E  +
cmp al 0Dh +
jz loc_42387E  +
add edx 1 +
jmp loc_423AE1  +
lea ebx [ecx+4] +
jmp loc_423406  +
cmp byte ptr [ebx] 46h +
jnz loc_423651  +
nop   +
jmp loc_422BD2  +
add ebx 0Ch +
jmp loc_423643  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
movzx eax byte ptr [ebx+4] +
mov eax ds:dword_463D40[eax*8] +
cmp eax 1 +
jz loc_423DB8  +
cmp eax 2 +
jz loc_423DB0  +
mov eax 7 +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_421670  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] eax +
mov edi eax +
call sub_420BE0  +
mov byte ptr [eax] 0 +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+8] +
add eax 1 +
jmp loc_423D78  +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
lea eax [eax+eax+1] +
jmp loc_423D78  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov edx [esi+24h] +
mov eax [edx+8] +
mov ecx [edx+0Ch] +
sub ecx eax +
cmp ecx ebx +
jnb loc_423E05  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
call sub_421430  +
mov edx eax +
mov eax [esi+24h] +
mov [edx] eax +
mov eax [edx+8] +
mov [esi+24h] edx +
add ebx eax +
mov [edx+8] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
movzx ecx byte ptr [eax+4] +
movzx eax cl +
mov edx ds:dword_463D40[eax*8] +
cmp edx 1 +
jz loc_423E71  +
jle loc_423E60  +
cmp edx 2 +
mov eax 2 +
jz locret_423E58  +
cmp edx 3 +
jnz loc_423E74  +
cmp cl 50h +
mov eax 3 +
jz locret_423E58  +
cmp cl 53h +
jz loc_423E53  +
xor eax eax +
cmp cl 51h +
setnz al  +
add eax 5 +
retn   +
***
mov eax 1 +
retn   +
***
test edx edx +
jnz loc_423E74  +
xor eax eax +
cmp cl 26h +
setnz al  +
lea eax [eax+eax+4] +
retn   +
***
xor eax eax +
retn   +
***
mov eax 6 +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+2FCh] edx +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+2FCh] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [eax+40h] +
mov ecx [ebx+194h] +
mov edx [ebx+190h] +
mov eax ecx +
sub eax edx +
cmp eax 1Bh +
jbe loc_423F60  +
mov eax [ebx+18Ch] +
add edx 1Ch +
mov [ebx+190h] edx +
cmp edx eax +
jz loc_423F87  +
mov esi [ebx+19Ch] +
mov ebp ecx +
add edx esi +
not esi  +
and edx esi +
mov esi [ebx+188h] +
mov edi edx +
mov [ebx+190h] edx +
sub edi esi +
sub ebp esi +
cmp edi ebp +
jbe loc_423F0A  +
mov [ebx+190h] ecx +
mov edx ecx +
test al 1 +
mov ecx eax +
mov [ebx+18Ch] edx +
mov ebx 1Ch +
jnz loc_423F93  +
test cl 2 +
jnz loc_423FA0  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_423F2B  +
add ecx edx +
test bl 2 +
jz loc_423F49  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_423F51  +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+184h] +
mov [esp+1Ch+var_18] 1Ch +
mov [esp+1Ch+var_1C] eax +
call sub_440CD0  +
mov edx [ebx+190h] +
mov ecx [ebx+194h] +
jmp loc_423EC7  +
or byte ptr [ebx+1ACh] 2 +
jmp loc_423EDE  +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_423F24  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_423F24  +
***
jmp sub_423FC0  +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
test esi esi +
jz loc_424102  +
mov [esi+40h] ebx +
mov [ebx+234h] esi +
mov [esp+24h+var_24] ebx +
call sub_41AC60  +
mov [esp+24h+var_24] ebx +
call sub_419E70  +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 7 +
mov [esp+24h+var_20] offset aDefined +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2ACh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 4 +
mov [esp+24h+var_20] offset aTrue_1 +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2B0h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 5 +
mov [esp+24h+var_20] offset aFalse_1 +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2B4h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Bh +
mov [esp+24h+var_20] offset a__va_args__ +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2B8h] eax +
or word ptr [eax+14h] 200h +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Fh +
mov [esp+24h+var_20] offset a__has_includ_0 +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2BCh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 14h +
mov [esp+24h+var_20] offset a__has_includ_1 +
mov [esp+24h+var_24] eax +
call sub_41F480  +
mov [ebx+2C0h] eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov byte ptr [ebx+2C4h] 1 +
mov [esp+24h+var_24] 0Dh +
call sub_41F070  +
mov dword ptr [eax+30h] offset sub_423EA0 +
mov esi eax +
lea eax [ebx+184h] +
mov [esp+24h+var_14] offset free +
mov [esp+24h+var_18] offset sub_435ED0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] eax +
call sub_440C70  +
jmp loc_423FD5  +
***
jmp sub_424160  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+2C4h] 0 +
jz loc_424195  +
mov eax [ebx+234h] +
add ebx 184h +
mov [esp+18h+var_18] eax +
call sub_41F0F0  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_440DE0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_8] +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+234h] +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 1 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call sub_41F480  +
add esp 1Ch +
retn   +
***
jmp loc_4241E0  +
sub esp 1Ch +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov eax [eax+234h] +
mov [esp+8] edx +
mov edx [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
mov [esp+4] edx +
call sub_41F480  +
test eax eax +
jz loc_424224  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+234h] +
mov [esp+arg_0] eax +
jmp sub_41F4E0  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edx [esp+20h+arg_10] +
mov esi [esp+20h+arg_18] +
mov edi [esp+20h+arg_C] +
mov ebp [esp+20h+arg_0] +
mov [esp+20h+var_C] edx +
mov edx [esp+20h+arg_14] +
cmp esi 40h +
mov ebx [esp+20h+arg_4] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_8] +
jbe loc_4242D0  +
lea ecx [esi-40h] +
cmp ecx 3Fh +
ja loc_4242A6  +
mov edi ecx +
shr edi 5 +
and edi 1 +
mov esi edi +
xor esi 1 +
shl esi cl +
shl edi cl +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
and ebp esi +
and ebx edi +
mov [eax+8] edx +
mov edx [esp+20h+var_C] +
mov ecx [esp+20h+var_20] +
mov [eax] ebp +
mov [eax+4] ebx +
mov [eax+10h] edx +
mov edx [esp+20h+var_8] +
mov [eax+0Ch] ecx +
mov [eax+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_4242F6  +
mov ecx esi +
mov ebp ecx +
shr ebp 5 +
and ebp 1 +
mov edi ebp +
xor edi 1 +
shl edi cl +
shl ebp cl +
add edi 0FFFFFFFFh +
adc ebp 0FFFFFFFFh +
and edx edi +
and [esp+20h+var_20] ebp +
xor ebx ebx +
xor ebp ebp +
jmp loc_4242A6  +
xor ebp ebp +
xor ebx ebx +
jmp loc_4242A6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+88h+arg_0] +
mov ebx [esp+88h+arg_C] +
mov edi eax +
mov [esp+88h+var_60] eax +
mov eax [esp+88h+arg_4] +
mov [esp+88h+var_64] ebx +
mov edx eax +
mov [esp+88h+var_5C] eax +
mov eax [esp+88h+arg_8] +
mov [esp+88h+var_68] eax +
mov eax [esp+88h+arg_10] +
mov [esp+88h+var_20] eax +
mov eax [esp+88h+arg_14] +
mov [esp+88h+var_1C] eax +
mov eax edi +
not eax  +
mov ecx eax +
mov eax edx +
not eax  +
mov ebx eax +
mov eax [esp+88h+var_68] +
not eax  +
mov esi eax +
mov eax [esp+88h+var_64] +
add esi 1 +
not eax  +
mov edi eax +
adc edi 0 +
mov eax edi +
or eax esi +
jnz loc_42437D  +
add ecx 1 +
adc ebx 0 +
mov eax ecx +
mov [esp+88h+var_2C] ebx +
mov [esp+88h+var_88] eax +
mov eax [esp+88h+var_2C] +
mov [esp+88h+var_24] edi +
mov [esp+88h+var_30] ecx +
mov ecx [esp+88h+arg_18] +
mov [esp+88h+var_28] esi +
mov [esp+88h+var_84] eax +
mov eax [esp+88h+var_24] +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_70] ecx +
mov [esp+88h+var_7C] eax +
mov eax [esp+88h+var_20] +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+var_1C] +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
call sub_424250  +
mov eax [esp+88h+var_48] +
mov edi [esp+88h+var_44] +
mov ebx [esp+88h+var_58] +
mov esi [esp+88h+var_54] +
mov edx [esp+88h+var_50] +
mov ecx [esp+88h+var_4C] +
mov [esp+88h+var_1C] edi +
xor edi edi +
test al al +
mov [esp+88h+var_30] ebx +
mov [esp+88h+var_2C] esi +
mov [esp+88h+var_28] edx +
mov [esp+88h+var_24] ecx +
mov [esp+88h+var_20] eax +
jnz loc_42440C  +
xor ecx [esp+88h+var_64] +
xor edx [esp+88h+var_68] +
or ecx edx +
jz loc_424446  +
mov eax edi +
mov byte ptr [esp+88h+var_20+1] al +
mov eax [esp+88h+var_30] +
mov [ebp+0] eax +
mov eax [esp+88h+var_2C] +
mov [ebp+4] eax +
mov eax [esp+88h+var_28] +
mov [ebp+8] eax +
mov eax [esp+88h+var_24] +
mov [ebp+0Ch] eax +
mov eax [esp+88h+var_20] +
mov [ebp+10h] eax +
mov eax [esp+88h+var_1C] +
mov [ebp+14h] eax +
add esp 7Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi [esp+88h+var_5C] +
xor ebx [esp+88h+var_60] +
or esi ebx +
jnz loc_42440C  +
mov edx [esp+88h+var_68] +
mov eax [esp+88h+var_64] +
or eax [esp+88h+var_5C] +
or edx [esp+88h+var_60] +
or edx eax +
setnz al  +
mov edi eax +
jmp loc_42440C  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
mov eax [esp+8Ch+arg_0] +
mov ebp [esp+8Ch+arg_18] +
mov [esp+8Ch+var_24] eax +
mov eax [esp+8Ch+arg_4] +
cmp ebp 40h +
mov [esp+8Ch+var_20] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [esp+8Ch+var_20] +
mov [esp+8Ch+var_1C] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_68] edx +
mov [esp+8Ch+var_18] eax +
mov eax [esp+8Ch+arg_10] +
mov edx [esp+8Ch+var_18] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_10] eax +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_64] eax +
jbe loc_4246F0  +
mov eax [esp+8Ch+var_6C] +
lea ecx [ebp-41h] +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
xor esi esi +
and eax 1 +
xor edi edi +
xor eax 1 +
mov edx eax +
and edx 1 +
cmp byte ptr [esp+8Ch+var_14] 0 +
jnz loc_42452B  +
xor edx 1 +
xor edi edi +
movzx edx dl +
mov esi edx +
neg esi  +
adc edi 0 +
neg edi  +
cmp ebp [esp+8Ch+arg_1C] +
jbe loc_424741  +
cmp ebp 3Fh +
ja loc_424700  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_424555  +
mov edx eax +
xor eax eax +
or eax [esp+8Ch+var_64] +
or edx [esp+8Ch+var_60] +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_68] edi +
cmp [esp+8Ch+arg_1C] 3Fh +
jbe loc_424597  +
mov eax [esp+8Ch+var_6C] +
mov edx [esp+8Ch+var_68] +
sub [esp+8Ch+arg_1C] 40h +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
mov eax [esp+8Ch+arg_1C] +
test eax eax +
jz loc_424750  +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov edx [esp+8Ch+var_60] +
mov eax [esp+8Ch+var_64] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4245C4  +
mov eax edx +
xor edx edx +
mov [esp+8Ch+var_5C] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_64] 40h +
sub [esp+8Ch+var_64] eax +
movzx ecx byte ptr [esp+8Ch+var_64] +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_58] edx +
mov edx [esp+8Ch+var_68] +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4245FA  +
mov edx eax +
xor eax eax +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_54] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_50] edx +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_424620  +
mov eax edx +
xor edx edx +
movzx ecx byte ptr [esp+8Ch+var_64] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_424633  +
mov edi esi +
xor esi esi +
mov ecx edx +
or eax esi +
mov edx [esp+8Ch+var_50] +
or edi ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_68] edi +
or ecx eax +
mov esi ecx +
mov ecx [esp+8Ch+var_58] +
or ecx edx +
mov edi ecx +
mov edx [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_18] edi +
mov [esp+8Ch+var_1C] esi +
mov eax edx +
mov [esp+8Ch+var_20] ecx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_74] ebp +
mov [esp+8Ch+var_84] esi +
mov [esp+8Ch+var_24] edx +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_18] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+var_10] +
mov [esp+8Ch+var_78] eax +
lea eax [esp+8Ch+var_4C] +
call sub_424250  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+var_4C] +
mov byte ptr [esp+8Ch+var_14+1] 0 +
mov [ebx] eax +
mov eax [esp+8Ch+var_48] +
mov [ebx+4] eax +
mov eax [esp+8Ch+var_44] +
mov [ebx+8] eax +
mov eax [esp+8Ch+var_40] +
mov [ebx+0Ch] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+10h] eax +
mov eax [esp+8Ch+var_38] +
mov [ebx+14h] eax +
add esp 8Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp-1] +
mov eax [esp+8Ch+var_64] +
mov edx [esp+8Ch+var_60] +
jmp loc_4244F9  +
cmp ebp 7Fh +
ja loc_42456D  +
lea ecx [ebp-40h] +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_42471E  +
mov edx eax +
xor eax eax +
mov ecx [esp+8Ch+var_6C] +
or ecx eax +
mov [esp+8Ch+var_5C] ecx +
mov ecx [esp+8Ch+var_68] +
or ecx edx +
mov eax ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
mov [esp+8Ch+var_6C] ecx +
jmp loc_42456D  +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
jmp loc_424659  +
mov esi [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_60] +
jmp loc_424659  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 0CCh +
mov eax [esp+0CCh+arg_0] +
mov edx [esp+0CCh+arg_10] +
mov [esp+0CCh+var_94] eax +
mov eax [esp+0CCh+arg_4] +
mov [esp+0CCh+var_34] edx +
mov [esp+0CCh+var_90] eax +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_9C] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_98] eax +
mov eax [esp+0CCh+arg_14] +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+arg_18] +
cmp [esp+0CCh+arg_1C] eax +
jb loc_424840  +
xor eax eax +
test dl dl +
jz loc_424A97  +
xor esi esi +
xor ebp ebp +
xor edi edi +
mov [esp+0CCh+var_A4] 0 +
mov ecx edi +
mov [esp+0CCh+var_44] edi +
mov edi [esp+0CCh+var_A4] +
mov byte ptr [esp+0CCh+var_34+1] al +
mov byte ptr [esp+0CCh+var_34] dl +
mov [ebx+8] esi +
mov [esp+0CCh+var_40] edi +
mov eax [esp+0CCh+var_40] +
mov [ebx+0Ch] ebp +
mov [esp+0CCh+var_3C] esi +
mov [esp+0CCh+var_38] ebp +
mov [ebx+4] eax +
mov eax [esp+0CCh+var_34] +
mov [ebx] ecx +
mov [ebx+10h] eax +
mov eax [esp+0CCh+var_30] +
mov [ebx+14h] eax +
add esp 0CCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0CCh+arg_1C] 3Fh +
ja loc_424A70  +
mov eax [esp+0CCh+var_9C] +
mov esi [esp+0CCh+var_94] +
mov edi [esp+0CCh+var_90] +
mov ebp [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_A4] eax +
mov eax [esp+0CCh+var_98] +
mov [esp+0CCh+var_A0] eax +
test ebp ebp +
jz loc_4248F0  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx esi +
xor esi esi +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax esi +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_A4] +
mov ecx 40h +
mov [esp+0CCh+var_88] edx +
mov edx [esp+0CCh+var_A0] +
sub ecx ebp +
xor edi edi +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
cmovnz edx edi +
mov ecx edx +
mov edx [esp+0CCh+var_88] +
mov [esp+0CCh+var_80] ecx +
mov ecx eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_8C] +
or ecx eax +
mov eax [esp+0CCh+var_A4] +
mov esi ecx +
mov ecx [esp+0CCh+var_80] +
or ecx edx +
mov edx [esp+0CCh+var_A0] +
mov edi ecx +
mov ecx ebp +
xor ebp ebp +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebp +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_A0] edx +
mov eax [esp+0CCh+var_A4] +
mov ecx esi +
mov [esp+0CCh+var_44] esi +
mov edx [esp+0CCh+var_A0] +
mov [esp+0CCh+var_40] edi +
mov [esp+0CCh+var_CC] ecx +
mov esi eax +
mov [esp+0CCh+var_3C] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_38] edx +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_6C] +
call sub_424250  +
mov eax [esp+0CCh+var_6C] +
mov ecx [esp+0CCh+var_5C] +
mov [esp+0CCh+var_44] eax +
mov edi [esp+0CCh+var_44] +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_68] +
mov edx ecx +
mov [esp+0CCh+var_34] ecx +
mov [esp+0CCh+var_40] eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_64] +
mov [esp+0CCh+var_3C] eax +
mov esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_7C] eax +
mov eax [esp+0CCh+var_60] +
mov [esp+0CCh+var_38] eax +
mov ebp [esp+0CCh+var_38] +
mov [esp+0CCh+var_78] eax +
mov eax [esp+0CCh+var_58] +
mov [esp+0CCh+var_74] eax +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_A4] eax +
xor eax eax +
test cl cl +
jnz loc_4247DC  +
mov eax [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_70] edx +
mov [esp+0CCh+var_BC] ecx +
mov [esp+0CCh+var_CC] edi +
mov [esp+0CCh+var_B0] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_74] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_24] +
call sub_424470  +
mov eax [esp+0CCh+var_98] +
xor eax [esp+0CCh+var_18] +
mov ecx [esp+0CCh+var_9C] +
xor ecx [esp+0CCh+var_1C] +
mov edx eax +
mov eax 1 +
or edx ecx +
mov edx [esp+0CCh+var_70] +
jnz loc_4247DC  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
xor eax [esp+0CCh+var_20] +
xor ecx [esp+0CCh+var_24] +
or ecx eax +
setnz al  +
jmp loc_4247DC  +
mov eax [esp+0CCh+arg_1C] +
mov esi [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_98] +
mov [esp+0CCh+var_A4] 0 +
lea ebp [eax-40h] +
mov [esp+0CCh+var_A0] 0 +
jmp loc_42486D  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
or eax [esp+0CCh+var_98] +
or ecx [esp+0CCh+var_9C] +
or ecx eax +
setnz al  +
jmp loc_4247CE  +
***
jmp sub_424AC0  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx edx +
sub esp 28h +
mov ebp [esp+30h+arg_0] +
mov [esp+30h+var_30] eax +
mov eax edx +
mov esi [esp+30h+arg_4] +
mul  ebp +
mov [esp+30h+var_1C] eax +
mov eax ecx +
mov ecx [esp+30h+var_30] +
mov [esp+30h+var_18] edx +
mul  esi +
mov [esp+30h+var_14] eax +
mov [ecx] eax +
mov eax ebx +
mov [esp+30h+var_10] edx +
mov [ecx+4] edx +
mul  esi +
xor esi esi +
mov [esp+30h+var_2C] eax +
mov eax edi +
mov edi [esp+30h+var_2C] +
mov [esp+30h+var_28] edx +
mul  ebp +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] edx +
mov edx [esp+30h+var_18] +
add esi eax +
adc edi edx +
cmp edx edi +
mov [ecx+8] esi +
mov [ecx+0Ch] edi +
jb loc_424B9B  +
jbe loc_424B95  +
mov ecx [esp+30h+var_14] +
mov ebx [esp+30h+var_10] +
mov eax [esp+30h+var_30] +
add ecx 1 +
adc ebx 0 +
mov [eax] ecx +
mov edx ebx +
mov [eax+4] ebx +
mov eax ecx +
mov ebx [esp+30h+var_24] +
xor ecx ecx +
mov ebp [esp+30h+var_30] +
add ecx esi +
adc ebx edi +
cmp edi ebx +
mov [ebp+8] ecx +
mov [ebp+0Ch] ebx +
jb loc_424B65  +
jbe loc_424BA5  +
add eax 1 +
adc edx 0 +
mov ebx [esp+30h+var_20] +
mov edi [esp+30h+var_28] +
mov ecx ebx +
xor ebx ebx +
mov esi edi +
xor edi edi +
add ecx esi +
adc ebx edi +
add ecx eax +
mov eax [esp+30h+var_30] +
adc ebx edx +
mov [eax] ecx +
mov [eax+4] ebx +
mov byte ptr [eax+10h] 1 +
mov byte ptr [eax+11h] 0 +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+30h+var_1C] esi +
ja loc_424B2C  +
mov eax [esp+30h+var_14] +
mov edx [esp+30h+var_10] +
jmp loc_424B46  +
cmp esi ecx +
jbe loc_424B65  +
jmp loc_424B5F  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 0CCh +
mov eax [esp+0D0h+arg_0] +
mov ebp [esp+0D0h+arg_10] +
mov edi [esp+0D0h+arg_28] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+arg_4] +
mov ecx [esp+0D0h+var_48] +
mov [esp+0D0h+var_38] ebp +
mov [esp+0D0h+var_50] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+arg_8] +
mov ebx [esp+0D0h+var_44] +
mov [esp+0D0h+var_90] ecx +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+arg_C] +
mov [esp+0D0h+var_8C] ebx +
mov ecx [esp+0D0h+var_40] +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+arg_14] +
mov ebx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+arg_18] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+arg_1C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+arg_20] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+arg_24] +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+arg_2C] +
mov [esp+0D0h+var_4C] eax +
mov [esp+0D0h+var_98] ecx +
mov ecx [esp+0D0h+var_60] +
mov [esp+0D0h+var_94] ebx +
mov ebx [esp+0D0h+var_5C] +
mov eax [edx+294h] +
cmp [esp+0D0h+arg_30] 5 +
mov [esp+0D0h+var_A8] ecx +
mov ecx [esp+0D0h+var_58] +
mov [esp+0D0h+var_A4] ebx +
mov ebx [esp+0D0h+var_54] +
mov [esp+0D0h+var_9C] eax +
mov [esp+0D0h+var_B0] ecx +
mov [esp+0D0h+var_AC] ebx +
jz loc_425090  +
jle loc_424EA8  +
mov eax [esp+0D0h+arg_30] +
sub eax 0Ch +
cmp eax 1 +
ja loc_425248  +
mov eax edi +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_424DBD  +
cmp [esp+0D0h+var_9C] 40h +
mov eax [esp+0D0h+var_9C] +
jbe loc_4253F8  +
lea ecx [eax-41h] +
mov edx [esp+0D0h+var_A4] +
mov eax [esp+0D0h+var_A8] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_424DBD  +
xor eax eax +
cmp [esp+0D0h+arg_30] 0Dh +
setnz al  +
mov [esp+0D0h+arg_30] eax +
mov eax [esp+0D0h+var_9C] +
add [esp+0D0h+arg_30] 0Ch +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_60] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_5C] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_54] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
call sub_424300  +
mov eax [esp+0D0h+var_80] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_5C] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+var_60] +
mov edx [esp+0D0h+var_54] +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_B0] eax +
mov ecx [esp+0D0h+var_A4] +
mov eax 0FFFFFFFFh +
mov edx [esp+0D0h+var_A8] +
mov edi ecx +
or edi edx +
cmovz eax [esp+0D0h+var_B0] +
cmp [esp+0D0h+arg_30] 0Dh +
mov [esp+0D0h+var_B4] eax +
mov eax [esp+0D0h+var_9C] +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_3C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_38] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_34] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
jz loc_425300  +
call sub_424470  +
mov eax [esp+0D0h+var_80] +
mov edi [esp+0D0h+var_70] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_38] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_44] +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+var_6C] +
mov edx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_B0] eax +
jmp loc_42528C  +
cmp [esp+0D0h+arg_30] 4 +
jnz loc_425248  +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
mov ecx [esp+0D0h+var_90] +
mov ebx [esp+0D0h+var_8C] +
add eax [esp+0D0h+var_B0] +
adc edx [esp+0D0h+var_AC] +
add ecx [esp+0D0h+var_A8] +
adc ebx [esp+0D0h+var_A4] +
cmp edx [esp+0D0h+var_94] +
mov [esp+0D0h+var_88] eax +
mov [esp+0D0h+var_84] edx +
ja loc_424EF8  +
jb loc_425330  +
mov eax [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] eax +
jb loc_425330  +
mov edx ebp +
mov eax 1 +
mov ebp [esp+0D0h+var_84] +
test dl dl +
mov edx ecx +
cmovz eax edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_24] ebx +
mov ebx [esp+0D0h+var_9C] +
mov byte ptr [esp+0D0h+var_18] al +
mov eax [esp+0D0h+var_24] +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_20] edi +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_1C] +
mov [esp+0D0h+var_D0] edx +
mov [esp+0D0h+var_C8] edi +
mov [esp+0D0h+var_28] ecx +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_B8] ebx +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_424250  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov edx eax +
shr dx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
jnz loc_42503E  +
cmp ebx 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_425350  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_425222  +
xor edx edx +
mov eax [esp+0D0h+var_28] +
mov byte ptr [esp+0D0h+var_18+1] dl +
mov [esi] eax +
mov eax [esp+0D0h+var_24] +
mov [esi+4] eax +
mov eax [esp+0D0h+var_20] +
mov [esi+8] eax +
mov eax [esp+0D0h+var_1C] +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_18] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_14] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
sub eax [esp+0D0h+var_B0] +
sbb edx [esp+0D0h+var_AC] +
mov [esp+0D0h+var_88] eax +
mov eax [esp+0D0h+var_90] +
mov ebx edx +
mov [esp+0D0h+var_84] edx +
mov edx [esp+0D0h+var_8C] +
sub eax [esp+0D0h+var_A8] +
sbb edx [esp+0D0h+var_A4] +
cmp ebx [esp+0D0h+var_94] +
jb loc_4250D4  +
ja loc_425340  +
mov ebx [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] ebx +
ja loc_425340  +
mov ebx ebp +
mov ecx 1 +
mov ebp [esp+0D0h+var_84] +
test bl bl +
mov ebx eax +
cmovz ecx edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_28] eax +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18] cl +
mov eax edi +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_1C] +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_24] edx +
mov edx [esp+0D0h+var_24] +
mov [esp+0D0h+var_20] edi +
mov edi [esp+0D0h+var_9C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_D0] ebx +
mov [esp+0D0h+var_CC] edx +
mov [esp+0D0h+var_B8] edi +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_424250  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov ebx eax +
shr bx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
mov edx ebx +
jnz loc_42503E  +
cmp [esp+0D0h+var_9C] 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_4253B4  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_42503C  +
mov edx [esp+0D0h+var_84] +
mov eax [esp+0D0h+var_88] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
cmp al bl +
setnz dl  +
jmp loc_42503E  +
cmp byte ptr [edx+26Ah] 0 +
jz loc_425270  +
cmp byte ptr [edx+268h] 0 +
jz loc_425310  +
mov eax [edx+14h] +
test eax eax +
jz loc_425310  +
lea esi [esi+0] +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_38] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_34] eax +
mov edx [esp+0D0h+var_A8] +
mov ecx [esp+0D0h+var_A4] +
mov ebx [esp+0D0h+var_AC] +
mov eax edx +
mov [esp+0D0h+var_44] ecx +
mov ecx [esp+0D0h+var_B0] +
mov [esi] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_3C] ebx +
mov [esp+0D0h+var_48] edx +
mov [esp+0D0h+var_40] ecx +
mov edx ecx +
mov ecx edi +
mov [esi+4] eax +
mov eax [esp+0D0h+var_3C] +
mov byte ptr [esp+0D0h+var_38] cl +
mov [esi+8] edx +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_38] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_34] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_424760  +
jmp loc_424E35  +
mov [esp+0D0h+var_C8] offset aCommaOperatorI +
mov [esp+0D0h+var_CC] 15h +
mov [esp+0D0h+var_D0] edx +
call sub_41ED50  +
jmp loc_425270  +
add ecx 1 +
adc ebx 0 +
jmp loc_424EF8  +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
jmp loc_4250D4  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_425385  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_42503C  +
mov eax edi +
mov edx ebp +
shrd eax ebp +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edi eax +
and edi 1 +
xor edi 1 +
mov eax edi +
and eax 1 +
jmp loc_42523E  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4253E9  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_425393  +
jmp loc_42503C  +
lea ecx [eax-1] +
mov edx [esp+0D0h+var_AC] +
mov eax [esp+0D0h+var_B0] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_424D11  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
add byte ptr [edx+12h] 1 +
mov byte ptr [eax+10h] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov byte ptr [eax+11h] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_1C] ecx +
call sub_41DB20  +
mov [esp+34h+var_1D] 0 +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_4255A0  +
cmp al 44h +
setz dl  +
jz loc_425480  +
cmp al 3Eh +
jnz loc_425520  +
mov eax [esi+8] +
mov [esp+34h+var_18] edx +
sub eax 1 +
mov [esp+34h+var_34] eax +
call sub_435ED0  +
mov ebp eax +
mov eax [esi+8] +
lea ecx [eax-2] +
mov eax [esi+0Ch] +
mov [esp+34h+var_2C] ecx +
mov [esp+34h+var_34] ebp +
add eax 1 +
mov [esp+34h+var_30] eax +
call memcpy  +
mov eax [esi+8] +
mov edx [esp+34h+var_18] +
mov byte ptr [ebp+eax-2] 0 +
mov esi [esi+8] +
test ebp ebp +
jz loc_4254FC  +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ebp +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_28] eax +
movzx eax dl +
mov [esp+34h+var_2C] eax +
call sub_42DCF0  +
test al al +
jnz loc_425570  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov [esp+34h+var_34] ebp +
call free  +
cmp [esp+34h+var_1D] 0 +
jnz loc_425545  +
test esi esi +
jz loc_42550D  +
mov [edi+0E8h] esi +
sub byte ptr [edi+12h] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 3 +
jz loc_425583  +
mov [esp+34h+var_2C] offset aOperator__has_ +
xor esi esi +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_41ECD0  +
cmp [esp+34h+var_1D] 0 +
jz loc_425503  +
mov [esp+34h+var_34] edi +
call sub_41DB20  +
cmp byte ptr [eax+4] 15h +
jz loc_425503  +
mov [esp+34h+var_2C] offset aMissingAfter__ +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_41ECD0  +
jmp loc_425503  +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_4254F4  +
mov [esp+34h+var_34] edi +
xor esi esi +
call sub_41ACB0  +
mov edx 1 +
mov ebp eax +
jmp loc_4254BF  +
mov [esp+34h+var_34] edi +
call sub_41DB20  +
mov [esp+34h+var_1D] 1 +
mov esi eax +
movzx eax byte ptr [eax+4] +
jmp loc_425471  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_24] eax +
cmp ebx 2 +
jz loc_4257A2  +
movzx edx byte ptr [edx] +
test dl dl +
mov [esp+24h+var_5] dl +
jnz loc_4256F5  +
lea edx [ebx-1] +
test ebx ebx +
jz loc_425865  +
movzx esi byte ptr [ecx] +
mov eax [esp+24h+var_24] +
mov ebx esi +
xor edi edi +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_10] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_14] 0 +
sub ebx 44h +
cmp bl 33h +
ja loc_425668  +
movzx ebx bl +
jmp ds:off_4640FC[ebx*4]  +
mov esi edx +
add ebp 1 +
sub edx 1 +
mov ebx ecx +
test esi esi +
lea ecx [ebx+1] +
jz loc_425AC2  +
movzx ebx byte ptr [ebx+1] +
sub ebx 44h +
cmp bl 33h +
jbe loc_42563D  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
add edi 1 +
sub edx 1 +
mov ebx ecx +
jmp loc_425651  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_20] 1 +
sub edx 1 +
jmp loc_425651  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_18] 1 +
sub edx 1 +
jmp loc_425651  +
mov esi [esp+24h+var_14] +
add esi 1 +
test edx edx +
jnz loc_4257D8  +
mov edx [esp+24h+var_10] +
mov ebx esi +
add edx [esp+24h+var_C] +
add edx [esp+24h+var_1C] +
add edx esi +
add edx [esp+24h+var_20] +
add edx edi +
add edx ebp +
xor eax eax +
cmp edx 1 +
ja loc_42566A  +
cmp [esp+24h+var_18] 1 +
ja loc_42566A  +
cmp [esp+24h+var_4] 0F0h +
ja loc_42566A  +
jmp loc_42589B  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_1C] 1 +
sub edx 1 +
jmp loc_425651  +
test ebx ebx +
jz loc_425865  +
movzx edx byte ptr [ecx+ebx-1] +
lea esi [ebx-1] +
cmp dl 52h +
jz loc_425726  +
jbe loc_425940  +
cmp dl 6Bh +
jz loc_425950  +
cmp dl 72h +
lea esi [esi+0] +
jnz loc_425945  +
mov ebp 100000h +
cmp ebx 1 +
jz loc_425A10  +
movzx eax byte ptr [ecx] +
mov edi eax +
and edi 0FFFFFFDFh +
mov edx edi +
cmp dl 55h +
jnz loc_42575C  +
or ebp 1000h +
cmp esi 1 +
jz loc_425A10  +
movzx eax byte ptr [ecx+1] +
lea esi [ebx-2] +
add ecx 1 +
cmp al 4Ch +
jz loc_425A38  +
jbe loc_425A17  +
cmp al 68h +
jz loc_425A26  +
cmp al 6Ch +
jnz loc_425668  +
cmp esi 1 +
lea esi [esi+0] +
jz loc_425A59  +
xor eax eax +
cmp esi 2 +
jnz loc_42566A  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 6Ch +
cmovz eax edx +
jmp loc_42566A  +
movzx esi byte ptr [ecx] +
mov edi esi +
and edi 0FFFFFFDFh +
mov eax edi +
cmp al 44h +
jnz loc_42595A  +
mov eax esi +
cmp al 44h +
setz al  +
mov edi eax +
movzx eax byte ptr [ecx+1] +
lea esi [eax-44h] +
mov eax esi +
cmp al 28h +
ja loc_4255D7  +
movzx esi al +
jmp ds:off_4641CC[esi*4]  +
cmp byte ptr [eax] 0 +
movzx ebx byte ptr [ecx+1] +
jnz loc_425856  +
mov byte ptr [esp+24h+var_24] bl +
sub ebx 31h +
cmp bl 8 +
ja loc_425852  +
mov ebx [esp+24h+var_4] +
test ebx ebx +
jnz loc_425852  +
movzx ebx byte ptr [esp+24h+var_24] +
mov esi [esp+24h+var_4] +
mov [esp+24h+var_24] edi +
mov edi eax +
jmp loc_425826  +
cmp esi 0EFh +
ja loc_425A63  +
lea eax [esi+esi*4] +
add ecx 1 +
sub edx 1 +
lea esi [ebx+eax*2-30h] +
jz loc_425A9D  +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-30h] +
cmp al 9 +
jbe loc_425803  +
cmp bl 78h +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
jnz loc_425A6C  +
lea esi [edx-1] +
sub edx 2 +
add [esp+24h+var_C] 1 +
lea ebx [ecx+1] +
jmp loc_425651  +
movzx ebx byte ptr [esp+24h+var_24] +
add ecx 1 +
sub edx 1 +
mov [esp+24h+var_14] esi +
jmp loc_425635  +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
xor edi edi +
xor ebx ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_10] 0 +
mov eax [esp+24h+var_C] +
test eax eax +
setnz al  +
mov esi eax +
jnz loc_4259E2  +
mov eax [esp+24h+var_10] +
test eax eax +
setnz dl  +
jz loc_4258CB  +
cmp [esp+24h+var_4] 10h +
jz loc_4258CB  +
xor eax eax +
test byte ptr [esp+24h+var_4] 1Fh +
jnz loc_42566A  +
cmp [esp+24h+var_4] 60h +
jz loc_425AB3  +
mov eax [esp+24h+var_18] +
test eax eax +
jz loc_425A83  +
xor eax eax +
mov ecx 2000h +
cmp [esp+24h+var_5] 0 +
jz loc_42566A  +
test ebx ebx +
mov eax 10h +
jnz loc_425937  +
mov ebx [esp+24h+var_1C] +
mov al 20h +
test ebx ebx +
jnz loc_425937  +
mov ebx [esp+24h+var_20] +
mov al 40h +
test ebx ebx +
jnz loc_425937  +
test ebp ebp +
mov eax 10000h +
jnz loc_425937  +
test edi edi +
mov eax 20000h +
jnz loc_425937  +
test dl dl +
jz loc_425AE4  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 400000h +
or eax ecx +
jmp loc_42566A  +
cmp dl 4Bh +
jz loc_425950  +
mov edx esi +
jmp loc_4255E9  +
mov ebp 200000h +
jmp loc_42572B  +
movzx eax byte ptr [edx] +
mov edx 1 +
test al al +
mov [esp+24h+var_5] al +
jz loc_4255F4  +
jmp loc_4256FD  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42566A  +
mov eax 4040h +
jmp loc_42566A  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42566A  +
mov eax 4010h +
jmp loc_42566A  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_42566A  +
mov eax 4020h +
jmp loc_42566A  +
mov eax edi +
test al al +
jz loc_425668  +
nop   +
jmp loc_42597F  +
mov eax edi +
test al al +
jz loc_425668  +
lea esi [esi+0] +
jmp loc_425995  +
mov eax edi +
test al al +
jz loc_425668  +
lea esi [esi+0] +
jmp loc_4259AB  +
cmp [esp+24h+var_4] 20h +
jz loc_4258AC  +
cmp [esp+24h+var_4] 40h +
jz loc_4258AC  +
xor eax eax +
cmp [esp+24h+var_4] 80h +
jz loc_4258AC  +
jmp loc_42566A  +
mov eax ebp +
jmp loc_42566A  +
cmp al 48h +
lea esi [esi+0] +
jnz loc_425668  +
mov edx ebp +
xor eax eax +
or edx 10h +
cmp esi 1 +
cmovz eax edx +
jmp loc_42566A  +
cmp esi 1 +
jz loc_425A59  +
xor eax eax +
cmp esi 2 +
jnz loc_42566A  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 4Ch +
cmovz eax edx +
jmp loc_42566A  +
mov eax ebp +
or eax 20h +
jmp loc_42566A  +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
lea esi [edx-1] +
mov ebx ecx +
mov [esp+24h+var_24] esi +
mov esi edx +
add [esp+24h+var_10] 1 +
mov edx [esp+24h+var_24] +
jmp loc_425651  +
mov eax ebp +
or eax edi +
jz loc_425A96  +
xor eax eax +
cmp [esp+24h+var_5] 0 +
jz loc_42566A  +
xor ecx ecx +
jmp loc_4258F4  +
mov [esp+24h+var_4] esi +
mov eax edi +
xor esi esi +
mov edi [esp+24h+var_24] +
mov ebx ecx +
mov [esp+24h+var_24] 0FFFFFFFFh +
jmp loc_425A76  +
xor eax eax +
test dl dl +
jz loc_4258D6  +
jmp loc_42566A  +
mov ecx [esp+24h+var_14] +
lea eax [ebp+edi+0] +
add eax [esp+24h+var_20] +
add eax [esp+24h+var_1C] +
add eax [esp+24h+var_10] +
add eax [esp+24h+var_C] +
mov ebx ecx +
lea edx [eax+ecx] +
jmp loc_4256C7  +
mov edx esi +
mov eax 8000h +
test dl dl +
jz loc_425937  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 800000h +
or eax ecx +
jmp loc_42566A  +
***
push edi  +
xor ebp ebp +
push esi  +
xor edi edi +
push ebx  +
xor esi esi +
lea ebx [ecx-1] +
sub esp 4 +
cmp ebx 0FFFFFFFFh +
mov [esp+10h+var_10] eax +
jz loc_425B4E  +
movzx ecx byte ptr [edx-1] +
lea eax [ecx-49h] +
cmp al 2Ch +
ja loc_425BA4  +
movzx eax al +
jmp ds:off_464270[eax*4]  +
add ebp 1 +
sub ebx 1 +
sub edx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_425B2A  +
xor eax eax +
cmp esi 2 +
ja loc_425BA6  +
cmp ebp 1 +
ja loc_425BA6  +
cmp edi 1 +
ja loc_425BA6  +
test edi edi +
jz loc_425BB5  +
mov edi [esp+10h+var_10] +
mov edx 2000h +
cmp byte ptr [edi] 0 +
jz loc_425BA6  +
cmp ebp 1 +
sbb eax eax +
not eax  +
and eax 1000h +
or eax edx +
test esi esi +
mov edx 10h +
jz loc_425B94  +
mov dl 20h +
cmp esi 1 +
mov ecx 40h +
cmovnz edx ecx +
or eax edx +
jmp loc_425BA6  +
add esi 1 +
cmp esi 2 +
jnz loc_425B43  +
cmp cl [edx] +
jz loc_425B43  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
jmp loc_425B43  +
xor edx edx +
jmp loc_425B70  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp [esp+1Ch+arg_8] 0 +
mov [esp+1Ch+var_1C] eax +
mov edi [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] ebx +
mov ebx [esp+1Ch+arg_14] +
mov [esp+1Ch+var_10] esi +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_18] edx +
mov ebp [esp+1Ch+arg_10] +
mov [esp+1Ch+var_C] ebx +
mov [esp+1Ch+var_8] esi +
jnz loc_425C04  +
cmp [esp+1Ch+arg_1C] 0 +
jz loc_425C50  +
cmp [esp+1Ch+var_18] ebp +
jbe loc_425C20  +
add esp 1Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_425CE0  +
mov ecx [esp+1Ch+var_1C] +
mov ebx [esp+1Ch+var_18] +
mov eax ecx +
mov edx ebx +
xor eax edi +
xor edx ebp +
or edx eax +
jz loc_425CF0  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+arg_20] 40h +
ja loc_425CB0  +
mov eax [esp+1Ch+arg_20] +
mov esi [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_14] +
mov edx [esp+1Ch+var_8] +
lea ecx [eax-1] +
mov eax [esp+1Ch+var_C] +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
shrd eax edx +
mov ebx esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
and ecx 1 +
xor ecx 1 +
and ecx 1 +
cmp bl cl +
jz loc_425C04  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_20] +
mov edx ebp +
mov esi [esp+1Ch+var_18] +
mov ebx [esp+1Ch+var_1C] +
lea ecx [eax-41h] +
mov eax edi +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
jmp loc_425C84  +
cmp [esp+1Ch+var_1C] edi +
ja loc_425C0A  +
jmp loc_425C26  +
mov eax [esp+1Ch+var_8] +
cmp [esp+1Ch+var_10] eax +
jb loc_425C3D  +
nop   +
ja loc_425C0A  +
mov eax [esp+1Ch+var_C] +
cmp [esp+1Ch+var_14] eax +
jnb loc_425C0A  +
xor esi esi +
jmp loc_425C3F  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov [esp+4] ecx +
mov ecx [esp+8] +
lea edx [eax+273h] +
add eax 248h +
jmp sub_4255C0  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
add eax 273h +
jmp sub_425B10  +
***
mov edx [esp+arg_0] +
mov eax 4Ah +
cmp edx 3Eh +
jz locret_425DD0  +
cmp edx 3Fh +
mov al 4Bh +
jz locret_425DD0  +
cmp edx 40h +
mov al 4Ch +
jz locret_425DD0  +
cmp edx 41h +
mov al 4Dh +
jz locret_425DD0  +
mov al 4Eh +
cmp edx 42h +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov edx [esp+arg_0] +
mov eax 45h +
cmp edx 38h +
jz locret_425E50  +
cmp edx 39h +
mov al 46h +
jz locret_425E50  +
cmp edx 3Ah +
mov al 47h +
jz locret_425E50  +
cmp edx 3Bh +
mov al 48h +
jz locret_425E50  +
mov al 49h +
cmp edx 3Ch +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov eax [esp+arg_0] +
sub eax 4Ah +
cmp eax 4 +
setbe al  +
retn   +
***
mov eax [esp+arg_0] +
sub eax 45h +
cmp eax 4 +
setbe al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov esi [eax+8] +
mov edi [eax+0Ch] +
test esi esi +
jz loc_425EEA  +
movzx eax byte ptr [edi] +
cmp al 27h +
jz loc_425EEE  +
cmp al 22h +
jz loc_425EEE  +
lea edx [edi+1] +
xor ecx ecx +
jmp loc_425EB5  +
movzx ebx byte ptr [edx] +
mov eax edx +
add edx 1 +
cmp bl 22h +
jz loc_425EC3  +
cmp bl 27h +
jz loc_425EC3  +
add ecx 1 +
cmp ecx esi +
jnz loc_425EA3  +
lea eax [edi+ecx] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp esi ecx +
jz loc_425EBF  +
movzx ecx byte ptr [eax] +
lea eax [esi-1] +
cmp [edi+esi-1] cl +
jnz loc_425EE0  +
jmp loc_425EF2  +
cmp [edi+eax-1] cl +
lea edx [eax-1] +
jz loc_425EE4  +
mov eax edx +
test eax eax +
jnz loc_425ED5  +
add eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
jmp loc_425EBF  +
***
mov eax edi +
jmp loc_425EC7  +
***
mov eax esi +
add eax edi +
jmp loc_425EE6  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_8] +
mov edi [eax+0Ch] +
test ecx ecx +
mov [esp+3Ch+var_14] edi +
jz loc_425F24  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [ecx] 0 +
mov eax [eax+8] +
mov ecx eax +
cmp ecx 1 +
mov [esp+3Ch+var_10] eax +
mov eax 111h +
jz loc_426140  +
mov eax [esp+3Ch+var_14] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_4261A2  +
mov esi [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 0Ah +
xor ecx ecx +
xor ebp ebp +
mov byte ptr [esp+3Ch+var_1C] 0 +
xor edi edi +
jmp loc_425FA0  +
and dh 1 +
jz loc_425F6F  +
cmp [esp+3Ch+var_18] 10h +
jz loc_425FB0  +
cmp eax 27h +
jz loc_425FC5  +
cmp eax 2Eh +
jnz loc_425FD6  +
test cl cl +
jnz loc_426159  +
cmp byte ptr [ebx] 27h +
jz loc_426148  +
test ebp ebp +
lea esi [esi+0] +
jnz loc_4262A0  +
mov ebp 1 +
movzx eax byte ptr [ebx] +
mov esi ebx +
movzx edx ds:word_4660A0[eax+eax] +
lea ebx [esi+1] +
test dl 4 +
jz loc_425F63  +
movzx eax ds:byte_467C40[eax] +
mov byte ptr [esp+3Ch+var_1C] 1 +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
jmp loc_425F9B  +
mov edx [esp+3Ch+arg_0] +
cmp byte ptr [edx+276h] 0 +
jnz loc_426190  +
mov edx [esp+3Ch+var_14] +
add edx [esp+3Ch+var_10] +
cmp [esp+3Ch+var_18] 0Ah +
mov [esp+3Ch+var_14] edx +
jbe loc_4261F0  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_4261FC  +
and eax 0FFFFFFDFh +
cmp eax 50h +
jnz loc_4261FC  +
test cl cl +
jnz loc_426360  +
cmp byte ptr [esi+1] 27h +
mov eax 1 +
mov ebp 2 +
jz loc_42634F  +
cmp [esp+3Ch+var_18] 8 +
jnz loc_42621B  +
cmp edi 9 +
ja loc_426230  +
mov [esp+3Ch+var_18] 0Ah +
cmp ebp 2 +
jz loc_426818  +
mov ebp [esp+3Ch+var_14] +
mov ecx ebx +
mov eax [esp+3Ch+arg_0] +
sub ebp ebx +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ebp +
call sub_4255C0  +
test eax eax +
mov esi eax +
jnz loc_426678  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_42686C  +
mov edx [esp+3Ch+arg_8] +
test edx edx +
jz loc_426802  +
mov eax [esp+3Ch+arg_8] +
xor edi edi +
mov esi 1000040h +
mov [eax] ebx +
cmp [esp+3Ch+var_14] ebx +
jz loc_4260AF  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_426685  +
cmp esi 20h +
jz loc_4267C0  +
test edi edi +
jz loc_4260C7  +
cmp [esp+3Ch+var_18] 0Ah +
jnz loc_4267AB  +
test esi 300000h +
jz loc_4260E0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_42680E  +
test edi edi +
jz loc_4260F5  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_426881  +
mov edi esi +
and esi 2000h +
or edi 2 +
test esi esi +
jz loc_426115  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_426609  +
cmp [esp+3Ch+var_18] 2 +
jz loc_42652B  +
cmp [esp+3Ch+var_18] 0Ah +
jz loc_426521  +
mov ecx [esp+3Ch+var_18] +
mov eax edi +
or edi 200h +
or ah 4 +
cmp ecx 10h +
cmovz eax edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jz loc_425F8A  +
mov [esp+3Ch+var_2C] offset aDigitSeparator +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jnz loc_426400  +
mov ecx 1 +
jmp loc_425F9B  +
mov eax [esp+3Ch+var_14] +
lea esi [eax+1] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_4262AD  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
cmp dl 2Eh +
jz loc_4261D9  +
movzx ecx dl +
test byte ptr [ecx+ecx+4660A1h] 1 +
jz loc_42626A  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 10h +
lea esi [eax+2] +
movzx eax dl +
jmp loc_425F56  +
and eax 0FFFFFFDFh +
cmp eax 45h +
jz loc_426004  +
test cl cl +
jnz loc_4263F3  +
test ebp ebp +
jz loc_4262E2  +
test ebp ebp +
mov ebx esi +
setnz al  +
test al al +
jnz loc_426020  +
cmp edi [esp+3Ch+var_18] +
jb loc_42636D  +
cmp [esp+3Ch+var_18] 2 +
jz loc_42650D  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigitCI +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
xor eax eax +
jmp loc_426140  +
cmp dl 27h +
mov [esp+3Ch+var_18] 8 +
jnz loc_425F56  +
mov edi [esp+3Ch+arg_0] +
cmp byte ptr [edi+276h] 0 +
jz loc_425F56  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_0 +
jmp loc_426161  +
mov [esp+3Ch+var_2C] offset aTooManyDecimal +
jmp loc_426161  +
cmp dl 42h +
jnz loc_4262D5  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
lea ecx [edx-30h] +
cmp cl 1 +
ja loc_42626A  +
lea esi [edi+2] +
movzx eax dl +
mov [esp+3Ch+var_18] 2 +
jmp loc_425F56  +
mov [esp+3Ch+var_18] 8 +
jmp loc_425F56  +
cmp [esp+3Ch+var_18] 10h +
jz loc_42620C  +
mov ecx [esp+3Ch+var_14] +
mov eax [esp+3Ch+arg_0] +
sub ecx esi +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ecx +
mov ecx esi +
call sub_4255C0  +
test eax 300000h +
mov ebx eax +
jz loc_426502  +
mov ecx [esp+3Ch+var_18] +
mov edi eax +
mov eax 0Ah +
or edi 2 +
cmp ecx 8 +
cmovnz eax ecx +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_42663A  +
mov esi ebx +
and esi 2000h +
jmp loc_426100  +
mov ecx [esp+3Ch+arg_0] +
cmp byte ptr [ecx+276h] 0 +
jz loc_426020  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_1 +
jmp loc_426161  +
test al al +
jz loc_42642F  +
cmp [esp+3Ch+var_18] 2 +
jz loc_4266F5  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_42603C  +
cmp byte ptr [esp+3Ch+var_1C] 0 +
jz loc_42666B  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_426741  +
cmp ebp 2 +
jz loc_426818  +
mov [esp+3Ch+var_2C] offset aHexadecimalFlo +
jmp loc_426161  +
mov esi [esp+3Ch+arg_0] +
xor ecx ecx +
cmp al 27h +
jz loc_42685D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 4 +
jnz loc_4263C1  +
cmp al 27h +
jnz loc_4263EB  +
cmp byte ptr [esi+276h] 0 +
jnz loc_4263C1  +
test cl cl +
jz loc_426045  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_2 +
jmp loc_426161  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aAdjacentDigitS +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edx +
call sub_41EDD0  +
xor eax eax +
jmp loc_426140  +
mov eax [esp+3Ch+var_14] +
mov edx ebx +
sub eax ebx +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_0] +
add eax 273h +
call sub_425B10  +
test eax eax +
mov edx eax +
jnz loc_426587  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_426702  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_4266CE  +
mov eax [esp+3Ch+arg_8] +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
mov [eax] ebx +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4265A1  +
cmp ebp 40h +
jnz loc_426100  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_426100  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aUseOfC11LongLo +
mov edx offset aUseOfC99LongLo +
cmp byte ptr [ecx+248h] 0 +
cmovz eax edx +
cmp byte ptr [ecx+268h] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 7 +
mov [esp+3Ch+var_34] eax +
jz loc_4266E4  +
mov [esp+3Ch+var_3C] ecx +
call sub_41EE20  +
jmp loc_426100  +
mov ebx esi +
xor ebp ebp +
xor eax eax +
jmp loc_42621B  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigit_0 +
jmp loc_42623F  +
mov eax edi +
or ah 1 +
jmp loc_426140  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+275h] 0 +
jnz loc_42657D  +
cmp byte ptr [eax+26Ah] 0 +
jz loc_42657D  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aBinaryConstant +
mov edx offset aBinaryConsta_0 +
cmp byte ptr [ecx+248h] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
cmovz eax edx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] eax +
call sub_41EDD0  +
mov eax edi +
or ah 8 +
jmp loc_426140  +
mov ebp eax +
mov esi eax +
mov edi eax +
and ebp 0F0h +
and esi 2000h +
or edi 1 +
jmp loc_426489  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call loc_41BBE0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jnz loc_42649A  +
cmp ebp 40h +
jz loc_426790  +
and dh 30h +
jz loc_42649A  +
mov eax 6 +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_41EE20  +
jmp loc_42649A  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aImaginaryConst +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
jmp loc_426115  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
jmp loc_426342  +
mov [esp+3Ch+var_2C] offset aNoDigitsInHexa +
jmp loc_426161  +
mov edi eax +
and edi 4000h +
jmp loc_426098  +
mov [esp+3Ch+var_3C] eax +
call loc_41BBE0  +
test eax eax +
jnz loc_4260AF  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 6 +
mov [esp+3Ch+var_3C] eax +
call sub_41EE20  +
jmp loc_4260AF  +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
jmp loc_426489  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EE70  +
jmp loc_426100  +
mov [esp+3Ch+var_2C] offset aInvalidPrefix0 +
jmp loc_426161  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aInvalidSuffix_ +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
xor eax eax +
jmp loc_426140  +
cmp byte ptr [eax+24Fh] 0 +
jnz loc_4263A7  +
cmp byte ptr [eax+248h] 0 +
jz loc_4268B2  +
mov [esp+3Ch+var_2C] offset aUseOfC1zHexade +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
jmp loc_4263A7  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_4265C2  +
mov eax 7 +
jmp loc_4265D0  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_0 +
jmp loc_426716  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4260E0  +
mov [esp+3Ch+var_2C] offset aSuffixForDoubl +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
jmp loc_4260E0  +
xor edi edi +
mov esi 1000040h +
jmp loc_426098  +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
jmp loc_4267D9  +
movzx eax byte ptr [ebx] +
cmp al 2Dh +
jz loc_426823  +
cmp al 2Bh +
jnz loc_42682A  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 4 +
jnz loc_4263BD  +
cmp al 27h +
jnz loc_426850  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jnz loc_426360  +
mov [esp+3Ch+var_2C] offset aExponentHasNoD +
jmp loc_426161  +
cmp byte ptr [esi+276h] 0 +
setnz cl  +
jmp loc_4263CB  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_1 +
jmp loc_426716  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aDecimalFloatCo +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EDD0  +
jmp loc_4260F5  +
mov [esp+3Ch+var_2C] offset aUseOfC99Hexade +
jmp loc_426763  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0ACh+arg_0] +
mov eax [esp+0ACh+arg_8] +
mov edi [esp+0ACh+arg_0] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ebp [eax+0Ch] +
mov dword ptr [ebx] 0 +
mov eax [eax+8] +
mov dword ptr [ebx+4] 0 +
mov ebx [esp+0ACh+arg_C] +
mov byte ptr [edi+11h] 0 +
lea edx [ebp+eax+0] +
shr ebx 0Ch +
and ebx 1 +
cmp eax 1 +
mov [edi+10h] bl +
mov [esp+0ACh+var_7C] edx +
jz loc_426ED6  +
mov eax [esp+0ACh+arg_4] +
mov eax [eax+294h] +
mov [esp+0ACh+var_60] eax +
mov eax [esp+0ACh+arg_C] +
and eax 0F00h +
cmp eax 400h +
jz loc_426EB4  +
cmp eax 200h +
jz loc_426F15  +
cmp eax 800h +
jz loc_426F53  +
mov esi 0FFFFFFF7h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 0Ah +
mov [esp+0ACh+var_78] 0Ah +
cmp [esp+0ACh+var_60] 3Fh +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
ja loc_4269A5  +
mov ecx 40h +
sub ecx [esp+0ACh+var_60] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4269A5  +
mov eax edx +
xor edx edx +
add eax esi +
adc edx edi +
mov edi [esp+0ACh+var_64] +
mov [esp+0ACh+var_A0] 0 +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_A4] edi +
call sub_44ABE0  +
add eax 1 +
adc edx 0 +
cmp ebp [esp+0ACh+var_7C] +
jnb loc_426CE9  +
mov [esp+0ACh+var_4E] 0 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_426A19  +
cmp [esp+0ACh+var_78] 10h +
jz loc_426DC8  +
cmp dl 27h +
jnz loc_426CC6  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+276h] 0 +
jz loc_426CC6  +
add ebp 1 +
cmp ebp [esp+0ACh+var_7C] +
jz loc_426CC6  +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
movzx ecx ds:word_4660A0[eax+eax] +
test cl 4 +
jz loc_4269E4  +
movzx ebx ds:byte_467C40[eax] +
mov eax [esp+0ACh+arg_0] +
mov edx [eax+0Ch] +
cmp edx [esp+0ACh+var_80] +
mov eax [eax+8] +
jb loc_426DA0  +
ja loc_426A57  +
cmp eax [esp+0ACh+var_84] +
jb loc_426DA0  +
mov edi [esp+0ACh+arg_0] +
mov esi [edi] +
mov edi [edi+4] +
mov [esp+0ACh+var_84] esi +
mov [esp+0ACh+var_80] edi +
mov edi [esp+0ACh+arg_0] +
movzx ecx byte ptr [edi+10h] +
mov edi [esp+0ACh+var_78] +
mov [esp+0ACh+var_4F] cl +
cmp edi 2 +
jz loc_426DD6  +
cmp edi 10h +
jz loc_426E80  +
mov ecx [esp+0ACh+var_80] +
mov esi eax +
mov edi edx +
shr ecx 1Dh +
test ecx ecx +
mov ecx edx +
setnz [esp+0ACh+var_4D]  +
shld edi eax +
shl esi 3 +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
shr ecx 1Dh +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi 3 +
or ecx esi +
cmp [esp+0ACh+var_78] 0Ah +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] edi +
jnz loc_426E62  +
mov esi eax +
mov edi edx +
shld edi eax +
add esi eax +
mov [esp+0ACh+var_5C] esi +
mov esi [esp+0ACh+var_84] +
mov eax edx +
mov [esp+0ACh+var_58] edi +
mov edi [esp+0ACh+var_80] +
shr eax 1Fh +
xor edx edx +
mov ecx ebx +
shld edi esi +
add esi esi +
add eax esi +
mov esi [esp+0ACh+var_5C] +
adc edx edi +
mov edi [esp+0ACh+var_58] +
xor ebx ebx +
add ecx esi +
adc ebx edi +
cmp edi ebx +
jb loc_426B25  +
jbe loc_426F00  +
add eax 1 +
adc edx 0 +
mov esi ebx +
mov ebx ecx +
add ebx [esp+0ACh+var_6C] +
adc esi [esp+0ACh+var_68] +
cmp [esp+0ACh+var_68] esi +
jb loc_426B45  +
ja loc_426B3F  +
cmp [esp+0ACh+var_6C] ebx +
jbe loc_426B45  +
add eax 1 +
adc edx 0 +
add eax [esp+0ACh+var_74] +
adc edx [esp+0ACh+var_70] +
cmp edx [esp+0ACh+var_70] +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jb loc_426E70  +
ja loc_426B6F  +
mov eax [esp+0ACh+var_74] +
cmp [esp+0ACh+var_84] eax +
jb loc_426E70  +
movzx ecx [esp+0ACh+var_4D] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_18] esi +
mov edi [esp+0ACh+var_60] +
mov byte ptr [esp+0ACh+var_14+1] cl +
mov [esp+0ACh+var_6C] eax +
mov [esp+0ACh+var_20] edx +
movzx edx [esp+0ACh+var_4F] +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_94] edi +
mov edi [esp+0ACh+var_6C] +
mov [esp+0ACh+var_1C] ebx +
mov byte ptr [esp+0ACh+var_14] dl +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_14] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A4] ebx +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+var_10] +
mov [esp+0ACh+var_98] eax +
lea eax [esp+0ACh+var_4C] +
call sub_424250  +
mov edi [esp+0ACh+var_48] +
mov ecx [esp+0ACh+var_40] +
mov edx [esp+0ACh+var_3C] +
mov eax [esp+0ACh+var_4C] +
mov [esp+0ACh+var_6C] edi +
mov [esp+0ACh+var_20] edi +
mov edi [esp+0ACh+var_44] +
xor ebx [esp+0ACh+var_44] +
mov [esp+0ACh+var_18] ecx +
xor ecx esi +
mov [esp+0ACh+var_14] edx +
shr dx 8 +
mov [esp+0ACh+var_1C] edi +
mov edi [esp+0ACh+var_38] +
or ecx ebx +
mov [esp+0ACh+var_24] eax +
mov [esp+0ACh+var_10] edi +
jz loc_426E95  +
mov edx 1 +
mov byte ptr [esp+0ACh+var_14+1] dl +
mov eax [esp+0ACh+var_24] +
add ebp 1 +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [edx] eax +
mov eax [esp+0ACh+var_20] +
mov edi edx +
mov [edx+4] eax +
mov eax [esp+0ACh+var_1C] +
mov [edx+8] eax +
mov eax [esp+0ACh+var_18] +
mov [edx+0Ch] eax +
mov eax [esp+0ACh+var_14] +
mov ebx eax +
mov [edi+10h] eax +
mov eax [esp+0ACh+var_10] +
shr bx 8 +
or [esp+0ACh+var_4E] bl +
cmp ebp [esp+0ACh+var_7C] +
mov [edi+14h] eax +
jnz loc_426A19  +
cmp [esp+0ACh+var_4E] 0 +
jz loc_426CDE  +
test [esp+0ACh+arg_C] 1000000h +
jz loc_426F75  +
mov eax [esp+0ACh+arg_0] +
movzx ebx byte ptr [eax+10h] +
test bl bl +
jnz loc_426D8C  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+270h] 0 +
jnz loc_426EF0  +
mov eax [esp+0ACh+arg_0] +
mov ebx [esp+0ACh+arg_0] +
cmp [esp+0ACh+var_60] 40h +
mov ecx [esp+0ACh+var_60] +
mov edx [eax+4] +
mov esi [ebx+8] +
mov eax [eax] +
mov edi [ebx+0Ch] +
ja loc_426F37  +
sub ecx 1 +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
and esi 1 +
xor esi 1 +
mov eax esi +
and eax 1 +
test al al +
jnz loc_426D8C  +
cmp [esp+0ACh+var_78] 0Ah +
jnz loc_426D81  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+268h] 1 +
mov [esp+0ACh+var_A4] offset aIntegerConstan +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] eax +
call sub_41ECD0  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [eax+10h] 1 +
mov eax [esp+0ACh+arg_0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0ACh+var_64] +
movzx ecx bl +
xor ebx ebx +
mov esi edi +
imul esi edx +
mul  edi +
add edx esi +
add ecx eax +
mov eax [esp+0ACh+arg_0] +
adc ebx edx +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
jmp loc_426A0C  +
and ch 1 +
jz loc_4269EF  +
jmp loc_426A2D  +
mov [esp+0ACh+var_5C] 1 +
mov [esp+0ACh+var_54] 3Fh +
movzx ecx byte ptr [esp+0ACh+var_54] +
mov edi [esp+0ACh+var_80] +
mov esi [esp+0ACh+var_84] +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_426E01  +
mov esi edi +
xor edi edi +
mov ecx esi +
mov esi eax +
or ecx edi +
movzx ecx byte ptr [esp+0ACh+var_5C] +
mov edi edx +
setnz [esp+0ACh+var_4D]  +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_426E21  +
mov edi esi +
xor esi esi +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_426E3F  +
mov edi esi +
xor esi esi +
movzx ecx byte ptr [esp+0ACh+var_54] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_426E52  +
mov eax edx +
xor edx edx +
mov ecx esi +
or ecx eax +
mov eax edx +
or eax edi +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] eax +
mov ecx ebx +
xor eax eax +
xor ebx ebx +
xor edx edx +
jmp loc_426B25  +
mov ecx 1 +
jmp loc_426B74  +
mov [esp+0ACh+var_5C] 4 +
mov [esp+0ACh+var_54] 3Ch +
jmp loc_426DE6  +
mov ecx [esp+0ACh+var_6C] +
mov ebx [esp+0ACh+var_84] +
mov esi [esp+0ACh+var_80] +
xor eax ebx +
xor ecx esi +
or ecx eax +
mov eax 1 +
cmovnz edx eax +
jmp loc_426C54  +
add ebp 1 +
mov esi 0FFFFFFF9h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 8 +
mov [esp+0ACh+var_78] 8 +
jmp loc_42697D  +
movzx eax byte ptr [ebp+0] +
sub eax 30h +
mov [edi+8] eax +
sar eax 1Fh +
mov [edi+0Ch] eax +
jmp loc_426D8C  +
cmp byte ptr [eax+8] 0 +
jnz loc_426D8C  +
jmp loc_426D05  +
cmp [esp+0ACh+var_5C] ecx +
jbe loc_426B25  +
lea esi [esi+0] +
jmp loc_426B1F  +
add ebp 2 +
mov esi 0FFFFFFF1h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 10h +
mov [esp+0ACh+var_78] 10h +
jmp loc_42697D  +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_426D46  +
add ebp 2 +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 2 +
mov [esp+0ACh+var_78] 2 +
jmp loc_42697D  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A4] offset aIntegerConst_0 +
mov [esp+0ACh+var_A8] 2 +
mov [esp+0ACh+var_AC] eax +
call sub_41ECD0  +
jmp loc_426D8C  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+238h] +
mov ebx [esi+23Ch] +
mov [esp+10h+var_10] eax +
sub ebx eax +
sar ebx 3 +
imul edx ebx +
lea edi [edx+edx*4+32h] +
shl edi 4 +
mov [esp+10h+var_C] edi +
call sub_435F50  +
add edi eax +
mov [esi+238h] eax +
lea eax [eax+ebx*8] +
mov [esi+23Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1CCh +
mov eax [esp+1CCh+arg_4] +
mov [esp+1CCh+var_EC] 0 +
mov [esp+1CCh+var_127] 1 +
mov [esp+1CCh+var_126] 0 +
mov [esp+1CCh+var_110] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_138] 0 +
mov ebp [eax+238h] +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+0E8h] 0 +
mov dword ptr [ebp+24h] 16h +
lea eax [esp+1CCh+var_EC] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
add [esp+1CCh+var_138] 1 +
mov [esp+1CCh+var_1CC] eax +
call sub_41DB90  +
mov edi [esp+1CCh+var_EC] +
mov [esp+1CCh+var_150] edi +
movzx edx byte ptr [eax+4] +
mov [esp+1CCh+var_154] eax +
cmp dl 3Ch +
movzx eax dl +
ja loc_427F52  +
jmp ds:off_464BE4[eax*4]  +
cmp [esp+1CCh+var_127] 0 +
jz loc_4270F3  +
sub edx 25h +
cmp dl 17h +
mov [esp+1CCh+var_3C] 0 +
ja loc_428C92  +
movzx edx dl +
jmp ds:off_464CD8[edx*4]  +
cmp [esp+1CCh+var_127] 0 +
jnz loc_4285F0  +
movzx edx ds:byte_464DE1[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_428530  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1BC] offset aMissingBinaryO +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
lea esi [esi+0] +
xor eax eax +
add esp 1CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1CCh+var_127] 0 +
jz loc_4270DE  +
mov [esp+1CCh+var_178] 1Bh +
mov [esp+1CCh+var_17C] 1Bh +
mov eax [esp+1CCh+var_178] +
movzx edx ds:byte_464DE1[eax+eax] +
test dl 1 +
jnz loc_4271AE  +
mov eax [ebp+24h] +
mov edi eax +
jmp loc_42845B  +
cmp [esp+1CCh+var_138] 1 +
setz [esp+1CCh+var_126]  +
movzx edx ds:byte_464DE1[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_428430  +
mov [esp+1CCh+var_17C] eax +
cmp [esp+1CCh+var_127] 0 +
jz loc_4270F3  +
mov eax [ebp+24h] +
mov edi eax +
mov eax edi +
sub eax 1 +
cmp eax 1Bh +
ja loc_427F86  +
cmp [esp+1CCh+var_17C] 14h +
jz loc_427330  +
mov eax [esp+1CCh+var_178] +
shr dl 1 +
and edx 1 +
movzx eax ds:byte_464DE0[eax+eax] +
mov [esp+1CCh+var_180] eax +
movzx eax ds:byte_464DE0[edi+edi] +
sub [esp+1CCh+var_180] edx +
cmp [esp+1CCh+var_180] eax +
jnb loc_4272C3  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+25Dh] 0 +
jz loc_427223  +
test ds:byte_464DE1[edi+edi] 4 +
jnz loc_4284A1  +
cmp edi 1Ch +
ja loc_427F86  +
jmp ds:off_464D38[edi*4]  +
mov eax [ebp+8] +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
xor ecx [ebp-14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
xor edx [ebp-18h] +
mov esi [ebp-20h] +
mov ebx [ebp-1Ch] +
mov [esp+1CCh+var_174] eax +
xor eax eax +
or ecx edx +
jz loc_428810  +
mov edx eax +
xor edx 1 +
cmp edi 18h +
cmovz eax edx +
movzx eax al +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] eax +
mov dword ptr [ebp-14h] 0 +
mov eax [ebp+20h] +
lea ebx [ebp-28h] +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
cmp byte ptr [ebp-0Fh] 0 +
jz loc_4272AC  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jz loc_428542  +
mov edi [ebx+24h] +
mov ebp ebx +
movzx eax ds:byte_464DE0[edi+edi] +
cmp [esp+1CCh+var_180] eax +
jb loc_427205  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_4273C0  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingInExpre +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_427140  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_42961A  +
mov edx [ebp+8] +
mov [ebp-20h] edx +
mov edx [ebp+0Ch] +
mov [ebp-1Ch] edx +
mov edx [ebp+10h] +
mov [ebp-18h] edx +
mov edx [ebp+14h] +
mov [ebp-14h] edx +
mov edx [ebp+18h] +
mov [ebp-10h] edx +
mov edx [ebp+1Ch] +
mov [ebp-0Ch] edx +
mov edx [ebp+20h] +
mov [ebp-8] edx +
sub ebp 28h +
jz loc_427140  +
mov eax [esp+1CCh+var_178] +
sub eax 0Fh +
cmp eax 6 +
ja loc_427EE8  +
jmp ds:off_464DAC[eax*4]  +
mov eax [ebp-48h] +
lea ebx [ebp-50h] +
mov edx [ebp-44h] +
or eax [ebp-40h] +
or edx [ebp-3Ch] +
or edx eax +
jz loc_428605  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [ebp-20h] +
mov [ebp-48h] eax +
mov eax [ebp-1Ch] +
mov [ebp-44h] eax +
mov eax [ebp-18h] +
mov [ebp-40h] eax +
mov eax [ebp-14h] +
mov [ebp-3Ch] eax +
mov eax [ebp-10h] +
mov [ebp-38h] eax +
mov eax [ebp-0Ch] +
mov [ebp-34h] eax +
mov eax [ebp-8] +
mov [ebp-30h] eax +
cmp byte ptr [ebp-10h] 0 +
mov eax 1 +
jnz loc_4273A2  +
movzx eax byte ptr [ebp+18h] +
mov [ebp-38h] al +
jmp loc_4272AC  +
mov eax [esp+1CCh+var_17C] +
sub eax 12h +
cmp eax 1 +
ja loc_4295F6  +
cmp [esp+1CCh+var_17C] 16h +
jnz loc_427330  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+0E8h] +
test eax eax +
jz loc_4273F8  +
cmp [esp+1CCh+var_126] 0 +
jz loc_4295C6  +
cmp [esp+1CCh+var_138] 3 +
jnz loc_4295C6  +
mov eax [esp+1CCh+arg_0] +
cmp [eax+238h] ebp +
jz loc_4298DB  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov edx offset aElif +
mov eax offset aIf +
cmovz eax edx +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1BC] offset aUnbalancedStac +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
add esp 1CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jz loc_428634  +
mov eax [esp+1CCh+arg_0] +
xor edx edx +
sub dword ptr [eax+14h] 1 +
mov eax 1 +
mov [ebp-18h] eax +
mov eax [ebp+20h] +
mov [ebp-14h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_4272AC  +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_428650  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
xor eax eax +
xor edx edx +
jmp loc_427489  +
mov eax [ebp+8] +
movzx edx byte ptr [ebp+18h] +
cmp byte ptr [ebp-10h] 0 +
mov ebx [ebp+10h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
mov esi [ebp-18h] +
mov ecx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_16C] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_164] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_15C] eax +
mov eax 1 +
cmovz eax edx +
cmp edi 9 +
jz loc_4287F1  +
cmp edi 0Ah +
jz loc_429260  +
xor ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
xor ecx [esp+1CCh+var_16C] +
xor edx [esp+1CCh+var_164] +
xor esi [esp+1CCh+var_174] +
mov [ebp-10h] al +
mov eax [ebp+20h] +
mov [ebp-18h] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] edx +
mov [ebp-1Ch] esi +
mov [ebp-14h] ecx +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_427294  +
mov eax [ebp+10h] +
cmp edi 1Bh +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
mov esi [ebp+8] +
mov [esp+1CCh+var_C4] eax +
mov eax [ebp+14h] +
mov ebx [ebp+0Ch] +
mov [esp+1CCh+var_18C] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_188] ecx +
movzx ecx byte ptr [ebp+19h] +
mov [esp+1CCh+var_C0] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_BC] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_B8] eax +
jz loc_429165  +
cmp edi 1Ch +
jz loc_429072  +
cmp edi 0Eh +
jz loc_428CB0  +
mov eax [esp+1CCh+var_18C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_188] 0 +
or esi eax +
xor eax eax +
or ebx edx +
or esi ebx +
setz al  +
xor ecx ecx +
mov [esp+1CCh+var_18C] eax +
xor edx edx +
xor esi esi +
xor ebx ebx +
mov [ebp-20h] esi +
mov edi [esp+1CCh+var_188] +
mov esi [esp+1CCh+var_18C] +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-14h] edi +
mov [ebp-18h] esi +
mov [ebp-10h] dl +
mov [ebp-0Fh] cl +
mov [ebp-8] eax +
jmp loc_427294  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
movzx ebx byte ptr [ebp-10h] +
mov esi [ebp+20h] +
mov [esp+1CCh+var_6C] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_170] edx +
mov edx [ebp-14h] +
test bl bl +
mov [esp+1CCh+var_68] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_64] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_60] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_5C] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_58] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_16C] eax +
movzx eax byte ptr [ebp-0Fh] +
mov byte ptr [esp+1CCh+var_14C] al +
mov eax [ebp+8] +
mov [esp+1CCh+var_54] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_50] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_4C] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_48] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_44] eax +
mov eax [ebp+1Ch] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_40] eax +
mov eax [ebp+8] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp+18h] +
jnz loc_427FB0  +
test al al +
jnz loc_427FB0  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+294h] +
cmp eax 40h +
mov [esp+1CCh+var_15C] eax +
jbe loc_428F15  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_170] +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_174] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_42772B  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jz loc_428F49  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_428EF0  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_42776A  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx ecx byte ptr [esp+1CCh+var_130] +
test al al +
mov byte ptr [esp+1CCh+var_12C] 0 +
mov [esp+1CCh+var_125] cl +
jnz loc_427FD9  +
mov edx [esp+1CCh+var_18C] +
mov eax ecx +
mov ecx [esp+1CCh+var_188] +
xor eax 1 +
mov [esp+1CCh+var_125] al +
mov byte ptr [esp+1CCh+var_44] 0 +
mov eax edx +
mov [esp+1CCh+var_50] ecx +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_48] ecx +
mov ecx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_18C] edx +
mov [esp+1CCh+var_4C] edx +
mov [esp+1CCh+var_1B4] ecx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_54] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_50] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_50] +
mov [esp+1CCh+var_4C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_48] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_48] +
mov [esp+1CCh+var_44] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_40] eax +
mov eax [esp+1CCh+var_54] +
mov ecx edx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_4C] +
mov [esp+1CCh+var_164] eax +
mov eax [esp+1CCh+var_18C] +
or ecx eax +
jnz loc_427FEB  +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
mov ecx edx +
or ecx eax +
jz loc_428822  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_4293BF  +
lea ecx [eax-41h] +
sub eax 1 +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_164] +
xor eax eax +
xor edx edx +
mov esi [esp+1CCh+var_160] +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
and ebx eax +
and esi edx +
or esi ebx +
jnz loc_427939  +
mov [esp+1CCh+var_13C] ebp +
mov ebp [esp+1CCh+var_160] +
mov [esp+1CCh+var_134] edi +
mov edi [esp+1CCh+var_164] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_427916  +
mov ebp [esp+1CCh+var_13C] +
mov edi [esp+1CCh+var_134] +
mov eax [esp+1CCh+var_114] +
sub eax ecx +
mov ecx eax +
jmp loc_428079  +
mov [esp+1CCh+var_19C] edi +
mov eax [ebp+8] +
lea ebx [ebp-28h] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1B4] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_1B0] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_1AC] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_1A8] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_1A4] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_1A0] eax +
mov eax [ebx+8] +
mov [esp+1CCh+var_1CC] eax +
mov eax [ebx+0Ch] +
mov [esp+1CCh+var_1C8] eax +
mov eax [ebx+10h] +
mov [esp+1CCh+var_1C4] eax +
mov eax [ebx+14h] +
mov [esp+1CCh+var_1C0] eax +
mov eax [ebx+18h] +
mov [esp+1CCh+var_1BC] eax +
mov eax [ebx+1Ch] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424BB0  +
mov eax [esp+1CCh+var_10C] +
mov [ebx+8] eax +
mov eax [esp+1CCh+var_108] +
mov [ebx+0Ch] eax +
mov eax [esp+1CCh+var_104] +
mov [ebx+10h] eax +
mov eax [esp+1CCh+var_100] +
mov [ebx+14h] eax +
mov eax [esp+1CCh+var_FC] +
mov [ebx+18h] eax +
mov eax [esp+1CCh+var_F8] +
mov [ebx+1Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_427294  +
mov eax [esp+1CCh+arg_0] +
mov edx [ebp-1Ch] +
mov eax [eax+294h] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_160] edx +
mov edx [ebp+8] +
mov [esp+1CCh+var_B4] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_9C] edx +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_B0] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_98] edx +
mov edx [ebp+10h] +
mov [esp+1CCh+var_AC] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_94] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_A8] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_90] edx +
mov edx [ebp+18h] +
mov [esp+1CCh+var_A4] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_A0] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_8C] edx +
mov edx [ebp+1Ch] +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test al al +
mov [esp+1CCh+var_88] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_15C] esi +
mov esi [ebp+10h] +
mov [esp+1CCh+var_158] edi +
mov edi [ebp+14h] +
jnz loc_427AD1  +
test dl dl +
jz loc_428873  +
mov byte ptr [esp+1CCh+var_14C] 1 +
mov byte ptr [esp+1CCh+var_134] 1 +
mov byte ptr [esp+1CCh+var_13C] 0 +
mov edx [esp+1CCh+var_188] +
xor ebx ebx +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_427B08  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_158] +
mov ebx eax +
or ebx edx +
setnz bl  +
mov edx [esp+1CCh+var_164] +
lea eax [esp+1CCh+var_84] +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] edi +
call sub_424AC0  +
mov eax [esp+1CCh+var_84] +
mov edx [esp+1CCh+var_80] +
mov ecx [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C8] edi +
lea edi [esp+1CCh+var_24] +
mov [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_168] edx +
mov edx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_12C] ecx +
mov ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_130] eax +
mov eax edi +
call sub_424AC0  +
mov eax [esp+1CCh+var_20] +
mov edx 1 +
or eax [esp+1CCh+var_24] +
mov eax [esp+1CCh+var_15C] +
mov ecx [esp+1CCh+var_160] +
cmovnz ebx edx +
mov edx [esp+1CCh+var_158] +
mov esi [esp+1CCh+var_1C] +
mov [esp+1CCh+var_1CC] eax +
lea eax [esp+1CCh+var_24] +
mov edi [esp+1CCh+var_18] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_164] +
call sub_424AC0  +
mov eax [esp+1CCh+var_1C] +
add [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_20] +
mov edx [esp+1CCh+var_18] +
adc [esp+1CCh+var_168] edx +
add [esp+1CCh+var_16C] esi +
adc [esp+1CCh+var_168] edi +
mov edi eax +
or edi [esp+1CCh+var_24] +
mov edi 1 +
mov esi [esp+1CCh+var_16C] +
cmovnz ebx edi +
mov edi [esp+1CCh+var_168] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_80] edi +
mov eax [esp+1CCh+var_80] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1B4] edi +
lea edi [esp+1CCh+var_10C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
mov eax edi +
call sub_424250  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_12C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
xor ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_130] +
xor eax [esp+1CCh+var_18C] +
or eax ecx +
jz loc_4287D2  +
mov ebx 1 +
cmp byte ptr [esp+1CCh+var_13C] 0 +
jnz loc_428700  +
xor edx edx +
cmp byte ptr [esp+1CCh+var_134] 0 +
jnz loc_427D6D  +
test bl bl +
mov eax 1 +
jnz loc_427D6B  +
cmp [esp+1CCh+var_174] 40h +
mov ecx [esp+1CCh+var_174] +
ja loc_428C86  +
mov eax [esp+1CCh+var_18C] +
sub ecx 1 +
mov edx [esp+1CCh+var_188] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
xor eax eax +
and ecx 1 +
xor ecx 1 +
mov ebx ecx +
movzx ecx byte ptr [esp+1CCh+var_13C] +
and ebx 1 +
xor ecx 1 +
cmp cl bl +
jz loc_427D6B  +
mov eax [esp+1CCh+var_18C] +
mov ebx esi +
mov ecx edi +
mov edx [esp+1CCh+var_188] +
or ebx eax +
or ecx edx +
or ebx ecx +
setnz al  +
mov edx eax +
movzx eax byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] esi +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_80] edi +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_74+1] dl +
mov byte ptr [esp+1CCh+var_74] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_78] ebx +
lea ebx [ebp-28h] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_7C] ecx +
mov [ebp-20h] eax +
mov eax [esp+1CCh+var_80] +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
mov eax [esp+1CCh+var_78] +
mov [ebp-14h] eax +
mov eax [esp+1CCh+var_74] +
mov [ebp-10h] eax +
mov eax [esp+1CCh+var_70] +
mov [ebp-0Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_427294  +
mov eax [ebp+10h] +
mov ebx [ebp-20h] +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_16C] ebx +
mov ebx [ebp-1Ch] +
mov esi [ebp+14h] +
mov [esp+1CCh+var_15C] ecx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_164] ebx +
mov ebx [ebp-18h] +
mov [esp+1CCh+var_13C] edx +
mov eax [eax+294h] +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [ebp+18h] +
mov [esp+1CCh+var_1C0] ecx +
mov ecx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1BC] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1B4] esi +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B8] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_1CC] ebx +
mov [esp+1CCh+var_1C8] ecx +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
call sub_425BC0  +
cmp edi 19h +
jz loc_4286B3  +
cmp edi 3 +
jz loc_4286B0  +
cmp edi 2 +
jz loc_429280  +
xor ecx ecx +
test al al +
mov edx 1 +
jz loc_427EAA  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
jz loc_429665  +
xor edx edx +
xor ecx ecx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] edx +
mov [ebp-14h] ecx +
jmp loc_427283  +
cmp dword ptr [ebp+24h] 11h +
jnz loc_4297AD  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_427F30  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [esp+1CCh+arg_0] +
add ebp 28h +
cmp ebp [eax+23Ch] +
jz loc_4291B3  +
mov eax [esp+1CCh+var_17C] +
mov [esp+1CCh+var_127] 1 +
mov [ebp+24h] eax +
mov eax [esp+1CCh+var_154] +
mov [ebp+0] eax +
mov eax [esp+1CCh+var_150] +
mov [ebp+20h] eax +
jmp loc_427053  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_427EE8  +
mov eax [esp+1CCh+arg_0] +
add dword ptr [eax+14h] 1 +
jmp loc_427EE8  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_427F30  +
jmp loc_427EE8  +
lea edx [eax-1] +
cmp edx 19h +
jbe loc_427195  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1BC] offset aTokenSIsNotVal +
mov [esp+1CCh+var_1B8] eax +
jmp loc_427116  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] edi +
mov [esp+1CCh+var_1C4] offset aImpossibleOper +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_427140  +
mov eax [esp+1CCh+arg_0] +
mov byte ptr [esp+1CCh+var_12C] 1 +
mov byte ptr [esp+1CCh+var_130] 0 +
mov [esp+1CCh+var_125] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_15C] eax +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_4278B1  +
mov eax [esp+1CCh+var_15C] +
xor edx edx +
mov ebx [esp+1CCh+var_18C] +
lea esi [eax-1] +
lea ecx [eax-41h] +
xor eax eax +
mov [esp+1CCh+var_13C] esi +
mov esi [esp+1CCh+var_188] +
test cl 20h +
setnz dl  +
setz al  +
shl edx cl +
shl eax cl +
mov ecx ebx +
and esi edx +
and ecx eax +
mov ebx esi +
or ebx ecx +
jnz loc_4296B0  +
mov [esp+1CCh+var_134] ebp +
mov ecx [esp+1CCh+var_13C] +
mov [esp+1CCh+var_124] edi +
mov ebp [esp+1CCh+var_188] +
mov edi [esp+1CCh+var_18C] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_428042  +
mov eax [esp+1CCh+var_13C] +
mov ebp [esp+1CCh+var_134] +
mov edi [esp+1CCh+var_124] +
mov esi eax +
sub esi ecx +
mov ecx esi +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_44] 1 +
mov [esp+1CCh+var_1B0] ecx +
mov eax ebx +
mov [esp+1CCh+var_50] esi +
mov esi [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] ebx +
mov ebx [esp+1CCh+var_164] +
mov [esp+1CCh+var_164] ecx +
mov [esp+1CCh+var_48] esi +
mov esi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_4C] ebx +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_24] +
call sub_424760  +
mov eax [esp+1CCh+var_1C] +
mov ebx [esp+1CCh+var_24] +
mov esi [esp+1CCh+var_20] +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_18C] eax +
movzx eax byte ptr [esp+1CCh+var_14] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_124] ebp +
mov [esp+1CCh+var_120] edi +
mov edi esi +
mov esi ebx +
mov byte ptr [esp+1CCh+var_13C] al +
mov eax 1 +
mov ebx ecx +
mov [esp+1CCh+var_188] edx +
mov ebp eax +
mov [esp+1CCh+var_164] 0 +
mov [esp+1CCh+var_160] 0 +
mov [esp+1CCh+var_11C] 0 +
mov [esp+1CCh+var_118] 0 +
jmp loc_4281A6  +
test ebx ebx +
jz loc_4283C6  +
mov edx [esp+1CCh+var_188] +
mov ecx esi +
sub ebx 1 +
mov eax [esp+1CCh+var_18C] +
shl ecx 1Fh +
shrd esi edi +
shr edi 1 +
shrd eax edx +
shr edx 1 +
or ecx edx +
mov [esp+1CCh+var_18C] eax +
mov [esp+1CCh+var_188] ecx +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1C0] esi +
mov [esp+1CCh+var_1BC] edi +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [esp+1CCh+var_13C] +
mov [esp+1CCh+var_1B4] edx +
mov edx [esp+1CCh+var_168] +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_170] +
mov [esp+1CCh+var_1B8] eax +
mov eax ebp +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_174] +
call sub_425BC0  +
test al al +
jz loc_428178  +
mov edx [esp+1CCh+var_170] +
mov ecx [esp+1CCh+var_168] +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_68] edx +
mov edx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_60] ecx +
mov ecx ebp +
mov ebp [esp+1CCh+var_20] +
mov byte ptr [esp+1CCh+var_5C] cl +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] eax +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_64] edx +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B0] ebp +
mov [esp+1CCh+var_18] edx +
mov ecx [esp+1CCh+var_18] +
mov edx [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C] eax +
mov [esp+1CCh+var_1AC] eax +
mov [esp+1CCh+var_1A8] ecx +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_19C] 5 +
mov [esp+1CCh+var_1A4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1A0] ecx +
mov [esp+1CCh+var_1C8] edx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424BB0  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_58] edx +
mov edx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] edx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ecx +
mov edx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ecx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_5C] eax +
mov ebp eax +
shr ax 8 +
cmp ebx 3Fh +
mov [esp+1CCh+var_168] ecx +
mov [esp+1CCh+var_14C] ax +
ja loc_429BBC  +
mov ecx ebx +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_164] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_160] +
or ecx edx +
mov edx [esp+1CCh+var_134] +
test ebx ebx +
mov [esp+1CCh+var_160] ecx +
mov [esp+1CCh+var_164] edx +
jnz loc_428180  +
mov edi [esp+1CCh+var_120] +
mov ebp [esp+1CCh+var_124] +
cmp edi 7 +
jz loc_4291C2  +
xor esi esi +
movzx ecx byte ptr [esp+1CCh+var_12C] +
cmp byte ptr [esp+1CCh+var_130] 0 +
jnz loc_4292B0  +
mov edi ecx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov [ebp-18h] eax +
mov eax edi +
mov [ebp-10h] al +
mov eax esi +
mov [ebp-0Fh] al +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] ecx +
mov [ebp-14h] edx +
mov [ebp-8] eax +
jmp loc_427294  +
cmp [esp+1CCh+var_127] 0 +
jz loc_428530  +
cmp eax 15h +
jz loc_4286C0  +
mov eax [esp+1CCh+var_178] +
cmp eax 16h +
jz loc_4286E0  +
mov edi [ebp+24h] +
mov [esp+1CCh+var_17C] eax +
mov eax edi +
and eax 0FFFFFFFDh +
cmp eax 14h +
jnz loc_429774  +
mov eax [esp+1CCh+var_17C] +
sub eax 15h +
cmp eax 1 +
jbe loc_4271C1  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1BC] offset aOperatorSHasNo +
mov [esp+1CCh+var_1B8] eax +
jmp loc_427116  +
movzx eax byte ptr [ebp+18h] +
cmp al [ebp-10h] +
jz loc_427223  +
test al al +
mov eax [esp+1CCh+arg_0] +
mov ecx [eax+294h] +
jz loc_428560  +
cmp ecx 40h +
mov ebx [ebp-20h] +
mov esi [ebp-1Ch] +
mov eax [ebp-18h] +
mov edx [ebp-14h] +
jbe loc_428690  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_427223  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov edx [ebp-8] +
mov [esp+1CCh+var_1BC] offset aTheLeftOperand +
mov [esp+1CCh+var_1B8] eax +
jmp loc_4285C1  +
mov eax [ebp+24h] +
mov edi eax +
mov eax [esp+1CCh+var_178] +
mov [esp+1CCh+var_17C] eax +
jmp loc_4271C1  +
mov [esp+1CCh+var_1C4] offset aIntegerOverflo +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_4272AC  +
cmp ecx 40h +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
jbe loc_428670  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_427223  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1BC] offset aTheRightOperan +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 0 +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
mov edi [ebp+24h] +
jmp loc_427223  +
mov [esp+1CCh+var_178] 1Ch +
mov [esp+1CCh+var_17C] 1Ch +
jmp loc_42716A  +
mov eax [ebp+8] +
mov [ebp-48h] eax +
mov eax [ebp+0Ch] +
mov [ebp-44h] eax +
mov eax [ebp+10h] +
mov [ebp-40h] eax +
mov eax [ebp+14h] +
mov [ebp-3Ch] eax +
mov eax [ebp+18h] +
mov [ebp-38h] eax +
mov eax [ebp+1Ch] +
mov [ebp-34h] eax +
mov eax [ebp+20h] +
mov [ebp-30h] eax +
jmp loc_427393  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or edx [ebp+10h] +
or eax [ebp+14h] +
or edx eax +
setnz al  +
xor edx edx +
movzx eax al +
jmp loc_427489  +
mov ecx [ebp+8] +
xor edx edx +
mov eax 1 +
mov esi [ebp+0Ch] +
or ecx [ebp+10h] +
or esi [ebp+14h] +
or esi ecx +
jnz loc_427489  +
jmp loc_4274D2  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_428594  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4284F7  +
xor eax 1 +
movzx eax al +
xor ecx ecx +
mov edx eax +
jmp loc_427EAA  +
mov eax [ebp+24h] +
cmp eax 14h +
mov edi eax +
jz loc_429A00  +
mov [esp+1CCh+var_17C] 15h +
jmp loc_42845B  +
mov eax [ebp+24h] +
cmp eax 16h +
mov edi eax +
jz loc_429A0D  +
mov [esp+1CCh+var_17C] 16h +
jmp loc_42845B  +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_84] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_80] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
jmp loc_427CFE  +
mov ecx [esp+1CCh+var_168] +
mov edx [esp+1CCh+var_16C] +
mov eax ecx +
mov ecx edx +
xor eax edi +
xor ecx esi +
or eax ecx +
mov eax 1 +
cmovnz ebx eax +
jmp loc_427CF0  +
and ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
and ecx [esp+1CCh+var_16C] +
and edx [esp+1CCh+var_164] +
and esi [esp+1CCh+var_174] +
jmp loc_42753C  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
setz al  +
jmp loc_42725D  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jnz loc_428854  +
mov [esp+1CCh+var_1BC] offset aDivisionByZero +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
mov edi ebx +
movzx esi byte ptr [esp+1CCh+var_14C] +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
jmp loc_428407  +
cmp [esp+1CCh+var_174] 40h +
jbe loc_428DB0  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jz loc_428DE3  +
cmp [esp+1CCh+var_174] 40h +
mov eax [esp+1CCh+var_174] +
jbe loc_428D90  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_158] +
mov eax [esp+1CCh+var_15C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_14C] 0 +
mov byte ptr [esp+1CCh+var_134] 0 +
jnz loc_427AE9  +
mov [esp+1CCh+var_90] edi +
mov eax [esp+1CCh+var_90] +
mov ebx [esp+1CCh+var_158] +
mov byte ptr [esp+1CCh+var_8C] 0 +
mov ecx [esp+1CCh+var_15C] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_8C] +
mov [esp+1CCh+var_98] ebx +
mov edx [esp+1CCh+var_98] +
xor byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_88] +
mov [esp+1CCh+var_94] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] ecx +
mov [esp+1CCh+var_1CC] ecx +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_98] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_98] +
mov [esp+1CCh+var_94] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_158] edx +
mov esi [esp+1CCh+var_94] +
mov [esp+1CCh+var_90] eax +
mov eax [esp+1CCh+var_FC] +
mov edi [esp+1CCh+var_90] +
mov [esp+1CCh+var_8C] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_88] eax +
mov eax [esp+1CCh+var_9C] +
mov [esp+1CCh+var_15C] eax +
movzx eax byte ptr [esp+1CCh+var_134] +
mov byte ptr [esp+1CCh+var_14C] al +
jmp loc_427AE9  +
lea eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_1C0] eax +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4169A0  +
mov esi [esp+1CCh+var_3C] +
xor edx edx +
test esi esi +
mov ecx eax +
jnz loc_429423  +
test ecx ecx +
js loc_4297C6  +
xor ebx ebx +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_428BC1  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C4] 0 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_425F00  +
test eax 1000000h +
mov [esp+1CCh+var_E8] eax +
jnz loc_429685  +
mov edx eax +
and edx 0Fh +
cmp edx 1 +
jz loc_42964F  +
cmp edx 2 +
jnz loc_428AD3  +
mov [esp+1CCh+var_1BC] offset aFloatingConsta +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
mov edi [esp+1CCh+var_3C] +
test edi edi +
setnz bl  +
jmp loc_428B69  +
mov eax [esp+1CCh+var_154] +
mov edi [esp+1CCh+arg_0] +
mov eax [eax+8] +
cmp eax [edi+2ACh] +
jz loc_4298F1  +
mov edi [esp+1CCh+arg_0] +
cmp eax [edi+2BCh] +
jz loc_42979B  +
mov edi [esp+1CCh+arg_0] +
mov ecx 1 +
cmp eax [edi+2C0h] +
jz loc_42979D  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+248h] 0 +
jz loc_428B53  +
mov edx [edi+2B0h] +
cmp eax edx +
jz loc_4295DC  +
cmp eax [edi+2B4h] +
jz loc_4295DC  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+265h] 0 +
jnz loc_429436  +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor eax eax +
xor edx edx +
xor esi esi +
xor edi edi +
jmp loc_428BC1  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_4293CE  +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41A000  +
mov edi [esp+1CCh+var_3C] +
xor edx edx +
mov eax [esp+1CCh+var_E8] +
mov byte ptr [esp+1CCh+var_18C] 0 +
test edi edi +
setnz bl  +
xor esi esi +
xor edi edi +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_14] bl +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_1C] eax +
mov byte ptr [esp+1CCh+var_14+1] cl +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_18] edx +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_D4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_D0] ecx +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov [esp+1CCh+var_18C] eax +
mov eax edx +
mov edx esi +
mov esi edi +
mov [esp+1CCh+var_E0] esi +
mov esi [esp+1CCh+var_18C] +
mov edi edx +
mov [esp+1CCh+var_D8] eax +
mov eax [esp+1CCh+var_E0] +
mov byte ptr [esp+1CCh+var_D4] bl +
mov byte ptr [esp+1CCh+var_D4+1] cl +
mov [esp+1CCh+var_E4] edx +
mov [ebp+0Ch] eax +
mov eax [esp+1CCh+var_D8] +
mov [esp+1CCh+var_DC] esi +
mov [ebp+8] edi +
mov [ebp+10h] esi +
mov [ebp+14h] eax +
mov eax [esp+1CCh+var_D4] +
mov [esp+1CCh+var_127] 0 +
mov [ebp+18h] eax +
mov eax [esp+1CCh+var_D0] +
mov [ebp+1Ch] eax +
jmp loc_427053  +
sub ecx 41h +
mov eax esi +
mov edx edi +
jmp loc_427D2D  +
mov [esp+1CCh+var_1C4] offset aEval_token +
mov [esp+1CCh+var_1C8] 4A2h +
mov [esp+1CCh+var_1CC] offset a____GccLibcp_1 +
call sub_405910  +
nop   +
mov edi [esp+1CCh+arg_0] +
not ebx  +
not esi  +
mov [esp+1CCh+var_174] ebx +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_16C] ebp +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov edx [esp+1CCh+var_BC] +
not ebx  +
mov [esp+1CCh+var_1CC] esi +
mov esi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] ebx +
mov ebp edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B4] ebp +
mov [esp+1CCh+var_1C8] esi +
mov [esp+1CCh+var_1BC] edx +
not edi  +
mov [esp+1CCh+var_1C4] edi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424250  +
mov eax [esp+1CCh+var_104] +
xor ecx ecx +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov edx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov edi [esp+1CCh+var_C4] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov ebp [esp+1CCh+var_C0] +
mov [esp+1CCh+var_BC] edx +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_B8] eax +
mov [esp+1CCh+var_188] ebp +
mov ebp [esp+1CCh+var_16C] +
jmp loc_4275F4  +
lea ecx [eax-1] +
mov edx edi +
mov eax esi +
shrd eax edi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4288DF  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_160] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jnz loc_4288B1  +
mov ebx [esp+1CCh+var_188] +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_A4] 0 +
mov [esp+1CCh+var_B0] ebx +
mov ebx [esp+1CCh+var_160] +
mov edx ecx +
mov [esp+1CCh+var_B4] ecx +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_A8] ebx +
mov eax [esp+1CCh+var_A8] +
mov ebx [esp+1CCh+var_174] +
mov [esp+1CCh+var_AC] ecx +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_A4] +
mov [esp+1CCh+var_1B4] ebx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_A0] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_B4] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_B0] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_AC] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_A8] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_A8] +
mov [esp+1CCh+var_A4] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_A0] eax +
mov eax [esp+1CCh+var_B4] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_AC] +
mov [esp+1CCh+var_164] eax +
jmp loc_4288B1  +
lea ecx [eax-1] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_428F07  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_427773  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_168] +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_16C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_428F30  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jnz loc_427744  +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov byte ptr [esp+1CCh+var_5C] 0 +
mov edx ecx +
mov [esp+1CCh+var_6C] ecx +
mov ecx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_68] ebx +
mov ebx [esp+1CCh+var_168] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov eax ecx +
mov [esp+1CCh+var_60] ebx +
mov ebx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] ecx +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1B4] ebx +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov byte ptr [esp+1CCh+var_130] 1 +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov ecx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_58] edx +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ebx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] ecx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ebx +
mov ecx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ebx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_5C] eax +
mov [esp+1CCh+var_168] ebx +
mov ebx eax +
shr ax 8 +
mov [esp+1CCh+var_14C] ax +
jmp loc_427744  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_16C] ebp +
mov ebp [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov [esp+1CCh+var_C0] ebp +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_174] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C0] edx +
mov edx [esp+1CCh+var_BC] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_C4] edi +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1BC] edx +
mov [esp+1CCh+var_1B4] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C4] edi +
call sub_424300  +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_FC] +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_BC] ecx +
mov ebp [esp+1CCh+var_16C] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_B8] eax +
mov eax [esp+1CCh+var_C4] +
mov [esp+1CCh+var_188] edx +
mov edx ecx +
shr cx 8 +
mov [esp+1CCh+var_18C] eax +
jmp loc_4275F4  +
mov eax [esp+1CCh+arg_0] +
xor ecx ecx +
cmp byte ptr [eax+25Ah] 0 +
jz loc_4275F4  +
mov edi [eax+14h] +
test edi edi +
jnz loc_4275F4  +
mov [esp+1CCh+var_1C4] offset aTraditionalC_0 +
mov [esp+1CCh+var_1C8] 6 +
mov [esp+1CCh+var_1CC] eax +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_174] edx +
call sub_41ED10  +
mov edx [esp+1CCh+var_174] +
mov ecx [esp+1CCh+var_16C] +
jmp loc_4275F4  +
mov [esp+1CCh+var_1CC] eax +
call sub_426FA0  +
mov ebp eax +
jmp loc_427EFE  +
movzx ebx byte ptr [esp+1CCh+var_12C] +
xor ecx ecx +
test bl bl +
jnz loc_42923D  +
cmp [esp+1CCh+var_125] 0 +
jnz loc_4294AE  +
cmp [esp+1CCh+var_15C] 40h +
ja loc_429480  +
movzx ecx byte ptr [esp+1CCh+var_114] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx edx [esp+1CCh+var_125] +
xor ecx ecx +
xor edx 1 +
cmp dl al +
jz loc_42923D  +
mov edx [esp+1CCh+var_164] +
mov esi [esp+1CCh+var_11C] +
mov edi [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_160] +
or edx esi +
or eax edi +
or edx eax +
setnz cl  +
mov esi ecx +
mov edi ebx +
mov eax [esp+1CCh+var_164] +
mov edx [esp+1CCh+var_160] +
mov ecx [esp+1CCh+var_11C] +
mov ebx [esp+1CCh+var_118] +
jmp loc_428407  +
or ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
or ecx [esp+1CCh+var_16C] +
or edx [esp+1CCh+var_164] +
or esi [esp+1CCh+var_174] +
jmp loc_42753C  +
xor edx edx +
xor ecx ecx +
test al al +
jz loc_427EAA  +
mov eax [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
xor eax esi +
or eax ebx +
jz loc_4296C5  +
mov edx 1 +
xor ecx ecx +
jmp loc_427EAA  +
mov edi [esp+1CCh+var_170] +
mov esi [esp+1CCh+var_174] +
mov byte ptr [esp+1CCh+var_5C] cl +
mov byte ptr [esp+1CCh+var_5C+1] 0 +
mov [esp+1CCh+var_68] edi +
mov edi [esp+1CCh+var_168] +
mov edx esi +
mov [esp+1CCh+var_6C] esi +
mov esi [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_60] edi +
mov eax [esp+1CCh+var_60] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov esi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_5C] esi +
mov ecx esi +
shr si 8 +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] edx +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_60] +
mov [esp+1CCh+var_58] eax +
mov eax [esp+1CCh+var_6C] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_174] eax +
mov eax [esp+1CCh+var_64] +
mov [esp+1CCh+var_16C] eax +
jmp loc_4283F5  +
lea ecx [eax-1] +
mov [esp+1CCh+var_114] ecx +
jmp loc_4278DF  +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4296E5  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+254h] 0 +
jz loc_428B89  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAreA +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 1 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EE20  +
jmp loc_428B89  +
mov ebx 1 +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_428BC1  +
mov edx [edi+14h] +
test edx edx +
jnz loc_428B67  +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aSIsNotDefinedE +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 0Dh +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C4] eax +
call sub_41EE20  +
mov eax [esp+1CCh+var_3C] +
test eax eax +
setnz bl  +
jmp loc_428B69  +
mov ecx [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_11C] +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_42920D  +
mov edi [esp+1CCh+var_118] +
mov esi [esp+1CCh+var_11C] +
mov byte ptr [esp+1CCh+var_2C] 0 +
mov byte ptr [esp+1CCh+var_2C+1] 0 +
mov [esp+1CCh+var_38] edi +
mov edi [esp+1CCh+var_160] +
mov edx esi +
mov [esp+1CCh+var_3C] esi +
mov esi [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_30] edi +
mov eax [esp+1CCh+var_30] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_34] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_2C] +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_28] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424300  +
mov eax [esp+1CCh+var_10C] +
mov edi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_3C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_2C] edi +
mov ebx edi +
mov [esp+1CCh+var_38] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_34] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_118] edx +
mov [esp+1CCh+var_30] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_30] +
mov [esp+1CCh+var_28] eax +
mov eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_11C] eax +
mov eax [esp+1CCh+var_34] +
mov [esp+1CCh+var_164] eax +
jmp loc_4291DE  +
mov eax [esp+1CCh+arg_0] +
mov dword ptr [eax+0E8h] 0 +
jmp loc_4273F8  +
cmp eax edx +
setz al  +
xor edx edx +
movzx eax al +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor esi esi +
xor edi edi +
jmp loc_428BC1  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset a?WithoutFollow +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_427140  +
mov eax [ebp+0] +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aMissingInExp_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
jmp loc_427140  +
test ah 20h +
jz loc_429719  +
mov [esp+1CCh+var_1BC] offset aImaginaryNumbe +
jmp loc_428AAC  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_427EA6  +
jmp loc_427EAA  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aUserDefinedLit +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
mov eax [esp+1CCh+var_E8] +
jmp loc_428A91  +
mov eax [esp+1CCh+var_13C] +
xor ecx ecx +
mov [esp+1CCh+var_114] eax +
jmp loc_428079  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_42929E  +
jmp loc_427EAA  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAr_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41EDD0  +
jmp loc_428B89  +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
lea edx [esp+1CCh+var_E4] +
mov [esp+1CCh+var_1CC] edx +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] eax +
call sub_4268C0  +
mov eax [esp+1CCh+var_DC] +
mov edx [esp+1CCh+var_E4] +
mov esi [esp+1CCh+var_E0] +
movzx ebx byte ptr [esp+1CCh+var_D4] +
mov [esp+1CCh+var_18C] eax +
movzx ecx byte ptr [esp+1CCh+var_D4+1] +
mov eax [esp+1CCh+var_D8] +
jmp loc_428C1B  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1BC] offset aOperatorSHas_0 +
mov [esp+1CCh+var_1B8] eax +
jmp loc_427116  +
xor ecx ecx +
mov edx edi +
lea eax [esp+1CCh+var_E4] +
call sub_425420  +
jmp loc_42973F  +
mov [esp+1CCh+var_1BC] offset aWithoutPrecedi +
mov [esp+1CCh+var_1C0] 0 +
mov eax [esp+1CCh+var_150] +
jmp loc_42962F  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_20] 0FFFFFFFFh +
mov byte ptr [esp+1CCh+var_14] 0 +
mov byte ptr [esp+1CCh+var_14+1] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_1C] ecx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_24] 0FFFFFFFFh +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_20] +
mov [esp+1CCh+var_18] 0FFFFFFFFh +
mov [esp+1CCh+var_1CC] 0FFFFFFFFh +
mov [esp+1CCh+var_1C0] 0FFFFFFFFh +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_14] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_424250  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_24] eax +
mov eax [esp+1CCh+var_108] +
mov ebx ecx +
mov esi [esp+1CCh+var_24] +
shr bx 8 +
mov word ptr [esp+1CCh+var_18C] bx +
mov ebx [esp+1CCh+var_3C] +
mov [esp+1CCh+var_20] eax +
mov eax [esp+1CCh+var_104] +
mov [esp+1CCh+var_14] ecx +
mov edi [esp+1CCh+var_20] +
test ebx ebx +
mov [esp+1CCh+var_1C] eax +
mov eax [esp+1CCh+var_100] +
setnz bl  +
mov [esp+1CCh+var_18] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_10] eax +
mov eax [esp+1CCh+var_1C] +
jmp loc_428BC1  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or eax [ebp+14h] +
or edx [ebp+10h] +
or edx eax +
setnz al  +
jmp loc_427142  +
add byte ptr [edi+10h] 1 +
mov esi [edi+4Ch] +
mov [esp+1CCh+var_1CC] edi +
call sub_41DB20  +
movzx edx byte ptr [eax+4] +
mov ebx eax +
xor eax eax +
cmp dl 14h +
jz loc_429AF0  +
cmp dl 35h +
jnz loc_429A33  +
test eax eax +
mov ebx [ebx+8] +
jnz loc_429B0F  +
test ebx ebx +
jz loc_429A5C  +
mov eax [esp+1CCh+arg_0] +
cmp esi [eax+4Ch] +
jz loc_429A9B  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+266h] 0 +
jz loc_429965  +
mov [esp+1CCh+var_1C4] offset aThisUseOfDefin +
mov [esp+1CCh+var_1C8] 18h +
mov [esp+1CCh+var_1CC] eax +
call sub_41ED50  +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
movzx eax word ptr [ebx+14h] +
jz loc_429A69  +
shr ax 6 +
test al 80h +
jnz loc_4299C9  +
movzx edx word ptr [ebx+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [ebx+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_429AB0  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+218h] +
test eax eax +
jz loc_4299C9  +
mov edi [esp+1CCh+arg_0] +
mov edx [edi+20h] +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C8] edx +
call eax  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
mov [eax+0E8h] ebx +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_429A85  +
xor eax eax +
xor edx edx +
mov [esp+1CCh+var_18C] eax +
xor ecx ecx +
mov eax edx +
xor ebx ebx +
xor edx edx +
xor esi esi +
jmp loc_428C1B  +
mov [esp+1CCh+var_1BC] offset aMissingExpress +
jmp loc_4297B5  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov eax offset aIf +
mov edx offset aElif +
mov [esp+1CCh+var_1BC] offset aSWithNoExpress +
cmovz eax edx +
mov [esp+1CCh+var_1B8] eax +
jmp loc_427116  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aOperatorDefine +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
test byte ptr [ebx+6] 10h +
jnz loc_429B4C  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
jmp loc_4299E9  +
shr ax 6 +
test al 4 +
jnz loc_42997C  +
mov eax [ebx+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [ebx+14h] +
jmp loc_429978  +
xor edx edx +
mov eax 1 +
test byte ptr [ebx+15h] 40h +
jnz loc_4299E9  +
jmp loc_4299ED  +
add eax 30h +
cmp esi eax +
jnz loc_42993D  +
jmp loc_429965  +
test al 4 +
jz loc_429AD5  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+228h] +
test eax eax +
jz loc_429AD5  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_1CC] edi +
call eax  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+214h] +
test eax eax +
jnz loc_4299B2  +
jmp loc_4299C9  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41DB20  +
mov ebx eax +
movzx edx byte ptr [eax+4] +
mov eax 1 +
jmp loc_429911  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41DB20  +
cmp byte ptr [eax+4] 15h +
jz loc_429925  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingAfterDe +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_429A5C  +
movzx eax byte ptr [ebx+4] +
xor ecx ecx +
mov word ptr [esp+1CCh+var_20+2] cx +
mov byte ptr [esp+1CCh+var_20] al +
lea eax [esp+1CCh+var_24] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1C8] ebx +
mov esi eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_423D50  +
mov [esp+1CCh+var_1BC] esi +
mov [esp+1CCh+var_1C4] offset aSIsAnAlternati +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_41ECD0  +
jmp loc_429A5C  +
lea ecx [ebx-40h] +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_11C] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_118] +
or ecx edx +
mov eax ecx +
mov ecx [esp+1CCh+var_134] +
mov [esp+1CCh+var_118] eax +
mov [esp+1CCh+var_11C] ecx +
jmp loc_428180  +
***
push edi  +
push esi  +
push ebx  +
sub esp 28h +
mov ecx [esp+3Ch] +
mov ebx [esp+50h] +
mov eax [esp+38h] +
mov edx [esp+54h] +
mov [esp+10h] ecx +
mov ecx [esp+40h] +
mov esi [esp+10h] +
mov [esp+24h] ebx +
mov [esp+14h] ecx +
mov ecx [esp+44h] +
mov edi [esp+14h] +
mov [esp] esi +
mov [esp+18h] ecx +
mov ecx [esp+48h] +
mov ebx [esp+18h] +
mov [esp+4] edi +
mov [esp+1Ch] ecx +
mov ecx [esp+4Ch] +
mov esi [esp+1Ch] +
mov [esp+8] ebx +
test cl cl +
mov [esp+20h] ecx +
mov [esp+0Ch] esi +
jnz loc_429CE0  +
cmp edx 40h +
jbe loc_429D30  +
lea ecx [edx-40h] +
cmp ecx 3Fh +
ja loc_429CE0  +
mov edi [esp+4] +
lea ecx [edx-41h] +
mov esi [esp] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_429CE0  +
mov ecx 80h +
mov edi 0FFFFFFFFh +
sub ecx edx +
mov esi 0FFFFFFFFh +
shrd esi edi +
xor edx edx +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
mov edx esi +
mov edi [esp+4] +
mov esi [esp] +
not edx  +
not ecx  +
or ecx edi +
or edx esi +
mov [esp] edx +
mov [esp+4] ecx +
nop   +
lea esi [esi+0] +
mov esi [esp] +
mov edi [esp+4] +
mov ebx [esp+8] +
mov ecx esi +
mov [esp+10h] esi +
mov esi [esp+0Ch] +
mov [eax] ecx +
mov [esp+14h] edi +
mov ecx [esp+14h] +
mov [eax+8] ebx +
mov [esp+1Ch] esi +
mov edx [esp+1Ch] +
mov [esp+18h] ebx +
mov [eax+4] ecx +
mov [eax+0Ch] edx +
mov edx [esp+20h] +
mov [eax+10h] edx +
mov edx [esp+24h] +
mov [eax+14h] edx +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edi [esp+0Ch] +
lea ecx [edx-1] +
mov esi [esp+8] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_429CE0  +
cmp edx 40h +
mov dword ptr [esp] 0FFFFFFFFh +
mov dword ptr [esp+4] 0FFFFFFFFh +
jz loc_429CE0  +
mov ecx 40h +
mov esi 0FFFFFFFFh +
sub ecx edx +
mov ebx 0FFFFFFFFh +
shrd ebx esi +
xor edx edx +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
cmovnz esi edx +
mov ecx ebx +
mov ebx [esp+8] +
mov edx ecx +
mov ecx esi +
mov esi [esp+0Ch] +
not edx  +
not ecx  +
or edx ebx +
or ecx esi +
mov [esp+8] edx +
mov [esp+0Ch] ecx +
jmp loc_429CE0  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+0Ch+arg_0] +
movzx ebp byte ptr [edi] +
jz loc_429E59  +
mov edi eax +
lea esi [eax+1] +
mov eax ebp +
mov ebp edi +
lea esi [esi+0] +
movzx ebx byte ptr [edx] +
movzx edi bl +
test ds:word_4660A0[edi+edi] 0C00h +
jz loc_429E30  +
test al al +
jz loc_429E03  +
cmp bl 27h +
jz loc_429E3E  +
cmp bl 22h +
nop   +
jz loc_429E3E  +
jmp loc_429E48  +
movzx ebx byte ptr [edx] +
test ds:word_4660A0[ebx+ebx] 0C00h +
jz loc_429E0B  +
add edx 1 +
sub ecx 1 +
jnz loc_429DF4  +
mov edi esi +
mov byte ptr [esi-1] 20h +
add esi 1 +
test ecx ecx +
jnz loc_429DD0  +
mov esi ebp +
mov ebp eax +
sub edi esi +
mov eax edi +
mov edi [esp+0Ch+arg_0] +
mov ecx ebp +
mov [edi] cl +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 22h +
jz loc_429E3A  +
cmp bl 27h +
jnz loc_429E48  +
test al al +
jz loc_429E55  +
cmp al bl +
mov edi 0 +
cmovz eax edi +
mov edi esi +
add edx 1 +
mov [esi-1] bl +
sub ecx 1 +
jmp loc_429E11  +
mov eax ebx +
jmp loc_429E48  +
xor eax eax +
jmp loc_429E20  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax+2D0h] +
mov eax [eax+2CCh] +
sub eax ecx +
cmp edx eax +
jbe loc_429FB0  +
mov eax [ebx+2C8h] +
mov edi ecx +
sub edi eax +
add edx edi +
lea esi [edx+edx*2] +
shr esi 1 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call sub_435F50  +
add esi eax +
mov [ebx+2C8h] eax +
add eax edi +
mov [ebx+2CCh] esi +
mov [ebx+2D0h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
test byte ptr [edx+15h] 1 +
jnz loc_429FF8  +
mov ecx [edx+18h] +
mov edi [ecx+4] +
or byte ptr [ecx+14h] 18h +
mov ebx [ecx+0Ch] +
mov [esp+30h+var_24] ebx +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_2C] edx +
call sub_41BAB0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_28] 0 +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_14] edx +
call sub_41B2A0  +
mov [esp+30h+var_30] eax +
mov ebp eax +
call strlen  +
mov [esp+30h+var_30] esi +
mov ebx eax +
lea eax [eax+1] +
mov [esp+30h+var_2C] eax +
call sub_421670  +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov edi eax +
mov [esp+30h+var_30] eax +
call memcpy  +
mov edx [esp+30h+var_14] +
mov byte ptr [edi+ebx] 0Ah +
jmp loc_429FDC  +
***
push ebx  +
sub esp 14h +
mov ebx [eax+2D0h] +
movzx ecx byte ptr [edx] +
add ebx 1 +
add edx 1 +
mov [ebx-1] cl +
movzx ecx byte ptr [edx] +
movzx eax cl +
test ds:word_4660A0[eax+eax] 204h +
jnz loc_42A060  +
mov eax [esi+4Ch] +
mov ecx ebx +
mov [eax+8] edx +
mov eax [esi+2D0h] +
mov edx [esi+234h] +
mov [esp+18h+var_C] 1 +
sub ecx eax +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_41F480  +
mov [esi+2D0h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov ebp [esi] +
mov edx [eax+2Ch] +
mov eax [esi+4Ch] +
mov [ebp+0] edi +
mov eax [eax+4] +
test eax eax +
jz loc_42A1B2  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 2Fh +
jnz loc_42A0F7  +
jmp loc_42A1A6  +
movzx eax byte ptr [ebx] +
add ebx 1 +
cmp al 2Fh +
jnz loc_42A0F4  +
cmp byte ptr [ebx-2] 2Ah +
jnz loc_42A0F4  +
mov [ebp+0] ebx +
xor ebx ebx +
cmp byte ptr [esi+8] 0 +
jz loc_42A176  +
test ecx ecx +
jz loc_42A191  +
cmp byte ptr [esi+24Ch] 0 +
jnz loc_42A17F  +
mov edx [ebp+0] +
mov eax [esi+2D0h] +
mov [esp+34h+var_30] edi +
sub edx edi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_1C] edx +
call memcpy  +
mov edx [esp+34h+var_1C] +
add edx [esi+2D0h] +
test bl bl +
jz loc_42A201  +
lea eax [edx+1] +
mov [esi+2D0h] eax +
mov byte ptr [edx] 2Ah +
mov eax [esi+2D0h] +
lea edx [eax+1] +
mov [esi+2D0h] edx +
mov byte ptr [eax] 2Fh +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+24Bh] 0 +
jz loc_42A11C  +
mov eax [ebp+0] +
sub dword ptr [esi+2D0h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+2D0h] +
mov byte ptr [eax-1] 20h +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edi+2] +
movzx eax byte ptr [edi+2] +
jmp loc_42A0F7  +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] edx +
call sub_420720  +
mov ecx [esp+34h+var_1C] +
test al al +
mov ebx eax +
jz loc_42A109  +
mov edx [esp+34h+var_18] +
mov [esp+34h+var_24] offset aUnterminated_0 +
mov [esp+34h+var_28] 0 +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] esi +
call sub_41EDD0  +
mov ecx [esp+34h+var_1C] +
jmp loc_42A109  +
mov eax [ebp+0] +
mov [esi+2D0h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax edx +
sub esp 1Ch +
mov edi [esi+2D0h] +
mov [esp+20h+var_14] ecx +
jmp loc_42A23B  +
mov eax edx +
mov edi ebx +
lea edx [eax+1] +
movzx ecx byte ptr [edx-1] +
lea ebx [edi+1] +
movzx ebp cl +
test byte ptr [ebp+ebp+4660A1h] 8 +
mov [ebx-1] cl +
jnz loc_42A237  +
cmp cl 2Fh +
jnz loc_42A27F  +
cmp byte ptr [eax+1] 2Ah +
jnz loc_42A27F  +
mov ecx [esp+20h+var_14] +
test ecx ecx +
jz loc_42A27F  +
mov [esi+2D0h] ebx +
xor ecx ecx +
mov eax esi +
call sub_42A0C0  +
mov edi [esi+2D0h] +
jmp loc_42A23B  +
mov [esi+2D0h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx word ptr [edx+14h] +
shr cx 6 +
test cl 20h +
jz loc_42A300  +
push ebx  +
sub esp 18h +
and ecx 4 +
jnz loc_42A303  +
mov ecx [edx+18h] +
movzx ecx byte ptr [ecx+14h] +
and ecx 1 +
test cl cl +
jz loc_42A2D4  +
mov ecx [eax+4Ch] +
xor ebx ebx +
jmp loc_42A2C7  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_42A310  +
add ebx 1 +
cmp [ecx+14h] edx +
jnz loc_42A2C0  +
cmp ebx 14h +
jbe loc_42A2C0  +
mov edx [edx] +
mov [esp+1Ch+var_14] offset aDetectedRecurs +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_41ECD0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
retn   +
cmp dword ptr [edx+18h] 0Ah +
setz cl  +
jmp loc_42A2B0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [edx] +
mov ebx [eax] +
mov [edx+4] eax +
mov [edx+2D8h] ebx +
mov ebx [eax+10h] +
mov [edx+2DCh] ebx +
mov ebx [eax+8] +
mov [edx+2E0h] ebx +
mov [eax] ecx +
mov [eax+4] ecx +
add ecx [esp+arg_8] +
mov byte ptr [eax+38h] 0 +
mov [eax+10h] ecx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov ecx [eax+2D8h] +
mov [edx] ecx +
mov ecx [eax+2DCh] +
mov [edx+10h] ecx +
mov ecx [eax+2E0h] +
mov byte ptr [edx+38h] 1 +
mov [edx+4] ecx +
mov dword ptr [eax+4] 0 +
retn   +
***
push esi  +
mov ebx [esp+18h+arg_0] +
jmp loc_42B1DC  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_42A390  +
test al al +
jnz loc_42B1F5  +
mov eax [ebx] +
cmp byte ptr [eax+38h] 0 +
jz loc_42B1C0  +
mov [esp+18h+var_18] ebx +
call sub_420B20  +
test al al +
jnz loc_42B1C0  +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_42B1DC  +
mov eax [ebx] +
test eax eax +
setnz al  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
mov ecx [esp+arg_0] +
test byte ptr [ecx+14h] 1 +
jz loc_42B258  +
cmp word ptr [ecx+10h] 0 +
jz loc_42B258  +
mov edx [ecx+4] +
movzx ebx word ptr [edx+4] +
mov eax [edx] +
test bx bx +
jz loc_42B25B  +
mov esi [ecx] +
mov ecx eax +
mov ebx [esi+ebx*4-4] +
add ecx 0Dh +
and ecx 0FFFFFFF8h +
add edx ecx +
mov ecx [edx] +
mov edi [ebx+4] +
movzx ebx word ptr [edx+4] +
add edi ecx +
add eax edi +
test bx bx +
jnz loc_42B236  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+0Ch] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
test byte ptr [edi+14h] 1 +
jz loc_42B2D7  +
cmp word ptr [edi+10h] 0 +
jz loc_42B2D7  +
mov ebx [edi+4] +
jmp loc_42B2AB  +
mov edx [edi] +
mov esi [edx+eax*4-4] +
mov edx [esi+4] +
mov eax [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [ebx] +
add ebp [esi+4] +
lea edx [eax+0Dh] +
mov esi ebp +
and edx 0FFFFFFF8h +
add ebx edx +
mov edx [ebx] +
lea eax [ebx+6] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_14] edx +
call memcpy  +
movzx eax word ptr [ebx+4] +
add esi [ebx] +
test ax ax +
mov ebp esi +
jnz loc_42B281  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [edi+0Ch] +
mov eax [edi+4] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
add esi [edi+0Ch] +
add esp 1Ch +
pop ebx  +
mov ebp esi +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+2C8h] +
mov ebp [ebx+4Ch] +
mov [ebx+2D0h] eax +
mov eax [ebx] +
mov eax [eax] +
mov [ebp+8] eax +
mov edx [ebx] +
mov edx [edx+10h] +
mov [ebp+0Ch] edx +
sub edx eax +
mov eax ebx +
call sub_429F60  +
mov edx [ebp+8] +
cmp byte ptr [edx] 28h +
jz loc_42B3C5  +
movzx ecx byte ptr [ebx+24Ch] +
mov eax ebx +
mov edi [ebx] +
call sub_42A220  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_42A390  +
sub byte ptr [ebx+10h] 1 +
test esi esi +
jz loc_42B4AE  +
mov edx [ebx+2C8h] +
mov ecx [ebx+2D0h] +
cmp edx ecx +
jb loc_42B397  +
jmp loc_42B3A7  +
sub ecx 1 +
cmp ecx edx +
jz loc_42B3A7  +
movzx eax byte ptr [ecx-1] +
test ds:word_4660A0[eax+eax] 0C00h +
jnz loc_42B390  +
mov [ebx+2D0h] ecx +
mov eax ebx +
xor ecx ecx +
mov edx esi +
call sub_429E60  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4Ch] +
mov edx [eax+8] +
add edx 1 +
jmp loc_42B3F2  +
mov eax [ebx+4Ch] +
mov ecx 1 +
mov edx [eax+8] +
mov eax ebx +
call sub_42A220  +
mov edi eax +
movzx eax byte ptr [eax] +
cmp al 2Ch +
jnz loc_42B4B5  +
lea edx [edi+1] +
mov ecx 1 +
mov eax ebx +
call sub_42A220  +
mov edi eax +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr [edx+edx+4660A1h] 2 +
jnz loc_42B421  +
cmp al 24h +
jnz loc_42B50E  +
cmp byte ptr [ebx+262h] 0 +
jz loc_42B442  +
mov edx edi +
mov eax ebx +
call sub_42A050  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] eax +
call sub_41DBB0  +
test al al +
jz loc_42B3D0  +
mov [esp+1Ch+var_14] offset aSyntaxErrorInM +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] ebx +
call sub_41ECD0  +
xor edx edx +
mov eax [ebx+4Ch] +
cmp byte ptr [edi] 29h +
setz dl  +
add edi edx +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [esi] eax +
mov edx [ebp+8] +
mov eax ebx +
movzx ecx byte ptr [ebx+24Ch] +
mov esi [ebx] +
call sub_42A220  +
mov [esi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] ebx +
call sub_42A390  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
jmp loc_42B3BD  +
xor eax eax +
jmp loc_42B3BD  +
cmp al 29h +
jnz loc_42B442  +
movzx ecx word ptr [esi+10h] +
mov eax [ebx+4Ch] +
add edi 1 +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov edi [ebx] +
mov edx [eax+8] +
mov [esi] edx +
lea edx [edx+ecx*4] +
mov [eax+8] edx +
mov eax ebx +
or byte ptr [esi+14h] 1 +
mov edx [ebp+8] +
movzx ecx byte ptr [ebx+24Ch] +
call sub_42A220  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_42A390  +
sub byte ptr [ebx+10h] 1 +
jmp loc_42B378  +
cmp al 29h +
jnz loc_42B442  +
movzx ecx word ptr [esi+10h] +
test cx cx +
jz loc_42B4BD  +
nop   +
jmp loc_42B442  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov eax [esi+0Ch] +
add eax [ebx+0Ch] +
mov [esp+2Ch+var_2C] eax +
call sub_435ED0  +
mov ecx [ebx+0Ch] +
cmp word ptr [ebx+10h] 0 +
mov byte ptr [esp+2Ch+var_E] 0 +
mov byte ptr [esp+2Ch+var_E+1] 0 +
mov ebp eax +
lea eax [eax+ecx] +
mov [esp+2Ch+var_20] eax +
jz loc_42B606  +
mov esi [esi+4] +
mov ebx [ebx+4] +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jz loc_42B5C1  +
jmp loc_42B5EF  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_42B5EF  +
cmp word ptr [ebx+4] 0 +
jz loc_42B650  +
mov eax [ebx] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add ebx eax +
mov eax [esi] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add esi eax +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jnz loc_42B5EF  +
mov ecx [ebx] +
lea eax [esp+2Ch+var_E] +
lea edx [ebx+6] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_429DB0  +
mov ecx [esi] +
lea edx [esi+6] +
mov edi eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_429DB0  +
cmp edi eax +
jz loc_42B580  +
mov ebx 1 +
mov [esp+2Ch+var_2C] ebp +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+4] +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_429DB0  +
mov ecx [esi+0Ch] +
mov edx [esi+4] +
mov ebx eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_429DB0  +
cmp ebx eax +
jnz loc_42B5EF  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
setnz bl  +
jmp loc_42B5F4  +
xor ebx ebx +
jmp loc_42B5F4  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_42B680  +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp sub_436CD0  +
mov eax [eax+4] +
mov [esp+arg_0] eax +
jmp sub_436CD0  +
***
sub esp 18h +
mov eax [eax+18h] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov eax [eax] +
mov edx [eax+4] +
test edx edx +
jz loc_42B6F2  +
mov ebx [eax+0Ch] +
cmp byte ptr [ebx+62h] 0 +
jnz loc_42B6F2  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42B700  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
cmp word ptr [ebx+60h] 1 +
jnz loc_42B6F2  +
cmp byte ptr [ebx+64h] 0 +
jnz loc_42B6F2  +
mov eax [esp+14h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_42B733  +
mov esi [esp+14h+arg_4] +
mov edx [esi+4] +
lea ecx [edx+1] +
shl edx 2 +
mov esi [esp+14h+arg_4] +
mov [esi+4] ecx +
mov ecx [ebx+4] +
mov [eax+edx] ecx +
jmp loc_42B6F2  +
mov eax [esp+14h+arg_4] +
mov eax [eax+4] +
mov [esp+14h+var_10] 4 +
mov [esp+14h+var_14] eax +
call sub_435F00  +
mov esi [esp+14h+arg_4] +
xor edx edx +
mov ecx 1 +
mov [esi] eax +
jmp loc_42B724  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_440EB0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_42B7C0  +
mov edx [eax] +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] eax +
call sub_440EB0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
mov edx [eax+4] +
jmp loc_42B7A3  +
***
sub esp 18h +
mov edx [eax+0ACh] +
mov ecx [edx] +
cmp ecx 7Fh +
jz loc_42B7F4  +
lea eax [ecx+1] +
mov [edx] eax +
shl ecx 4 +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
mov [esp+18h+var_18] 7F8h +
call sub_435ED0  +
mov edx [ebx+0ACh] +
xor ecx ecx +
shl ecx 4 +
mov [eax+4] edx +
mov edx eax +
mov dword ptr [eax] 0 +
mov [ebx+0ACh] eax +
mov eax 1 +
mov [edx] eax +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
call sub_436CD0  +
mov edx [edi+0A8h] +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] eax +
call sub_436910  +
mov ebx [eax] +
mov edx eax +
test ebx ebx +
jnz loc_42B876  +
jmp loc_42B888  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42B888  +
mov eax [ebx+4] +
test eax eax +
jnz loc_42B870  +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 24h +
mov [esp+38h+var_38] 1 +
mov [esp+38h+var_1C] edx +
call sub_435F00  +
mov ebx eax +
mov eax [edi+70h] +
mov [ebx+4] esi +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call strlen  +
mov dword ptr [ebx+18h] 0 +
mov [ebx+8] eax +
mov eax ebp +
mov [ebx+0Ch] al +
mov eax edi +
call sub_42B7D0  +
mov edx [esp+38h+var_1C] +
mov ecx [edx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov ecx [edi+1Ch] +
mov ecx [ecx+28h] +
mov [eax+0Ch] ebx +
mov [eax+8] ecx +
mov [edx] eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
mov eax [esp+arg_4] +
mov eax [eax] +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp strcmp  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
cmp byte ptr [eax] 0 +
jnz loc_42BA41  +
mov dword ptr [ebx+58h] 0 +
xor eax eax +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_fstati64  +
mov esi ds:__imp__errno +
test eax eax +
jnz loc_42BA20  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jz loc_42BA12  +
mov dword ptr [ebx+5Ch] 0 +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 2 +
mov eax [ebx+58h] +
mov [esp+14h+var_14] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
call esi  +
mov eax [eax] +
mov [ebx+5Ch] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 1B6h +
mov [esp+14h+var_10] 8000h +
mov [esp+14h+var_14] eax +
call _open  +
cmp eax 0FFFFFFFFh +
mov [ebx+58h] eax +
jnz loc_42B9D8  +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 0Dh +
jz loc_42BA82  +
call esi  +
cmp dword ptr [eax] 14h +
jnz loc_42BA32  +
lea esi [esi+0] +
jmp loc_42BAA7  +
mov eax [ebx+4] +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_stati64  +
test eax eax +
jnz loc_42BAB1  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_42BAB1  +
call esi  +
mov dword ptr [eax] 2 +
jmp loc_42BA32  +
call esi  +
mov dword ptr [eax] 0Dh +
jmp loc_42BA32  +
***
mov edi edx +
push esi  +
xor esi esi +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+1Ch] +
cmp dword ptr [eax+2Ch] 1 +
jbe loc_42BAE0  +
mov eax [ebx] +
test eax eax +
jz loc_42BAE0  +
movzx esi byte ptr [eax+3Dh] +
cmp byte ptr [ebx+12h] 0 +
mov ebp [ebx+28Ch] +
jz loc_42BAF4  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:__imp__errno +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
call edx  +
mov edx [edi+5Ch] +
mov ecx [esp+34h+var_18] +
mov [eax] edx +
xor eax eax +
or esi ecx +
setnz al  +
mov edx [esp+34h+var_1C] +
cmp ebp eax +
jg loc_42BB57  +
cmp dword ptr [ebx+28Ch] 0 +
jz loc_42BB60  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_42BB60  +
mov eax [edi+4] +
test eax eax +
jz loc_42BBBD  +
mov edi [esp+34h+arg_0] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] 0 +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_28] edi +
call sub_41F010  +
jmp loc_42BAEC  +
cmp byte ptr [ebx+290h] 0 +
jnz loc_42BB94  +
mov eax [edi+4] +
test eax eax +
jz loc_42BB90  +
mov edi [esp+34h+arg_0] +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] 6 +
mov [esp+34h+var_28] edi +
call sub_41F010  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
jmp loc_42BB67  +
call edx  +
cmp dword ptr [eax] 2 +
jnz loc_42BB60  +
mov edx [edi] +
mov eax [ebx+180h] +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call sub_42E150  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_42BB60  +
jmp loc_42BAEC  +
mov eax [edi] +
nop   +
jmp loc_42BB39  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 20h +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
add esp 1Ch +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call strlen  +
mov ebp eax +
lea eax [ebx+eax+2] +
mov [esp+24h+var_24] eax +
call sub_435ED0  +
mov edx [esp+24h+var_18] +
mov esi eax +
mov eax [edx] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcpy  +
test ebx ebx +
jz loc_42BC4A  +
movzx eax byte ptr [esi+ebx-1] +
cmp al 5Ch +
jnz loc_42BC70  +
add ebx esi +
add ebp 1 +
mov [esp+24h+var_1C] ebp +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
call memcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_42BC4A  +
mov byte ptr [esi+ebx] 2Fh +
add ebx 1 +
jmp loc_42BC4A  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax+8] +
lea eax [esi+2Ah] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
mov eax [edi+4] +
lea ebx [esp+38h+var_1E+1] +
and ebx 0FFFFFFF0h +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ebx +
call memcpy  +
test esi esi +
jz loc_42BCC6  +
movzx eax byte ptr [ebx+esi-1] +
cmp al 5Ch +
jnz loc_42BE27  +
mov eax 6363h +
mov dword ptr [ebx+esi] 64616568h +
mov dword ptr [ebx+esi+4] 672E7265h +
mov [ebx+esi+8] ax +
mov byte ptr [ebx+esi+0Ah] 0 +
mov [esp+38h+var_34] offset aR +
mov [esp+38h+var_38] ebx +
call j_fopen  +
mov [esp+38h+var_38] 24h +
mov esi eax +
call sub_435ED0  +
test esi esi +
mov [edi+14h] eax +
jz loc_42BE67  +
lea eax [edi+4] +
xor ebx ebx +
mov [ebp+var_1E+2] 9 +
mov [ebp+var_28] eax +
jmp loc_42BD2F  +
movzx eax cl +
test ds:word_4660A0[eax+eax] 0C00h +
jz loc_42BD60  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_42BD20  +
mov [esp+38h+var_38] esi +
call fclose  +
mov eax [edi+14h] +
lea edi ds:0[ebx*4] +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+2] +
cmp eax [ebp+var_1E+2] +
mov [ebp-20h] eax +
ja loc_42BE40  +
mov eax [edi+14h] +
lea edx ds:0[ebx*4] +
lea ebx [eax+edx] +
mov eax ecx +
mov [ebp+var_24] edx +
mov edx esi +
call sub_42B8F0  +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
jz loc_42BDA4  +
movzx edx al +
test byte ptr ds:word_4660A0[edx+edx] 1 +
jnz loc_42BD8A  +
mov edx esi +
call sub_42B8F0  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jnz loc_42BDF0  +
mov eax [edi+14h] +
mov edx [ebp+var_24] +
mov [eax+edx+4] ebx +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jz loc_42BDE2  +
nop   +
lea esi [esi+0] +
cmp eax 0FFFFFFFFh +
jz loc_42BDE2  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jnz loc_42BDD0  +
mov ebx [ebp-20h] +
jmp loc_42BD2F  +
cmp al 2Fh +
jz loc_42BDB4  +
test al al +
jz loc_42BDFE  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_42BDB4  +
mov edx [ebp+var_24] +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea eax [eax+edx+4] +
mov edx [ebp+var_28] +
mov [ebp+var_24] eax +
mov eax ebx +
call sub_42BC00  +
mov edx [ebp+var_24] +
mov [edx] eax +
mov [esp+38h+var_38] ebx +
call free  +
jmp loc_42BDD5  +
cmp al 2Fh +
jz loc_42BCC6  +
mov byte ptr [ebx+esi] 2Fh +
add esi 1 +
jmp loc_42BCC6  +
add [ebp+var_1E+2] 8 +
mov edx [ebp+var_1E+2] +
mov eax [edi+14h] +
mov [ebp+var_24] ecx +
shl edx 2 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] eax +
call sub_435F50  +
mov ecx [ebp+var_24] +
mov [edi+14h] eax +
jmp loc_42BD72  +
xor edi edi +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov dword ptr [esp+8] 8 +
mov [esp] ebx +
mov [esp+4] esi +
call memcmp  +
test eax eax +
jnz loc_42BEDA  +
cmp byte ptr [ebx+18h] 0 +
lea edi [ebx+8] +
jz loc_42BEE1  +
lea eax [esi+8] +
mov dword ptr [esp+8] 10h +
mov [esp+4] eax +
mov [esp] edi +
call memcmp  +
test eax eax +
jnz loc_42BEDA  +
cmp byte ptr [ebx+19h] 0 +
jnz loc_42BEDA  +
movzx eax byte ptr [esi+18h] +
xor eax 1 +
movzx eax al +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+1Ch] +
lea edi [ebx+8] +
mov edx [eax+14h] +
mov [esp+8] edi +
mov eax [eax+40h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_441A90  +
mov byte ptr [ebx+18h] 1 +
jmp loc_42BEAF  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
movzx ebx byte ptr [edx+65h] +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_1C] ecx +
test bl bl +
jnz loc_42C045  +
movzx eax byte ptr [edx+63h] +
test al al +
mov [esp+44h+var_16] al +
jnz loc_42C045  +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_42C045  +
cmp dword ptr [edx+58h] 0FFFFFFFFh +
jz loc_42C050  +
movzx eax word ptr [edi+2Eh] +
and ax 0F000h +
cmp ax 3000h +
jz loc_42C0B4  +
cmp ax 8000h +
jz loc_42C0F7  +
mov eax 2010h +
mov ebx 2000h +
mov [esp+44h+var_15] 0 +
mov [esp+44h+var_44] eax +
xor ebp ebp +
call sub_435ED0  +
mov esi eax +
lea esi [esi+0] +
mov edx [edi+58h] +
mov eax ebx +
sub eax ebp +
mov [esp+44h+var_3C] eax +
lea eax [esi+ebp] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edx +
call _read  +
cmp eax 0 +
jle loc_42BFD7  +
add ebp eax +
cmp ebp ebx +
jnz loc_42BF90  +
cmp [esp+44h+var_15] 0 +
jnz loc_42C0F0  +
lea ebx [ebp+ebp+0] +
lea eax [ebx+10h] +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_40] eax +
call sub_435F50  +
mov esi eax +
jmp loc_42BF90  +
jnz loc_42C111  +
cmp ebp ebx +
nop   +
jnz loc_42C077  +
mov ecx ebp +
mov edx [esp+44h+var_20] +
add ebx 10h +
mov eax [edx+280h] +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_3C] esi +
mov ebp eax +
lea eax [edi+40h] +
mov [esp+44h+var_2C] eax +
lea eax [edi+18h] +
mov [esp+44h+var_30] eax +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edx +
call sub_417040  +
mov byte ptr [edi+65h] 1 +
mov [edi+14h] eax +
movzx eax [esp+44h+var_16] +
mov [edi+63h] al +
mov eax [edi+58h] +
mov [esp+44h+var_44] eax +
call _close  +
movzx ebx byte ptr [edi+63h] +
mov dword ptr [edi+58h] 0FFFFFFFFh +
xor ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edx +
call sub_42B9C0  +
test al al +
mov ebx eax +
jnz loc_42BF52  +
mov eax [esp+44h+var_1C] +
xor ecx ecx +
mov edx edi +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+var_20] +
call sub_42BAC0  +
jmp loc_42C045  +
cmp [esp+44h+var_15] 0 +
jz loc_42BFE6  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsShorterThan +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_41EF10  +
mov ecx ebp +
jmp loc_42BFE8  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsABlockDevic +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_41EF10  +
mov [esp+44h+var_16] 1 +
jmp loc_42C024  +
mov ecx ebx +
jmp loc_42BFE8  +
cmp dword ptr [edi+44h] 0 +
mov ebx [edi+40h] +
jle loc_42C146  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsTooLarge +
mov [esp+44h+var_34] eax +
jmp loc_42C0C3  +
mov eax [edi+4] +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_44] eax +
call sub_41F010  +
mov [esp+44h+var_44] esi +
call free  +
mov [esp+44h+var_16] 1 +
jmp loc_42C024  +
jl loc_42C150  +
cmp ebx 7FFFFFFFh +
ja loc_42C100  +
lea eax [ebx+10h] +
mov [esp+44h+var_15] 1 +
jmp loc_42BF7D  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx ebx byte ptr [edx] +
mov eax [esp+30h+arg_0] +
cmp bl 5Ch +
jz loc_42C1B0  +
cmp bl 2Fh +
jz loc_42C1B0  +
test bl bl +
jz loc_42C184  +
cmp byte ptr [edx+1] 3Ah +
jz loc_42C1B0  +
mov ebx [esi] +
test ebx ebx +
jz loc_42C1D3  +
mov edi [ebx+2Ch] +
cmp eax 1 +
jz loc_42C1E0  +
test ecx ecx +
jz loc_42C1C0  +
mov ebx [esi+74h] +
test ebx ebx +
jz loc_42C230  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
lea ebx [esi+78h] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 3 +
jz loc_42C221  +
cmp byte ptr [esi+0E0h] 0 +
jz loc_42C200  +
mov ebx [esi+70h] +
jmp loc_42C199  +
mov edi [esi+0A0h] +
jmp loc_42C18D  +
mov eax [edi+20h] +
test eax eax +
jz loc_42C29F  +
lea ebp [esi+78h] +
cmp eax ebp +
jz loc_42C29F  +
mov ebx [eax] +
jmp loc_42C199  +
test ebx ebx +
jz loc_42C298  +
movzx ecx byte ptr [ebx+3Dh] +
mov edx [edi+0Ch] +
test edx edx +
jz loc_42C251  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42B830  +
xor ecx ecx +
mov edx offset a__0 +
jmp loc_42C213  +
mov [esp+30h+var_24] edx +
mov [esp+30h+var_28] offset aNoIncludePathI +
mov [esp+30h+var_2C] 3 +
mov [esp+30h+var_30] esi +
call sub_41ECD0  +
jmp loc_42C1A1  +
mov eax [edi+4] +
mov [esp+30h+var_14] ecx +
mov [esp+30h+var_30] eax +
call sub_437270  +
mov ebx eax +
sub ebx [edi+4] +
lea eax [ebx+1] +
mov [esp+30h+var_30] eax +
call sub_435ED0  +
mov ebp eax +
mov eax [edi+4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_30] ebp +
mov [esp+30h+var_2C] eax +
call memcpy  +
mov edx ebp +
mov ecx [esp+30h+var_14] +
mov byte ptr [ebp+ebx+0] 0 +
mov [edi+0Ch] ebp +
jmp loc_42C213  +
xor ecx ecx +
jmp loc_42C20C  +
test ecx ecx +
jnz loc_42C196  +
jmp loc_42C1C5  +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+4] +
mov [ebx+4] ecx +
mov [esp+34h+var_18] eax +
mov eax edx +
call sub_42B9C0  +
test al al +
jnz loc_42C2F0  +
mov [esp+34h+var_19] 0 +
mov eax [esp+34h+var_18] +
mov [ebx+4] eax +
movzx eax [esp+34h+var_19] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+58h] +
mov eax [esi+200h] +
mov [esp+34h+var_30] edi +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_2C] edx +
call eax  +
and eax 1 +
mov [esp+34h+var_19] al +
jz loc_42C380  +
cmp byte ptr [esi+253h] 0 +
jz loc_42C2D7  +
mov eax [esi+1Ch] +
mov ebp 1 +
cmp dword ptr [eax+20h] 1 +
jbe loc_42C349  +
mov eax ds:_iob +
add ebp 1 +
mov [esp+34h+var_34] 2Eh +
add eax 40h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi+1Ch] +
cmp [eax+20h] ebp +
ja loc_42C326  +
cmp [esp+34h+var_19] 1 +
mov [esp+34h+var_28] edi +
mov [esp+34h+var_30] offset aCS +
sbb eax eax +
and eax 57h +
add eax 21h +
mov [esp+34h+var_2C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+34h+var_34] eax +
call sub_450940  +
jmp loc_42C2D7  +
mov eax [ebx+58h] +
mov [esp+34h+var_34] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
jmp loc_42C30F  +
***
mov eax [esp+arg_0] +
mov eax [eax+5Ch] +
test eax eax +
setnz al  +
retn   +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+arg_C] +
test edi edi +
mov [esp+7Ch+var_5C] eax +
jz loc_42CAD0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_436CD0  +
mov ecx [esp+7Ch+arg_0] +
mov edx [ecx+0A4h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_78] eax +
call sub_436910  +
mov [esp+7Ch+var_60] eax +
mov eax [eax] +
test eax eax +
jz loc_42C445  +
mov ecx [eax+4] +
cmp [esp+7Ch+arg_8] ecx +
jz loc_42C628  +
mov edx [esp+7Ch+arg_8] +
jmp loc_42C43F  +
cmp edx [eax+4] +
jz loc_42C628  +
mov eax [eax] +
test eax eax +
jnz loc_42C436  +
mov [esp+7Ch+var_78] 68h +
mov [esp+7Ch+var_7C] 1 +
call sub_435F00  +
mov ebp eax +
mov eax [esp+7Ch+arg_0] +
mov edx [eax] +
mov eax [esp+7Ch+arg_8] +
mov dword ptr [ebp+58h] 0FFFFFFFFh +
test edx edx +
mov [ebp+20h] eax +
mov eax [esp+7Ch+arg_4] +
setz byte ptr [ebp+64h]  +
mov [esp+7Ch+var_7C] eax +
call sub_440E70  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
mov [ebp+0] eax +
jz loc_42C635  +
mov edx 1 +
test bl bl +
mov [ebp+66h] dl +
jnz loc_42CB3D  +
mov edi eax +
mov eax [esp+7Ch+arg_0] +
mov esi [ebp+20h] +
mov [esp+7Ch+var_64] ebp +
mov byte ptr [esp+7Ch+var_44] 0 +
add eax 0B4h +
mov [esp+7Ch+var_45] 0 +
mov ebp esi +
mov [esp+7Ch+var_46] 0 +
mov [esp+7Ch+var_40] eax +
jmp loc_42C5B7  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_42CAB1  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ebp eax +
test ebp ebp +
jz loc_42C770  +
mov eax [esp+7Ch+arg_0] +
cmp byte ptr [eax+2A9h] 0 +
jnz loc_42C512  +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_42C548  +
mov [esp+7Ch+var_7C] ebp +
call sub_441C20  +
test eax eax +
mov ebx eax +
jz loc_42CAC3  +
mov [esp+7Ch+var_7C] eax +
call strlen  +
mov [esp+7Ch+var_7C] ebp +
mov esi eax +
call strlen  +
cmp esi eax +
jnb loc_42CAC3  +
mov [esp+7Ch+var_7C] ebp +
mov ebp ebx +
call free  +
mov [esp+7Ch+var_7C] ebp +
call sub_436CD0  +
mov ebx eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_4367A0  +
test eax eax +
mov eax [esp+7Ch+var_64] +
jz loc_42C8B0  +
mov dword ptr [eax+5Ch] 2 +
mov ecx [esp+7Ch+var_64] +
mov eax [ecx+20h] +
mov esi [eax] +
test esi esi +
mov [ecx+20h] esi +
jz loc_42CB50  +
mov eax [esp+7Ch+arg_0] +
cmp esi [eax+74h] +
jz loc_42C787  +
cmp esi [eax+70h] +
jz loc_42C8A0  +
mov eax [esp+7Ch+var_64] +
mov ebp esi +
mov edi [eax] +
mov ecx [esp+7Ch+arg_0] +
mov eax edi +
mov edx ebp +
cmp byte ptr [ecx+261h] 0 +
jz loc_42C4D7  +
mov eax [ebp+14h] +
test eax eax +
jz loc_42CAFF  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_42C5F1  +
jmp loc_42C660  +
mov eax [ebp+14h] +
add ebx 2 +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_42C660  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_440EB0  +
test eax eax +
jnz loc_42C5E4  +
mov eax [ebp+14h] +
mov eax [eax+ebx*4+4] +
mov [esp+7Ch+var_7C] eax +
call sub_440E70  +
test eax eax +
mov ebp eax +
jnz loc_42C4F5  +
mov eax [esp+7Ch+var_64] +
mov edx [eax+20h] +
mov eax [eax] +
jmp loc_42C4D7  +
mov ebx [eax+0Ch] +
add esp 7Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+7Ch+arg_0] +
mov edx [esi] +
test edx edx +
jz loc_42CB36  +
mov ecx [edx+2Ch] +
xor edx edx +
cmp byte ptr [ecx+66h] 0 +
jz loc_42C49D  +
jmp loc_42C498  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_42C61A  +
cmp al 2Fh +
jz loc_42C61A  +
test al al +
jz loc_42C675  +
cmp byte ptr [edi+1] 3Ah +
jz loc_42C61A  +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] edi +
call strchr  +
mov [esp+7Ch+var_78] 5Ch +
mov [esp+7Ch+var_7C] edi +
mov ebx eax +
call strchr  +
cmp ebx eax +
setnbe cl  +
test ebx ebx +
setz dl  +
or dl cl +
jz loc_42C6AC  +
test eax eax +
mov ebx eax +
setz dl  +
cmp edi ebx +
jz loc_42C61A  +
test dl dl +
jnz loc_42C61A  +
mov edx [ebp+8] +
mov eax ebx +
sub eax edi +
mov [esp+7Ch+var_50] eax +
add edx eax +
lea eax [edx+1] +
mov [esp+7Ch+var_54] eax +
lea eax [edx+3] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_4C] edx +
call sub_435ED0  +
mov esi eax +
mov eax [ebp+8] +
lea ecx [esi+eax] +
mov [esp+7Ch+var_58] ecx +
mov ecx [ebp+4] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_78] ecx +
call memcpy  +
mov eax [ebp+8] +
mov edx [esp+7Ch+var_4C] +
test eax eax +
jz loc_42C72E  +
mov ecx [ebp+4] +
movzx eax byte ptr [ecx+eax-1] +
cmp al 5Ch +
jz loc_42C72E  +
cmp al 2Fh +
jz loc_42C72E  +
mov eax [esp+7Ch+var_58] +
lea ecx [edx+2] +
mov [esp+7Ch+var_54] ecx +
mov byte ptr [eax] 2Fh +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edi +
lea edi [ebx+1] +
add eax 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+var_54] +
mov edx esi +
mov byte ptr [esi+eax] 0 +
mov eax [esp+7Ch+arg_0] +
movzx ecx byte ptr [ebp+0Ch] +
call sub_42B830  +
mov ebp eax +
jmp loc_42C5CF  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+5Ch] 2 +
mov dword ptr [eax+4] 0 +
jmp loc_42C582  +
mov [esp+7Ch+var_46] 1 +
mov eax [esp+7Ch+var_60] +
mov ebx [eax] +
test ebx ebx +
jnz loc_42C7AA  +
jmp loc_42C5AF  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42C5AF  +
cmp esi [ebx+4] +
lea esi [esi+0] +
jnz loc_42C7A0  +
mov ebp [esp+7Ch+var_64] +
mov eax [ebp+0] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebp [ebx+0Ch] +
mov eax [esp+7Ch+arg_0] +
call sub_42B7D0  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_8] +
cmp [esp+7Ch+var_46] 0 +
mov edx [edi] +
mov [eax+4] ecx +
mov ecx [esp+7Ch+arg_0] +
mov [eax] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
jz loc_42C840  +
mov eax [ecx+74h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_42C840  +
cmp esi eax +
jz loc_42C840  +
mov eax ecx +
call sub_42B7D0  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_0] +
mov edx [edi] +
mov [eax] edx +
mov edx [ecx+74h] +
mov [eax+4] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
cmp [esp+7Ch+var_45] 0 +
mov ebx ebp +
jz loc_42C62B  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+70h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_42C62B  +
cmp esi eax +
jz loc_42C62B  +
mov eax [esp+7Ch+arg_0] +
call sub_42B7D0  +
mov esi [esp+7Ch+var_60] +
mov edi [esp+7Ch+arg_0] +
mov edx [esi] +
mov [eax] edx +
mov edx [edi+70h] +
mov [eax+4] edx +
mov edx [edi+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [esi] eax +
jmp loc_42C62B  +
mov [esp+7Ch+var_45] 1 +
jmp loc_42C78C  +
mov [eax+4] ebp +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz loc_42C98B  +
mov eax [esp+7Ch+arg_0] +
mov esi [eax+200h] +
test esi esi +
jz loc_42C98B  +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_42C8E7  +
jmp loc_42C8F7  +
mov eax [eax+10h] +
test eax eax +
jz loc_42C8F7  +
cmp byte ptr [eax+66h] 0 +
jnz loc_42C8E0  +
cmp byte ptr [eax+64h] 0 +
jz loc_42C98B  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov esi eax +
lea eax [eax+5] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_50] eax +
call sub_435ED0  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov edi eax +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_58] eax +
call memcpy  +
mov eax edi +
mov dword ptr [edi+esi] 6863672Eh +
mov byte ptr [edi+esi+4] 0 +
lea edi [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_42C97F  +
movzx eax [esp+7Ch+var_36] +
and ax 0F000h +
cmp ax 4000h +
jz loc_42CC85  +
mov edx [esp+7Ch+var_64] +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+arg_0] +
call sub_42C2B0  +
mov edx eax +
test dl dl +
jnz loc_42CC30  +
mov byte ptr [esp+7Ch+var_44] 1 +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
call sub_42B9C0  +
test al al +
jnz loc_42CB0E  +
mov eax [esp+7Ch+var_64] +
cmp dword ptr [eax+5Ch] 2 +
jnz loc_42CC40  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov edi [esp+7Ch+arg_0] +
mov edx [edi+0C4h] +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
lea ecx [esi+1] +
mov eax [eax+0C0h] +
sub edx eax +
cmp edx ecx +
jb loc_42CDD7  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+arg_0] +
add esi [eax+0C0h] +
lea eax [esi+1] +
mov edx esi +
mov esi [esp+7Ch+arg_0] +
mov [esi+0C0h] eax +
mov byte ptr [edx] 0 +
mov edi [esi+0BCh] +
mov eax [esi+0C0h] +
cmp edi eax +
jz loc_42CDF9  +
mov esi [esp+7Ch+arg_0] +
mov edx [esi+0CCh] +
mov ecx [esi+0B8h] +
add eax edx +
not edx  +
and eax edx +
mov edx [esi+0C4h] +
mov [esi+0C0h] eax +
mov esi eax +
sub esi ecx +
mov [esp+7Ch+var_58] esi +
mov esi edx +
sub esi ecx +
cmp [esp+7Ch+var_58] esi +
jbe loc_42CA67  +
mov eax [esp+7Ch+arg_0] +
mov [eax+0C0h] edx +
mov eax edx +
mov esi [esp+7Ch+arg_0] +
mov [esi+0BCh] eax +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_436910  +
mov esi [esp+7Ch+var_64] +
mov [eax] edi +
mov eax [esi] +
mov [esi+4] eax +
jmp loc_42C582  +
mov ecx [edx+8] +
add edx 4 +
call sub_42BC00  +
mov ebp eax +
jmp loc_42C4ED  +
mov [esp+7Ch+var_7C] ebx +
call free  +
jmp loc_42C548  +
mov eax [esp+7Ch+arg_18] +
mov [esp+7Ch+var_70] offset aNullDirectoryI +
mov [esp+7Ch+var_78] 4 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_41EF10  +
jmp loc_42C3D8  +
mov eax ebp +
call sub_42BC80  +
mov eax [ebp+14h] +
jmp loc_42C5DA  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+arg_0] +
xor esi esi +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
jmp loc_42C7CC  +
xor edx edx +
jmp loc_42C49D  +
mov [esp+7Ch+var_45] 0 +
mov [esp+7Ch+var_46] 0 +
jmp loc_42CB12  +
mov eax [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_64] +
mov eax [eax+208h] +
test eax eax +
jz loc_42CBD8  +
mov esi [esp+7Ch+arg_4] +
lea edx [ebp+20h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] esi +
mov esi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] esi +
call eax  +
test eax eax +
mov [ebp+4] eax +
jz loc_42CBD2  +
mov eax ebp +
call sub_42B9C0  +
test al al +
jz loc_42CBC7  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
mov eax [esp+7Ch+var_60] +
mov eax [eax] +
test eax eax +
jz loc_42CE05  +
mov ebx ebp +
jmp loc_42C62B  +
mov eax [ebp+4] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [ebp+0] +
mov [ebp+4] eax +
cmp byte ptr [esp+7Ch+var_44] 0 +
jnz loc_42CD7B  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
jz loc_42CC61  +
mov eax [ebp+0] +
xor ebx ebx +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+var_60] +
mov ecx [eax] +
test ecx ecx +
jnz loc_42C62B  +
mov [eax] ebp +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_436BA0  +
jmp loc_42C62B  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_58] +
mov [ebp+8] eax +
jmp loc_42CB12  +
mov ebp eax +
mov eax [esp+7Ch+arg_18] +
xor ecx ecx +
mov edx ebp +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_42BAC0  +
jmp loc_42CB12  +
mov eax [esp+7Ch+arg_18] +
mov edx ebp +
mov ecx [esp+7Ch+arg_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_42BAC0  +
jmp loc_42CB12  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] edi +
call sub_44B670  +
test eax eax +
mov [esp+7Ch+var_54] eax +
jz loc_42C97A  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_44] ebp +
mov ebp ebx +
mov byte ptr [edi+esi+4] 2Fh +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_7C] eax +
call sub_44B830  +
test eax eax +
jz loc_42CD71  +
lea ebx [eax+8] +
mov edi offset a_ +
mov [esp+7Ch+var_7C] ebx +
mov esi ebx +
call strlen  +
mov ecx 2 +
cmps   +
jz loc_42CCB0  +
mov edi offset a__ +
mov esi ebx +
mov ecx 3 +
cmps   +
jz loc_42CCB0  +
lea esi [eax+1] +
mov eax [esp+7Ch+var_50] +
add eax esi +
cmp eax [esp+7Ch+var_4C] +
ja loc_42CD4F  +
mov edi [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebx +
add eax edi +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_64] +
mov ecx edi +
mov eax [esp+7Ch+arg_0] +
call sub_42C2B0  +
test al al +
jz loc_42CCB0  +
mov ebx ebp +
mov ebp [esp+7Ch+var_44] +
mov edx eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] edx +
mov [esp+7Ch+var_7C] eax +
call sub_44B950  +
mov edx [esp+7Ch+var_50] +
jmp loc_42C972  +
mov eax [esp+7Ch+var_4C] +
lea eax [eax+esi+40h] +
mov [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call sub_435F50  +
mov [esp+7Ch+var_58] eax +
jmp loc_42CCFE  +
mov ebx ebp +
xor edx edx +
mov ebp [esp+7Ch+var_44] +
jmp loc_42CD36  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aOneOrMorePchFi +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_41ECD0  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_41A090  +
cmp byte ptr [eax+48h] 0 +
jnz loc_42CBE3  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aUseWinvalidPch +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_41ECD0  +
jmp loc_42CBE3  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] eax +
call sub_440CD0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0C0h] +
jmp loc_42C9DB  +
or byte ptr [esi+0DCh] 2 +
jmp loc_42CA21  +
mov esi [esp+7Ch+var_60] +
mov ebx ebp +
mov eax [esp+7Ch+arg_0] +
mov [esi] ebp +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_436BA0  +
jmp loc_42C62B  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_8] +
mov esi [esp+4Ch+arg_0] +
cmp byte ptr [ebx+62h] 0 +
mov eax ebp +
mov byte ptr [esp+4Ch+var_38] al +
jnz loc_42CEA4  +
mov eax ebp +
test al al +
jnz loc_42CEB0  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42CE67  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_42CEA4  +
mov eax [ebx+8] +
test eax eax +
jz loc_42CEC4  +
mov ecx [ebx+58h] +
mov edi [ebx+4] +
mov edx [esi+204h] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] esi +
call edx  +
mov eax [ebx+8] +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 4Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp word ptr [ebx+60h] 0 +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jz loc_42CE55  +
jmp loc_42CEA4  +
mov ecx [esp+4Ch+arg_C] +
mov edx ebx +
mov eax esi +
call sub_42BF10  +
test al al +
mov edi eax +
jz loc_42CEA4  +
mov ecx ds:dword_46B1D8 +
test ecx ecx +
jz loc_42CFA0  +
mov eax ebp +
test al al +
jnz loc_42CF4F  +
cmp byte ptr [ecx+4] 0 +
jz loc_42CFA0  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_42BE80 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 0 +
call bsearch  +
test eax eax +
jz loc_42CFA0  +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jmp loc_42CEA4  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_42BE80 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 1 +
call bsearch  +
test eax eax +
jnz loc_42CEA4  +
lea esi [esi+0] +
cmp byte ptr [esi+0E1h] 0 +
jz loc_42D074  +
mov ebp [esi+9Ch] +
test ebp ebp +
jz loc_42D074  +
mov [esp+4Ch+arg_0] esi +
movzx esi byte ptr [esp+4Ch+var_38] +
jmp loc_42CFD1  +
mov ebp [ebp+10h] +
test ebp ebp +
jz loc_42D070  +
cmp ebx ebp +
jz loc_42CFC6  +
mov eax esi +
test al al +
jnz loc_42CFE1  +
cmp byte ptr [ebp+62h] 0 +
jz loc_42CFC6  +
mov eax [ebp+5Ch] +
test eax eax +
jnz loc_42CFC6  +
mov eax [ebx+4Ch] +
cmp [ebp+4Ch] eax +
jnz loc_42CFC6  +
mov eax [ebp+40h] +
mov edx [ebp+44h] +
xor edx [ebx+44h] +
xor eax [ebx+40h] +
or edx eax +
jnz loc_42CFC6  +
mov ecx [ebp+14h] +
mov [esp+4Ch+var_38] ebp +
test ecx ecx +
jz loc_42D015  +
cmp byte ptr [ebp+65h] 0 +
jz loc_42D18F  +
mov edx [esp+4Ch+var_38] +
mov ecx [esp+4Ch+arg_C] +
mov eax [esp+4Ch+arg_0] +
call sub_42BF10  +
xor edx edx +
test al al +
jz loc_42D050  +
mov eax [esp+4Ch+var_38] +
mov ecx [eax+40h] +
mov eax [eax+44h] +
mov [esp+4Ch+var_34] eax +
mov eax [ebx+44h] +
xor [esp+4Ch+var_34] eax +
mov eax [ebx+40h] +
xor eax ecx +
or eax [esp+4Ch+var_34] +
jz loc_42D209  +
mov eax [ebp+14h] +
test eax eax +
jz loc_42D061  +
cmp byte ptr [ebp+65h] 0 +
jz loc_42D1EC  +
test dl dl +
jz loc_42CFC6  +
jmp loc_42CEA4  +
mov esi [esp+4Ch+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_42D184  +
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_42D184  +
movzx edx byte ptr [eax+3Dh] +
movzx eax byte ptr [ecx+0Ch] +
cmp dl al +
jbe loc_42D173  +
movzx ebp dl +
xor ecx ecx +
test ebp ebp +
setnz cl  +
cmp [esi+28Ch] ecx +
movzx eax word ptr [ebx+60h] +
jle loc_42D0E4  +
test ax ax +
jnz loc_42D0E4  +
cmp byte ptr [ebx+64h] 0 +
jz loc_42D0C3  +
cmp byte ptr [esi+292h] 0 +
jnz loc_42D0E4  +
mov eax [esi+180h] +
mov ecx [ebx+4] +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call sub_42E150  +
movzx eax word ptr [ebx+60h] +
mov edx [esp+4Ch+var_38] +
add eax 1 +
mov [ebx+60h] ax +
xor eax eax +
mov byte ptr [ebx+65h] 0 +
cmp byte ptr [esi+26Bh] 0 +
jz loc_42D107  +
movzx eax byte ptr [esi+2A8h] +
xor eax 1 +
movzx eax al +
mov ecx [ebx+14h] +
mov [esp+4Ch+var_40] eax +
mov eax [ebx+40h] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
call sub_41A100  +
mov edx [esp+4Ch+var_38] +
mov [eax+3Dh] dl +
mov edx [ebx+18h] +
mov [eax+2Ch] ebx +
mov [eax+14h] edx +
mov eax [ebx+4] +
mov byte ptr [esi+0ECh] 1 +
mov dword ptr [esi+0E4h] 0 +
mov [esp+4Ch+var_3C] ebp +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_419830  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebp al +
xor ecx ecx +
test ebp ebp +
mov edx eax +
setnz cl  +
jmp loc_42D0A3  +
xor ebp ebp +
xor edx edx +
xor ecx ecx +
jmp loc_42D0A3  +
mov edx [ebp+0] +
mov ecx [ebp+20h] +
mov [esp+4Ch+var_48] 68h +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_30] edx +
mov [esp+4Ch+var_34] ecx +
call sub_435F00  +
mov ecx [esp+4Ch+arg_0] +
mov edx [ecx] +
mov ecx [esp+4Ch+var_34] +
mov dword ptr [eax+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_38] eax +
test edx edx +
mov edx [esp+4Ch+var_30] +
mov [eax+20h] ecx +
setz byte ptr [eax+64h]  +
mov [esp+4Ch+var_4C] edx +
call sub_440E70  +
mov ecx [esp+4Ch+var_38] +
mov [ecx] eax +
mov eax [ebp+4] +
mov [ecx+4] eax +
jmp loc_42D015  +
mov eax [esp+4Ch+var_38] +
mov [esp+4Ch+var_34] edx +
mov dword ptr [eax+4] 0 +
call sub_42B690  +
mov edx [esp+4Ch+var_34] +
jmp loc_42D061  +
mov [esp+4Ch+var_44] ecx +
mov eax [ebx+14h] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_38] +
mov eax [eax+14h] +
mov [esp+4Ch+var_4C] eax +
call memcmp  +
test eax eax +
setz dl  +
jmp loc_42D050  +
***
mov eax [esp+arg_0] +
mov byte ptr [eax+0E1h] 1 +
mov eax [esp+arg_4] +
mov byte ptr [eax+62h] 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_8] +
cmp ebx 3 +
jz loc_42D314  +
mov [esp+2Ch+var_2C] ebx +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_42C160  +
test eax eax +
jz loc_42D308  +
mov ecx [esp+2Ch+arg_10] +
cmp ebx 4 +
setz dl  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_14] ecx +
movzx ecx dl +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_42C3B0  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ecx eax +
setz al  +
and al dl +
mov edi eax +
jnz loc_42D308  +
mov edx [ecx+8] +
test edx edx +
jz loc_42D344  +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_20] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+2Ch+var_24] eax +
call sub_42CE30  +
test al al +
jnz loc_42D335  +
mov eax [esi+1Ch] +
add dword ptr [eax+28h] 1 +
add esp 2Ch +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+104h] +
mov eax [esi+0F0h] +
cmp eax [edx+8] +
jz loc_42D270  +
mov dword ptr [eax-10h] 0 +
jmp loc_42D270  +
add esp 2Ch +
mov edi 1 +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+5Ch] +
test eax eax +
jnz loc_42D2D3  +
lea eax [ebx-3] +
cmp eax 1 +
jbe loc_42D2D3  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
jmp loc_42D2D3  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+24h] +
mov [esp] ebx +
call sub_436CD0  +
mov edx [esp+20h] +
mov edx [edx+0A4h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edx +
call sub_4367A0  +
test eax eax +
jz loc_42D3B7  +
nop   +
mov ecx [eax+4] +
test ecx ecx +
jz loc_42D3B1  +
mov edx [eax+0Ch] +
mov edx [edx+5Ch] +
test edx edx +
jz loc_42D3C0  +
mov eax [eax] +
test eax eax +
jnz loc_42D3A0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov edi [esp+20h] +
mov esi [esp+28h] +
mov [esp] ebx +
call sub_436CD0  +
mov edx [edi+0A4h] +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+8] eax +
call sub_4367A0  +
mov ebx eax +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42D41E  +
mov eax [edi+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
call sub_40DC30  +
mov esi eax +
test ebx ebx +
jz loc_42D43E  +
mov edx [ebx+4] +
test edx edx +
jz loc_42D438  +
mov edx [ebx+0Ch] +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_42D438  +
cmp [ebx+8] esi +
jbe loc_42D447  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42D422  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+28h+var_14] offset free +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_18] offset sub_435F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42B790 +
mov [esp+28h+var_24] offset sub_42B660 +
add ebx 0B4h +
mov [esp+28h+var_28] 7Fh +
call sub_436520  +
mov [ebx-10h] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_435F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42B790 +
mov [esp+28h+var_24] offset sub_42B660 +
mov [esp+28h+var_28] 7Fh +
call sub_436520  +
mov [ebx-0Ch] eax +
mov [esp+28h+var_28] 7F8h +
call sub_435ED0  +
mov edx [ebx-8] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [ebx-8] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_435F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_42B760 +
mov [esp+28h+var_24] offset sub_436CD0 +
mov [esp+28h+var_28] 7Fh +
call sub_436520  +
mov [ebx-4] eax +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_435ED0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_440C70  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+0A4h] +
mov [esp+14h+var_14] eax +
call sub_436630  +
mov eax [esi+0A8h] +
mov [esp+14h+var_14] eax +
call sub_436630  +
mov eax [esi+0B0h] +
mov [esp+14h+var_14] eax +
call sub_436630  +
lea eax [esi+0B4h] +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] 0 +
call sub_440DE0  +
mov eax [esi+0ACh] +
test eax eax +
jnz loc_42D5B7  +
jmp loc_42D5C6  +
mov eax ebx +
mov ebx [eax+4] +
mov [esp+14h+var_14] eax +
call free  +
test ebx ebx +
jnz loc_42D5B5  +
mov eax [esi+9Ch] +
test eax eax +
jnz loc_42D5D4  +
jmp loc_42D5E0  +
mov eax ebx +
mov ebx [eax+10h] +
call sub_42B690  +
test ebx ebx +
jnz loc_42D5D2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_42D560  +
mov dword ptr [ebx+0ACh] 0 +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+20h] ebx +
add esp 18h +
pop ebx  +
jmp sub_42D460  +
***
jmp sub_42D630  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov edx [eax] +
mov edx [edx+2Ch] +
mov edx [edx+20h] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_42C3B0  +
add esp 2Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov esi [eax+8] +
lea edx [esi-1] +
imul edx edx +
add edx [eax] +
mov eax [esp+24h+arg_4] +
test eax eax +
jz loc_42D6F0  +
cmp [esp+24h+arg_8] 1 +
sbb eax eax +
add eax 2 +
cmp [esp+24h+arg_8] 1 +
sbb ecx ecx +
add ecx 2 +
mov esi [ebx] +
mov [esi+3Dh] cl +
mov esi [edx+8] +
mov [esp+24h+var_14] eax +
mov eax [ebx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov eax [eax+2Ch] +
sub eax [edx] +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
mov [esp+24h+var_20] 2 +
call sub_419830  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
xor ecx ecx +
jmp loc_42D6B3  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_419830  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov eax [ebx+0A4h] +
mov [esp] eax +
call sub_4363C0  +
lea edx [esp+18h] +
mov [esp+1Ch] eax +
mov eax [ebx+0A4h] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_42B6D0 +
mov [esp] eax +
call sub_436C40  +
mov eax [esp+18h] +
test eax eax +
jz loc_42D829  +
mov edx [esp+1Ch] +
xor ebx ebx +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_42B9A0 +
mov dword ptr [esp+8] 4 +
mov [esp+4] edx +
call qsort  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMultipleInclud +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_42D81D  +
nop   +
mov eax [esp+18h] +
mov ecx ds:_iob +
mov eax [eax+ebx*4] +
add ebx 1 +
lea edx [ecx+40h] +
mov [esp+4] edx +
mov [esp] eax +
call fputs  +
mov eax ds:_iob +
mov dword ptr [esp] 0Ah +
add eax 40h +
mov [esp+4] eax +
call putc  +
cmp [esp+1Ch] ebx +
ja loc_42D7E0  +
mov eax [esp+18h] +
mov [esp] eax +
call free  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov ebx [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov [esp+20h+var_20] 0 +
mov eax esi +
mov edx ebx +
mov ecx edi +
call sub_42C160  +
test eax eax +
jz loc_42D8C0  +
mov [esp+20h+var_1C] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
mov [esp+20h+var_20] esi +
call sub_42C3B0  +
mov ebx eax +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_42D8C0  +
mov eax [ebx+58h] +
cmp eax 0FFFFFFFFh +
jz loc_42D8A4  +
mov [esp+20h+var_20] eax +
call _close  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+2Ch] +
mov eax [eax+4Ch] +
cmp [ebx+4Ch] eax +
setnle al  +
movzx eax al +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_42D8B5  +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 3 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D250  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 4 +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_42D250  +
add esp 2Ch +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [esp+arg_8] +
cmp byte ptr [edx+0ECh] 0 +
jz loc_42D96D  +
mov ebx [ecx+1Ch] +
test ebx ebx +
jz loc_42D987  +
test eax eax +
mov byte ptr [edx+0ECh] 0 +
jz loc_42D9B0  +
cmp [ecx+18h] eax +
jz loc_42D992  +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
mov ebx [edx+0E4h] +
mov [ecx+1Ch] ebx +
jmp loc_42D96D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+14h] 0 +
mov byte ptr [ecx+65h] 0 +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
add eax 28h +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edi [esp+20h] +
mov ebx [esp+24h] +
mov esi [esp+28h] +
test eax eax +
setnz byte ptr [edi+0E0h]  +
test ebx ebx +
mov [edi+70h] ebx +
mov [edi+74h] ebx +
jnz loc_42DA16  +
jmp loc_42DA38  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42DA38  +
mov eax [ebx+4] +
mov dword ptr [ebx+14h] 0 +
mov [esp] eax +
call strlen  +
cmp ebx esi +
mov [ebx+8] eax +
jnz loc_42DA10  +
mov [edi+74h] ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42DA16  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+20h] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+2Ch] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+28h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+9Ch] +
test eax eax +
jz loc_42DC1D  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov eax [eax+10h] +
add edx 1 +
test eax eax +
jnz loc_42DAB0  +
shl edx 5 +
lea eax [edx+8] +
mov [esp+4] eax +
mov dword ptr [esp] 1 +
call sub_435F00  +
mov esi eax +
mov dword ptr [eax] 0 +
mov byte ptr [eax+4] 0 +
mov eax [esp+40h] +
mov ebx [eax+9Ch] +
test ebx ebx +
jz loc_42DC45  +
xor ebp ebp +
jmp loc_42DB2B  +
mov eax [ebx+14h] +
mov [esp+8] ecx +
mov ecx [ebx+40h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_441A90  +
mov eax [ebx+40h] +
mov ecx ebp +
mov edx [ebx+44h] +
shl ecx 5 +
mov ebp [esi] +
mov [esi+ecx+8] eax +
mov [esi+ecx+0Ch] edx +
lea esi [esi+0] +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_42DBC0  +
cmp byte ptr [ebx+63h] 0 +
jnz loc_42DB20  +
mov eax [ebx+5Ch] +
test eax eax +
jnz loc_42DB20  +
cmp word ptr [ebx+60h] 0 +
jz loc_42DB20  +
lea eax [ebp+1] +
mov [esi] eax +
mov eax ebp +
shl eax 5 +
lea ecx [esi+eax+10h] +
movzx eax byte ptr [ebx+62h] +
mov [ecx+10h] al +
or [esi+4] al +
cmp byte ptr [ebx+65h] 0 +
jnz loc_42DAF2  +
mov eax [ebx+58h] +
mov [esp+18h] ecx +
mov [esp+1Ch] eax +
mov eax ebx +
call sub_42B9C0  +
mov ecx [esp+18h] +
test al al +
mov edi eax +
jz loc_42DC27  +
mov eax [ebx+58h] +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp+18h] ecx +
mov [esp] eax +
call j__fdopen  +
mov ecx [esp+18h] +
mov [esp+4] ecx +
mov edi eax +
mov [esp] eax +
call sub_441B10  +
mov [esp] edi +
call fclose  +
mov eax [esp+1Ch] +
mov [ebx+58h] eax +
jmp loc_42DB08  +
***
mov eax ebp +
shl eax 5 +
lea ebx [eax+8] +
lea eax [esi+8] +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_42BBD0 +
mov dword ptr [esp+8] 20h +
mov [esp+4] ebp +
call qsort  +
mov eax [esp+44h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] esi +
mov [esp+0Ch] eax +
call fwrite  +
mov [esp] esi +
cmp eax 1 +
setz bl  +
call free  +
mov edi ebx +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 8 +
jmp loc_42DAC0  +
***
mov eax [esp+40h] +
xor ecx ecx +
mov edx ebx +
mov dword ptr [esp] 0 +
call sub_42BAC0  +
mov [esp] esi +
call free  +
jmp loc_42DC13  +
***
mov ebx 8 +
xor ebp ebp +
jmp loc_42DBC8  +
***
jmp loc_42DC60  +
push ebx  +
sub esp 48h +
mov ebx [esp+54h] +
lea eax [esp+18h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 8 +
mov [esp] eax +
mov [esp+0Ch] ebx +
call fread  +
xor edx edx +
cmp eax 1 +
jz loc_42DC96  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+18h] +
shl eax 5 +
add eax 8 +
mov [esp] eax +
call sub_435ED0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [eax] edx +
mov [eax+4] ecx +
mov ds:dword_46B1D8 eax +
add eax 8 +
mov [esp+0Ch] ebx +
mov [esp+8] edx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call fread  +
cmp eax [esp+18h] +
setz dl  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [esp+20h+arg_C] +
mov edx esi +
mov ecx edi +
mov [esp+20h+var_20] eax +
mov eax ebx +
call sub_42C160  +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
call sub_42C3B0  +
cmp dword ptr [eax+5Ch] 2 +
setnz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 10h +
mov eax [eax+18h] +
test eax eax +
jz loc_42DDC2  +
mov edx [edi+20h] +
test edx edx +
jz loc_42DDC2  +
xor esi esi +
jmp loc_42DD73  +
mov eax [edi+18h] +
mov edx [edi+1Ch] +
mov eax [eax+esi*4] +
mov edx [edx+esi*4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_440F00  +
test eax eax +
jnz loc_42DDBA  +
mov eax [edi+1Ch] +
mov ecx [eax+esi*4] +
lea eax [ebx+ecx] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_42DDA6  +
cmp dl 2Fh +
jnz loc_42DDBA  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_42DE12  +
cmp byte ptr [eax+2] 2Eh +
jnz loc_42DE12  +
movzx eax byte ptr [eax+3] +
cmp al 5Ch +
jnz loc_42DE08  +
add esi 1 +
cmp [edi+20h] esi +
ja loc_42DD70  +
movzx eax byte ptr [ebx] +
cmp al 2Eh +
jnz loc_42DDF2  +
movzx eax byte ptr [ebx+1] +
cmp al 5Ch +
jnz loc_42DE02  +
movzx eax byte ptr [ebx+2] +
lea edx [ebx+2] +
mov ebx edx +
cmp al 2Fh +
jnz loc_42DDFB  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_42DDE0  +
cmp al 2Fh +
jz loc_42DDE0  +
cmp al 2Eh +
jz loc_42DDC9  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp al 5Ch +
jz loc_42DDE0  +
nop   +
jmp loc_42DDC5  +
cmp al 2Fh +
jz loc_42DDD1  +
jmp loc_42DDF2  +
cmp al 2Fh +
lea esi [esi+0] +
jz loc_42DDBA  +
lea ebx [ebx+ecx+1] +
jmp loc_42DDC2  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [eax] +
test al al +
jz loc_42DF2B  +
lea edi [esi-1] +
xor ecx ecx +
mov ebx edi +
jmp loc_42DE5C  +
cmp al 23h +
jz loc_42DE83  +
cmp al 24h +
setz al  +
movzx eax al +
add ecx eax +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
test al al +
jz loc_42DE94  +
cmp al 20h +
jz loc_42DE66  +
jg loc_42DE40  +
cmp al 9 +
jnz loc_42DE4E  +
cmp esi ebx +
mov edx ebx +
ja loc_42DE83  +
cmp byte ptr [ebx] 5Ch +
nop   +
jz loc_42DE79  +
jmp loc_42DE83  +
cmp byte ptr [edx] 5Ch +
jnz loc_42DE83  +
sub edx 1 +
add ecx 1 +
cmp edx edi +
jnz loc_42DE74  +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
add ecx 1 +
test al al +
jnz loc_42DE5C  +
add ecx 1 +
mov [esp+20h+var_20] ecx +
call sub_435ED0  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_42DF18  +
lea edi [esi-1] +
mov ecx eax +
mov ebx edi +
jmp loc_42DED5  +
cmp dl 23h +
jz loc_42DF10  +
cmp dl 24h +
jnz loc_42DEC0  +
mov byte ptr [ecx] 24h +
add ecx 1 +
movzx edx byte ptr [ebx+1] +
add ebx 1 +
add ecx 1 +
mov [ecx-1] dl +
movzx edx byte ptr [ebx+1] +
test dl dl +
jz loc_42DF20  +
cmp dl 20h +
jz loc_42DEE2  +
jg loc_42DEB0  +
cmp dl 9 +
nop   +
jnz loc_42DEC0  +
cmp esi ebx +
mov edx ebx +
mov ebp ecx +
ja loc_42DF05  +
cmp byte ptr [ebx] 5Ch +
jz loc_42DEF7  +
nop   +
jmp loc_42DF05  +
cmp byte ptr [edx] 5Ch +
jnz loc_42DF05  +
sub edx 1 +
add ebp 1 +
cmp edi edx +
mov byte ptr [ebp-1] 5Ch +
jnz loc_42DEF2  +
lea ecx [ebp+1] +
mov byte ptr [ebp+0] 5Ch +
jmp loc_42DEC0  +
mov byte ptr [ecx] 5Ch +
add ecx 1 +
jmp loc_42DEC0  +
mov ecx eax +
lea esi [esi+0] +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx 1 +
jmp loc_42DE97  +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 28h +
mov [esp+1Ch+var_1C] 1 +
call sub_435F00  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_42DF95  +
mov esi [ebx+4] +
test esi esi +
jz loc_42DF8D  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx] +
cmp [ebx+4] esi +
ja loc_42DF78  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_42DFC3  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_42DFBB  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
cmp [ebx+10h] esi +
ja loc_42DFA5  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_42DFFC  +
mov edx [ebx+20h] +
test edx edx +
jz loc_42DFE9  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
cmp [ebx+20h] esi +
ja loc_42DFD3  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+1Ch] +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_42E057  +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_42DD50  +
mov edx [esp+14h+arg_8] +
test edx edx +
jnz loc_42E050  +
mov [esp+14h+var_14] eax +
call sub_440E70  +
mov edx [ebx+4] +
mov ecx [ebx] +
lea esi [edx+1] +
mov [ebx+4] esi +
mov [ecx+edx*4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_42DE20  +
jmp loc_42E03C  +
add eax 2 +
lea edx [eax+eax] +
mov [ebx+8] edx +
mov edx [ebx] +
shl eax 3 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_435F50  +
mov [ebx] eax +
jmp loc_42E021  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_42E11B  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_42E123  +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call sub_437270  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
mov edi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea esi [esp+28h+var_D] +
and esi 0FFFFFFF0h +
lea eax [edi+1] +
add edi esi +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] esi +
call memcpy  +
mov [esp+28h+var_24] 2Eh +
mov [esp+28h+var_28] esi +
call strrchr  +
mov edx 6F2Eh +
test eax eax +
cmovz eax edi +
mov [eax] dx +
mov byte ptr [eax+2] 0 +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] eax +
call sub_42E010  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] offset asc_4651D8 +
mov [esp+28h+var_28] eax +
call sub_42E010  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_42DD50  +
call sub_42DE20  +
mov edx [ebx+10h] +
cmp edx [ebx+14h] +
mov esi eax +
jz loc_42E185  +
mov eax [ebx+0Ch] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add edx 4 +
lea eax [edx+edx] +
mov [ebx+14h] eax +
mov eax [ebx+0Ch] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_435F50  +
mov edx [ebx+10h] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [ebx+0Ch] eax +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+34h] +
mov esi [esp+30h] +
movzx eax byte ptr [edx] +
test al al +
jz loc_42E29F  +
cmp al 3Ah +
mov ebx edx +
jz loc_42E253  +
test al al +
jnz loc_42E1EA  +
jmp loc_42E253  +
test al al +
jz loc_42E1F4  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_42E1E6  +
mov edi ebx +
sub edi edx +
lea eax [edi+1] +
mov [esp] eax +
mov [esp+0Ch] edx +
call sub_435ED0  +
mov edx [esp+0Ch] +
mov [esp+8] edi +
mov [esp+4] edx +
mov ebp eax +
mov [esp] eax +
call memcpy  +
xor eax eax +
mov byte ptr [ebp+edi+0] 0 +
mov edx [esi+20h] +
cmp byte ptr [ebx] 3Ah +
setz al  +
add ebx eax +
cmp edx [esi+24h] +
jz loc_42E260  +
mov eax [esi+18h] +
mov [eax+edx*4] ebp +
mov eax [esi+1Ch] +
mov [eax+edx*4] edi +
add dword ptr [esi+20h] 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_42E29F  +
mov edx ebx +
cmp al 3Ah +
mov ebx edx +
jnz loc_42E1E0  +
mov eax 1 +
xor edi edi +
jmp loc_42E1FB  +
***
add edx 4 +
lea eax [edx+edx] +
mov [esi+24h] eax +
mov eax [esi+18h] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_435F50  +
mov ecx [esi+24h] +
lea edx ds:0[ecx*4] +
mov [esi+18h] eax +
mov eax [esi+1Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_435F50  +
mov edx [esi+20h] +
mov [esi+1Ch] eax +
jmp loc_42E234  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+34h+arg_4] +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_24] eax +
mov eax [esp+34h+arg_8] +
mov edx eax +
sub eax 1 +
cmp eax 20h +
mov eax 22h +
cmova eax edx +
mov [esp+34h+var_20] eax +
mov eax [esi+4] +
test eax eax +
jz loc_42E3B3  +
mov eax [esi] +
xor ebx ebx +
mov ebp [eax] +
mov [esp+34h+var_34] ebp +
call strlen  +
mov edi eax +
nop   +
lea esi [esi+0] +
mov eax [esp+34h+var_24] +
add ebx 1 +
mov [esp+34h+var_34] ebp +
mov [esp+34h+var_30] eax +
call fputs  +
cmp [esi+4] ebx +
jbe loc_42E3B0  +
lea eax ds:0[ebx*4] +
mov [esp+34h+var_1C] eax +
mov eax [esi] +
mov ebp [eax+ebx*4] +
mov [esp+34h+var_34] ebp +
call strlen  +
add edi eax +
test ebx ebx +
jz loc_42E300  +
cmp edi [esp+34h+var_20] +
jbe loc_42E385  +
mov ebp [esp+34h+var_20] +
test ebp ebp +
jz loc_42E385  +
mov [esp+34h+var_18] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4651DA +
mov [esp+34h+var_28] eax +
call fwrite  +
mov ecx [esp+34h+var_18] +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
lea edi [ecx+1] +
mov ebp [eax+edx] +
jmp loc_42E300  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
mov ebp [eax+edx] +
jmp loc_42E300  +
add edi 1 +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_34] 3Ah +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esp+34h+var_20] +
mov edx [esi+10h] +
test eax eax +
setnz byte ptr [esp+34h+var_18]  +
xor ebx ebx +
test edx edx +
jnz loc_42E434  +
jmp loc_42E470  +
cmp byte ptr [esp+34h+var_18] 0 +
jz loc_42E451  +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4651DA +
mov [esp+34h+var_28] eax +
call fwrite  +
mov edx [esp+34h+var_1C] +
lea edi [edx+1] +
mov eax [esi+0Ch] +
add ebx 1 +
mov ecx [esp+34h+var_24] +
mov eax [eax+ebp] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_34] eax +
call fputs  +
cmp [esi+10h] ebx +
jbe loc_42E470  +
mov eax [esi+0Ch] +
lea ebp ds:0[ebx*4] +
mov eax [eax+ebx*4] +
mov [esp+34h+var_34] eax +
call strlen  +
add edi eax +
cmp edi [esp+34h+var_20] +
ja loc_42E3E0  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
jmp loc_42E416  +
mov eax [esp+34h+var_24] +
mov [esp+34h+arg_0] 0Ah +
mov [esp+34h+arg_4] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp putc  +
***
mov esi 1 +
push ebx  +
sub esp 10h +
mov edi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
cmp dword ptr [edi+10h] 1 +
jbe loc_42E4FA  +
lea esi [esi+0] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
mov eax [edi+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call fputs  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 3Ah +
call putc  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
cmp [edi+10h] esi +
ja loc_42E4B0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42E510  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
mov edi [esp+44h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
lea eax [esi+10h] +
mov [esp+0Ch] edi +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_42E5B4  +
mov eax [esi+10h] +
xor ebx ebx +
lea ebp [esp+1Ch] +
test eax eax +
jnz loc_42E581  +
jmp loc_42E5C1  +
mov eax [esi+0Ch] +
mov edx [esp+1Ch] +
mov eax [eax+ebx*4] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_42E5B4  +
add ebx 1 +
cmp [esi+10h] ebx +
jbe loc_42E5C1  +
mov eax [esi+0Ch] +
mov eax [eax+ebx*4] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
mov [esp] ebp +
mov [esp+1Ch] eax +
call fwrite  +
cmp eax 1 +
jz loc_42E552  +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+54h] +
lea eax [esp+28h] +
mov dword ptr [esp+8] 4 +
mov ebp [esp+58h] +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
mov [esp+0Ch] edi +
call fread  +
cmp eax 4 +
jnz loc_42E702  +
mov dword ptr [esp] 200h +
call sub_435ED0  +
mov ebx eax +
mov eax [esp+28h] +
test eax eax +
jz loc_42E6F0  +
mov dword ptr [esp+1Ch] 200h +
xor esi esi +
jmp loc_42E683  +
mov [esp+0Ch] edi +
mov [esp+8] eax +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call fread  +
cmp eax [esp+2Ch] +
jnz loc_42E6D7  +
test ebp ebp +
mov byte ptr [ebx+eax] 0 +
jz loc_42E67A  +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_440EB0  +
test eax eax +
jz loc_42E67A  +
mov eax [esp+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_42E150  +
add esi 1 +
cmp [esp+28h] esi +
jbe loc_42E6F0  +
lea eax [esp+2Ch] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call fread  +
cmp eax 4 +
jnz loc_42E6D7  +
mov eax [esp+2Ch] +
lea edx [eax+1] +
cmp edx [esp+1Ch] +
jbe loc_42E630  +
sub eax 0FFFFFF80h +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+1Ch] eax +
call sub_435F50  +
mov ebx eax +
mov eax [esp+2Ch] +
jmp loc_42E630  +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov [esp+28h+var_28] eax +
call sub_422520  +
cmp byte ptr [eax+4] 25h +
jz loc_42E741  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
call sub_41BC80  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_422520  +
cmp byte ptr [eax+4] 37h +
jz loc_42E767  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 2 +
call sub_41BC80  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_422520  +
cmp byte ptr [eax+4] 3Eh +
mov esi eax +
jnz loc_42E7F0  +
mov edx [eax+8] +
cmp edx 4 +
jbe loc_42E7F0  +
mov ecx [eax+0Ch] +
movzx eax byte ptr [ecx+edx-2] +
cmp al 5Ch +
jnz loc_42E808  +
movzx eax byte ptr [ecx+edx-3] +
lea edi [edx-3] +
cmp al 5Ch +
jnz loc_42E7E7  +
mov eax [ebx+1E8h] +
test eax eax +
jz loc_42E739  +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
sub edx 4 +
lea edi [esp+1Bh] +
add ecx 1 +
and edi 0FFFFFFF0h +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edi +
call memcpy  +
mov eax [esi+8] +
mov byte ptr [edi+eax-4] 0 +
mov eax [ebx+1E8h] +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call eax  +
jmp loc_42E739  +
cmp al 2Fh +
jz loc_42E797  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 3 +
call sub_41BC80  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_42E78B  +
jmp loc_42E7F0  +
***
mov eax [esp+arg_0] +
imul ecx ebx +
mov [eax+244h] ebx +
lea edx dword_4654E0[ecx] +
movzx ecx byte ptr ds:dword_4654E0[ecx] +
mov [eax+268h] cl +
movzx ecx byte ptr [edx+1] +
mov [eax+248h] cl +
movzx ecx byte ptr [edx+2] +
mov [eax+24Fh] cl +
movzx ecx byte ptr [edx+3] +
mov [eax+263h] cl +
movzx ecx byte ptr [edx+4] +
mov [eax+274h] cl +
movzx ecx byte ptr [edx+5] +
mov [eax+269h] cl +
movzx ecx byte ptr [edx+6] +
mov [eax+24Eh] cl +
movzx ecx byte ptr [edx+7] +
mov [eax+250h] cl +
movzx ecx byte ptr [edx+8] +
mov [eax+252h] cl +
movzx ecx byte ptr [edx+9] +
mov [eax+271h] cl +
movzx ecx byte ptr [edx+0Ah] +
mov [eax+275h] cl +
movzx ecx byte ptr [edx+0Bh] +
mov [eax+276h] cl +
movzx ecx byte ptr [edx+0Ch] +
mov [eax+24Dh] cl +
movzx edx byte ptr [edx+0Dh] +
mov [eax+251h] dl +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov eax ds:dword_46B2E0 +
test eax eax +
jnz loc_42E92D  +
mov ds:dword_46B2E0 1 +
call sub_4200A0  +
mov ds:byte_46B21D 23h +
mov ds:byte_46B209 5Dh +
mov ds:byte_46B201 7Ch +
mov ds:byte_46B208 5Bh +
mov ds:byte_46B207 5Eh +
mov ds:byte_46B21E 7Dh +
mov ds:byte_46B20F 5Ch +
mov ds:byte_46B21C 7Bh +
mov ds:byte_46B20D 7Eh +
mov dword ptr [esp+4] 300h +
mov dword ptr [esp] 1 +
call sub_435F00  +
mov ecx 1Ch +
lea esi [eax+30h] +
mov ebx eax +
test esi 1 +
mov edx esi +
jnz loc_42EBB1  +
test dl 2 +
jnz loc_42EBC3  +
mov edi ecx +
xor eax eax +
and edi 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax edi +
jb loc_42E969  +
add edx eax +
test cl 2 +
jz loc_42E987  +
xor edi edi +
add edx 2 +
mov [edx-2] di +
and ecx 1 +
jz loc_42E98F  +
mov byte ptr [edx] 0 +
mov eax [esp+30h] +
lea edi [ebx+0F4h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42E820  +
mov byte ptr [ebx+259h] 1 +
mov byte ptr [ebx+24Bh] 1 +
mov byte ptr [ebx+24Ch] 1 +
mov dword ptr [ebx+240h] 8 +
mov byte ptr [ebx+26Eh] 1 +
mov byte ptr [ebx+258h] 2 +
mov byte ptr [ebx+25Ch] 1 +
mov byte ptr [ebx+28Ah] 0FFh +
mov byte ptr [ebx+28Bh] 0 +
mov byte ptr [ebx+254h] 1 +
mov byte ptr [ebx+25Bh] 0 +
mov byte ptr [ebx+262h] 1 +
mov byte ptr [ebx+264h] 1 +
mov byte ptr [ebx+25Eh] 1 +
mov byte ptr [ebx+25Fh] 1 +
mov byte ptr [ebx+260h] 0 +
mov byte ptr [ebx+26Dh] 2 +
mov dword ptr [ebx+284h] 1 +
mov byte ptr [ebx+272h] 1 +
mov byte ptr [ebx+2A9h] 1 +
mov byte ptr [ebx+273h] 1 +
mov byte ptr [ebx+256h] 0 +
mov dword ptr [ebx+294h] 20h +
mov dword ptr [ebx+298h] 8 +
mov dword ptr [ebx+2A0h] 20h +
mov dword ptr [ebx+29Ch] 20h +
mov byte ptr [ebx+2A4h] 0 +
mov byte ptr [ebx+2A5h] 1 +
mov byte ptr [ebx+2A6h] 1 +
call sub_4171E0  +
mov dword ptr [ebx+27Ch] 0 +
mov [ebx+278h] eax +
call sub_4171E0  +
cmp byte ptr [ebx+24Bh] 0 +
mov [esp] edi +
mov dword ptr [esp+4] 0FAh +
setz byte ptr [ebx+0Dh]  +
mov [ebx+280h] eax +
mov eax [esp+38h] +
mov dword ptr [ebx+7Ch] offset unk_4651E0 +
mov byte ptr [ebx+164h] 53h +
mov dword ptr [ebx+168h] 0 +
mov [ebx+1Ch] eax +
xor eax eax +
mov [ebx+176h] ax +
mov byte ptr [ebx+174h] 16h +
call sub_420990  +
mov eax [ebx+0FCh] +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+104h] edi +
mov [ebx+4Ch] esi +
mov [ebx+0F0h] eax +
mov dword ptr [ebx+44h] 0 +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
call sub_421430  +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+24h] eax +
call sub_421430  +
mov [esp] ebx +
mov dword ptr [ebx+2F8h] 0 +
mov dword ptr [ebx+2FCh] 0 +
mov dword ptr [ebx+15Ch] 0FFFFFFFEh +
mov [ebx+28h] eax +
call sub_426FA0  +
lea eax [ebx+1B0h] +
mov dword ptr [esp+10h] offset free +
mov dword ptr [esp+0Ch] offset sub_435ED0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_440C70  +
mov [esp] ebx +
call sub_42D460  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_423FC0  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea edx [eax+31h] +
mov cl 1Bh +
test dl 2 +
mov byte ptr [eax+30h] 0 +
jz loc_42E962  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_42E962  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+1Ch] edx +
retn   +
***
mov [esp] ebx +
call sub_41A260  +
mov ecx [ebx] +
test ecx ecx +
jnz loc_42EC10  +
mov eax [ebx+2C8h] +
mov [esp] eax +
call free  +
mov eax [ebx+110h] +
test eax eax +
jz loc_42EC52  +
mov [esp] eax +
call free  +
mov dword ptr [ebx+110h] 0 +
mov dword ptr [ebx+114h] 0 +
mov eax [ebx+180h] +
test eax eax +
jz loc_42EC64  +
mov [esp] eax +
call sub_42DF60  +
lea eax [ebx+1B0h] +
mov [esp] eax +
lea ebp [ebx+0F4h] +
mov dword ptr [esp+4] 0 +
call sub_440DE0  +
mov [esp] ebx +
call sub_424160  +
mov [esp] ebx +
call sub_42D560  +
mov [esp] ebx +
call near ptr dword_411840  +
***
mov eax [ebx+24h] +
mov [esp] eax +
call sub_421640  +
mov eax [ebx+28h] +
mov [esp] eax +
call sub_421640  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call sub_421640  +
mov eax [ebx+0FCh] +
mov esi [ebx+0F4h] +
mov [esp] eax +
call free  +
test esi esi +
jz loc_42ECF0  +
mov eax [esi+8] +
mov edi [esi] +
mov [esp] eax +
call free  +
cmp ebp esi +
jz loc_42ECEA  +
mov [esp] esi +
call free  +
mov esi edi +
test esi esi +
jnz loc_42ECD1  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_42ED02  +
jmp loc_42ED10  +
mov eax esi +
mov esi [eax] +
mov [esp] eax +
call free  +
test esi esi +
jnz loc_42ED00  +
mov eax [ebx+2ECh] +
test eax eax +
jz loc_42ED4A  +
mov edx [ebx+2F0h] +
test edx edx +
jle loc_42ED42  +
xor esi esi +
mov eax [eax+esi*8] +
add esi 1 +
mov [esp] eax +
call free  +
mov eax [ebx+2ECh] +
cmp [ebx+2F0h] esi +
jg loc_42ED26  +
mov [esp] eax +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jz loc_42ED79  +
mov eax [esi] +
mov [ebx+2F8h] eax +
mov eax [esi+4] +
mov [esp] eax +
call free  +
mov [esp] esi +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jnz loc_42ED54  +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov ecx [esp+4] +
mov eax offset off_465340 +
lea esi [esi+0] +
movzx edx word ptr [eax+6] +
cmp edx ecx +
jz loc_42EDB5  +
add eax 8 +
cmp eax offset a__timestamp__ +
jb loc_42EDA0  +
xor eax eax +
retn   +
***
mov eax [eax] +
retn   +
***
push esi  +
mov esi 78h +
push ebx  +
sub esp 1Ch +
mov edi [esp+20h+arg_0] +
cmp byte ptr [edi+270h] 0 +
jnz loc_42EDEA  +
cmp byte ptr [edi+2A7h] 0 +
mov si 84h +
jnz loc_42EE83  +
add esi offset off_465440 +
mov ebx offset off_465440 +
cmp esi ebx +
jbe loc_42EE7B  +
lea esi [esi+0] +
cmp word ptr [ebx+6] 0Ah +
jnz loc_42EE1A  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_42EE74  +
mov eax [edi+224h] +
test eax eax +
jz loc_42EE74  +
movzx edx word ptr [ebx+4] +
mov eax [ebx] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
call sub_4241A0  +
movzx edx byte ptr [eax+14h] +
and edx 0FFFFFFC0h +
or edx 1 +
mov [eax+14h] dl +
movzx edx word ptr [eax+14h] +
mov ebp edx +
and edx 3Fh +
shr bp 6 +
mov ecx ebp +
or ecx 4 +
shl ecx 6 +
or edx ecx +
mov [eax+14h] dx +
cmp byte ptr [ebx+8] 0 +
jz loc_42EE6D  +
or ebp 14h +
and edx 3Fh +
shl ebp 6 +
or edx ebp +
mov [eax+14h] dx +
movzx edx word ptr [ebx+6] +
mov [eax+18h] edx +
add ebx 0Ch +
cmp ebx esi +
jb loc_42EE00  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+269h] 1 +
sbb esi esi +
and esi 0Ch +
add esi 84h +
jmp loc_42EDEA  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_42EDC0  +
cmp byte ptr [ebx+270h] 0 +
jnz loc_42EED8  +
cmp byte ptr [ebx+2A7h] 0 +
jz loc_42EFC0  +
cmp byte ptr [ebx+269h] 0 +
jnz loc_42EFC0  +
cmp byte ptr [ebx+248h] 0 +
mov eax [ebx+244h] +
jz loc_42EF82  +
lea edx [eax-0Dh] +
cmp edx 1 +
jbe loc_42F020  +
lea edx [eax-0Bh] +
cmp edx 1 +
jbe loc_42F080  +
sub eax 9 +
cmp eax 1 +
jbe loc_42F050  +
mov dword ptr [esp+4] offset a__cplusplus199 +
mov [esp] ebx +
call sub_41AAD0  +
cmp byte ptr [ebx+250h] 0 +
jz loc_42EF5F  +
cmp byte ptr [ebx+248h] 0 +
jz loc_42EF3F  +
mov eax [ebx+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_42EF5F  +
mov dword ptr [esp+4] offset a__stdc_utf_16_ +
mov [esp] ebx +
call sub_41AAD0  +
mov dword ptr [esp+4] offset a__stdc_utf_32_ +
mov [esp] ebx +
call sub_41AAD0  +
test esi esi +
jz loc_42EFD5  +
mov dword ptr [esp+4] offset a__stdc_hosted_ +
mov [esp] ebx +
call sub_41AAD0  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_42EFEE  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp eax 0Fh +
jz loc_42F004  +
cmp eax 4 +
jz loc_42F065  +
and eax 0FFFFFFFBh +
cmp eax 2 +
jz loc_42F035  +
cmp byte ptr [ebx+268h] 0 +
jz loc_42EF1F  +
mov dword ptr [esp+4] offset a__stdc_version +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__stdc__1 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EED8  +
***
mov dword ptr [esp+4] offset a__stdc_hoste_0 +
mov [esp] ebx +
call sub_41AAD0  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_42EF7C  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] offset a__objc__1 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41AAD0  +
***
mov dword ptr [esp+4] offset a__assembler__1 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__cplusplus201 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_0 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_0 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_1 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_1 +
mov [esp] ebx +
call sub_41AAD0  +
jmp loc_42EF1F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
movzx eax byte ptr [edi+248h] +
test al al +
jz loc_42F0BC  +
mov byte ptr [edi+25Ah] 0 +
cmp byte ptr [edi+26Bh] 0 +
jnz loc_42F182  +
cmp byte ptr [edi+258h] 2 +
movzx edx byte ptr [edi+270h] +
jz loc_42F1A5  +
test dl dl +
jz loc_42F0EF  +
mov byte ptr [edi+24Dh] 0 +
mov byte ptr [edi+258h] 0 +
test al al +
jnz loc_42F160  +
cmp byte ptr [edi+26Fh] 0 +
jz loc_42F158  +
xor esi esi +
nop   +
or esi 208h +
mov ebx offset off_465340 +
nop   +
lea esi [esi+0] +
movzx edx word ptr [ebx+4] +
add ebx 8 +
mov eax [ebx-8] +
mov [esp] edi +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4241A0  +
movzx ecx word ptr [eax+14h] +
and byte ptr [eax+0Ch] 0FEh +
mov edx ecx +
and ecx 3Fh +
shr dx 6 +
or edx esi +
shl edx 6 +
or ecx edx +
mov [eax+14h] cx +
movzx ecx byte ptr [ebx-2] +
cmp ebx offset a__timestamp__ +
lea edx [ecx+ecx] +
mov [eax+0Ch] dl +
jb loc_42F110  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
cmp byte ptr [edi+26Eh] 0 +
setnz al  +
cmp byte ptr [edi+26Fh] 0 +
mov esi eax +
jnz loc_42F100  +
test eax eax +
jz loc_42F158  +
mov esi 1 +
jmp loc_42F106  +
***
cmp byte ptr [edi+2A8h] 0 +
jnz loc_42F18F  +
mov byte ptr [edi+10h] 1 +
xor edx edx +
cmp byte ptr [edi+258h] 2 +
mov byte ptr [edi+270h] 0 +
jnz loc_42F0DD  +
cmp byte ptr [edi+24Dh] 0 +
setz byte ptr [edi+258h]  +
jmp loc_42F0DD  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_42F1F2  +
mov eax [ebx+180h] +
test eax eax +
jz loc_42F2F2  +
mov [esp+4] esi +
mov [esp] eax +
call sub_42E080  +
lea eax [ebx+78h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_42C3B0  +
mov [ebx+0A0h] eax +
mov [esp] eax +
call sub_42C3A0  +
mov edx eax +
xor eax eax +
test dl dl +
jnz loc_42F268  +
mov eax [ebx+0A0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42CE30  +
mov eax esi +
cmp byte ptr [ebx+26Bh] 0 +
jnz loc_42F270  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] ebx +
call sub_422520  +
cmp byte ptr [eax+4] 25h +
mov esi eax +
jz loc_42F2A8  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_41BC80  +
mov edx [ebx+1Ch] +
mov eax [edx+8] +
sub eax 1 +
imul eax eax +
add eax [edx] +
mov eax [eax+8] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov byte ptr [ebx+8] 1 +
mov [esp] ebx +
call sub_422520  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
call sub_41BC80  +
mov byte ptr [ebx+8] 0 +
cmp byte ptr [edi+4] 37h +
jnz loc_42F280  +
movzx eax word ptr [esi+6] +
mov [esp] ebx +
and eax 1 +
mov [esp+4] eax +
call sub_419380  +
test eax eax +
jz loc_42F280  +
mov eax ebx +
call sub_42E710  +
nop   +
jmp loc_42F290  +
***
call sub_42DF40  +
mov [ebx+180h] eax +
jmp loc_42F1E6  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
cmp byte ptr [ebx+267h] 0 +
jz loc_42F330  +
jmp loc_42F384  +
mov [esp] ebx +
call sub_41A260  +
mov eax [ebx] +
test eax eax +
jnz loc_42F328  +
mov edx [ebx+28Ch] +
test edx edx +
jz loc_42F367  +
test esi esi +
jz loc_42F367  +
mov eax [ebx+180h] +
mov dword ptr [esp+8] 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_42E2B0  +
cmp byte ptr [ebx+291h] 0 +
jnz loc_42F39E  +
cmp byte ptr [ebx+253h] 0 +
jnz loc_42F376  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_42D740  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_41B220 +
mov [esp] ebx +
call sub_424230  +
jmp loc_42F330  +
***
mov eax [ebx+180h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_42E490  +
jmp loc_42F367  +
***
sub esp 48h +
mov ecx 0Ah +
lea edx [esp+48h+var_30] +
mov edi edx +
stos   +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_44] 28h +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_2C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_40] eax +
call sub_42F5C0  +
test eax eax +
jz loc_42F44C  +
mov edx [esp+48h+var_30] +
mov [eax] edx +
mov edx [esp+48h+var_2C] +
mov [eax+4] edx +
mov edx [esp+48h+var_28] +
mov [eax+8] edx +
mov edx [esp+48h+var_24] +
mov [eax+0Ch] edx +
mov edx [esp+48h+var_20] +
mov [eax+10h] edx +
mov edx [esp+48h+var_1C] +
mov [eax+14h] edx +
mov edx [esp+48h+var_18] +
mov [eax+18h] edx +
mov edx [esp+48h+var_14] +
mov [eax+1Ch] edx +
mov edx [esp+48h+var_10] +
mov [eax+20h] edx +
mov edx [esp+48h+var_C] +
mov [eax+24h] edx +
add esp 48h +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 34h +
lea eax [esp+2Ch] +
mov ebx [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov dword ptr [esp+2Ch] 0 +
mov [esp] eax +
call sub_44B220  +
mov edx [ebx] +
test edx edx +
jle loc_42F498  +
sub edx 1 +
xor eax eax +
mov [ebx] edx +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+18h] +
cmp dword ptr [esp+2Ch] 1 +
sbb eax 0 +
test edx edx +
jz loc_42F4E0  +
mov esi [ebx+10h] +
mov ecx [ebx+8] +
mov edx [ebx+4] +
mov [esp+10h] esi +
mov esi [ebx+0Ch] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] edx +
mov [esp+0Ch] esi +
call sub_42F8F0  +
mov [ebx+14h] eax +
cmp eax 1 +
sbb eax eax +
add esp 34h +
not eax  +
and eax 5 +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [ebx+10h] +
mov edx [ebx+8] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call edx  +
mov [ebx+14h] eax +
jmp loc_42F4CE  +
***
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 0 +
add eax 1 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_44] 1000h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_20] ebx +
mov [esp+48h+var_1C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_10] 0 +
mov [esp+48h+var_18] eax +
mov eax [esp+48h+arg_10] +
mov [esp+48h+var_14] eax +
call sub_42F5C0  +
test eax eax +
jz loc_42F5B4  +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 1000h +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_42F610  +
mov [esp+48h+var_C] 1 +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset loc_42F460 +
call sub_44B520  +
mov eax [esp+48h+var_10] +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_C] 0 +
jmp loc_42F597  +
***
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_42F5E0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+18h+arg_8] +
test eax eax +
jz loc_42F5D6  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+18h+var_14] offset aMalloc +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_18] eax +
call [esp+18h+arg_8]  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
jmp free  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_10] +
mov esi [esp+10h+arg_4] +
mov ecx [ebx+8] +
cmp ecx esi +
jb loc_42F650  +
mov eax [ebx] +
mov edx [ebx+4] +
lea edi [edx+esi] +
sub ecx esi +
mov [ebx+4] edi +
add eax edx +
mov [ebx+8] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_42F690  +
lea edx [eax+1000h] +
cmp eax 1000h +
lea ecx [eax+eax] +
cmovb edx ecx +
add eax esi +
cmp edx eax +
cmovnb eax edx +
mov edi eax +
mov eax [ebx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_42F697  +
mov edx [ebx+4] +
mov [ebx] eax +
sub edi edx +
mov ecx edi +
jmp loc_42F63A  +
mov edx esi +
shl edx 5 +
jmp loc_42F668  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+10h+var_C] offset aRealloc +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_10] eax +
call [esp+10h+arg_8]  +
xor eax eax +
jmp loc_42F647  +
***
mov ebx [esp+18h+arg_4] +
mov edx [ebx+4] +
mov eax [ebx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
mov [ebx] eax +
jz loc_42F6F0  +
mov dword ptr [ebx+8] 0 +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+18h+var_14] offset aRealloc +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_18] eax +
call [esp+18h+arg_8]  +
xor eax eax +
jmp loc_42F6EB  +
***
mov eax [esp+18h+arg_C] +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_42F6C0  +
test eax eax +
jz loc_42F767  +
mov eax [ebx] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_C] +
mov edi [esp+1Ch+arg_10] +
mov [esp+1Ch+var_10] eax +
mov ebp [esp+1Ch+arg_8] +
mov eax ebx +
mov edx esi +
mov ecx edi +
call sub_42F770  +
test eax eax +
jz loc_42F925  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42F930  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+1Ch+var_10] +
mov eax [ebx+0Ch] +
mov [esp+1Ch+arg_10] edi +
mov [esp+1Ch+arg_C] esi +
mov [esp+1Ch+arg_8] ebp +
mov [esp+1Ch+arg_0] ebx +
mov [esp+1Ch+arg_4] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov ecx [esp+40h] +
mov edx [esp+3Ch] +
mov eax ebx +
call sub_42F770  +
test eax eax +
jz loc_42F984  +
mov edx [ebx+1Ch] +
xor eax eax +
test edx edx +
jz loc_42F990  +
add esp 28h +
pop ebx  +
retn   +
***
mov ecx [esp+40h] +
mov edx [esp+38h] +
mov eax [ebx+14h] +
mov [esp] ebx +
mov [esp+10h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+0Ch] ecx +
mov [esp+4] edx +
call eax  +
add esp 28h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_C] +
mov esi [esp+10h+arg_0] +
test ebx ebx +
jz loc_42FA45  +
mov dword ptr [ebx] 0 +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open  +
test eax eax +
js loc_42FA03  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi ds:__imp__errno +
call edi  +
cmp dword ptr [eax] 2 +
jz loc_42FA33  +
call edi  +
mov eax [eax] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_10] eax +
call [esp+10h+arg_4]  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx] 1 +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open  +
mov edi ds:__imp__errno +
test eax eax +
jns loc_42F9FC  +
jmp loc_42FA10  +
***
jmp sub_42FA70  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call _close  +
mov edx 1 +
test eax eax +
js loc_42FA90  +
mov eax edx +
add esp 1Ch +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aClose +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_4]  +
xor edx edx +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] 0FFFFFFFFh +
mov [esp+1Ch+var_18] offset aNoDebugInfoInP +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_C]  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+14h] +
mov dword ptr [esp+0Ch] 0FFFFFFFFh +
mov dword ptr [esp+8] offset aNoSymbolTableI +
mov [esp+4] eax +
mov eax [esp+10h] +
jmp eax  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx] +
cmp edx [eax+4] +
jb loc_42FB50  +
cmp edx [eax+0Ch] +
setnb al  +
movzx eax al +
retn   +
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax [ebx+4] +
test eax eax +
jnz loc_42FBE3  +
mov ebx [ebx+18h] +
test ebx ebx +
jz loc_42FC20  +
lea esi [esp+34h] +
jmp loc_42FB8B  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42FC20  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_42FB30 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jz loc_42FB81  +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add ebx 18h +
lea esi [esp+34h] +
jmp loc_42FC1A  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_42FB30 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jnz loc_42FBB5  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42FBF0  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
jmp loc_42FBCA  +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov eax [esp+10Ch+arg_C] +
lea ebx [esp+10Ch+var_84] +
mov ebp [esp+10Ch+arg_0] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 40h +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
test eax eax +
jz loc_42FD65  +
mov eax [esp+10Ch+var_84] +
cmp byte ptr [eax] 4Dh +
jnz loc_42FCB3  +
cmp byte ptr [eax+1] 5Ah +
jz loc_42FE5E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_430AA0  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
test eax eax +
jz loc_42FD8F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_430AA0  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aExecutableFile +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_BC] 0 +
jmp loc_42FD6F  +
xor esi esi +
mov [esp+10Ch+var_BC] 0 +
mov [esp+10Ch+var_C0] 0 +
mov ebx [esp+10Ch+var_BC] +
test ebx ebx +
jnz loc_42FE30  +
mov ecx [esp+10Ch+var_C0] +
test ecx ecx +
jnz loc_42FE00  +
test esi esi +
jnz loc_42FDD0  +
cmp [esp+10Ch+arg_4] 0FFFFFFFFh +
jz loc_42FDBE  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_42FA70  +
add esp 10Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_54] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
jmp loc_42FD8F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
jmp loc_42FD8B  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_6C] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
jmp loc_42FD83  +
mov edi [eax+3Ch] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_430AA0  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
test eax eax +
jz loc_42FD65  +
test edi edi +
jz loc_42FD16  +
mov esi [esp+10Ch+var_84] +
mov [esp+10Ch+var_104] 4 +
mov [esp+10Ch+var_108] offset aPe +
mov [esp+10Ch+var_10C] esi +
call memcmp  +
mov [esp+10Ch+var_C0] eax +
movzx eax word ptr [esi+6] +
mov [esp+10Ch+var_AA] ax +
mov eax [esi+0Ch] +
mov [esp+10Ch+var_B8] eax +
mov eax [esi+10h] +
movzx esi word ptr [esi+14h] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_A8] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_430AA0  +
mov eax [esp+10Ch+var_C0] +
test eax eax +
jnz loc_42FD38  +
movzx eax [esp+10Ch+var_AA] +
lea ecx [esp+10Ch+var_78] +
movzx ebx si +
mov [esp+10Ch+var_F4] ecx +
mov ecx [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B0] eax +
lea eax [eax+eax*4] +
lea eax [ebx+eax*8] +
mov [esp+10Ch+var_100] eax +
lea eax [edi+18h] +
mov [esp+10Ch+var_F8] ecx +
mov ecx [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_FC] ecx +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
test eax eax +
jz loc_42FD65  +
cmp si 20h +
mov edx [esp+10Ch+var_78] +
jbe loc_43060E  +
movzx eax word ptr [edx] +
cmp ax 10Bh +
jz loc_430816  +
cmp ax 20Bh +
jnz loc_4307E0  +
mov eax [edx+18h] +
mov [esp+10Ch+var_A0] eax +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_43062F  +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_C0] edx +
lea eax [eax+eax*8] +
add eax eax +
mov edi eax +
mov [esp+10Ch+var_98] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_FC] eax +
mov eax edi +
add eax 4 +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_B8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
mov edx [esp+10Ch+var_C0] +
test eax eax +
jz loc_43065C  +
mov eax [esp+10Ch+var_60] +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_C0] 1 +
mov [esp+10Ch+var_BC] 0 +
mov eax [eax+edi] +
cmp eax 4 +
mov [esp+10Ch+var_A4] eax +
ja loc_43083F  +
lea eax [edx+ebx] +
mov ecx 0Fh +
lea edx [esp+10Ch+var_48] +
mov esi eax +
mov [esp+10Ch+var_9C] eax +
mov edi edx +
xor eax eax +
stos   +
mov eax [esp+10Ch+var_B0] +
mov [esp+10Ch+var_B8] 0 +
test eax eax +
jz loc_430105  +
mov [esp+10Ch+arg_0] ebp +
lea esi [esi+0] +
xor edi edi +
cmp byte ptr [esi] 2Fh +
jz loc_430520  +
mov eax [esp+10Ch+var_6C] +
xor ebx ebx +
mov ebp [esp+10Ch+var_64] +
add eax edi +
mov [esp+10Ch+var_B4] eax +
test edi edi +
mov ecx ds:off_465748[ebx*4] +
jz loc_430236  +
cmp edi ebp +
jnb loc_4300E4  +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_10C] ecx +
mov [esp+10Ch+var_108] eax +
call strcmp  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jnz loc_430260  +
add ebx 1 +
cmp ebx 5 +
jnz loc_4300B1  +
add [esp+10Ch+var_B8] 1 +
add esi 28h +
mov eax [esp+10Ch+var_B8] +
cmp [esp+10Ch+var_B0] eax +
ja loc_430090  +
mov ebp [esp+10Ch+arg_0] +
mov eax [esp+10Ch+var_A8] +
xor ebx ebx +
test eax eax +
jz loc_4303DF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_42F5C0  +
test eax eax +
mov [esp+10Ch+var_94] eax +
jz loc_430206  +
mov eax [esp+10Ch+var_6C] +
mov edx 38E38E39h +
mov [esp+10Ch+var_90] eax +
mov eax [esp+10Ch+var_60] +
mov ecx eax +
mov [esp+10Ch+var_B0] eax +
mov eax [esp+10Ch+var_98] +
mul  edx +
mov [esp+10Ch+var_B8] edx +
shr [esp+10Ch+var_B8] 2 +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_430934  +
xor edi edi +
xor edx edx +
mov [esp+10Ch+var_A8] edi +
mov edi ecx +
mov [esp+10Ch+var_98] 0 +
nop   +
lea eax [edx+edx*8] +
lea eax [edi+eax*2] +
movzx ecx word ptr [eax+0Eh] +
mov word ptr [esp+10Ch+var_B4] cx +
movzx ecx word ptr [eax+0Ch] +
test cx cx +
jle loc_430286  +
cmp [esp+10Ch+var_AA] cx +
jnb loc_430286  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aInvalidSection +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_94] +
mov [esp+10Ch+var_108] eax +
call sub_42F610  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
jmp loc_42FD77  +
xor eax eax +
movzx edx byte ptr [ecx+eax] +
cmp dl [esi+eax] +
jnz loc_4300E4  +
test dl dl +
jz loc_430260  +
add eax 1 +
cmp eax 8 +
jnz loc_430238  +
xor eax eax +
cmp byte ptr [ecx+8] 0 +
setz al  +
jmp loc_4300DC  +
mov edx [esi+14h] +
lea eax [ebx+ebx*2] +
shl eax 2 +
mov [esp+eax+10Ch+var_48] edx +
mov edx [esi+8] +
cmp [esi+10h] edx +
cmovbe edx [esi+10h] +
mov [esp+eax+10Ch+var_44] edx +
jmp loc_4300EC  +
movzx esi byte ptr [eax] +
mov ebx esi +
test bl bl +
jnz loc_43029C  +
mov ebx [esp+10Ch+var_A4] +
cmp ebx [eax+4] +
jbe loc_4301B7  +
movzx ebx word ptr [esp+10Ch+var_B4] +
shr bx 4 +
cmp bx 2 +
jz loc_430548  +
movzx eax byte ptr [eax+11h] +
lea edx [edx+eax+1] +
cmp [esp+10Ch+var_B8] edx +
ja loc_430190  +
mov eax [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov edi [esp+10Ch+var_A8] +
lea ebx ds:8[eax*8] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_42F5C0  +
test eax eax +
mov [esp+10Ch+var_A8] eax +
jz loc_4301D8  +
test edi edi +
mov [esp+10Ch+var_B4] 0 +
jnz loc_4308D2  +
mov edi [esp+10Ch+var_A8] +
xor esi esi +
mov [esp+10Ch+arg_0] ebp +
nop   +
lea esi [esi+0] +
mov ecx [esp+10Ch+var_B0] +
lea eax [esi+esi*8] +
lea ebx [ecx+eax*2] +
movsx edx word ptr [ebx+0Ch] +
movzx ecx word ptr [ebx+0Eh] +
test dx dx +
jle loc_430343  +
cmp [esp+10Ch+var_AA] dx +
jnb loc_430343  +
call abort  +
movzx ebp byte ptr [ebx] +
mov eax ebp +
test al al +
jz loc_430532  +
mov eax ebx +
shr cx 4 +
cmp cx 2 +
jz loc_430586  +
movzx eax byte ptr [ebx+11h] +
lea esi [esi+eax+1] +
cmp [esp+10Ch+var_B8] esi +
ja loc_430320  +
mov ebp [esp+10Ch+arg_0] +
mov dword ptr [edi] 0 +
mov esi [esp+10Ch+var_A8] +
mov dword ptr [edi+4] 0FFFFFFFFh +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_100] offset sub_42FB10 +
mov [esp+10Ch+var_104] 8 +
mov [esp+10Ch+var_10C] esi +
mov [esp+10Ch+var_108] edi +
call sub_430AF0  +
mov eax [esp+10Ch+var_94] +
mov dword ptr [eax] 0 +
mov [eax+4] esi +
mov [eax+8] edi +
mov eax [ebp+4] +
test eax eax +
jz loc_4308A4  +
lea ecx [ebp+18h] +
mov edx ecx +
jmp loc_4303CA  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4303C8  +
mov edi [esp+10Ch+var_94] +
cmpxchg [edx] edi +
jnz loc_4303C4  +
mov ebx 1 +
mov eax [esp+10Ch+arg_C] +
xor edi edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_430AA0  +
lea eax [esp+10Ch+var_44] +
xor ecx ecx +
mov [esp+10Ch+var_C0] ebx +
mov edx [eax] +
test edx edx +
jz loc_43045A  +
test ecx ecx +
jnz loc_43061B  +
mov ecx [eax-4] +
mov ebx ecx +
add edx ebx +
cmp edi edx +
cmovl edi edx +
add eax 0Ch +
lea ebx [esp+10Ch+var_8] +
cmp eax ebx +
jnz loc_430440  +
test edi edi +
mov ebx [esp+10Ch+var_C0] +
jz loc_430478  +
test ecx ecx +
jnz loc_430671  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_42FA70  +
test eax eax +
jz loc_42FD6F  +
mov [esp+10Ch+var_88] offset sub_42FAC0 +
mov eax [ebp+4] +
test eax eax +
jnz loc_4304E2  +
test ebx ebx +
jz loc_430502  +
mov dword ptr [ebp+14h] offset loc_42FB60 +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4304F0  +
cmp eax offset sub_42FAC0 +
jz loc_4304F0  +
add esp 10Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_430512  +
mov dword ptr [ebp+14h] offset loc_42FB60 +
jmp loc_4304C4  +
mov eax [esp+10Ch+var_88] +
mov edi [esp+10Ch+arg_10] +
mov [edi] eax +
jmp loc_4304D2  +
mov edx [ebp+14h] +
test edx edx +
jnz loc_4304C4  +
mov dword ptr [ebp+14h] offset loc_42FAF0 +
jmp loc_4304C4  +
mov edx offset loc_42FAF0 +
mov eax ebx +
cmpxchg [ebp+14h] edx +
jmp loc_4304C4  +
lea eax [esi+1] +
mov [esp+10Ch+var_10C] eax +
call atoi  +
mov edi eax +
jmp loc_43009B  +
mov eax [ebx+4] +
cmp [esp+10Ch+var_A4] eax +
jbe loc_43033E  +
add eax [esp+10Ch+var_90] +
jmp loc_430352  +
test cx cx +
jle loc_4302AF  +
mov ecx esi +
add [esp+10Ch+var_98] 1 +
test cl cl +
jz loc_4302AF  +
xor ecx ecx +
cmp byte ptr [eax+ecx] 0 +
jz loc_430575  +
add ecx 1 +
cmp ecx 8 +
jnz loc_430562  +
mov ecx 8 +
mov esi [esp+10Ch+var_A8] +
lea ecx [esi+ecx+1] +
mov [esp+10Ch+var_A8] ecx +
jmp loc_4302AF  +
test dx dx +
jle loc_430360  +
mov ecx ebp +
test cl cl +
jz loc_4305E2  +
xor edx edx +
cmp byte ptr [eax+edx] 0 +
jz loc_430822  +
add edx 1 +
cmp edx 8 +
jnz loc_430597  +
mov [esp+10Ch+var_C0] 9 +
mov ebp 8 +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_104] ebp +
mov [esp+10Ch+var_10C] eax +
call memcpy  +
mov ecx [esp+10Ch+var_B4] +
mov byte ptr [ecx+ebp] 0 +
mov ebp [esp+10Ch+var_C0] +
mov eax ecx +
movsx edx word ptr [ebx+0Ch] +
add ecx ebp +
mov [esp+10Ch+var_B4] ecx +
xor ecx ecx +
cmp byte ptr [eax] 5Fh +
setz cl  +
add edi 8 +
add eax ecx +
mov ecx [esp+10Ch+var_A0] +
mov [edi-8] eax +
lea eax [edx+edx*4] +
mov edx [esp+10Ch+var_9C] +
add ecx [edx+eax*8-1Ch] +
mov eax [ebx+8] +
add eax ecx +
mov [edi-4] eax +
jmp loc_430360  +
mov [esp+10Ch+var_A0] 0 +
jmp loc_42FFC0  +
mov esi [eax-4] +
cmp esi ecx +
mov ebx esi +
jge loc_430453  +
mov ecx esi +
jmp loc_430451  +
mov [esp+10Ch+var_A4] 0 +
mov [esp+10Ch+var_A8] 0 +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_98] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_43005B  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_430206  +
lea eax [esp+10Ch+var_54] +
sub edi ecx +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_100] edi +
mov [esp+10Ch+var_104] ecx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_C0] ecx +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
test eax eax +
jz loc_42FD6F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_42FA70  +
mov ecx [esp+10Ch+var_C0] +
test eax eax +
jz loc_4308C8  +
mov esi [esp+10Ch+var_54] +
lea edx [esp+10Ch+var_44] +
mov edi [edx] +
test edi edi +
jnz loc_430830  +
mov dword ptr [edx+4] 0 +
add edx 0Ch +
lea eax [esp+10Ch+var_8] +
cmp eax edx +
jnz loc_4306FC  +
lea eax [esp+10Ch+var_88] +
mov esi 1 +
mov [esp+10Ch+var_D0] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_DC] 0 +
mov [esp+10Ch+var_108] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_D4] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_D8] eax +
mov eax [esp+10Ch+var_14] +
mov [esp+10Ch+var_E0] eax +
mov eax [esp+10Ch+var_10] +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+var_20] +
mov [esp+10Ch+var_E8] eax +
mov eax [esp+10Ch+var_1C] +
mov [esp+10Ch+var_EC] eax +
mov eax [esp+10Ch+var_2C] +
mov [esp+10Ch+var_F0] eax +
mov eax [esp+10Ch+var_28] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+var_38] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+var_34] +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_44] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_40] +
mov [esp+10Ch+var_104] eax +
call sub_434680  +
mov [esp+10Ch+arg_4] 0FFFFFFFFh +
test eax eax +
jz loc_42FD6F  +
jmp loc_4304B2  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aBadMagicInPeOp +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_430206  +
mov eax [edx+1Ch] +
mov [esp+10Ch+var_A0] eax +
jmp loc_42FFC0  +
lea ecx [edx+1] +
mov ebp edx +
mov [esp+10Ch+var_C0] ecx +
jmp loc_4305B6  +
mov eax esi +
sub eax ecx +
add eax [edx-4] +
mov [edx+4] eax +
jmp loc_43070D  +
lea eax [esp+10Ch+var_6C] +
mov edi [esp+10Ch+var_B8] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
add edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B4] edx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_A4] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_430980  +
mov edx [esp+10Ch+var_B4] +
test eax eax +
jz loc_430206  +
mov [esp+10Ch+var_BC] 1 +
jmp loc_43005B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_4308B2  +
jmp loc_43092F  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4308B0  +
mov eax [esp+10Ch+var_94] +
mov ebx 1 +
mov [edx] eax +
jmp loc_4303DF  +
mov esi 1 +
jmp loc_42FD6F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_42F5C0  +
test eax eax +
mov [esp+10Ch+var_B4] eax +
jnz loc_43030E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_108] eax +
call sub_42F610  +
jmp loc_4301D8  +
lea edx [ebp+18h] +
jmp loc_4308B8  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 8 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_42F5C0  +
test eax eax +
mov edi eax +
mov [esp+10Ch+var_A8] eax +
jz loc_4301D8  +
mov [esp+10Ch+var_98] 0 +
jmp loc_430375  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] 0 +
mov ebx [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call _lseek  +
test eax eax +
js loc_430A40  +
mov eax [esp+1Ch+arg_14] +
xor ebp ebp +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_42F5C0  +
test eax eax +
mov [esi+4] eax +
jz loc_4309FE  +
mov [esi] eax +
mov [esi+8] ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call _read  +
test eax eax +
js loc_430A70  +
cmp ebx eax +
mov ebp 1 +
ja loc_430A08  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_14] +
xor bp bp +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] offset aFileTooShort +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
xor ebp ebp +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aLseek +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+1Ch+var_18] offset aRead +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_4309FE  +
***
mov ebx [esp+28h+arg_4] +
mov ecx [esp+28h+arg_C] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+28h+var_18] ecx +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_28] eax +
call sub_42F610  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_4] 1 +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
jbe loc_430C1D  +
lea esi [esi+0] +
mov edx [esp+2Ch+arg_4] +
shr edx 1 +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_430B38  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_430B21  +
xor eax eax +
mov edi 1 +
lea ebx [ebp+esi+0] +
mov [esp+2Ch+arg_0] ebp +
mov ebp eax +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
test eax eax +
jle loc_430B9E  +
add ebp 1 +
cmp edi ebp +
jz loc_430B9E  +
mov edx ebp +
imul edx esi +
add edx [esp+2Ch+arg_0] +
test esi esi +
jz loc_430B9E  +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
mov [esp+2Ch+var_D] cl +
movzx ecx byte ptr [ebx+eax] +
mov [edx+eax] cl +
movzx ecx [esp+2Ch+var_D] +
mov [ebx+eax] cl +
add eax 1 +
cmp eax esi +
jnz loc_430B80  +
add edi 1 +
add ebx esi +
cmp edi [esp+2Ch+arg_4] +
jb loc_430B50  +
mov eax ebp +
mov edi ebp +
mov ebp [esp+2Ch+arg_0] +
test eax eax +
jz loc_430BD9  +
mov edx eax +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_430BD9  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_430BC2  +
mov eax edi +
add eax eax +
cmp eax [esp+2Ch+arg_4] +
jnb loc_430C25  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] eax +
call sub_430AF0  +
mov eax edi +
add eax 1 +
imul eax esi +
add ebp eax +
mov eax [esp+2Ch+arg_4] +
sub eax edi +
sub eax 1 +
mov [esp+2Ch+arg_4] eax +
cmp [esp+2Ch+arg_4] 1 +
ja loc_430B10  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
sub eax 1 +
sub eax edi +
mov [esp+2Ch+var_28] eax +
mov eax edi +
add eax 1 +
imul eax esi +
add eax ebp +
mov [esp+2Ch+var_2C] eax +
call sub_430AF0  +
mov [esp+2Ch+arg_4] edi +
jmp loc_430C12  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_430C80  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_430C97  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_430C77  +
jb loc_430C93  +
cmp ecx [edx+8] +
jnb loc_430C77  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_430C72  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_430C77  +
jmp loc_430C8C  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_430CD0  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_430CE7  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_430CC7  +
jb loc_430CE3  +
cmp ecx [edx+8] +
jnb loc_430CC7  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_430CC2  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_430CC7  +
jmp loc_430CDC  +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov edx [edx] +
cmp edx [eax] +
jb loc_430D18  +
cmp edx [eax+10h] +
setnb al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov ecx [edx+4] +
mov esi [edx] +
mov edx [eax+4] +
mov ebx [eax] +
cmp ecx edx +
jnb loc_430D43  +
mov eax 0FFFFFFFFh +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
jbe loc_430D60  +
cmp ecx edx +
mov eax 1 +
ja loc_430D40  +
nop   +
jb loc_430D56  +
cmp esi ebx +
ja loc_430D40  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
cmp esi ebx +
jb loc_430D38  +
cmp ecx edx +
mov eax 1 +
ja loc_430D40  +
jmp loc_430D4E  +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov ebp ebx +
mov ecx [esp+54h+arg_0] +
mov esi [esp+54h+arg_20] +
mov [esp+54h+var_2C] ecx +
mov ecx [esp+54h+arg_4] +
add edi [esp+54h+var_2C] +
mov [esp+54h+var_28] ecx +
mov ecx [esp+54h+arg_8] +
adc ebp [esp+54h+var_28] +
mov [esp+54h+var_24] ecx +
mov ecx [esp+54h+arg_C] +
mov [esp+54h+var_20] ecx +
mov ecx [esp+54h+arg_10] +
mov [esp+54h+var_1C] ecx +
mov ecx [esp+54h+arg_14] +
mov [esp+54h+var_18] ecx +
mov ecx edx +
mov edx [esi+0Ch] +
add ecx [esp+54h+var_24] +
adc ebx [esp+54h+var_20] +
test edx edx +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_30] ebx +
jz loc_430E12  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+54h+var_3C] ecx +
mov ecx [esp+54h+var_3C] +
mov [esp+54h+var_38] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_430E90  +
mov ecx [esp+54h+var_3C] +
mov ebx [esp+54h+var_38] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_430E90  +
mov edx [esp+54h+arg_1C] +
mov [esp+54h+var_44] esi +
mov [esp+54h+var_50] 18h +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+arg_18] +
mov [esp+54h+var_4C] edx +
call sub_42F620  +
test eax eax +
jz loc_430EC8  +
mov edx edi +
mov [eax] edx +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
mov edx [esp+54h+var_28] +
mov [esp+54h+var_2C] edi +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_20] ebp +
mov [eax+4] edx +
mov edx [esp+54h+var_20] +
mov [eax+8] edi +
mov [esp+54h+var_24] edi +
mov [eax+0Ch] edx +
mov edx [esp+54h+var_1C] +
mov [eax+10h] edx +
mov edx [esp+54h+var_18] +
mov [eax+14h] edx +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [edx+10h] +
cmp [esp+54h+var_1C] ebx +
jnz loc_430E12  +
mov eax [esp+54h+var_38] +
cmp [esp+54h+var_30] eax +
jb loc_430ED0  +
ja loc_430EB3  +
mov eax [esp+54h+var_3C] +
cmp [esp+54h+var_34] eax +
jbe loc_430ED0  +
mov esi [esp+54h+var_34] +
mov eax 1 +
mov edi [esp+54h+var_30] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_430E82  +
xor eax eax +
jmp loc_430E82  +
mov eax 1 +
jmp loc_430E82  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+20h] +
mov esi [esp+38h+arg_0] +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_28] esi +
mov ecx [edx+1Ch] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
lea edx ds:0[ecx*4] +
mov [esp+38h+var_30] edx +
call sub_42F610  +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_2C] ebp +
shl edx 2 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
call sub_42F610  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [edx] +
test eax eax +
jz loc_430F8D  +
xor ebx ebx +
mov eax [ebp+4] +
lea ecx [ebx+ebx*2] +
add ebx 1 +
mov edx [esp+38h+arg_0] +
lea eax [eax+ecx*8] +
mov ecx [eax+14h] +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_2C] edi +
mov eax [eax+10h] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] ecx +
shl eax 3 +
mov [esp+38h+var_30] eax +
call sub_42F610  +
mov eax [ebp+0] +
cmp eax ebx +
ja loc_430F55  +
mov ecx [ebp+4] +
lea eax [eax+eax*2] +
mov edx [esp+38h+arg_0] +
shl eax 3 +
mov [esp+38h+var_2C] edi +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_34] ecx +
call sub_42F610  +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [esp+14h] +
mov ebx [edx+4] +
mov ecx [eax+4] +
mov edi [edx] +
mov esi [eax] +
cmp ebx ecx +
jnb loc_430FF2  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_431000  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_430FE9  +
cmp ebx ecx +
jb loc_43100C  +
cmp edi esi +
ja loc_430FF4  +
mov ebx [edx+0Ch] +
mov ecx [eax+0Ch] +
mov edi [edx+8] +
mov esi [eax+8] +
cmp ebx ecx +
jb loc_430FF4  +
ja loc_430FE9  +
cmp edi esi +
jb loc_430FF4  +
cmp ebx ecx +
jb loc_43102A  +
cmp edi esi +
ja loc_430FE9  +
mov ecx [edx+10h] +
xor ebx ebx +
mov edx [eax+10h] +
mov eax [edx+18h] +
cmp [ecx+18h] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_431080  +
mov eax 1 +
ja loc_431079  +
mov eax [edx+0Ch] +
xor ebx ebx +
cmp [ecx+0Ch] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax [ecx] +
test eax eax +
jnz loc_4310B0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [edx] +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] offset sub_430C60 +
mov [esp+2Ch+var_20] 18h +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call bsearch  +
test eax eax +
mov esi eax +
jz loc_4310A3  +
mov eax [edi] +
mov edx esi +
mov ecx eax +
sub edx ecx +
sar edx 3 +
imul edx edx +
mov [esp+2Ch+var_18] eax +
mov eax [ebx] +
add edx 1 +
cmp eax edx +
jbe loc_431202  +
mov ebx [esp+2Ch+var_10] +
xor ebp ebp +
cmp dword ptr [esi+1Ch] 0 +
mov [esp+2Ch+var_14] ebx +
mov edi ebx +
ja loc_43111B  +
cmp [esi+18h] ebx +
jbe loc_4311A2  +
mov eax [esp+2Ch+var_14] +
mov edx esi +
mov esi [esp+2Ch+arg_C] +
mov ebx [edx+10h] +
mov [esp+2Ch+var_20] esi +
mov esi [esp+2Ch+arg_8] +
lea ecx [ebx+10h] +
lea edx [ebx+0Ch] +
mov [esp+2Ch+var_24] esi +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] esi +
call sub_431090  +
test eax eax +
jnz loc_4310A5  +
mov eax [esp+2Ch+arg_C] +
mov ecx [ebx] +
mov edx [eax] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_0]  +
test eax eax +
jnz loc_4310A5  +
mov edx [ebx+4] +
mov ecx [esp+2Ch+arg_8] +
mov [ecx] edx +
mov edx [ebx+8] +
mov ebx [esp+2Ch+arg_C] +
mov [ebx] edx +
jmp loc_4310A5  +
cmp dword ptr [esi+24h] 0 +
ja loc_4311B1  +
cmp [esi+20h] ebx +
jbe loc_43111B  +
mov edx esi +
mov ecx edi +
mov ebx ebp +
add edx 18h +
mov edi edx +
sub edi [esp+2Ch+var_18] +
sar edi 3 +
imul edi edi +
add edi 1 +
cmp edi eax +
jnb loc_4311DD  +
mov ebp edx +
sub ebp esi +
lea edi [esi+30h] +
cmp [ebp+edi-14h] ebx +
jbe loc_4311E6  +
mov eax [esp+2Ch+var_14] +
jmp loc_431121  +
jb loc_4311EE  +
cmp [ebp+edi-18h] ecx +
ja loc_4311DD  +
cmp [ebp+edi-0Ch] ebx +
jb loc_4311DD  +
ja loc_4311B7  +
cmp [ebp+edi-10h] ecx +
jbe loc_4311DD  +
lea esi [esi+0] +
jmp loc_4311B7  +
mov eax [esp+2Ch+var_10] +
mov edx esi +
jmp loc_431121  +
***
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 4Ch +
add esi 0FFFFFFFFh +
mov ebx [eax] +
adc edi 0FFFFFFFFh +
cmp edi 0 +
ja loc_431290  +
cmp esi ebx +
jnb loc_431290  +
mov esi [eax+4] +
lea eax [edx+edx*2] +
lea eax [esi+eax*8-18h] +
mov ebp [eax+4] +
mov edi [eax] +
xor ebp ecx +
xor edi edx +
or ebp edi +
jz loc_431285  +
xor eax eax +
mov [esp+eax+54h+var_2C] 0 +
add eax 4 +
cmp eax 18h +
jb loc_431245  +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_44] offset loc_430D20 +
mov [esp+54h+var_48] 18h +
mov [esp+54h+var_4C] ebx +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_2C] edx +
mov [esp+54h+var_28] ecx +
call bsearch  +
test eax eax +
jz loc_431295  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [eax+4] +
jmp loc_431243  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_4C] 0 +
mov [esp+54h+var_50] offset aInvalidAbbrevi +
mov [esp+54h+var_54] eax +
call [esp+54h+arg_0]  +
xor eax eax +
jmp loc_431285  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_10] +
mov edi [esp+38h+arg_0] +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_4312E9  +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [ebx] +
cmp [edx] ecx +
jz loc_431340  +
mov edx [esp+38h+arg_C] +
mov [esp+38h+var_28] ebx +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] edx +
mov edx [esp+38h+arg_8] +
mov [esp+38h+var_30] edx +
call sub_42F620  +
test eax eax +
jz loc_431355  +
mov edx [ebx+0Ch] +
mov ecx [esp+38h+arg_4] +
add esi [ebp+0] +
mov [eax+4] edi +
mov [eax+0Ch] edx +
add edx 1 +
mov [eax] esi +
mov [eax+8] ecx +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [edx+4] edi +
jnz loc_4312E9  +
mov ecx [esp+38h+arg_4] +
cmp [edx+8] ecx +
jnz loc_4312E9  +
mov eax 1 +
jmp loc_431331  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov ebp ebx +
mov esi [esp+44h+arg_18] +
mov [esp+44h+var_20] ecx +
mov ecx edx +
add edi [esp+44h+arg_0] +
adc ebp [esp+44h+arg_4] +
mov edx [esi+0Ch] +
add ecx [esp+44h+arg_8] +
adc ebx [esp+44h+arg_C] +
test edx edx +
mov [esp+44h+var_1C] ecx +
mov [esp+44h+var_18] ebx +
jz loc_4313CF  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+44h+var_2C] ecx +
mov ecx [esp+44h+var_2C] +
mov [esp+44h+var_28] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_431422  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_431422  +
mov edx [esp+44h+arg_14] +
mov [esp+44h+var_34] esi +
mov [esp+44h+var_40] 18h +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_38] edx +
mov edx [esp+44h+arg_10] +
mov [esp+44h+var_3C] edx +
call sub_42F620  +
test eax eax +
jz loc_431456  +
mov [eax] edi +
mov edi [esp+44h+var_1C] +
mov [eax+4] ebp +
mov ebp [esp+44h+var_18] +
mov [eax+8] edi +
mov edi [esp+44h+var_20] +
mov [eax+0Ch] ebp +
mov [eax+10h] edi +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+44h+var_20] +
cmp [edx+10h] ebx +
jnz loc_4313CF  +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_18] eax +
jb loc_431460  +
ja loc_431441  +
mov eax [esp+44h+var_2C] +
cmp [esp+44h+var_1C] eax +
jbe loc_431460  +
mov esi [esp+44h+var_1C] +
mov eax 1 +
mov edi [esp+44h+var_18] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_43141A  +
xor eax eax +
jmp loc_43141A  +
mov eax 1 +
jmp loc_43141A  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [eax+4] +
mov ecx [edx+4] +
mov edi [eax] +
mov esi [edx] +
cmp ebx ecx +
jnb loc_431492  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_4314A0  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_431489  +
cmp ebx ecx +
jb loc_4314AC  +
cmp edi esi +
ja loc_431494  +
mov ebx [eax+0Ch] +
mov ecx [edx+0Ch] +
mov edi [eax+8] +
mov esi [edx+8] +
cmp ebx ecx +
jb loc_431494  +
ja loc_431489  +
cmp edi esi +
jb loc_431494  +
cmp ebx ecx +
jb loc_4314CA  +
cmp edi esi +
ja loc_431489  +
mov edx [edx+10h] +
mov edx [edx] +
mov [esp+14h] edx +
mov eax [eax+10h] +
mov eax [eax] +
mov [esp+10h] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp strcmp  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aSInSAtD +
mov [esp+1Ch+var_18] 0C8h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
mov ebx eax +
sub esp 0F4h +
mov ecx [eax] +
mov eax [eax+8] +
lea esi [esp+0F4h+var_CC] +
sub eax [ebx+4] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_E4] ecx +
mov [esp+0F4h+var_F4] esi +
mov [esp+0F4h+var_E0] eax +
mov [esp+0F4h+var_EC] offset aSInSAtD +
mov [esp+0F4h+var_F0] 0C8h +
call sub_4314F0  +
mov edx [ebx+18h] +
mov eax [ebx+14h] +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F4] edx +
call eax  +
add esp 0F4h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_4315A0  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_4315B2  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
sub eax edx +
mov [ebx+0Ch] eax +
mov eax 1 +
add [ebx+8] edx +
add esp 8 +
pop ebx  +
retn   +
mov edx offset aDwarfUnderflow +
mov eax ebx +
call sub_431520  +
mov dword ptr [ebx+1Ch] 1 +
jmp loc_431594  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_431580  +
test eax eax +
jz loc_431637  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_431613  +
movzx eax byte ptr [esi+3] +
movzx edx byte ptr [esi+2] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi] +
or eax edx +
movzx edx byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx eax byte ptr [esi] +
movzx edx byte ptr [esi+1] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi+3] +
or eax edx +
movzx edx byte ptr [esi+2] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov esi eax +
sub esp 4 +
mov ebx [eax+8] +
call sub_431580  +
test eax eax +
jz loc_431721  +
mov esi [esi+10h] +
test esi esi +
jnz loc_4316C2  +
movzx ecx byte ptr [ebx+7] +
xor edx edx +
movzx eax byte ptr [ebx+6] +
movzx esi byte ptr [ebx] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+5] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+4] +
or ecx eax +
movzx eax byte ptr [ebx+3] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+2] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+1] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
movzx ecx byte ptr [ebx] +
xor edx edx +
movzx eax byte ptr [ebx+1] +
movzx esi byte ptr [ebx+7] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+3] +
or ecx eax +
movzx eax byte ptr [ebx+4] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+5] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+6] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
xor esi esi +
add esp 4 +
xor ecx ecx +
mov eax esi +
mov edx ecx +
pop ebx  +
pop esi  +
retn   +
***
test edx edx +
jnz loc_431742  +
sub esp 0Ch +
call sub_4315D0  +
xor edx edx +
add esp 0Ch +
retn   +
jmp sub_431640  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_431580  +
test eax eax +
jz loc_431793  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_431781  +
movzx edx byte ptr [esi+1] +
movzx eax byte ptr [esi] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx edx byte ptr [esi] +
movzx eax byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov ebx [eax+8] +
call sub_431580  +
test eax eax +
jz loc_4317C0  +
movzx eax byte ptr [ebx] +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_431814  +
mov eax ebx +
mov ecx edi +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_431807  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or ebp eax +
add edi 7 +
test bl bl +
jns loc_431852  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_431580  +
test eax eax +
jz loc_431860  +
cmp edi 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_4317F0  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_43180D  +
mov edx offset aLeb128Overflow +
mov eax esi +
call sub_431520  +
add edi 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_431814  +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 2 +
jz loc_4318E0  +
jle loc_4318A0  +
cmp edx 4 +
jz loc_431890  +
cmp edx 8 +
jnz loc_4318C6  +
add esp 8 +
pop ebx  +
jmp sub_431640  +
call sub_4315D0  +
xor edx edx +
add esp 8 +
pop ebx  +
retn   +
cmp edx 1 +
jnz loc_4318C6  +
mov edx 1 +
mov ebx [eax+8] +
call sub_431580  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_431897  +
movzx eax byte ptr [ebx] +
add esp 8 +
xor edx edx +
pop ebx  +
retn   +
mov edx offset aUnrecognizedAd +
call sub_431520  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
call sub_431750  +
add esp 8 +
xor edx edx +
pop ebx  +
movzx eax ax +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_431934  +
mov eax ebx +
mov ecx ebp +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_431927  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or edi eax +
add ebp 7 +
test bl bl +
jns loc_431972  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_431580  +
test eax eax +
jz loc_4319B0  +
cmp ebp 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_431910  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_43192D  +
mov edx offset aSignedLeb128Ov +
mov eax esi +
call sub_431520  +
add ebp 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_431934  +
and ebx 40h +
jz loc_43199B  +
cmp ebp 3Fh +
ja loc_43199B  +
mov ecx ebp +
mov eax 0FFFFFFFFh +
shl eax cl +
xor ebx ebx +
mov edx 0FFFFFFFFh +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebx +
or [esp+28h+var_1C] edx +
or edi eax +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov ebp [esp+30h+arg_0] +
mov edi [esp+30h+arg_4] +
mov ebx [esp+30h+arg_10] +
mov [esp+30h+var_1C] edx +
mov edx [esp+30h+arg_C] +
mov [esp+30h+var_18] edx +
cmp eax 10h +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
jz loc_431DB2  +
ja loc_431A60  +
cmp eax 8 +
jz loc_431C80  +
jbe loc_431AE0  +
cmp eax 0Ch +
lea esi [esi+0] +
jz loc_431B92  +
ja loc_431B40  +
cmp eax 0Ah +
nop   +
jz loc_431D80  +
ja loc_431B92  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_4317D0  +
mov edx eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_431580  +
cmp eax 17h +
jz loc_431B70  +
jbe loc_431AB6  +
cmp eax 1F01h +
jz loc_431C30  +
ja loc_431B11  +
cmp eax 19h +
nop   +
jz loc_431D60  +
jb loc_431D10  +
cmp eax 20h +
nop   +
jnz loc_431B2A  +
mov dword ptr [ebx] 7 +
mov eax esi +
call sub_431640  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 13h +
jz loc_431CD0  +
jbe loc_431BC7  +
cmp eax 15h +
jz loc_431D20  +
nop   +
ja loc_431CA3  +
mov dword ptr [ebx] 4 +
jmp loc_431A9C  +
cmp eax 4 +
jz loc_431CB7  +
jbe loc_431C00  +
cmp eax 6 +
jz loc_431DA7  +
nop   +
lea esi [esi+0] +
ja loc_431CF1  +
mov dword ptr [ebx] 1 +
jmp loc_431BDF  +
cmp eax 1F20h +
jz loc_431B70  +
cmp eax 1F21h +
jz loc_431B70  +
cmp eax 1F02h +
jz loc_431C30  +
mov eax esi +
mov edx offset aUnrecognizedDw +
call sub_431520  +
xor eax eax +
jmp loc_431B8A  +
cmp eax 0Eh +
jz loc_431D30  +
ja loc_431D00  +
mov dword ptr [ebx] 2 +
mov eax esi +
call sub_4318F0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_431B8A  +
mov dword ptr [ebx] 6 +
mov edx ecx +
mov eax esi +
call sub_431730  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 1 +
mov edx 1 +
mov eax esi +
mov edi [esi+8] +
call sub_431580  +
xor edx edx +
xor ecx ecx +
test eax eax +
jz loc_431BB4  +
movzx edx byte ptr [edi] +
xor ecx ecx +
mov [ebx+8] edx +
mov eax 1 +
mov [ebx+0Ch] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 11h +
jz loc_431C70  +
cmp eax 12h +
jnz loc_431B2A  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_431750  +
mov dword ptr [ebx+0Ch] 0 +
movzx eax ax +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_431B8A  +
cmp eax 1 +
jz loc_431C50  +
cmp eax 3 +
jnz loc_431B2A  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_431750  +
movzx edx ax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_431580  +
mov dword ptr [ebx] 6 +
mov eax esi +
call sub_4317D0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 0 +
mov edx edi +
mov eax esi +
call sub_431870  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_431B8A  +
mov dword ptr [ebx] 4 +
jmp loc_431B98  +
mov eax [esi+8] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov edx [esi+0Ch] +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_2C] edx +
call sub_44BAF0  +
lea edx [eax+1] +
jmp loc_431C1E  +
mov eax esi +
mov [esp+30h+var_14] ecx +
call sub_4317D0  +
mov ecx [esp+30h+var_14] +
jmp loc_4319E5  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_4315D0  +
mov edx eax +
jmp loc_431A4B  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_4315D0  +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_431B8A  +
mov dword ptr [ebx] 1 +
jmp loc_431A9C  +
mov dword ptr [ebx] 1 +
jmp loc_431C36  +
mov dword ptr [ebx] 9 +
jmp loc_431A42  +
mov dword ptr [ebx] 4 +
jmp loc_431C36  +
mov edx ecx +
mov eax esi +
call sub_431730  +
cmp edx 0 +
ja loc_431D48  +
cmp eax [esp+30h+var_18] +
jb loc_431DC6  +
mov eax esi +
mov edx offset aDw_form_strpOu +
call sub_431520  +
xor eax eax +
jmp loc_431B8A  +
mov dword ptr [ebx] 1 +
mov eax 1 +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_431B8A  +
mov dword ptr [ebx] 8 +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_431580  +
xor edx edx +
test eax eax +
jz loc_431C1E  +
movzx edx byte ptr [ebx] +
jmp loc_431C1E  +
mov dword ptr [ebx] 1 +
jmp loc_431CD6  +
cmp ebp 2 +
mov dword ptr [ebx] 5 +
jnz loc_431B76  +
jmp loc_431C56  +
add eax [esp+30h+var_1C] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_431B8A  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov edi [esp+0ACh+arg_1C] +
lea esi [esp+0ACh+var_2C] +
mov [esp+0ACh+var_54] eax +
mov [esp+0ACh+var_50] edx +
mov [esp+0ACh+var_88] ecx +
lea eax [edi+28h] +
mov [esp+0ACh+var_5C] eax +
mov eax [esp+0ACh+var_88] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_432064  +
mov eax [esp+0ACh+var_88] +
call sub_4317D0  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_432064  +
mov ebx [esp+0ACh+arg_18] +
mov edx eax +
mov eax [esp+0ACh+var_5C] +
mov [esp+0ACh+var_A8] ebx +
mov ebx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] ebx +
call sub_431210  +
test eax eax +
mov ebp eax +
jz loc_43222F  +
mov eax [eax+10h] +
test eax eax +
jz loc_4321B0  +
mov edx [ebp+14h] +
xor ebx ebx +
mov [esp+0ACh+var_6C] 0 +
mov [esp+0ACh+var_64] 0 +
mov [esp+0ACh+var_60] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_7C] 0 +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [esp+0ACh+var_68] 0 +
mov [esp+0ACh+var_74] 0 +
mov [esp+0ACh+var_70] 0 +
jmp loc_431EEE  +
cmp eax 1Bh +
jz loc_432150  +
cmp eax 55h +
jz loc_432112  +
cmp eax 12h +
jz loc_4320E0  +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp [ebp+10h] ebx +
jbe loc_431F78  +
mov edx ecx +
mov eax [edx+ebx*8+4] +
mov edx [esp+0ACh+arg_4] +
mov ecx [edi+10h] +
mov [esp+0ACh+var_9C] esi +
mov [esp+0ACh+var_A0] edx +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_A8] edx +
mov edx [edi+0Ch] +
mov [esp+0ACh+var_AC] edx +
mov edx [esp+0ACh+var_88] +
call sub_4319C0  +
test eax eax +
jz loc_432070  +
mov ecx [ebp+14h] +
mov eax [ecx+ebx*8] +
cmp eax 11h +
jz loc_4320A7  +
ja loc_431EC0  +
cmp eax 3 +
jz loc_432080  +
cmp eax 10h +
jnz loc_431EE0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jnz loc_432240  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
add ebx 1 +
cmp [ebp+10h] ebx +
ja loc_431EEC  +
mov eax [ebp+8] +
cmp eax 2Eh +
jz loc_431F89  +
cmp eax 11h +
jnz loc_4321B0  +
mov eax [esp+0ACh+var_6C] +
test eax eax +
jnz loc_432258  +
mov ebx [esp+0ACh+var_68] +
test ebx ebx +
jz loc_4321B0  +
mov ecx [esp+0ACh+var_7C] +
test ecx ecx +
jz loc_4321B0  +
mov edx [esp+0ACh+var_58] +
test edx edx +
jz loc_431FC5  +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
add [esp+0ACh+var_84] eax +
adc [esp+0ACh+var_80] edx +
mov edx [esp+0ACh+var_74] +
mov ecx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_80] +
mov [esp+0ACh+var_1C] edi +
mov eax edx +
mov [esp+0ACh+var_28] ecx +
mov ecx [esp+0ACh+var_84] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_28] +
mov [esp+0ACh+var_2C] edx +
mov [esp+0ACh+var_20] ebx +
mov edx ecx +
mov [esp+0ACh+var_24] ecx +
mov ecx [esp+0ACh+arg_20] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_A4] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] ecx +
mov ecx [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_90] ecx +
mov ecx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
mov [esp+0ACh+var_94] ecx +
call sub_430D70  +
test eax eax +
jz loc_432070  +
cmp dword ptr [ebp+8] 11h +
jnz loc_4321B0  +
mov eax 1 +
lea esi [esi+0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+8] 11h +
jnz loc_431EE0  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov [edi+1Ch] eax +
jmp loc_431EE0  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_68] 1 +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jmp loc_431EE0  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_432177  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_431EE0  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jz loc_432127  +
cmp eax 1 +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 1 +
mov [esp+0ACh+var_64] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_60] eax +
jmp loc_431EE0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_431EE0  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov [edi+20h] eax +
jmp loc_431EE0  +
cmp eax 1 +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_58] 1 +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_431EE0  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_431E0B  +
mov eax [esp+0ACh+arg_20] +
mov ecx [esp+0ACh+var_88] +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+arg_C] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+arg_8] +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_54] +
call sub_431DE0  +
test eax eax +
jnz loc_431E0B  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_431EE0  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
jmp loc_431F6C  +
cmp [esp+0ACh+var_60] 0 +
jbe loc_432284  +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset aRangesOffsetOu +
mov [esp+0ACh+var_AC] eax +
call [esp+0ACh+arg_14]  +
xor eax eax +
jmp loc_432231  +
mov eax [esp+0ACh+var_64] +
cmp eax [esp+0ACh+arg_C] +
jnb loc_43225F  +
mov eax [esp+0ACh+arg_8] +
mov ecx [esp+0ACh+var_64] +
mov [esp+0ACh+var_2C] offset a_debug_ranges +
mov [esp+0ACh+var_10] 0 +
mov [esp+0ACh+var_28] eax +
mov eax [esp+0ACh+arg_8] +
add eax ecx +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+arg_C] +
sub eax ecx +
xor ecx ecx +
mov [esp+0ACh+var_20] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_1C] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_18] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_14] eax +
test ecx ecx +
jnz loc_43222F  +
mov edx [edi+14h] +
mov eax esi +
call sub_431870  +
mov [esp+0ACh+var_78] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_7C] eax +
mov eax esi +
call sub_431870  +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_80] edx +
mov ecx [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_78] +
mov ebx [esp+0ACh+var_80] +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_432409  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_4323D0  +
jle loc_4323B0  +
cmp ecx 4 +
jz loc_4323F0  +
cmp ecx 8 +
jnz loc_432420  +
mov ecx [esp+0ACh+var_7C] +
mov ebx [esp+0ACh+var_78] +
mov eax ecx +
and eax ebx +
cmp eax 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_432420  +
mov ecx [esp+0ACh+var_10] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
test ecx ecx +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jz loc_43230D  +
xor eax eax +
jmp loc_432231  +
cmp ecx 1 +
jnz loc_432420  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor bl 0FFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43237E  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor ebx 0FFFFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43237E  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
not ebx  +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_43237E  +
mov eax [esp+0ACh+var_10] +
test eax eax +
jz loc_43205A  +
xor eax eax +
jmp loc_432231  +
mov ecx [esp+0ACh+var_7C] +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_78] +
mov [esp+0ACh+var_34] edi +
add ecx eax +
mov [esp+0ACh+var_7C] ecx +
adc ebx edx +
add eax [esp+0ACh+var_84] +
mov [esp+0ACh+var_44] ecx +
mov [esp+0ACh+var_40] ebx +
mov ecx eax +
mov [esp+0ACh+var_3C] eax +
mov eax [esp+0ACh+arg_20] +
adc edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_38] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_40] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_38] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
call sub_430D70  +
test eax eax +
jz loc_43222F  +
mov ecx [esp+0ACh+var_10] +
jmp loc_432305  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
mov ebx edx +
sub esp 5Ch +
mov esi [ebx+8] +
mov edx [esp+68h+arg_4] +
mov eax [esp+68h+arg_0] +
cmp edi edx +
jbe loc_432501  +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] offset aAbstractOrigin +
mov [esp+68h+var_68] eax +
call [esp+68h+arg_8]  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_432660  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_4324DC  +
cmp eax ecx +
jnb loc_4324DC  +
mov edx [ebp+10h] +
sub ecx eax +
mov [esp+68h+var_2C] ecx +
mov [esp+68h+var_38] offset a_debug_info +
mov [esp+68h+var_1C] 0 +
mov [esp+68h+var_34] edx +
mov edx [ebx] +
add edx eax +
mov eax [ebp+30h] +
mov [esp+68h+var_30] edx +
mov [esp+68h+var_28] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_24] eax +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_20] eax +
lea eax [esp+68h+var_38] +
call sub_4317D0  +
mov esi eax +
mov eax edx +
or eax esi +
mov ecx edx +
jz loc_43270A  +
mov edi [esp+68h+arg_C] +
mov edx esi +
lea eax [ebx+28h] +
mov [esp+68h+var_64] edi +
mov edi [esp+68h+arg_8] +
mov [esp+68h+var_68] edi +
call sub_431210  +
test eax eax +
mov esi eax +
jz loc_432700  +
mov eax [eax+10h] +
test eax eax +
jz loc_432700  +
mov [esp+68h+var_54] 0 +
mov [esp+68h+var_4C] 0 +
jmp loc_4325D9  +
cmp eax 3 +
jnz loc_4325C7  +
mov eax [esp+68h+var_4C] +
cmp [esp+68h+var_48] 3 +
cmovz eax [esp+68h+var_40] +
mov [esp+68h+var_4C] eax +
add [esp+68h+var_54] 1 +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
jbe loc_4326F0  +
mov eax [esp+68h+var_54] +
mov edx [ebp+2Ch] +
mov ecx [ebx+10h] +
lea edi ds:0[eax*8] +
mov eax [esi+14h] +
mov [esp+68h+var_50] edx +
lea edx [esp+68h+var_48] +
mov eax [eax+edi+4] +
mov [esp+68h+var_58] edx +
mov edx [esp+68h+var_50] +
mov [esp+68h+var_5C] edx +
mov edx [ebp+28h] +
mov [esp+68h+var_60] edx +
mov edx [ebx+14h] +
mov [esp+68h+var_64] edx +
mov edx [ebx+0Ch] +
mov [esp+68h+var_68] edx +
lea edx [esp+68h+var_38] +
call sub_4319C0  +
test eax eax +
jz loc_432700  +
add edi [esi+14h] +
mov eax [edi] +
cmp eax 47h +
jz loc_432680  +
jbe loc_4325B0  +
cmp eax 6Eh +
jz loc_432646  +
cmp eax 2007h +
jnz loc_4325C7  +
cmp [esp+68h+var_48] 3 +
jnz loc_4325C7  +
mov eax [esp+68h+var_40] +
jmp loc_4324F9  +
cmp esi eax +
ja loc_4324DC  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_4324DC  +
jmp loc_432513  +
mov eax [edi+4] +
cmp eax 10h +
jz loc_4325C7  +
cmp eax 20h +
nop   +
jz loc_4325C7  +
mov eax [esp+68h+var_48] +
cmp eax 4 +
jz loc_4326A8  +
cmp eax 1 +
jnz loc_4325C7  +
mov eax [esp+68h+arg_C] +
mov edx [esp+68h+var_3C] +
mov [esp+68h+var_5C] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_64] edx +
mov edx ebx +
mov [esp+68h+var_60] eax +
mov eax [esp+68h+var_40] +
mov [esp+68h+var_68] eax +
mov eax ebp +
call sub_4324C0  +
test eax eax +
cmovz eax [esp+68h+var_4C] +
add [esp+68h+var_54] 1 +
mov [esp+68h+var_4C] eax +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
ja loc_4325D9  +
lea esi [esi+0] +
mov eax [esp+68h+var_4C] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+68h+var_38] +
mov edx offset aInvalidAbstrac +
call sub_431520  +
xor eax eax +
jmp loc_4324F9  +
***
mov edi edx +
push esi  +
mov esi edi +
push ebx  +
mov edi ecx +
sub esp 0ACh +
mov [esp+0B4h+var_40] eax +
mov eax [esp+0B4h+arg_0] +
mov edx [esp+0B4h+arg_4] +
mov [esp+0B4h+var_4C] eax +
lea eax [ecx+28h] +
mov [esp+0B4h+var_48] edx +
mov [esp+0B4h+var_58] eax +
mov eax [esp+0B4h+arg_8] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_43303C  +
mov eax [esp+0B4h+arg_8] +
call sub_4317D0  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_43303C  +
mov ebx [esp+0B4h+arg_14] +
mov edx eax +
mov eax [esp+0B4h+var_58] +
mov [esp+0B4h+var_B0] ebx +
mov ebx [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ebx +
call sub_431210  +
test eax eax +
mov ebp eax +
jz loc_432D14  +
mov eax [eax+8] +
cmp eax 2Eh +
jz loc_432950  +
cmp eax 3 +
jz loc_432950  +
xor edx edx +
cmp eax 1Dh +
setz dl  +
mov [esp+0B4h+var_78] edx +
cmp eax 1Dh +
mov eax [esp+0B4h+arg_1C] +
cmovnz eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_6C] 0 +
mov [esp+0B4h+var_38] eax +
mov eax [esp+0B4h+var_78] +
test eax eax +
jnz loc_432D55  +
mov eax [ebp+10h] +
mov [esp+0B4h+var_5C] 0 +
mov [esp+0B4h+var_50] 0 +
mov [esp+0B4h+var_44] 0 +
test eax eax +
mov [esp+0B4h+var_3C] 0 +
mov [esp+0B4h+var_68] 0 +
mov [esp+0B4h+var_74] 0 +
mov [esp+0B4h+var_70] 0 +
mov [esp+0B4h+var_54] 0 +
mov [esp+0B4h+var_64] 0 +
mov [esp+0B4h+var_60] 0 +
jz loc_4329B7  +
mov [esp+0B4h+var_8C] 0 +
jmp loc_4328B4  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_4328A2  +
add ebx [ebp+14h] +
mov eax [ebx] +
cmp eax 47h +
jz loc_432C2E  +
jbe loc_432960  +
cmp eax 59h +
jz loc_432BD2  +
lea esi [esi+0] +
ja loc_432BB2  +
cmp eax 55h +
jz loc_432CA0  +
cmp eax 58h +
jnz loc_4328A2  +
cmp [esp+0B4h+var_34] 1 +
jz loc_432DB0  +
add [esp+0B4h+var_8C] 1 +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
jbe loc_4329B7  +
mov eax [esp+0B4h+var_8C] +
mov edx [esi+2Ch] +
mov ecx [edi+10h] +
lea ebx ds:0[eax*8] +
mov eax [ebp+14h] +
mov [esp+0B4h+var_84] edx +
lea edx [esp+0B4h+var_34] +
mov eax [eax+ebx+4] +
mov [esp+0B4h+var_A4] edx +
mov edx [esp+0B4h+var_84] +
mov [esp+0B4h+var_A8] edx +
mov edx [esi+28h] +
mov [esp+0B4h+var_AC] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_B0] edx +
mov edx [edi+0Ch] +
mov [esp+0B4h+var_B4] edx +
mov edx [esp+0B4h+arg_8] +
call sub_4319C0  +
test eax eax +
jz loc_432D14  +
cmp dword ptr [ebp+8] 11h +
jnz loc_432855  +
mov eax [ebp+14h] +
cmp dword ptr [eax+ebx] 11h +
jnz loc_432855  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_432855  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_4C] eax +
mov [esp+0B4h+var_48] edx +
jmp loc_432855  +
mov [esp+0B4h+var_78] 1 +
jmp loc_4327C6  +
cmp eax 11h +
jz loc_432BF3  +
jbe loc_432B77  +
cmp eax 12h +
jnz loc_432C25  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_432D21  +
mov eax [esp+0B4h+var_2C] +
add [esp+0B4h+var_8C] 1 +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
mov [esp+0B4h+var_70] edx +
ja loc_4328B4  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_432E7B  +
mov eax [esp+0B4h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_432E49  +
mov ecx [esp+0B4h+var_5C] +
test ecx ecx +
jnz loc_432CD8  +
mov eax [esp+0B4h+var_68] +
test eax eax +
jz loc_432E49  +
mov eax [esp+0B4h+var_54] +
test eax eax +
jz loc_432E49  +
mov eax [esp+0B4h+var_3C] +
test eax eax +
jnz loc_432E10  +
mov eax [esp+0B4h+var_38] +
mov edx [esi+4] +
mov ecx [esp+0B4h+var_74] +
mov ebx [esp+0B4h+var_70] +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] ecx +
mov ecx [esp+0B4h+var_64] +
mov [esp+0B4h+var_A8] ebx +
mov ebx [esp+0B4h+var_60] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] ebx +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+var_40] +
call sub_431360  +
test eax eax +
jz loc_432D14  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_432751  +
lea eax [esp+0B4h+var_34] +
mov edx [esp+0B4h+var_48] +
mov ecx edi +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_34] 0 +
mov [esp+0B4h+var_30] 0 +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_2C] 0 +
mov [esp+0B4h+var_28] 0 +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_432720  +
test eax eax +
jz loc_432D14  +
mov ebp [esp+0B4h+var_28] +
test ebp ebp +
jz loc_432751  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
lea eax [esp+0B4h+var_34] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_42F6C0  +
test eax eax +
jz loc_432D14  +
mov ebx [esp+0B4h+var_34] +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] offset loc_431470 +
mov [esp+0B4h+var_AC] 18h +
mov [esp+0B4h+var_B4] ebx +
mov [esp+0B4h+var_B0] eax +
call sub_430AF0  +
mov ecx [esp+0B4h+var_6C] +
mov eax [esp+0B4h+var_28] +
mov [ecx+0Ch] ebx +
mov [ecx+10h] eax +
jmp loc_432751  +
cmp eax 3 +
jnz loc_4328A2  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_4328A2  +
mov eax [esp+0B4h+var_6C] +
mov ecx [eax] +
test ecx ecx +
jnz loc_4328A2  +
lea esi [esi+0] +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx] eax +
jmp loc_4328A2  +
cmp eax 6Eh +
jz loc_432BC2  +
cmp eax 2007h +
jnz loc_4328A2  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_4328A2  +
jmp loc_432BA0  +
cmp [esp+0B4h+var_34] 1 +
jnz loc_4328A2  +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx+8] eax +
jmp loc_4328A2  +
mov edx [esp+0B4h+var_34] +
test edx edx +
jnz loc_4328A2  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_54] 1 +
mov [esp+0B4h+var_64] eax +
mov [esp+0B4h+var_60] edx +
jmp loc_4328A2  +
cmp eax 31h +
jnz loc_4328A2  +
mov eax [ebx+4] +
cmp eax 10h +
jz loc_4328A2  +
cmp eax 20h +
jz loc_4328A2  +
mov eax [esp+0B4h+var_34] +
cmp eax 4 +
jz loc_432C58  +
cmp eax 1 +
jnz loc_4328A2  +
mov eax [esp+0B4h+arg_14] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B0] edx +
mov edx edi +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_B4] eax +
mov eax esi +
call sub_4324C0  +
test eax eax +
jnz loc_432BA7  +
jmp loc_4328A2  +
mov eax [esp+0B4h+var_34] +
cmp eax 6 +
jz loc_432CB5  +
cmp eax 1 +
jnz loc_4328A2  +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_5C] 1 +
mov [esp+0B4h+var_50] eax +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_44] eax +
jmp loc_4328A2  +
xor edx edx +
mov ecx [esi+24h] +
cmp edx [esp+0B4h+var_44] +
ja loc_432EF1  +
jb loc_432CF3  +
cmp ecx [esp+0B4h+var_50] +
ja loc_432EF1  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 0 +
mov [esp+0B4h+var_B0] offset aFunctionRanges +
mov [esp+0B4h+var_B4] eax +
call [esp+0B4h+arg_10]  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_4328A2  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_3C] 1 +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov [esp+0B4h+var_70] edx +
jmp loc_4328A2  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_B0] 14h +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_42F5C0  +
test eax eax +
mov [esp+0B4h+var_6C] eax +
jz loc_432D14  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jmp loc_4327F0  +
mov edx [esp+0B4h+var_28] +
mov eax [esp+0B4h+var_2C] +
mov ecx edx +
or ecx eax +
jnz loc_432DD4  +
mov eax [esp+0B4h+var_6C] +
mov dword ptr [eax+4] offset unk_4658C9 +
jmp loc_4328A2  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0B4h+var_84] ecx +
mov ecx [esp+0B4h+arg_C] +
mov [esp+0B4h+var_80] ebx +
cmp [esp+0B4h+var_80] 0 +
mov ecx [ecx+24h] +
jbe loc_432E25  +
mov eax [esp+0B4h+arg_8] +
mov edx offset aInvalidFileN_0 +
call sub_431520  +
jmp loc_432D14  +
mov eax [esp+0B4h+var_64] +
mov edx [esp+0B4h+var_60] +
add [esp+0B4h+var_74] eax +
adc [esp+0B4h+var_70] edx +
jmp loc_432A01  +
cmp [esp+0B4h+var_84] ecx +
jnb loc_432DF7  +
mov ecx [esp+0B4h+arg_C] +
add eax 3FFFFFFFh +
mov edx [ecx+28h] +
mov ecx [esp+0B4h+var_6C] +
mov eax [edx+eax*4] +
mov [ecx+4] eax +
jmp loc_4328A2  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 14h +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_42F610  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_432751  +
mov eax [esp+0B4h+arg_1C] +
mov ecx edi +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_432720  +
test eax eax +
jnz loc_432751  +
jmp loc_432D14  +
mov eax [esi+20h] +
mov ebx [esp+0B4h+var_50] +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_34] offset a_debug_ranges +
mov [esp+0B4h+var_30] eax +
add eax ebx +
sub ecx ebx +
mov [esp+0B4h+var_2C] eax +
mov eax [esi+30h] +
mov [esp+0B4h+var_28] ecx +
xor ecx ecx +
mov [esp+0B4h+var_18] 0 +
mov [esp+0B4h+var_80] edx +
mov [esp+0B4h+var_24] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_78] esi +
mov [esp+0B4h+var_20] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_1C] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_84] eax +
test ecx ecx +
jnz loc_432D14  +
mov edx [edi+14h] +
lea eax [esp+0B4h+var_34] +
call sub_431870  +
mov esi edx +
mov ebx eax +
mov [esp+0B4h+var_88] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_8C] eax +
lea eax [esp+0B4h+var_34] +
call sub_431870  +
mov ecx ebx +
mov ebx esi +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_433046  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_433010  +
jle loc_432FF6  +
cmp ecx 4 +
jz loc_433028  +
cmp ecx 8 +
jnz loc_433060  +
mov ecx [esp+0B4h+var_8C] +
mov ebx [esp+0B4h+var_88] +
mov esi ecx +
and esi ebx +
cmp esi 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_433060  +
mov ecx [esp+0B4h+var_18] +
mov [esp+0B4h+var_84] eax +
mov [esp+0B4h+var_80] edx +
test ecx ecx +
jz loc_432F6B  +
jmp loc_432D14  +
cmp ecx 1 +
jnz loc_433060  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor bl 0FFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_432FD2  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor ebx 0FFFFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_432FD2  +
mov ebx [esp+0B4h+var_8C] +
mov esi [esp+0B4h+var_88] +
not ebx  +
or ebx esi +
setz cl  +
movzx ecx cl +
jmp loc_432FD2  +
mov eax 1 +
jmp loc_432D16  +
mov eax [esp+0B4h+var_18] +
mov esi [esp+0B4h+var_78] +
test eax eax +
jz loc_432A56  +
jmp loc_432D14  +
mov ecx [esp+0B4h+var_84] +
mov esi [esp+0B4h+var_38] +
mov ebx [esp+0B4h+var_80] +
add eax ecx +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_8C] +
mov [esp+0B4h+var_9C] esi +
mov esi [esp+0B4h+arg_14] +
adc edx ebx +
mov [esp+0B4h+var_A8] edx +
mov edx [esp+0B4h+var_88] +
add eax ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_A0] esi +
mov esi [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_78] +
adc edx ebx +
mov [esp+0B4h+var_B0] edx +
mov [esp+0B4h+var_A4] esi +
mov edx [eax+4] +
mov eax [esp+0B4h+var_40] +
call sub_431360  +
test eax eax +
jz loc_432D14  +
mov ecx [esp+0B4h+var_18] +
jmp loc_432F63  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0ECh +
mov edi [esp+0ECh+arg_C] +
mov [esp+0ECh+var_C0] eax +
mov eax [ebx+8] +
mov [esp+0ECh+var_C8] edx +
mov [esp+0ECh+var_90] ecx +
mov dword ptr [edi] 1 +
mov edx [edx+0Ch] +
mov [esp+0ECh+var_E8] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_430CB0 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E4] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
jz loc_4334C0  +
mov edi [ebx+8] +
mov edx eax +
mov ebx [ebx+0Ch] +
sub edx edi +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] ebx +
add edx 1 +
cmp edx ebx +
jnb loc_433162  +
xor ebx ebx +
mov ecx [esp+0ECh+var_90] +
cmp ebx [eax+1Ch] +
jb loc_433162  +
ja loc_433157  +
cmp ecx [eax+18h] +
jb loc_433162  +
cmp ebx [eax+24h] +
jb loc_43316B  +
lea esi [esi+0] +
jbe loc_433166  +
mov ebp eax +
jmp loc_43319A  +
cmp ecx [eax+20h] +
jnb loc_433162  +
mov ebp eax +
lea esi [esi+0] +
add ebp 18h +
mov edx ebp +
sub edx edi +
sar edx 3 +
imul edx edx +
add edx 1 +
cmp edx [esp+0ECh+var_CC] +
jnb loc_43319A  +
mov esi ebp +
sub esi eax +
lea edx [eax+30h] +
cmp [esi+edx-14h] ebx +
jbe loc_433326  +
mov esi [ebp+10h] +
cmp ebp edi +
mov ebx [esi+30h] +
jbe loc_4331B9  +
xor edx edx +
mov eax [esp+0ECh+var_90] +
cmp [ebp-14h] edx +
jb loc_43335E  +
jbe loc_433355  +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
mov [esp+0ECh+var_C4] eax +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
jnz loc_4333E6  +
test ebx ebx +
jz loc_433501  +
cmp ebx 0FFFFFFFFh +
jz loc_4334A0  +
mov eax [ebp+10h] +
mov eax [eax+34h] +
mov [esp+0ECh+var_DC] offset loc_430D00 +
mov [esp+0ECh+var_E0] 10h +
mov [esp+0ECh+var_E8] ebx +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov [esp+0ECh+var_C8] eax +
jz loc_4334DA  +
mov edx [ebp+10h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_433400  +
mov edx [edx+38h] +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_430C60 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov ebx eax +
jz loc_433400  +
mov edx [ebp+10h] +
mov eax [edx+38h] +
mov edi [edx+3Ch] +
mov edx ebx +
sub edx eax +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] edi +
add edx 1 +
cmp edx edi +
jnb loc_433879  +
mov edi [esp+0ECh+var_90] +
mov [esp+0ECh+var_C4] edi +
mov esi edi +
xor edi edi +
cmp edi [ebx+1Ch] +
jb loc_4332A6  +
ja loc_433297  +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+18h] +
jb loc_4332A6  +
cmp edi [ebx+24h] +
jb loc_43344B  +
jbe loc_43343E  +
mov eax [esp+0ECh+var_C4] +
mov edx ebx +
lea esi [esi+0] +
mov edi [esp+0ECh+var_C8] +
lea esi [esp+0ECh+var_38] +
mov ebx [edx+10h] +
mov edx [edi+4] +
lea ecx [ebx+10h] +
mov [esp+0ECh+var_58] edx +
mov edx [edi+8] +
mov edi [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] esi +
lea esi [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_38] edx +
lea edx [ebx+0Ch] +
mov [esp+0ECh+var_E8] edi +
mov edi [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] edi +
call sub_431090  +
test eax eax +
jnz loc_433433  +
mov eax [ebx] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_58] +
jmp loc_433416  +
jb loc_433332  +
cmp [esi+edx-18h] ecx +
ja loc_43319A  +
cmp [esi+edx-0Ch] ebx +
jb loc_43319A  +
ja loc_433170  +
cmp [esi+edx-10h] ecx +
jbe loc_43319A  +
lea esi [esi+0] +
jmp loc_433170  +
cmp [ebp-18h] eax +
ja loc_4331B9  +
cmp edx [ebp-0Ch] +
jb loc_433376  +
ja loc_4331B9  +
cmp eax [ebp-10h] +
lea esi [esi+0] +
jnb loc_4331B9  +
mov edi [esp+0ECh+var_C0] +
lea ecx [ebp-28h] +
mov edi [edi+4] +
mov [esp+0ECh+var_C4] edi +
mov [esp+0ECh+var_CC] edi +
mov edi [esp+0ECh+var_CC] +
test edi edi +
jnz loc_4333F0  +
cmp ebx 0FFFFFFFFh +
jnz loc_4331C4  +
mov edi [esp+0ECh+var_C8] +
sub ebp 18h +
mov esi [ebp+10h] +
cmp [edi+8] ebp +
mov ebx [esi+30h] +
jnb loc_4331C4  +
cmp edx [ecx-4] +
jb loc_4331C4  +
ja loc_4333C6  +
cmp eax [ecx-8] +
lea esi [esi+0] +
jb loc_4331C4  +
sub ecx 18h +
cmp edx [ecx+1Ch] +
ja loc_4331C4  +
jb loc_433388  +
cmp eax [ecx+18h] +
jb loc_433388  +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
nop   +
jz loc_4331D0  +
mov ebx [esi+30h] +
jmp loc_4331D0  +
mov ebx [esi+30h] +
mov edi [esp+0ECh+var_CC] +
mov [esp+0ECh+var_C4] edi +
jmp loc_433390  +
mov eax [esp+0ECh+var_C8] +
mov edx [eax+8] +
mov eax [eax+4] +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] edx +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_0]  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+20h] +
jnb loc_4332A6  +
mov edx ebx +
lea esi [esi+0] +
add edx 18h +
mov ecx edx +
sub ecx eax +
sar ecx 3 +
imul ecx ecx +
add ecx 1 +
cmp ecx [esp+0ECh+var_CC] +
jnb loc_433476  +
mov ebp edx +
sub ebp ebx +
lea ecx [ebx+30h] +
cmp [ebp+ecx-14h] edi +
jbe loc_433480  +
mov eax [esp+0ECh+var_C4] +
jmp loc_4332B0  +
jb loc_433488  +
cmp [ebp+ecx-18h] esi +
ja loc_433476  +
cmp [ebp+ecx-0Ch] edi +
jb loc_433476  +
nop   +
ja loc_433450  +
cmp [ebp+ecx-10h] esi +
jbe loc_433476  +
jmp loc_433450  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] 0 +
jmp loc_43341A  +
mov eax [esp+0ECh+arg_C] +
mov dword ptr [eax] 0 +
add esp 0ECh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+10h] +
mov ebx [eax+24h] +
test ebx ebx +
jz loc_43377C  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] ebx +
jmp loc_43341A  +
mov eax [ebp+10h] +
mov ecx 0Bh +
lea edi [esp+0ECh+var_38] +
mov [esp+0ECh+var_88] 0 +
mov [esp+0ECh+var_84] 0 +
mov edx eax +
mov [esp+0ECh+var_A4] eax +
mov eax ebx +
stos   +
mov edi [esp+0ECh+var_C8] +
mov [esp+0ECh+var_80] 0 +
mov [esp+0ECh+var_7C] 0 +
mov eax [edx+18h] +
mov edx [edi+1Ch] +
cmp eax edx +
jnb loc_43374E  +
mov edi [esp+0ECh+var_C8] +
sub edx eax +
xor ebx ebx +
mov [esp+0ECh+var_78] offset a_debug_line +
mov [esp+0ECh+var_6C] edx +
mov [esp+0ECh+var_5C] 0 +
mov ecx [edi+18h] +
mov [esp+0ECh+var_74] ecx +
add ecx eax +
mov eax [edi+30h] +
mov [esp+0ECh+var_70] ecx +
mov [esp+0ECh+var_68] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_64] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_60] eax +
lea eax [esp+0ECh+var_78] +
call sub_4315D0  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_433CF3  +
mov [esp+0ECh+var_6C] eax +
lea eax [esp+0ECh+var_78] +
call sub_431750  +
movzx eax ax +
mov [esp+0ECh+var_38] eax +
sub eax 2 +
cmp eax 2 +
ja loc_43385E  +
mov edx ebx +
lea eax [esp+0ECh+var_78] +
call sub_431730  +
mov edx [esp+0ECh+var_78] +
lea edi [esp+0ECh+var_88] +
mov [esp+0ECh+var_58] edx +
mov edx [esp+0ECh+var_74] +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_54] edx +
mov edx [esp+0ECh+var_70] +
mov [esp+0ECh+var_50] edx +
mov edx [esp+0ECh+var_68] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_40] edx +
mov edx [esp+0ECh+var_5C] +
mov [esp+0ECh+var_3C] edx +
mov edx eax +
lea eax [esp+0ECh+var_78] +
call sub_431580  +
mov [esp+0ECh+var_CC] edi +
test eax eax +
jnz loc_433884  +
mov eax [esp+0ECh+var_84] +
mov ebx 0FFFFFFFFh +
add [esp+0ECh+var_80] eax +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_C0] +
mov [esp+0ECh+var_84] 0 +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E8] eax +
call sub_42F6C0  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax edi +
xor edi edi +
call sub_430EE0  +
xor eax eax +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_CC] 0 +
mov ecx [esp+0ECh+var_C0] +
mov ecx [ecx+4] +
test ecx ecx +
mov ecx [esp+0ECh+var_C4] +
jnz loc_433849  +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+34h] ecx +
mov [esi+30h] ebx +
mov [esi+3Ch] edi +
cmp ebx 0FFFFFFFFh +
jnz loc_4331E1  +
test eax eax +
jz loc_4334A0  +
mov eax [esp+0ECh+arg_C] +
mov ecx [esp+0ECh+var_90] +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_4330D0  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] 0 +
mov [esp+0ECh+var_E8] offset aUnitLineOffset +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_4]  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_433661  +
mov ebx [eax+1Ch] +
test ebx ebx +
jz loc_433841  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jz loc_433841  +
cmp dl 2Fh +
jz loc_433841  +
test dl dl +
jz loc_4337AA  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_433841  +
mov edx [eax+20h] +
test edx edx +
mov [esp+0ECh+var_C8] edx +
jz loc_433841  +
mov [esp+0ECh+var_EC] ebx +
call strlen  +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_EC] edx +
mov edi eax +
mov [esp+0ECh+var_CC] eax +
call strlen  +
mov esi eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
lea eax [edi+esi+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_42F5C0  +
mov edx [esp+0ECh+var_C8] +
test eax eax +
mov edi eax +
jz loc_4334C0  +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov edx [esp+0ECh+var_CC] +
lea eax [edi+esi+1] +
mov byte ptr [edi+esi] 2Fh +
mov [esp+0ECh+var_E8] ebx +
mov ebx edi +
mov [esp+0ECh+var_EC] eax +
add edx 1 +
mov [esp+0ECh+var_E4] edx +
call memcpy  +
mov eax [ebp+10h] +
mov [eax+24h] ebx +
jmp loc_4334E8  +
mov [esi+34h] ecx +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+3Ch] edi +
mov [esi+30h] ebx +
jmp loc_4336F6  +
lea eax [esp+0ECh+var_78] +
mov edx offset aUnsupportedLin +
call sub_431520  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_433661  +
mov eax [esp+0ECh+var_90] +
mov edx ebx +
jmp loc_4332B0  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
xor edx edx +
test eax eax +
jz loc_4338A5  +
movzx edx byte ptr [ebx] +
cmp [esp+0ECh+var_38] 3 +
mov [esp+0ECh+var_34] edx +
jg loc_433D03  +
mov [esp+0ECh+var_30] 1 +
lea eax [esp+0ECh+var_58] +
call sub_4317A0  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
test eax eax +
jz loc_4338F0  +
movsx eax byte ptr [ebx] +
mov [esp+0ECh+var_2C] eax +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
xor edx edx +
test eax eax +
jz loc_433918  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_28] edx +
lea eax [esp+0ECh+var_58] +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
call sub_431580  +
test eax eax +
jz loc_433CE7  +
movzx eax byte ptr [ebx] +
lea edx [eax-1] +
mov [esp+0ECh+var_24] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_20] eax +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
test eax eax +
jz loc_433CDA  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_1C] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_434585  +
cmp byte ptr [ebx] 0 +
jnz loc_4339A5  +
jmp loc_434585  +
cmp byte ptr [ebx] 0 +
jz loc_4339CE  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E8] eax +
call sub_44BAF0  +
lea ebx [ebx+eax+1] +
mov eax [esp+0ECh+var_1C] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_1C] eax +
ja loc_4339A0  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
xor ebx ebx +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_42F5C0  +
test eax eax +
mov [esp+0ECh+var_18] eax +
jnz loc_433A5D  +
jmp loc_433CDA  +
mov edx [esp+0ECh+var_3C] +
test edx edx +
jnz loc_433CDA  +
mov edx [esp+0ECh+var_18] +
mov [edx+ebx] eax +
mov eax [esp+0ECh+var_4C] +
add ebx 4 +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_EC] eax +
call sub_44BAF0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
test eax eax +
jz loc_433CDA  +
mov eax [esp+0ECh+var_50] +
cmp byte ptr [eax] 0 +
jnz loc_433A10  +
mov edx 1 +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
test eax eax +
jz loc_433CDA  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_14] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_43457E  +
cmp byte ptr [ebx] 0 +
jz loc_43457E  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_44BAF0  +
lea edx [ebx+eax+1] +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_433AD6  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_433ACC  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_433AEC  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_433AE2  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_433B02  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_433AF8  +
lea ebx [edx+eax] +
mov eax [esp+0ECh+var_14] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_14] eax +
jbe loc_433B1F  +
cmp byte ptr [ebx] 0 +
jnz loc_433AAE  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_42F5C0  +
test eax eax +
mov [esp+0ECh+var_10] eax +
jz loc_433CDA  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_433D95  +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_433CDA  +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_C4] esi +
jmp loc_433C81  +
cmp cl 2Fh +
jz loc_433CBF  +
test cl cl +
jz loc_433BA7  +
cmp byte ptr [edi+1] 3Ah +
jz loc_433CBF  +
mov ebx edx +
or ebx eax +
jnz loc_433D30  +
mov eax [esp+0ECh+var_A4] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_433CBF  +
mov [esp+0ECh+var_EC] ecx +
mov [esp+0ECh+var_B4] ecx +
call strlen  +
mov [esp+0ECh+var_EC] edi +
mov ebx eax +
call strlen  +
mov ebp eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+ebp+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_42F5C0  +
mov ecx [esp+0ECh+var_B4] +
test eax eax +
mov esi eax +
jz loc_433CD2  +
mov [esp+0ECh+var_E8] ecx +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
lea eax [esi+ebx+1] +
lea ecx [ebp+1] +
mov byte ptr [esi+ebx] 2Fh +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_E4] ecx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov eax [esp+0ECh+var_10] +
mov edi [esp+0ECh+var_BC] +
mov [eax+edi] esi +
lea eax [esp+0ECh+var_58] +
call sub_4317D0  +
lea eax [esp+0ECh+var_58] +
call sub_4317D0  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_433D8D  +
mov eax [esp+0ECh+var_3C] +
add [esp+0ECh+var_BC] 4 +
test eax eax +
jnz loc_433CD2  +
mov eax [esp+0ECh+var_4C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44BAF0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
test eax eax +
jz loc_433CD2  +
lea eax [esp+0ECh+var_58] +
call sub_4317D0  +
movzx ecx byte ptr [edi] +
cmp cl 5Ch +
jnz loc_433B90  +
mov eax [esp+0ECh+var_10] +
mov ebx [esp+0ECh+var_BC] +
mov [eax+ebx] edi +
jmp loc_433C49  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_433661  +
mov edx 0FFFFFFFFh +
xor eax eax +
jmp loc_433945  +
lea eax [esp+0ECh+var_78] +
mov bl 1 +
call sub_431640  +
jmp loc_4335B5  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_431580  +
xor edx edx +
test eax eax +
jz loc_433D24  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_30] edx +
jmp loc_4338C5  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0ECh+var_B0] ebx +
mov ebx [esp+0ECh+var_1C] +
cmp [esp+0ECh+var_B0] 0 +
mov [esp+0ECh+var_B4] ecx +
jbe loc_433D73  +
lea eax [esp+0ECh+var_78] +
mov edx offset aInvalidDirecto +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
call sub_431520  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_433661  +
cmp [esp+0ECh+var_B4] ebx +
jnb loc_433D50  +
mov edx [esp+0ECh+var_18] +
add eax 3FFFFFFFh +
mov ecx [edx+eax*4] +
jmp loc_433BC0  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_433CDA  +
mov edx [esp+0ECh+var_14] +
test edx edx +
jnz loc_4344F2  +
mov [esp+0ECh+var_94] offset unk_4658C9 +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
mov eax [esp+0ECh+var_C8] +
mov [esp+0ECh+var_B8] 0 +
mov [esp+0ECh+var_A0] ebp +
add eax 4 +
mov [esp+0ECh+var_A8] eax +
lea esi [esi+0] +
mov eax [esp+0ECh+var_6C] +
test eax eax +
jz loc_434231  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
lea eax [esp+0ECh+var_78] +
call sub_431580  +
test eax eax +
jnz loc_433E70  +
mov edx [esp+0ECh+var_24] +
test edx edx +
jz loc_433EC8  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
mov edi eax +
lea eax [esp+0ECh+var_78] +
call sub_431580  +
test eax eax +
jnz loc_433E97  +
lea edx [edi-1] +
lea eax [esp+0ECh+var_78] +
call sub_431580  +
test eax eax +
jnz loc_433E00  +
mov ebp [esp+0ECh+var_A0] +
jmp loc_433661  +
movzx eax byte ptr [ebx] +
mov edx [esp+0ECh+var_24] +
movzx ebp al +
cmp ebp edx +
jnb loc_433ECA  +
test ebp ebp +
jz loc_433E34  +
cmp al 0Ch +
ja loc_434096  +
lea esi [esi+0] +
jmp ds:off_465A04[ebp*4]  +
movzx eax byte ptr [ebx] +
cmp al 2 +
lea esi [esi+0] +
jz loc_4340C3  +
jbe loc_4341EF  +
cmp al 3 +
nop   +
jz loc_4340E0  +
cmp al 4 +
jnz loc_433E55  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
jmp loc_433E00  +
xor ebp ebp +
mov eax ebp +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
div  [esp+0ECh+var_28] +
add edi eax +
mov eax [esp+0ECh+var_34] +
mov ebp edx +
xor edx edx +
imul eax edi +
div  [esp+0ECh+var_30] +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  [esp+0ECh+var_30] +
add ebp [esp+0ECh+var_2C] +
add [esp+0ECh+var_B4] ebp +
mov [esp+0ECh+var_C4] edx +
mov eax [esp+0ECh+var_CC] +
mov ecx [esp+0ECh+var_BC] +
mov edx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_4312C0  +
jmp loc_433E00  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
mov edi edx +
or edi eax +
jz loc_434224  +
mov ecx eax +
mov ebx edx +
mov edi [esp+0ECh+var_14] +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
jbe loc_434520  +
mov edx offset aInvalidFileNum +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_431520  +
jmp loc_433661  +
lea eax [esp+0ECh+var_78] +
call sub_4318F0  +
add [esp+0ECh+var_B4] eax +
jmp loc_433E00  +
lea eax [esp+0ECh+var_78] +
call sub_431750  +
xor edx edx +
mov [esp+0ECh+var_C4] 0 +
movzx eax ax +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
jmp loc_433E00  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
mov edi [esp+0ECh+var_30] +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_9C] eax +
mov eax [esp+0ECh+var_C4] +
mov [esp+0ECh+var_98] edx +
xor edx edx +
add [esp+0ECh+var_9C] eax +
adc [esp+0ECh+var_98] edx +
xor ebp ebp +
mov eax [esp+0ECh+var_34] +
mov ecx [esp+0ECh+var_98] +
mov [esp+0ECh+var_E0] ebp +
imul ecx eax +
mul  [esp+0ECh+var_9C] +
add edx ecx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_44ABE0  +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_E0] ebp +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
mov eax [esp+0ECh+var_9C] +
mov edx [esp+0ECh+var_98] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_44ACF0  +
mov [esp+0ECh+var_C4] eax +
jmp loc_433E00  +
mov eax 0FFh +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
mov ebp [esp+0ECh+var_30] +
div  [esp+0ECh+var_28] +
xor edx edx +
add edi eax +
mov eax [esp+0ECh+var_34] +
imul eax edi +
div  ebp +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  ebp +
mov [esp+0ECh+var_C4] edx +
jmp loc_433E00  +
mov eax [esp+0ECh+var_20] +
movzx ebx byte ptr [eax+ebp-1] +
test ebx ebx +
jz loc_433E00  +
lea esi [esi+0] +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
sub ebx 1 +
jnz loc_4340B0  +
jmp loc_433E00  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+14h] +
lea eax [esp+0ECh+var_78] +
call sub_431870  +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B8] edx +
jmp loc_433E00  +
mov eax [esp+0ECh+var_70] +
mov edi eax +
mov [esp+0ECh+var_AC] eax +
mov eax [esp+0ECh+var_6C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44BAF0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_78] +
call sub_431580  +
test eax eax +
jz loc_433E65  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
mov ebx eax +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
lea eax [esp+0ECh+var_78] +
call sub_4317D0  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_433E00  +
cmp al 2Fh +
jz loc_433E00  +
test al al +
jz loc_434153  +
mov eax [esp+0ECh+var_AC] +
cmp byte ptr [eax+1] 3Ah +
jz loc_433E00  +
test ebx ebx +
jnz loc_434504  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+20h] +
mov [esp+0ECh+var_EC] edx +
mov [esp+0ECh+var_9C] edx +
call strlen  +
mov ebx eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
call strlen  +
mov ecx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] ecx +
mov edi eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+edi+2] +
mov [esp+0ECh+var_E8] eax +
call sub_42F5C0  +
test eax eax +
mov ebp eax +
jz loc_433E65  +
mov edx [esp+0ECh+var_9C] +
add edi 1 +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call memcpy  +
lea eax [ebp+ebx+1] +
mov byte ptr [ebp+ebx+0] 2Fh +
mov [esp+0ECh+var_E4] edi +
mov edi [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edi +
call memcpy  +
mov [esp+0ECh+var_AC] ebp +
jmp loc_433E00  +
cmp al 1 +
jnz loc_433E55  +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
mov [esp+0ECh+var_B8] 0 +
jmp loc_433E00  +
mov [esp+0ECh+var_AC] offset unk_4658C9 +
jmp loc_433E00  +
mov eax [esp+0ECh+var_5C] +
mov ebp [esp+0ECh+var_A0] +
test eax eax +
jnz loc_433661  +
mov eax [esp+0ECh+var_7C] +
test eax eax +
jz loc_433661  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_CC] +
mov ebx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E8] 10h +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_DC] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E4] eax +
call sub_42F620  +
test eax eax +
jz loc_433661  +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
call sub_42F6C0  +
test eax eax +
jz loc_433661  +
mov eax [esp+0ECh+var_7C] +
mov ebx [esp+0ECh+var_88] +
mov [esp+0ECh+var_E0] offset sub_431050 +
mov [esp+0ECh+var_E4] 10h +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_430AF0  +
mov eax [esp+0ECh+var_7C] +
mov [esp+0ECh+var_C4] eax +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
test eax eax +
jz loc_4344DB  +
lea eax [esp+0ECh+var_78] +
mov edi [ebp+10h] +
mov [esp+0ECh+var_B4] 0 +
mov [esp+0ECh+var_78] 0 +
mov [esp+0ECh+var_74] 0 +
mov [esp+0ECh+var_70] 0 +
mov [esp+0ECh+var_6C] 0 +
mov [esp+0ECh+var_BC] eax +
mov ecx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_58] offset a_debug_info +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_AC] esi +
mov eax [ecx+10h] +
mov esi ecx +
mov edx [ecx+30h] +
mov [esp+0ECh+var_A8] ebx +
mov ebx [esp+0ECh+var_BC] +
mov [esp+0ECh+var_54] eax +
mov eax [edi] +
mov [esp+0ECh+var_50] eax +
mov eax [edi+4] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_3C] 0 +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+arg_8] +
mov [esp+0ECh+var_40] edx +
mov ebp edx +
jmp loc_43440E  +
mov eax [esp+0ECh+arg_4] +
mov ecx edi +
mov edx esi +
mov [esp+0ECh+var_D0] ebx +
mov [esp+0ECh+var_D4] ebx +
mov [esp+0ECh+var_D8] ebp +
mov [esp+0ECh+var_DC] eax +
lea eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
lea eax [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] 0 +
mov [esp+0ECh+var_E8] 0 +
call sub_432720  +
test eax eax +
jz loc_4344C3  +
mov eax [esp+0ECh+var_4C] +
test eax eax +
jnz loc_4343B6  +
mov eax [esp+0ECh+var_BC] +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+0ECh+var_CC] eax +
jz loc_4344CF  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
test edi edi +
mov [esp+0ECh+var_E4] eax +
jz loc_434540  +
mov edi [esp+0ECh+var_C0] +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_42F720  +
test eax eax +
mov edi eax +
jz loc_4344CF  +
mov eax [esp+0ECh+var_B4] +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E0] offset loc_431470 +
mov [esp+0ECh+var_E4] 18h +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_430AF0  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_430EE0  +
mov eax 1 +
jmp loc_4336D3  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_CC] 0 +
xor edi edi +
jmp loc_434498  +
mov eax [esp+0ECh+var_C8] +
mov edi [ebp+10h] +
add eax 34h +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B4] eax +
jmp loc_434340  +
mov eax [esp+0ECh+var_10] +
mov eax [eax] +
mov [esp+0ECh+var_94] eax +
jmp loc_433DBB  +
lea eax [ebx-1] +
cmp eax [esp+0ECh+var_1C] +
jnb loc_434567  +
mov eax [esp+0ECh+var_18] +
mov edx [eax+ebx*4-4] +
jmp loc_434162  +
cmp ecx edi +
jnb loc_433F86  +
mov edx [esp+0ECh+var_10] +
add eax 3FFFFFFFh +
mov eax [edx+eax*4] +
mov [esp+0ECh+var_AC] eax +
jmp loc_433E00  +
lea eax [esp+0ECh+var_78] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_42F6C0  +
test eax eax +
jz loc_4344CF  +
mov eax [esp+0ECh+var_BC] +
mov edi [eax] +
jmp loc_434478  +
mov edx offset aInvalidDirec_0 +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_431520  +
jmp loc_433661  +
xor eax eax +
jmp loc_433B22  +
xor eax eax +
jmp loc_4339D1  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_434600  +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_434644  +
lea ebp [esp+3Ch+var_10] +
jmp loc_4345D2  +
mov edx [esp+3Ch+var_10] +
test edx edx +
jnz loc_434671  +
mov ebx [ebx] +
test ebx ebx +
jz loc_434644  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_4330D0  +
test eax eax +
jz loc_4345C0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
lea ebp [esp+3Ch+var_10] +
lea ebx [eax+10h] +
jmp loc_43463E  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_4330D0  +
test eax eax +
jnz loc_4345F8  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jnz loc_434671  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_434610  +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] eax +
call esi  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+0FCh+arg_8] +
mov edx [esp+0FCh+arg_C] +
mov [esp+0FCh+var_9C] 0 +
mov [esp+0FCh+var_98] 0 +
mov [esp+0FCh+var_88] eax +
mov [esp+0FCh+var_84] eax +
mov eax [esp+0FCh+arg_C] +
test edx edx +
mov [esp+0FCh+var_94] 0 +
mov [esp+0FCh+var_90] 0 +
mov [esp+0FCh+var_8C] offset a_debug_info +
mov [esp+0FCh+var_80] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_70] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [esp+0FCh+var_7C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_78] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_74] eax +
jz loc_434FF9  +
mov eax [esp+0FCh+arg_8] +
mov [esp+0FCh+var_B0] eax +
nop   +
lea esi [esi+0] +
lea eax [esp+0FCh+var_8C] +
call sub_4315D0  +
mov [esp+0FCh+var_D0] 0 +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_434B72  +
mov eax [esp+0FCh+var_8C] +
mov [esp+0FCh+var_60] edx +
mov [esp+0FCh+var_6C] eax +
mov eax [esp+0FCh+var_88] +
mov [esp+0FCh+var_68] eax +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_64] eax +
mov eax [esp+0FCh+var_7C] +
mov [esp+0FCh+var_5C] eax +
mov eax [esp+0FCh+var_78] +
mov [esp+0FCh+var_58] eax +
mov eax [esp+0FCh+var_74] +
mov [esp+0FCh+var_54] eax +
mov eax [esp+0FCh+var_70] +
mov [esp+0FCh+var_50] eax +
lea eax [esp+0FCh+var_8C] +
call sub_431580  +
test eax eax +
jz loc_434822  +
lea eax [esp+0FCh+var_6C] +
call sub_431750  +
movzx eax ax +
mov [esp+0FCh+var_C8] eax +
sub eax 2 +
cmp eax 2 +
ja loc_434FE3  +
mov edx [esp+0FCh+var_D0] +
lea eax [esp+0FCh+var_6C] +
call sub_431730  +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
cmp edx 0 +
jbe loc_434890  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 0 +
mov [esp+0FCh+var_F8] offset aAbbrevOffsetOu +
mov [esp+0FCh+var_FC] eax +
call [esp+0FCh+arg_34]  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_430F40  +
mov ebx [esp+0FCh+var_90] +
mov esi [esp+0FCh+var_9C] +
test ebx ebx +
jz loc_434883  +
mov edi [esp+0FCh+arg_34] +
xor ebx ebx +
mov ebp [esp+0FCh+arg_38] +
nop   +
mov eax [esi+10h] +
mov ecx edi +
add ebx 1 +
mov [esp+0FCh+var_FC] ebp +
add esi 18h +
lea edx [eax+28h] +
mov eax [esp+0FCh+arg_0] +
call sub_430F40  +
cmp ebx [esp+0FCh+var_90] +
jb loc_434860  +
add esp 0FCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esp+0FCh+arg_1C] +
jnb loc_434801  +
mov edi [esp+0FCh+arg_18] +
mov edx eax +
xor ebx ebx +
mov ecx [esp+0FCh+arg_1C] +
mov [esp+0FCh+var_4C] offset a_debug_abbrev +
mov [esp+0FCh+var_30] 0 +
add edx edi +
mov [esp+0FCh+var_48] edi +
mov edi [esp+0FCh+arg_30] +
sub ecx eax +
mov eax ecx +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_40] ecx +
mov ecx [esp+0FCh+arg_38] +
mov [esp+0FCh+var_3C] edi +
mov edi [esp+0FCh+arg_34] +
mov [esp+0FCh+var_44] edx +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_34] ecx +
mov [esp+0FCh+var_38] edi +
mov edi [esp+0FCh+arg_18] +
mov [esp+0FCh+var_2C] offset a_debug_abbrev +
mov [esp+0FCh+var_18] eax +
lea eax [esp+0FCh+var_2C] +
mov [esp+0FCh+var_24] edx +
mov [esp+0FCh+var_28] edi +
mov [esp+0FCh+var_14] ecx +
mov [esp+0FCh+var_10] 0 +
call sub_4317D0  +
or edx eax +
jz loc_4349D1  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_434822  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_4317D0  +
lea eax [esp+0FCh+var_2C] +
call sub_4317A0  +
jmp loc_4349A5  +
call sub_4317D0  +
lea eax [esp+0FCh+var_2C] +
call sub_4317D0  +
or edx eax +
lea eax [esp+0FCh+var_2C] +
jnz loc_4349A0  +
call sub_4317D0  +
lea eax [esp+0FCh+var_2C] +
call sub_4317D0  +
or edx eax +
jnz loc_434973  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_434822  +
test ebx ebx +
jnz loc_434B8A  +
mov edx 1 +
mov ebx [esp+0FCh+var_64] +
lea eax [esp+0FCh+var_6C] +
call sub_431580  +
test eax eax +
mov esi eax +
jz loc_434A09  +
movzx esi byte ptr [ebx] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 40h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F5C0  +
test eax eax +
mov ebx eax +
jz loc_434822  +
mov eax [esp+0FCh+var_64] +
lea ecx [esp+0FCh+var_6C] +
mov edx [esp+0FCh+var_60] +
mov [ebx+14h] esi +
lea esi [esp+0FCh+var_9C] +
mov dword ptr [ebx+1Ch] 0 +
mov [ebx] eax +
sub eax [esp+0FCh+var_B0] +
mov [ebx+4] edx +
mov edx [esp+0FCh+var_A0] +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax [esp+0FCh+var_C8] +
mov dword ptr [ebx+24h] 0 +
mov [ebx+2Ch] edx +
mov dword ptr [ebx+18h] 0 +
mov [ebx+0Ch] eax +
mov eax [esp+0FCh+var_D0] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0 +
mov [ebx+10h] eax +
mov eax [esp+0FCh+var_A4] +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [ebx+28h] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_DC] esi +
mov [esp+0FCh+var_E0] ebx +
mov [esp+0FCh+var_E4] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_E8] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_24] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_20] +
mov edx [esp+0FCh+arg_4] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_2C] +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+arg_28] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_431DE0  +
test eax eax +
jz loc_434DE0  +
mov eax [esp+0FCh+var_50] +
test eax eax +
jnz loc_434DE0  +
mov ebp [esp+0FCh+var_80] +
test ebp ebp +
jz loc_434E5F  +
mov eax [esp+0FCh+var_70] +
test eax eax +
jnz loc_434822  +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_B0] eax +
jmp loc_434730  +
lea eax [esp+0FCh+var_8C] +
call sub_431640  +
mov [esp+0FCh+var_D0] 1 +
mov edx eax +
jmp loc_43474C  +
lea eax [ebx+ebx*2] +
mov [esp+0FCh+var_A4] ebx +
lea ebx ds:0[eax*8] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F5C0  +
test eax eax +
mov [esp+0FCh+var_A0] eax +
jz loc_434822  +
mov [esp+0FCh+var_F4] ebx +
mov [esp+0FCh+var_F8] 0 +
mov [esp+0FCh+var_FC] eax +
call memset  +
mov eax [esp+0FCh+var_30] +
test eax eax +
jnz loc_434D49  +
mov [esp+0FCh+var_C4] 0 +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
mov ecx edx +
or ecx eax +
mov [esp+0FCh+var_C0] eax +
mov [esp+0FCh+var_BC] edx +
jz loc_434E36  +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
mov edx 1 +
mov ebx [esp+0FCh+var_44] +
mov [esp+0FCh+var_B8] eax +
lea eax [esp+0FCh+var_4C] +
call sub_431580  +
test eax eax +
mov [esp+0FCh+var_CC] eax +
jz loc_434C4D  +
movzx eax byte ptr [ebx] +
mov [esp+0FCh+var_CC] eax +
mov eax [esp+0FCh+var_4C] +
xor ebx ebx +
mov [esp+0FCh+var_2C] eax +
mov eax [esp+0FCh+var_48] +
mov [esp+0FCh+var_28] eax +
mov eax [esp+0FCh+var_44] +
mov [esp+0FCh+var_24] eax +
mov eax [esp+0FCh+var_40] +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+var_3C] +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+var_38] +
mov [esp+0FCh+var_18] eax +
mov eax [esp+0FCh+var_34] +
mov [esp+0FCh+var_14] eax +
mov eax [esp+0FCh+var_30] +
mov [esp+0FCh+var_10] eax +
jmp loc_434CD0  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_4317D0  +
lea eax [esp+0FCh+var_2C] +
call sub_4317D0  +
or edx eax +
jnz loc_434CC1  +
test ebx ebx +
jnz loc_434D70  +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
mov [esp+0FCh+var_B4] 0 +
mov eax [esp+0FCh+var_C4] +
mov ecx [esp+0FCh+var_C0] +
add eax [esp+0FCh+var_A0] +
mov edi [esp+0FCh+var_CC] +
add [esp+0FCh+var_C4] 18h +
mov [eax] ecx +
mov ecx [esp+0FCh+var_BC] +
mov [eax+0Ch] edi +
mov [eax+10h] ebx +
mov [eax+4] ecx +
mov ecx [esp+0FCh+var_B8] +
mov [eax+8] ecx +
mov ecx [esp+0FCh+var_B4] +
mov [eax+14h] ecx +
mov eax [esp+0FCh+var_30] +
test eax eax +
jz loc_434BF8  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_430F40  +
jmp loc_434822  +
mov eax [esp+0FCh+arg_38] +
shl ebx 3 +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F5C0  +
test eax eax +
mov esi eax +
mov [esp+0FCh+var_B4] eax +
jz loc_434D49  +
xor ebx ebx +
jmp loc_434DBB  +
mov [esi] edi +
add ebx 1 +
add esi 8 +
mov [esi-4] eax +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
mov edi eax +
mov ebp edx +
lea eax [esp+0FCh+var_4C] +
call sub_4317D0  +
or ebp edi +
jnz loc_434DB0  +
jmp loc_434D08  +
mov eax [esp+0FCh+arg_38] +
lea edx [ebx+28h] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_430F40  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 40h +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F610  +
jmp loc_434822  +
mov eax [esp+0FCh+var_A4] +
mov [esp+0FCh+var_F0] offset loc_430D20 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+var_A0] +
mov [esp+0FCh+var_FC] eax +
call sub_430AF0  +
jmp loc_4349E8  +
mov edi [esp+0FCh+var_70] +
test edi edi +
jnz loc_434822  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] esi +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F6C0  +
test eax eax +
jz loc_434883  +
mov ebx [esp+0FCh+var_9C] +
mov esi [esp+0FCh+var_90] +
mov [esp+0FCh+var_F0] offset loc_430FD0 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_FC] ebx +
mov [esp+0FCh+var_F8] esi +
call sub_430AF0  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 44h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_42F5C0  +
test eax eax +
mov edx eax +
jz loc_434883  +
mov dword ptr [eax] 0 +
mov eax [esp+0FCh+arg_4] +
mov dword ptr [edx+34h] 0 +
mov dword ptr [edx+38h] 0 +
mov dword ptr [edx+3Ch] 0 +
mov [edx+4] eax +
mov eax [esp+0FCh+arg_8] +
mov dword ptr [edx+40h] 0 +
mov [edx+8] ebx +
mov [edx+0Ch] esi +
mov [edx+10h] eax +
mov eax [esp+0FCh+arg_C] +
mov [edx+14h] eax +
mov eax [esp+0FCh+arg_10] +
mov [edx+18h] eax +
mov eax [esp+0FCh+arg_14] +
mov [edx+1Ch] eax +
mov eax [esp+0FCh+arg_20] +
mov [edx+20h] eax +
mov eax [esp+0FCh+arg_24] +
mov [edx+24h] eax +
mov eax [esp+0FCh+arg_28] +
mov [edx+28h] eax +
mov eax [esp+0FCh+arg_2C] +
mov [edx+2Ch] eax +
mov eax [esp+0FCh+arg_30] +
mov [edx+30h] eax +
mov eax [esp+0FCh+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_434FCD  +
mov eax [esp+0FCh+arg_0] +
lea ebx [eax+10h] +
mov ecx ebx +
jmp loc_434FA4  +
mov ecx eax +
mov eax [ecx] +
test eax eax +
jnz loc_434FA2  +
cmpxchg [ecx] edx +
jnz loc_434F9E  +
mov eax [esp+0FCh+arg_3C] +
mov dword ptr [eax] offset sub_434590 +
add esp 0FCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+10h] +
mov eax [eax+10h] +
test eax eax +
jz loc_434FDF  +
mov ecx eax +
mov eax [eax] +
test eax eax +
jnz loc_434FD7  +
mov [ecx] edx +
jmp loc_434FB0  +
mov edx offset aUnrecognized_0 +
lea eax [esp+0FCh+var_6C] +
call sub_431520  +
jmp loc_434822  +
lea esi [esp+0FCh+var_9C] +
jmp loc_434E6E  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_4560F0 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_46B30C +
mov esi ds:dword_46B308 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_435085  +
cmp [esp+14h+var_14] esi +
jle loc_435085  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_4350A4  +
test edx edx +
jle loc_4350DD  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_435070  +
cmp esi edi +
jg loc_435044  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_46B308 edi +
mov ds:dword_46B30C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_4350D5  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_4350C0  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_435040  +
add edi edx +
jmp loc_435040  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_4560F0 +
mov ds:dword_46B304 0 +
test eax eax +
jnz loc_435350  +
mov dword_4560F0 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_46B308 eax +
mov ds:dword_46B30C eax +
mov ds:dword_46B318 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_46B310 eax +
cmp dl 2Dh +
jz loc_4355E3  +
cmp dl 2Bh +
jz loc_435592  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_46B314 eax +
mov ds:dword_46B300 1 +
mov edx ds:dword_46B318 +
test edx edx +
jz loc_435363  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_435363  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_435414  +
mov eax dword_4560F0 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_435212  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_435414  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_435212  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_435212  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_435208  +
jmp loc_435ACA  +
cmp bl dl +
jz loc_435783  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_435200  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_435233  +
cmp al 3Dh +
jnz loc_435229  +
jmp loc_435233  +
test al al +
jz loc_435233  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_435225  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_4356E2  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_435284  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4352C8  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_435278  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_4356B3  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_435270  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_435284  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_435650  +
mov eax dword_4560EC +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_43531F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_46B318 +
mov esi dword_4560F0 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_4560F0 esi +
mov dword_4560E8 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_46B318 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_46B300 +
test esi esi +
jz loc_43511D  +
jmp loc_435172  +
mov eax dword_4560F0 +
cmp ds:dword_46B308 eax +
jle loc_435375  +
mov ds:dword_46B308 eax +
cmp eax ds:dword_46B30C +
jge loc_435382  +
mov ds:dword_46B30C eax +
mov ebx ds:dword_46B314 +
cmp ebx 1 +
jz loc_435500  +
cmp [esp+4Ch+arg_0] eax +
jz loc_43556C  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_465A8C +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4354D0  +
mov edx ds:dword_46B30C +
add eax 1 +
mov ecx ds:dword_46B308 +
mov dword_4560F0 eax +
cmp edx ecx +
jz loc_4356C0  +
cmp eax ecx +
jz loc_4353F1  +
mov eax [esp+4Ch+arg_4] +
call sub_435010  +
mov edx ds:dword_46B30C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_46B308 eax +
mov dword_4560F0 eax +
jnz loc_43557F  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_46B318 ecx +
test al al +
jz loc_435452  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_435941  +
mov eax [esp+4Ch+arg_8] +
jmp loc_435448  +
cmp dl bl +
jz loc_4355F7  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_435440  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_43546A  +
add dword_4560F0 1 +
test dl dl +
jz loc_435621  +
mov ecx dword_4560EC +
test ecx ecx +
jz loc_435641  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_46B310 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_4358BB  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_4560E8 eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_4355A6  +
test ebx ebx +
jz loc_435407  +
add eax 1 +
mov dword_4560F0 eax +
mov eax 1 +
mov ds:dword_46B304 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_46B30C +
mov edx ds:dword_46B308 +
cmp ecx edx +
jz loc_435771  +
cmp eax edx +
jz loc_435526  +
mov eax [esp+4Ch+arg_4] +
call sub_435010  +
mov eax dword_4560F0 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_43555C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_435549  +
add edx 1 +
cmp edx esi +
mov dword_4560F0 edx +
jz loc_435610  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_435538  +
cmp byte ptr [eax+1] 0 +
jz loc_435538  +
mov eax dword_4560F0 +
mov ds:dword_46B308 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_43539B  +
mov eax ds:dword_46B308 +
mov edx ds:dword_46B30C +
cmp eax edx +
jz loc_435407  +
mov dword_4560F0 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_46B314 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_435168  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_4354DA  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_435767  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_46B318 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_435193  +
mov ds:dword_46B314 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_435168  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_435459  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_46B308 edx +
jmp loc_435562  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_435797  +
cmp dl 3Ah +
jz loc_435882  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4354F5  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4354BB  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_4356E2  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_4560F0 eax +
cmp byte ptr [esi] 0 +
jnz loc_4356CC  +
cmp dword ptr [ebx+4] 1 +
jz loc_43598B  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_46B318 eax +
jz loc_43569C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_4359DD  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4354F5  +
mov esi [esp+4Ch+var_18] +
jmp loc_435660  +
mov ds:dword_46B30C eax +
mov edx eax +
jmp loc_4353F1  +
mov eax [ebx+4] +
test eax eax +
jz loc_4358C8  +
add esi 1 +
mov ds:dword_46B304 esi +
jmp loc_43567B  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_435AD4  +
mov esi dword_4560EC +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_435741  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_435C2E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4560F0 +
add eax 1 +
mov dword_4560F0 eax +
mov eax 3Fh +
mov ds:dword_46B318 offset unk_465B78 +
mov dword_4560E8 0 +
jmp loc_4354F5  +
mov eax 1 +
jmp loc_4355C9  +
cmp eax ecx +
jz loc_435526  +
mov ds:dword_46B30C eax +
jmp loc_435526  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_46B318 ecx +
jmp loc_43542C  +
cmp dl 3Bh +
jnz loc_43562E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_435A9D  +
add dword_4560F0 1 +
mov ds:dword_46B304 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_46B318 eax +
cmp bl 3Dh +
jz loc_435D73  +
test bl bl +
jz loc_435D73  +
mov esi eax +
jmp loc_4357E4  +
test bl bl +
jz loc_4357EF  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_4357E0  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_435D5F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_435848  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4359E5  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_435838  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_435C12  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_435830  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_435838  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_4359B7  +
cmp byte ptr [eax+1] 0 +
jz loc_43595D  +
add dword_4560F0 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_46B304 ecx +
mov ds:dword_46B318 0 +
jmp loc_4354F5  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_4354A9  +
mov eax dword_4560EC +
test eax eax +
jz loc_43567B  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_435B34  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_46B318 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_46B318 esi +
mov dword_4560E8 eax +
mov eax 3Fh +
jmp loc_4354F5  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_435459  +
mov eax dword_4560F0 +
cmp eax [esp+4Ch+arg_0] +
jz loc_435B61  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4560F0 edx +
mov eax [ecx+eax*4] +
mov ds:dword_46B304 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4358AC  +
cmp [esp+4Ch+arg_0] eax +
jle loc_435A5D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_4560F0 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_46B304 eax +
jmp loc_43567B  +
cmp byte ptr [eax+1] 0 +
jz loc_435B25  +
add dword_4560F0 1 +
mov ds:dword_46B304 ecx +
mov ds:dword_46B318 0 +
jmp loc_435637  +
mov eax [ebx+0Ch] +
jmp loc_4354F5  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_435B8F  +
mov ecx dword_4560EC +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_435A3C  +
mov eax dword_4560F0 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_46B318 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_4560F0 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_46B318 ebx +
jmp loc_4354F5  +
mov eax dword_4560EC +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_435C62  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_46B318 esi +
mov dword_4560E8 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4354C0  +
mov eax 3Ah +
jmp loc_4354F5  +
mov eax dword_4560F0 +
cmp eax [esp+4Ch+arg_0] +
jz loc_435C9A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4560F0 edx +
mov eax [edi+eax*4] +
mov ds:dword_46B304 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_4357BF  +
movzx eax [esp+4Ch+var_19] +
jmp loc_435785  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_435C21  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_435B0F  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_435DAF  +
mov edx [esp+4Ch+arg_8] +
jmp loc_435B05  +
cmp cl bl +
jz loc_435785  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_435AFD  +
cmp dword_4560EC 0 +
jnz loc_435707  +
mov eax [esp+4Ch+var_24] +
jmp loc_435741  +
mov ds:dword_46B304 0 +
jmp loc_4359CE  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_435919  +
mov eax dword_4560EC +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_435D34  +
mov eax [esp+4Ch+arg_8] +
mov dword_4560E8 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_4358AC  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_435D5F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_435CEA  +
cmp dword ptr [eax+4] 0 +
jnz loc_435DA1  +
cmp dword_4560EC 0 +
jz loc_435BEE  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_46B318 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_46B318 eax +
mov eax 3Fh +
jmp loc_4354F5  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_435BA3  +
cmp dword_4560EC 0 +
jz loc_435B1C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_4560F0 +
jmp loc_435741  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_46B318 +
jmp loc_435A6E  +
mov eax dword_4560EC +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_435CCE  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_4560E8 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_4354F5  +
cmp dword ptr [eax+4] 1 +
jz loc_435D7C  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_46B318 eax +
jz loc_435D15  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_435DB9  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4354F5  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_435B73  +
mov ds:dword_46B318 0 +
mov eax 57h +
jmp loc_4354F5  +
mov esi [esp+4Ch+var_34] +
jmp loc_4357EF  +
mov eax dword_4560F0 +
cmp [esp+4Ch+arg_0] eax +
jle loc_435DC5  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_4560F0 edx +
mov eax [ecx+eax*4] +
mov ds:dword_46B304 eax +
jmp loc_435CF4  +
add esi 1 +
mov ds:dword_46B304 esi +
jmp loc_435CF4  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_435785  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_4354F5  +
cmp dword_4560EC 0 +
jz loc_435DF8  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_46B318 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_46B318 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4354C0  +
jmp loc_435A93  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4350F0  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_0] +
mov off_4560F4 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 14h +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
cmovz ebx edx +
test eax eax +
jz loc_435F80  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_435F8A  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call malloc  +
jmp loc_435F76  +
mov [esp+18h+var_18] ebx +
call sub_435E80  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
retn   +
***
jmp loc_4506A8  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4350F0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4350F0  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_43632C  +
shl edx 3 +
cmp ebx edx +
ja loc_436323  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_43634B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_436367  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_436225  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_436302  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_436218  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_465CC0[eax] +
mov edx ds:dword_465CCC[eax] +
mov eax ds:dword_465CC0[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_4362EF  +
cmp eax 1 +
jz loc_4363A1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_4362DA  +
cmp edx 1 +
jz loc_4363A1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_4362D1  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_436225  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_436371  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_4361CD  +
call sub_436100  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_465CC0[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_4361DC  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_4361F8  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_43631B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_0] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_436100  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_465CC0[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_436473  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_436460  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_436473  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_436100  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_465CC0[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_43650F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_436500  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_43650F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_436480  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset sub_435F00 +
mov [esp+2Ch+var_1C] offset sub_435F00 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_436480  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset calloc +
mov dword ptr [esp+10h] offset calloc +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_436480  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_436661  +
sub ebx 1 +
js loc_436661  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_436647  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_43664C  +
mov eax [edi+28h] +
test eax eax +
jz loc_436680  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_4366A2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_4366EB  +
lea esi [esi+0] +
sub ebx 1 +
js loc_4366EB  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_4366D0  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_4366D5  +
cmp edi 40000h +
jbe loc_436740  +
mov eax 100h +
call sub_436100  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_465CC0[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_436770  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_436788  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_436757  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_436717  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_436717  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_436735  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_465CC0[eax] +
mov eax ds:dword_465CC0[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_4368C0  +
cmp edx 1 +
jz loc_4368D0  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_4368B4  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_465CC0[eax] +
mov eax ds:dword_465CC0[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_4368C0  +
cmp ebp 1 +
jz loc_436873  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_4368B2  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_436873  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_436844  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_4367A0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_436A91  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_465CC0[eax] +
mov ecx ds:dword_465CCC[eax] +
mov eax ds:dword_465CC0[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_436ABD  +
cmp eax 1 +
jz loc_4369D2  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_436A84  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_465CC0[edx] +
mov ecx ds:dword_465CCC[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_465CC0[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_436A60  +
cmp ecx 1 +
jz loc_436A50  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_436A84  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_436A05  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_436A05  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_436AB9  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_436AC8  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_43692D  +
mov eax ebx +
call sub_436190  +
test eax eax +
jz loc_436AB9  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_43692D  +
xor eax eax +
jmp loc_436A7C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_436AB9  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_436910  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_436910  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_436B67  +
mov edx [ebx+8] +
test edx edx +
jz loc_436B5D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_436B20  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_436C17  +
add ebx 4 +
cmp esi ebx +
jbe loc_436C29  +
cmp dword ptr [ebx] 1 +
jbe loc_436C10  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_436C10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_436C40  +
***
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_436C64  +
cmp edx 20h +
ja loc_436C78  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_436BF0  +
mov eax ebx +
call sub_436190  +
jmp loc_436C64  +
***
jmp loc_436C90  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_436CC1  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz locret_436CF4  +
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_436CE0  +
retn   +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_436EE6  +
cmp esi 0Bh +
jbe loc_436E0E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_436D30  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_436E7C  +
jmp ds:off_465C84[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_436E0E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_436EF5  +
mov ebx ecx +
mov ecx edi +
jmp loc_436E0E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call sub_435ED0  +
cmp esi ebx +
mov edi eax +
jbe loc_436FBA  +
sub esi ebx +
lea eax [eax+ebx] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov [esp+1Ch+arg_8] ebx +
mov [esp+1Ch+arg_4] ebp +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebx  +
sub esp 14h +
mov edx [esp+18h+arg_0] +
lea ebx [esp+18h+arg_4] +
test edx edx +
jz loc_437007  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_436FF3  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_43704D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_437027  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_46C0D4 +
mov ebx [esp+1Ch+arg_0] +
lea edi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_4370A6  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_437080  +
mov byte ptr [esi] 0 +
mov eax ds:dword_46C0D4 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
lea esi [esp+34h] +
test ebx ebx +
jz loc_437135  +
mov eax ebx +
xor edi edi +
mov [esp] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_4370D7  +
add edi 1 +
mov [esp] edi +
lea edi [esp+34h] +
call sub_435ED0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_437100  +
mov byte ptr [esi] 0 +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_435ED0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_437126  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_4371D9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_437167  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_435ED0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_437190  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_4371CD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_435ED0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_4371B6  +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_437200  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_4660A0[ecx+ecx] 88h +
jz loc_43723A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_437260  +
test dl dl +
jz locret_437257  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_43724B  +
cmp dl 2Fh +
jnz loc_43724D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_437241  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_43723A  +
***
cmp edx 4Fh +
ja loc_4372D5  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4662A0[edx*4]  +
test ecx ecx +
jz loc_4372D1  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jl loc_4372A1  +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
add esi 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] esi +
mov [eax+8] ecx +
mov ecx [esp+8+arg_0] +
mov [eax] edx +
mov [eax+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_4372D1  +
mov eax [esp+8+arg_0] +
test eax eax +
jnz loc_437294  +
xor eax eax +
jmp loc_43729E  +
xor eax eax +
retn   +
***
mov esi [eax+14h] +
cmp esi [eax+18h] +
jge loc_437307  +
mov ebx esi +
add esi 1 +
shl ebx 4 +
add ebx [eax+10h] +
test edx edx +
mov dword ptr [ebx+4] 0 +
mov [eax+14h] esi +
jz loc_437307  +
test ecx ecx +
jnz loc_437310  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx] 0 +
mov eax ebx +
mov [ebx+8] edx +
mov [ebx+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_437330  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_437370  +
test dl dl +
jnz loc_437374  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_437280  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_437369  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_437353  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_4373A7  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Fh +
ja loc_4373A7  +
mov ecx [ebx] +
jmp ds:off_4663E0[ecx*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_437390  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+8] +
jmp loc_4373A3  +
mov ecx [ebx+8] +
cmp dword ptr [ecx] 5 +
jnz loc_4373C3  +
add dword ptr [edi] 1 +
mov ecx [ebx+8] +
mov edx edi +
mov eax esi +
call sub_437380  +
mov ebx [ebx+0Ch] +
jmp loc_4373A3  +
add dword ptr [esi] 1 +
mov ecx [ebx+8] +
jmp loc_4373C3  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_437410  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+124h] 1 +
jmp loc_4373F5  +
***
test edx edx +
js locret_437489  +
test eax eax +
jnz loc_43747E  +
jmp loc_437483  +
test edx edx +
jz loc_437486  +
mov eax [eax+0Ch] +
sub edx 1 +
test eax eax +
jz locret_437490  +
cmp dword ptr [eax] 2Fh +
jz loc_437470  +
xor eax eax +
retn   +
mov eax [eax+8] +
retn   +
retn   +
***
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_4374B8  +
cmp eax 4Ch +
jz loc_4374B8  +
sub eax 4Eh +
cmp eax 1 +
jbe loc_4374B8  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_437504  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_437513  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_4374E0  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_4374D1  +
xor eax eax +
jmp loc_4374F7  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_437553  +
push ebx  +
mov ebx edx +
shl ebx 4 +
add edx 1 +
add ebx [eax+10h] +
add eax 0Ch +
mov dword ptr [ebx+4] 0 +
mov [eax+8] edx +
mov dword ptr [ebx] 41h +
call sub_4374C0  +
mov [ebx+8] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_437590  +
cmp al 6Eh +
jz loc_437594  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
add eax 1 +
js loc_437594  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_437594  +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
xor eax eax +
jmp loc_437586  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_4375B0  +
xor eax eax +
pop ebx  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_437560  +
test eax eax +
js loc_4375AB  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_4375AB  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [ebx+10h] +
mov dword ptr [edx+4] 0 +
mov [ebx+14h] ecx +
mov [edx+8] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_4374C0  +
test eax eax +
mov esi eax +
jle loc_4376A4  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_4376A8  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_437660  +
cmp esi 9 +
jle loc_437647  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_437670  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_4372E0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_437626  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_437626  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_437680  +
cmp al 5Fh +
jz loc_437680  +
cmp al 24h +
jnz loc_437647  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_437647  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_4372E0  +
jmp loc_437652  +
xor eax eax +
jmp loc_437655  +
xor eax eax +
lea esi [esi+0] +
jmp loc_437652  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_4376FE  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_4375F0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_437280  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_4376D6  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_437730  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_437780  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_43775F  +
test cl cl +
jnz loc_43775F  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_437814  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_437767  +
jmp loc_437721  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_4378D8  +
cmp dl 5Fh +
jz loc_437810  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_4377D3  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_437721  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_4377E8  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_4377F0  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_4377A4  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_437721  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_4377AB  +
xor edx edx +
mov eax ecx +
jmp loc_4377CB  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_437721  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_4377F3  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_4378C8  +
mov edi [eax+18h] +
xor esi esi +
mov edx [ebx+14h] +
mov [esp+1Ch+var_10] edi +
mov edi [ebx+18h] +
cmp edx edi +
jge loc_437857  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov [esi+8] ebp +
mov ebp [esp+1Ch+var_10] +
mov dword ptr [esi] 18h +
mov [esi+0Ch] ebp +
mov [ebx+2Ch] esi +
test ecx ecx +
jz loc_4378D0  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edi edx +
jle loc_43788E  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [eax] 18h +
mov [eax+8] esi +
mov [eax+0Ch] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_437723  +
mov edx eax +
mov eax ebx +
call sub_4376C0  +
test eax eax +
jz loc_437721  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_437723  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_437723  +
mov edi [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_43785A  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_437864  +
cmp dl 5Fh +
jz loc_437795  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_43779A  +
jmp loc_437740  +
***
jmp sub_437900  +
***
push ebx  +
mov ebx eax +
jnz loc_43791E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_437915  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_437950  +
cmp edx 76h +
jnz loc_437910  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_4374C0  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_437910  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_4374C0  +
jmp loc_437958  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_437912  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_437912  +
***
movzx edx byte ptr [eax] +
cmp dl 72h +
jz loc_4379A3  +
cmp dl 56h +
jz loc_4379A3  +
cmp dl 4Bh +
jz loc_4379A3  +
cmp dl 44h +
jz loc_437990  +
xor eax eax +
retn   +
movzx eax byte ptr [eax+1] +
lea edx [eax-77h] +
cmp dl 1 +
jbe loc_4379A3  +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_437987  +
mov eax 1 +
retn   +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4379C4  +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov esi 1 +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 5Fh +
jz loc_437A00  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
test eax eax +
js loc_437A10  +
cmp eax 9 +
jle loc_4379BC  +
cmp esi 1 +
jle loc_4379BC  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_4379C1  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_4379C1  +
add eax 2 +
mov si 2 +
mov [ebx+0Ch] eax +
jmp loc_4379D5  +
xor eax eax +
jmp loc_4379C1  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_437A37  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+0Ch] +
jmp sub_437460  +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_437A85  +
cmp dword ptr [ebx] 4Bh +
ja loc_437A70  +
mov edx [ebx] +
jmp ds:off_466540[edx*4]  +
mov edx [ebx+8] +
mov eax esi +
call sub_437A50  +
test eax eax +
jnz loc_437A87  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_437A5D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+8] +
mov eax esi +
call sub_437A20  +
test eax eax +
jz loc_437A85  +
cmp dword ptr [eax] 2Fh +
jnz loc_437A85  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_437B33  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_437AEC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_437B33  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_437AD1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+124h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_437AD4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_466670 +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_437BE0  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_437B92  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_437BE0  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_437B77  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_437B7A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_437C50  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_437C20  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_437C13  +
test ebx ebx +
jnz loc_437C62  +
cmp eax 2 +
mov bl 2 +
jbe loc_437C68  +
add ebx ebx +
cmp eax ebx +
ja loc_437C62  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_437C81  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_437C0C  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_437C13  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_88] edx +
jz loc_437CCE  +
mov eax [ecx+4] +
cmp eax 1 +
jle loc_437CE3  +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 1 +
mov esi [ebx+128h] +
mov [ecx+4] eax +
lea edx [esp+98h+var_68] +
mov [esp+98h+var_68] ecx +
mov ecx [ebx+118h] +
mov [ebx+128h] edx +
mov [esp+98h+var_64] esi +
test ecx ecx +
jnz loc_437DB4  +
mov edi [ebp+0] +
cmp edi 4Fh +
ja loc_4397F6  +
jmp ds:off_4668E8[edi*4]  +
mov eax [ebx+11Ch] +
xor edi edi +
mov esi [ebp+8] +
test eax eax +
jnz loc_437D3A  +
cmp dword ptr [esi] 5 +
jz loc_43AE3C  +
mov eax [esi] +
cmp eax 23h +
jz loc_437D51  +
cmp eax [ebp+0] +
jz loc_437D51  +
cmp eax 24h +
jz loc_43ADCF  +
mov esi ebp +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] ecx +
mov [esp+98h+var_54] esi +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [esi+8] +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
mov ecx [esp+98h+var_50] +
test ecx ecx +
jz loc_43A03B  +
mov eax [esp+98h+var_58] +
test edi edi +
mov [ebx+114h] eax +
jz loc_437DAD  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
sub eax 1 +
mov [ebx+128h] esi +
mov [ebp+4] eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aClone +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
jmp loc_437E09  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668E3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439F05  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_437DE6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_437DE9  +
mov edx [ebp+8] +
mov eax ebx +
call sub_437A50  +
test eax eax +
jz loc_43B54E  +
xor edx edx +
jmp loc_437E7A  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_437E7F  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_43A64D  +
cmp dword ptr [eax] 2Fh +
jz loc_437E65  +
mov eax [ebp+8] +
test edx edx +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jz loc_43B542  +
mov eax [esp+98h+var_84] +
xor edi edi +
mov [esp+98h+var_78] ebp +
mov ebp [esp+98h+var_88] +
sub eax 1 +
mov [esp+98h+var_7C] eax +
mov ecx [esp+98h+var_80] +
mov edx ebp +
mov eax ebx +
mov [ebx+120h] edi +
call sub_437CB0  +
cmp edi [esp+98h+var_7C] +
jge loc_439808  +
mov eax [ebx+100h] +
mov esi offset asc_46680F +
jmp loc_437EF4  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_46680F+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439808  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_437ED1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_437ED4  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_437F6A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4667FAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439874  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_437F47  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_437F4A  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aAbi +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
jmp loc_437FF3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466678h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439F44  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_437FD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_437FD3  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_438069  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4667DFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439D27  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438046  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438049  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType +
jmp loc_4380E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668DAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439D41  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4380C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_4380C3  +
mov eax [ebx+100h] +
mov esi offset aLambda +
jmp loc_438159  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668C8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439B8B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438136  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438139  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestruct +
jmp loc_4381D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668BFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439E15  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4381B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4381B3  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstruc +
jmp loc_438249  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668A2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439B32  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438226  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438229  +
mov eax [ebx+100h] +
mov esi offset aDecltype +
jmp loc_4382C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466874h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439B4C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4382A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4382A3  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_466670 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_43832A  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_439FE7  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_43838F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439FE7  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438370  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_438373  +
cmp dword ptr [ebx+100h] 0FFh +
mov edi [ebp+8] +
jz loc_43AC5D  +
mov eax [ebx+100h] +
mov ecx edi +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_437CB0  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx edi +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CA30  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_438483  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466824h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439C1D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438460  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438463  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_4384F9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466824h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439C76  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4384D6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4384D9  +
mov edi [ebp+8] +
mov esi offset aOperator_0 +
mov eax [edi+8] +
mov [esp+98h+var_84] eax +
mov eax [ebx+100h] +
jmp loc_438579  +
lea edx [eax+1] +
add esi 1 +
cmp esi 46681Ah +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_439C90  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_438556  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_438559  +
mov ecx [ebp+8] +
mov esi [ebp+0Ch] +
test ecx ecx +
jz loc_4385D4  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43ABFE  +
lea edx [eax+1] +
mov ecx esi +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43AAAE  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_438649  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_43AEFC  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_43A930  +
mov edi offset asc_46680F +
jmp loc_438693  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_46680F+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43A003  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_438670  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov edx [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_438673  +
cmp word ptr [ebp+0Eh] 0 +
jnz loc_43A553  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+8] offset off_467420 +
jz loc_43A65D  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43AF08  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+0Ch] 0 +
jz loc_43A329  +
mov esi offset a_accum +
jmp loc_43875A  +
lea edx [eax+1] +
add esi 1 +
cmp esi 466807h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A31D  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_438737  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_43873A  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ebp+0Ch] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_437CB0  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_4387ED  +
mov edx [esp+98h+var_88] +
mov ecx ebp +
mov eax ebx +
call sub_43B810  +
mov eax [esp+98h+var_58] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 3Ah +
jz loc_43A3C1  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 38h +
jz loc_43A485  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov [esp+98h+var_7C] eax +
mov eax [eax] +
mov [esp+98h+var_84] edi +
cmp eax 31h +
jz loc_43A6B7  +
cmp eax 33h +
jnz loc_43B7DF  +
mov edx 28h +
mov eax ebx +
call sub_4373E0  +
mov eax [esp+98h+var_7C] +
mov edx [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
call sub_437CB0  +
mov edx 29h +
mov eax ebx +
call sub_4373E0  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CAE0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov [ebx+114h] eax +
mov edi ecx +
mov [esp+98h+var_7C] ecx +
test edi edi +
mov [esp+98h+var_58] ecx +
mov ecx eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_43B7B7  +
mov eax [edi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_43B7B7  +
mov eax edi +
mov esi 1 +
mov [esp+98h+var_78] ebp +
mov [esp+98h+var_80] edx +
jmp loc_43892D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_43897F  +
mov edx [eax+8] +
test edx edx +
jnz loc_438979  +
cmp esi 3 +
ja loc_43AA07  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea edi [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [edi+4] ebp +
mov ebp [eax+8] +
mov [edi+8] ebp +
mov ebp [eax+0Ch] +
mov [edi+0Ch] ebp +
mov edi [esp+98h+var_80] +
mov [esp+edx+98h+var_58] ecx +
lea ecx [edi+edx] +
mov [ebx+114h] ecx +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_438920  +
mov ebp [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov ecx [ebp+0Ch] +
call sub_437CB0  +
mov eax [esp+98h+var_7C] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_4389E9  +
cmp esi 1 +
jz loc_4389D2  +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
jmp loc_4389BD  +
sub esi 1 +
mov ecx [edi] +
mov eax ebx +
sub edi 10h +
mov edx [esp+98h+var_88] +
call sub_43B810  +
cmp esi 1 +
jnz loc_4389BA  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_43C4C0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
test byte ptr [esp+98h+var_88] 20h +
jnz loc_43A611  +
cmp dword ptr [ebp+8] 0 +
jz loc_438A11  +
test byte ptr [esp+98h+var_88] 40h +
jz loc_43AA1A  +
mov eax [ebx+114h] +
lea ecx [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_43C740  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+8] +
xor esi esi +
cmp dword ptr [eax] 27h +
jnz loc_438A6C  +
mov eax [eax+8] +
mov esi [eax+10h] +
cmp esi 1 +
jb loc_438A6C  +
cmp esi 6 +
jbe loc_43AA7B  +
cmp esi 7 +
jnz loc_438A6C  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 0 +
jnz loc_438A6C  +
cmp dword ptr [eax+0Ch] 1 +
jz loc_43B75C  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43ACCD  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+8] +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43AC9B  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Dh +
jz loc_43B07F  +
cmp esi 8 +
jz loc_43B04D  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebx+100h] +
mov esi offset aJavaResource +
jmp loc_438B38  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466869h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439B18  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438B15  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438B18  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_438BB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466718h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439AFE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438B90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438B93  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_438C29  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466702h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439AE4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438C06  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438C09  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_438CA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666F1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439ACA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438C80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438C83  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_438D19  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666DEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439AB0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438CF6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438CF9  +
mov eax [ebx+100h] +
mov esi offset aConstructionVt +
jmp loc_438D93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666CBh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439A16  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438D70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438D73  +
mov eax [ebx+100h] +
mov esi offset aVttFor +
jmp loc_438E09  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666B2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4399FC  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438DE6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438DE9  +
mov eax [ebx+100h] +
mov esi offset aVtableFor +
jmp loc_438E83  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666A9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4399E2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438E60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438E63  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43ABC4  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+0Ch] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_438F57  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4667C8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43988E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438F34  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438F37  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_438FD3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466769h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43992C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_438FB0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_438FB3  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_439049  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46679Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439994  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439026  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439029  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_4390C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466745h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439960  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4390A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4390A3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_439139  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4667B0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4398A8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439116  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439119  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_4391B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466755h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439946  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439190  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439193  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_439229  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466780h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4399AE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439206  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439209  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_4392A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46672Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43997A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439280  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439283  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
test byte ptr [esp+98h+var_88] 4 +
mov edx [ebp+8] +
jnz loc_43A297  +
mov edi [edx+4] +
mov ecx edi +
mov edi [edx] +
test ecx ecx +
jz loc_437DB4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_43934F  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A3B1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_439330  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_439333  +
mov ecx [ebx+114h] +
test ecx ecx +
mov eax ecx +
jz loc_4393C4  +
mov edx [eax+8] +
test edx edx +
jnz loc_4393BE  +
mov edx [eax+4] +
mov edx [edx] +
lea esi [edx-19h] +
cmp esi 2 +
ja loc_4393C4  +
cmp edi edx +
jz loc_43A871  +
mov eax [eax] +
test eax eax +
jnz loc_4393A2  +
mov esi ebp +
xor edi edi +
jmp loc_437D57  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_437DB4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_43940F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439FF3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_4393F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_4393F3  +
mov esi ebp +
xor edi edi +
mov ecx [ebx+114h] +
jmp loc_437D57  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov [esp+98h+var_6C] eax +
mov eax [ebp+8] +
test eax eax +
mov [esp+98h+var_7C] eax +
jz loc_43AE17  +
mov eax [ebx+110h] +
xor ecx ecx +
mov edi [esp+98h+var_7C] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_70] ebp +
mov ebp ecx +
mov [esp+98h+var_78] eax +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov esi edx +
xor eax eax +
mov [esp+98h+var_80] ebx +
mov [esi] eax +
mov eax [esp+98h+var_80] +
add ebp 1 +
mov ebx [edi] +
mov [esi+4] edi +
mov dword ptr [esi+8] 0 +
mov [eax+114h] esi +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_7C] esi +
mov [esi+0Ch] eax +
mov eax ebx +
call sub_4374A0  +
test eax eax +
jz loc_43B30A  +
mov edi [edi+8] +
test edi edi +
jz loc_43AE0B  +
add esi 10h +
cmp ebp 4 +
jz loc_43A04D  +
mov eax [esp+98h+var_7C] +
jmp loc_4394B4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_437CB0  +
and edi 4 +
jnz loc_439825  +
mov eax [ebx+100h] +
mov esi offset asc_466679 +
jmp loc_43954F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 46667Bh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43984F  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43952C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_43952F  +
test byte ptr [esp+98h+var_88] 4 +
jnz loc_43AAE0  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_437DB4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_4395DF  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43A06B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_4395C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_4395C3  +
mov ecx [ebx+11Ch] +
test ecx ecx +
jz loc_43A5C9  +
mov eax [ebx+100h] +
mov esi offset aAuto_0 +
jmp loc_439664  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46669Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43A07B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439641  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_439644  +
test byte ptr [esp+98h+var_88] 4 +
mov esi [ebx+144h] +
mov edi [ebx+114h] +
mov [ebx+144h] ebp +
mov dword ptr [ebx+114h] 0 +
mov ecx [ebp+8] +
jz loc_4396E0  +
mov eax [ecx] +
test eax eax +
jnz loc_4396E0  +
cmp dword ptr [ecx+0Ch] 6 +
jz loc_43B090  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_43AF4B  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43AD39  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+0Ch] +
call sub_437CB0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_43AF3A  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43AD07  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov [ebx+144h] esi +
mov eax [ebp+4] +
mov [ebx+114h] edi +
mov esi [esp+98h+var_64] +
jmp loc_437DB4  +
mov edi [ebp+8] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_43A151  +
mov esi offset aThis +
jmp loc_4397B0  +
lea edx [eax+1] +
add esi 1 +
cmp esi 46687Dh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A1BD  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43978D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_439790  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
add edi 1 +
cmp edi [esp+98h+var_84] +
jnz loc_437EA7  +
mov ebp [esp+98h+var_78] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43AFD9  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov esi [ebp+0Ch] +
cmp dword ptr [esi] 46h +
jz loc_43AC30  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
jmp loc_4398E6  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4667B6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4399C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4398C3  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_4398C6  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aIn +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
jmp loc_439A50  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4666D0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439A96  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439A31  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_439A34  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43A9C9  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [ebp+4] +
jmp loc_437DB4  +
add dword ptr [ebx+11Ch] 1 +
mov eax ebx +
mov ecx [ebp+8] +
mov esi offset asc_4668C9 +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
sub dword ptr [ebx+11Ch] 1 +
jmp loc_439BD7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4668CBh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_439E2F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439BB4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_439BB7  +
mov eax [ebx+144h] +
test eax eax +
jz loc_439C3F  +
mov edx [ebx+110h] +
mov [esp+98h+var_54] eax +
mov [esp+98h+var_58] edx +
lea edx [esp+98h+var_58] +
mov [ebx+110h] edx +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 4 +
jz loc_43A88B  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_437CB0  +
mov edi [ebx+144h] +
test edi edi +
jz loc_439C6A  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [edi+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_43A668  +
mov edi [esp+98h+var_84] +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
movzx eax al +
sub edi eax +
jz loc_43B16C  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_439CE1  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43A02F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_439CC2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_439CC5  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_466670 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_439D65  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_439FB5  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_439DCF  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_439FBB  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_439DB0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_439DB3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+0Ch] +
mov [esp+98h+var_94] offset unk_466670 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_439E53  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_439F83  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_439EBF  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_439F89  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_439EA0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_439EA3  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43AD6B  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43A997  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43AD9D  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43A965  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov edi [ebx+124h] +
call sub_437CB0  +
cmp edi [ebx+124h] +
jz loc_43A696  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_43B810  +
jmp loc_437D95  +
mov ebx [esp+98h+var_80] +
mov esi [esp+98h+var_74] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_466670 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov edi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_43A0A1  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+98h+var_84] +
jz loc_43A145  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
lea edi [esi+edx] +
jmp loc_43A0FF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43A145  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43A0E4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_43A0E7  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi offset aParm +
jmp loc_43A177  +
lea edx [eax+1] +
add esi 1 +
cmp esi 466884h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A1C9  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43A158  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_43A15B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edi +
mov edi esi +
mov [esp+98h+var_94] offset unk_466670 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_43A261  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_43A21B  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A261  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43A200  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_43A203  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43B013  +
mov eax [ebx+100h] +
mov esi [esp+98h+var_64] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edi [edx+0Ch] +
mov ecx edi +
mov edi [edx+8] +
test ecx ecx +
jz loc_437DB4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_43A2D6  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A3A1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_43A2B7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_43A2BA  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi offset a_fract +
jmp loc_43A34F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 46680Eh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A395  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43A330  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_43A333  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [eax+0Ch] +
cmp dword ptr [eax] 3Bh +
jnz loc_43880F  +
mov ecx [ebp+8] +
lea eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_43CBD0  +
test eax eax +
jnz loc_43AFCD  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov [esp+98h+var_80] ecx +
mov esi [eax+8] +
mov [esp+98h+var_84] esi +
mov esi [eax+0Ch] +
mov [esp+98h+var_94] offset aQu +
mov eax [edi+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [esp+98h+var_80] +
test eax eax +
jz loc_43B596  +
mov edx offset aNew +
mov eax ebx +
mov [esp+98h+var_80] ecx +
call sub_437AB0  +
mov ecx [esp+98h+var_80] +
cmp dword ptr [ecx+8] 0 +
jz loc_43A455  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_43CAE0  +
mov edx 20h +
mov eax ebx +
call sub_4373E0  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
test esi esi +
jz loc_43B7EC  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_43CAE0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_43AF5C  +
mov edx [esp+98h+var_88] +
lea eax [ebp+0Ch] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_43CBD0  +
test eax eax +
jnz loc_43AFCD  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_43B43B  +
mov [esp+98h+var_94] offset aCl +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [ebp+0Ch] +
test eax eax +
jnz loc_43A4E4  +
mov eax [ecx+8] +
cmp dword ptr [eax] 3 +
jz loc_43B633  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CAE0  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov edi [eax] +
mov [esp+98h+var_94] offset aIx +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jz loc_43B508  +
mov [esp+98h+var_94] offset aCl +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jnz loc_43B5E0  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_43CAE0  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_43B4D7  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_43A583  +
lea edx [eax+1] +
add esi 1 +
cmp esi 466800h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4386E4  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43A560  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_43A563  +
lea edx [ebp+8] +
mov eax ebx +
call sub_437A20  +
test eax eax +
jz loc_43B47B  +
cmp dword ptr [eax] 2Fh +
jz loc_43B468  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [ebp+4] +
mov [ebx+110h] esi +
mov esi [esp+98h+var_64] +
jmp loc_437DB4  +
mov esi [esp+98h+var_88] +
lea ecx [ebp+0Ch] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_43C740  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_43B536  +
mov edx esi +
mov eax ebx +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebp+8] +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jmp loc_437E92  +
mov eax [ebx+100h] +
jmp loc_438725  +
cmp edx 0FFh +
jz loc_43B49D  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [edi+4] +
jmp loc_439CA1  +
cmp [ebx+100h] esi +
jnz loc_43A023  +
sub esi 2 +
mov eax [ebp+4] +
mov [ebx+100h] esi +
mov esi [esp+98h+var_64] +
jmp loc_437DB4  +
mov eax [esp+98h+var_7C] +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_94] offset aAd +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_80] eax +
call strcmp  +
test eax eax +
jnz loc_43A6E5  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 3 +
jz loc_43B574  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 38h +
jz loc_43B60A  +
mov esi [esp+98h+var_80] +
test esi esi +
jz loc_43A722  +
mov edi offset aSz +
mov ecx 3 +
cmps   +
jz loc_43A7A7  +
mov esi [esp+98h+var_80] +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_43B0DA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CA30  +
cmp [esp+98h+var_80] 0 +
jz loc_43889D  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aGs +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jz loc_43B151  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aSt +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jnz loc_43889D  +
mov edx 28h +
mov eax ebx +
call sub_4373E0  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax ebx +
mov edx 29h +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [esp+98h+var_84] +
mov eax ebx +
call sub_437A50  +
xor edx edx +
test eax eax +
jnz loc_43A7D1  +
jmp loc_43A7D6  +
mov esi [eax+8] +
test esi esi +
jz loc_43A7D6  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_43A7D6  +
cmp dword ptr [eax] 2Fh +
jz loc_43A7C0  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edx +
mov edi esi +
mov [esp+98h+var_94] offset unk_466670 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_43A9FB  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_43A830  +
add esi 1 +
lea edx [eax+1] +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_43A9FB  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_43A811  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov ecx [esp+98h+var_88] +
add dword ptr [ebx+124h] 1 +
jmp loc_43A811  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
cmp dword ptr [ebx+144h] 0 +
jz loc_43A8AC  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_43B2DB  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43B2A1  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [ebp+8] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_437CB0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_43B272  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43B238  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
jmp loc_439C6A  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_438665  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_439FC7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_439F63  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_439B6B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ebp [esp+98h+var_78] +
mov dword ptr [ebx+118h] 1 +
jmp loc_4389E9  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_437CB0  +
mov eax [esp+98h+var_58] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jnz loc_43B491  +
mov edx 20h +
mov eax ebx +
call sub_4373E0  +
jmp loc_438A11  +
mov ecx [ebp+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_438A6C  +
cmp edi 3Dh +
jz loc_43B738  +
mov edx [esp+98h+var_88] +
mov eax ebx +
sub esi 2 +
call sub_437CB0  +
cmp esi 4 +
ja loc_43B72C  +
jmp ds:off_466A28[esi*4]  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_438617  +
mov edi [ebp+8] +
mov ecx [ebp+0Ch] +
add ecx edi +
cmp edi ecx +
jnb loc_437DB4  +
mov [esp+98h+var_88] ebp +
mov ebp ecx +
jmp loc_43AB15  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add edi 1 +
cmp ebp edi +
jbe loc_43ABB4  +
mov eax ebp +
sub eax edi +
cmp eax 3 +
movzx eax byte ptr [edi] +
jle loc_43AB25  +
cmp al 5Fh +
jz loc_43AB6A  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jnz loc_43AAF8  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
xor edx edx +
mov eax [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_43AAF8  +
cmp byte ptr [edi+1] 5Fh +
jnz loc_43AB25  +
cmp byte ptr [edi+2] 55h +
jnz loc_43AB25  +
lea esi [edi+3] +
cmp ebp esi +
jbe loc_43AB25  +
xor ecx ecx +
jmp loc_43AB97  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add esi 1 +
add ecx eax +
cmp esi ebp +
jz loc_43B7F8  +
movzx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_43AB81  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_43AE26  +
movsx eax dl +
sub eax 37h +
jmp loc_43AB87  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_438ED9  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4385E5  +
mov edx offset aDefaultArg +
mov eax ebx +
call sub_437AB0  +
mov eax [esi+0Ch] +
lea edx [eax+1] +
mov eax ebx +
call sub_437B40  +
mov edx offset asc_46668A +
mov eax ebx +
call sub_437AB0  +
mov esi [esi+8] +
jmp loc_43985B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov esi [esp+98h+var_64] +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4383E8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_438AB5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_438A7C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_439749  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_439709  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_439F24  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_439F95  +
mov eax [ebx+114h] +
mov ecx [esi+8] +
mov esi ebp +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
test ecx ecx +
mov [esp+98h+var_4C] eax +
jnz loc_437D7E  +
jmp loc_437D7B  +
mov esi [esp+98h+var_74] +
mov ebx [esp+98h+var_80] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
jmp loc_43A063  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_43B203  +
movsx eax dl +
sub eax 57h +
jmp loc_43AB87  +
mov eax [ebx+130h] +
mov ecx [ebx+12Ch] +
test eax eax +
mov [esp+98h+var_80] eax +
jle loc_43AE77  +
cmp esi [ecx] +
jz loc_43B178  +
lea eax [ecx+8] +
jmp loc_43AE6E  +
mov ecx eax +
add eax 8 +
cmp esi [eax-8] +
jz loc_43B178  +
add edi 1 +
cmp edi [esp+98h+var_80] +
jnz loc_43AE60  +
mov eax [ebx+130h] +
cmp eax [ebx+134h] +
jge loc_43B790  +
mov edx [ebx+12Ch] +
lea edi [edx+eax*8] +
add eax 1 +
mov [ebx+130h] eax +
add edi 4 +
mov eax [ebx+110h] +
mov [edi-4] esi +
jmp loc_43AED9  +
mov ecx [ebx+13Ch] +
cmp ecx [ebx+140h] +
jge loc_43B790  +
mov edx [ebx+138h] +
lea edx [edx+ecx*8] +
add ecx 1 +
mov [ebx+13Ch] ecx +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov [edi] edx +
mov eax [eax] +
mov edi edx +
test eax eax +
jnz loc_43AEA9  +
mov dword ptr [edi] 0 +
cmp dword ptr [ebx+118h] 0 +
jz loc_43B195  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_438711  +
mov edx 20h +
mov eax ebx +
call sub_4373E0  +
jmp loc_439738  +
mov edx 20h +
mov eax ebx +
call sub_4373E0  +
jmp loc_4396F8  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_43AF72  +
sub eax 72h +
cmp al 1 +
ja loc_43A497  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_43CA30  +
mov edx 3Ch +
mov eax ebx +
call sub_4373E0  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_437CB0  +
mov edx offset asc_4668E4 +
mov eax ebx +
call sub_437AB0  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_437CB0  +
mov eax ebx +
mov edx 29h +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_439835  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43A271  +
mov edx 5Bh +
mov eax ebx +
call sub_4373E0  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax ebx +
mov edx 5Dh +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx 2Dh +
mov eax ebx +
call sub_4373E0  +
jmp loc_438AD3  +
mov [esp+98h+var_90] 6 +
mov [esp+98h+var_94] offset aJarray +
mov eax [ecx+8] +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_98] eax +
call strncmp  +
mov ecx [esp+98h+var_84] +
test eax eax +
jnz loc_4396E0  +
mov edx [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+0Ch] +
call sub_437CB0  +
mov edx offset asc_466695 +
mov eax ebx +
call sub_437AB0  +
jmp loc_43975D  +
mov edi [esp+98h+var_84] +
cmp dword ptr [edi] 2Fh +
jnz loc_43B13A  +
mov eax [edi+8] +
xor esi esi +
test eax eax +
jnz loc_43B106  +
jmp loc_43B13C  +
add esi 1 +
mov edi [edi+0Ch] +
test edi edi +
jz loc_43B13C  +
cmp dword ptr [edi] 2Fh +
jnz loc_43B13C  +
mov eax [edi+8] +
test eax eax +
jz loc_43B13C  +
cmp dword ptr [eax] 4Ah +
jnz loc_43B0F0  +
mov edx [eax+8] +
mov eax ebx +
call sub_437A50  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_43B131  +
jmp loc_43B136  +
mov ecx [edx+8] +
test ecx ecx +
jz loc_43B136  +
mov edx [edx+0Ch] +
add eax 1 +
test edx edx +
jz loc_43B136  +
cmp dword ptr [edx] 2Fh +
jz loc_43B120  +
add esi eax +
jmp loc_43B0F3  +
xor esi esi +
mov edx esi +
mov eax ebx +
call sub_437B40  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax edx +
jmp loc_43B187  +
mov eax [eax+4] +
test eax eax +
jz loc_43B1E9  +
mov edi [eax] +
cmp esi edi +
jz loc_43B195  +
cmp ebp edi +
jnz loc_43B180  +
cmp eax edx +
jz loc_43B180  +
xor edi edi +
lea edx [esi+8] +
mov eax ebx +
call sub_437A20  +
test eax eax +
mov esi eax +
jz loc_43B1C5  +
cmp dword ptr [eax] 2Fh +
jnz loc_437D3A  +
mov edx [ebx+120h] +
call sub_437460  +
test eax eax +
mov esi eax +
jnz loc_437D3A  +
test edi edi +
jz loc_43B1D3  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [ebx+110h] +
mov edi 1 +
mov [esp+98h+var_84] eax +
mov eax [ecx+4] +
mov [ebx+110h] eax +
jmp loc_43B197  +
cmp ebp esi +
mov eax 5Fh +
jbe loc_43AB25  +
cmp dl 5Fh +
jnz loc_43AB25  +
cmp ecx 0FFh +
mov eax edx +
ja loc_43AB25  +
movsx edx cl +
mov eax ebx +
call sub_4373E0  +
mov edi esi +
jmp loc_43AB0A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43A911  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43B692  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_43A901  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43A8C9  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_43B658  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_43A8B9  +
mov [esp+98h+var_7C] edi +
mov edi ebx +
mov esi [esp+98h+var_74] +
cmp edi 4 +
mov ebx [esp+98h+var_80] +
mov [esp+98h+var_74] ebp +
mov ebp [esp+98h+var_70] +
jz loc_43B41C  +
cmp edi 2 +
jnz loc_43B3A7  +
mov eax [esp+98h+var_7C] +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 46h +
jz loc_43B74C  +
mov eax [esp+98h+var_74] +
lea edi [eax-1] +
shl edi 4 +
add edi [esp+98h+var_84] +
jmp loc_43B394  +
cmp [esp+98h+var_74] 4 +
jz loc_43AE17  +
mov eax [edi+4] +
mov ecx [esp+98h+var_78] +
mov [edi+10h] edi +
mov [edi+4] edx +
mov [edi+14h] eax +
mov eax [edi+8] +
add [esp+98h+var_74] 1 +
mov dword ptr [edi+8] 0 +
mov [edi+18h] eax +
mov eax [edi+0Ch] +
mov [edi+0Ch] ecx +
mov [edi+1Ch] eax +
lea eax [edi+10h] +
mov [ebx+114h] eax +
mov edx [edx+8] +
mov edi eax +
mov eax [edx] +
mov [esp+98h+var_80] edx +
call sub_4374A0  +
mov edx [esp+98h+var_80] +
test eax eax +
jnz loc_43B350  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax] 4 +
jnz loc_43B3C8  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_74] +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
cmp dword ptr [edi] 0 +
jz loc_43B3ED  +
sub edi 10h +
test esi esi +
jz loc_43B409  +
sub esi 1 +
jmp loc_43B3DC  +
mov eax ebx +
mov edx 20h +
call sub_4373E0  +
mov ecx [edi-4] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43B810  +
jmp loc_43B3E1  +
mov eax [esp+98h+var_6C] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
jmp loc_43A063  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] eax +
jmp loc_43B3A7  +
mov edx [eax+8] +
cmp dword ptr [edx+8] 1 +
jnz loc_43A4BC  +
mov edx [edx+4] +
cmp byte ptr [edx] 3Eh +
jnz loc_43A4BC  +
mov eax ebx +
mov edx 28h +
call sub_4373E0  +
mov eax [ebp+8] +
jmp loc_43A4BC  +
mov edx [ebx+120h] +
call sub_437460  +
test eax eax +
jnz loc_43A5E4  +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43A674  +
mov eax [eax+8] +
cmp dword ptr [eax+8] 1 +
jnz loc_43A547  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_43A547  +
mov eax ebx +
mov edx 29h +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax ebx +
mov edx 5Bh +
call sub_4373E0  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_437CB0  +
mov edx 5Dh +
mov eax ebx +
call sub_4373E0  +
jmp loc_43A53B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CAE0  +
mov eax ebx +
mov edx offset a___ +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax [eax+8] +
cmp dword ptr [eax] 1 +
jnz loc_43A6F2  +
mov edi [esp+98h+var_84] +
mov edx [edi+0Ch] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_84] eax +
jmp loc_43A6F2  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_43CAE0  +
mov ecx edi +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_43CA30  +
mov ecx [esp+98h+var_84] +
mov edx edi +
mov eax ebx +
call sub_43CAE0  +
mov edx offset asc_46683D +
mov eax ebx +
call sub_437AB0  +
mov ecx esi +
mov eax ebx +
mov edx edi +
call sub_43CAE0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_43CA30  +
jmp loc_43A52A  +
mov eax ebx +
mov edx offset aLl +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edi [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
mov edx edi +
call sub_43CAE0  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_43CA30  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 29h +
jz loc_43B645  +
mov dword ptr [ebx+118h] 1 +
mov ecx [eax+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_43CAE0  +
jmp loc_43A4F2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43B2EB  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_43B282  +
mov eax ebx +
mov edx offset aUl +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax ebx +
mov edx 6Ch +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax ebx +
mov edx 75h +
call sub_4373E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax ebx +
mov edx offset aUll +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov edx 2Dh +
mov eax ebx +
call sub_4373E0  +
mov ecx [ebp+0Ch] +
jmp loc_43AA90  +
mov edx [edx+8] +
test edx edx +
jz loc_43AE17  +
jmp loc_43B33E  +
cmp edi 3Ch +
nop   +
jnz loc_438A6C  +
mov eax [eax+8] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_43B79F  +
cmp al 31h +
jnz loc_438A6C  +
mov eax ebx +
mov edx offset aTrue +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov dword ptr [ebx+118h] 1 +
jmp loc_43AEE3  +
mov eax ebx +
mov edx offset aFalse +
call sub_437AB0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_437CB0  +
mov eax [esp+98h+var_7C] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_4389D2  +
jmp loc_4389E9  +
mov [esp+98h+var_80] 0 +
jmp loc_43A722  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_437DB4  +
mov eax 5Fh +
jmp loc_43AB25  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 4Ch +
ja loc_43B8B3  +
jmp ds:off_466AA0[eax*4]  +
mov eax [ebx+100h] +
mov esi offset aThrow +
jmp loc_43B865  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 466A79h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BED7  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_43B840  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43B843  +
mov ecx [ecx+8] +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_437CB0  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_43B8F5  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A45h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43B8D2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43B8D5  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_43B973  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A4Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43B950  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43B953  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_43B9F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A56h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43B9D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43B9D3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43BF84  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_43BB06  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43BFBB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_43BB36  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43BF45  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+0Ch] +
jmp loc_43B8B3  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_43BB25  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C0E5  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_43BB25  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C030  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset asc_466A7A +
jmp loc_43BB5F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A7Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43BB40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43BB43  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_43BBD5  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A85h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43BBB2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43BBB5  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_43BC53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A90h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43BC30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43BC33  +
cmp byte ptr [ebx+104h] 28h +
jz loc_43BCCE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C0A6  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax ebx +
mov esi offset asc_466A91 +
mov edx [esp+2Ch+var_14] +
call sub_437CB0  +
mov eax [ebx+100h] +
jmp loc_43BD13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A94h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43BCF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43BCF3  +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_43BD95  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 466A9Fh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BF40  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_43BD70  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43BD73  +
mov eax [ebx+100h] +
mov esi offset aTransaction_sa +
jmp loc_43BE13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466A68h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BB25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43BDF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_43BDF3  +
mov eax [ebx+100h] +
mov esi offset aNoexcept +
jmp loc_43BE91  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 466A72h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43BED7  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_43BE70  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43BE73  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_43BB25  +
cmp edi 0FFh +
jz loc_43C067  +
lea eax [edi+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edi] 28h +
mov byte ptr [ebx+104h] 28h +
mov ecx [ecx+0Ch] +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43BFF2  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ecx+8] +
jmp loc_43BF05  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43BAB4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43BA55  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43BA85  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43BF24  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43BB14  +
mov esi [ebx+10Ch] +
xor edi edi +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43BEF1  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_43BCBD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43BAEB  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_34] edx +
jz loc_43C1AD  +
mov edi [eax+118h] +
mov esi eax +
test edi edi +
jz loc_43C14A  +
jmp loc_43C1AD  +
mov ecx [esi+118h] +
test ecx ecx +
jnz loc_43C1AD  +
mov edx [ebx+8] +
test edx edx +
jnz loc_43C1A7  +
mov eax [esp+4Ch+arg_0] +
mov ecx [ebx+4] +
test eax eax +
mov ebp [ecx] +
jnz loc_43C171  +
mov eax ebp +
mov [esp+4Ch+var_38] ecx +
call sub_4374A0  +
mov ecx [esp+4Ch+var_38] +
test eax eax +
jnz loc_43C1A7  +
mov eax [ebx+0Ch] +
cmp ebp 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] eax +
jz loc_43C1B5  +
cmp ebp 2Ah +
jz loc_43C1D6  +
cmp ebp 2 +
jz loc_43C1F7  +
mov edx [esp+4Ch+var_34] +
mov eax esi +
call sub_43B810  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43C140  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 0Ch +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_43C740  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_43C4C0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_34] +
mov ecx [ecx+8] +
call sub_437CB0  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_34] 4 +
mov [esi+114h] ebp +
jnz loc_43C291  +
mov ebp offset asc_466679 +
mov [esp+4Ch+var_38] ebx +
jmp loc_43C252  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 46667Bh +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_43C2AE  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_43C233  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_43C236  +
cmp eax 0FFh +
jz loc_43C2EC  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_43C2B2  +
mov ebx [esp+4Ch+var_38] +
mov eax [ebx+4] +
mov ebp [eax+0Ch] +
mov eax [ebp+0] +
cmp eax 46h +
jnz loc_43C2C8  +
jmp loc_43C323  +
mov ebp [ebp+8] +
mov eax [ebp+0] +
call sub_4374A0  +
test eax eax +
jnz loc_43C2C2  +
mov edx [esp+4Ch+var_34] +
mov ecx ebp +
mov eax esi +
call sub_437CB0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_43C29B  +
mov ecx offset aDefaultArg +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_43C351  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 466689h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_43C397  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_43C332  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_43C335  +
mov eax [ebp+0Ch] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset unk_466670 +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_43C4AD  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_38] edi +
mov edi eax +
jmp loc_43C3F0  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_43C437  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_43C3D5  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+124h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_43C3D8  +
mov edi [esp+4Ch+var_38] +
mov ecx offset asc_46668A +
mov ebx ecx +
jmp loc_43C467  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 46668Dh +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_43C2C2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_43C444  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_43C447  +
mov eax [esi+100h] +
jmp loc_43C43B  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_43C4FA  +
mov edx [eax+8] +
test edx edx +
jz loc_43C580  +
mov eax [eax] +
test eax eax +
jnz loc_43C4D5  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_43C120  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C640  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_43C6E7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_43C555  +
mov eax ebx +
mov edx edi +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C6B0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_43C720  +
mov eax [ebx+100h] +
mov esi offset unk_466BD4 +
jmp loc_43C5BF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_466BD6 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43C605  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43C5A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_43C5A3  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_43C120  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43C677  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_43C500  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43C50E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43C62A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43C563  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43C52E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_43C120  +
mov edx [ebx+100h] +
jmp loc_43C51F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_43C820  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_43C820  +
mov eax esi +
mov edx 1 +
jmp loc_43C78E  +
and ch 0Eh +
jnz loc_43C8C0  +
mov eax [eax] +
test eax eax +
jz loc_43C820  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_43C820  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_43C779  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_43C770  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_43C8D5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43C9F2  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_43C8E6  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43C8E9  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_43C120  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_43C94D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_43C881  +
mov eax ebx +
mov edx edi +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C984  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_43C120  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_43C7B0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C7E9  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_43C120  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43C9BB  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_43C854  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43C857  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43C88F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43C930  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_43C7CD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_43CA50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_437CB0  +
mov eax [ecx+8] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_43CAD0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_43CA82  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43CAD0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_43CA67  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_43CA6A  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_43CAF3  +
cmp eax 30h +
jnz loc_43CB00  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
jmp sub_437CB0  +
cmp eax 6 +
jz loc_43CAF3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43CB88  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_437CB0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43CB54  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43CB3D  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+24h+var_8] ecx +
mov [esp+24h+var_C] edx +
mov [esp+24h+var_1C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_24] ebx +
call eax  +
xor eax eax +
mov ecx [esp+24h+var_8] +
add dword ptr [ebx+124h] 1 +
mov edx [esp+24h+var_C] +
jmp loc_43CB15  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax] 66h +
jz loc_43CBF0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [esp+2Ch+arg_0] +
xor ebp ebp +
mov edx [edx] +
mov esi [edx+8] +
mov [esp+2Ch+var_18] esi +
mov esi [edx+0Ch] +
cmp dword ptr [esi] 3Bh +
jz loc_43CDD4  +
mov ecx [ebx+120h] +
mov dword ptr [ebx+120h] 0FFFFFFFFh +
movzx eax byte ptr [eax+1] +
mov [esp+2Ch+var_14] ecx +
cmp al 52h +
jz loc_43CDE4  +
jle loc_43CDE0  +
cmp al 6Ch +
jz loc_43CD00  +
cmp al 72h +
lea esi [esi+0] +
jnz loc_43CDBD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43CF27  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a____0 +
mov byte ptr [ebx+104h] 28h +
call sub_43CAE0  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_43CA30  +
mov eax [ebx+100h] +
jmp loc_43CCB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466BE0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43CDBD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43CC90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_18] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_18] +
jmp loc_43CC93  +
mov eax [ebx+100h] +
mov ebp offset a____1 +
jmp loc_43CD33  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 466BDBh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43CEA0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_43CD10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_43CD13  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_43CA30  +
mov ecx ebp +
mov eax ebx +
mov edx edi +
call sub_43CAE0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43CEB4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [esp+2Ch+var_14] +
mov [ebx+120h] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+0Ch] +
mov esi [esi+8] +
jmp loc_43CC0D  +
cmp al 4Ch +
jnz loc_43CDBD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_43CEF0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a___ +
mov byte ptr [ebx+104h] 28h +
call sub_43CAE0  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_43CA30  +
mov eax [ebx+100h] +
jmp loc_43CE53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 466878h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_43CD80  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_43CE30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_43CE33  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_43CA30  +
mov ecx esi +
jmp loc_43CD8F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43CDAC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43CDF8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_43CC5A  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_43CFA0  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_43CFA0  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_43CFA0  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 0 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_43CFE8  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_43CFE8  +
test edx edx +
jz loc_43CFE8  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 32h +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_43D030  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_43D030  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_43D032  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 7 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_43D080  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_43D080  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_43D082  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 8 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [ebx+0Ch] +
mov eax esi +
call sub_437970  +
test eax eax +
jnz loc_43D110  +
movsx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 4Ah +
ja loc_43D105  +
movzx eax al +
jmp ds:off_466BF8[eax*4]  +
mov esi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_43E730  +
mov edx 42h +
mov [ebx+34h] esi +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_43D105  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_43D105  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_43D1A8  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_43EDA0  +
test eax eax +
mov esi eax +
jz loc_43D105  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_43D170  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_43D105  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_43D180  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_43D105  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_43D105  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_43DFC0  +
mov edx eax +
mov [esi] eax +
jmp loc_43D137  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+8] +
mov [edx+8] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_43D145  +
mov eax ebx +
call sub_43F0A0  +
mov [esp+2Ch+var_10] eax +
nop   +
test eax eax +
jz loc_43D105  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_43D105  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_4375F0  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
mov ecx [ebx+14h] +
cmp ecx [ebx+18h] +
jl loc_43D786  +
mov edx large ds:8 +
xor eax eax +
mov edx [edx+4] +
add esi 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] esi +
jmp loc_43D107  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_4375F0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_43D830  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
movzx eax byte ptr [esi+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_43D27C  +
cmp al 5Fh +
jz loc_43D27C  +
sub eax 41h +
cmp al 19h +
ja loc_43D7EA  +
xor edx edx +
mov eax ebx +
call sub_437710  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_43D107  +
mov eax ebx +
call sub_43F070  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_437280  +
nop   +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
mov eax ebx +
call sub_4375A0  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_43D1A0  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_43D855  +
test eax eax +
jz loc_43D105  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_43D105  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_43F070  +
jmp loc_43D29C  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
test eax eax +
mov esi eax +
jz loc_43D4CD  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
test eax eax +
jz loc_43D4CD  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_437280  +
jmp loc_43D2B0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
mov eax ebx +
call sub_43DFC0  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
lea eax [esi+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [esi+1] 0 +
jz loc_43D105  +
lea eax [esi+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [esi+1] +
sub eax 46h +
cmp al 30h +
ja loc_43D105  +
movzx eax al +
jmp ds:off_466D24[eax*4]  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
lea edx [esi+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [esi+1] +
cmp al 5Fh +
jz loc_43D7B7  +
sub eax 30h +
cmp al 9 +
ja loc_43D80B  +
add esi 2 +
mov ecx esi +
mov [ebx+0Ch] esi +
movzx eax byte ptr [ecx] +
add esi 1 +
sub eax 30h +
cmp al 9 +
jbe loc_43D4A0  +
sub ecx edx +
mov eax ebx +
call sub_4372E0  +
test eax eax +
mov esi eax +
jz loc_43D4CD  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_43D7B9  +
xor eax eax +
jmp loc_43D2B0  +
cmp byte ptr [esi+2] 5Fh +
jz loc_43D8C1  +
mov eax ebx +
call sub_437520  +
mov esi eax +
test esi esi +
jz loc_43D4CD  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_43D2B0  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_437280  +
jmp loc_43D2B0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4675D8 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4675D8 +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_43D107  +
mov ecx 0Eh +
mov edx offset aDecltypeAuto +
mov eax ebx +
call sub_4372E0  +
jmp loc_43D107  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4675C4 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4675C4 +
jmp loc_43D550  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_467588 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_467588 +
jmp loc_43D550  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4675B0 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4675B0 +
jmp loc_43D550  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_46759C +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_46759C +
jmp loc_43D550  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_467600 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_467600 +
jmp loc_43D550  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43D7DD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4675EC +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4675EC +
jmp loc_43D550  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov edx 4Ah +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
jmp loc_43D1A0  +
mov eax [ebx+14h] +
xor edi edi +
cmp eax [ebx+18h] +
jge loc_43D703  +
mov edi eax +
add eax 1 +
shl edi 4 +
add edi [ebx+10h] +
mov dword ptr [edi+4] 0 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_10] edi +
mov dword ptr [edi] 2Ch +
movzx eax byte ptr [esi+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [edi+0Ch] ax +
jnz loc_43D8E2  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov [edi+8] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+8] +
test eax eax +
jz loc_43D105  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_43D763  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Eh] dx +
jmp loc_43D107  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_4372E0  +
jmp loc_43D107  +
lea eax [edx+edx*4-1E5h] +
lea edx ds:467380h[eax*4] +
mov eax ecx +
shl eax 4 +
add ecx 1 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] ecx +
mov dword ptr [eax] 27h +
mov [eax+8] edx +
jmp loc_43D20C  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_437280  +
jmp loc_43D2B0  +
mov edx large ds:8 +
xor eax eax +
jmp loc_43D550  +
mov eax ebx +
call sub_43F0A0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_43D105  +
cmp dword ptr [eax] 18h +
jnz loc_43D1A8  +
jmp loc_43D107  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_43E730  +
mov [ebx+34h] edi +
test eax eax +
mov esi eax +
jnz loc_43D4C1  +
xor eax eax +
jmp loc_43D2B0  +
mov eax ebx +
call sub_43F070  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_437280  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_43D23F  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_43F070  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_43D898  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_43D1A0  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_43D105  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_43D105  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_43D29C  +
add esi 3 +
mov edi [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
call sub_43E730  +
mov [ebx+34h] edi +
mov esi eax +
jmp loc_43D4E7  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
mov edi [esp+2Ch+var_10] +
jmp loc_43D729  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_43D970  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_43DA99  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+20h+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_43D9D0  +
movzx eax [esp+20h+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_43D977  +
mov eax esi +
call sub_4375F0  +
mov ecx [esi+14h] +
cmp ecx [esi+18h] +
jl loc_43DA61  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov [esp+20h+var_11] 0 +
mov eax 43h +
xor edx edx +
mov [esp+20h+var_18] eax +
jmp loc_43D990  +
jge loc_43D9C8  +
mov [esp+20h+var_18] ebx +
cmp edx [esp+20h+var_18] +
jz loc_43D960  +
mov ecx [esp+20h+var_18] +
mov eax edi +
sub ecx edx +
mov ebx ecx +
shr ebx 1Fh +
add ebx ecx +
sar ebx 1 +
add ebx edx +
mov ecx ebx +
shl ecx 4 +
lea ebp off_4677C0[ecx] +
mov ecx ds:off_4677C0[ecx] +
cmp al [ecx] +
jnz loc_43D984  +
movzx ecx byte ptr [ecx+1] +
cmp [esp+20h+var_11] cl +
jz loc_43DA30  +
cmp cl [esp+20h+var_11] +
jg loc_43D986  +
lea edx [ebx+1] +
jmp loc_43D98A  +
cmp [esp+20h+var_11] 76h +
jnz loc_43D977  +
mov eax edi +
cmp al 63h +
jnz loc_43D977  +
mov edx [esi+34h] +
xor eax eax +
mov ebx [esi+38h] +
mov [esp+20h+var_20] esi +
test edx edx +
setz al  +
mov [esi+38h] eax +
call sub_43D090  +
mov ecx [esi+38h] +
mov [esp+20h+var_20] 0 +
test ecx ecx +
mov ecx eax +
jnz loc_43DA20  +
mov edx 33h +
mov eax esi +
call sub_437280  +
mov [esi+38h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 34h +
mov eax esi +
call sub_437280  +
jmp loc_43DA11  +
mov edx [esi+14h] +
xor eax eax +
cmp edx [esi+18h] +
jge loc_43D962  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov dword ptr [eax] 31h +
mov [eax+8] ebp +
jmp loc_43D962  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [esi+10h] +
test eax eax +
mov dword ptr [edx+4] 0 +
mov [esi+14h] ecx +
jz loc_43D960  +
movsx ecx [esp+20h+var_11] +
mov [edx+0Ch] eax +
mov eax edx +
mov dword ptr [edx] 32h +
sub ecx 30h +
mov [edx+8] ecx +
jmp loc_43D962  +
mov [esp+20h+var_11] 0 +
jmp loc_43D932  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_43DB50  +
cmp dl 45h +
jz loc_43DB50  +
cmp dl 2Eh +
jz loc_43DB50  +
lea esi [esp+24h+var_8] +
jmp loc_43DB24  +
cmp byte ptr [eax+1] 45h +
jz loc_43DB34  +
mov [esp+24h+var_24] ebx +
call sub_43D090  +
test eax eax +
jz loc_43DB50  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_437280  +
test eax eax +
mov [esi] eax +
jz loc_43DB50  +
lea esi [eax+0Ch] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_43DB34  +
cmp dl 45h +
jz loc_43DB34  +
cmp dl 2Eh +
jz loc_43DB34  +
cmp dl 4Fh +
jz loc_43DAE0  +
cmp dl 52h +
jnz loc_43DAE6  +
cmp byte ptr [eax+1] 45h +
jnz loc_43DAE6  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_43DB50  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43DB58  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
cmp dword ptr [edx] 27h +
jnz loc_43DB43  +
mov edx [edx+8] +
cmp dword ptr [edx+10h] 9 +
jnz loc_43DB43  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+8] 0 +
jmp loc_43DB43  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_43DC72  +
lea ecx [eax-61h] +
cmp cl 19h +
ja loc_43DBE0  +
cmp al 6Fh +
jz loc_43DD70  +
mov eax ebx +
call sub_43D900  +
test eax eax +
mov ebp eax +
jz loc_43DBC1  +
cmp dword ptr [eax] 31h +
jz loc_43DD85  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jz loc_43DC8A  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax-43h] +
cmp cl 1 +
jbe loc_43DDD0  +
cmp al 4Ch +
jz loc_43DD40  +
cmp al 55h +
jnz loc_43DD62  +
movzx eax byte ptr [edx+1] +
cmp al 6Ch +
jz loc_43DCA0  +
cmp al 74h +
jnz loc_43DD62  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 74h +
jnz loc_43DBC7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_437560  +
test eax eax +
js loc_43DBC1  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43DC65  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 47h +
jl loc_43DD2A  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
xor ebp ebp +
jmp loc_43DBC7  +
mov eax ebx +
call sub_4375F0  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jnz loc_43DBD0  +
add esp 1Ch +
mov edx ebp +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4376C0  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 6Ch +
jnz loc_43DBC7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_43DAB0  +
test eax eax +
mov esi eax +
jz loc_43DBC1  +
mov edx [ebx+0Ch] +
movzx ecx byte ptr [edx] +
cmp cl 45h +
jnz loc_43DBC7  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_437560  +
test eax eax +
js loc_43DC65  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43DC65  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] esi +
mov [ebp+0Ch] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 45h +
jge loc_43DC65  +
mov edx [ebx+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [ebx+20h] eax +
jmp loc_43DBC1  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_4375F0  +
test eax eax +
mov ebp eax +
jz loc_43DD62  +
mov eax ebx +
call sub_4379B0  +
test eax eax +
jnz loc_43DBC1  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_43DBAB  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_43DBAB  +
mov edx [eax+8] +
mov edi offset unk_466DE8 +
mov ecx 3 +
mov eax [ebx+30h] +
add eax [edx+8] +
mov esi [edx] +
add eax 7 +
mov [ebx+30h] eax +
cmps   +
jnz loc_43DBC1  +
mov eax ebx +
call sub_4375F0  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
jmp loc_43DBC7  +
mov edi [ebx+2Ch] +
test edi edi +
jz loc_43DF1E  +
mov esi [edi] +
test esi esi +
jz loc_43DE84  +
cmp esi 18h +
mov ecx eax +
jz loc_43DE84  +
cmp cl 43h +
jz loc_43DE92  +
cmp cl 44h +
jnz loc_43DC6B  +
movzx eax byte ptr [edx+1] +
sub eax 30h +
cmp al 5 +
ja loc_43DE7D  +
movzx eax al +
jmp ds:off_466DEC[eax*4]  +
mov ecx 2 +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_43DF2C  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_43DF2C  +
mov dword ptr [ebp+0] 8 +
mov [ebp+8] ecx +
mov [ebp+0Ch] edi +
movzx ecx byte ptr [edx+2] +
jmp loc_43DBC7  +
mov ecx 1 +
jmp loc_43DE1C  +
mov ecx 5 +
jmp loc_43DE1C  +
mov ecx 4 +
jmp loc_43DE1C  +
mov ecx 3 +
jmp loc_43DE1C  +
xor ebp ebp +
jmp loc_43DBD0  +
mov eax [edi+0Ch] +
add [ebx+30h] eax +
movzx ecx byte ptr [edx] +
jmp loc_43DDF0  +
movzx eax byte ptr [edx+1] +
xor ecx ecx +
cmp al 49h +
jz loc_43DF35  +
sub eax 31h +
cmp al 4 +
ja loc_43DF4B  +
movzx eax al +
jmp ds:off_466E04[eax*4]  +
mov esi 2 +
add edx 2 +
test ecx ecx +
mov [ebx+0Ch] edx +
jz loc_43DECF  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edi [ebx+2Ch] +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_43DF25  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_43DF25  +
mov dword ptr [ebp+0] 7 +
mov [ebp+8] esi +
mov [ebp+0Ch] edi +
jmp loc_43DBC1  +
mov esi 1 +
jmp loc_43DEBA  +
mov esi 4 +
jmp loc_43DEBA  +
mov esi 3 +
jmp loc_43DEBA  +
mov esi 5 +
jmp loc_43DEBA  +
mov ecx eax +
jmp loc_43DDF0  +
xor ebp ebp +
jmp loc_43DBC1  +
xor ebp ebp +
nop   +
jmp loc_43DE58  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [edx+2] +
mov edx ecx +
mov ecx 1 +
jmp loc_43DEA0  +
movzx ecx byte ptr [edx] +
xor ebp ebp +
jmp loc_43DBC7  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_43DF97  +
xor esi esi +
test edx edx +
jnz loc_43DF9D  +
mov eax ebx +
call sub_43DAB0  +
test eax eax +
jz loc_43DFB0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_437280  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_43D090  +
test eax eax +
mov esi eax +
jnz loc_43DF75  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_43DF91  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_43DFD5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_43DFE7  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_43DF60  +
mov edx eax +
mov eax ebx +
call sub_437330  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_43DFCE  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov [esp+48h+var_1C] 0 +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_35] dl +
mov [esp+48h+var_3C] eax +
cmp [ebx] dl +
jz loc_43E626  +
mov edx ebx +
lea esi [esi+0] +
mov ebx [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_43E273  +
cmp al 54h +
jz loc_43E290  +
cmp al 73h +
jz loc_43E1B2  +
cmp al 66h +
jz loc_43E1F0  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_43E146  +
cmp al 6Fh +
jz loc_43E136  +
cmp al 74h +
setz cl  +
jnz loc_43E721  +
cmp byte ptr [edx+1] 6Ch +
jz loc_43E390  +
mov eax ebp +
call sub_43D900  +
test eax eax +
mov [esp+48h+var_34] eax +
jz loc_43E266  +
mov edx [eax] +
cmp edx 31h +
jz loc_43E2A0  +
cmp edx 32h +
jz loc_43E3C4  +
cmp edx 33h +
jnz loc_43E266  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_2C] 0 +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_43E656  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_43E0FC  +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_43E5FA  +
mov eax ebp +
call sub_43E730  +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
test edx edx +
jz loc_43E11F  +
mov ecx eax +
mov edx 38h +
mov eax ebp +
call sub_437280  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_34] +
mov edx 36h +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_43E096  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_43DB80  +
test eax eax +
jz loc_43E266  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_43E3D8  +
mov [ebp+34h] ebx +
mov [esp+48h+var_48] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_437280  +
mov edi [esp+48h+var_3C] +
test eax eax +
mov [edi] eax +
jz loc_43E269  +
mov edx [ebp+0Ch] +
add eax 0Ch +
mov [esp+48h+var_3C] eax +
movzx eax [esp+48h+var_35] +
cmp [edx] al +
jnz loc_43E040  +
mov ebx edx +
mov eax [esp+48h+var_1C] +
add ebx 1 +
mov [ebp+0Ch] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_43E516  +
cmp al 70h +
jnz loc_43E096  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_43E730  +
mov edx 4Ah +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
cmp byte ptr [edx+1] 70h +
jnz loc_43E096  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_43E4B0  +
mov eax ebp +
call sub_437560  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_43E266  +
add eax 1 +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_43E266  +
mov ecx edx +
add edx 1 +
shl ecx 4 +
add ecx [ebp+10h] +
mov dword ptr [ecx+4] 0 +
mov [ebp+14h] edx +
mov dword ptr [ecx] 6 +
mov [ecx+8] eax +
jmp loc_43E163  +
mov [esp+48h+var_48] ebp +
call sub_43D090  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_43E39A  +
mov [ebp+34h] ebx +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_43FBC0  +
mov ecx eax +
lea esi [esi+0] +
test ecx ecx +
mov [ebp+34h] ebx +
jnz loc_43E166  +
jmp loc_43E269  +
mov eax ebp +
call sub_4375A0  +
mov ecx eax +
jmp loc_43E280  +
mov eax [eax+8] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_43E553  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_43E6BD  +
jle loc_43E4F0  +
cmp eax 2 +
jz loc_43E400  +
cmp eax 3 +
jnz loc_43E266  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_43E266  +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_43E576  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_43E687  +
cmp al 6Eh +
jnz loc_43E266  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_43E67A  +
mov edx 5Fh +
mov eax ebp +
call sub_43E010  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_43D090  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_43E66D  +
cmp al 70h +
jz loc_43E69A  +
cmp al 69h +
jnz loc_43E266  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_43E266  +
mov eax ebp +
call sub_43E730  +
jmp loc_43E597  +
xor esi esi +
test cl cl +
jnz loc_43E24F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_43E010  +
mov ecx esi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_30] 0 +
mov eax [eax+8] +
jmp loc_43E2DB  +
mov [esp+48h+var_34] eax +
mov eax ebp +
call sub_43F070  +
mov ecx [esp+48h+var_34] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_43E266  +
mov eax [esp+48h+var_34] +
mov eax [eax+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_43E5D3  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 66h +
jz loc_43E646  +
mov eax ebp +
call sub_43E730  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_43E563  +
mov esi [esp+48h+var_30] +
mov edi offset unk_466E18 +
mov ecx 3 +
cmps   +
jz loc_43E4C0  +
mov esi [esp+48h+var_30] +
mov edi offset unk_466E1B +
mov ecx 3 +
cmps   +
jz loc_43E4C0  +
mov eax ebp +
call sub_43E730  +
mov esi eax +
lea esi [esi+0] +
mov ecx [esp+48h+var_2C] +
mov edx 38h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_437280  +
mov ecx [esp+48h+var_34] +
mov edx 37h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
add edx 3 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_43E224  +
mov eax ebp +
call sub_43DB80  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_43E480  +
mov eax ebp +
call sub_43F070  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov esi eax +
jmp loc_43E480  +
test eax eax +
jnz loc_43E266  +
mov ecx [esp+48h+var_34] +
mov edx 35h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+48h+var_48] ebp +
call sub_43D090  +
mov esi eax +
mov eax ebp +
call sub_43DB80  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_43E606  +
mov [esp+48h+var_48] eax +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
mov [esp+48h+var_48] ebp +
call sub_43D090  +
mov [esp+48h+var_48] eax +
jmp loc_43E11F  +
mov edx 45h +
mov eax ebp +
call sub_43E010  +
mov esi eax +
jmp loc_43E480  +
mov eax ebp +
call sub_43E730  +
mov esi eax +
mov eax ebp +
call sub_43E730  +
mov edi eax +
mov eax ebp +
call sub_43E730  +
test eax eax +
jz loc_43E266  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebp +
call sub_437280  +
mov ecx esi +
mov edx 3Ah +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov ecx [esp+48h+var_34] +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov ecx eax +
jmp loc_43E280  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_43E5E9  +
sub eax 72h +
cmp al 1 +
ja loc_43E41F  +
mov [esp+48h+var_48] ebp +
call sub_43D090  +
mov [esp+48h+var_2C] eax +
jmp loc_43E437  +
mov eax ebp +
call sub_43EF60  +
jmp loc_43E103  +
mov eax ebp +
call sub_43F070  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_437280  +
mov [esp+48h+var_48] eax +
jmp loc_43E53E  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_437280  +
jmp loc_43E26B  +
mov eax ebp +
call sub_43D900  +
mov [esp+48h+var_2C] eax +
jmp loc_43E437  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_43E010  +
jmp loc_43E103  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_43E597  +
cmp al 77h +
jz loc_43E341  +
jmp loc_43E266  +
mov eax ebp +
lea esi [esi+0] +
call sub_43D900  +
jmp loc_43E57D  +
cmp byte ptr [edx+1] 69h +
nop   +
jnz loc_43E266  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_43E010  +
jmp loc_43E597  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_43E717  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_43E6E6  +
cmp al 70h +
mov [esp+48h+var_2C] 0 +
jz loc_43E6E6  +
cmp edx 33h +
jnz loc_43E0E2  +
jmp loc_43E0D6  +
mov esi [esp+48h+var_30] +
mov [esp+48h+var_2C] 0 +
cmp al [esi+1] +
jnz loc_43E6D8  +
mov eax [ebp+0Ch] +
mov [esp+48h+var_2C] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_43E6D8  +
add eax 1 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_2C] 0 +
jmp loc_43E6D8  +
mov [esp+48h+var_2C] 0 +
jmp loc_43E6D8  +
cmp al 69h +
jz loc_43E08C  +
jmp loc_43E096  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_43EA85  +
cmp al 54h +
jz loc_43EA93  +
cmp al 73h +
jz loc_43E8B7  +
cmp al 66h +
jz loc_43E850  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_43E790  +
mov eax ebx +
call sub_43DB80  +
test eax eax +
jz loc_43EA63  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_43EAB1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_43EA70  +
cmp al 74h +
setz cl  +
jnz loc_43ED91  +
cmp byte ptr [edx+1] 6Ch +
jz loc_43EA20  +
mov eax ebx +
call sub_43D900  +
test eax eax +
mov ebp eax +
jz loc_43EA63  +
mov eax [eax] +
cmp eax 31h +
jz loc_43E8F4  +
cmp eax 32h +
jz loc_43EAA1  +
cmp eax 33h +
jnz loc_43EA63  +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_14] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_43EBCE  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_43E813  +
mov edi offset aSp +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_43EC7F  +
mov eax ebx +
call sub_43E730  +
mov edx [esp+1Ch+var_14] +
mov [esp+1Ch+var_1C] eax +
test edx edx +
jz loc_43E836  +
mov ecx eax +
mov edx 38h +
mov eax ebx +
call sub_437280  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 36h +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
cmp byte ptr [edx+1] 70h +
jnz loc_43E7AD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_43EBC1  +
mov eax ebx +
call sub_437560  +
mov edx eax +
add eax 1 +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_43EA63  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43EA63  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [esi] 6 +
mov [esi+8] eax +
jmp loc_43E784  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_43EAD0  +
cmp al 70h +
jnz loc_43E7AD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_43E730  +
mov edx 4Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
mov edi [ebp+8] +
mov ecx [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov esi ecx +
mov [esp+1Ch+var_18] ecx +
lea ecx [edi-2] +
add [ebx+30h] ecx +
mov ecx 3 +
mov [esp+1Ch+var_14] edi +
mov edi offset aSt +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_43EC10  +
mov edi [esp+1Ch+var_10] +
mov ecx [edi+0Ch] +
cmp ecx 1 +
jz loc_43ED31  +
jle loc_43EBE5  +
cmp ecx 2 +
jz loc_43EB10  +
cmp ecx 3 +
jnz loc_43EA63  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_43EA63  +
mov edi offset aQu +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_43EC30  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_43ED04  +
cmp al 6Eh +
jnz loc_43EA63  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_43ECF5  +
mov edx 5Fh +
mov eax ebx +
call sub_43E010  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_43D090  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_43ECE8  +
cmp al 70h +
jz loc_43ED10  +
cmp al 69h +
jnz loc_43EA63  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_43EA63  +
mov eax ebx +
call sub_43E730  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebx +
call sub_437280  +
mov ecx esi +
mov edx 3Ah +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov ecx ebp +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
xor esi esi +
test cl cl +
jnz loc_43EA50  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_43E010  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_43EA26  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_43E7AD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_43E767  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_43FBC0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4375A0  +
mov ecx [ebp+8] +
mov [esp+1Ch+var_18] 0 +
jmp loc_43E935  +
mov eax ebx +
call sub_43F070  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov esi eax +
mov eax ebx +
call sub_43DB80  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_43EC8B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_43EA63  +
mov eax [ebp+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_43EC58  +
mov eax [esp+1Ch+var_18] +
cmp byte ptr [eax] 66h +
jz loc_43ECAB  +
mov eax ebx +
call sub_43E730  +
mov [esp+1Ch+var_14] eax +
mov esi [esp+1Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_43EC1D  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_466E18 +
mov ecx 3 +
cmps   +
jz loc_43EB81  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_466E1B +
mov ecx 3 +
cmps   +
jnz loc_43ECBB  +
mov eax ebx +
call sub_43DB80  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_43ECC9  +
mov ecx [esp+1Ch+var_14] +
mov edx 38h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_437280  +
mov ecx ebp +
mov edx 37h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_43E888  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_43E010  +
jmp loc_43E81A  +
test ecx ecx +
jnz loc_43EA63  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43E784  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
jmp loc_43E833  +
mov edx 45h +
mov eax ebx +
call sub_43E010  +
mov esi eax +
jmp loc_43EB96  +
mov eax ebx +
call sub_43E730  +
mov esi eax +
mov eax ebx +
call sub_43E730  +
mov edi eax +
mov eax ebx +
call sub_43E730  +
test eax eax +
jnz loc_43E9E4  +
xor esi esi +
jmp loc_43EA65  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_43EC6E  +
sub eax 72h +
cmp al 1 +
ja loc_43EB2B  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov [esp+1Ch+var_14] eax +
jmp loc_43EB43  +
mov eax ebx +
call sub_43EF60  +
jmp loc_43E81A  +
mov eax ebx +
call sub_43F070  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov [esp+1Ch+var_1C] eax +
jmp loc_43EAF8  +
mov eax ebx +
call sub_43D900  +
mov [esp+1Ch+var_14] eax +
jmp loc_43EB43  +
mov eax ebx +
call sub_43E730  +
mov esi eax +
jmp loc_43EB96  +
mov eax ebx +
call sub_43F070  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
mov esi eax +
jmp loc_43EB96  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_43E9E4  +
cmp al 77h +
jz loc_43E99D  +
xor esi esi +
jmp loc_43EA65  +
mov eax ebx +
call sub_43D900  +
jmp loc_43EC37  +
cmp byte ptr [edx+1] 69h +
jnz loc_43EA63  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_43E010  +
jmp loc_43E9E4  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
test edi edi +
jz loc_43ED4E  +
movzx ecx byte ptr [edi] +
cmp cl 6Dh +
jz loc_43ED60  +
cmp cl 70h +
jz loc_43ED60  +
cmp eax 33h +
jnz loc_43E7F7  +
jmp loc_43E7EB  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
cmp cl [edi+1] +
jnz loc_43ED4E  +
mov ecx [ebx+0Ch] +
mov [esp+1Ch+var_14] 1 +
cmp byte ptr [ecx] 5Fh +
jnz loc_43ED4E  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+1Ch+var_14] 0 +
jmp loc_43ED4E  +
cmp al 69h +
jz loc_43E7A3  +
jmp loc_43E7AD  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edi [eax+0Ch] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_18] ecx +
movzx ebp byte ptr [edi] +
jmp loc_43EE17  +
mov eax ebp +
cmp al 56h +
jz loc_43EEA0  +
mov eax ebp +
cmp al 4Bh +
jz loc_43EEB8  +
cmp byte ptr [edi+1] 0 +
jz loc_43EE94  +
lea eax [edi+2] +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edi+1] +
cmp cl 78h +
jnz loc_43EE47  +
add dword ptr [ebx+30h] 11h +
xor eax eax +
mov edx 4Ch +
mov [esp+20h+var_20] eax +
xor ecx ecx +
mov eax ebx +
call sub_437280  +
test eax eax +
mov [esi] eax +
jz loc_43EE94  +
mov edi [ebx+0Ch] +
lea esi [eax+8] +
movzx ebp byte ptr [edi] +
mov eax edi +
call sub_437970  +
test eax eax +
jz loc_43EF00  +
lea eax [edi+1] +
mov [ebx+0Ch] eax +
mov eax ebp +
cmp al 72h +
jnz loc_43EDC0  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_43EDF8  +
mov eax ecx +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_43EED0  +
add dword ptr [ebx+30h] 9 +
xor eax eax +
cmp cl 4Fh +
mov edx 4Eh +
jnz loc_43EDF8  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_43E730  +
mov [ebx+34h] edi +
test eax eax +
jz loc_43EE94  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_43EE94  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Eh +
jmp loc_43EDF8  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_43EDF8  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Eh +
add dword ptr [ebx+30h] 6 +
jmp loc_43EDF8  +
cmp cl 77h +
jnz loc_43EE94  +
add dword ptr [ebx+30h] 6 +
mov eax ebx +
call sub_43DAB0  +
test eax eax +
jz loc_43EE94  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_43EE94  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Fh +
jmp loc_43EDF8  +
mov eax [esp+20h+var_18] +
test eax eax +
jnz loc_43EF14  +
mov eax ebp +
cmp al 46h +
jnz loc_43EF14  +
cmp esi [esp+20h+var_14] +
jnz loc_43EF3C  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1Bh +
jz loc_43EF53  +
cmp eax 19h +
jnz loc_43EF31  +
mov dword ptr [ebp+0] 1Ch +
lea eax [ebp+8] +
cmp esi eax +
mov [esp-0Ch+arg_8] eax +
jz loc_43EF14  +
mov eax [esp-0Ch+arg_8] +
mov ebp [eax] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_43EF20  +
mov dword ptr [ebp+0] 1Dh +
jmp loc_43EF31  +
mov dword ptr [ebp+0] 1Eh +
jmp loc_43EF31  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov edx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_43F045  +
mov [esp+2Ch+var_10] 0 +
lea esi [esp+2Ch+var_10] +
jmp loc_43EFC6  +
sub eax 49h +
cmp al 1 +
ja loc_43F010  +
mov eax ebx +
call sub_43F070  +
mov ecx eax +
test ecx ecx +
jz loc_43EFF4  +
mov [esp+2Ch+var_2C] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_437280  +
test eax eax +
mov [esi] eax +
jz loc_43EFF4  +
mov edx [ebx+0Ch] +
lea esi [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_43F030  +
cmp al 4Ch +
jz loc_43F020  +
jle loc_43EF88  +
cmp al 58h +
nop   +
jnz loc_43F010  +
add edx 1 +
mov ebp [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] edx +
mov dword ptr [ebx+34h] 1 +
call sub_43E730  +
mov edx [ebx+0Ch] +
mov [ebx+34h] ebp +
cmp byte ptr [edx] 45h +
jz loc_43F000  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_43EF9C  +
mov [esp+2Ch+var_2C] ebx +
call sub_43D090  +
mov ecx eax +
jmp loc_43EF9C  +
mov eax ebx +
call sub_43FBC0  +
mov ecx eax +
jmp loc_43EF9C  +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
xor ecx ecx +
mov [ebx+0Ch] edx +
mov eax ebx +
mov edx 2Fh +
mov [esp+2Ch+var_2C] 0 +
call sub_437280  +
jmp loc_43EFF6  +
***
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
sub ecx 49h +
cmp cl 1 +
ja loc_43F090  +
add edx 1 +
mov [eax+0Ch] edx +
jmp sub_43EF60  +
xor eax eax +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_43F224  +
jle loc_43F103  +
cmp al 55h +
jz loc_43F0F0  +
cmp al 5Ah +
nop   +
jnz loc_43F1D0  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_43F4B0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov edi eax +
jz loc_43F390  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_43DB80  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_43F1D0  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_43EDA0  +
test eax eax +
mov edi eax +
jz loc_43F0E3  +
xor edx edx +
mov eax esi +
call sub_437330  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_43F1C2  +
cmp bl 44h +
jz loc_43F326  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_43F2D0  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_43F2D0  +
cmp bl 43h +
jz loc_43F2D0  +
cmp bl 55h +
jz loc_43F2D0  +
cmp bl 4Ch +
jz loc_43F2D0  +
cmp bl 53h +
jz loc_43F370  +
cmp bl 49h +
jz loc_43F350  +
cmp bl 54h +
jz loc_43F381  +
cmp bl 45h +
nop   +
jz loc_43F46D  +
cmp bl 4Dh +
jnz loc_43F1C2  +
test ebp ebp +
lea esi [esi+0] +
jz loc_43F1C2  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_43F144  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_43F0E5  +
mov eax esi +
call sub_43DB80  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_43F0F9  +
test eax eax +
jz loc_43F0E3  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_43F0E3  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_43F070  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_437280  +
mov ebx eax +
jmp loc_43F0F9  +
cmp byte ptr [edx+1] 74h +
jz loc_43F262  +
xor edx edx +
mov eax esi +
call sub_437710  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_43F0F9  +
mov eax esi +
call sub_43F070  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_437280  +
mov ebx eax +
jmp loc_43F0F9  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_43DB80  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_4372E0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_437280  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_43F0F9  +
test edi edi +
jz loc_43F0E3  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_43F0E3  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_43F243  +
mov eax esi +
call sub_43DB80  +
test ebp ebp +
jz loc_43F340  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_437280  +
mov ebp eax +
cmp bl 53h +
jz loc_43F31B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_43F344  +
test ebp ebp +
jz loc_43F1C2  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_43F1C2  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_43F140  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_43F2D0  +
mov [esp+30h+var_30] esi +
call sub_43D090  +
test ebp ebp +
jnz loc_43F2DB  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_43F2EE  +
mov ebx 45h +
jmp loc_43F14D  +
test ebp ebp +
jz loc_43F1C2  +
mov eax esi +
call sub_43F070  +
mov edx 4 +
jmp loc_43F2E0  +
mov edx 1 +
mov eax esi +
call sub_437710  +
jmp loc_43F2D7  +
mov eax esi +
call sub_4375A0  +
jmp loc_43F2D7  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_43F442  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_43F415  +
mov eax esi +
call sub_43F0A0  +
test eax eax +
mov ebx eax +
jz loc_43F3C4  +
mov eax [eax] +
cmp eax 45h +
jz loc_43F3C4  +
cmp eax 47h +
jnz loc_43F430  +
cmp ebp 0FFFFFFFFh +
jz loc_43F3F4  +
mov edx [esi+14h] +
cmp edx [esi+18h] +
jge loc_43F411  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov [eax+8] ebx +
mov ebx eax +
mov dword ptr [eax] 46h +
mov [eax+0Ch] ebp +
mov [esp+30h+var_30] ebx +
mov ecx edi +
mov eax esi +
mov edx 2 +
call sub_437280  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_43F3F4  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_437560  +
test eax eax +
mov ebp eax +
jns loc_43F3AB  +
xor ebx ebx +
jmp loc_43F0E5  +
mov eax esi +
call sub_4379B0  +
test eax eax +
jnz loc_43F3C4  +
xor ebx ebx +
jmp loc_43F0E5  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4379B0  +
test eax eax +
jz loc_43F0E3  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_4372E0  +
mov [esp+30h+var_30] eax +
jmp loc_43F3F7  +
test ebp ebp +
mov [edi] ebp +
jz loc_43F0E3  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_43F48A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+8] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_43F0E3  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_43F0F9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_43F5B5  +
cmp cl 47h +
jz loc_43F5B5  +
mov eax ebx +
mov edi edx +
call sub_43F0A0  +
test eax eax +
mov esi eax +
jnz loc_43F560  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_43F5CD  +
test dl dl +
jz loc_43F5CD  +
cmp dl 45h +
jz loc_43F5CD  +
mov edx esi +
mov eax [edx] +
cmp eax 20h +
ja loc_43F660  +
cmp eax 1Ch +
jnb loc_43F66F  +
cmp eax 4 +
jnz loc_43F610  +
mov edx [edx+8] +
test edx edx +
jz loc_43F550  +
mov eax [edx] +
cmp eax 8 +
ja loc_43F600  +
cmp eax 7 +
jnb loc_43F610  +
sub eax 1 +
cmp eax 1 +
ja loc_43F550  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_43F52B  +
nop   +
mov edx 1 +
jmp loc_43F612  +
test edi edi +
jz loc_43F4E4  +
test byte ptr [ebx+8] 1 +
jnz loc_43F4E4  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_43F58D  +
lea esi [esi+0] +
mov esi [esi+8] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_43F580  +
cmp edx 2 +
mov eax esi +
jnz loc_43F5CD  +
mov ebx [esi+0Ch] +
jmp loc_43F5A3  +
mov ebx [ebx+8] +
mov eax [ebx] +
call sub_4374A0  +
test eax eax +
jnz loc_43F5A0  +
mov [esi+0Ch] ebx +
mov eax esi +
jmp loc_43F5CD  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_43F632  +
cmp dl 47h +
jz loc_43F5D5  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_43F5CB  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_43F5CB  +
movzx edx dl +
jmp ds:off_466E34[edx*4]  +
cmp eax 34h +
jnz loc_43F550  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_43DF60  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_43F5CB  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_43F5CB  +
movzx eax al +
jmp ds:off_466EFC[eax*4]  +
cmp eax 4Ch +
jz loc_43F66F  +
jb loc_43F610  +
sub eax 4Eh +
cmp eax 1 +
ja loc_43F610  +
mov edx [edx+8] +
test edx edx +
jnz loc_43F507  +
jmp loc_43F610  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
lea eax [ebx+0Ch] +
call sub_4374C0  +
cmp eax 1 +
jle loc_43F5CB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_43F5CB  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_43F5CB  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_43F5CB  +
xor esi esi +
cmp al 24h +
jz loc_43FA06  +
nop   +
lea esi [esi+0] +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_43F703  +
cmp al 24h +
jz loc_43F703  +
add esi 1 +
cmp esi ebp +
jl loc_43F6F0  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_4372E0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_43F5CB  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_43FA56  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Fh +
mov eax ebx +
call sub_437280  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_43F5CB  +
test ebp ebp +
jg loc_43F6D6  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Eh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_437280  +
jmp loc_43F5CD  +
mov eax ebx +
call sub_43F0A0  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
cmp byte ptr [eax+2] 0 +
jz loc_43FA5F  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_43FA5F  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov eax ebx +
call sub_43F0A0  +
mov esi eax +
mov eax ebx +
call sub_437520  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov eax ebx +
call sub_43F0A0  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_4374C0  +
test eax eax +
js loc_43F5CB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_43F5CB  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_43D090  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov edx 76h +
mov eax ebx +
call sub_437900  +
test eax eax +
jz loc_43F5CB  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov edx 68h +
mov eax ebx +
call sub_437900  +
test eax eax +
jz loc_43F5CB  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
xor edx edx +
mov eax ebx +
call sub_437900  +
test eax eax +
jz loc_43F5CB  +
xor edx edx +
mov eax ebx +
call sub_437900  +
test eax eax +
jz loc_43F5CB  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov eax ebx +
call sub_43F0A0  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_43FA89  +
cmp al 5Fh +
jz loc_43FA82  +
cmp al 24h +
jnz loc_43F5CB  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_43FA90  +
mov eax edx +
add edx 1 +
shl eax 4 +
sub ebp 2 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov [eax+8] ecx +
mov edi [ebx+0Ch] +
mov dword ptr [eax] 40h +
add edi 2 +
mov [ebx+0Ch] edi +
jmp loc_43F720  +
mov [esp+1Ch+var_10] eax +
jmp loc_43F747  +
xor edx edx +
mov eax ebx +
call sub_43F4B0  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_437280  +
jmp loc_43F5CD  +
mov ecx 2Eh +
jmp loc_43FA1F  +
mov ecx 2Fh +
jmp loc_43FA1F  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_43F5CB  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_43FBA0  +
test ebx ebx +
jnz loc_43FAC6  +
cmp dl 5Ah +
jz loc_43FACF  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_43F4B0  +
test ebx ebx +
mov edi eax +
jz loc_43FAC8  +
test byte ptr [esi+8] 1 +
jz loc_43FAC8  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_43FAC8  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_43FB74  +
cmp al 5Fh +
jz loc_43FB74  +
sub eax 30h +
cmp al 9 +
ja loc_43FB6B  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_43FB42  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_43FB42  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_43FB0E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_43FB30  +
cmp cl 2Eh +
jz loc_43FB13  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_4372E0  +
mov ecx edi +
mov edx 4Dh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_437280  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_43FAF2  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_43FB8F  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_43FB82  +
cmp cl 5Fh +
jz loc_43FB82  +
jmp loc_43FB0E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_43FAC1  +
***
jmp sub_43FBC0  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_44AB70  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_43FAA0  +
mov ebx eax +
xor eax eax +
***
test ebx ebx +
jz sub_43FDAA  +
cmp dword ptr [ebx] 8 +
ja sub_43FDAA  +
mov ecx [ebx] +
jmp ds:off_466FCC[ecx*4]  +
***
mov eax [ebx+8] +
lea esp [ebp-0Ch] +
mov eax [ebx+8] +
jmp loc_43FD87  +
***
jmp loc_43FD87  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [ebp+var_54] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_437380  +
mov ecx [ebp+var_2C] +
mov eax 1 +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx ecx +
test ecx ecx +
cmovg eax ecx +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_44AB70  +
sub esp eax +
test edx edx +
mov eax 1 +
cmovg eax edx +
lea eax ds:12h[eax*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov edx [ebp+arg_0] +
sub esp eax +
lea edi [ebp+var_160] +
lea eax [esp+178h+var_16C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_28] eax +
mov eax edi +
call sub_437CB0  +
mov eax [ebp+var_60] +
mov esp esi +
mov ecx [ebp+var_54] +
mov edx [ebp+var_58] +
mov byte ptr [ebp+eax+var_160] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_48] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_4400F0  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_4400A0  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_440091  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_44AB70  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_440045  +
jb loc_440105  +
cmp esi 3 +
ja loc_440105  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_43FFFC  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_440120  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_4372E0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 43h +
mov [esp+78h+var_78] 0 +
call sub_437280  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_44005A  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_43FAA0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_44006A  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_44008F  +
test ebx ebx +
jz loc_440117  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_43FDE0  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_4400AC  +
cmp al 5Fh +
jnz loc_4400E0  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_4400BF  +
cmp al 44h +
jnz loc_43FF3E  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_43FF3E  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_43FF4C  +
cmp al 24h +
jnz loc_43FF3E  +
jmp loc_4400AC  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_43FF2A  +
mov esi 1 +
nop   +
jmp loc_43FF4C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_43D090  +
mov ebx eax +
jmp loc_44005A  +
xor eax eax +
mov esp edi +
jmp loc_440091  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_43F4B0  +
mov ecx eax +
jmp loc_440018  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_437BF0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_43FF10  +
test eax eax +
jz loc_440196  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_440191  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_440223  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_437BF0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_43FDE0  +
test eax eax +
jz loc_440254  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_440236  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_440230  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_44026E  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_4401DC  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_44021E  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_4401DC  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_440140  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_43FF10  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+20h] +
lea ecx [esp+0Ch] +
call sub_440140  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_43FF10  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_43FCD0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_43FCD0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_440400  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_46B320 +
call sprintf  +
add esp 18h +
mov eax offset unk_46B320 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] esi +
call sub_441CB0  +
mov [esp+10h+var_10] eax +
call sub_435ED0  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
mov edi eax +
call vsprintf  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax] +
mov [esp+38h+var_2C] edx +
test esi esi +
jz loc_4405A8  +
mov edx [esi] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
mov edi eax +
jz loc_4405A8  +
mov ebx [esi+0Ch] +
cmovs ebx [esi+8] +
test ebx ebx +
jz loc_4405A8  +
mov edx [ebx] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
jz loc_440598  +
js loc_440516  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_440598  +
mov ecx edi +
xor edx edx +
shr ecx 1Fh +
mov [esp+38h+var_28] ecx +
test edi edi +
setnle cl  +
test eax eax +
setnle al  +
jle loc_440550  +
test cl cl +
jz loc_440550  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
mov [esi+0Ch] edx +
mov eax [edx+8] +
mov [edx+8] esi +
mov [esi+0Ch] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_440487  +
mov edx [ebx+8] +
test edx edx +
jz loc_440598  +
mov ecx edi +
shr ecx 1Fh +
test cl cl +
mov byte ptr [esp+38h+var_28] cl +
jz loc_4405C4  +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
mov [esi+8] edx +
mov eax [edx+0Ch] +
mov [edx+0Ch] esi +
mov [esi+8] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_440487  +
cmp byte ptr [esp+38h+var_28] 0 +
jz loc_440570  +
test al al +
jz loc_440570  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
jmp loc_440537  +
test dl dl +
jz loc_440590  +
test cl cl +
jz loc_440590  +
mov edx [ebx+8] +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
jmp loc_440500  +
mov esi [ebp+0] +
jmp loc_440487  +
test edi edi +
js loc_4405B0  +
mov eax [ebx+8] +
mov [ebx+8] esi +
mov [esi+0Ch] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
mov [ebx+0Ch] esi +
mov [esi+8] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 1 +
jmp loc_4404E4  +
***
jmp free  +
***
jmp sub_435ED0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1Ch +
call sub_435ED0  +
mov edx [esp+1Ch+arg_0] +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+10h] offset loc_4405E0 +
mov dword ptr [eax+14h] offset loc_4405D0 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0 +
mov [eax+0Ch] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+34h] +
mov esi [esp+2Ch] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call esi  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+10h] esi +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+38h] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call dword ptr [esp+2Ch]  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+10h] edx +
mov edx [esp+34h] +
mov [eax+14h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esi] +
test ebx ebx +
jz loc_4407B5  +
mov eax [esi+8] +
test eax eax +
jz loc_440703  +
mov edx [ebx] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_440712  +
mov edx [ebx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov dword ptr [ebx] 0 +
mov eax [ebx+8] +
xor edi edi +
test eax eax +
jz loc_440799  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_440734  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+8] +
mov eax [esi+0Ch] +
mov ebp edx +
test eax eax +
jz loc_440748  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov ebp [ebx+8] +
mov eax [ebx+0Ch] +
mov [ebp+0] edi +
test eax eax +
jz loc_4407A2  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_440765  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+0Ch] +
mov eax [esi+0Ch] +
mov edi edx +
test eax eax +
jz loc_440779  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edi [ebx+0Ch] +
mov [edi] ebp +
mov ebp [ebx] +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] edx +
call eax  +
test ebp ebp +
jz loc_4407A6  +
mov ebx ebp +
mov eax [ebx+8] +
test eax eax +
jnz loc_440721  +
mov eax [ebx+0Ch] +
mov ebp edi +
test eax eax +
jnz loc_440752  +
mov edi ebp +
jmp loc_44077B  +
test edi edi +
jz loc_4407B5  +
mov ebx edi +
lea esi [esi+0] +
jmp loc_440718  +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] edx +
call eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_440470  +
mov eax [ebx] +
test eax eax +
jz loc_440865  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call edx  +
mov edi eax +
mov eax [ebx] +
test eax eax +
jz loc_440826  +
test edi edi +
jnz loc_440826  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_440818  +
mov eax [eax+4] +
mov [esp+10h+var_10] eax +
call edx  +
mov eax [ebx] +
mov ecx [esp+10h+arg_8] +
mov [eax+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov ecx [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] ecx +
jz loc_440887  +
test edi edi +
js loc_4408A0  +
mov ecx [edx+8] +
mov [eax+0Ch] edx +
mov [eax+8] ecx +
mov dword ptr [edx+8] 0 +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov edi [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] edi +
jnz loc_44084C  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+8] 0 +
mov [ebx] eax +
jmp loc_44085E  +
mov ecx [edx+0Ch] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov dword ptr [edx+0Ch] 0 +
mov [ebx] eax +
jmp loc_44085E  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax esi +
mov edx ebx +
call sub_440470  +
mov eax [esi] +
test eax eax +
jz loc_44092F  +
mov eax [eax] +
mov edx [esi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_44092F  +
mov edx [esi+0Ch] +
mov eax [esi] +
test edx edx +
mov ebx [eax+8] +
mov edi [eax+0Ch] +
jz loc_440908  +
mov eax [eax+4] +
mov [esp] eax +
call edx  +
mov eax [esi] +
mov ecx [esi+18h] +
mov edx [esi+14h] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test ebx ebx +
jz loc_440936  +
test edi edi +
mov [esi] ebx +
jnz loc_440925  +
jmp loc_44092F  +
mov ebx eax +
mov eax [ebx+0Ch] +
test eax eax +
jnz loc_440923  +
mov [ebx+0Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esi] edi +
jmp loc_44092F  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_440470  +
mov eax [ebx] +
test eax eax +
jz loc_440976  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call edx  +
test eax eax +
jnz loc_440976  +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jnz loc_440992  +
jmp loc_44099B  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_440990  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_4409B2  +
jmp loc_4409BB  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_4409B0  +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jz loc_440A10  +
mov edx esi +
mov eax ebx +
call sub_440470  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
test eax eax +
mov eax [ebx] +
js loc_440A09  +
mov eax [eax+8] +
test eax eax +
jnz loc_440A02  +
jmp loc_440A10  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_440A00  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax [ebx] +
test eax eax +
jz loc_440A71  +
mov edx esi +
mov eax ebx +
call sub_440470  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] edx +
call eax  +
test eax eax +
mov eax [ebx] +
jle loc_440A58  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_440A64  +
nop   +
jmp loc_440A71  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_440A62  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_440A52  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
mov esi [eax] +
mov [esp+28h+var_28] 190h +
call sub_435ED0  +
mov edi eax +
jmp loc_440AB1  +
cmp ebx ebp +
jz loc_440AD7  +
mov [edi+ebx*4] esi +
mov esi [esi+8] +
add ebx 1 +
test esi esi +
jnz loc_440AA4  +
test ebx ebx +
jz loc_440AF1  +
sub ebx 1 +
mov eax [esp+28h+arg_8] +
mov esi [edi+ebx*4] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call [esp+28h+arg_4]  +
test eax eax +
jnz loc_440AF3  +
mov esi [esi+0Ch] +
jmp loc_440AB1  +
lea eax ds:0[ebx*8] +
mov [esp+28h+var_28] edi +
lea ebp [ebx+ebx] +
mov [esp+28h+var_24] eax +
call sub_435F50  +
mov edi eax +
jmp loc_440AA8  +
xor eax eax +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_1C] eax +
call free  +
mov eax [esp+28h+var_1C] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnle dl  +
cmovge eax edx +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_440B95  +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+1Ch] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
test ecx ecx +
jz loc_440C10  +
mov esi ecx +
lea eax [ecx-1] +
neg esi  +
test edx edx +
mov ecx 0FE0h +
cmovz edx ecx +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx] edx +
call sub_440B80  +
test eax eax +
jz loc_440C21  +
lea edx [eax+edi+7] +
and edx esi +
mov [ebx+8] edx +
mov [ebx+0Ch] edx +
mov edx [ebx] +
mov [ebx+4] eax +
add edx eax +
mov [eax] edx +
mov [ebx+10h] edx +
mov dword ptr [eax+4] 0 +
mov eax 1 +
and byte ptr [ebx+28h] 0F9h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi 0FFFFFFF8h +
mov eax 7 +
mov edi 8 +
jmp loc_440BC5  +
mov [esp+1Ch+var_10] eax +
call off_456100  +
mov eax [esp+1Ch+var_10] +
jmp loc_440BDF  +
***
jmp sub_440C40  +
***
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_440C55  +
mov eax [eax+20h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+20h] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+1Ch+var_10] +
and byte ptr [eax+28h] 0FEh +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+8] +
jmp loc_440BB0  +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+0Ch] +
or byte ptr [eax+28h] 1 +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+18h] +
mov [eax+24h] edx +
mov edx [esp+8] +
jmp loc_440BB0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov esi [ebx+0Ch] +
sub esi [ebx+8] +
mov eax [ebx+18h] +
mov ecx [ebx+4] +
add edx esi +
mov edi esi +
shr edi 3 +
add eax edx +
lea ebp [eax+edi+64h] +
mov edi [ebx] +
cmp eax edi +
cmovnb edi eax +
cmp edi ebp +
cmovb edi ebp +
cmp edx eax +
jbe loc_440D76  +
mov [esp+1Ch+var_10] ecx +
xor ebp ebp +
call off_456100  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebx+18h] +
add edi ebp +
mov [ebx+4] ebp +
mov [ebp+4] ecx +
mov [ebx+10h] edi +
mov [ebp+0] edi +
lea edi [ebp+eax+8] +
not eax  +
and edi eax +
mov eax [ebx+8] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test byte ptr [ebx+28h] 2 +
jnz loc_440D62  +
mov edx [ebx+18h] +
mov ecx [esp+1Ch+var_10] +
lea eax [ecx+edx+8] +
not edx  +
and eax edx +
cmp [ebx+8] eax +
jz loc_440D96  +
add esi edi +
mov [ebx+8] edi +
mov [ebx+0Ch] esi +
and byte ptr [ebx+28h] 0FDh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
ja loc_440D08  +
mov edx edi +
mov eax ebx +
mov [esp+1Ch+var_10] ecx +
call sub_440B80  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
mov ebp eax +
jnz loc_440D18  +
jmp loc_440D08  +
mov eax [ecx+4] +
mov edx ecx +
mov [ebp+4] eax +
mov eax ebx +
call sub_440C40  +
jmp loc_440D62  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_440DCF  +
nop   +
cmp edx eax +
jbe loc_440DC8  +
cmp edx [eax] +
jbe loc_440DD2  +
mov eax [eax+4] +
test eax eax +
jnz loc_440DC0  +
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push ebx  +
mov ebx [esp+8+arg_0] +
mov edi [esp+8+arg_4] +
mov edx [ebx+4] +
test edx edx +
jnz loc_440DF6  +
jmp loc_440E14  +
mov edx esi +
cmp edi edx +
jbe loc_440E02  +
mov eax [edx] +
cmp edi eax +
nop   +
jbe loc_440E20  +
mov esi [edx+4] +
mov eax ebx +
call sub_440C40  +
or byte ptr [ebx+28h] 2 +
test esi esi +
jnz loc_440DF4  +
test edi edi +
jnz loc_440E30  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
mov [ebx+8] edi +
mov [ebx+10h] eax +
mov [ebx+4] edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+8+var_4] +
mov edx [eax+4] +
xor eax eax +
test edx edx +
jz locret_440E5F  +
lea esi [esi+0] +
mov ecx [edx] +
sub ecx edx +
mov edx [edx+4] +
add eax ecx +
test edx edx +
jnz loc_440E50  +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_435ED0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_440ECB  +
test eax eax +
jz loc_440EF4  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_465FA0[eax] +
movzx edx ds:byte_465FA0[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_440EC1  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_440F41  +
jmp loc_440F72  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_440F70  +
mov ecx ebp +
test cl cl +
jnz loc_440F70  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_440F77  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_465FA0[eax] +
movzx edx ds:byte_465FA0[edx] +
cmp eax 2Fh +
jnz loc_440F18  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_440F2E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_440FB9  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_465FA0[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_440F97  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_440EB0  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_441C20  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_441C20  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_440EB0  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov esi [edx] +
mov ebx [edx+4] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
mov [eax] esi +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov esi [ebx+18h] +
mov eax [ebx+10h] +
add eax esi +
cmp esi eax +
mov [ebx+10h] eax +
jbe loc_441832  +
add dword ptr [ebx+14h] 1 +
mov edi 38h +
sub edi esi +
cmp esi 37h +
jbe loc_441845  +
mov edi 78h +
sub edi esi +
lea eax [ebx+esi+1Ch] +
add esi edi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] offset unk_467D40 +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax [ebx+10h] +
shl eax 3 +
mov [ebx+esi+1Ch] eax +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
lea edx ds:0[ecx*8] +
shr eax 1Dh +
or eax edx +
mov [ebx+esi+20h] eax +
lea eax [ebx+1Ch] +
add esi 8 +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call sub_4410C0  +
mov esi [ebx] +
mov eax [ebx+0Ch] +
mov ecx [ebx+4] +
mov edx [ebx+8] +
mov [ebp+0] esi +
mov [ebp+0Ch] eax +
mov eax ebp +
mov [ebp+4] ecx +
mov [ebp+8] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esi+18h] +
test ebx ebx +
jnz loc_4419F8  +
cmp [esp+1Ch+arg_4] 40h +
jbe loc_4419E4  +
test byte ptr [esp+1Ch+arg_0] 3 +
jz loc_4419C0  +
mov edi [esp+1Ch+arg_4] +
lea ebp [esi+1Ch] +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx] +
sub edi 40h +
add ebx 40h +
mov [ebp+0] ecx +
mov ecx [ebx-3Ch] +
mov [ebp+4] ecx +
mov ecx [ebx-38h] +
mov [ebp+8] ecx +
mov ecx [ebx-34h] +
mov [ebp+0Ch] ecx +
mov ecx [ebx-30h] +
mov [ebp+10h] ecx +
mov ecx [ebx-2Ch] +
mov [ebp+14h] ecx +
mov ecx [ebx-28h] +
mov [ebp+18h] ecx +
mov ecx [ebx-24h] +
mov [ebp+1Ch] ecx +
mov ecx [ebx-20h] +
mov [ebp+20h] ecx +
mov ecx [ebx-1Ch] +
mov [ebp+24h] ecx +
mov ecx [ebx-18h] +
mov [ebp+28h] ecx +
mov ecx [ebx-14h] +
mov [ebp+2Ch] ecx +
mov ecx [ebx-10h] +
mov [ebp+30h] ecx +
mov ecx [ebx-0Ch] +
mov [ebp+34h] ecx +
mov ecx [ebx-8] +
mov [ebp+38h] ecx +
mov ecx [ebx-4] +
mov [ebp+3Ch] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call sub_4410C0  +
cmp edi 40h +
ja loc_4418F7  +
mov eax [esp+1Ch+arg_4] +
lea edx [eax-41h] +
shr edx 6 +
lea ecx [edx+1] +
shl ecx 6 +
shl edx 6 +
add [esp+1Ch+arg_0] ecx +
neg edx  +
lea eax [eax+edx-40h] +
mov [esp+1Ch+arg_4] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [esp+1Ch+arg_4] +
mov [esi+18h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] esi +
and ebx 0FFFFFFC0h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call sub_4410C0  +
add [esp+1Ch+arg_0] ebx +
and [esp+1Ch+arg_4] 3Fh +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jnz loc_441A7C  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 80h +
sub edx ebx +
cmp [esp+1Ch+arg_4] edx +
cmovbe edx [esp+1Ch+arg_4] +
lea eax [esi+ebx+1Ch] +
mov [esp+1Ch+var_1C] eax +
mov edi edx +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_0] +
add ebx edi +
mov [esp+1Ch+var_18] edx +
call memcpy  +
add [esi+18h] edi +
cmp ebx 40h +
ja loc_441A40  +
add [esp+1Ch+arg_0] edi +
sub [esp+1Ch+arg_4] edi +
jmp loc_4418D6  +
mov ecx ebx +
and ebx 3Fh +
and ecx 0FFFFFFC0h +
lea ebp [esi+1Ch] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] ecx +
call sub_4410C0  +
mov ecx [esp+1Ch+var_10] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] ebp +
lea ecx [esi+ecx+1Ch] +
mov [esp+1Ch+var_18] ecx +
call memcpy  +
mov [esi+18h] ebx +
jmp loc_441A2C  +
lea ebp [esi+1Ch] +
jmp loc_441996  +
***
mov eax [esp+0B8h+arg_4] +
lea ebx [esp+0B8h+var_A4] +
mov [esp+0B8h+var_B0] ebx +
mov [esp+0B8h+var_A4] 67452301h +
mov [esp+0B8h+var_A0] 0EFCDAB89h +
mov [esp+0B8h+var_B4] eax +
mov eax [esp+0B8h+arg_0] +
mov [esp+0B8h+var_9C] 98BADCFEh +
mov [esp+0B8h+var_98] 10325476h +
mov [esp+0B8h+var_90] 0 +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_94] 0 +
mov [esp+0B8h+var_8C] 0 +
call sub_4418C0  +
mov eax [esp+0B8h+arg_8] +
mov [esp+0B8h+var_B8] ebx +
mov [esp+0B8h+var_B4] eax +
call sub_441810  +
add esp 0B8h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_44AB70  +
mov edi 1000h +
sub esp eax +
mov esi [esp+10h+arg_110C] +
lea ebx [esp+10h+arg_A4] +
mov [esp+10h+arg_8] 67452301h +
mov [esp+10h+arg_C] 0EFCDAB89h +
mov [esp+10h+arg_10] 98BADCFEh +
mov [esp+10h+arg_14] 10325476h +
mov [esp+10h+arg_1C] 0 +
mov [esp+10h+arg_18] 0 +
mov [esp+10h+arg_20] 0 +
nop   +
lea esi [esi+0] +
xor ebp ebp +
jmp loc_441B78  +
test eax eax +
jz loc_441BA1  +
mov eax edi +
sub eax ebp +
mov [esp+10h+var_8] eax +
lea eax [ebx+ebp] +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] eax +
call fread  +
add ebp eax +
cmp ebp 0FFFh +
jbe loc_441B74  +
test eax eax +
jz loc_441BC0  +
lea eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] 1000h +
mov [esp+10h+var_10] ebx +
call sub_4410C0  +
jmp loc_441B70  +
mov [esp+10h+var_10] esi +
call ferror  +
test eax eax +
mov esi eax +
jnz loc_441BF6  +
test ebp ebp +
lea edi [esp+10h+arg_8] +
jnz loc_441C08  +
mov eax [esp+10h+arg_1110] +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] eax +
call sub_441810  +
add esp 110Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 110Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] ebp +
mov [esp+10h+var_10] ebx +
call sub_4418C0  +
jmp loc_441BD6  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_441C80  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] edi +
call strlen  +
mov edx edi +
lea esi [eax+1] +
jmp loc_441CDF  +
add edx 1 +
mov [esp+2Ch+var_10] edx +
mov edi edx +
cmp byte ptr [edx-1] 25h +
jz loc_441CF4  +
cmp byte ptr [edx] 0 +
jnz loc_441CD0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp-10h+arg_18] edi +
movzx ebx byte ptr [edi] +
mov ebp edi +
add edi 1 +
mov dword ptr [esp+0] offset a0 +
movsx eax bl +
mov [esp-10h+arg_0] eax +
call strchr  +
test eax eax +
jnz loc_441CF0  +
cmp bl 2Ah +
jz loc_441D80  +
lea eax [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] eax +
mov [esp+0] ebp +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
lea edi [eax+esi] +
cmp bl 2Eh +
jnz loc_441D49  +
jmp loc_441DB3  +
mov [esp-10h+arg_18] ecx +
movzx ebx byte ptr [ebp+1] +
movsx eax bl +
mov ebp ecx +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset aHll +
call strchr  +
lea ecx [ebp+1] +
test eax eax +
jnz loc_441D41  +
lea eax [ebx-45h] +
cmp al 33h +
lea esi [edi+1Eh] +
ja loc_441DEB  +
movzx eax al +
jmp ds:off_467D8C[eax*4]  +
mov eax [esp-10h+arg_40] +
mov ecx edi +
mov ebx [esp-10h+arg_40] +
mov [esp-10h+arg_18] edi +
mov eax [eax] +
mov edx eax +
mov [esp-10h+arg_8] eax +
mov eax [ebx] +
sar edx 1Fh +
xor eax edx +
sub eax edx +
lea edi [eax+esi] +
mov eax ebx +
movzx ebx byte ptr [ecx] +
add eax 4 +
mov [esp-10h+arg_40] eax +
cmp bl 2Eh +
jnz loc_441D49  +
lea eax [ecx+1] +
mov [esp-10h+arg_18] eax +
cmp byte ptr [ecx+1] 2Ah +
jz loc_441E1D  +
lea esi [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] esi +
mov [esp+0] eax +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
add edi eax +
jmp loc_441D49  +
add [esp-10h+arg_40] 4 +
lea edx [ebp+1] +
mov [esp-10h+arg_18] edx +
jmp loc_441CDF  +
mov eax [esp-10h+arg_40] +
lea edi [eax+4] +
mov eax [eax] +
mov [esp+0] eax +
call strlen  +
mov [esp-10h+arg_40] edi +
add esi eax +
jmp loc_441DEB  +
add [esp-10h+arg_40] 8 +
lea esi [edi+151h] +
jmp loc_441DEB  +
mov eax [esp-10h+arg_40] +
lea edx [ecx+2] +
mov [esp-10h+arg_18] edx +
add [esp-10h+arg_40] 4 +
mov esi [eax] +
mov ebx [eax] +
sar esi 1Fh +
xor ebx esi +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
mov ecx edx +
sub eax esi +
add edi eax +
jmp loc_441D49  +
***
cmp edx 4Bh +
ja loc_441EA7  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_467FE0[edx*4]  +
test ecx ecx +
jz loc_441EA3  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_441E92  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_441E92  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_441EA3  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_441E66  +
xor eax eax +
jmp loc_441E92  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_441ED6  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_441ED6  +
test edx edx +
jz loc_441ED6  +
test ecx ecx +
jnz loc_441EE0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_441F55  +
test dl dl +
jnz loc_441F61  +
cmp al 4Bh +
jnz loc_441FA0  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_441E50  +
test eax eax +
mov [esi] eax +
jz loc_441F95  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_441F17  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_441F80  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_441F36  +
test cl cl +
jz loc_441F27  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_441F36  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_441FE3  +
cmp al 46h +
jnz loc_441FE3  +
cmp esi ebp +
jnz loc_441FCA  +
lea esi [esi+0] +
jmp loc_441FE3  +
cmp eax 1Bh +
jz loc_441FF0  +
cmp eax 19h +
jnz loc_441FC3  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_441FE3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_441FB2  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_441FCA  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_441FC3  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_442040  +
test dl dl +
jnz loc_442044  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_441E50  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_442039  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_442023  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jz loc_4420C8  +
cmp cl 2Eh +
jnz loc_4420A2  +
lea esi [esi+0] +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_4420A2  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_442067  +
lea esi [esi+0] +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_442090  +
cmp cl 2Eh +
jz loc_442070  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_441EB0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+0Ch+var_C] eax +
mov eax esi +
call sub_441E50  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [edx+1] +
lea ebx [eax-61h] +
cmp bl 19h +
jbe loc_4420DA  +
cmp al 5Fh +
mov ebx edx +
jnz loc_442067  +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_4420F5  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_4420E8  +
cmp cl 5Fh +
jz loc_4420E8  +
jmp loc_442067  +
***
mov ecx [eax+0Ch] +
cmp byte ptr [ecx] 53h +
jz loc_442110  +
xor eax eax +
retn   +
push ebp  +
push edi  +
push esi  +
push ebx  +
lea ebx [ecx+1] +
sub esp 0Ch +
mov [eax+0Ch] ebx +
cmp byte ptr [ecx+1] 0 +
jnz loc_442170  +
xor ecx ecx +
mov ebx [eax+8] +
shr ebx 3 +
and ebx 1 +
test edx edx +
jz loc_442145  +
test bl bl +
jnz loc_442145  +
mov edx [eax+0Ch] +
movzx edx byte ptr [edx] +
sub edx 43h +
cmp dl 1 +
setbe bl  +
movzx ebx bl +
mov edx offset unk_468D40 +
lea esi [esi+0] +
cmp cl [edx] +
jz loc_4421F5  +
add edx 1Ch +
cmp edx offset unk_468E04 +
jnz loc_442150  +
xor eax eax +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx+2] +
mov [eax+0Ch] ebx +
movsx ecx byte ptr [ecx+1] +
lea ebx [ecx-30h] +
cmp bl 9 +
ja loc_44229B  +
cmp cl 5Fh +
jz loc_4421F1  +
lea ebx [ecx-30h] +
xor edx edx +
cmp bl 9 +
ja loc_4421C0  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-30h] +
cmp edx ebx +
ja loc_442163  +
mov edx [eax+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_4421D1  +
lea ecx [edx+1] +
mov [eax+0Ch] ecx +
movsx ecx byte ptr [edx] +
cmp cl 5Fh +
jz loc_4421D7  +
mov edx ebx +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_442195  +
lea ebx [ecx-41h] +
cmp bl 19h +
ja loc_442163  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-37h] +
jmp loc_44219C  +
xor ecx ecx +
mov edx ebx +
jmp loc_4421B8  +
add ebx 1 +
cmp ebx [eax+20h] +
jnb loc_442163  +
add dword ptr [eax+28h] 1 +
mov eax [eax+1Ch] +
mov eax [eax+ebx*4] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_4421DA  +
mov esi [edx+14h] +
test esi esi +
mov [esp+1Ch+var_18] esi +
jz loc_44228B  +
mov ecx [eax+14h] +
mov ebp [eax+18h] +
mov edi [edx+18h] +
mov [esp+1Ch+var_1C] 0 +
cmp ecx ebp +
mov [esp+1Ch+var_14] edi +
jge loc_442246  +
mov esi [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_442246  +
mov esi [esp+1Ch+var_18] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_1C] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_14] +
mov [edi+8] esi +
mov esi [esp+1Ch+var_1C] +
mov [eax+2Ch] esi +
test ebx ebx +
jz loc_442293  +
mov esi [edx+0Ch] +
mov ebx [edx+10h] +
add [eax+30h] ebx +
cmp ecx ebp +
jge loc_442163  +
mov edx [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edx [edx+edi*4] +
test edx edx +
jz loc_442163  +
mov dword ptr [edx] 18h +
mov eax edx +
mov [edx+4] esi +
mov [edx+8] ebx +
jmp loc_442165  +
mov ebp [eax+18h] +
mov ecx [eax+14h] +
jmp loc_44224C  +
mov esi [edx+4] +
mov ebx [edx+8] +
jmp loc_442256  +
cmp cl 5Fh +
jz loc_442186  +
lea ebx [ecx-41h] +
cmp bl 19h +
jbe loc_44218B  +
jmp loc_442125  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_4422F0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_4422D5  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_442384  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_442393  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_442360  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_442351  +
xor eax eax +
jmp loc_442377  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_4423D5  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_4423D1  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_442340  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_442408  +
cmp al 6Eh +
jz loc_442401  +
lea eax [ebx+0Ch] +
call sub_442340  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_442412  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_44240A  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_442431  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4423E0  +
test eax eax +
js loc_44242C  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_44242C  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_44242C  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_442480  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_442340  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_442340  +
test eax eax +
mov esi eax +
jle loc_442554  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_442558  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_442510  +
cmp esi 9 +
jle loc_4424F7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global__0 +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_442520  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_441EB0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_4424D6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_4424D6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_442530  +
cmp al 5Fh +
jz loc_442530  +
cmp al 24h +
jnz loc_4424F7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_4424F7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNam_0 +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_441EB0  +
jmp loc_442502  +
xor eax eax +
jmp loc_442505  +
xor eax eax +
lea esi [esi+0] +
jmp loc_442502  +
***
push ebx  +
mov ebx eax +
jnz loc_44258E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_442585  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_4425C0  +
cmp edx 76h +
jnz loc_442580  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_442340  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_442580  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_442340  +
jmp loc_4425C8  +
lea eax [ebx+0Ch] +
call sub_442340  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_442582  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_442582  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_442627  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_442620  +
cmp dword ptr [eax] 2Fh +
jnz loc_442620  +
cmp edx 0 +
jg loc_44260B  +
jmp loc_442617  +
cmp dword ptr [eax] 2Fh +
jnz loc_442620  +
test edx edx +
jz loc_442623  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_442602  +
retn   +
jz loc_442623  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_442675  +
cmp dword ptr [ebx] 4Ah +
ja loc_442660  +
mov edx [ebx] +
jmp ds:off_468130[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_442640  +
test eax eax +
jnz loc_442677  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_44264D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_4425E0  +
test eax eax +
jz loc_442675  +
cmp dword ptr [eax] 2Fh +
jnz loc_442675  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+28h] +
mov edi [esp+24h] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_442700  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4426D0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
mov edx [esp+20h] +
add eax [esi+4] +
mov [esp+8] edi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi+0Ch] +
test edx edx +
jnz loc_4426C3  +
test ebx ebx +
jnz loc_442712  +
cmp eax 2 +
mov bl 2 +
jbe loc_442718  +
add ebx ebx +
cmp eax ebx +
ja loc_442712  +
mov eax [esi] +
mov [esp+4] ebx +
mov [esp] eax +
call realloc  +
test eax eax +
jz loc_442731  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_4426BC  +
***
mov eax [esi] +
mov [esp] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_4426C3  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ch +
jz loc_442780  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
cmp dl 5Fh +
setz bl  +
cmp dl 5Ah +
jnz loc_4427B3  +
test bl bl +
jnz loc_4427B7  +
xor eax eax +
cmp dl 5Ah +
jz loc_4427C8  +
cmp dl 45h +
jnz loc_442771  +
add ecx 1 +
mov [esi+0Ch] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_4427E0  +
lea ecx [eax+2] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+2] +
xor eax eax +
cmp dl 5Ah +
jnz loc_4427A0  +
add ecx 1 +
xor edx edx +
mov [esi+0Ch] ecx +
mov eax esi +
call sub_4436D0  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_4427A0  +
mov eax esi +
call sub_442D90  +
test eax eax +
mov edi eax +
jz loc_442771  +
cmp dword ptr [eax] 27h +
jz loc_442862  +
mov edx [esi+0Ch] +
mov ebp 3Bh +
movzx eax byte ptr [edx] +
cmp al 6Eh +
jz loc_442850  +
cmp al 45h +
jz loc_442877  +
test al al +
jz loc_442771  +
lea ebx [edx+1] +
jmp loc_44281D  +
add ebx 1 +
test al al +
jz loc_442771  +
mov [esi+0Ch] ebx +
movzx eax byte ptr [ebx] +
cmp al 45h +
jnz loc_442812  +
mov ecx ebx +
sub ecx edx +
mov eax esi +
call sub_441EB0  +
mov ecx edi +
mov edx ebp +
mov [esp+20h+var_20] eax +
mov eax esi +
call sub_441E50  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_4427A0  +
lea ecx [edx+1] +
mov bp 3Ch +
mov [esi+0Ch] ecx +
movzx eax byte ptr [edx+1] +
mov edx ecx +
jmp loc_442801  +
mov eax [eax+4] +
mov edx [eax+10h] +
test edx edx +
jz loc_4427F2  +
mov eax [eax+4] +
sub [esi+30h] eax +
jmp loc_4427F2  +
xor ecx ecx +
jmp loc_44282B  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov ecx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [ecx] +
sub eax 49h +
cmp al 1 +
ja loc_442917  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 45h +
jz loc_442964  +
mov [esp+20h+var_4] 0 +
lea esi [esp+20h+var_4] +
jmp loc_4428F2  +
sub eax 49h +
cmp al 1 +
ja loc_442930  +
mov eax ebx +
call sub_442880  +
mov ecx eax +
test ecx ecx +
jz loc_442917  +
mov [esp+20h+var_20] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_441E50  +
test eax eax +
mov [esi] eax +
jz loc_442917  +
mov edx [ebx+0Ch] +
lea esi [eax+8] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_442950  +
cmp al 4Ch +
jz loc_442940  +
jle loc_4428B8  +
cmp al 58h +
lea esi [esi+0] +
jnz loc_442930  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_4441E0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jz loc_442920  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_4428C8  +
mov eax ebx +
call sub_442D90  +
mov ecx eax +
jmp loc_4428C8  +
mov eax ebx +
call sub_442760  +
mov ecx eax +
jmp loc_4428C8  +
add edx 1 +
mov eax [esp+20h+var_4] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add ecx 2 +
mov edx 2Fh +
mov [ebx+0Ch] ecx +
mov eax ebx +
xor ecx ecx +
mov [esp+20h+var_20] 0 +
call sub_441E50  +
jmp loc_442919  +
***
jmp sub_442990  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
sub eax 4Ch +
cmp al 0Eh +
ja loc_442AF0  +
movzx eax al +
jmp ds:off_468270[eax*4]  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_4436D0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_442C70  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 74h +
jz loc_442B44  +
xor edx edx +
mov eax esi +
call sub_442100  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_442A29  +
mov eax esi +
call sub_442880  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_441E50  +
mov ebx eax +
jmp loc_442A29  +
mov eax esi +
call sub_443E00  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_441F00  +
test eax eax +
mov edi eax +
jz loc_4429D1  +
xor edx edx +
mov eax esi +
call sub_442000  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
test bl bl +
jz loc_442AE3  +
cmp bl 44h +
jz loc_442C06  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_442BB0  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_442BB0  +
cmp bl 43h +
jz loc_442BB0  +
cmp bl 55h +
jz loc_442BB0  +
cmp bl 4Ch +
nop   +
jz loc_442BB0  +
cmp bl 53h +
jz loc_442C50  +
cmp bl 49h +
jz loc_442C30  +
cmp bl 54h +
jz loc_442C61  +
cmp bl 45h +
jz loc_442D4D  +
cmp bl 4Dh +
jnz loc_442AE3  +
test ebp ebp +
jz loc_442AE3  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_442A68  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_4429D3  +
mov eax esi +
call sub_443E00  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_442A29  +
test eax eax +
jz loc_4429D1  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_4429D1  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_442880  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_441E50  +
mov ebx eax +
jmp loc_442A29  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_443E00  +
mov ecx 3 +
mov edx offset aStd_0 +
mov ebx eax +
mov eax esi +
call sub_441EB0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_441E50  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_442A29  +
test edi edi +
jz loc_4429D1  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_4429D1  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_4429FF  +
mov eax esi +
call sub_443E00  +
test ebp ebp +
jz loc_442C20  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_441E50  +
mov ebp eax +
cmp bl 53h +
jz loc_442BFB  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_442C24  +
test ebp ebp +
jz loc_442AE3  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_442AE3  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_442A64  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_442BB0  +
mov eax esi +
call sub_442D90  +
test ebp ebp +
jnz loc_442BBB  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_442BCE  +
mov ebx 45h +
jmp loc_442A71  +
test ebp ebp +
jz loc_442AE3  +
mov eax esi +
call sub_442880  +
mov edx 4 +
jmp loc_442BC0  +
mov edx 1 +
mov eax esi +
call sub_442100  +
jmp loc_442BB7  +
mov eax esi +
call sub_442420  +
jmp loc_442BB7  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_442D22  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_442CF1  +
mov eax esi +
call sub_442990  +
test eax eax +
mov edi eax +
jz loc_442CA4  +
mov eax [eax] +
cmp eax 44h +
jz loc_442CA4  +
cmp eax 46h +
jnz loc_442D10  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_442CD4  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_442CD4  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_442CD4  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_441E50  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4423E0  +
test eax eax +
mov ebp eax +
jns loc_442C8B  +
xor ebx ebx +
jmp loc_4429D3  +
mov eax esi +
call sub_442470  +
test eax eax +
jnz loc_442CA4  +
xor ebx ebx +
jmp loc_4429D3  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_442470  +
test eax eax +
jz loc_4429D1  +
mov ecx 0Eh +
mov edx offset aStringLitera_0 +
mov eax esi +
call sub_441EB0  +
mov [esp+30h+var_30] eax +
jmp loc_442CD7  +
test ebp ebp +
mov [edi] ebp +
jz loc_4429D1  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_442D6A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_4429D1  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_442A29  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [eax+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_442E02  +
cmp al 56h +
jz loc_442E02  +
cmp al 4Bh +
jz loc_442E02  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_442DF8  +
movzx edx dl +
jmp ds:off_4682B4[edx*4]  +
mov eax ebx +
call sub_4441E0  +
mov edx 41h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_442DF8  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_442DF8  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_442E9E  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_441F00  +
test eax eax +
mov esi eax +
jz loc_442DF8  +
mov eax ebx +
call sub_442D90  +
test eax eax +
mov edx eax +
mov [esi] eax +
jz loc_442DF8  +
mov eax [eax] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_442E56  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_442DF8  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_442DF8  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_442E2E  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_4424A0  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
test eax eax +
jz loc_442DF8  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_442DF8  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_442990  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_4434DB  +
sub eax 30h +
cmp al 9 +
ja loc_443539  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_442EF0  +
sub ecx edx +
mov eax ebx +
call sub_441EB0  +
test eax eax +
mov esi eax +
jz loc_442F1B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4434DD  +
xor eax eax +
jmp loc_442F85  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_442D90  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 59h +
jz loc_44350D  +
mov edx 1 +
mov eax ebx +
call sub_443670  +
mov edx eax +
mov eax ebx +
call sub_442000  +
mov edx [ebx+0Ch] +
mov ecx eax +
xor eax eax +
cmp byte ptr [edx] 45h +
jz loc_443500  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_442D90  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_442DF8  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_442DF8  +
movzx eax al +
jmp ds:off_4683E0[eax*4]  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
lea edi [esp+2Ch+var_10] +
call sub_442D90  +
mov ecx 1 +
mov edx edi +
mov ebp eax +
mov eax ebx +
call sub_441F00  +
test eax eax +
mov esi eax +
jz loc_442F1B  +
mov eax ebx +
call sub_442D90  +
test eax eax +
mov [esi] eax +
jz loc_442F1B  +
cmp esi edi +
jz loc_443067  +
mov edx [eax] +
lea ecx [edx-1Fh] +
cmp ecx 1 +
jbe loc_443556  +
cmp edx 29h +
jz loc_443067  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_442F1B  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_442F1B  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx 2Bh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_441E50  +
jmp loc_442F85  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_442D90  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_442D90  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_442D90  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_44312B  +
cmp al 5Fh +
jz loc_44312B  +
sub eax 41h +
cmp al 19h +
ja loc_443518  +
xor edx edx +
mov eax ebx +
call sub_442100  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_442DFA  +
mov eax ebx +
call sub_442880  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
mov eax ebx +
call sub_442420  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_442E96  +
test eax eax +
jz loc_442DF8  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_442DF8  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_443144  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_4424A0  +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_442D90  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov [esp+2Ch+var_10] eax +
jmp loc_442E96  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4694C0h[eax*4] +
jl loc_4434A9  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_442DFA  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_46972C +
mov dword ptr [eax+4] offset off_46972C +
lea esi [esi+0] +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_442DFA  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_469704 +
mov dword ptr [eax+4] offset off_469704 +
jmp loc_443240  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_4696C8 +
mov dword ptr [eax+4] offset off_4696C8 +
jmp loc_443240  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_4696F0 +
mov dword ptr [eax+4] offset off_4696F0 +
jmp loc_443240  +
cmp byte ptr [ecx+2] 5Fh +
jz loc_443580  +
mov eax ebx +
call sub_4423A0  +
mov esi eax +
test esi esi +
jz loc_442F1B  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_442F85  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_442D90  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_441E50  +
jmp loc_442F85  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_469718 +
mov dword ptr [eax+4] offset off_469718 +
jmp loc_443240  +
mov eax ebx +
call sub_442D90  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_442F85  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_469740 +
mov dword ptr [eax+4] offset off_469740 +
jmp loc_443240  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4434CE  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_443594  +
mov dword ptr [eax] 27h +
mov edx offset off_4696DC +
mov dword ptr [eax+4] offset off_4696DC +
jmp loc_443240  +
mov ecx 4 +
mov edx offset aAuto_1 +
mov eax ebx +
call sub_441EB0  +
jmp loc_442DFA  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_44343D  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_44356F  +
mov eax ebx +
call sub_442D90  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_442DF8  +
lea eax [ebx+0Ch] +
call sub_442340  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_44349C  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_442DFA  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_44359F  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_4431F6  +
mov edx large ds:4 +
xor eax eax +
jmp loc_443240  +
xor esi esi +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_442D90  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_441E50  +
jmp loc_442F85  +
add edx 1 +
mov eax ecx +
mov [ebx+0Ch] edx +
jmp loc_442F85  +
add ecx 2 +
mov [ebx+0Ch] ecx +
jmp loc_442F60  +
mov eax ebx +
call sub_442990  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_442DF8  +
cmp dword ptr [eax] 18h +
jnz loc_442E9E  +
jmp loc_442DFA  +
mov eax ebx +
nop   +
lea esi [esi+0] +
call sub_4441E0  +
test eax eax +
mov esi eax +
jnz loc_442F0F  +
xor eax eax +
jmp loc_442F85  +
mov ecx [esp+2Ch+var_10] +
mov edx [eax+4] +
mov [eax+4] ecx +
mov eax [esi] +
mov [esp+2Ch+var_10] eax +
mov [esi] edx +
mov edx [edx] +
jmp loc_44303E  +
lea eax [ebx+0Ch] +
call sub_442340  +
mov esi [esp+2Ch+var_10] +
jmp loc_443463  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_4441E0  +
mov esi eax +
jmp loc_443306  +
mov edx large ds:4 +
jmp loc_443240  +
mov esi large ds:4 +
jmp loc_4431F6  +
***
mov ebx eax +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_4436A7  +
xor esi esi +
test edx edx +
jnz loc_4436AD  +
mov eax ebx +
call sub_4435B0  +
test eax eax +
jz loc_4436C0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_441E50  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_442D90  +
test eax eax +
mov esi eax +
jnz loc_443685  +
lea esi [esi+0] +
xor eax eax +
jmp loc_4436A1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_4437B0  +
cmp cl 47h +
jz loc_4437B0  +
mov eax ebx +
mov edi edx +
call sub_442990  +
test eax eax +
mov esi eax +
jnz loc_443762  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_4437C8  +
test dl dl +
jz loc_4437C8  +
cmp dl 45h +
jz loc_4437C8  +
mov edx [eax] +
cmp edx 4 +
jz loc_4437D0  +
jb loc_443740  +
sub edx 1Ch +
cmp edx 4 +
ja loc_443740  +
mov eax [eax+4] +
test eax eax +
jnz loc_443721  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_443670  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_443700  +
test byte ptr [ebx+8] 1 +
jnz loc_443700  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_443783  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_443776  +
cmp edx 2 +
mov eax esi +
jnz loc_4437C8  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_4437A4  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_443797  +
mov [esi+8] eax +
mov eax esi +
jmp loc_4437C8  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_443810  +
cmp dl 47h +
jz loc_4437E5  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_443840  +
cmp dword ptr [eax] 33h +
ja loc_443840  +
mov edx [eax] +
jmp ds:off_4684A4[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4437C6  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_4437C6  +
movzx edx dl +
jmp ds:off_468574[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4437C6  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_4437C6  +
movzx eax al +
jmp ds:off_46863C[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_4437D7  +
nop   +
mov edx 1 +
jmp loc_443742  +
lea eax [ebx+0Ch] +
call sub_442340  +
cmp eax 1 +
jle loc_4437C6  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_4437C6  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_4437C6  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_4437C6  +
xor esi esi +
cmp al 24h +
jz loc_443BD0  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_4438A9  +
cmp al 24h +
jz loc_4438A9  +
add esi 1 +
cmp esi ebp +
jl loc_443896  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_441EB0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_4437C6  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_443C20  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_441E50  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_4437C6  +
test ebp ebp +
jg loc_443881  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442990  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442990  +
mov esi eax +
mov eax ebx +
call sub_4423A0  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
cmp byte ptr [eax+2] 0 +
jz loc_443C29  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_443C29  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov edx 76h +
mov eax ebx +
call sub_442570  +
test eax eax +
jz loc_4437C6  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442990  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442D90  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442D90  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_442340  +
test eax eax +
js loc_4437C6  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_4437C6  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_442D90  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov edx 68h +
mov eax ebx +
call sub_442570  +
test eax eax +
jz loc_4437C6  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
xor edx edx +
mov eax ebx +
call sub_442570  +
test eax eax +
nop   +
jz loc_4437C6  +
xor edx edx +
mov eax ebx +
call sub_442570  +
test eax eax +
jz loc_4437C6  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442990  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
add ecx 0Fh +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_442D90  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
add ecx 0Ah +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_442D90  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442D90  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442D90  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov eax ebx +
call sub_442D90  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_443C53  +
cmp al 5Fh +
jz loc_443C4C  +
cmp al 24h +
jnz loc_4437C6  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_443C5A  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_443C5A  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_4438C6  +
mov [esp+1Ch+var_10] eax +
jmp loc_4438ED  +
xor edx edx +
mov eax ebx +
call sub_4436D0  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
jmp loc_4437C8  +
mov ecx 2Eh +
jmp loc_443BE9  +
mov ecx 2Fh +
jmp loc_443BE9  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_4437C6  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_443D14  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_443DF4  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_443D86  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_443D1B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_4424A0  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_443D7C  +
mov edi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [edi+10h] +
mov [edi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_443D7C  +
test eax eax +
jz loc_443D7C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_443D7E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_443D38  +
mov ebx edi +
cmp cl bl +
jle loc_443D73  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_443D7C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_468FA0[ecx] +
lea ebp off_468FA0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_443D28  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_443DC0  +
cmp cl [esp+1Ch+var_11] +
jg loc_443D2E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_443D38  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_443D1B  +
mov eax edi +
cmp al 63h +
jnz loc_443D1B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_442D90  +
mov edx 33h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_441E50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_443D7E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_443D7E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_443CAC  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4444D5  +
cmp al 54h +
jz loc_4444E3  +
cmp al 73h +
jz loc_444327  +
cmp al 66h +
jz loc_4442D0  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_444240  +
mov eax ebx +
call sub_443E00  +
test eax eax +
jz loc_4444B0  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_444501  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_4444C0  +
cmp al 74h +
setz cl  +
jnz loc_44477A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_444472  +
mov eax ebx +
call sub_443C70  +
test eax eax +
mov ebp eax +
jz loc_4444B0  +
mov eax [eax] +
cmp eax 31h +
jz loc_444364  +
cmp eax 32h +
jz loc_4444F1  +
cmp eax 33h +
jnz loc_4444B0  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_444605  +
mov eax ebx +
call sub_4441E0  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_4442B8  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_441E50  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
cmp byte ptr [edx+1] 70h +
jnz loc_44425D  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_4445F8  +
mov eax ebx +
call sub_4423E0  +
add eax 1 +
jz loc_4444B0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4444B0  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_4444B0  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_444234  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_444520  +
cmp al 70h +
jnz loc_44425D  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_4441E0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset unk_46870F +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_444644  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_444733  +
jle loc_444620  +
cmp edx 2 +
jz loc_444560  +
cmp edx 3 +
jnz loc_4444B0  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_46871B +
mov ecx 3 +
cmps   +
jz loc_444661  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_4444B0  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_4444A6  +
mov edx 5Fh +
mov eax ebx +
call sub_444790  +
mov esi eax +
mov eax ebx +
call sub_442D90  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_4446E6  +
cmp dl 70h +
jz loc_444712  +
cmp dl 69h +
jnz loc_4444B0  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4444B0  +
mov eax ebx +
call sub_4441E0  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_441E50  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
xor esi esi +
test cl cl +
jnz loc_444650  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_444790  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
cmp al 77h +
jz loc_4443EF  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_44425D  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_444217  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_442760  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_442420  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_44439F  +
mov eax ebx +
call sub_442880  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_442D90  +
mov esi eax +
mov eax ebx +
call sub_443E00  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_4446B8  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_444692  +
mov eax ebx +
call sub_4441E0  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_468712 +
mov ecx 3 +
cmps   +
jz loc_44467F  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_468715 +
mov ecx 3 +
cmps   +
jz loc_4445B8  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_468718 +
mov ecx 3 +
cmps   +
jnz loc_4446D8  +
mov eax ebx +
call sub_443E00  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4446F3  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_441E50  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_4442F6  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_444790  +
jmp loc_4442A0  +
test edx edx +
jnz loc_4444B0  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_444234  +
mov eax ebx +
call sub_442D90  +
jmp loc_4442B5  +
mov eax ebx +
call sub_442D90  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_44447C  +
mov eax ebx +
call sub_4441E0  +
mov esi eax +
mov eax ebx +
call sub_4441E0  +
mov edi eax +
mov eax ebx +
call sub_4441E0  +
jmp loc_444438  +
mov edx 45h +
mov eax ebx +
call sub_444790  +
mov esi eax +
jmp loc_4445CD  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_4446A8  +
sub eax 72h +
cmp al 1 +
ja loc_44456F  +
mov eax ebx +
call sub_442D90  +
mov [esp+1Ch+var_10] eax +
jmp loc_44457A  +
mov eax ebx +
call sub_442880  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov [esp+1Ch+var_1C] eax +
jmp loc_444547  +
mov eax ebx +
call sub_4441E0  +
mov esi eax +
jmp loc_4445CD  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_444438  +
mov eax ebx +
call sub_442880  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_441E50  +
mov esi eax +
jmp loc_4445CD  +
cmp byte ptr [eax+1] 69h +
jnz loc_4444B0  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_444790  +
jmp loc_444438  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_44474A  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_444758  +
cmp dl 70h +
jz loc_444758  +
cmp eax 33h +
jnz loc_444299  +
jmp loc_44428D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_44474A  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_44474A  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_44474A  +
cmp al 69h +
jz loc_444253  +
jmp loc_44425D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [eax+0Ch] +
mov [esp+28h+var_C] 0 +
lea esi [esp+28h+var_C] +
cmp [eax] dl +
jnz loc_4447D7  +
jmp loc_444801  +
mov ecx eax +
mov edx 2Eh +
mov [esp+28h+var_28] 0 +
mov eax ebx +
call sub_441E50  +
test eax eax +
mov [esi] eax +
jz loc_4447E2  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
mov ecx edi +
cmp [eax] cl +
jz loc_4447F0  +
mov eax ebx +
call sub_4441E0  +
test eax eax +
jnz loc_4447B0  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+28h+var_C] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
xor ecx ecx +
mov [ebx+0Ch] eax +
mov edx 2Eh +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_441E50  +
jmp loc_4447E4  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_4448A3  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_44485C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_4448A3  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444841  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_444844  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 7Ch +
mov eax [ecx] +
mov [esp+88h+var_7C] edx +
cmp eax 4Bh +
ja loc_446526  +
jmp ds:off_468984[eax*4]  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_58] edi +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
mov esi [esp+88h+var_50] +
test esi esi +
jnz loc_44491E  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_4480B0  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+114h] +
test edi edi +
jz loc_447E1E  +
mov edx edi +
jmp loc_444948  +
mov edx [edx] +
test edx edx +
jz loc_4448D7  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_444942  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_4448D7  +
cmp eax ecx +
jnz loc_444942  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_444928  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4449A3  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_444988  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_44498B  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasF_0 +
jmp loc_444A23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468871h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4467F3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444A00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444A03  +
mov eax [ebx+100h] +
mov esi offset aReferenceTem_0 +
jmp loc_444AA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468859h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4465C6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444A80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444A83  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFu_0 +
jmp loc_444B23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468843h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4465B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444B00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444B03  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunct_0 +
jmp loc_444BA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468829h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446686  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444B80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444B83  +
mov eax [ebx+100h] +
mov esi offset aGuardVariabl_0 +
jmp loc_444C23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468812h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446673  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444C00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444C03  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor_0 +
jmp loc_444CA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4687FEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4466A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444C80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444C83  +
mov eax [ebx+100h] +
mov esi offset aCovariantRet_0 +
jmp loc_444D23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4687EEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4465A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444D00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444D03  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunk_0 +
jmp loc_444DA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4687D3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4467E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444D80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444D83  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualTh_0 +
jmp loc_444E23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4687C1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4467C6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444E00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444E03  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFo_0 +
jmp loc_444EA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4687ABh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4467B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444E80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444E83  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoName_0 +
jmp loc_444F23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46879Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4467A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444F00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444F03  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor_0 +
jmp loc_444FA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468787h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446788  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_444F80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_444F83  +
mov eax [ebx+100h] +
mov esi offset aConstruction_0 +
jmp loc_445023  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468774h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4466F3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445000  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445003  +
mov eax [ebx+100h] +
mov esi offset aVttFor_0 +
jmp loc_4450A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46875Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4466E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445083  +
mov eax [ebx+100h] +
mov esi offset aVtableFor_0 +
jmp loc_445123  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468752h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4466C6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445100  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445103  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447628  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+8] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edi [ecx+4] +
mov [esp+88h+var_70] eax +
test edi edi +
jz loc_447A48  +
mov eax [ebx+110h] +
xor edx edx +
xor esi esi +
mov [esp+88h+var_6C] ecx +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_78] eax +
mov ecx [esp+88h+var_74] +
add esi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [edi] +
mov [ebx+114h] eax +
mov [eax+4] edi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_446545  +
cmp edx 4 +
mov ebp [esp+88h+var_6C] +
jz loc_447DBE  +
cmp edx 2 +
jnz loc_4452B3  +
mov ecx [edi+8] +
mov eax [ecx] +
cmp eax 45h +
jz loc_447E75  +
sub eax 1Ch +
cmp eax 4 +
ja loc_4452B3  +
mov eax esi +
shl eax 4 +
add eax [esp+88h+var_78] +
cmp esi 4 +
jz loc_447E34  +
mov [esp+88h+var_6C] edi +
mov edi [esp+88h+var_74] +
jmp loc_445275  +
add eax 10h +
cmp esi 4 +
jz loc_447E34  +
mov edx [eax-0Ch] +
add esi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] edi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_445269  +
mov edi [esp+88h+var_6C] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
cmp dword ptr [edi] 4 +
jz loc_447E25  +
test esi esi +
jz loc_447A95  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
mov ebp [edi] +
test ebp ebp +
jz loc_4452FC  +
sub edi 10h +
test esi esi +
jz loc_447A95  +
mov ebp [edi] +
sub esi 1 +
test ebp ebp +
jnz loc_4452E8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447EB9  +
lea edx [eax+1] +
mov ecx [edi-4] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 20h +
mov eax ebx +
mov byte ptr [ebx+104h] 20h +
call sub_4480B0  +
jmp loc_4452E8  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_448090  +
and edi 4 +
mov eax [ebx+100h] +
jnz loc_446563  +
mov esi offset asc_468724 +
jmp loc_44537A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_468724+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446582  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445357  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44535A  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aAbi_0 +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
jmp loc_445403  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468723h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446806  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4453E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4453E3  +
mov edx [ecx+4] +
mov eax ebx +
call sub_442640  +
test eax eax +
jz loc_447DD9  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_446C76  +
mov edx [eax+4] +
test edx edx +
jz loc_446C76  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_445464  +
mov eax [ebp+4] +
mov [esp+88h+var_74] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+88h+var_70] eax +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov [ebx+11Ch] edi +
call sub_448090  +
cmp edi [esp+88h+var_70] +
jge loc_446535  +
mov eax [ebx+100h] +
mov ebp offset asc_4688B8 +
jmp loc_4454E3  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_4688B8+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446535  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_4454C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4454C3  +
mov eax [ebx+100h] +
mov esi offset aNonTransacti_0 +
jmp loc_445563  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688A3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4466B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445540  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445543  +
test byte ptr [esp+88h+var_7C] 4 +
jnz loc_447552  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_444928  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4455F2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4455D3  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_4455D6  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aClone_0 +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
jmp loc_445683  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46897Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446840  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445660  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445663  +
lea edx [ecx+4] +
mov eax ebx +
call sub_4425E0  +
test eax eax +
jz loc_446FF0  +
cmp dword ptr [eax] 2Fh +
jz loc_446FD0  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov [ebx+110h] esi +
jmp loc_444928  +
mov eax [ebx+114h] +
test byte ptr [esp+88h+var_7C] 4 +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+88h+var_78] eax +
jz loc_44573F  +
mov esi [edx] +
test esi esi +
jnz loc_44573F  +
cmp dword ptr [edx+8] 6 +
jz loc_447B88  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_447995  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447704  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+8] +
call sub_448090  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_447A1D  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4476CD  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov eax [esp+88h+var_78] +
mov [ebx+114h] eax +
jmp loc_444928  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov edx [ecx+8] +
cmp dword ptr [edx] 37h +
jz loc_446EFF  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+88h+var_74] eax +
mov eax [eax] +
mov [esp+88h+var_78] edi +
cmp eax 31h +
jz loc_4470DD  +
cmp eax 33h +
jz loc_4471AB  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4493E0  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_449490  +
jmp loc_444928  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4493E0  +
jmp loc_444928  +
mov edi [ecx+4] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_446D79  +
mov esi offset aThis_0 +
jmp loc_445893  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468917h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445870  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_445873  +
mov eax [ebx+100h] +
mov esi offset aDecltype_0 +
jmp loc_445913  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46890Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446963  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4458F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4458F3  +
mov eax [ecx+4] +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_445981  +
mov edx eax +
mov ebp [esp+88h+var_78] +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi ebp +
jz loc_444928  +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_4459E4  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_4459C5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_4459C8  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_4474A5  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_444928  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_448090  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_448090  +
jmp loc_444928  +
mov eax [ebx+100h] +
mov esi offset aJavaResource_0 +
jmp loc_445AB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468903h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446878  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445A90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_445A93  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_445B36  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_445B36  +
cmp esi 6 +
jbe loc_44785E  +
cmp esi 7 +
jnz loc_445B36  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_445B36  +
cmp dword ptr [edx+8] 1 +
jz loc_447E7F  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447813  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4477AC  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_447A57  +
cmp esi 8 +
jz loc_4479C0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_4457EC  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_4457EC  +
mov eax [eax+4] +
mov edi offset unk_46871B +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+88h+var_78] eax +
mov eax [edx+4] +
mov [esp+88h+var_74] eax +
mov eax [edx+8] +
mov [esp+88h+var_70] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_447CA5  +
mov eax ebx +
mov edx offset aNew_0 +
call sub_444820  +
mov eax [esp+88h+var_78] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_445C3A  +
mov edx [esp+88h+var_7C] +
mov ecx eax +
mov eax ebx +
call sub_449490  +
mov edx 20h +
mov eax ebx +
call sub_4422C0  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_74] +
mov edx edi +
call sub_448090  +
mov ecx [esp+88h+var_70] +
test ecx ecx +
jz loc_444928  +
mov edx edi +
mov eax ebx +
call sub_449490  +
jmp loc_444928  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_445C77  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
mov eax [ebp+8] +
test eax eax +
jz loc_444928  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_44720C  +
mov edi offset asc_4688B8 +
jmp loc_445CC3  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_4688B8+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446C2D  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_445CA0  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
mov edx [esp+88h+var_78] +
add dword ptr [ebx+120h] 1 +
jmp loc_445CA3  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_44700A  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_469560 +
jz loc_446FFF  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_44795E  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+8] 0 +
jz loc_446D09  +
mov esi offset a_accum_0 +
jmp loc_445D93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688B0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445D70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_445D73  +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ecx +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_448090  +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_445E2D  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_4480B0  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
jmp loc_444928  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov ecx eax +
mov [esp+88h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+88h+var_70] edi +
test esi esi +
mov [esp+88h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
jz loc_448052  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_448052  +
mov eax esi +
mov esi 1 +
mov [esp+88h+var_6C] ebp +
mov [esp+88h+var_74] ecx +
jmp loc_445EAF  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_445F00  +
mov edx [eax+8] +
test edx edx +
jnz loc_445EFA  +
cmp esi 3 +
ja loc_44773B  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+88h+var_58] +
mov [esp+edx+88h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+88h+var_58] edi +
mov edi [esp+88h+var_74] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_445EA2  +
mov ebp [esp+88h+var_6C] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov ecx [ebp+8] +
call sub_448090  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_444928  +
cmp esi 1 +
jz loc_447B7F  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov [esp+88h+var_78] ebp +
mov ebp [esp+88h+var_7C] +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
lea esi [esi+0] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_4480B0  +
cmp esi 1 +
jz loc_446EDF  +
sub esi 1 +
jmp loc_445F50  +
test byte ptr [esp+88h+var_7C] 20h +
jnz loc_447080  +
cmp dword ptr [ecx+4] 0 +
jz loc_445F8C  +
test byte ptr [esp+88h+var_7C] 40h +
jz loc_44774A  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_88] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_448E70  +
jmp loc_444928  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType_0 +
jmp loc_445FE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468974h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4469B3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_445FC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_445FC3  +
mov eax [ebx+100h] +
mov esi offset aLambda_0 +
jmp loc_446063  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468962h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446AB0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446040  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_446043  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestru_0 +
jmp loc_4460E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468959h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4469A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4460C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4460C3  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstr_0 +
jmp loc_446163  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46893Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446660  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446140  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_446143  +
mov eax [ebx+100h] +
mov esi offset aTransactionC_0 +
jmp loc_4461E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468888h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446950  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4461C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4461C3  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_446263  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688CDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446938  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446240  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_446243  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_4462E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688CDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446925  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4462C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4462C3  +
mov ebp [ecx+4] +
mov esi offset aOperator_2 +
mov eax [ebx+100h] +
mov edi [ebp+8] +
jmp loc_446366  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688C3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446890  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446343  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446346  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_4463C5  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447278  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov ecx esi +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447241  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_444928  +
test byte ptr [esp+88h+var_7C] 4 +
mov eax [ecx+4] +
jnz loc_446C8A  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_444928  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_446465  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_446446  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446449  +
mov eax [ecx+4] +
mov edx [eax] +
cmp edx 5 +
jz loc_4478E6  +
cmp edx 23h +
jz loc_446ED2  +
cmp [ebp+0] edx +
jz loc_446ED2  +
cmp edx 24h +
jnz loc_4448D1  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
test ecx ecx +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_4C] eax +
jnz loc_4448FE  +
jmp loc_4448FB  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
add edi 1 +
cmp edi esi +
jnz loc_445492  +
jmp loc_444928  +
mov edi [edi+4] +
test edi edi +
jz loc_447A48  +
add eax 10h +
cmp esi 4 +
jz loc_446C67  +
mov edx ebp +
jmp loc_4451F9  +
cmp eax 0FFh +
jz loc_447B11  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov edi [ebp+8] +
cmp dword ptr [edi] 45h +
jz loc_4472AF  +
mov edx [esp+88h+var_7C] +
mov ecx edi +
mov eax ebx +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor_0 +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
jmp loc_446600  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46885Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446646  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4465E1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4465E4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset aIn_0 +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
jmp loc_44672F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468779h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446775  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446710  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_446713  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44746E  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_444928  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4474E4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_4470B5  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_444928  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_4468DF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4468C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_4468C3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_449160  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44765F  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov eax [ebp+4] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4469D7  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_446A82  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_446A3B  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446A88  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_446A20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446A23  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_447696  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_444928  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset asc_468963 +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [ebx+100h] +
jmp loc_446AEF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468965h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446B35  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446AD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446AD3  +
mov eax [ebp+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_446B59  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_446C02  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_446BBB  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446C08  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_446BA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446BA3  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_44751B  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_444928  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov edi [ebx+120h] +
call sub_448090  +
cmp edi [ebx+120h] +
jnz loc_444928  +
cmp [ebx+100h] esi +
jnz loc_444928  +
sub esi 2 +
mov [ebx+100h] esi +
jmp loc_444928  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov eax [ebp+4] +
test esi esi +
mov [esp+88h+var_74] eax +
jnz loc_445489  +
jmp loc_444928  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_444928  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_446CC1  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_446CA2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446CA5  +
mov esi offset a_fract_0 +
jmp loc_446D33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688B7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_444928  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446D10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446D13  +
mov esi offset aParm_0 +
jmp loc_446D9F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 46891Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446DE5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_446D80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446D83  +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_80] edi +
mov esi eax +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_446E03  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_446EA7  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_446E60  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_446EAD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_446E45  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_446E48  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_447B48  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_444928  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_4448D7  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov [esp+88h+var_88] eax +
mov eax ebx +
call sub_448BF0  +
jmp loc_444928  +
mov ecx [ecx+4] +
mov eax [ecx+4] +
mov esi [eax] +
mov [esp+88h+var_78] eax +
cmp byte ptr [esi+1] 63h +
jz loc_447AA4  +
cmp dword ptr [ecx] 31h +
jz loc_447BBC  +
mov eax [ecx+4] +
mov edi offset unk_468712 +
mov ecx 3 +
mov esi [eax] +
cmps   +
mov ecx [edx+4] +
jnz loc_446F3D  +
cmp dword ptr [ecx] 3 +
jz loc_447C35  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_449490  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx_0 +
mov edx [eax+4] +
mov [esp+88h+var_78] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_447BF0  +
mov ecx 3 +
mov esi edx +
mov edi offset unk_468712 +
cmps   +
jnz loc_447C5A  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_449490  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_444928  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_444928  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_444928  +
mov edx 29h +
mov eax ebx +
call sub_4422C0  +
jmp loc_444928  +
mov edx [ebx+11Ch] +
jmp loc_446FDD  +
cmp dword ptr [eax] 2Fh +
jnz loc_446FF0  +
cmp edx 0 +
jle loc_447C1E  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_446FD8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov eax [ebx+100h] +
jmp loc_445D5C  +
mov eax [ebx+100h] +
mov esi offset a_sat_0 +
jmp loc_44703A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4688A9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_445D1B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_447017  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_44701A  +
mov esi [esp+88h+var_7C] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+88h+var_88] eax +
mov edx esi +
mov eax ebx +
call sub_448E70  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_444928  +
mov edx esi +
mov eax ebx +
call sub_448090  +
jmp loc_444928  +
cmp ecx 0FFh +
jz loc_447C6E  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [ebp+4] +
jmp loc_4468A1  +
mov eax [esp+88h+var_74] +
mov edi offset aAd_0 +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+88h+var_78] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_447105  +
cmp eax 3 +
jz loc_447DF8  +
cmp eax 37h +
jz loc_447F1D  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4493E0  +
test ebp ebp +
jz loc_445831  +
mov edi offset aGs_0 +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_44784A  +
mov edi offset unk_46870F +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_445831  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447D8C  +
lea edx [eax+1] +
mov ecx [esp+88h+var_78] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447D5A  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_444928  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447D23  +
lea edx [eax+1] +
mov ecx [esp+88h+var_74] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
add ecx 4 +
call sub_449160  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447CEC  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_445831  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_88] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_445C93  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44640B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4463D9  +
mov eax [ebx+100h] +
mov esi offset aDefaultArg_0 +
jmp loc_4472DF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468734h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_447325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4472C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_4472C3  +
mov eax [edi+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov esi eax +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_44734B  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+88h+var_78] +
jz loc_4473F1  +
mov esi [esp+88h+var_78] +
mov eax [ebx+100h] +
lea ebp [edx+esi] +
jmp loc_4473AB  +
lea edx [eax+1] +
add esi 1 +
cmp esi ebp +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4473F7  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_447390  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+88h+var_78] +
jmp loc_447393  +
mov edx [ebx+100h] +
mov esi offset asc_468739 +
jmp loc_44741F  +
lea ecx [edx+1] +
add esi 1 +
cmp esi 46873Ch +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
jz loc_447466  +
mov edx ecx +
cmp edx 0FFh +
movzx eax byte ptr [esi] +
jnz loc_447400  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_78] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_78] +
jmp loc_447403  +
mov edi [edi+4] +
jmp loc_44658E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_446828  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_445A47  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_446862  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_446C17  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_44758E  +
jmp loc_444928  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4475E9  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_444928  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_447563  +
cmp al 5Fh +
jnz loc_447563  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_447563  +
cmp byte ptr [esi+2] 55h +
jnz loc_447563  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_447563  +
xor ecx ecx +
jmp loc_4475CB  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_447EAF  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_4475B5  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_447948  +
movsx eax dl +
sub eax 37h +
jmp loc_4475BB  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_7C] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_7C] +
jmp loc_447574  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_445184  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_446985  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_446A97  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4457AD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44576D  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_448090  +
mov ecx [esp+88h+var_50] +
mov eax [esp+88h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_444928  +
mov edx 20h +
mov eax ebx +
call sub_4422C0  +
jmp loc_445F8C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov byte ptr [ebx] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
mov dword ptr [ebx+100h] 1 +
jnz loc_445B98  +
mov edx 1 +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 2Dh +
mov byte ptr [ebx+104h] 2Dh +
jmp loc_445B98  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_445B4A  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
jmp loc_444928  +
mov edx [ecx+8] +
mov edi [edx] +
test edi edi +
jnz loc_445B36  +
cmp eax 3Ch +
jz loc_44802F  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_448090  +
cmp esi 6 +
ja loc_444928  +
jmp ds:off_468AB4[esi*4]  +
mov edx offset aUll_0 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
mov edx offset aLl_0 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
mov edx offset aUl_0 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
mov edx 6Ch +
mov eax ebx +
call sub_4422C0  +
jmp loc_444928  +
mov edx 75h +
mov eax ebx +
call sub_4422C0  +
jmp loc_444928  +
lea edx [eax+4] +
mov eax ebx +
call sub_4425E0  +
test eax eax +
jz loc_448043  +
mov edx [eax] +
cmp edx 2Fh +
jnz loc_4464BE  +
mov edx [ebx+11Ch] +
jmp loc_447927  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_448043  +
cmp dword ptr [eax] 2Fh +
jnz loc_448043  +
cmp edx 0 +
jg loc_447910  +
lea esi [esi+0] +
jnz loc_448043  +
mov eax [eax+4] +
test eax eax +
jz loc_448043  +
mov edx [eax] +
jmp loc_4464BE  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_447FA7  +
movsx eax dl +
sub eax 57h +
jmp loc_4475BB  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_445D4B  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_447E43  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_44575F  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447F75  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 5Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+8] +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_447F43  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_444928  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_447EEB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_44579F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
cmp edx 0FFh +
jnz loc_4477FA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4477FA  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
jmp loc_444928  +
movzx edi byte ptr [esi] +
lea esi [edi-63h] +
mov eax esi +
cmp al 1 +
jbe loc_447ABD  +
lea esi [edi-72h] +
mov eax esi +
cmp al 1 +
ja loc_446F15  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_4493E0  +
mov eax ebx +
mov edx 3Ch +
call sub_4422C0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_448090  +
mov eax ebx +
mov edx offset asc_46897E +
call sub_444820  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_448090  +
mov edx 29h +
mov eax ebx +
call sub_4422C0  +
jmp loc_444928  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_446571  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_446EBC  +
mov eax [esp+88h+var_70] +
jmp loc_446EE9  +
mov esi [edx+4] +
mov edi offset aJarray_0 +
mov ecx 6 +
cmps   +
jnz loc_44573F  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_448090  +
mov edx offset asc_468744 +
mov eax ebx +
call sub_444820  +
jmp loc_4457BE  +
mov eax [esp+88h+var_78] +
cmp dword ptr [eax+8] 1 +
jnz loc_446F1E  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_446F1E  +
mov edx 28h +
mov eax ebx +
call sub_4422C0  +
mov ecx [ebp+4] +
mov edx [ebp+8] +
jmp loc_446F1E  +
mov eax ebx +
mov edx 5Bh +
call sub_4422C0  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_448090  +
mov edx 5Dh +
mov eax ebx +
call sub_4422C0  +
jmp loc_446F99  +
jnz loc_446FF0  +
mov eax [eax+4] +
test eax eax +
jnz loc_4456EB  +
nop   +
jmp loc_446FF0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_447C47  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_449490  +
jmp loc_446F48  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_4493E0  +
jmp loc_446F88  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_4470C4  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_78] +
mov edx edi +
call sub_449490  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_4493E0  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_449490  +
mov eax ebx +
mov edx offset asc_4688D7 +
call sub_444820  +
mov ecx [esp+88h+var_70] +
mov edx edi +
mov eax ebx +
call sub_449490  +
jmp loc_444928  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4471F6  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4471BF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_447192  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44715E  +
mov eax [esp+88h+var_74] +
mov [esp+88h+var_5C] edi +
mov [esp+88h+var_60] eax +
lea eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_4452B3  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_449490  +
mov edx offset a____2 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
mov eax [esp+88h+var_78] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_44710E  +
mov edi [esp+88h+var_78] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+88h+var_78] eax +
jmp loc_44710E  +
xor edi edi +
jmp loc_4448D7  +
mov eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_4452CA  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4479A7  +
mov ecx [ecx+4] +
mov eax [ecx] +
jmp loc_445245  +
cmp eax 3Bh +
jnz loc_445B36  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_44807A  +
cmp al 31h +
jnz loc_445B36  +
mov edx offset aTrue_0 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
mov eax 5Fh +
jmp loc_447563  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44530D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_447A2F  +
mov eax [esp+88h+var_78] +
mov edi [esp+88h+var_7C] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_449490  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_4493E0  +
jmp loc_444928  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_447A04  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4479D1  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_447563  +
cmp dl 5Fh +
jnz loc_447563  +
cmp ecx 0FFh +
mov eax edx +
ja loc_447563  +
cmp dword ptr [ebx+100h] 0FFh +
mov esi ecx +
jnz loc_44800E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov dword ptr [ebx+100h] 0 +
mov eax [ebx+100h] +
mov ecx esi +
mov esi ebp +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jmp loc_447583  +
mov edx 2Dh +
mov eax ebx +
call sub_4422C0  +
mov edx [ebp+8] +
jmp loc_447874  +
mov dword ptr [ebx+118h] 1 +
jmp loc_444928  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_448090  +
mov eax [esp+88h+var_70] +
cmp [esp+88h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_446EE9  +
jmp loc_444928  +
mov edx offset aFalse_0 +
mov eax ebx +
call sub_444820  +
jmp loc_444928  +
***
test ecx ecx +
jz loc_4480A4  +
cmp dword ptr [eax+118h] 0 +
jnz locret_4480A2  +
jmp sub_4448B0  +
retn   +
mov dword ptr [eax+118h] 1 +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_44815B  +
jmp ds:off_468B14[eax*4]  +
mov eax [ebx+100h] +
mov esi offset a__vector_0 +
jmp loc_448105  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 468B10h +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448630  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_4480E0  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_4480E3  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_448410  +
mov eax [ebx+118h] +
test eax eax +
jz loc_448670  +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aRestrict_0 +
jmp loc_4481A4  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468AD9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448185  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_448188  +
mov eax [ebx+100h] +
mov esi offset aConst_0 +
jmp loc_448223  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468AEAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448200  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_448203  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4486DC  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_4486A5  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aVolatile_0 +
jmp loc_4482F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468AE3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4482D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_4482D3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_448789  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_468AEB +
jmp loc_448393  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468AEDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448370  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_448373  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44874A  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
test ecx ecx +
jnz loc_44815B  +
mov dword ptr [ebx+118h] 1 +
jmp loc_448170  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_448170  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_44881D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_448170  +
mov eax [ebx+100h] +
jmp loc_448296  +
mov eax [ebx+100h] +
jmp loc_448366  +
mov eax [ebx+100h] +
mov esi offset aComplex_0 +
jmp loc_4484A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468AF6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448480  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_448483  +
mov eax [ebx+100h] +
mov esi offset aImaginary_0 +
jmp loc_448523  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468B01h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448500  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_448503  +
cmp byte ptr [ebx+104h] 28h +
jz loc_44859E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4487DE  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4487C0  +
mov esi [ebx+118h] +
test esi esi +
jz loc_448695  +
mov eax [ebx+100h] +
mov esi offset asc_468B02 +
jmp loc_4485E7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 468B05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448170  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4485C4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_4485C7  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4487CF  +
mov edx [ebx+118h] +
test edx edx +
jz loc_448682  +
cmp ebp 0FFh +
jz loc_448713  +
lea eax [ebp+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ebp] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_448170  +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4448B0  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_4448B0  +
mov ebp [ebx+100h] +
jmp loc_448645  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_4448B0  +
jmp loc_4485B7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4482A4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448285  +
mov edx [ebx+10Ch] +
xor ebp ebp +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
add dword ptr [ebx+120h] 1 +
jmp loc_448654  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_4483F4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448355  +
mov dword ptr [ebx+118h] 1 +
jmp loc_4485B7  +
mov dword ptr [ebx+118h] 1 +
jmp loc_448645  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_44858D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44843F  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_38] edx +
mov ebp [esp+4Ch+arg_0] +
jz loc_4488E1  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_44888D  +
jmp loc_4488E1  +
mov edx [esi+118h] +
test edx edx +
jnz loc_4488E1  +
mov eax [ebx+8] +
test eax eax +
jnz loc_4488DB  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_4488A5  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_4488DB  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_4488E9  +
cmp eax 2Ah +
jz loc_44890A  +
cmp eax 2 +
jz loc_44892B  +
mov edx [esp+4Ch+var_38] +
mov eax esi +
call sub_4480B0  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_448883  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_448E70  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_448BF0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_38] +
mov ecx [ecx+4] +
call sub_448090  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_38] 4 +
mov [esi+114h] ebp +
jnz loc_4489C5  +
mov ebp offset asc_468724 +
mov [esp+4Ch+var_34] ebx +
jmp loc_448986  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 468726h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_4489E2  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_448967  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_44896A  +
cmp eax 0FFh +
jz loc_448A1F  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_4489E6  +
mov ebx [esp+4Ch+var_34] +
mov eax [ebx+4] +
mov ebp [eax+8] +
mov eax [ebp+0] +
cmp eax 45h +
jnz loc_4489FC  +
jmp loc_448A56  +
mov ebp [ebp+4] +
mov eax [ebp+0] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_4489F6  +
mov edx [esp+4Ch+var_38] +
mov ecx ebp +
mov eax esi +
call sub_448090  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_4489CF  +
mov ecx offset aDefaultArg_0 +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_448A84  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 468734h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_448ACA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_448A65  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_448A68  +
mov eax [ebp+8] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset aLd +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_448BE0  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_34] edi +
mov edi eax +
jmp loc_448B23  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_448B6A  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_448B08  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+120h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_448B0B  +
mov edi [esp+4Ch+var_34] +
mov ecx offset asc_468739 +
mov ebx ecx +
jmp loc_448B9A  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 46873Ch +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_4489F6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_448B77  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_448B7A  +
mov eax [esi+100h] +
jmp loc_448B6E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_448C2A  +
mov edx [eax+8] +
test edx edx +
jz loc_448CB0  +
mov eax [eax] +
test eax eax +
jnz loc_448C05  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_448860  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_448D70  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_448E17  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_448C85  +
mov eax ebx +
mov edx edi +
call sub_448090  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_448DE0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_448E50  +
mov eax [ebx+100h] +
mov esi offset unk_468BC0 +
jmp loc_448CEF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_468BC2 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_448D35  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_448CD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_448CD3  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_448860  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_448DA7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_448C30  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_448C3E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448D5A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_448C93  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448C5E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_448860  +
mov edx [ebx+100h] +
jmp loc_448C4F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_448F50  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_448F50  +
mov eax esi +
mov edx 1 +
jmp loc_448EBE  +
and ch 0Eh +
jnz loc_449031  +
mov eax [eax] +
test eax eax +
jz loc_448F50  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_448F50  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_448EA9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_448EA0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_449046  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_449128  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_449057  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44905A  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_448860  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4490BA  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_448FAC  +
mov edx [ebx+118h] +
test edx edx +
jz loc_448FE7  +
cmp eax 0FFh +
jz loc_448FFD  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_448860  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_4448B0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jnz loc_448FB3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_448FB6  +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_448EE0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_448F19  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_448860  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4490F1  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_448F84  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448F87  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_44909D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_448EFD  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [ecx] +
cmp dword ptr [ecx] 4 +
jz loc_449190  +
mov esi [eax+118h] +
test esi esi +
jz loc_449250  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+34h+var_1C] +
mov ebp [eax+114h] +
mov dword ptr [eax+114h] 0 +
mov eax [eax+110h] +
mov [ebx+110h] edx +
mov edx [esi] +
mov [esp+34h+var_1C] eax +
mov [esp+34h+var_18] edx +
mov ecx [edx+4] +
test ecx ecx +
jz loc_449336  +
mov edx [ebx+118h] +
test edx edx +
jz loc_4492A0  +
cmp byte ptr [ebx+104h] 3Ch +
mov [ebx+110h] eax +
jz loc_449345  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4492F0  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov edx [esi] +
mov ecx [edx+8] +
test ecx ecx +
jz loc_449327  +
mov edx [ebx+118h] +
test edx edx +
jz loc_449260  +
cmp eax 0FFh +
jz loc_4492B2  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov [ebx+114h] ebp +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4448B0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_4448B0  +
mov eax [ebx+100h] +
cmp byte ptr [ebx+104h] 3Eh +
jnz loc_449223  +
cmp eax 0FFh +
jz loc_44936B  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov eax edx +
mov byte ptr [ebx+104h] 20h +
jmp loc_449223  +
mov eax ebx +
mov edx edi +
call sub_4448B0  +
mov eax [esp+34h+var_1C] +
jmp loc_4491D3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_449231  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4491FB  +
mov dword ptr [ebx+118h] 1 +
jmp loc_449223  +
mov dword ptr [ebx+118h] 1 +
jmp loc_4491D3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4493A2  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4491EC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_449286  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_449355  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_449410  +
mov eax [eax+118h] +
test eax eax +
jz loc_449400  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4448B0  +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_4493F8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_449442  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4493F8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_449427  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_44942A  +
***
push ebx  +
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_4494A8  +
cmp eax 30h +
jnz loc_4494C0  +
mov eax [ebx+118h] +
test eax eax +
jz loc_4494F6  +
test esi esi +
jz loc_449501  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_4494A8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_449560  +
lea esi [eax+1] +
mov [ebx+100h] esi +
xor esi esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+118h] +
mov byte ptr [ebx+104h] 28h +
test eax eax +
jnz loc_4494B2  +
mov eax ebx +
call sub_4448B0  +
test esi esi +
jnz loc_4494B6  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_449528  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_449511  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_C] ecx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_20] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
xor eax eax +
mov ecx [esp+28h+var_C] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_10] +
jmp loc_4494D9  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 18Ch +
mov [ebp+var_17C] edx +
movzx edx byte ptr [eax] +
mov [ebp+var_180] ecx +
cmp dl 5Fh +
jz loc_449770  +
mov ecx 8 +
mov esi ebx +
mov edi offset a_global__0 +
cmps   +
setnbe cl  +
setb al  +
xor esi esi +
cmp cl al +
jnz loc_449620  +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_449600  +
cmp al 5Fh +
jnz loc_449760  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz cl  +
jz loc_449611  +
xor esi esi +
cmp al 44h +
jnz loc_449620  +
xor esi esi +
cmp byte ptr [ebx+0Ah] 5Fh +
jz loc_449840  +
lea esi [esi+0] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] edx +
call strlen  +
mov [ebp+var_170] ebx +
mov [ebp+var_168] 11h +
mov [ebp+var_164] ebx +
mov [ebp+var_15C] 0 +
mov [ebp+var_150] 0 +
mov ecx eax +
lea eax [ebx+eax] +
mov [ebp+var_16C] eax +
lea eax [ecx+ecx] +
mov [ebp+var_158] eax +
lea eax [eax+ecx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_14C] ecx +
mov [ebp+var_148] 0 +
mov [ebp+var_144] 0 +
mov [ebp+var_140] 0 +
call sub_44AB70  +
sub esp eax +
lea eax ds:12h[ecx*4] +
lea edi [esp+198h+var_18C] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
mov edx [ebp+var_184] +
sub esp eax +
cmp esi 1 +
lea eax [esp+198h+var_18C] +
mov [ebp+var_160] edi +
mov [ebp+var_154] eax +
jz loc_449785  +
jb loc_449820  +
cmp esi 3 +
ja loc_449820  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edi [ebx+0Bh] +
mov [ebp+var_164] edi +
jnz loc_449700  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_4498E0  +
mov [esp+198h+var_198] edi +
lea ebx [ebp+var_170] +
call strlen  +
mov edx edi +
mov ecx eax +
mov eax ebx +
call sub_441EB0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+198h+var_198] 0 +
call sub_441E50  +
mov ebx [ebp+var_164] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] eax +
call strlen  +
mov ecx [ebp+var_184] +
add ebx eax +
mov [ebp+var_164] ebx +
movzx edx byte ptr [ebx] +
jmp loc_449790  +
cmp al 24h +
jnz loc_449620  +
jmp loc_449600  +
cmp byte ptr [eax+1] 5Ah +
mov esi 1 +
jnz loc_4495D6  +
nop   +
jmp loc_449620  +
xor ecx ecx +
cmp dl 5Fh +
jz loc_449850  +
xor eax eax +
test dl dl +
jnz loc_449812  +
test ecx ecx +
jz loc_449812  +
mov eax [ebp+var_17C] +
lea ebx [ebp+var_13C] +
mov edx 11h +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_34] eax +
mov eax [ebp+var_180] +
mov [ebp+var_28] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_30] eax +
mov eax ebx +
mov [ebp+var_24] 0 +
call sub_4448B0  +
mov eax [ebp+var_3C] +
mov edx [ebp+var_30] +
mov [esp+198h+var_198] ebx +
mov byte ptr [ebp+eax+var_13C] 0 +
mov [esp+198h+var_190] edx +
mov [esp+198h+var_194] eax +
call [ebp+var_34]  +
mov edx [ebp+var_24] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_170] +
call sub_442D90  +
mov ecx eax +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_449790  +
mov esi ecx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_449620  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
mov [ebp+var_164] eax +
cmp dl 5Ah +
jnz loc_449790  +
add ebx 2 +
mov edx 1 +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_4436D0  +
test byte ptr [ebp+var_168] 1 +
mov ecx eax +
jnz loc_4498AB  +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_449790  +
mov edx ecx +
mov eax ebx +
call sub_442050  +
mov ecx eax +
mov esi [ebp+var_164] +
movzx edx byte ptr [esi] +
cmp dl 2Eh +
jnz loc_449790  +
movzx eax byte ptr [esi+1] +
lea edx [eax-61h] +
cmp dl 19h +
jbe loc_4498A0  +
cmp al 5Fh +
jz loc_4498A0  +
sub eax 30h +
cmp al 9 +
jbe loc_4498A0  +
movzx edx byte ptr [esi] +
jmp loc_449790  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_4436D0  +
mov ecx eax +
jmp loc_44971B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_449923  +
test esi esi +
jz loc_449940  +
mov ecx [esp+2Ch+arg_8] +
test ecx ecx +
jnz loc_449940  +
test ebx ebx +
jz loc_4499E2  +
mov dword ptr [ebx] 0FFFFFFFDh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+2Ch+var_1C] +
mov edx offset loc_4426A0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
call sub_4495B0  +
test eax eax +
jz loc_449A17  +
mov edx [esp+2Ch+var_10] +
mov ebp 1 +
mov edi [esp+2Ch+var_1C] +
test edx edx +
cmovz ebp [esp+2Ch+var_14] +
test edi edi +
jz loc_4499D3  +
test esi esi +
jz loc_449A00  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov edx [esp+2Ch+arg_8] +
cmp eax [edx] +
jnb loc_4499F0  +
add eax 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
mov edi esi +
call free  +
test ebx ebx +
jz loc_449A10  +
mov dword ptr [ebx] 0 +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_4499E2  +
cmp ebp 1 +
jz loc_449A30  +
mov dword ptr [ebx] 0FFFFFFFEh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] esi +
call free  +
mov eax [esp+2Ch+arg_8] +
mov [eax] ebp +
jmp loc_4499BF  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_4499F8  +
jmp loc_4499BF  +
mov eax edi +
jmp loc_449933  +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call free  +
test ebx ebx +
jnz loc_4499DC  +
xor eax eax +
jmp loc_4499E4  +
mov dword ptr [ebx] 0FFFFFFFFh +
xor eax eax +
jmp loc_449933  +
***
sub esp 0Ch +
mov eax [esp+10h] +
mov edx [esp+14h] +
test eax eax +
jz loc_449A68  +
test edx edx +
jz loc_449A68  +
mov ecx [esp+18h] +
call sub_4495B0  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFEh +
add esp 0Ch +
retn   +
***
mov eax 0FFFFFFFDh +
jmp loc_449A64  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_449A90  +
cmp eax 3 +
jz loc_449A90  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_44A790  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_456114 2 +
mov eax [esp+18h+arg_4] +
jz loc_449ADB  +
mov dword_456114 2 +
cmp eax 2 +
jz loc_449AF1  +
cmp eax 1 +
jz loc_449B20  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_46E030 +
cmp ebx offset unk_46E030 +
jz loc_449AE5  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_449B08  +
call eax  +
add ebx 4 +
cmp ebx offset unk_46E030 +
jnz loc_449B00  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_44A790  +
jmp loc_449AE5  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_46C0E0 +
mov [esp+28h+var_28] eax +
call sub_449B60  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_449C20  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_46C0E0 +
mov [esp+28h+var_28] eax +
call sub_449B60  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_46C0DC +
mov [esp+28h+var_28] eax +
call sub_449B60  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_449B70  +
mov ds:dword_46C0E0 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_449B70  +
mov [esp+28h+var_28] 8 +
mov ds:dword_46C0DC eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_449B80  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_449CB8  +
cmp eax 0C000008Dh +
jnb loc_449D20  +
cmp eax 0C0000005h +
jnz loc_449D27  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_449D56  +
test eax eax +
jz loc_449CCD  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_449D0D  +
cmp eax 0C0000094h +
jz loc_449CE1  +
cmp eax 0C0000096h +
jz loc_449D2E  +
cmp eax 0C0000093h +
jz loc_449D20  +
mov eax ds:dword_46B384 +
test eax eax +
jz loc_449D12  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_449D86  +
test eax eax +
jz loc_449CCD  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_449CE3  +
cmp eax 0C000001Dh +
jnz loc_449CCD  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_449D70  +
test eax eax +
jz loc_449CCD  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_449D0D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_449D0D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_449D0D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_449D0D  +
call sub_44A3F0  +
jmp loc_449D0D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_46B388 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_449E01  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_449E07  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_46B388 eax +
jmp loc_4506F8  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_449E3D  +
mov edx ds:off_469880[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_449EE0  +
***
push edi  +
mov eax ds:dword_46B38C +
retn   +
***
call eax  +
mov eax off_456110 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_456110 edx +
test eax eax +
jnz loc_44A410  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_455D40 +
cmp ebx 0FFFFFFFFh +
jz loc_44A463  +
test ebx ebx +
jz loc_44A452  +
call ds:dword_455D40[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_44A443  +
mov [esp+18h+var_18] offset dword_44A400 +
call sub_449C40  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_44A469  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_455D40[eax*4] +
test edx edx +
jnz loc_44A467  +
jmp loc_44A43F  +
***
mov eax ds:dword_46B398 +
test eax eax +
jz loc_44A490  +
retn   +
mov ds:dword_46B398 1 +
jmp sub_44A430  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_45AB7C +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_44A4D2  +
not eax  +
mov dword_45AB80 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_44A540  +
mov eax esi +
not eax  +
mov dword_45AB7C esi +
mov dword_45AB80 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_44A52C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_46B6E8 +
call ds:EnterCriticalSection  +
mov edi ds:dword_46B6E0 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_44A639  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_44A632  +
test ebx ebx +
jz loc_44A632  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_44A610  +
mov [esp+28h+var_28] offset unk_46B6E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_44A660  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_46B6E4 +
test eax eax +
jnz loc_44A680  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_44A6DC  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_46B6E8 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_46B6E0 +
mov ds:dword_46B6E0 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_46B6E8 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_44A673  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_46B6E4 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_44A710  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_46B6E8 +
call ds:EnterCriticalSection  +
mov edx ds:dword_46B6E0 +
sub esp 4 +
test edx edx +
jz loc_44A741  +
mov eax [edx] +
cmp eax ebx +
jnz loc_44A73A  +
jmp loc_44A778  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_44A758  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_44A732  +
mov dword ptr [esp] offset unk_46B6E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_46B6E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_44A751  +
***
mov eax [edx+8] +
mov ds:dword_46B6E0 eax +
mov eax edx +
jmp loc_44A75E  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_44A7E4  +
jb loc_44A7B5  +
cmp eax 3 +
jnz loc_44A7AE  +
mov eax ds:dword_46B6E4 +
test eax eax +
jnz loc_44A812  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_46B6E4 +
test eax eax +
jnz loc_44A820  +
mov eax ds:dword_46B6E4 +
cmp eax 1 +
jnz loc_44A7AE  +
mov ds:dword_46B6E4 0 +
mov [esp+18h+var_18] offset unk_46B6E8 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_44A7AE  +
mov eax ds:dword_46B6E4 +
test eax eax +
jz loc_44A800  +
mov ds:dword_46B6E4 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_46B6E8 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_44A7ED  +
call sub_44A5E0  +
jmp loc_44A7AE  +
call sub_44A5E0  +
jmp loc_44A7BE  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_44A840  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_44A860  +
xor eax eax +
retn   +
***
jmp sub_44A830  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_44A8A8  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_44A89E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_44A8AA  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_44A890  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_44A8D5  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_44A8E0  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44A8D5  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_44A91A  +
jmp loc_44A8D5  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_44A940  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_44A910  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_44A968  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44A961  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_44A870  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_44A9B2  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44A9AE  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_44A9E8  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44A9E3  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_44A9E3  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_44AA23  +
test ebx ebx +
jz loc_44AA34  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_44AA16  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_44AA50  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44AA4B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_44AA80  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44AAB6  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_44A870  +
test eax eax +
jz loc_44AAC0  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_44AAB6  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_44AAF0  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_44A830  +
test eax eax +
jz loc_44AAE7  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_44AAE7  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_44A870  +
test eax eax +
jz loc_44AAE7  +
add esi 400000h +
mov edx esi +
jnz loc_44AB36  +
jmp loc_44AAE7  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_44AB44  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_44AB60  +
test ebx ebx +
jg loc_44AB30  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_44AB92  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_44AB7D  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+8+arg_0] +
xor ebx ebx +
mov edx [esp+8+arg_4] +
nop   +
mov edi edx +
mov esi eax +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_44ABC0  +
mov esi edi +
and esi 0FFh +
add ecx 8 +
movzx esi ds:byte_4699A0[esi] +
add ebx esi +
cmp ecx 40h +
jnz loc_44ABB0  +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_44AC30  +
cmp ecx ebp +
ja loc_44AC62  +
test ecx ecx +
mov ebx ecx +
jnz loc_44AC17  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_44AC56  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_44AC72  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_44ACD0  +
cmp esi ebp +
jb loc_44ACD0  +
xor eax eax +
jmp loc_44AC25  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_44ACE0  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_44ACC3  +
cmp esi edx +
jz loc_44ACE0  +
mov eax edi +
xor edx edx +
jmp loc_44AC25  +
mov eax 1 +
jmp loc_44AC25  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] offset dword_46B708 +
call pthread_key_create  +
test eax eax +
setz al  +
movzx eax al +
mov dword_456118 eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_44AE40 +
mov [esp+1Ch+var_1C] offset unk_46B704 +
call pthread_once  +
test eax eax +
jnz loc_44AE98  +
mov eax dword_456118 +
test eax eax +
js loc_44AE98  +
add esp 1Ch +
retn   +
mov dword_456118 0 +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 20h +
mov ecx [edx] +
jmp loc_44AF13  +
xor edx edx +
xor ebx ebx +
mov eax [ecx+18h] +
cmp ecx [esi+10h] +
setz bl  +
shl ebx 2 +
test edx edx +
jnz loc_44AF30  +
test eax eax +
jz loc_44AF09  +
mov edx [esi] +
mov ecx [esi+4] +
mov [esp+28h+var_14] edi +
mov [esp+28h+var_18] esi +
mov [esp+28h+var_20] edx +
mov edx ebx +
or edx 2 +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] 1 +
call eax  +
cmp eax 7 +
jz loc_44AF40  +
cmp eax 8 +
jnz loc_44AF30  +
test ebx ebx +
jnz loc_44AF4C  +
mov eax [edi] +
mov ecx [eax] +
mov [edi] ecx +
test ecx ecx +
jnz loc_44AEC0  +
xor ebx ebx +
xor eax eax +
cmp ecx [esi+10h] +
mov edx 5 +
setz bl  +
shl ebx 2 +
test edx edx +
jz loc_44AED4  +
lea esi [esi+0] +
add esp 20h +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
jmp sub_44AF60  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx dword_456118 +
mov esi [eax] +
test edx edx +
js loc_44AFAB  +
test edx edx +
jnz loc_44AF8D  +
mov ds:dword_46B70C esi +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
mov eax ds:dword_46B708 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
call sub_44AE70  +
mov edx dword_456118 +
jmp loc_44AF76  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov eax [eax+0Ch] +
mov [esp+40h+var_1C] eax +
mov eax [esi+10h] +
mov [esp+40h+var_18] eax +
mov eax [edx] +
jmp loc_44AFEC  +
mov ds:dword_46B70C edx +
mov eax [ebx] +
mov eax [eax] +
mov [ebx] eax +
test eax eax +
jz loc_44B0A0  +
mov edx [eax+18h] +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_14] edx +
mov edx [esi+4] +
mov [esp+40h+var_28] eax +
mov eax [esi] +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
call eax  +
mov edx [esp+40h+var_14] +
test eax eax +
jnz loc_44B0F4  +
test edx edx +
jz loc_44B075  +
mov edi [esi] +
mov ebp [esi+4] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_38] edi +
mov [esp+40h+var_34] ebp +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
call edx  +
cmp eax 7 +
jz loc_44B101  +
cmp eax 8 +
jnz loc_44B0F4  +
mov eax [ebx] +
mov edx [eax] +
mov eax dword_456118 +
test eax eax +
js loc_44B0E0  +
test eax eax +
jz loc_44AFE0  +
mov eax ds:dword_46B708 +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call pthread_setspecific  +
jmp loc_44AFE6  +
mov eax [esi] +
mov edx [esi+4] +
mov ecx [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_28] ecx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_3C] 1Ah +
mov [esp+40h+var_40] 1 +
call eax  +
test eax eax +
jnz loc_44B0F4  +
add esp 3Ch +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_14] edx +
call sub_44AE70  +
mov eax dword_456118 +
mov edx [esp+40h+var_14] +
jmp loc_44B082  +
add esp 3Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax dword_456118 +
mov ebx [esp+18h+arg_0] +
test eax eax +
js loc_44B160  +
test eax eax +
jnz loc_44B137  +
mov eax ds:dword_46B70C +
mov ds:dword_46B70C ebx +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_46B708 +
mov [esp+18h+var_18] eax +
call pthread_getspecific  +
mov [ebx] eax +
mov eax ds:dword_46B708 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_44AE70  +
mov eax dword_456118 +
jmp loc_44B121  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax] +
mov eax dword_456118 +
test eax eax +
js loc_44B1A8  +
test eax eax +
jnz loc_44B192  +
mov ds:dword_46B70C ebx +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_46B708 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_44AE70  +
mov eax dword_456118 +
jmp loc_44B183  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov eax [eax+edx*4+8] +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jz loc_44B1E0  +
mov eax [eax+28h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov [eax+edx*4+8] ecx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
mov eax [eax+4] +
add eax 1 +
retn   +
***
mov eax [esp+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_44B240  +
mov eax [eax+4] +
add eax 1 +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov eax [eax] +
lea edx [ecx-1] +
mov [eax+4] edx +
retn   +
***
jmp sub_44B270  +
***
mov eax [esp+arg_0] +
mov eax [eax] +
mov eax [eax+1Ch] +
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
retn   +
***
push ebx  +
sub esp 30h +
mov eax dword_456118 +
mov edi [esp+30h+arg_0] +
test eax eax +
js loc_44B390  +
test eax eax +
mov esi ds:dword_46B70C +
jnz loc_44B341  +
test esi esi +
mov [esp+30h+var_4] esi +
jz loc_44B335  +
mov eax esi +
lea ebx [esp+30h+var_4] +
nop   +
mov eax [eax+18h] +
test eax eax +
jz loc_44B327  +
mov [esp+30h+var_1C] ebx +
mov [esp+30h+var_20] edi +
mov edx [edi] +
mov ecx [edi+4] +
mov [esp+30h+var_2C] 1 +
mov [esp+30h+var_30] 1 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_24] ecx +
call eax  +
cmp eax 6 +
jz loc_44B352  +
cmp eax 8 +
jnz loc_44B380  +
mov eax [esp+30h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+30h+var_4] eax +
jnz loc_44B2F0  +
mov eax 5 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_46B708 +
mov [esp+30h+var_30] eax +
call pthread_getspecific  +
mov esi eax +
jmp loc_44B2E1  +
mov eax [esp+30h+var_4] +
mov edx ebx +
mov dword ptr [edi+0Ch] 0 +
mov [esp+30h+var_4] esi +
mov [edi+10h] eax +
mov eax edi +
call sub_44AEB0  +
cmp eax 7 +
jnz loc_44B33A  +
mov eax ebx +
call sub_44AF60  +
lea esi [esi+0] +
add esp 30h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_44AE70  +
mov eax dword_456118 +
jmp loc_44B2D7  +
***
add esp 28h +
pop ebx  +
retn   +
***
mov eax ds:dword_46B708 +
mov [esp] eax +
call pthread_getspecific  +
jmp loc_44B3BB  +
***
call sub_44AE70  +
mov edx dword_456118 +
jmp loc_44B3B2  +
***
sub esp 24h +
mov edx dword_456118 +
mov ebx [esp+24h+arg_0] +
test edx edx +
js loc_44B46D  +
test edx edx +
mov eax ds:dword_46B70C +
jnz loc_44B45E  +
mov ecx [ebx+0Ch] +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] eax +
mov edx esi +
mov eax ebx +
test ecx ecx +
jnz loc_44B44E  +
call sub_44AEB0  +
cmp eax 7 +
jz loc_44B457  +
call abort  +
nop   +
call sub_44AFC0  +
jmp loc_44B444  +
mov eax esi +
call sub_44AF60  +
mov eax ds:dword_46B708 +
mov [esp+24h+var_24] eax +
call pthread_getspecific  +
jmp loc_44B42C  +
call sub_44AE70  +
mov edx dword_456118 +
jmp loc_44B423  +
***
mov ebx [esp+28h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44B4C0  +
mov edx dword_456118 +
test edx edx +
js loc_44B4F0  +
test edx edx +
mov eax ds:dword_46B70C +
jnz loc_44B4E0  +
mov [esp+28h+var_C] eax +
lea edx [esp+28h+var_C] +
mov eax ebx +
call sub_44AFC0  +
cmp eax 7 +
jz loc_44B4D0  +
call abort  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
call sub_44B2C0  +
add esp 28h +
pop ebx  +
retn   +
lea eax [esp+28h+var_C] +
call sub_44AF60  +
lea esi [esi+0] +
mov eax ds:dword_46B708 +
mov [esp+28h+var_28] eax +
call pthread_getspecific  +
jmp loc_44B4A2  +
call sub_44AE70  +
mov edx dword_456118 +
jmp loc_44B499  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
test eax eax +
jz loc_44B51B  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] 1 +
call eax  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov edx dword_456118 +
mov ebx [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
test edx edx +
js loc_44B5A0  +
test edx edx +
mov eax ds:dword_46B70C +
jnz loc_44B590  +
test eax eax +
mov [esp+20h+var_4] eax +
lea esi [esp+20h+var_4] +
jz loc_44B56B  +
lea esi [esi+0] +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_44B581  +
mov eax [esp+20h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+20h+var_4] eax +
jnz loc_44B550  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_44B581  +
add esp 20h +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_46B708 +
mov [esp+20h+var_20] eax +
call pthread_getspecific  +
jmp loc_44B541  +
call sub_44AE70  +
mov edx dword_456118 +
jmp loc_44B538  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] eax +
call sub_44D130  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+2Ch+var_28] eax +
call sub_44D130  +
add esp 2Ch +
retn   +
***
mov eax [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_28] 4000h +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_1C] eax +
call sub_44D130  +
mov byte ptr [ebx+eax] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44B81E  +
cmp byte ptr [ebx] 0 +
jz loc_44B7E8  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_44B800  +
test al 10h +
jz loc_44B7E8  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_44B6D4  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_44B80F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_44B763  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_44B763  +
cmp al 5Ch +
jz loc_44B763  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_44B765  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_44B7E0  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_44B7E0  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_44B7E0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44B932  +
mov eax [ebx+228h] +
test eax eax +
js loc_44B91D  +
jz loc_44B8C0  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_44B8F0  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_44B91D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_44B913  +
mov dword ptr [ebx+228h] 1 +
jmp loc_44B889  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_44B925  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_44B8FB  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_44B8B3  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44B98F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_44B97F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_44B989  +
***
jmp sub_44B9B0  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44B9F3  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_44B9DA  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_44B9EE  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44BA22  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_44BA1D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_44BACD  +
cmp esi 0FFFFFFFFh +
jl loc_44BAC0  +
jz loc_44BA90  +
mov [esp] ebx +
call sub_44B9B0  +
nop   +
lea esi [esi+0] +
jmp loc_44BA7E  +
mov [esp] ebx +
call sub_44B830  +
test eax eax +
jz loc_44BAB7  +
cmp esi [ebx+228h] +
jg loc_44BA72  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_44BAA3  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_44BAB7  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_44BAB7  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_44BB18  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_44BB0B  +
jmp loc_44BB18  +
cmp byte ptr [edx] 0 +
jz loc_44BB16  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_44BB06  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 48h +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [esp+24h] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_20] eax +
mov eax [esp+48h+arg_C] +
fld  tbyte ptr [esp+48h+var_28] +
mov [esp+48h+var_1C] eax +
fxam   +
fstsw  ax +
fstp  st +
test ah 1 +
jz loc_44BB70  +
test ah 4 +
jz loc_44BBF0  +
mov [esp+48h+var_10] 3 +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
jmp loc_44BB84  +
test ah 4 +
jnz loc_44BBD1  +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
mov [esp+48h+var_10] 0 +
and edx 8000h +
mov ebx [esp+48h+arg_18] +
mov [ebx] edx +
lea edx [esp+48h+var_C] +
mov [esp+48h+var_2C] edx +
mov edx [esp+48h+arg_14] +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset unk_456120 +
mov [esp+48h+var_30] edx +
mov edx [esp+48h+arg_10] +
mov [esp+48h+var_34] edx +
lea edx [esp+48h+var_10] +
mov [esp+48h+var_3C] edx +
lea edx [esp+48h+var_28] +
mov [esp+48h+var_40] edx +
call sub_44DB20  +
add esp 48h +
pop ebx  +
retn   +
test ah 40h +
jz loc_44BC00  +
mov [esp+48h+var_10] 2 +
movzx edx word ptr [esp+48h+var_20] +
mov eax 0FFFFBFC3h +
jmp loc_44BB84  +
mov [esp+48h+var_10] 4 +
xor eax eax +
xor edx edx +
jmp loc_44BB8A  +
movzx edx word ptr [esp+48h+var_20] +
mov [esp+48h+var_10] 1 +
mov eax edx +
and eax 7FFFh +
sub eax 403Eh +
jmp loc_44BB84  +
***
mov ecx [edx+4] +
test ch 40h +
jnz loc_44BC34  +
mov ebx [edx+20h] +
cmp [edx+24h] ebx +
jle loc_44BC44  +
and ch 20h +
jnz loc_44BC50  +
mov ebx [edx] +
mov ecx [edx+20h] +
mov [ebx+ecx] al +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_14] ecx +
call fputc  +
mov edx [esp+18h+var_C] +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
mov [esp+50h+var_38] eax +
lea ebp [esp+50h+var_20] +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov [esp+50h+var_4C] 0 +
mov [esp+50h+var_50] ebp +
call sub_44F090  +
mov eax [ebx+0Ch] +
test eax eax +
js loc_44BCB7  +
cmp esi eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_44BD42  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_44BCD1  +
test byte ptr [ebx+5] 4 +
jz loc_44BD4B  +
mov [esp+50h+var_34] esi +
mov eax [esp+50h+var_34] +
test eax eax +
jle loc_44BD2D  +
add [esp+50h+var_38] 2 +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+var_38] +
movzx eax word ptr [eax-2] +
mov [esp+50h+var_50] ebp +
mov [esp+50h+var_4C] eax +
call sub_44F090  +
test eax eax +
jle loc_44BD2D  +
lea esi [ebp+eax+0] +
mov edi ebp +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_44BC20  +
cmp edi esi +
jnz loc_44BD08  +
sub [esp+50h+var_34] 1 +
jmp loc_44BCD5  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44BD21  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_44BCD1  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_44BD51  +
jmp loc_44BCD1  +
***
mov eax [ecx+0Ch] +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
test eax eax +
js loc_44BD85  +
cmp edx eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_44BE00  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_44BDBA  +
test byte ptr [ebx+5] 4 +
jnz loc_44BDBA  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_44BDA1  +
test esi esi +
jz loc_44BDEC  +
nop   +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_44BC20  +
sub esi 1 +
jnz loc_44BDC0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_44BDF9  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44BDE0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_44BDBA  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
mov dword ptr [ecx+0Ch] 0FFFFFFFFh +
jz loc_44BE60  +
mov ebp [ecx+4] +
lea edi [esp+1Ch+var_10+1] +
mov byte ptr [esp+1Ch+var_10] 2Dh +
lea eax [esp+1Ch+var_10] +
and ebp 20h +
xor esi esi +
movzx ebx byte ptr [edx+esi] +
and ebx 0FFFFFFDFh +
or ebx ebp +
mov [edi+esi] bl +
add esi 1 +
cmp esi 3 +
jnz loc_44BE37  +
lea edx [edi+3] +
sub edx eax +
call sub_44BD70  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ecx+4] +
test ebp 100h +
jz loc_44BE80  +
mov byte ptr [esp+1Ch+var_10] 2Bh +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_44BE32  +
test ebp 40h +
jz loc_44BE97  +
mov byte ptr [esp+1Ch+var_10] 20h +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_44BE32  +
lea eax [esp+1Ch+var_10] +
mov edi eax +
jmp loc_44BE32  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov [ebp+var_30] eax +
mov [ebp+var_28] eax +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov [ebp+var_2C] edx +
mov [ebp+var_24] edx +
test eax eax +
cmovns ebx eax +
add ebx 17h +
test ch 10h +
mov [ebp+var_1C] eax +
jz loc_44BEDA  +
cmp word ptr [edi+1Ch] 0 +
jnz loc_44C0B0  +
mov eax [edi+8] +
cmp ebx eax +
cmovge eax ebx +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
test cl 80h +
lea eax [esp+48h+var_38] +
mov [ebp+var_20] eax +
jz loc_44BF0C  +
mov ebx [ebp+var_2C] +
test ebx ebx +
js loc_44C120  +
and cl 7Fh +
mov [edi+4] ecx +
mov eax [ebp+var_28] +
mov edx [ebp+var_24] +
mov esi eax +
mov eax edx +
or eax esi +
jz loc_44C14E  +
mov eax [ebp+var_20] +
mov [ebp+var_28] edi +
mov edi edx +
mov ebx eax +
lea ecx [ebx+1] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
mov [ebp+var_1C] ecx +
call sub_44ACF0  +
add eax 30h +
mov [ebx] al +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
call sub_44ABE0  +
mov ecx [ebp+var_1C] +
mov esi eax +
mov eax edx +
or eax esi +
mov edi edx +
jz loc_44BFB4  +
cmp [ebp+var_20] ecx +
jz loc_44BFA2  +
mov eax [ebp+var_28] +
test byte ptr [eax+5] 10h +
jz loc_44BFA2  +
cmp word ptr [eax+1Ch] 0 +
jz loc_44BFA2  +
mov eax ecx +
sub eax [ebp+var_20] +
cdq   +
shr edx 1Eh +
add eax edx +
and eax 3 +
sub eax edx +
cmp eax 3 +
jz loc_44BFA6  +
mov ebx ecx +
jmp loc_44BF28  +
lea ecx [ebx+2] +
mov byte ptr [ebx+1] 2Ch +
mov ebx ecx +
jmp loc_44BF28  +
mov edi [ebp+var_28] +
mov ebx ecx +
mov eax [edi+0Ch] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov esi ebx +
test ecx ecx +
jle loc_44BFE1  +
mov eax [ebp+var_20] +
sub eax ebx +
add eax ecx +
test eax eax +
jle loc_44BFE1  +
lea esi [ebx+eax] +
add ebx 1 +
cmp ebx esi +
mov byte ptr [ebx-1] 30h +
jnz loc_44BFD6  +
cmp esi [ebp+var_20] +
jz loc_44C138  +
mov eax [edi+8] +
test eax eax +
jle loc_44C049  +
mov edx [ebp+var_20] +
sub edx esi +
add edx eax +
mov eax [edi+4] +
test edx edx +
mov [edi+8] edx +
jle loc_44C04C  +
test eax 1C0h +
jz loc_44C00F  +
sub edx 1 +
mov [edi+8] edx +
mov edx [edi+0Ch] +
test edx edx +
js loc_44C0D5  +
test ah 4 +
jnz loc_44C04C  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_44C04C  +
lea esi [esi+0] +
mov edx edi +
mov eax 20h +
call sub_44BC20  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_44C030  +
mov eax [edi+4] +
test al 80h +
jz loc_44C0A1  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Dh +
cmp [ebp+var_20] ebx +
mov esi [ebp+var_20] +
jnb loc_44C08C  +
nop   +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_44BC20  +
cmp ebx esi +
jnz loc_44C060  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jle loc_44C099  +
nop   +
mov edx edi +
mov eax 20h +
call sub_44BC20  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_44C080  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ah 1 +
jz loc_44C0C7  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Bh +
jmp loc_44C056  +
mov eax ebx +
mov edx 55555556h +
imul  edx +
mov eax ebx +
sar eax 1Fh +
sub edx eax +
add ebx edx +
jmp loc_44BEDA  +
test al 40h +
mov ebx esi +
jz loc_44C056  +
add ebx 1 +
mov byte ptr [esi] 20h +
jmp loc_44C056  +
mov edx eax +
and edx 600h +
cmp edx 200h +
jnz loc_44C01A  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_44C04C  +
lea esi [esi+0] +
add esi 1 +
mov byte ptr [esi-1] 30h +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_44C100  +
jmp loc_44C049  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
neg eax  +
adc edx 0 +
neg edx  +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
jmp loc_44BF0C  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_44BFEA  +
mov byte ptr [esi] 30h +
add esi 1 +
jmp loc_44BFEA  +
mov ebx [ebp+var_20] +
jmp loc_44BFBF  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
cmp eax 6Fh +
mov [ebp+var_28] eax +
mov eax 18h +
mov [ebp+var_34] ecx +
mov ecx 12h +
cmovz ecx eax +
setnz al  +
movzx ebx al +
movzx eax al +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_0] +
lea ebx ds:7[ebx*8] +
mov [ebp+var_24] edx +
add [ebp+var_1C] 3 +
mov eax [eax+0Ch] +
mov edx eax +
mov [ebp+var_30] eax +
xor eax eax +
test edx edx +
cmovns eax edx +
add ecx eax +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
test ah 10h +
mov [ebp+var_38] eax +
jz loc_44C1CD  +
mov eax [ebp+arg_0] +
cmp word ptr [eax+1Ch] 0 +
jnz loc_44C3F1  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp ecx eax +
cmovl ecx eax +
mov [ebp+var_2C] eax +
lea eax [ecx+0Fh] +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
mov eax [ebp+var_34] +
or eax [ebp+var_24] +
mov [ebp+var_20] esp +
jz loc_44C450  +
movzx ecx byte ptr [ebp+var_28] +
mov eax esp +
and ecx 20h +
mov byte ptr [ebp+var_24] cl +
jmp loc_44C222  +
mov [eax-1] cl +
movzx ecx byte ptr [ebp+var_1C] +
xor edx edx +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
or ecx esi +
jz loc_44C240  +
mov edx esi +
add eax 1 +
and edx ebx +
lea ecx [edx+30h] +
cmp cl 39h +
jle loc_44C205  +
add edx 37h +
or dl byte ptr [ebp+var_24] +
mov [eax-1] dl +
jmp loc_44C208  +
cmp [ebp+var_20] eax +
jz loc_44C450  +
mov edi [ebp+var_30] +
test edi edi +
jle loc_44C408  +
mov ecx [ebp+var_20] +
sub ecx eax +
add ecx edi +
test ecx ecx +
jle loc_44C408  +
lea edi [eax+ecx] +
add eax 1 +
cmp eax edi +
mov byte ptr [eax-1] 30h +
jnz loc_44C266  +
cmp edi [ebp+var_20] +
jz loc_44C430  +
mov eax edi +
sub eax [ebp+var_20] +
cmp [ebp+var_2C] eax +
jle loc_44C332  +
mov esi [ebp+var_2C] +
sub esi eax +
mov eax [ebp+arg_0] +
test esi esi +
mov [eax+8] esi +
jle loc_44C2B8  +
cmp [ebp+var_28] 6Fh +
jz loc_44C2AA  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_44C3A6  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
js loc_44C3BD  +
lea eax [esi-1] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
cmp [ebp+var_28] 6Fh +
mov ebx eax +
jz loc_44C2D6  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_44C390  +
test esi esi +
jle loc_44C2E3  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 4 +
jz loc_44C350  +
cmp edi [ebp+var_20] +
jbe loc_44C30D  +
mov [ebp+var_1C] esi +
mov esi [ebp+var_20] +
mov [ebp+var_20] ebx +
mov ebx edi +
mov edi [ebp+arg_0] +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_44BC20  +
cmp ebx esi +
jnz loc_44C2F6  +
mov esi [ebp+var_1C] +
mov ebx [ebp+var_20] +
test esi esi +
jle loc_44C32A  +
mov esi [ebp+arg_0] +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_44BC20  +
lea eax [ebx+1] +
test eax eax +
jg loc_44C314  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov esi 0FFFFFFFFh +
mov [ebp+var_1C] 0FFFFFFFEh +
mov dword ptr [eax+8] 0FFFFFFFFh +
jmp loc_44C2BE  +
mov ebx [ebp+var_1C] +
mov esi eax +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_44BC20  +
lea eax [ebx+1] +
test eax eax +
jg loc_44C355  +
mov ebx [ebp+var_1C] +
xor eax eax +
test ebx ebx +
lea esi [ebx-1] +
cmovns eax ebx +
sub esi eax +
lea ebx [esi-1] +
jmp loc_44C2E3  +
sub esi 3 +
mov [ebp+var_1C] esi +
mov esi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+var_28] +
add edi 2 +
mov byte ptr [edi-1] 30h +
mov ebx [ebp+var_1C] +
mov [edi-2] al +
jmp loc_44C2D6  +
lea eax [esi-2] +
test eax eax +
jle loc_44C382  +
mov esi eax +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
jns loc_44C2B8  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 600h +
cmp eax 200h +
jnz loc_44C2B8  +
add esi edi +
add edi 1 +
cmp edi esi +
mov byte ptr [edi-1] 30h +
jnz loc_44C3D5  +
mov [ebp+var_1C] 0FFFFFFFEh +
mov esi 0FFFFFFFFh +
jmp loc_44C2BE  +
mov eax ecx +
mov edx 55555556h +
imul  edx +
mov eax ecx +
sar eax 1Fh +
sub edx eax +
add ecx edx +
jmp loc_44C1CD  +
cmp [ebp+var_28] 6Fh +
mov edi eax +
jnz loc_44C271  +
mov esi [ebp+arg_0] +
test byte ptr [esi+5] 8 +
jz loc_44C271  +
add edi 1 +
mov byte ptr [eax] 30h +
jmp loc_44C271  +
mov eax [ebp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_44C27A  +
mov byte ptr [edi] 30h +
mov eax [eax+8] +
add edi 1 +
mov [ebp+var_2C] eax +
jmp loc_44C27A  +
mov eax [ebp+var_38] +
mov edi [ebp+arg_0] +
and ah 0F7h +
mov [edi+4] eax +
mov eax [ebp+var_20] +
jmp loc_44C249  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [eax+10h] 0FFFFFFFDh +
jz loc_44C505  +
movzx edx word ptr [eax+14h] +
test dx dx +
jz loc_44C4E3  +
mov eax [ebx+10h] +
mov [ebp+var_2C] esp +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_44AB70  +
sub esp eax +
lea edi [esp+48h+var_38] +
lea eax [ebp+var_1C] +
mov [ebp+var_1C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edi +
call sub_44F090  +
test eax eax +
jle loc_44C4F7  +
lea esi [edi+eax] +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_44BC20  +
cmp edi esi +
jnz loc_44C4C6  +
mov esp [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_44BC20  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_44BC20  +
jmp loc_44C4D8  +
mov [ebp+var_1C] 0 +
call localeconv  +
lea edx [ebp+var_1C] +
mov eax [eax] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] 10h +
mov [esp+48h+var_44] eax +
lea eax [ebp-1Eh] +
mov [esp+48h+var_48] eax +
call sub_44F370  +
test eax eax +
jle loc_44C545  +
movzx edx [ebp+var_1E] +
mov [ebx+14h] dx +
mov [ebx+10h] eax +
jmp loc_44C489  +
movzx edx word ptr [ebx+14h] +
jmp loc_44C53D  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test esi esi +
mov ebx [esp+28h+arg_0] +
mov ecx [ebx+8] +
jle loc_44C7B0  +
cmp esi ecx +
jge loc_44C673  +
sub ecx esi +
mov [ebx+8] ecx +
test ecx ecx +
js loc_44C673  +
mov eax [ebx+0Ch] +
cmp eax ecx +
jge loc_44C673  +
sub ecx eax +
test ecx ecx +
mov [ebx+8] ecx +
jle loc_44C67F  +
test eax eax +
jle loc_44C811  +
sub ecx 1 +
test esi esi +
mov [ebx+8] ecx +
jg loc_44C687  +
nop   +
test ecx ecx +
jle loc_44C5D2  +
test ebp ebp +
jz loc_44C771  +
sub ecx 1 +
test ecx ecx +
mov [ebx+8] ecx +
jz loc_44C5D2  +
mov eax [ebx+4] +
test ah 6 +
jz loc_44C6F3  +
test ebp ebp +
jnz loc_44C708  +
mov eax [ebx+4] +
test ah 1 +
jnz loc_44C7C5  +
test al 40h +
jnz loc_44C800  +
mov edx [ebx+8] +
test edx edx +
jle loc_44C608  +
mov eax [ebx+4] +
and eax 600h +
cmp eax 200h +
jz loc_44C7D6  +
lea eax [ebx+1Ch] +
test esi esi +
mov ebp 55555556h +
mov [esp+28h+var_1C] eax +
jle loc_44C720  +
lea esi [esi+0] +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_44C632  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_44BC20  +
sub esi 1 +
jz loc_44C72C  +
test byte ptr [ebx+5] 10h +
jz loc_44C620  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_44C620  +
mov eax esi +
imul  ebp +
mov eax esi +
sar eax 1Fh +
sub edx eax +
lea eax [edx+edx*2] +
cmp esi eax +
jnz loc_44C620  +
mov eax [esp+28h+var_1C] +
mov ecx ebx +
mov edx 1 +
call sub_44BC80  +
jmp loc_44C620  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov ecx 0FFFFFFFFh +
test esi esi +
jle loc_44C5B0  +
test byte ptr [ebx+5] 10h +
jz loc_44C5B0  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_44C5B0  +
lea eax [esi+2] +
mov edx 55555556h +
mov [esp+28h+var_1C] eax +
imul  edx +
mov eax [esp+28h+var_1C] +
sar eax 1Fh +
sub edx eax +
cmp edx 1 +
jle loc_44C5B0  +
test ecx ecx +
jle loc_44C5D2  +
mov eax ecx +
sub eax edx +
add eax 1 +
jmp loc_44C6D8  +
test ecx ecx +
jz loc_44C825  +
sub ecx 1 +
cmp ecx eax +
jnz loc_44C6D0  +
mov [ebx+8] ecx +
jmp loc_44C5B0  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44C6E7  +
test ebp ebp +
jz loc_44C5DA  +
mov edx ebx +
mov eax 2Dh +
call sub_44BC20  +
jmp loc_44C5EE  +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_44C784  +
mov eax ebx +
call sub_44C470  +
test esi esi +
mov eax [ebx+0Ch] +
jz loc_44C75F  +
jmp loc_44C792  +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_44C755  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_44BC20  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_44C743  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
test eax 1C0h +
jz loc_44C5C9  +
jmp loc_44C5BC  +
test byte ptr [ebx+5] 8 +
jnz loc_44C733  +
test esi esi +
lea esi [esi+0] +
jz loc_44C75F  +
add eax esi +
mov [ebx+0Ch] eax +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
add esi 1 +
js loc_44C797  +
jmp loc_44C75C  +
test ecx ecx +
jle loc_44C579  +
sub ecx 1 +
mov [ebx+8] ecx +
nop   +
jmp loc_44C581  +
mov edx ebx +
mov eax 2Bh +
call sub_44BC20  +
jmp loc_44C5EE  +
sub edx 1 +
mov [ebx+8] edx +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44C7E0  +
jmp loc_44C608  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
jmp loc_44C5EE  +
test byte ptr [ebx+5] 8 +
jz loc_44C67F  +
nop   +
lea esi [esi+0] +
jmp loc_44C5A1  +
mov dword ptr [ebx+8] 0 +
jmp loc_44C5D2  +
***
jmp sub_44C840  +
***
push edi  +
mov ebp edx +
push esi  +
mov esi 1 +
push ebx  +
mov ebx 66666667h +
sub esp 1Ch +
mov [esp+28h+var_24] eax +
mov eax ecx +
mov edi [esp+28h+arg_0] +
sar eax 1Fh +
mov [esp+28h+var_1C] eax +
mov eax ecx +
imul  ebx +
mov [esp+28h+var_20] ecx +
sar ecx 1Fh +
sar edx 2 +
mov ebx edx +
sub ebx ecx +
jz loc_44C893  +
mov ecx 66666667h +
mov eax ebx +
add esi 1 +
imul  ecx +
sar ebx 1Fh +
sar edx 2 +
sub edx ebx +
mov ebx edx +
jnz loc_44C880  +
mov eax [edi+28h] +
mov edx [edi+8] +
cmp esi eax +
cmovl esi eax +
lea eax [esi+2] +
cmp edx eax +
jg loc_44C900  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov eax [esp+28h+var_24] +
mov ecx 1 +
mov edx ebp +
mov [esp+28h+var_28] edi +
add esi 1 +
call sub_44C550  +
mov eax [edi+28h] +
mov [edi+0Ch] eax +
mov eax [edi+4] +
mov edx eax +
and eax 20h +
or edx 1C0h +
or eax 45h +
mov [edi+4] edx +
mov edx edi +
call sub_44BC20  +
mov eax [esp+28h+var_20] +
mov ecx edi +
add [edi+8] esi +
mov edx [esp+28h+var_1C] +
call sub_44BEA0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edx eax +
mov [edi+8] edx +
jmp loc_44C8AC  +
***
mov ebx eax +
sub esp 44h +
mov eax [eax+0Ch] +
test eax eax +
js loc_44C990  +
add eax 1 +
fld  [esp+44h+arg_0] +
mov [esp+44h+var_34] eax +
lea edx [esp+44h+var_1C] +
fstp  [esp+44h+var_14] +
mov eax dword ptr [esp+44h+var_14] +
mov [esp+44h+var_2C] edx +
lea edx [esp+44h+var_18] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_44] eax +
mov eax dword ptr [esp+44h+var_14+4] +
mov [esp+44h+var_40] eax +
mov eax dword ptr [esp+44h+var_14+8] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_8] +
mov [esp+44h+var_38] eax +
mov eax 2 +
call sub_44BB20  +
mov ecx [esp+44h+var_18] +
cmp ecx 0FFFF8000h +
mov esi eax +
jz loc_44C9A0  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_44] ebx +
call sub_44C840  +
mov [esp+44h+var_44] esi +
call sub_44F5F0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 7 +
jmp loc_44C921  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov ecx ebx +
call sub_44BE10  +
mov [esp+44h+var_44] esi +
call sub_44F5F0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_44CA70  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 3 +
call sub_44BB20  +
mov ecx [esp+40h+var_14] +
cmp ecx 0FFFF8000h +
mov edi eax +
jz loc_44CA81  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_40] ebx +
call sub_44C550  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_44CA5A  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_44CA41  +
mov [esp+40h+var_40] edi +
call sub_44F5F0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_44C9D3  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_44BE10  +
mov [esp+40h+var_40] edi +
call sub_44F5F0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_44CBD0  +
jz loc_44CBB3  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 2 +
call sub_44BB20  +
mov esi [esp+40h+var_14] +
cmp esi 0FFFF8000h +
mov edi eax +
jz loc_44CBF0  +
cmp esi 0FFFFFFFDh +
jl loc_44CB80  +
mov eax [ebx+0Ch] +
cmp esi eax +
jg loc_44CB80  +
test byte ptr [ebx+5] 8 +
jnz loc_44CBE1  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax esi +
test eax eax +
mov [ebx+0Ch] eax +
js loc_44CC00  +
mov eax [esp+40h+var_18] +
mov edx edi +
mov ecx esi +
mov [esp+40h+var_40] ebx +
call sub_44C550  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_44CBA4  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_44CB58  +
mov [esp+40h+var_40] edi +
call sub_44F5F0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test byte ptr [ebx+5] 8 +
jnz loc_44CBC4  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+40h+var_18] +
mov ecx esi +
mov edx edi +
mov [esp+40h+var_40] ebx +
call sub_44C840  +
mov [esp+40h+var_40] edi +
call sub_44F5F0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 1 +
mov eax 1 +
jmp loc_44CAB9  +
sub dword ptr [ebx+0Ch] 1 +
jmp loc_44CB94  +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_44CAB9  +
sub eax esi +
mov [ebx+0Ch] eax +
jmp loc_44CB3B  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_44BE10  +
jmp loc_44CBA4  +
mov edx [ebx+8] +
test edx edx +
jle loc_44CB3B  +
add eax edx +
mov [ebx+8] eax +
jmp loc_44CB3B  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
fld  [esp+5Ch+arg_0] +
fld  st +
fstp  tbyte ptr [esp+5Ch+var_36+2] +
fxam   +
fstsw  ax +
and ax 4500h +
cmp ax 100h +
jz loc_44D0B5  +
movzx edx word ptr [esp+30h] +
mov esi edx +
and esi 8000h +
jnz loc_44CE01  +
fxam   +
fstsw  ax +
fstp  st +
and ax 4500h +
cmp ax 500h +
jz loc_44D0C7  +
and dx 7FFFh +
jz loc_44CE96  +
mov esi [esp+5Ch+var_36+2] +
lea eax [edx-3FFFh] +
mov edi [esp+2Ch] +
mov edx [ebx+0Ch] +
cmp edx 0Eh +
jbe loc_44CE16  +
mov ecx edi +
or ecx esi +
jz loc_44D0DA  +
lea ecx [esp+5Ch+var_24] +
mov ebp ebx +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_54] ecx +
nop   +
lea esi [esi+0] +
mov ecx esi +
and ecx 0Fh +
cmp ecx esi +
jz loc_44CEF0  +
mov edx [ebp+0Ch] +
test edx edx +
jle loc_44CCCA  +
sub edx 1 +
mov [ebp+0Ch] edx +
mov edx [esp+5Ch+var_54] +
shrd esi edi +
shr edi 4 +
test ecx ecx +
jz loc_44CED0  +
lea ebx [edx+1] +
cmp ecx 9 +
mov [esp+5Ch+var_54] ebx +
jle loc_44CEE4  +
movzx ebx byte ptr [ebp+4] +
add ecx 37h +
and ebx 20h +
or ecx ebx +
mov [edx] cl +
mov ecx edi +
or ecx esi +
jnz loc_44CCB0  +
mov ebx ebp +
mov ebp [esp+5Ch+var_54] +
cmp ebp [esp+5Ch+var_48] +
jz loc_44D10B  +
mov edi [ebx+4] +
mov [esp+5Ch+var_54] edi +
mov edi [ebx+8] +
test edi edi +
mov [esp+5Ch+var_44] edi +
jle loc_44D069  +
cwde   +
mov edx ebp +
mov esi eax +
mov eax [ebx+0Ch] +
sub edx [esp+5Ch+var_48] +
mov [esp+5Ch+var_40] esi +
test eax eax +
lea ecx [edx+eax] +
mov eax [esp+5Ch+var_54] +
cmovg edx ecx +
and eax 1C0h +
cmp eax 1 +
sbb eax eax +
lea edi [edx+eax+6] +
mov eax esi +
mov edx 66666667h +
imul  edx +
mov eax esi +
sar eax 1Fh +
sar edx 2 +
mov ecx edx +
sub ecx eax +
jz loc_44D101  +
mov esi 2 +
mov eax 66666667h +
add edi 1 +
imul  ecx +
add esi 1 +
sar ecx 1Fh +
sar edx 2 +
sub edx ecx +
mov ecx edx +
jnz loc_44CD71  +
movsx esi si +
cmp [esp+5Ch+var_44] edi +
jle loc_44CF50  +
mov eax [esp+5Ch+var_44] +
sub eax edi +
test [esp+5Ch+var_54] 600h +
jnz loc_44D083  +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_44CF57  +
lea esi [esi+0] +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44CDC0  +
mov eax [ebx+4] +
mov [esp+5Ch+var_54] eax +
test byte ptr [esp+5Ch+var_54] 80h +
jz loc_44CF62  +
nop   +
lea esi [esi+0] +
mov edx ebx +
mov eax 2Dh +
call sub_44BC20  +
jmp loc_44CF7B  +
or dword ptr [ebx+4] 80h +
jmp loc_44CC59  +
shld edi esi +
add esi esi +
test edi edi +
jns loc_44CE10  +
mov ecx 0Eh +
xor ebp ebp +
shrd esi edi +
sub ecx edx +
shr edi 1 +
mov [esp+5Ch+var_50] edi +
shl ecx 2 +
mov edi 4 +
mov [esp+5Ch+var_54] esi +
shld ebp edi +
xor esi esi +
shl edi cl +
test cl 20h +
cmovnz ebp edi +
cmovnz edi esi +
add [esp+5Ch+var_54] edi +
adc [esp+5Ch+var_50] ebp +
mov ebp [esp+5Ch+var_50] +
mov edi [esp+5Ch+var_54] +
test ebp ebp +
js loc_44D0AD  +
shld ebp edi +
add edi edi +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_50] ebp +
mov edi [esp+5Ch+var_50] +
mov ecx 0Fh +
xor ebp ebp +
mov esi [esp+5Ch+var_54] +
sub ecx edx +
shl ecx 2 +
shrd esi edi +
shr edi cl +
and ecx 20h +
cmovnz esi edi +
cmovnz edi ebp +
jmp loc_44CC9D  +
mov edi [esp+2Ch] +
mov esi [esp+5Ch+var_36+2] +
mov eax edi +
or eax esi +
jz loc_44D078  +
test edi edi +
js loc_44D110  +
mov edx 0FFFFC001h +
shld edi esi +
mov eax edx +
add esi esi +
sub edx 1 +
test edi edi +
jns loc_44CEB5  +
jmp loc_44CC87  +
cmp edx [esp+5Ch+var_48] +
ja loc_44CEDD  +
mov ebx [ebp+0Ch] +
test ebx ebx +
js loc_44CF45  +
lea ebx [edx+1] +
mov [esp+5Ch+var_54] ebx +
add ecx 30h +
jmp loc_44CCF9  +
mov edx [esp+5Ch+var_48] +
cmp [esp+5Ch+var_54] edx +
ja loc_44CF10  +
test byte ptr [ebp+5] 8 +
jnz loc_44CF10  +
mov ebx [ebp+0Ch] +
mov edx [esp+5Ch+var_54] +
test ebx ebx +
jle loc_44CF1A  +
nop   +
lea esi [esi+0] +
mov ebx [esp+5Ch+var_54] +
lea edx [ebx+1] +
mov byte ptr [ebx] 2Eh +
cmp edi 0 +
ja loc_44CF24  +
cmp esi 1 +
jbe loc_44CF3C  +
lea ebx [eax-1] +
shrd esi edi +
mov eax ebx +
shr edi 1 +
cmp edi 0 +
lea ebx [eax-1] +
ja loc_44CF27  +
cmp esi 1 +
ja loc_44CF27  +
xor esi esi +
xor edi edi +
jmp loc_44CCD5  +
mov [esp+5Ch+var_54] edx +
jmp loc_44CCFB  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
test byte ptr [esp+5Ch+var_54] 80h +
jnz loc_44CDF0  +
test [esp+5Ch+var_54] 100h +
jnz loc_44D08B  +
test byte ptr [esp+5Ch+var_54] 40h +
jnz loc_44D09C  +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 58h +
call sub_44BC20  +
mov eax [ebx+8] +
test eax eax +
jle loc_44CFC9  +
test byte ptr [ebx+5] 2 +
jz loc_44CFC9  +
sub eax 1 +
mov [ebx+8] eax +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_44CFB0  +
cmp ebp [esp+5Ch+var_48] +
mov edi [esp+5Ch+var_48] +
ja loc_44CFF7  +
jmp loc_44D01E  +
movzx eax word ptr [ebx+1Ch] +
test ax ax +
mov word ptr [esp+5Ch+var_36] ax +
jz loc_44CFF3  +
mov ecx ebx +
mov edx 1 +
lea eax [esp+5Ch+var_36] +
call sub_44BC80  +
cmp ebp edi +
jz loc_44D01E  +
sub ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp eax 2Eh +
jz loc_44D060  +
cmp eax 2Ch +
jz loc_44CFD5  +
mov edx ebx +
call sub_44BC20  +
nop   +
jmp loc_44CFF3  +
mov edx ebx +
mov eax 30h +
call sub_44BC20  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_44D012  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 50h +
call sub_44BC20  +
mov eax [esp+5Ch+var_40] +
mov ecx ebx +
add [ebx+8] esi +
or dword ptr [ebx+4] 1C0h +
cdq   +
call sub_44BEA0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_44C470  +
jmp loc_44CFF3  +
cwde   +
mov esi 2 +
mov [esp+5Ch+var_40] eax +
jmp loc_44CF57  +
xor eax eax +
xor esi esi +
xor edi edi +
jmp loc_44CC87  +
mov [ebx+8] eax +
jmp loc_44CF57  +
mov edx ebx +
mov eax 2Bh +
call sub_44BC20  +
jmp loc_44CF7B  +
mov edx ebx +
mov eax 20h +
call sub_44BC20  +
jmp loc_44CF7B  +
add eax 1 +
jmp loc_44CE6F  +
fstp  st +
mov ecx ebx +
mov edx offset unk_469AA0 +
xor eax eax +
call sub_44BE10  +
jmp loc_44D051  +
mov ecx ebx +
mov edx offset unk_469AA4 +
mov eax esi +
call sub_44BE10  +
jmp loc_44D051  +
lea edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_48] edi +
mov edi [ebx+4] +
test edx edx +
mov [esp+5Ch+var_54] edi +
jle loc_44D11A  +
mov byte ptr [esp+5Ch+var_24] 2Eh +
lea edx [esp+5Ch+var_24+1] +
lea ebp [edx+1] +
mov byte ptr [edx] 30h +
jmp loc_44CD18  +
mov esi 2 +
jmp loc_44CD8D  +
mov edx [ebx+0Ch] +
jmp loc_44D0E2  +
mov eax 0FFFFC002h +
jmp loc_44CC87  +
and edi 800h +
mov edx [esp+5Ch+var_48] +
jz loc_44D0F6  +
jmp loc_44D0ED  +
***
push esi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_C] +
mov edi [esp+7Ch+arg_C] +
mov ebx [eax] +
mov eax ebx +
and eax 0FFFFFFCFh +
mov [edi] eax +
mov eax ebx +
and eax 7 +
cmp eax 4 +
ja loc_44EFEC  +
jmp ds:off_469C50[eax*4]  +
mov eax [esp+7Ch+arg_0] +
xor edx edx +
mov esi [eax] +
cmp esi 20h +
jle loc_44DB71  +
mov eax 20h +
add eax eax +
add edx 1 +
cmp esi eax +
jg loc_44DB68  +
mov [esp+7Ch+var_7C] edx +
call sub_44F920  +
mov edi [esp+7Ch+arg_8] +
mov ebp eax +
lea eax [esi-1] +
sar eax 5 +
lea edi [edi+eax*4] +
mov eax [esp+7Ch+arg_8] +
lea ecx [ebp+14h] +
mov edx ecx +
mov dword ptr [esp+7Ch+var_64] ecx +
nop   +
lea esi [esi+0] +
mov ecx [eax] +
add eax 4 +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
jnb loc_44DBA0  +
mov ecx dword ptr [esp+7Ch+var_64] +
sub edx ecx +
sar edx 2 +
jmp loc_44DBCA  +
test eax eax +
jz loc_44E085  +
mov edx eax +
lea eax [edx-1] +
mov edi [ecx+eax*4] +
test edi edi +
jz loc_44DBC0  +
bsr eax [ebp+edx*4+10h] +
mov [ebp+10h] edx +
shl edx 5 +
mov [esp+7Ch+var_54] edx +
xor eax 1Fh +
sub [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_450480  +
mov edi [esp+7Ch+arg_4] +
test eax eax +
mov [esp+7Ch+var_10] eax +
jnz loc_44E0A0  +
mov ecx [ebp+10h] +
test ecx ecx +
jnz loc_44DCB8  +
mov [esp+7Ch+var_7C] ebp +
call sub_44F9F0  +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 1 +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_7C] offset a0_0 +
mov [esp+7Ch+var_78] eax +
call sub_44F5A0  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 3 +
mov [esp+7Ch+var_7C] offset aNan +
mov [esp+7Ch+var_78] eax +
call sub_44F5A0  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 8 +
mov [esp+7Ch+var_7C] offset aInfinity +
mov [esp+7Ch+var_78] eax +
call sub_44F5A0  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_450140  +
mov eax [esp+7Ch+var_54] +
lea eax [edi+eax-1] +
mov [esp+7Ch+var_24] eax +
fstp  [esp+7Ch+var_64] +
mov edx dword ptr [esp+7Ch+var_64+4] +
and edx 0FFFFFh +
mov [esp+7Ch+var_50] edx +
cdq   +
or [esp+7Ch+var_50] 3FF00000h +
mov ecx [esp+7Ch+var_50] +
mov dword ptr [esp+7Ch+var_64+4] ecx +
mov ecx edx +
fld  [esp+7Ch+var_64] +
xor ecx eax +
fsub  ds:flt_469C64 +
sub ecx edx +
sub ecx 435h +
test ecx ecx +
fmul  ds:dbl_469C68 +
fadd  ds:dbl_469C70 +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_469C78 +
faddp st(1) st +
jle loc_44DD39  +
mov [esp+7Ch+var_24] ecx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_469C80 +
faddp st(1) st +
fnstcw  [esp+7Ch+var_1E] +
movzx ecx [esp+7Ch+var_1E] +
mov ch 0Ch +
mov [esp+7Ch+var_20] cx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_58] +
fldcw  [esp+7Ch+var_1E] +
fldz   +
fucomip st st(1) +
ja loc_44E525  +
fstp  st +
mov ecx eax +
shl ecx 14h +
add ecx [esp+7Ch+var_50] +
cmp [esp+7Ch+var_58] 16h +
mov [esp+7Ch+var_34] 1 +
mov dword ptr [esp+7Ch+var_64+4] ecx +
ja loc_44DDA5  +
mov ecx [esp+7Ch+var_58] +
fld  ds:dbl_469CE0[ecx*8] +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_44E0E0  +
sub [esp+7Ch+var_58] 1 +
mov [esp+7Ch+var_34] 0 +
mov edx [esp+7Ch+var_54] +
mov [esp+7Ch+var_44] 0 +
sub edx eax +
sub edx 1 +
mov [esp+7Ch+var_4C] edx +
js loc_44E510  +
mov ecx [esp+7Ch+var_58] +
test ecx ecx +
js loc_44E4F0  +
add [esp+7Ch+var_4C] ecx +
mov [esp+7Ch+var_30] ecx +
mov [esp+7Ch+var_3C] 0 +
cmp [esp+7Ch+arg_10] 9 +
ja loc_44E0C2  +
cmp [esp+7Ch+arg_10] 5 +
jle loc_44E0CD  +
sub [esp+7Ch+arg_10] 4 +
xor eax eax +
cmp [esp+7Ch+arg_10] 3 +
jz loc_44E75E  +
jle loc_44E450  +
cmp [esp+7Ch+arg_10] 4 +
mov [esp+7Ch+var_38] 1 +
jz loc_44E0F0  +
cmp [esp+7Ch+arg_10] 5 +
jnz loc_44E466  +
mov ecx [esp+7Ch+var_58] +
add ecx [esp+7Ch+arg_14] +
mov [esp+7Ch+var_28] ecx +
add ecx 1 +
test ecx ecx +
mov [esp+7Ch+var_50] ecx +
jle loc_44E9B9  +
cmp ecx 0Eh +
setbe dl  +
and edx eax +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_2C] edx +
call sub_44F560  +
mov edx [esp+7Ch+var_2C] +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
sub eax 1 +
mov [esp+7Ch+var_48] eax +
jz loc_44DEAD  +
mov eax 2 +
cmovns eax [esp+7Ch+var_48] +
and ebx 8 +
mov [esp+7Ch+var_48] eax +
jz loc_44DEAD  +
mov eax 3 +
sub eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_48] eax +
test dl dl +
jz loc_44E176  +
mov eax [esp+7Ch+var_48] +
or eax [esp+7Ch+var_58] +
jnz loc_44E176  +
mov eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_10] 0 +
fld  [esp+7Ch+var_64] +
test eax eax +
jz loc_44DEE1  +
fld1   +
fucomip st st(1) +
ja loc_44ED3F  +
fld  st +
mov eax [esp+7Ch+var_50] +
fadd st st(1) +
fadd  ds:flt_469C9C +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
test eax eax +
jz loc_44E13C  +
mov ecx [esp+7Ch+var_50] +
fld  st +
mov [esp+7Ch+var_2C] 0 +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_44EA1A  +
fld  ds:flt_469CA4 +
fdiv  ds:dbl_469CD8[ecx*8] +
fnstcw  [esp+7Ch+var_1E] +
mov edx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 0 +
movzx eax [esp+7Ch+var_1E] +
mov ebx edx +
add ebx 1 +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fsub  [esp+7Ch+var_64] +
fxch  st(1) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [edx] al +
fucomi st st(1) +
ja loc_44E012  +
fld  st(1) +
fsubr  ds:flt_469C90 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_44EBE0  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_44E162  +
fld  ds:flt_469C94 +
jmp loc_44DFDB  +
fld  st(1) +
fsubr  ds:flt_469C90 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_44EBE8  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_44E168  +
fxch  st(1) +
fxch  st(2) +
fmul st(1) st +
add ebx 1 +
fmul st(2) st +
fxch  st(2) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [ebx-1] al +
fucomi st st(1) +
jbe loc_44DFB0  +
fstp  st +
fstp  st(1) +
fstp  st(1) +
jmp loc_44E016  +
fstp  st +
fstp  st(1) +
fldz   +
fxch  st(1) +
mov eax [esp+7Ch+var_2C] +
fucomip st st(1) +
fstp  st +
jp loc_44E02A  +
jz loc_44E954  +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 10h +
lea esi [esi+0] +
mov [esp+7Ch+var_7C] ebp +
call sub_44F9F0  +
mov eax [esp+7Ch+arg_18] +
mov esi [esp+7Ch+var_58] +
mov byte ptr [ebx] 0 +
mov [eax] esi +
mov eax [esp+7Ch+arg_1C] +
test eax eax +
jz loc_44E06C  +
mov eax [esp+7Ch+arg_1C] +
mov [eax] ebx +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_50] +
or [eax] esi +
mov eax [esp+7Ch+var_40] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+10h] 0 +
mov [esp+7Ch+var_54] 0 +
jmp loc_44DBEA  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_450360  +
mov eax [esp+7Ch+var_10] +
mov edi [esp+7Ch+arg_4] +
sub [esp+7Ch+var_54] eax +
add edi eax +
jmp loc_44DC05  +
mov [esp+7Ch+arg_10] 0 +
add eax 3FEh +
cmp eax 7F7h +
setbe al  +
jmp loc_44DE02  +
mov [esp+7Ch+var_34] 0 +
jmp loc_44DDA5  +
mov edx [esp+7Ch+arg_14] +
test edx edx +
jle loc_44E9A4  +
cmp [esp+7Ch+arg_14] 0Eh +
setbe dl  +
mov ecx [esp+7Ch+arg_14] +
and edx eax +
mov [esp+7Ch+var_10] ecx +
mov eax ecx +
mov [esp+7Ch+var_28] ecx +
mov [esp+7Ch+var_50] ecx +
jmp loc_44DE66  +
fld  st +
fadd st st(1) +
fadd  ds:flt_469C9C +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
fld  st +
fsub  ds:flt_469CA0 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomi st st(1) +
ja loc_44EAED  +
fxch  st(1) +
fchs   +
fucomip st st(1) +
fstp  st +
ja loc_44E4B5  +
jmp loc_44E172  +
fstp  st +
fstp  st +
jmp loc_44E172  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_44E172  +
fstp  st +
fstp  [esp+7Ch+var_64] +
test edi edi +
js loc_44E231  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_58] +
cmp ebx [eax+14h] +
jg loc_44E231  +
mov eax [esp+7Ch+var_50] +
fld  ds:dbl_469CE0[ebx*8] +
test eax eax +
jg loc_44E88B  +
mov eax [esp+7Ch+arg_14] +
shr eax 1Fh +
test al al +
jz loc_44E88B  +
mov edi [esp+7Ch+var_50] +
test edi edi +
jnz loc_44E4B9  +
fmul  ds:flt_469CA0 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jnb loc_44E4BB  +
mov eax ebx +
xor edi edi +
add eax 2 +
mov [esp+7Ch+var_58] eax +
mov dword ptr [esp+7Ch+var_64] 0 +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 20h +
lea ebx [eax+1] +
mov byte ptr [eax] 31h +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_44F9F0  +
test edi edi +
jz loc_44E040  +
cmp [esp+7Ch+var_4C] edi +
jnz loc_44E741  +
mov [esp+7Ch+var_7C] edi +
call sub_44F9F0  +
jmp loc_44E040  +
mov ecx [esp+7Ch+var_38] +
test ecx ecx +
jz loc_44E6C0  +
mov ebx [esp+7Ch+arg_0] +
mov ecx edi +
sub esi [esp+7Ch+var_54] +
mov edx [ebx+4] +
sub ecx esi +
lea eax [esi+1] +
mov [esp+7Ch+var_10] eax +
cmp ecx edx +
jge loc_44E6E0  +
cmp [esp+7Ch+arg_10] 3 +
jz loc_44E6E0  +
cmp [esp+7Ch+arg_10] 5 +
jz loc_44E6E0  +
mov eax edi +
sub eax edx +
add eax 1 +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_10] eax +
jle loc_44E2A1  +
mov edx [esp+7Ch+var_50] +
test edx edx +
jle loc_44E2A1  +
cmp [esp+7Ch+var_50] eax +
jl loc_44E6EE  +
mov esi [esp+7Ch+var_3C] +
mov ebx [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] 1 +
add [esp+7Ch+var_44] eax +
add [esp+7Ch+var_4C] eax +
call sub_44FB40  +
mov edi eax +
mov eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_44E2E2  +
test ebx ebx +
jle loc_44E2E2  +
mov eax [esp+7Ch+var_4C] +
cmp eax ebx +
cmovg eax ebx +
sub [esp+7Ch+var_44] eax +
sub ebx eax +
sub [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_10] eax +
mov ecx [esp+7Ch+var_3C] +
test ecx ecx +
jle loc_44E332  +
mov edx [esp+7Ch+var_38] +
test edx edx +
jz loc_44E72A  +
test esi esi +
jle loc_44E326  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] esi +
call sub_44FCC0  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
mov edi eax +
call sub_44FB70  +
mov [esp+7Ch+var_7C] ebp +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_44F9F0  +
mov eax dword ptr [esp+7Ch+var_64] +
mov ebp eax +
mov eax [esp+7Ch+var_3C] +
sub eax esi +
jnz loc_44E72E  +
mov [esp+7Ch+var_7C] 1 +
call sub_44FB40  +
mov esi [esp+7Ch+var_30] +
test esi esi +
mov dword ptr [esp+7Ch+var_64] eax +
jle loc_44E35A  +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_44FCC0  +
mov dword ptr [esp+7Ch+var_64] eax +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_3C] 0 +
jle loc_44E968  +
mov eax [esp+7Ch+var_30] +
mov esi 1Fh +
test eax eax +
jz loc_44E38C  +
mov esi dword ptr [esp+7Ch+var_64] +
mov eax [esi+10h] +
bsr esi [esi+eax*4+10h] +
xor esi 1Fh +
sub esi [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_44] +
sub esi 4 +
and esi 1Fh +
add edx esi +
mov eax esi +
test edx edx +
mov [esp+7Ch+var_10] esi +
jle loc_44E3B8  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] edx +
call sub_44FE60  +
mov ebp eax +
mov eax [esp+7Ch+var_10] +
add eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_44E3D4  +
mov [esp+7Ch+var_78] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_44FE60  +
mov dword ptr [esp+7Ch+var_64] eax +
mov eax [esp+7Ch+var_34] +
test eax eax +
jnz loc_44E76B  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jg loc_44E540  +
cmp [esp+7Ch+arg_10] 2 +
jle loc_44E540  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jnz loc_44E4C5  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 5 +
mov [esp+7Ch+var_7C] eax +
call sub_44FA60  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_44FF70  +
test eax eax +
jle loc_44E4C5  +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E1EC  +
cmp [esp+7Ch+arg_10] 2 +
mov [esp+7Ch+var_38] 0 +
jz loc_44E0F0  +
mov [esp+7Ch+var_24] esi +
xor edx edx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_469C88 +
mov [esp+7Ch+var_38] 1 +
mov [esp+7Ch+var_28] 0FFFFFFFFh +
mov [esp+7Ch+var_50] 0FFFFFFFFh +
mov [esp+7Ch+arg_14] 0 +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
add eax 3 +
mov [esp+7Ch+var_10] eax +
jmp loc_44DE66  +
fstp  st +
jmp loc_44E4BB  +
fstp  st +
mov dword ptr [esp+7Ch+var_64] 0 +
xor edi edi +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 10h +
neg eax  +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
mov ecx [esp+7Ch+var_58] +
sub [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_30] 0 +
neg ecx  +
mov [esp+7Ch+var_3C] ecx +
jmp loc_44DDDC  +
mov ecx edx +
neg ecx  +
mov [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_4C] 0 +
jmp loc_44DDC0  +
fild  [esp+7Ch+var_58] +
fucomip st st(1) +
fstp  st +
jp loc_44E535  +
jz loc_44DD61  +
sub [esp+7Ch+var_58] 1 +
jmp loc_44DD61  +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_44E7CB  +
add ebx esi +
test ebx ebx +
jle loc_44E560  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] ebx +
call sub_44FE60  +
mov edi eax +
mov ebx [esp+7Ch+var_3C] +
mov esi edi +
test ebx ebx +
jnz loc_44ECCA  +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 1 +
mov [esp+7Ch+var_4C] ebx +
jmp loc_44E659  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_44] eax +
call sub_44F9F0  +
mov eax [esp+7Ch+var_44] +
mov ecx eax +
or ecx [esp+7Ch+arg_10] +
jnz loc_44E5B6  +
mov ecx [esp+7Ch+arg_8] +
test byte ptr [ecx] 1 +
jnz loc_44E5B6  +
mov ecx [esp+7Ch+var_48] +
test ecx ecx +
jz loc_44EEAB  +
test ebx ebx +
js loc_44EB0A  +
or ebx [esp+7Ch+arg_10] +
jnz loc_44E5D7  +
mov ebx [esp+7Ch+arg_8] +
test byte ptr [ebx] 1 +
jz loc_44EB0A  +
test eax eax +
jg loc_44ED95  +
add [esp+7Ch+var_4C] 1 +
movzx eax byte ptr [esp+7Ch+var_54] +
mov ebx [esp+7Ch+var_4C] +
mov [ebx-1] al +
mov eax [esp+7Ch+var_50] +
cmp [esp+7Ch+var_10] eax +
jz loc_44ED86  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_44FA60  +
cmp edi esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov [esp+7Ch+var_7C] edi +
mov ebp eax +
jz loc_44E6D0  +
call sub_44FA60  +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov edi eax +
call sub_44FA60  +
mov esi eax +
add [esp+7Ch+var_10] 1 +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44F610  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] ebp +
mov ebx eax +
add ebx 30h +
mov [esp+7Ch+var_54] ebx +
mov [esp+7Ch+var_3C] eax +
call sub_44FF70  +
mov [esp+7Ch+var_78] esi +
mov ebx eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_44FFC0  +
mov edx eax +
mov eax 1 +
mov ecx [edx+0Ch] +
test ecx ecx +
jnz loc_44E583  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_44] edx +
call sub_44FF70  +
mov edx [esp+7Ch+var_44] +
jmp loc_44E583  +
mov esi [esp+7Ch+var_3C] +
xor edi edi +
mov ebx [esp+7Ch+var_44] +
jmp loc_44E2BF  +
call sub_44FA60  +
mov edi eax +
mov esi eax +
jmp loc_44E654  +
cmp [esp+7Ch+arg_10] 1 +
jle loc_44E2A1  +
mov edi [esp+7Ch+var_3C] +
mov eax [esp+7Ch+var_50] +
mov esi edi +
sub eax 1 +
sub esi eax +
cmp edi eax +
jge loc_44E711  +
mov edx eax +
xor esi esi +
sub edx [esp+7Ch+var_3C] +
add [esp+7Ch+var_30] edx +
mov [esp+7Ch+var_3C] eax +
mov eax [esp+7Ch+var_50] +
test eax eax +
js loc_44EC9D  +
mov [esp+7Ch+var_10] eax +
mov ebx [esp+7Ch+var_44] +
jmp loc_44E2A9  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44FCC0  +
mov ebp eax +
jmp loc_44E332  +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_44E224  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call sub_44F9F0  +
jmp loc_44E224  +
mov [esp+7Ch+var_38] 0 +
jmp loc_44DE3A  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44FF70  +
test eax eax +
jns loc_44E3E0  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
sub [esp+7Ch+var_58] 1 +
call sub_44FA60  +
mov ebp eax +
mov eax [esp+7Ch+var_38] +
test eax eax +
jnz loc_44EF3C  +
cmp [esp+7Ch+var_28] 0 +
mov eax [esp+7Ch+var_28] +
jg loc_44E7C7  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_44EF74  +
mov [esp+7Ch+var_50] eax +
mov esi [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] edi +
mov edi dword ptr [esp+7Ch+var_64] +
jmp loc_44E804  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_44FA60  +
add [esp+7Ch+var_10] 1 +
mov ebp eax +
mov [esp+7Ch+var_78] edi +
add ebx 1 +
mov [esp+7Ch+var_7C] ebp +
call sub_44F610  +
add eax 30h +
mov [ebx-1] al +
cmp esi [esp+7Ch+var_10] +
jg loc_44E7E5  +
mov edi [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_4C] 0 +
mov eax [esp+7Ch+var_48] +
test eax eax +
jz loc_44EC36  +
cmp eax 2 +
jz loc_44EC6E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_44EE22  +
movzx edx byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
jmp loc_44E866  +
cmp eax ecx +
jz loc_44E9FB  +
movzx edx byte ptr [eax-1] +
mov ebx eax +
cmp dl 39h +
lea eax [ebx-1] +
jz loc_44E858  +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
fld  [esp+7Ch+var_64] +
fld  st +
mov edi [esp+7Ch+var_40] +
fdiv st st(2) +
fnstcw  [esp+7Ch+var_1E] +
mov [esp+7Ch+var_10] 1 +
lea ebx [edi+1] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(2) +
mov [edi] dl +
fsubp st(1) st +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_44EF2D  +
mov edx [esp+7Ch+var_10] +
cmp [esp+7Ch+var_50] edx +
jz loc_44E9D7  +
fld  ds:flt_469C94 +
mov ecx [esp+7Ch+var_50] +
jmp loc_44E90C  +
mov edx [esp+7Ch+var_10] +
cmp ecx edx +
jz loc_44E9D5  +
add edx 1 +
fmul st(1) st +
add ebx 1 +
mov [esp+7Ch+var_10] edx +
fld  st(1) +
fdiv st st(3) +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(3) +
mov [ebx-1] dl +
fsubp st(2) st +
fldz   +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jp loc_44E900  +
jnz loc_44E900  +
fstp  st +
fstp  st +
fstp  st +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 0 +
jmp loc_44E040  +
cmp [esp+7Ch+var_54] 1 +
jnz loc_44E370  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
add eax 1 +
cmp [esp+7Ch+arg_4] eax +
jle loc_44E370  +
add [esp+7Ch+var_44] 1 +
add [esp+7Ch+var_4C] 1 +
mov [esp+7Ch+var_3C] 1 +
jmp loc_44E370  +
mov edx 1 +
mov [esp+7Ch+arg_14] 1 +
jmp loc_44E10A  +
cmp [esp+7Ch+var_50] 0Eh +
mov [esp+7Ch+var_10] 1 +
setbe dl  +
and edx eax +
mov eax 1 +
jmp loc_44DE66  +
fstp  st +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_44ED0E  +
fstp  st +
fstp  st +
cmp [esp+7Ch+var_48] 1 +
jz loc_44EE0D  +
mov eax [esp+7Ch+var_58] +
jmp loc_44E02A  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] 20h +
mov byte ptr [eax] 31h +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
fnstcw  [esp+7Ch+var_1E] +
fld  [esp+7Ch+var_64] +
fmul  ds:dbl_469CD8[ecx*8] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
fld  ds:flt_469C94 +
fxch  st(2) +
mov [esp+7Ch+var_20] ax +
jmp loc_44EA59  +
fmul st st(2) +
add edx 1 +
mov [esp+7Ch+var_10] edx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_44EA77  +
mov [esp+7Ch+var_24] eax +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
add ebx 1 +
add eax 30h +
mov [ebx-1] al +
mov edx [esp+7Ch+var_10] +
cmp edx ecx +
jnz loc_44EA50  +
fstp  st(2) +
fxch  st(1) +
fld  ds:flt_469CA4 +
fld  st(2) +
fadd st st(1) +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
ja loc_44EBF2  +
fsubrp st(2) st +
fxch  st(1) +
fucomip st st(1) +
jbe loc_44E170  +
fstp  st(1) +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_44EAC0  +
jz loc_44EE9E  +
mov [esp+7Ch+var_50] 10h +
jmp loc_44EAD6  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 30h +
lea edx [ebx-1] +
jz loc_44EAD0  +
mov eax [esp+7Ch+var_2C] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E040  +
fstp  st +
fstp  st +
fstp  st +
mov [esp+7Ch+var_58] 2 +
xor edi edi +
mov dword ptr [esp+7Ch+var_64] 0 +
jmp loc_44E1EC  +
mov edx [esp+7Ch+var_48] +
mov ebx [esp+7Ch+var_4C] +
test edx edx +
jz loc_44EDE6  +
cmp dword ptr [ebp+10h] 1 +
jle loc_44EDDC  +
cmp [esp+7Ch+var_48] 2 +
jnz loc_44EB93  +
jmp loc_44EDFC  +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [ebx-1] al +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_44FA60  +
cmp edi esi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
cmovz edi eax +
mov [esp+7Ch+var_50] eax +
call sub_44FA60  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44F610  +
mov edx [esp+7Ch+var_50] +
mov esi edx +
add eax 30h +
mov [esp+7Ch+var_54] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_44FF70  +
test eax eax +
jg loc_44EB30  +
cmp [esp+7Ch+var_54] 39h +
jz loc_44EE3A  +
add [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_50] 20h +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [ebx-1] al +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_44EBFA  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
jmp loc_44EBFA  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov ecx [esp+7Ch+var_40] +
jmp loc_44EC0E  +
cmp edx ecx +
jz loc_44ECB4  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 39h +
lea edx [ebx-1] +
jz loc_44EC00  +
mov [esp+7Ch+var_40] ecx +
add eax 1 +
mov [edx] al +
mov eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E040  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_44FE60  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44FF70  +
cmp eax 0 +
jg loc_44E84E  +
jnz loc_44EC6E  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_44E84E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_44EFD5  +
mov [esp+7Ch+var_50] 10h +
jmp loc_44EC84  +
mov ebx eax +
cmp byte ptr [ebx-1] 30h +
lea eax [ebx-1] +
jz loc_44EC82  +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
mov ebx [esp+7Ch+var_44] +
xor eax eax +
sub ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 0 +
jmp loc_44E2A9  +
mov [esp+7Ch+var_40] ecx +
mov eax 31h +
add [esp+7Ch+var_2C] 1 +
mov byte ptr [ecx] 30h +
jmp loc_44EC1C  +
mov eax [edi+4] +
mov [esp+7Ch+var_7C] eax +
call sub_44F920  +
lea ecx [eax+0Ch] +
mov ebx eax +
mov eax [edi+10h] +
mov [esp+7Ch+var_7C] ecx +
lea edx ds:8[eax*4] +
lea eax [edi+0Ch] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call memcpy  +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] ebx +
call sub_44FE60  +
mov esi eax +
jmp loc_44E56E  +
fadd st st +
fucomi st st(1) +
ja loc_44EE09  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_44ED26  +
jz loc_44EEF5  +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_44EAD6  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jz loc_44E126  +
mov ecx [esp+7Ch+var_28] +
test ecx ecx +
jle loc_44E172  +
fld  st +
fmul  ds:flt_469C94 +
mov [esp+7Ch+var_2C] 0FFFFFFFFh +
fld  st +
fmul  ds:flt_469C98 +
fadd  ds:flt_469C9C +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
jmp loc_44DF11  +
mov ebx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
jmp loc_44E82F  +
cmp [esp+7Ch+var_48] 2 +
jz loc_44E5DF  +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_44EE3A  +
movzx edx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [esp+7Ch+var_50] 20h +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_44EB24  +
test eax eax +
jg loc_44EE54  +
mov [esp+7Ch+var_50] 0 +
cmp dword ptr [ebp+10h] 1 +
jle loc_44EF16  +
mov [esp+7Ch+var_50] 10h +
jmp loc_44EBBF  +
fstp  st +
fstp  st +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] edi +
jmp loc_44EC0E  +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_44E84E  +
mov [esp+7Ch+var_50] 0 +
jmp loc_44EC84  +
mov byte ptr [ebx] 39h +
mov edx 39h +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov ecx [esp+7Ch+var_40] +
mov edi esi +
jmp loc_44E866  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_44FE60  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_44FF70  +
cmp eax 0 +
jle loc_44EF7D  +
cmp [esp+7Ch+var_54] 39h +
jz loc_44EE3A  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add eax 31h +
mov [esp+7Ch+var_54] eax +
jmp loc_44EDF2  +
mov [esp+7Ch+var_50] 0 +
jmp loc_44EAD6  +
mov ecx ebx +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_44EE3A  +
test ecx ecx +
jle loc_44EFAB  +
mov ecx [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add ecx 31h +
mov [esp+7Ch+var_54] ecx +
movzx ecx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [eax] cl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_44E206  +
test al 1 +
movzx eax byte ptr [ebx-1] +
jnz loc_44EF9A  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_44EAD6  +
cmp dword ptr [ebp+14h] 0 +
mov eax 10h +
cmovz eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_50] eax +
jmp loc_44EBBF  +
jnz loc_44E8E1  +
fstp  st +
fstp  st +
jmp loc_44E950  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_44FA60  +
cmp [esp+7Ch+var_28] 0 +
mov edi eax +
mov eax [esp+7Ch+var_28] +
jg loc_44EF6B  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_44EF74  +
mov [esp+7Ch+var_50] eax +
jmp loc_44E54C  +
mov [esp+7Ch+var_50] eax +
jmp loc_44E3FA  +
lea esi [esi+0] +
jnz loc_44EF8D  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_44EE7F  +
mov [esp+7Ch+var_50] 20h +
jmp loc_44EDF2  +
mov esi [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] esi +
jmp loc_44EC0E  +
cmp dword ptr [ebp+10h] 1 +
mov [esp+7Ch+var_50] 10h +
jg loc_44EED5  +
cmp dword ptr [ebp+14h] 1 +
sbb ecx ecx +
mov [esp+7Ch+var_50] ecx +
not [esp+7Ch+var_50]  +
and [esp+7Ch+var_50] 10h +
jmp loc_44EED5  +
cmp dword ptr [ebp+14h] 0 +
mov [esp+7Ch+var_50] 0 +
jnz loc_44EC78  +
jmp loc_44EC84  +
xor eax eax +
jmp loc_44DC44  +
***
sub esp 48h +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
test edx edx +
mov word ptr [ebp+var_1C] ax +
jnz loc_44F026  +
cmp ax 0FFh +
ja loc_44F078  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
mov eax 1 +
leave   +
retn   +
lea eax [ebp+var_C] +
mov [esp+48h+var_2C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_38] eax +
lea eax [ebp+var_1C] +
mov [esp+48h+var_40] eax +
call ds:WideCharToMultiByte  +
sub esp 20h +
test eax eax +
jz loc_44F078  +
mov edx [ebp+var_C] +
test edx edx +
jz locret_44F024  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
leave   +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
lea eax [esp+20h+var_5] +
mov esi [esp+20h+arg_4] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
movzx esi si +
mov edi [eax] +
call sub_4508D0  +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] edi +
mov [esp+20h+var_18] eax +
call sub_44F000  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_44F0E0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
call sub_4508D0  +
mov [esp+1Ch] eax +
mov eax ds:__mb_cur_max +
mov ebp [eax] +
mov eax [esp+54h] +
mov edi [eax] +
test edi edi +
jz loc_44F1D3  +
test ebx ebx +
jz loc_44F187  +
mov eax [esp+58h] +
xor esi esi +
test eax eax +
jz loc_44F162  +
mov eax edi +
mov edi ebp +
mov ebp eax +
jmp loc_44F133  +
add ebx eax +
add esi eax +
cmp byte ptr [ebx-1] 0 +
jz loc_44F172  +
add ebp 2 +
cmp [esp+58h] esi +
jbe loc_44F160  +
mov eax [esp+1Ch] +
mov [esp+0Ch] edi +
mov [esp+8] eax +
movzx eax word ptr [ebp+0] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44F000  +
test eax eax +
jg loc_44F120  +
mov eax 0FFFFFFFFh +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi ebp +
mov eax [esp+54h] +
mov [eax] edi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov dword ptr [eax] 0 +
add esp 3Ch +
pop ebx  +
lea eax [esi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+58h] +
lea esi [esp+2Bh] +
test edx edx +
jz loc_44F1DF  +
mov eax ebx +
mov ebx edi +
mov edi eax +
jmp loc_44F1B2  +
add edi eax +
cmp byte ptr [esp+eax+2Ah] 0 +
jz loc_44F1E6  +
add ebx 2 +
cmp [esp+58h] edi +
jbe loc_44F1DD  +
mov eax [esp+1Ch] +
mov [esp+0Ch] ebp +
mov [esp+8] eax +
movzx eax word ptr [ebx] +
mov [esp] esi +
mov [esp+4] eax +
call sub_44F000  +
test eax eax +
jg loc_44F1A0  +
jmp loc_44F153  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
mov eax ebx +
jmp loc_44F158  +
***
lea eax [edi-1] +
jmp loc_44F158  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
test ebx ebx +
jz loc_44F334  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_44F340  +
mov eax [esi] +
mov dword ptr [esi] 0 +
mov [ebp+var_C] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_44F2C0  +
cmp [ebp+arg_14] 1 +
jbe loc_44F2A0  +
cmp byte ptr [ebp+var_C] 0 +
jnz loc_44F2D1  +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] eax +
call ds:IsDBCSLeadByteEx  +
sub esp 8 +
test eax eax +
jz loc_44F2A0  +
cmp [ebp+arg_8] 1 +
jbe loc_44F35C  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_44F347  +
lea esp [ebp-8] +
mov eax 2 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_44F2F7  +
movzx eax byte ptr [ebx] +
mov edx [ebp+arg_0] +
mov [edx] ax +
lea esp [ebp-8] +
mov eax 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
xor eax eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [ebp+var_C+1] al +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_28] eax +
lea eax [ebp+var_C] +
mov [esp+38h+var_30] eax +
jmp loc_44F273  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_44F347  +
mov eax 1 +
jmp loc_44F2CA  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_44F2CA  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
jmp loc_44F2CA  +
movzx eax byte ptr [ebx] +
mov [esi] al +
mov eax 0FFFFFFFEh +
jmp loc_44F2CA  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [esp+38h+arg_0] +
mov word ptr [esp+38h+var_A] ax +
lea eax [esp+38h+var_A] +
mov esi [esp+38h+arg_C] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
mov edi [eax] +
call sub_4508D0  +
test esi esi +
mov edx offset unk_46B718 +
cmovnz edx esi +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_24] edi +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_34] eax +
call sub_44F1F0  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov eax offset unk_46B714 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+5Ch] +
mov esi [esp+54h] +
mov ebp [esp+50h] +
mov edi [esp+58h] +
test edx edx +
cmovnz eax [esp+5Ch] +
mov [esp+5Ch] eax +
call sub_4508D0  +
test esi esi +
mov [esp+18h] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+1Ch] eax +
jz loc_44F4F0  +
mov ecx [esi] +
test ecx ecx +
jz loc_44F4F0  +
test ebp ebp +
jz loc_44F493  +
test edi edi +
jz loc_44F4F0  +
mov [esp+54h] esi +
xor ebx ebx +
mov esi ebp +
mov ebp [esp+54h] +
jmp loc_44F448  +
mov ecx [ebp+0] +
add ebx eax +
add esi 2 +
add ecx eax +
cmp edi ebx +
mov [ebp+0] ecx +
jbe loc_44F478  +
mov eax [esp+1Ch] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+14h] eax +
mov eax [esp+18h] +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp+0Ch] eax +
mov eax edi +
sub eax ebx +
mov [esp+8] eax +
call sub_44F1F0  +
test eax eax +
jg loc_44F437  +
test eax eax +
jnz loc_44F4E6  +
cmp ebx edi +
nop   +
jnb loc_44F4E6  +
mov dword ptr [ebp+0] 0 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor ebx ebx +
test edi edi +
mov [esp+2Eh] ax +
jz loc_44F4E6  +
mov [esp+58h] edi +
lea ebp [esp+2Eh] +
mov edi esi +
mov esi [esp+1Ch] +
jmp loc_44F4BE  +
mov ecx [edi] +
add ebx eax +
add ecx eax +
cmp [esp+58h] ebx +
mov [edi] ecx +
jbe loc_44F4E6  +
mov eax [esp+18h] +
mov [esp+14h] esi +
mov [esp+8] esi +
mov [esp+4] ecx +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_44F1F0  +
test eax eax +
jg loc_44F4B0  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
xor eax eax +
push ebx  +
sub esp 34h +
mov [esp+2Eh] ax +
mov eax ds:__mb_cur_max +
mov ebx [esp+48h] +
mov esi [eax] +
call sub_4508D0  +
test ebx ebx +
mov edx offset unk_46B710 +
cmovnz edx ebx +
mov [esp+0Ch] edx +
mov [esp+14h] esi +
mov [esp+10h] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
lea eax [esp+2Eh] +
mov [esp] eax +
call sub_44F1F0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov ecx [esp+18h+arg_0] +
cmp ecx 13h +
jle loc_44F580  +
mov eax 4 +
add eax eax +
add ebx 1 +
lea edx [eax+0Fh] +
cmp edx ecx +
jl loc_44F574  +
mov [esp+18h+var_18] ebx +
call sub_44F920  +
mov [eax] ebx +
add esp 18h +
add eax 4 +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov [esp+14h+var_14] eax +
call sub_44F560  +
movzx edx byte ptr [ebx] +
lea ecx [ebx+1] +
test dl dl +
mov [eax] dl +
mov edx eax +
jz loc_44F5D7  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
add edx 1 +
test bl bl +
mov [edx] bl +
jnz loc_44F5C7  +
test esi esi +
jz loc_44F5DD  +
mov [esi] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
mov edx [eax+10h] +
xor eax eax +
cmp edx [edi+10h] +
jg loc_44F803  +
mov eax [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_0] +
add eax 14h +
mov edi eax +
mov [esp+4Ch+var_14] eax +
lea eax [edx-1] +
xor edx edx +
mov [esp+4Ch+var_1C] eax +
shl eax 2 +
add edi eax +
lea ebx [esi+14h] +
add eax ebx +
mov [esp+4Ch+var_24] edi +
mov edi [edi] +
mov [esp+4Ch+var_10] eax +
mov eax [eax] +
mov [esp+4Ch+var_20] ebx +
lea ecx [edi+1] +
div  ecx +
mov [esp+4Ch+var_3C] edi +
test eax eax +
mov ebp eax +
mov [esp+4Ch+var_18] eax +
jz loc_44F73F  +
mov edi [esp+4Ch+var_14] +
mov esi ebx +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_38] 0 +
nop   +
add edi 4 +
mov eax ebp +
mov ecx [esi] +
mul  dword ptr [edi-4] +
add eax [esp+4Ch+var_2C] +
adc edx [esp+4Ch+var_28] +
xor ebx ebx +
mov [esp+4Ch+var_28] ebx +
xor ebx ebx +
mov [esp+4Ch+var_34] eax +
mov [esp+4Ch+var_30] 0 +
sub ecx [esp+4Ch+var_34] +
sbb ebx [esp+4Ch+var_30] +
sub ecx [esp+4Ch+var_3C] +
sbb ebx [esp+4Ch+var_38] +
add esi 4 +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_38] 0 +
mov eax ebx +
and eax 1 +
cmp [esp+4Ch+var_24] edi +
mov [esp+4Ch+var_3C] eax +
mov [esi-4] ecx +
jnb loc_44F6A0  +
mov eax [esp+4Ch+var_10] +
mov edi [eax] +
test edi edi +
jnz loc_44F73F  +
mov ecx [esp+4Ch+var_20] +
mov esi eax +
sub eax 4 +
cmp ecx eax +
jnb loc_44F734  +
mov esi [esi-4] +
test esi esi +
jnz loc_44F734  +
mov edx [esp+4Ch+var_1C] +
jmp loc_44F726  +
mov ebx [eax] +
test ebx ebx +
jnz loc_44F730  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_44F720  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_44FF70  +
test eax eax +
js loc_44F7FF  +
xor esi esi +
xor edi edi +
lea eax [ebp+1] +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] esi +
mov esi [esp+4Ch+var_14] +
mov [esp+4Ch+var_38] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_18] eax +
lea esi [esi+0] +
add esi 4 +
mov eax [ebp+0] +
xor ebx ebx +
mov ecx [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+4Ch+var_3C] +
sbb edx [esp+4Ch+var_38] +
add ebp 4 +
mov [esp+4Ch+var_38] 0 +
mov ebx edx +
and ebx 1 +
cmp edi esi +
mov [esp+4Ch+var_3C] ebx +
mov [ebp-4] eax +
jnb loc_44F780  +
mov eax [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_1C] +
lea edx [eax+ebx*4] +
mov edi [edx] +
test edi edi +
jnz loc_44F7FF  +
mov ecx [esp+4Ch+var_20] +
lea eax [edx-4] +
cmp ecx eax +
jnb loc_44F7F4  +
mov esi [edx-4] +
test esi esi +
jnz loc_44F7F4  +
mov edx ebx +
jmp loc_44F7E6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_44F7F0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_44F7E0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+var_18] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov edx ds:dword_46C068 +
cmp edx 2 +
jz loc_44F89A  +
test edx edx +
jz loc_44F857  +
cmp edx 1 +
jnz loc_44F84B  +
mov ebx ds:Sleep +
mov [esp+18h+var_18] 1 +
call ebx  +
mov edx ds:dword_46C068 +
sub esp 4 +
cmp edx 1 +
jz loc_44F834  +
cmp edx 2 +
jz loc_44F89A  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 1 +
xchg eax ds:dword_46C068 +
test eax eax +
jnz loc_44F8B7  +
mov ebx ds:InitializeCriticalSection +
mov [esp+18h+var_18] offset unk_46C080 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset unk_46C098 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset loc_44F8E0 +
call sub_449C40  +
mov ds:dword_46C068 2 +
lea eax [esi+esi*2] +
lea eax ds:46C080h[eax*8] +
mov [esp+18h+var_18] eax +
call ds:EnterCriticalSection  +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
cmp eax 2 +
mov edx ds:dword_46C068 +
jnz loc_44F829  +
mov ds:dword_46C068 2 +
jmp loc_44F89A  +
***
mov eax 3 +
xchg eax ds:dword_46C068 +
cmp eax 2 +
jz loc_44F8F1  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov ebx ds:DeleteCriticalSection +
mov dword ptr [esp] offset unk_46C080 +
call ebx  +
sub esp 4 +
mov dword ptr [esp] offset unk_46C098 +
call ebx  +
mov ebx [ebp-4] +
sub esp 4 +
leave   +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
call sub_44F810  +
cmp esi 9 +
jg loc_44F967  +
mov ebx ds:dword_46C040[esi*4] +
test ebx ebx +
jz loc_44F9B2  +
mov eax [ebx] +
cmp ds:dword_46C068 2 +
mov ds:dword_46C040[esi*4] eax +
jnz loc_44F99A  +
mov [esp+28h+var_28] offset unk_46C080 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_44F99A  +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
shl eax 3 +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_44F9EA  +
cmp ds:dword_46C068 2 +
mov [ebx+4] esi +
mov [ebx+8] edi +
jz loc_44F955  +
mov dword ptr [ebx+10h] 0 +
mov eax ebx +
mov dword ptr [ebx+0Ch] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx off_456138 +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
mov edx ebx +
sub edx offset unk_46B740 +
sar edx 3 +
add edx eax +
cmp edx 120h +
ja loc_44F97A  +
lea eax [ebx+eax*8] +
mov off_456138 eax +
jmp loc_44F98B  +
xor eax eax +
jmp loc_44F9AA  +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_44FA27  +
cmp dword ptr [ebx+4] 9 +
jg loc_44FA30  +
xor eax eax +
call sub_44F810  +
mov eax [ebx+4] +
cmp ds:dword_46C068 2 +
mov edx ds:dword_46C040[eax*4] +
mov ds:dword_46C040[eax*4] ebx +
mov [ebx] edx +
jz loc_44FA40  +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov ebx [ebp+var_4] +
leave   +
jmp free  +
mov [esp+18h+var_18] offset unk_46C080 +
call ds:LeaveCriticalSection  +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_8] +
mov eax [eax+10h] +
mov ebp edi +
sar ebp 1Fh +
mov [esp+38h+var_1C] eax +
mov eax [esp+38h+arg_0] +
lea ebx [eax+14h] +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_28] eax +
sar eax 1Fh +
mov [esp+38h+var_24] eax +
mov eax [ebx+ecx*4] +
mov esi [esp+38h+var_24] +
imul esi eax +
mul  [esp+38h+var_28] +
add edx esi +
add eax edi +
adc edx ebp +
xor ebp ebp +
mov [ebx+ecx*4] eax +
add ecx 1 +
mov edi edx +
cmp [esp+38h+var_1C] ecx +
jg loc_44FA93  +
mov edx ebp +
mov eax [esp+38h+arg_0] +
or edx edi +
jz loc_44FADE  +
mov edx [esp+38h+var_1C] +
cmp edx [eax+8] +
jge loc_44FAE6  +
mov edx [esp+38h+arg_0] +
mov eax [esp+38h+var_1C] +
mov [edx+eax*4+14h] edi +
add eax 1 +
mov [edx+10h] eax +
mov eax edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
mov [esp+38h+var_28] eax +
add eax 1 +
mov [esp+38h+var_38] eax +
call sub_44F920  +
test eax eax +
mov ebx eax +
jz loc_44FB38  +
lea ecx [eax+0Ch] +
mov eax [esp+38h+arg_0] +
mov eax [eax+10h] +
mov [esp+38h+var_38] ecx +
lea edx ds:8[eax*4] +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_30] edx +
add eax 0Ch +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call sub_44F9F0  +
mov [esp+38h+arg_0] ebx +
jmp loc_44FACA  +
xor eax eax +
jmp loc_44FADE  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_44F920  +
test eax eax +
jz loc_44FB61  +
mov edx [esp+1Ch+arg_0] +
mov dword ptr [eax+10h] 1 +
mov [eax+14h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov esi [edi+10h] +
mov ebx [ebp+10h] +
cmp esi ebx +
jge loc_44FB95  +
mov eax esi +
mov esi ebx +
mov ebx eax +
mov eax edi +
mov edi ebp +
mov ebp eax +
lea eax [esi+ebx] +
cmp eax [edi+8] +
mov [esp+3Ch+var_1C] eax +
setnle al  +
movzx eax al +
add eax [edi+4] +
mov [esp+3Ch+var_3C] eax +
call sub_44F920  +
test eax eax +
mov [esp+3Ch+var_10] eax +
jz loc_44FCBB  +
mov ecx [esp+3Ch+var_1C] +
lea eax [eax+14h] +
mov [esp+3Ch+var_24] eax +
lea ecx [eax+ecx*4] +
mov edx ecx +
cmp eax edx +
mov [esp+3Ch+var_14] ecx +
jnb loc_44FBE5  +
mov edx [esp+3Ch+var_14] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp edx eax +
ja loc_44FBD8  +
lea eax [edi+14h] +
mov [esp+3Ch+var_18] eax +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_2C] eax +
lea eax [ebp+14h] +
lea ebx [eax+ebx*4] +
cmp eax ebx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_20] ebx +
jnb loc_44FC75  +
add [esp+3Ch+var_28] 4 +
mov eax [esp+3Ch+var_28] +
mov ebp [eax-4] +
test ebp ebp +
jz loc_44FC66  +
mov edi [esp+3Ch+var_24] +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] 0 +
jmp loc_44FC32  +
mov edi eax +
add esi 4 +
mov ecx [edi] +
mov eax ebp +
mul  dword ptr [esi-4] +
xor ebx ebx +
add ecx eax +
adc ebx edx +
add ecx [esp+3Ch+var_34] +
adc ebx [esp+3Ch+var_30] +
xor edx edx +
cmp [esp+3Ch+var_2C] esi +
mov [esp+3Ch+var_30] edx +
lea eax [edi+4] +
mov [esp+3Ch+var_34] ebx +
mov [edi] ecx +
ja loc_44FC30  +
mov eax [esp+3Ch+var_34] +
mov [edi+4] eax +
mov eax [esp+3Ch+var_28] +
add [esp+3Ch+var_24] 4 +
cmp [esp+3Ch+var_20] eax +
ja loc_44FC05  +
mov esi [esp+3Ch+var_1C] +
test esi esi +
jle loc_44FCA8  +
mov ebx [esp+3Ch+var_14] +
mov esi [ebx-4] +
test esi esi +
jnz loc_44FCA8  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
sub ebx eax +
mov eax ebx +
jmp loc_44FC9F  +
mov ecx [eax+edx*4-4] +
test ecx ecx +
jnz loc_44FCA4  +
sub edx 1 +
jnz loc_44FC97  +
mov [esp+3Ch+var_1C] edx +
mov eax [esp+3Ch+var_10] +
mov ebx [esp+3Ch+var_1C] +
mov [eax+10h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_44FCB3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax ebx +
and eax 3 +
jnz loc_44FD80  +
sar ebx 2 +
mov eax edx +
test ebx ebx +
jz loc_44FD35  +
mov edi ds:dword_46B720 +
test edi edi +
jz loc_44FDCE  +
test bl 1 +
jnz loc_44FD09  +
sar ebx 1 +
jz loc_44FD33  +
mov esi [edi] +
test esi esi +
nop   +
jz loc_44FD40  +
mov edi esi +
test bl 1 +
jz loc_44FCF6  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edx +
mov [ebp+var_1C] edx +
call sub_44FB70  +
test eax eax +
mov esi eax +
jz loc_44FDA5  +
mov edx [ebp+var_1C] +
mov [esp+28h+var_28] edx +
call sub_44F9F0  +
sar ebx 1 +
mov edx esi +
jnz loc_44FCFA  +
mov eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_44F810  +
mov esi [edi] +
mov edx [ebp+var_1C] +
test esi esi +
jz loc_44FDAF  +
cmp ds:dword_46C068 2 +
jnz loc_44FD02  +
mov [ebp+var_1C] edx +
mov edi esi +
mov [esp+28h+var_28] offset unk_46C098 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_44FD04  +
mov eax ds:dword_469CBC[eax*4] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] eax +
call sub_44FA60  +
test eax eax +
mov edx eax +
jnz loc_44FCDA  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edi +
call sub_44FB70  +
test eax eax +
mov esi eax +
mov [edi] eax +
jz loc_44FDA5  +
mov dword ptr [eax] 0 +
mov edx [ebp+var_1C] +
jmp loc_44FD56  +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_44F810  +
mov edi ds:dword_46B720 +
mov edx [ebp+var_1C] +
test edi edi +
jz loc_44FE10  +
cmp ds:dword_46C068 2 +
jnz loc_44FCF1  +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] offset unk_46C098 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_44FCF1  +
mov [esp+28h+var_28] 1 +
call sub_44F920  +
test eax eax +
mov edi eax +
jz loc_44FE40  +
mov dword ptr [eax+14h] 271h +
mov edx [ebp+var_1C] +
mov dword ptr [eax+10h] 1 +
mov ds:dword_46B720 eax +
mov dword ptr [eax] 0 +
jmp loc_44FDE8  +
mov ds:dword_46B720 0 +
xor eax eax +
jmp loc_44FDA7  +
***
jmp sub_44FE60  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi eax +
mov edx [eax+4] +
mov eax [eax+10h] +
mov ebx esi +
sar ebx 5 +
add eax ebx +
lea ebp [eax+1] +
mov [esp+2Ch+var_14] eax +
mov eax [edi+8] +
cmp ebp eax +
jle loc_44FE99  +
lea esi [esi+0] +
add eax eax +
add edx 1 +
cmp ebp eax +
jg loc_44FE90  +
mov [esp+2Ch+var_2C] edx +
call sub_44F920  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_44FF6A  +
test ebx ebx +
lea edx [eax+14h] +
jle loc_44FEC7  +
xor eax eax +
mov dword ptr [edx+eax*4] 0 +
add eax 1 +
cmp eax ebx +
jnz loc_44FEB6  +
lea edx [edx+eax*4] +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_0] +
mov ecx [edi+10h] +
add eax 14h +
and esi 1Fh +
mov [esp+2Ch+var_20] esi +
lea edi [eax+ecx*4] +
mov ecx edi +
jz loc_44FF56  +
mov [esp+2Ch+var_1C] 20h +
mov [esp+2Ch+var_10] ebp +
mov ebp ecx +
sub [esp+2Ch+var_1C] esi +
xor esi esi +
jmp loc_44FF02  +
mov edx edi +
mov ebx [eax] +
add eax 4 +
movzx ecx byte ptr [esp+2Ch+var_20] +
lea edi [edx+4] +
shl ebx cl +
movzx ecx byte ptr [esp+2Ch+var_1C] +
or ebx esi +
mov [edx] ebx +
mov esi [eax-4] +
shr esi cl +
cmp ebp eax +
ja loc_44FF00  +
mov eax [esp+2Ch+var_14] +
mov ebp [esp+2Ch+var_10] +
mov [edx+4] esi +
add eax 2 +
test esi esi +
cmovnz ebp eax +
mov edi [esp+2Ch+var_18] +
lea eax [ebp-1] +
mov [edi+10h] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_44F9F0  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp ebx eax +
mov [edx-4] ecx +
ja loc_44FF58  +
jmp loc_44FF36  +
xor eax eax +
jmp loc_44FF4E  +
***
mov edx [esp+arg_4] +
mov eax [ecx+10h] +
mov ebx [edx+10h] +
sub eax ebx +
test eax eax +
jnz loc_44FFA9  +
shl ebx 2 +
add ecx 14h +
lea eax [ecx+ebx] +
lea edx [edx+ebx+14h] +
jmp loc_44FF98  +
cmp ecx eax +
jnb loc_44FFB0  +
sub edx 4 +
sub eax 4 +
mov ebx [edx] +
cmp [eax] ebx +
jz loc_44FF94  +
sbb eax eax +
or eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] ebx +
call sub_44FF70  +
test eax eax +
jz loc_450102  +
js loc_450128  +
xor edi edi +
mov eax [esi+4] +
mov [esp+2Ch+var_2C] eax +
call sub_44F920  +
test eax eax +
mov edx eax +
mov [esp+2Ch+var_10] eax +
jz loc_450138  +
mov [eax+0Ch] edi +
mov eax [esi+10h] +
add esi 14h +
lea ebp [ebx+14h] +
lea edi [edx+14h] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_14] eax +
lea eax [esi+eax*4] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+10h] +
mov [esp+2Ch+var_20] 0 +
lea eax [ebp+eax*4+0] +
mov [esp+2Ch+var_18] eax +
lea esi [esi+0] +
add ebp 4 +
add esi 4 +
mov ecx [ebp-4] +
mov eax [esi-4] +
xor edx edx +
xor ebx ebx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+2Ch+var_24] +
sbb edx [esp+2Ch+var_20] +
add edi 4 +
mov [esp+2Ch+var_20] 0 +
mov ecx edx +
and ecx 1 +
cmp [esp+2Ch+var_18] ebp +
mov [esp+2Ch+var_24] ecx +
mov [edi-4] eax +
ja loc_450040  +
cmp [esp+2Ch+var_1C] esi +
jbe loc_4500CA  +
mov ebx [esp+2Ch+var_20] +
mov ecx [esp+2Ch+var_24] +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_24] esi +
nop   +
add esi 4 +
mov eax [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
add edi 4 +
mov ebp edx +
xor ebx ebx +
and ebp 1 +
cmp [esp+2Ch+var_1C] esi +
mov ecx ebp +
mov [edi-4] eax +
ja loc_450090  +
mov ebp [esp+2Ch+var_24] +
mov edi [esp+2Ch+var_1C] +
mov ebx [esp+2Ch+var_18] +
not ebp  +
lea edx [ebp+edi+0] +
shr edx 2 +
lea edi [ebx+edx*4+4] +
test eax eax +
jnz loc_4500EF  +
mov edx [esp+2Ch+var_14] +
mov eax edx +
shl eax 2 +
sub edi eax +
mov eax edx +
nop   +
lea esi [esi+0] +
sub eax 1 +
mov edx [edi+eax*4-4] +
test edx edx +
jz loc_4500E0  +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov [eax+10h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0 +
call sub_44F920  +
test eax eax +
jz loc_450138  +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edi 1 +
mov esi ebx +
mov ebx eax +
jmp loc_44FFEB  +
xor eax eax +
jmp loc_4500FA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
lea ebx [eax+14h] +
mov eax [eax+10h] +
lea ebp [ebx+eax*4] +
mov edx [ebp-4] +
lea esi [ebp-4] +
bsr eax edx +
xor eax 1Fh +
sub ecx eax +
cmp eax 0Ah +
mov [edi] ecx +
jg loc_4501B0  +
mov ecx 0Bh +
mov edi edx +
sub ecx eax +
shr edi cl +
or edi 3FF00000h +
mov dword ptr [esp+20h+var_20+4] edi +
xor edi edi +
cmp ebx esi +
mov dword ptr [esp+20h+var_20] 0 +
jnb loc_450199  +
mov edi [ebp-8] +
shr edi cl +
lea ecx [eax+15h] +
shl edx cl +
or edi edx +
mov dword ptr [esp+20h+var_20] edi +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
cmp ebx esi +
jnb loc_4501BC  +
mov edi [ebp-8] +
lea esi [ebp-8] +
mov ecx eax +
sub ecx 0Bh +
mov [esp+20h+var_14] ecx +
jz loc_450210  +
movzx ecx byte ptr [esp+20h+var_14] +
mov ebp 2Bh +
sub ebp eax +
mov eax edi +
mov dword ptr [esp+20h+var_20] 0 +
shl edx cl +
mov ecx ebp +
shr eax cl +
or edx 3FF00000h +
or edx eax +
xor eax eax +
cmp esi ebx +
mov dword ptr [esp+20h+var_20+4] edx +
jbe loc_4501F9  +
mov eax [esi-4] +
shr eax cl +
movzx ecx byte ptr [esp+20h+var_14] +
shl edi cl +
or eax edi +
mov dword ptr [esp+20h+var_20] eax +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or edx 3FF00000h +
mov dword ptr [esp+20h+var_20] edi +
mov dword ptr [esp+20h+var_20+4] edx +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
test cl cl +
mov [eax] cl +
jnz loc_450344  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esp+10h+arg_0] +
mov ecx [esp+10h+arg_4] +
mov edx [esi+10h] +
lea ebp [eax+14h] +
mov eax ecx +
sar eax 5 +
cmp eax edx +
jge loc_450410  +
lea eax [ebp+eax*4+0] +
and ecx 1Fh +
lea edi [ebp+edx*4+0] +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ecx +
jz loc_450430  +
mov esi [esp+10h+var_C] +
mov eax [esp+10h+var_10] +
mov [esp+10h+var_8] 20h +
sub [esp+10h+var_8] eax +
mov ebx [esi] +
lea edx [esi+4] +
mov ecx eax +
shr ebx cl +
cmp edi edx +
jbe loc_45046E  +
mov esi ebp +
mov [esp+10h+var_4] ebp +
mov ebp [esp+10h+var_8] +
lea esi [esi+0] +
mov eax [edx] +
mov ecx ebp +
add esi 4 +
add edx 4 +
shl eax cl +
movzx ecx byte ptr [esp+10h+var_10] +
or eax ebx +
mov [esi-4] eax +
mov ebx [edx-4] +
shr ebx cl +
cmp edi edx +
ja loc_4503D0  +
sub edi [esp+10h+var_C] +
mov ebp [esp+10h+var_4] +
lea eax [edi-5] +
shr eax 2 +
lea eax [ebp+eax*4+4] +
test ebx ebx +
mov [eax] ebx +
jz loc_450409  +
add eax 4 +
sub eax ebp +
sar eax 2 +
jmp loc_45045B  +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+14h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi eax +
mov edx ebp +
jbe loc_450410  +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
ja loc_450436  +
mov eax [esp+10h+var_C] +
not eax  +
add eax edi +
shr eax 2 +
lea eax ds:4[eax*4] +
sar eax 2 +
mov esi [esp+10h+arg_0] +
test eax eax +
mov [esi+10h] eax +
jz loc_45041B  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
jmp loc_450400  +
***
mov ecx [eax+10h] +
lea edx [eax+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_4504BA  +
mov ecx [eax+14h] +
xor eax eax +
test ecx ecx +
jz loc_4504A6  +
jmp loc_4504B2  +
mov ecx [edx] +
test ecx ecx +
jnz loc_4504B2  +
add edx 4 +
add eax 20h +
cmp ebx edx +
ja loc_4504A0  +
pop ebx  +
retn   +
bsf ecx ecx +
add eax ecx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_46C0C0 +
retn   +
***
jmp ds:fflush  +
***
jmp ds:freopen  +
***
jmp ds:__setusermatherr  +
***
mov eax ds:dword_46C0C4 +
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_46C0C4 +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_set_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_450750 +
mov [ebp+arg_0] ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_456148 eax +
leave   +
jmp eax  +
***
sub esp 18h +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_get_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_450740 +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_456144 eax +
leave   +
jmp eax  +
***
mov eax ds:dword_46C0C8 +
mov eax [eax] +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 2 +
call setlocale  +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] eax +
call strchr  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_45084A  +
add edx 1 +
mov [esp+1Ch+var_1C] edx +
call atoi  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
test eax eax +
mov ebx eax +
jz loc_4508B5  +
mov esi ds:GetProcAddress +
mov [esp+18h+var_14] offset a___lc_codepage +
mov [esp+18h+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jz loc_450895  +
mov off_45614C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
mov [esp+18h+var_14] offset a__lc_codepage +
mov [esp+18h+var_18] ebx +
call esi  +
mov edx eax +
sub esp 8 +
test edx edx +
mov ds:dword_46C0C8 eax +
mov eax offset loc_450800 +
jnz loc_450888  +
mov eax offset sub_450810 +
mov off_45614C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
***
mov eax off_45614C +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44B5F0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44B5B0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44B630  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_0] +
test esi esi +
jz loc_450AF7  +
mov eax [esi] +
test eax eax +
jnz loc_450AD7  +
jmp loc_450AE9  +
mov eax ebx +
mov ebx [eax+10h] +
add eax 30h +
mov [esp+14h+var_14] eax +
call sub_44B500  +
test ebx ebx +
jnz loc_450AD5  +
mov [esp+14h+arg_0] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 24h +
movzx ebx byte ptr [eax+14h] +
cmp bl 0FFh +
jz loc_450B70  +
mov esi ebx +
and esi 7 +
mov ecx esi +
cmp cl 2 +
jz loc_450B66  +
jbe loc_450B52  +
mov ecx esi +
cmp cl 3 +
jz loc_450B56  +
lea ecx ds:0[edx*8] +
mov edx esi +
neg ecx  +
cmp dl 4 +
jnz loc_450B61  +
mov edx [eax+8] +
add ecx [eax+0Ch] +
movzx eax bl +
lea ebx [esp+24h+var_8] +
mov [esp+24h+var_24] ebx +
call sub_450DE0  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
test cl cl +
jnz loc_450B61  +
lea ecx ds:0[edx*4] +
neg ecx  +
jmp loc_450B33  +
call abort  +
lea ecx [edx+edx] +
neg ecx  +
jmp loc_450B33  +
xor ecx ecx +
jmp loc_450B33  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [ecx] +
mov ecx edx +
mov [ebp+var_1C] eax +
mov eax [edx] +
call dword ptr [eax+8]  +
test al al +
jz loc_450BA7  +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov ecx esi +
mov eax [eax+10h] +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ebx +
call eax  +
sub esp 0Ch +
test al al +
jz loc_450BCE  +
mov edx [ebp+var_1C] +
mov [edi] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
xor eax eax +
push ebx  +
sub esp 1Ch +
test edi edi +
mov [esp+28h+var_1C] ecx +
jz loc_450BFD  +
mov [esp+28h+var_28] edi +
call sub_44B280  +
mov ebx [esp+28h+var_1C] +
lea esi [ebp+1] +
mov [ebx] eax +
movzx edx byte ptr [ebp+0] +
cmp dl 0FFh +
jz loc_450CA0  +
movzx ebp dl +
mov edx edi +
mov eax ebp +
call sub_450D30  +
lea edx [ebx+4] +
mov ecx esi +
mov [esp+28h+var_28] edx +
mov edx eax +
mov eax ebp +
call sub_450DE0  +
mov esi eax +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
mov esi [esp+28h+var_1C] +
cmp al 0FFh +
mov [esi+14h] al +
jz loc_450CB0  +
xor edi edi +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or edi eax +
test bl bl +
js loc_450C47  +
mov eax [esp+28h+var_1C] +
add edi edx +
mov [eax+0Ch] edi +
lea eax [edx+1] +
mov esi [esp+28h+var_1C] +
xor edi edi +
movzx edx byte ptr [edx] +
xor ecx ecx +
mov [esi+15h] dl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_450C78  +
mov esi [esp+28h+var_1C] +
add edi eax +
mov [esi+10h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+28h+var_1C] +
mov [edi+4] eax +
jmp loc_450C32  +
mov eax [esp+28h+var_1C] +
mov dword ptr [eax+0Ch] 0 +
jmp loc_450C67  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_1C] ecx +
not esi  +
add esi [eax+0Ch] +
xor edx edx +
xor ecx ecx +
lea esi [esi+0] +
add esi 1 +
movzx eax byte ptr [esi-1] +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or edx ebx +
test al al +
js loc_450CE0  +
test edx edx +
jz loc_450D19  +
mov eax edi +
call sub_450B00  +
lea ecx [esp+28h+var_1C] +
mov edx ebp +
call sub_450B80  +
test al al +
jz loc_450CD8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp al 0FFh +
jz loc_450D58  +
and eax 70h +
cmp al 20h +
jz loc_450D80  +
jbe loc_450D60  +
cmp al 40h +
jz loc_450D70  +
cmp al 50h +
jz loc_450D58  +
cmp al 30h +
jnz loc_450D68  +
mov [esp+1Ch+var_1C] edx +
call sub_44B2A0  +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
test al al +
jz loc_450D58  +
cmp al 10h +
jz loc_450D58  +
call abort  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] edx +
call sub_44B280  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] edx +
call sub_44B2B0  +
add esp 1Ch +
retn   +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp al 50h +
mov [esp+34h+var_28] edx +
jz loc_450EA5  +
mov eax esi +
and eax 0Fh +
cmp al 0Ch +
ja loc_450EA0  +
movzx eax al +
jmp ds:off_467E98[eax*4]  +
mov edx [ecx] +
lea ebx [ecx+4] +
test edx edx +
jz loc_450E2F  +
mov eax esi +
and eax 70h +
cmp al 10h +
mov eax esi +
cmovnz edi [esp+34h+var_28] +
add edx edi +
test al al +
jns loc_450E2F  +
mov edx [edx] +
mov eax [esp+34h+arg_0] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx] +
lea ebx [ecx+8] +
jmp loc_450E15  +
movsx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_450E15  +
lea edx [esp+34h+var_18] +
mov eax ecx +
call sub_450A80  +
mov edx [esp+34h+var_18] +
mov ebx eax +
jmp loc_450E15  +
xor edx edx +
mov ebx ecx +
mov ebp edx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx-1] +
mov eax edx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or ebp eax +
test dl dl +
js loc_450E70  +
mov edx ebp +
jmp loc_450E15  +
movzx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_450E15  +
call abort  +
lea ebx [ecx+3] +
mov eax [esp+34h+arg_0] +
and ebx 0FFFFFFFCh +
mov edx [ebx] +
add ebx 4 +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455DF0 +
mov dword ptr [esp+40h] offset loc_450F05 +
mov [esp+44h] esp +
call sub_44B110  +
mov dword ptr [esp+20h] 1 +
call dword ptr [esp+60h]  +
call abort  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_450F24  +
sub eax 1 +
jz loc_450F3D  +
sub esp 0Ch +
call [esp+0Ch+arg_0]  +
call sub_4542D0  +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+0] ecx +
mov dword ptr [ecx] offset off_46A210 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A210 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_46A228 +
call sub_454260  +
mov [esp+18h+var_18] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_46A228 +
jmp sub_454260  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A268 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A268 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_46A288 +
call sub_450FE0  +
mov [esp+18h+var_18] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_46A288 +
jmp sub_450FE0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A0E8 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A0E8 +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_45B9C0[eax] +
mov ebp ds:dword_45B9C0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_451857  +
cmp edx 1 +
jz loc_4517E2  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_451861  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_451850  +
cmp edx 1 +
jz loc_451810  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_451810  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_451810  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_451810  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_4517E2  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_4517E2  +
jmp loc_451857  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_451A00  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_45B9C0[eax] +
mov ebx ds:dword_45B9C0[eax] +
mov ecx ds:dword_45B9CC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_451A55  +
cmp edx 1 +
jz loc_451924  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_451A37  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_451973  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_4519A0  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_4519C0  +
cmp edx 1 +
jnz loc_451960  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_45196E  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_45196E  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_45196E  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_4519F3  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_451A6A  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_451A60  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_4518B1  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_451A80  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_4518B1  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_45191C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_45191C  +
jmp loc_4519F3  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_451A6A  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_4519F3  +
xor eax eax +
jmp loc_4519F3  +
***
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_45B9C0[eax] +
mov ebp ds:dword_45B9C0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_451ED7  +
cmp edx 1 +
jz loc_451E62  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_451EE1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_451ED0  +
cmp edx 1 +
jz loc_451E90  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_451E90  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_451E90  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_451E90  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_451E62  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_451E62  +
jmp loc_451ED7  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_452080  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_45B9C0[eax] +
mov ebx ds:dword_45B9C0[eax] +
mov ecx ds:dword_45B9CC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_4520D5  +
cmp edx 1 +
jz loc_451FA4  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_4520B7  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_451FF3  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_452020  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_452040  +
cmp edx 1 +
jnz loc_451FE0  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_451FEE  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_451FEE  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_451FEE  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_452073  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_4520EA  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_4520E0  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_451F31  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_452100  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_451F31  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_451F9C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_451F9C  +
jmp loc_452073  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_4520EA  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_452073  +
xor eax eax +
jmp loc_452073  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_45B9C0[eax] +
mov eax ds:dword_45B9C0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452541  +
cmp edx 1 +
jz loc_4524D9  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_452541  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452550  +
cmp edx 1 +
jz loc_452510  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_452510  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_4526B5  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_45B9C0[eax] +
lea ebp dword_45B9C0[eax] +
mov ecx ds:dword_45B9CC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_4526E4  +
cmp eax 1 +
jz loc_452618  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_452702  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_452635  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_4526A0  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452660  +
cmp edx 1 +
jnz loc_452628  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_452630  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_452708  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_4526F0  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_45258D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_452710  +
mov esi [esi+4] +
jmp loc_45258D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_452708  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_45268F  +
xor eax eax +
jmp loc_45268F  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_45B9C0[eax] +
mov eax ds:dword_45B9C0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452AC1  +
cmp edx 1 +
jz loc_452A59  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_452AC1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452AD0  +
cmp edx 1 +
jz loc_452A90  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_452A90  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_452C35  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_45B9C0[eax] +
lea ebp dword_45B9C0[eax] +
mov ecx ds:dword_45B9CC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_452C64  +
cmp eax 1 +
jz loc_452B98  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_452C82  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_452BB5  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_452C20  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452BE0  +
cmp edx 1 +
jnz loc_452BA8  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_452BB0  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_452C88  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_452C70  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_452B0D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_452C90  +
mov esi [esi+4] +
jmp loc_452B0D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_452C88  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_452C0F  +
xor eax eax +
jmp loc_452C0F  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [ecx] +
mov [ebp+var_48] ecx +
mov ebx [eax+18h] +
mov ecx edi +
mov [ebp+var_50] edi +
mov edi [eax+4] +
lea esi [edi+edi*2] +
shl esi 2 +
add ecx esi +
mov [ebp+var_34] ecx +
mov ecx eax +
mov eax [eax+8] +
sub eax [ecx+0Ch] +
lea edx [eax+eax] +
cmp edi edx +
jb loc_452E4D  +
shl eax 3 +
cmp edi eax +
ja loc_452E44  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_452E6D  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jnz loc_452EC8  +
mov [esp+68h+var_64] 0Ch +
mov [esp+68h+var_68] edi +
call sub_435F00  +
mov [ebp+var_30] eax +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_452F45  +
test edi edi +
jz loc_452D2D  +
mov ecx [ebp+var_30] +
lea edx [edi+edi*2] +
mov eax ecx +
lea edx [ecx+edx*4] +
nop   +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 0Ch +
cmp eax edx +
jnz loc_452D20  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_452F03  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_30] +
mov [ebp+var_4C] edi +
mov [eax+4] edi +
mov [eax] ecx +
mov ecx eax +
mov [eax+18h] ebx +
mov eax [eax+0Ch] +
shl ebx 4 +
sub [ecx+8] eax +
mov eax [ebp+var_50] +
mov dword ptr [ecx+0Ch] 0 +
mov [ebp+var_44] ebx +
mov edi eax +
mov esi [edi] +
test esi esi +
jz loc_452E18  +
cmp esi 1 +
jz loc_452E18  +
mov ebx [ebp+var_44] +
sar esi 3 +
mov eax ebx +
mov ebx ds:dword_45B9C0[ebx] +
add eax offset dword_45B9C0 +
mov ecx [eax+0Ch] +
mov [ebp+var_38] eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_40] ebx +
mov ebx eax +
mov eax esi +
mul  dword ptr [ebx+4] +
mov eax esi +
mov ebx esi +
mov [ebp+var_3C] ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp+var_30] +
shr eax cl +
imul eax [ebp+var_2C] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edx+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_452E08  +
mov ecx [ebp+var_38] +
mov eax esi +
mul  dword ptr [ecx+8] +
lea eax [esi+1] +
movzx ecx byte ptr [ebp+var_3C] +
sub esi edx +
shr esi 1 +
add esi edx +
mov edx [ebp+var_40] +
shr esi cl +
mov ecx [ebp+var_4C] +
sub edx 2 +
imul esi edx +
sub eax esi +
mov esi [ebp+var_30] +
lea esi [esi+0] +
add ebx eax +
mov edx ebx +
sub edx ecx +
cmp ecx ebx +
cmovbe ebx edx +
lea edx [ebx+ebx*2] +
lea edx [esi+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_452DF0  +
mov eax edx +
mov edx [edi] +
mov [eax] edx +
mov edx [edi+4] +
mov [eax+4] edx +
mov edx [edi+8] +
mov [eax+8] edx +
add edi 0Ch +
cmp [ebp+var_34] edi +
ja loc_452D65  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
mov eax [ebp+var_50] +
mov [esp+68h+var_68] eax +
jz loc_452EF6  +
call j_free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 20h +
jbe loc_452CD4  +
mov [esp+68h+var_68] edx +
call sub_4022F0  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_45B9C0[eax] +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jz loc_452CE1  +
lea eax [edi+edi*2] +
mov ecx ds:dword_46B07C +
shl eax 2 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_48] +
mov [ebp+var_20] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_20] +
mov [esp+68h+var_68] eax +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_452CE1  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
jbe loc_452CE1  +
mov [eax+8] edx +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jz loc_452CEE  +
lea eax [edi+edi*2] +
shl eax 2 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] eax +
call sub_4026E0  +
mov [ebp+var_30] eax +
jmp loc_452D01  +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_48] +
mov ecx ds:dword_46B07C +
mov [ebp+var_1C] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] eax +
call sub_452470  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_452D3A  +
mov eax [eax+4] +
mov edx [eax] +
cmp esi edx +
ja loc_452F40  +
sub edx esi +
mov [eax] edx +
jmp loc_452D3A  +
call sub_455C40  +
mov [esp+68h+var_60] offset aAlloc_entrie_3 +
mov [esp+68h+var_64] 28Eh +
mov [esp+68h+var_68] offset a____GccGccHa_2 +
call sub_405910  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+84h+var_84] ecx +
mov dword ptr [ecx] offset off_46A128 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A128 +
retn   +
***
sub esp 18h +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
movzx eax byte ptr [eax+4] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_40CA30  +
xor eax eax +
sub esp 8 +
leave   +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A128 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A128 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A128 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A128 +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
mov edx [edx+4] +
mov [esp+1Ch+var_14] edx +
mov edx [eax+4] +
mov [esp+1Ch+var_18] edx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [ecx] +
mov esi [esp+10h+arg_0] +
lea eax [ebx+1] +
cmp ebx 2 +
mov [ecx] eax +
jle loc_4530A0  +
mov eax [ecx+20h] +
sub ebx 3 +
test eax eax +
jz loc_4530D8  +
mov edx [ecx+1Ch] +
cmp ebx edx +
jge loc_4530B6  +
mov edx [esi] +
mov ecx [esi+4] +
mov [eax+ebx*8] edx +
mov [eax+ebx*8+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov eax [esi] +
mov edx [esi+4] +
mov [ecx+ebx*8+4] eax +
mov [ecx+ebx*8+8] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [edx+edx] +
shl edx 4 +
mov [ecx+1Ch] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_4] ecx +
call sub_435F50  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_453087  +
mov dword ptr [ecx+1Ch] 10h +
mov [esp+10h+var_10] 80h +
mov [esp+10h+var_4] ecx +
call sub_435ED0  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_453087  +
***
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov esi [esp+10h+arg_0] +
lea edx [eax+1] +
cmp eax 1 +
mov [ecx] edx +
jle loc_453160  +
mov edx [ecx+10h] +
lea ebx [eax-2] +
test edx edx +
jz loc_453170  +
mov eax [ecx+0Ch] +
cmp ebx eax +
jge loc_453135  +
mov eax [esi] +
mov [edx+ebx*4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [eax+eax] +
shl eax 3 +
mov [ecx+0Ch] edi +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] ecx +
call sub_435F50  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_453127  +
mov edx [esi] +
mov [ecx+eax*4+4] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov dword ptr [ecx+0Ch] 10h +
mov [esp+10h+var_10] 40h +
mov [esp+10h+var_4] ecx +
call sub_435ED0  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_453127  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+14h] +
mov dword ptr [esp] 14h +
mov esi [ebp+10h] +
mov [ebp-3Ch] ecx +
call loc_4543A0  +
mov [eax] edi +
mov ebx eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] ebx +
mov [ebp-24h] edi +
mov [ebx+4] eax +
mov eax [ebp+18h] +
mov [ebx+8] eax +
mov eax [ebp+0Ch] +
mov [ebx+0Ch] eax +
mov eax esi +
mov [ebx+10h] al +
mov eax [ebp+8] +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov esi [eax+18h] +
lea eax [ebp-24h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_436D00  +
mov ecx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-28h] ecx +
mov [esp+8] eax +
lea eax [ebp-28h] +
mov [esp] eax +
call sub_436D00  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-2Ch] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_451770  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_4532F8  +
mov eax [ebp-2Ch] +
mov [esp] eax +
call sub_4542F0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-3Ch] +
lea ebx [ebp-30h] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_452470  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_453404  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
mov dword ptr [esp] 10h +
call loc_4543A0  +
mov edx [ebp-2Ch] +
mov [ebp-44h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov eax [ebp-3Ch] +
mov eax [eax+18h] +
mov [ebp-40h] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_436D00  +
mov edx [ebp-44h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-20h] +
mov [esp] eax +
mov [ebp-20h] ecx +
call sub_436D00  +
mov edx [ebp-44h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-40h] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_451890  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4533FC  +
mov edx [ebp-2Ch] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_4532C4  +
***
mov eax [ebp-3Ch] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_452570  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_453432  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
push esi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 20h +
call loc_4543A0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_4022F0  +
mov [esp+1Ch+var_18] 8 +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_45B9C0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_435F00  +
test eax eax +
jz loc_4537EF  +
test edi edi +
mov edx eax +
lea ecx [eax+edi*8] +
jz loc_4536D0  +
mov dword ptr [edx] 0 +
add edx 8 +
cmp edx ecx +
jnz loc_4536C3  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+18h] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_4543A0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_4022F0  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_45B9C0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_435F00  +
test eax eax +
jz loc_453827  +
test edi edi +
jz loc_453755  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_453748  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+1Ch] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_4543A0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_4022F0  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_45B9C0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_435F00  +
test eax eax +
jz loc_45380B  +
test edi edi +
jz loc_4537DD  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
lea esi [esi+0] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_4537D0  +
mov [esi] eax +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [ebx] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aAlloc_entrie_1 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_2 +
call sub_405910  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_5 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_2 +
call sub_405910  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_3 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_2 +
call sub_405910  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [ecx] offset off_46A2C8 +
call sub_454230  +
mov [esp+38h+var_38] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_46A2C8 +
jmp sub_454230  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_46A2E0 +
call sub_454230  +
mov [esp+18h+var_18] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_46A2E0 +
jmp sub_454230  +
***
lea eax [esp+68h+var_8] +
mov [esp+68h+var_2C] eax +
lea eax [esp+68h+var_4C] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_34] offset sub_454EC0 +
mov [esp+68h+var_30] offset dword_455E28 +
mov [esp+68h+var_28] offset dword_453A30 +
mov [esp+68h+var_24] esp +
call sub_44B110  +
cmp byte_45AB74 0 +
jnz loc_4539ED  +
mov byte_45AB74 1 +
call sub_454940  +
test eax eax +
jz loc_453A4B  +
mov eax [eax+4] +
xor edx edx +
cmp byte ptr [eax] 2Ah +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
setz dl  +
add eax edx +
mov ecx eax +
mov [esp+68h+var_50] eax +
lea eax [esp+68h+var_C] +
mov [esp+68h+var_68] ecx +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_C] 0FFFFFFFFh +
mov [esp+68h+var_48] 0FFFFFFFFh +
call sub_449900  +
mov [esp+68h+var_60] 30h +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCalle +
mov [esp+68h+var_54] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov eax ds:_iob +
add eax 40h +
cmp [esp+68h+var_C] 0 +
mov [esp+68h+var_64] eax +
jz loc_4539DF  +
mov eax [esp+68h+var_50] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2 +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset asc_467F9D +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
cmp [esp+68h+var_C] 0 +
jz loc_453A22  +
mov [esp+68h+var_48] 1 +
call sub_454E00  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
jmp loc_45399B  +
mov eax ds:_iob +
mov [esp+68h+var_60] 1Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_0 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
call abort  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call free  +
jmp loc_4539D2  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_1 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call abort  +
call loc_4549A0  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call sub_44B410  +
mov eax [esp+68h+var_54] +
sub edx 1 +
mov [esp+68h+var_68] eax +
jnz loc_453B29  +
call sub_4546F0  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
mov edx ds:_iob +
mov [esp+68h+var_60] 0Bh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aWhat +
mov [esp+68h+var_48] 2 +
mov [esp+68h+var_54] eax +
lea eax [edx+40h] +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov edx ds:_iob +
lea eax [edx+40h] +
mov [esp+68h+var_64] eax +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_68] 0Ah +
add eax 40h +
mov [esp+68h+var_64] eax +
call fputc  +
call loc_4549A0  +
jmp loc_453A7B  +
lea esi [esi+0] +
call sub_4546F0  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call loc_4549A0  +
jmp loc_453A7B  +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4 +
call loc_4545B0  +
mov dword ptr [eax] offset off_46A2E0 +
mov [esp+1Ch+var_14] offset sub_4538A0 +
mov [esp+1Ch+var_18] offset off_469ED0 +
mov [esp+1Ch+var_1C] eax +
call sub_454E60  +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
mov eax [esp+24h+var_18] +
mov esi [eax+4] +
mov eax [esp+24h+var_14] +
mov ecx [esi] +
mov ebx [eax+4] +
mov edx [ebx] +
cmp ecx edx +
setb al  +
cmp ecx edx +
jz loc_453BD3  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
cmp [esi+8] eax +
jz loc_453BE4  +
setb al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+4] +
cmp [esi+4] eax +
setb al  +
jmp loc_453BCD  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_454160  +
sub esp 4 +
test al al +
jnz loc_453C12  +
cmp [ebp+arg_8] 3 +
jbe loc_453C20  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx] +
mov ecx ebx +
mov edx [ebp+arg_4] +
mov eax [eax+14h] +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] edx +
call eax  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_8] +
mov [esp+18h+var_18] eax +
call sub_454160  +
sub esp 4 +
test al al +
jz loc_453C6F  +
mov edx [ebp+arg_4] +
mov dword ptr [ebx+0Ch] 8 +
mov dword ptr [ebx+4] 6 +
mov [ebx] edx +
mov ebx [ebp+var_4] +
leave   +
retn 0Ch  +
***
push esi  +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
mov eax [ecx] +
lea esi [ebp+var_18] +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov edx [ebx] +
mov eax [eax+18h] +
mov [ebp+var_10] 10h +
mov [ebp+var_C] 0 +
mov [esp+28h+var_24] edx +
mov edx [ebp+arg_0] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] edx +
call eax  +
mov edx [ebp+var_14] +
xor eax eax +
and edx 6 +
sub esp 0Ch +
cmp edx 6 +
jnz loc_453CDB  +
mov eax [ebp+var_18] +
mov [ebx] eax +
mov eax 1 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov eax [esp+arg_4] +
cmp [esp+arg_C] eax +
setz al  +
movzx eax al +
lea eax [eax+eax*4+1] +
retn 10h  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_20] edi +
call sub_453C40  +
mov edx [ebp+var_1C] +
sub esp 0Ch +
test al al +
jz loc_453DB0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+18h] +
mov [ebp+arg_8] edi +
mov [ebp+arg_4] esi +
mov [ebp+arg_0] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [ebp+var_28] ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_C] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] edx +
mov ebx [ebp+arg_18] +
mov [ebp+var_20] edx +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_1C] eax +
call sub_454160  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_453E38  +
mov eax [ebp+var_24] +
test edi edi +
mov [ebx] esi +
mov [ebx+4] eax +
js loc_453E70  +
xor eax eax +
add esi edi +
cmp [ebp+var_1C] esi +
setz al  +
lea eax [eax+eax*4+1] +
mov [ebx+0Ch] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 1Ch  +
cmp esi [ebp+var_1C] +
jz loc_453E80  +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov eax [ecx] +
mov eax [eax+1Ch] +
mov [ebp+arg_18] ebx +
mov ebx [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov esi [ebp+var_24] +
mov [ebp+arg_0] edi +
mov [ebp+arg_8] edx +
mov [ebp+arg_14] ebx +
mov ebx [ebp+var_2C] +
mov [ebp+arg_4] esi +
mov [ebp+arg_10] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
cmp edi 0FFFFFFFEh +
jnz loc_453E2C  +
mov dword ptr [ebx+0Ch] 1 +
jmp loc_453E2C  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_28] +
mov [ebp+var_20] edx +
mov [esp+38h+var_38] eax +
call sub_454160  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_453E3D  +
mov eax [ebp+var_24] +
mov [ebx+8] eax +
jmp loc_453E2C  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_8] +
cmp esi ebx +
mov [ebp+var_1C] eax +
jz loc_453EF0  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+20h] +
mov [ebp+arg_8] edi +
mov edi [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov [ebp+arg_4] ebx +
mov [ebp+arg_0] edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+28h+var_28] edi +
mov [ebp+var_20] edx +
call sub_454160  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_453ECE  +
lea esp [ebp-0Ch] +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
retn   +
***
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_453F5C  +
add eax [ecx+8] +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
mov edx [ecx+8] +
mov [eax] edx +
mov eax 1 +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_453FAC  +
add eax [ecx+0Ch] +
retn 4  +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_44AB70  +
sub esp eax +
mov ebx ecx +
mov eax [esp+10h+arg_104C] +
mov ebp [eax+4] +
mov edi [eax+8] +
mov esi [eax] +
jmp loc_453FF6  +
lea esi [eax+4] +
mov [esp+10h+var_C] offset aGcc +
mov [esp+10h+var_10] esi +
call strstr  +
test eax eax +
jnz loc_453FF3  +
mov [esp+10h+var_8] esi +
lea esi [esp+10h+arg_2C] +
mov [esp+10h] ebp +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] offset aSIS +
call sub_450970  +
mov eax [ebx+14h] +
xor edx edx +
mov ecx [ebx+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov edi [ebx] +
mov [esp+10h+arg_5C] 0 +
mov [esp+10h+arg_18] eax +
mov eax [ebx+10h] +
mov dword ptr [esp+10h+arg_24] ecx +
fild  [esp+10h+arg_24] +
fld  ds:flt_45CBF0 +
mov [esp+10h+arg_14] eax +
mov eax [esp+10h+arg_1050] +
fmul st(1) st +
mov eax [eax+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov [esp+10h+arg_8] ecx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax [ebx+8] +
fild  [esp+10h+arg_24] +
fdivp st(2) st +
fxch  st(1) +
mov dword ptr [esp+10h+arg_24] edi +
mov [esp+10h+arg_4] eax +
mov eax [esp+10h+arg_1050] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
fstp  [esp+10h+arg_C] +
mov eax [eax] +
fild  [esp+10h+arg_24] +
fmulp st(1) st +
mov dword ptr [esp+10h+arg_24+4] edx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax ds:_iob +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_8] esi +
fild  [esp+10h+arg_24] +
fdivp st(1) st +
add eax 40h +
mov [esp+10h+var_C] offset a48s10li4_1f10l +
fstp  qword ptr [esp+10h] +
mov [esp+10h+var_10] eax +
call sub_450940  +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
retn   +
***
retn   +
***
retn   +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_454160  +
sub esp 4 +
leave   +
retn 0Ch  +
***
retn 8  +
***
retn   +
***
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ecx +
jz loc_454198  +
mov edx [ecx+4] +
cmp byte ptr [edx] 2Ah +
jz loc_454190  +
mov eax [eax+4] +
xor ecx ecx +
cmp byte ptr [eax] 2Ah +
mov [esp+1Ch+var_1C] edx +
setz cl  +
add eax ecx +
mov [esp+1Ch+var_18] eax +
call strcmp  +
test eax eax +
jz loc_454198  +
xor eax eax +
add esp 1Ch +
retn 4  +
mov eax 1 +
add esp 1Ch +
retn 4  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A328 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A328 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_46A310 +
call sub_454230  +
mov [esp+18h+var_18] ebx +
call sub_4542F0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_46A310 +
jmp sub_454230  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A328 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A328 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_46A348 +
call sub_4542F0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_46A348 +
retn   +
***
sub esp 1Ch +
mov eax off_45AB6C +
mov [esp+1Ch+var_1C] eax +
call sub_450F80  +
mov edx [esp+1Ch+var_18] +
mov eax off_45AB68 +
mov off_45AB68 edx +
retn   +
***
mov edx [esp+4] +
mov eax off_45AB6C +
mov off_45AB6C edx +
retn   +
***
mov edx [esp+4] +
mov eax dword_45AB78 +
mov dword_45AB78 edx +
retn   +
***
sub esp 0Ch +
call sub_454C40  +
mov eax [eax+4] +
test eax eax +
setnz al  +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+arg_0] +
test eax eax +
jz locret_454300  +
jmp free  +
retn   +
***
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_454EC0 +
mov [esp+58h+var_20] offset dword_455D7C +
mov [esp+58h+var_18] offset loc_454371 +
mov [esp+58h+var_14] esp +
call sub_44B110  +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_38] 1 +
mov [esp+58h+var_58] eax +
call loc_4543A0  +
mov [esp+58h+var_40] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_44B170  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
***
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_45438C  +
call sub_44B410  +
call loc_4547B0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455D68 +
mov dword ptr [esp+40h] offset loc_45445E +
mov [esp+44h] esp +
call sub_44B110  +
mov eax [esp+60h] +
test eax eax +
mov eax 1 +
cmovnz eax [esp+60h] +
mov [esp+60h] eax +
jmp loc_454407  +
mov eax dword_45AB78 +
test eax eax +
jz loc_45442C  +
mov dword ptr [esp+20h] 1 +
call eax  +
mov eax [esp+60h] +
mov [esp] eax +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4543F0  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_44B170  +
mov eax [esp+18h] +
add esp 58h +
pop ebp  +
retn   +
***
mov dword ptr [esp] 4 +
call loc_4545B0  +
mov dword ptr [eax] offset off_46A310 +
mov dword ptr [esp+8] offset sub_454200 +
mov dword ptr [esp+4] offset off_469EE8 +
mov [esp] eax +
mov dword ptr [esp+20h] 1 +
call sub_454E60  +
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_454479  +
call sub_44B410  +
call loc_4547B0  +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455DD0 +
mov dword ptr [esp+40h] offset loc_454575 +
mov [esp+44h] esp +
call sub_44B110  +
mov dword ptr [esp] 50h +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4544F5  +
call sub_454C40  +
mov edi [esp+18h] +
mov ecx 14h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_44B170  +
mov eax [esp+18h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_45AB70 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_45458C  +
mov edx dword_45615C +
xor ecx ecx +
mov eax edx +
jmp loc_45452A  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_454570  +
test al 1 +
jnz loc_454520  +
mov eax 1 +
shl eax cl +
or eax edx +
mov dword_45615C eax +
lea eax [ecx+ecx*4] +
shl eax 4 +
add eax offset unk_45A160 +
mov dword ptr [esp] offset dword_45AB70 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_4544C9  +
call sub_453B80  +
lea esi [esi+0] +
call sub_4542D0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_454591  +
sub ecx 1 +
jz loc_454591  +
call sub_453B50  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_4545A6  +
call sub_44B410  +
call loc_4547B0  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455DB0 +
mov dword ptr [esp+40h] offset loc_4546B5 +
mov [esp+44h] esp +
call sub_44B110  +
mov eax [esp+60h] +
add eax 60h +
mov [esp] eax +
mov [esp+18h] eax +
call malloc  +
test eax eax +
mov [esp+14h] eax +
jz loc_454637  +
call sub_454C40  +
mov edi [esp+14h] +
mov ecx 18h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
mov edi [esp+14h] +
lea eax [esp+1Ch] +
mov [esp] eax +
add edi 60h +
mov [esp+14h] edi +
call sub_44B170  +
mov eax [esp+14h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_45AB70 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4546CC  +
cmp dword ptr [esp+18h] 200h +
mov edx dword_456158 +
ja loc_4546B0  +
mov eax edx +
xor ecx ecx +
jmp loc_45466F  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_4546B0  +
test al 1 +
jnz loc_454665  +
mov eax 1 +
shl eax cl +
or eax edx +
shl ecx 9 +
mov dword_456158 eax +
lea eax dword_456160[ecx] +
mov dword ptr [esp] offset dword_45AB70 +
mov [esp+14h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_454600  +
call sub_453B80  +
nop   +
call sub_4542D0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4546D1  +
sub ecx 1 +
jz loc_4546D1  +
push ebx  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_4547A0  +
mov [esp+18h+var_18] ebx +
call sub_4546F0  +
mov eax [ebx] +
mov edx [ebx+4] +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
ja loc_4547A0  +
cmp eax 1 +
ja loc_4547A0  +
mov eax [ebx-24h] +
mov [esp+18h+var_18] eax +
call loc_450EC0  +
lea esi [esi+0] +
call sub_4542D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
***
push ebp  +
sub esp 88h +
lea eax [esp+80h] +
mov [esp+4Ch] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
mov dword ptr [esp+44h] offset sub_454EC0 +
mov dword ptr [esp+48h] offset dword_455DA0 +
mov dword ptr [esp+50h] offset loc_45484B +
mov [esp+54h] esp +
call sub_44B110  +
mov eax [esp+90h] +
mov [esp] eax +
call sub_4546F0  +
mov eax [esp+90h] +
mov eax [eax-10h] +
mov [esp+20h] eax +
mov eax [esp+90h] +
mov eax [eax-18h] +
mov [esp+1Ch] eax +
mov eax [esp+90h] +
mov eax [eax-24h] +
mov [esp+24h] eax +
mov eax [esp+90h] +
mov eax [eax-0Ch] +
mov [esp+70h] eax +
mov eax [esp+90h] +
mov eax [eax-28h] +
mov dword ptr [esp+30h] 1 +
mov [esp] eax +
call sub_450F80  +
mov eax [esp+34h] +
mov [esp+28h] eax +
mov eax [esp+30h] +
test eax eax +
jz loc_454862  +
sub eax 1 +
jz loc_4548C1  +
sub esp 0Ch +
call sub_454C40  +
mov eax [eax] +
test eax eax +
jz loc_454967  +
test byte ptr [eax+30h] 1 +
jnz loc_454960  +
mov eax [eax] +
add esp 0Ch +
retn   +
mov eax [eax] +
sub eax 50h +
jmp loc_454954  +
xor eax eax +
jmp loc_454956  +
***
sub esp 1Ch +
mov dword ptr [esp+8] 1Eh +
mov dword ptr [esp+4] offset aDeletedVirtual +
mov dword ptr [esp] 2 +
call _write  +
call sub_4542D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
sub esp 18h +
call sub_454D30  +
mov edx [eax] +
test edx edx +
jz loc_4549D7  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_4549E0  +
add edx 30h +
mov dword ptr [eax] 0 +
mov [esp] edx +
call sub_44B500  +
add esp 18h +
pop ebx  +
retn   +
***
cmp ecx 1 +
ja loc_4549C6  +
mov ecx [edx+14h] +
test ecx ecx +
js loc_454A00  +
sub ecx 1 +
jz loc_454A10  +
cmp ecx 0FFFFFFFFh +
jz loc_454A22  +
mov [edx+14h] ecx +
add esp 18h +
pop ebx  +
retn   +
***
add ecx 1 +
jnz loc_4549F6  +
mov ebx [edx+10h] +
mov [eax] ebx +
jmp loc_4549F6  +
***
mov ecx [edx+10h] +
add edx 30h +
mov [eax] ecx +
mov [esp] edx +
call sub_44B500  +
jmp loc_4549D7  +
***
call sub_4542D0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455DE0 +
mov dword ptr [esp+40h] offset loc_454AF1 +
mov [esp+44h] esp +
call sub_44B110  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset unk_45A160 +
jb loc_454A7C  +
cmp dword ptr [esp+60h] offset dword_45AB60 +
jb loc_454A95  +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_44B170  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset unk_45A160 +
mov edx 0CCCCCCCDh +
mul  edx +
mov dword ptr [esp] offset dword_45AB70 +
mov dword ptr [esp+20h] 1 +
mov [esp+18h] edx +
shr dword ptr [esp+18h] 6 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_454B08  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_45AB70 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_45615C eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_454A84  +
call sub_453B80  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_454B0D  +
sub ecx 1 +
jz loc_454B0D  +
call sub_453B50  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_454B22  +
call sub_44B410  +
call loc_4547B0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_454EC0 +
mov dword ptr [esp+38h] offset dword_455DC0 +
mov dword ptr [esp+40h] offset loc_454BED +
mov [esp+44h] esp +
call sub_44B110  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset dword_456160 +
jb loc_454B7C  +
cmp dword ptr [esp+60h] offset unk_45A160 +
jb loc_454B98  +
sub eax 60h +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_44B170  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset dword_456160 +
mov dword ptr [esp] offset dword_45AB70 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 1 +
shr dword ptr [esp+18h] 9 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_454C04  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_45AB70 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_456158 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_454B87  +
call sub_453B80  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_454C09  +
sub ecx 1 +
jz loc_454C09  +
call sub_453B50  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_454C1E  +
call sub_44B410  +
call loc_4547B0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+4] +
mov eax [eax-8] +
retn   +
***
lea eax [esp+58h+var_8] +
lea eax [esp+58h+var_8] +
mov eax [esp+arg_20] +
call sub_454C40  +
mov edx [eax] +
add dword ptr [eax+4] 1 +
test edx edx +
jz loc_454E43  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_454E48  +
mov dword ptr [eax] 0 +
lea ebx [edx+30h] +
mov [esp+18h+var_18] ebx +
call sub_44B480  +
mov [esp+18h+var_18] ebx +
call sub_4546F0  +
call sub_4542D0  +
cmp ecx 1 +
ja loc_454E2A  +
neg dword ptr [edx+14h]  +
jmp loc_454E30  +
***
mov eax [esp+18h+arg_0] +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0ACh+arg_8] +
mov edx [esp+0ACh+arg_C] +
mov [esp+0ACh+var_58] offset sub_454EC0 +
mov [esp+0ACh+var_54] offset dword_455D90 +
mov [esp+0ACh+var_94] eax +
lea eax [esp+0ACh+var_C] +
mov [esp+0ACh+var_50] eax +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_90] edx +
mov [esp+0ACh+var_4C] offset loc_455417 +
mov [esp+0ACh+var_48] esp +
call sub_44B110  +
cmp [esp+0ACh+arg_0] 1 +
mov [esp+0ACh+var_34] 0 +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_8C] 3 +
jz loc_454F50  +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
call sub_44B170  +
mov eax [esp+0ACh+var_8C] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ACh+var_94] +
mov edx [esp+0ACh+var_90] +
mov byte ptr [esp+0ACh+var_94] 1 +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
jbe loc_455050  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_455063  +
cmp [esp+0ACh+arg_4] 6 +
jnz loc_455063  +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-18h] +
mov [esp+0ACh+var_88] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-10h] +
mov [esp+0ACh+var_7C] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-0Ch] +
cmp eax 1 +
mov [esp+0ACh+var_80] eax +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 3 +
test byte ptr [esp+0ACh+arg_4] 8 +
jz loc_4551D0  +
cmp eax 1 +
jz loc_455423  +
mov edx [esp+0ACh+var_88] +
test edx edx +
js loc_455428  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_A8] 0 +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_44B1F0  +
mov eax [esp+0ACh+var_88] +
mov [esp+0ACh+var_A8] 1 +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_44B1F0  +
mov eax [esp+0ACh+var_80] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_44B250  +
mov [esp+0ACh+var_8C] 7 +
jmp loc_454F35  +
cmp eax 1 +
setnbe byte ptr [esp+0ACh+var_94]  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_454F7C  +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_AC] eax +
call sub_44B270  +
test eax eax +
mov [esp+0ACh+var_7C] eax +
jz loc_455250  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_450BE0  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_8C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_450D30  +
mov [esp+0ACh+var_1C] eax +
lea eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_44B220  +
cmp [esp+0ACh+var_30] 1 +
mov esi eax +
sbb esi 0 +
test esi esi +
js loc_455250  +
jz loc_45525D  +
mov eax [esp+0ACh+var_8C] +
xor ebp ebp +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or ebp edx +
test bl bl +
js loc_455100  +
xor edi edi +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_455120  +
sub esi 1 +
jnz loc_4550F7  +
lea eax [ebp+1] +
test edi edi +
mov [esp+0ACh+var_80] eax +
jnz loc_45526F  +
cmp [esp+0ACh+var_80] 0 +
jz loc_455250  +
mov eax 2 +
mov [esp+0ACh+var_88] 0 +
mov [esp+0ACh+var_84] 0 +
test byte ptr [esp+0ACh+arg_4] 1 +
jz loc_454FBF  +
cmp eax 2 +
jz loc_455250  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_8C] 6 +
jnz loc_454F35  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+var_88] +
mov [eax-18h] esi +
mov esi [esp+0ACh+var_84] +
mov [eax-14h] esi +
mov esi [esp+0ACh+var_7C] +
mov [eax-10h] esi +
mov esi [esp+0ACh+arg_10] +
mov eax [esp+0ACh+var_34] +
mov [esi-8] eax +
mov eax esi +
mov esi [esp+0ACh+var_80] +
mov [eax-0Ch] esi +
jmp loc_454F35  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_454FCD  +
cmp eax 1 +
jz loc_455408  +
mov eax [esp+0ACh+var_88] +
test eax eax +
jns loc_454FE2  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_450BE0  +
mov edx [esp+0ACh+arg_14] +
movzx eax [esp+0ACh+var_10] +
call sub_450D30  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_1C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_450D30  +
mov esi [esp+0ACh+arg_10] +
mov [esi-0Ch] eax +
jmp loc_454FE2  +
mov [esp+0ACh+var_8C] 8 +
jmp loc_454F35  +
mov [esp+0ACh+var_80] 0 +
mov eax 1 +
jmp loc_45515B  +
mov eax [esp+0ACh+var_14] +
lea eax [eax+edi-1] +
mov edi [esp+0ACh+var_80] +
mov [esp+0ACh+var_84] eax +
test edi edi +
jz loc_455250  +
test eax eax +
jz loc_455156  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_88] offset off_469E9C +
and eax 8 +
mov [esp+0ACh+var_74] eax +
jnz loc_4552D9  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_88] offset off_469EB0 +
jnz loc_4552D9  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+arg_10] +
add eax 20h +
test byte ptr [esi] 1 +
jz loc_4552CE  +
mov eax [esi-30h] +
mov [esp+0ACh+var_34] eax +
mov eax [eax-50h] +
mov [esp+0ACh+var_88] eax +
mov [esp+0ACh+var_75] 0 +
jmp loc_455321  +
jle loc_455354  +
lea eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_450B00  +
test eax eax +
jz loc_45539C  +
mov esi [esp+0ACh+var_88] +
test esi esi +
jnz loc_4553F2  +
mov eax [esp+0ACh+var_28] +
test eax eax +
jz loc_4553D5  +
add eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_84] +
lea edx [esp+0ACh+var_2C] +
call sub_450A80  +
lea edx [esp+0ACh+var_28] +
mov [esp+0ACh+var_8C] eax +
call sub_450A80  +
mov edx [esp+0ACh+var_2C] +
cmp edx 0 +
jnz loc_4552E0  +
mov [esp+0ACh+var_75] 1 +
jmp loc_45530A  +
mov ebx [esp+0ACh+var_88] +
test ebx ebx +
jz loc_45536B  +
mov ecx [esp+0ACh+var_74] +
test ecx ecx +
jnz loc_45536B  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_4553B1  +
not edx  +
xor esi esi +
add edx [esp+0ACh+var_18] +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or esi eax +
test bl bl +
js loc_455378  +
test esi esi +
setz al  +
test al al +
jz loc_45530A  +
mov eax [esp+0ACh+var_2C] +
mov [esp+0ACh+var_88] eax +
mov eax 3 +
jmp loc_45516B  +
mov [esp+0ACh+var_AC] edx +
mov ecx [esp+0ACh+var_34] +
lea eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_88] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_450CC0  +
xor eax 1 +
jmp loc_455394  +
cmp [esp+0ACh+var_75] 0 +
jz loc_455250  +
mov [esp+0ACh+var_88] 0 +
mov eax 2 +
jmp loc_45516B  +
mov edx [esp+0ACh+var_88] +
lea ecx [esp+0ACh+var_34] +
call sub_450B80  +
test al al +
jnz loc_45539C  +
jmp loc_45530A  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_AC] eax +
call sub_454760  +
mov eax [esp+0ACh+var_68] +
mov [esp+0ACh+var_AC] eax +
call sub_4546F0  +
call sub_4542D0  +
mov [esp+0ACh+var_6C] 1 +
call sub_454270  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
cmp byte_45AB64 0 +
jnz loc_455451  +
mov byte_45AB64 0 +
retn   +
sub esp 1Ch +
mov eax dword_45AB60 +
mov [esp+0C8h+var_C8] eax +
call pthread_key_delete  +
mov byte_45AB64 0 +
add esp 1Ch +
retn   +
***
push edi  +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_overhe +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMemS +
call sub_405910  +
nop   +
sub esp 1Ch +
mov ecx offset dword_46B060 +
call sub_453450  +
mov [esp+38h+var_38] offset sub_402380 +
call sub_449C40  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_1 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_1 +
call sub_405910  +
nop   +
sub esp 1Ch +
mov ecx offset dword_46B1A0 +
call sub_453650  +
mov [esp+38h+var_38] offset sub_4079F0 +
call sub_449C40  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aEnsure_termina +
mov [esp+1Ch+var_18] 356h +
mov [esp+1Ch+var_1C] offset a____GccGccEdit +
call sub_405910  +
nop   +
mov ds:dword_46B1C8 0 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aMacro_real_tok +
mov [esp+1Ch+var_18] 439h +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_405910  +
nop   +
mov dword_45AB70 0FFFFFFFFh +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_450AC0 +
mov [esp+1Ch+var_1C] offset dword_45AB60 +
mov byte_45AB64 0 +
call pthread_key_create  +
mov [esp+1Ch+var_1C] offset loc_455440 +
test eax eax +
setz byte_45AB64  +
call sub_449C40  +
add esp 1Ch +
retn   +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_449C40  +
leave   +
retn   +
***
