mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_1001313  +
push [ebp+arg_4]  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100131E  +
add esi 8 +
mov eax [esi] +
test eax eax +
jnz loc_1001300  +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
jmp loc_1001319  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_100134E  +
push offset a?  +
push offset off_1004004  +
call sub_10012F5  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_1001396  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push dword ptr [esi]  +
mov edi offset off_1004004 +
push edi  +
call sub_10012F5  +
test eax eax +
jnz loc_100138B  +
push dword ptr [esi]  +
push 4000271Ah  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
push offset a?  +
push edi  +
call sub_10012F5  +
add esi 4 +
push esi  +
dec ebx  +
push ebx  +
call dword ptr [eax+4]  +
xor eax eax +
inc eax  +
jmp loc_1001394  +
add esi 4 +
push esi  +
dec ebx  +
push ebx  +
call dword ptr [eax+4]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push offset a_ocp  +
xor edi edi +
push edi  +
call ds:setlocale  +
pop ecx  +
pop ecx  +
push edi  +
call ds:SetThreadUILanguage  +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:HeapSetInformation  +
mov ebx [ebp+arg_0] +
lea eax [ebp+VersionInformation] +
push eax  +
dec ebx  +
add esi 4 +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_100141A  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jnz loc_100141A  +
cmp [ebp+VersionInformation.dwMinorVersion] edi +
jnz loc_100141A  +
mov dword_100440C 1 +
call sub_100213D  +
test eax eax +
jnz loc_1001436  +
push 40002719h  +
call sub_10022F7  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_10014CD  +
cmp ebx edi +
jnz loc_100144A  +
xor esi esi +
push edi  +
push edi  +
call sub_10023A6  +
mov eax esi +
jmp loc_10014CD  +
push dword ptr [esi]  +
push offset off_100408C  +
call sub_10012F5  +
mov edi eax +
test edi edi +
jnz loc_100146F  +
push dword ptr [esi]  +
push 4000271Ah  +
call sub_10022F7  +
pop ecx  +
xor esi esi +
pop ecx  +
inc esi  +
jmp loc_100143C  +
dec ebx  +
add esi 4 +
test ebx ebx +
jnz loc_100148D  +
push offset a?  +
push dword ptr [edi+4]  +
call sub_10012F5  +
push esi  +
push ebx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_10014CD  +
push dword ptr [esi]  +
push dword ptr [edi+4]  +
call sub_10012F5  +
test eax eax +
jnz loc_10014C4  +
push dword ptr [esi]  +
push 4000271Ah  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
push offset a?  +
push dword ptr [edi+4]  +
call sub_10012F5  +
add esi 4 +
push esi  +
dec ebx  +
push ebx  +
call dword ptr [eax+4]  +
jmp loc_100142E  +
add esi 4 +
push esi  +
dec ebx  +
push ebx  +
call dword ptr [eax+4]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
mov eax 104Ch +
call __alloca_probe  +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
xor ebx ebx +
cmp dword ptr [ebp+8] 1 +
mov [ebp-103Ch] ebx +
jnz loc_100155C  +
lea ecx [ebp-1038h] +
push ecx  +
push dword ptr [eax]  +
call sub_10021C2  +
test eax eax +
jnz loc_1001531  +
push 40002716h  +
call sub_10022F7  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1001688  +
push ebx  +
push 20001h  +
lea eax [ebp-1038h] +
push eax  +
call OpenTransactionManagerById  +
mov [ebp-103Ch] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100155C  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
jmp loc_1001528  +
***
push esi  +
push edi  +
push 40002718h  +
call sub_10022F7  +
mov esi ds:NtEnumerateTransactionObject +
pop ecx  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp-1028h] +
stos   +
lea eax [ebp-1040h] +
push eax  +
push 24h  +
lea eax [ebp-1028h] +
push eax  +
push ebx  +
push dword ptr [ebp-103Ch]  +
call esi  +
mov edi 8000001Ah +
jmp loc_1001669  +
cmp eax ebx +
jl loc_1001675  +
lea eax [ebp-104Ch] +
push eax  +
lea eax [ebp-1014h] +
push eax  +
call ds:RtlStringFromGUID  +
push dword ptr [ebp-1048h]  +
call sub_10021E1  +
push offset WideCharStr  +
call sub_10021E1  +
push dword ptr [ebp-103Ch]  +
lea eax [ebp-1014h] +
push eax  +
push ebx  +
push 120001h  +
lea eax [ebp-1044h] +
push eax  +
call ds:NtOpenTransaction  +
cmp eax ebx +
jl loc_100162B  +
push ebx  +
push 1000h  +
lea eax [ebp-1004h] +
push eax  +
push 1  +
push dword ptr [ebp-1044h]  +
call ds:NtQueryInformationTransaction  +
cmp eax ebx +
jl loc_100162B  +
push offset WideCharStr  +
call sub_10021E1  +
lea eax [ebp-0FECh] +
push eax  +
call sub_10021E1  +
jmp loc_1001639  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
pop ecx  +
push offset asc_10011F8  +
call sub_10021E1  +
lea eax [ebp-104Ch] +
push eax  +
call ds:RtlFreeUnicodeString  +
lea eax [ebp-1040h] +
push eax  +
push 24h  +
lea eax [ebp-1028h] +
push eax  +
push ebx  +
push dword ptr [ebp-103Ch]  +
call esi  +
cmp eax edi +
jnz loc_100159F  +
xor eax eax +
jmp loc_1001686  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
pop edi  +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1038h +
call __alloca_probe  +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 40002717h  +
call sub_10022F7  +
mov esi ds:NtEnumerateTransactionObject +
pop ecx  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1028] +
stos   +
lea eax [ebp+var_102C] +
push eax  +
push 24h  +
lea eax [ebp+var_1028] +
push eax  +
push 1  +
xor ebx ebx +
push ebx  +
call esi  +
mov edi 8000001Ah +
jmp loc_100179F  +
cmp eax ebx +
jl loc_10017BB  +
lea eax [ebp+var_1038] +
push eax  +
lea eax [ebp+var_1014] +
push eax  +
call ds:RtlStringFromGUID  +
push [ebp+lpWideCharStr]  +
call sub_10021E1  +
push offset WideCharStr  +
call sub_10021E1  +
push ebx  +
lea eax [ebp+var_1014] +
push eax  +
push ebx  +
push ebx  +
push 20001h  +
lea eax [ebp+var_1030] +
push eax  +
call ds:NtOpenTransactionManager  +
cmp eax ebx +
jl loc_10017AB  +
push ebx  +
push 1000h  +
lea eax [ebp+var_1004] +
push eax  +
push 2  +
push [ebp+var_1030]  +
call ds:NtQueryInformationTransactionManager  +
cmp eax ebx +
jl loc_10017AB  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_10021E1  +
push offset asc_10011F8  +
call sub_10021E1  +
lea eax [ebp+var_1038] +
push eax  +
call ds:RtlFreeUnicodeString  +
lea eax [ebp+var_102C] +
push eax  +
push 24h  +
lea eax [ebp+var_1028] +
push eax  +
push 1  +
push ebx  +
call esi  +
cmp eax edi +
jnz loc_10016F7  +
xor eax eax +
jmp loc_10017CC  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
pop ecx  +
jmp loc_100177D  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp-4] eax +
cmp dword ptr [ebp+8] 3 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
jz loc_1001827  +
push 40002713h  +
call sub_10022F7  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_10018F0  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi]  +
call sub_10021C2  +
test eax eax +
jz loc_1001814  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [esi+4]  +
call sub_10021C2  +
test eax eax +
jz loc_1001814  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [esi+8]  +
call sub_10021C2  +
test eax eax +
jz loc_1001814  +
push edi  +
push 0  +
xor edi edi +
inc edi  +
push edi  +
lea eax [ebp-24h] +
push eax  +
call OpenTransactionManagerById  +
mov esi eax +
test esi esi +
jz loc_10018E0  +
cmp esi 0FFFFFFFFh +
jz loc_10018E0  +
lea eax [ebp-14h] +
push eax  +
push esi  +
push edi  +
call OpenResourceManager  +
push esi  +
mov esi ds:CloseHandle +
mov ebx eax +
call esi  +
test ebx ebx +
jz loc_10018E0  +
cmp ebx 0FFFFFFFFh +
jz loc_10018E0  +
lea eax [ebp-34h] +
push eax  +
push ebx  +
push 2001Ch  +
call OpenEnlistment  +
push ebx  +
mov edi eax +
call esi  +
test edi edi +
jz loc_10018BC  +
cmp edi 0FFFFFFFFh +
jz loc_10018BC  +
push 0  +
push edi  +
call RecoverEnlistment  +
test eax eax +
jnz loc_10018CD  +
push edi  +
call esi  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
xor eax eax +
inc eax  +
jmp loc_10018EE  +
push 0  +
push edi  +
call CommitComplete  +
push edi  +
test eax eax +
jz loc_10018BA  +
call esi  +
xor eax eax +
jmp loc_10018EF  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
mov eax edi +
pop ecx  +
pop edi  +
mov ecx [ebp-4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1034h +
call __alloca_probe  +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push 20001h  +
push eax  +
call OpenTransactionManagerById  +
mov [ebp+var_1030] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1001969  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
pop ecx  +
or eax 0FFFFFFFFh +
jmp loc_1001A57  +
push eax  +
push esi  +
push ebx  +
mov esi 120001h +
push esi  +
lea eax [ebp+hObject] +
push eax  +
call ds:NtOpenTransaction  +
cmp eax ebx +
jge loc_100198C  +
push eax  +
call ds:RtlNtStatusToDosError  +
jmp loc_100195A  +
push edi  +
mov edi ds:NtQueryInformationTransaction +
push ebx  +
push 1000h  +
lea eax [ebp+var_1004] +
push eax  +
push 1  +
push [ebp+hObject]  +
call edi  +
cmp eax ebx +
jl loc_1001A1F  +
cmp [ebp+var_FF4] 1 +
jz loc_10019C3  +
push 4000272Fh  +
call sub_10022F7  +
jmp loc_1001A2C  +
push ebx  +
push 20h  +
lea eax [ebp+var_1024] +
push eax  +
push 3  +
push [ebp+hObject]  +
call edi  +
cmp eax ebx +
jl loc_1001A1F  +
push ebx  +
lea eax [ebp+var_1014] +
push eax  +
push [ebp+var_1030]  +
lea eax [ebp+var_102C] +
push esi  +
push eax  +
call ds:NtOpenResourceManager  +
cmp eax ebx +
jl loc_1001A1F  +
push ebx  +
lea eax [ebp+var_1024] +
push eax  +
push [ebp+var_102C]  +
lea eax [ebp+var_1034] +
push 2001Ch  +
push eax  +
call ds:NtOpenEnlistment  +
cmp eax ebx +
jge loc_1001A32  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
pop ecx  +
or eax 0FFFFFFFFh +
jmp loc_1001A56  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+var_1030]  +
call esi  +
push [ebp+var_102C]  +
call esi  +
mov eax [ebp+var_1034] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 2 +
push esi  +
mov esi [ebp+arg_4] +
jz loc_1001A98  +
push 40002712h  +
call sub_10022F7  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_1001AEE  +
lea eax [ebp+iid] +
push eax  +
push dword ptr [esi]  +
call sub_10021C2  +
test eax eax +
jz loc_1001A88  +
lea eax [ebp+var_14] +
push eax  +
push dword ptr [esi+4]  +
call sub_10021C2  +
test eax eax +
jz loc_1001A88  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+iid] +
push eax  +
call sub_100191A  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1001A93  +
push 0  +
push esi  +
call RollbackEnlistment  +
test eax eax +
jnz loc_1001AE5  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
jmp loc_1001A92  +
push esi  +
call ds:CloseHandle  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100265E  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp-4] eax +
cmp dword ptr [ebp+8] 2 +
push esi  +
mov esi [ebp+0Ch] +
jz loc_1001B2E  +
push 40002712h  +
call sub_10022F7  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_1001B84  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi]  +
call sub_10021C2  +
test eax eax +
jz loc_1001B1E  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [esi+4]  +
call sub_10021C2  +
test eax eax +
jz loc_1001B1E  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_100191A  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1001B29  +
push 0  +
push esi  +
call CommitEnlistment  +
test eax eax +
jnz loc_1001B7B  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
jmp loc_1001B28  +
***
push esi  +
call ds:CloseHandle  +
xor eax eax +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
lea ecx [esi+10h] +
push ecx  +
push eax  +
push 120001h  +
lea eax [ebp+var_38] +
push eax  +
call ds:NtOpenResourceManager  +
test eax eax +
jge loc_1001BE1  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1001C74  +
push 0  +
push esi  +
push [ebp+var_38]  +
lea eax [ebp+hObject] +
push 20001h  +
push eax  +
call ds:NtOpenEnlistment  +
test eax eax +
jl loc_1001BCB  +
push 0  +
push 30h  +
lea eax [ebp+var_34] +
push eax  +
push 2  +
push [ebp+hObject]  +
call ds:NtQueryInformationEnlistment  +
test eax eax +
jl loc_1001BCB  +
mov esi ds:RtlStringFromGUID +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
call esi  +
push [ebp+var_3C]  +
push 4000271Fh  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
call esi  +
push [ebp+var_3C]  +
push 40002720h  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call esi  +
push [ebp+var_3C]  +
push 40002721h  +
call sub_10022F7  +
mov esi ds:CloseHandle +
pop ecx  +
pop ecx  +
push [ebp+hObject]  +
call esi  +
push [ebp+var_38]  +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1054h +
call __alloca_probe  +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 2 +
push edi  +
mov edi [ebp+arg_4] +
jz loc_1001CBE  +
push 40002714h  +
call sub_10022F7  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1001F17  +
lea eax [ebp+iid] +
push eax  +
push dword ptr [edi]  +
call sub_10021C2  +
test eax eax +
jz loc_1001CAB  +
lea eax [ebp+var_1044] +
push eax  +
push dword ptr [edi+4]  +
call sub_10021C2  +
test eax eax +
jz loc_1001CAB  +
push esi  +
xor esi esi +
push esi  +
push 20001h  +
lea eax [ebp+iid] +
push eax  +
call OpenTransactionManagerById  +
mov [ebp+var_1054] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1001D0B  +
call ds:GetLastError  +
jmp loc_1001D31  +
push eax  +
lea eax [ebp+var_1044] +
push eax  +
push esi  +
push 120001h  +
lea eax [ebp+hObject] +
push eax  +
call ds:NtOpenTransaction  +
cmp eax esi +
jge loc_1001D40  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1001F16  +
push ebx  +
push esi  +
mov esi ds:NtQueryInformationTransaction +
mov ebx 1000h +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 1  +
push [ebp+hObject]  +
call esi  +
test eax eax +
jl loc_1001E71  +
push dword ptr [edi+4]  +
push 40002728h  +
call sub_10022F7  +
lea eax [ebp+var_FEC] +
push eax  +
push 4000272Ch  +
call sub_10022F7  +
add esp 10h +
cmp [ebp+var_FF4] 1 +
jnz loc_1001D98  +
push 40002729h  +
jmp loc_1001DB6  +
cmp [ebp+var_FF4] 2 +
jnz loc_1001DA8  +
push 4000272Ah  +
jmp loc_1001DB6  +
cmp [ebp+var_FF4] 3 +
jnz loc_1001DBC  +
push 4000272Bh  +
call sub_10022F7  +
pop ecx  +
push 0  +
push 20h  +
lea eax [ebp+var_1034] +
push eax  +
push 3  +
push [ebp+hObject]  +
call esi  +
mov edi ds:RtlStringFromGUID +
cmp eax 0C019005Fh +
jz loc_1001E57  +
test eax eax +
jl loc_1001E71  +
lea eax [ebp+var_1050] +
push eax  +
lea eax [ebp+var_1034] +
push eax  +
call edi  +
push [ebp+var_104C]  +
push 40002724h  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_1050] +
push eax  +
lea eax [ebp+Source1] +
push eax  +
call edi  +
push [ebp+var_104C]  +
push 4000271Dh  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
push 10h  +
lea eax [ebp+iid] +
push eax  +
lea eax [ebp+Source1] +
push eax  +
call ds:RtlCompareMemory  +
cmp eax 10h +
jnz loc_1001E57  +
lea eax [ebp+var_1034] +
push eax  +
push [ebp+var_1054]  +
call sub_1001B98  +
push 0  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 2  +
push [ebp+hObject]  +
call esi  +
xor ebx ebx +
cmp eax ebx +
jge loc_1001E87  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1001F15  +
cmp [ebp+var_1004] ebx +
jbe loc_1001EFD  +
lea esi [ebp+var_1000] +
lea eax [ebp+var_1050] +
push eax  +
push esi  +
call edi  +
push [ebp+var_104C]  +
push 40002725h  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_1050] +
push eax  +
lea eax [esi+10h] +
push eax  +
call edi  +
push [ebp+var_104C]  +
push 4000271Eh  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
push 10h  +
lea eax [ebp+iid] +
push eax  +
push esi  +
call ds:RtlCompareMemory  +
cmp eax 10h +
jnz loc_1001EF1  +
push esi  +
push [ebp+var_1054]  +
call sub_1001B98  +
inc ebx  +
add esi 20h +
cmp ebx [ebp+var_1004] +
jb loc_1001E95  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+var_1054]  +
call esi  +
xor eax eax +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 102Ch +
call __alloca_probe  +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
inc esi  +
push edi  +
mov edi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_1001F78  +
push 4000272Eh  +
call sub_10022F7  +
pop ecx  +
mov eax esi +
jmp loc_1002068  +
lea eax [ebp+iid] +
push eax  +
push dword ptr [edi]  +
call sub_10021C2  +
test eax eax +
jnz loc_1001FA5  +
push dword ptr [edi]  +
push 4000271Ah  +
call sub_10022F7  +
push 4000272Eh  +
call sub_10022F7  +
add esp 0Ch +
jmp loc_1001F71  +
push ebx  +
push 0  +
push 20001h  +
lea eax [ebp+iid] +
push eax  +
call OpenTransactionManagerById  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_1001FD4  +
call ds:GetLastError  +
push eax  +
call sub_100220C  +
pop ecx  +
mov eax esi +
jmp loc_1002067  +
mov esi ds:NtQueryInformationTransactionManager +
push 0  +
push 1000h  +
lea eax [ebp+var_1004] +
push eax  +
push 2  +
push ebx  +
call esi  +
test eax eax +
jl loc_1002025  +
push dword ptr [edi]  +
push 40002727h  +
call sub_10022F7  +
lea eax [ebp+var_1000] +
push eax  +
push 40002726h  +
call sub_10022F7  +
add esp 10h +
push 0  +
push 10h  +
lea eax [ebp+var_1024] +
push eax  +
push 5  +
push ebx  +
call esi  +
test eax eax +
jge loc_1002038  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call sub_100220C  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1002067  +
lea eax [ebp+var_102C] +
push eax  +
lea eax [ebp+var_1024] +
push eax  +
call ds:RtlStringFromGUID  +
push [ebp+var_1028]  +
push 4000271Bh  +
call sub_10022F7  +
pop ecx  +
pop ecx  +
push ebx  +
call ds:CloseHandle  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100265E  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov edi eax +
xor esi esi +
mov [ebp+hFile] edi +
cmp edi esi +
jz loc_1002132  +
push edi  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_10020CD  +
lea eax [ebp+Mode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_10020CD  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:WriteConsoleW  +
jmp loc_1002132  +
mov edi ds:GetConsoleOutputCP +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
mov ebx ds:WideCharToMultiByte +
push eax  +
call ebx  +
mov [ebp+nNumberOfBytesToWrite] eax +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpBuffer] eax +
cmp eax esi +
jz loc_1002131  +
mov eax [ebp+nNumberOfBytesToWrite] +
push esi  +
push esi  +
inc eax  +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
push eax  +
call ebx  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+nNumberOfBytesToWrite]  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:WriteFile  +
push [ebp+lpBuffer]  +
call ds:free  +
pop ecx  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_10040A8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+var_10] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
call ds:AllocateAndInitializeSid  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_10021AD  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_10021A4  +
mov [ebp+var_10] ebx +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_10] +
xor ecx ebp +
pop ebx  +
call sub_100265E  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpiid]  +
push [ebp+lpsz]  +
call ds:IIDFromString  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpWideCharStr] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10021EC  +
sub eax ecx +
sar eax 1 +
push eax  +
push [ebp+lpWideCharStr]  +
call sub_100207D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:FormatMessageW +
push edi  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+arg_4] +
mov [ebp+Arguments] eax +
lea eax [ebp+lpWideCharStr] +
push eax  +
push edi  +
push 40002711h  +
push edi  +
mov ebx 900h +
push ebx  +
call esi  +
test eax eax +
jz loc_100224E  +
push [ebp+lpWideCharStr]  +
call sub_10021E1  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
lea eax [ebp+Arguments] +
push eax  +
push edi  +
lea eax [ebp+lpWideCharStr] +
push eax  +
xor eax eax +
cmp [ebp+dwMessageId] 40002710h +
push edi  +
push [ebp+dwMessageId]  +
setl al  +
push edi  +
dec eax  +
and eax 0FFFFF800h +
add eax 1000h +
or eax 100h +
push eax  +
call esi  +
test eax eax +
jnz loc_10022AE  +
mov eax dword_10040A4 +
cmp eax 0FFFFFFFFh +
jnz loc_1002299  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
mov dword_10040A4 eax +
lea ecx [ebp+Arguments] +
push ecx  +
push edi  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push edi  +
push [ebp+dwMessageId]  +
push eax  +
push ebx  +
call esi  +
test eax eax +
jz loc_10022D5  +
push offset WideCharStr  +
call sub_10021E1  +
push [ebp+lpWideCharStr]  +
call sub_10021E1  +
push offset asc_10011F8  +
call sub_10021E1  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
jmp loc_10022ED  +
call ds:GetLastError  +
push eax  +
push [ebp+dwMessageId]  +
push offset aUnableToFormat  +
call ds:wprintf  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:FormatMessageW +
push edi  +
lea eax [ebp+arg_4] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
xor ebx ebx +
push ebx  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
mov edi 900h +
push ebx  +
push edi  +
call esi  +
test eax eax +
jz loc_100232E  +
push [ebp+lpWideCharStr]  +
jmp loc_1002374  +
mov eax dword_10040A4 +
cmp eax 0FFFFFFFFh +
jnz loc_1002348  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
mov dword_10040A4 eax +
lea ecx [ebp+Arguments] +
push ecx  +
push ebx  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push ebx  +
push [ebp+dwMessageId]  +
push eax  +
push edi  +
call esi  +
test eax eax +
jz loc_1002384  +
push offset WideCharStr  +
call sub_10021E1  +
push [ebp+lpWideCharStr]  +
call sub_10021E1  +
push offset asc_10011F8  +
call sub_10021E1  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
jmp loc_100239C  +
call ds:GetLastError  +
push eax  +
push [ebp+dwMessageId]  +
push offset aUnableToFormat  +
call ds:wprintf  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
pop ecx  +
xor eax eax +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10023D7  +
test eax eax +
jnz loc_10023DC  +
mov ecx [esi] +
test ecx ecx +
jz loc_10023D4  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10023C8  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10040E4 +
push offset dword_10040D4  +
push dword_10040E0  +
mov dword_10040D4 eax +
push offset dword_10040C4  +
push offset dword_10040C8  +
push offset dword_10040C0  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_10040D0 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1002464  +
cmp eax esi +
jnz loc_1002457  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1002467  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100243E  +
xor esi esi +
inc esi  +
mov eax dword_100441C +
cmp eax esi +
jnz loc_100247A  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10024B5  +
mov eax dword_100441C +
test eax eax +
jnz loc_10024AF  +
mov dword_100441C esi +
push offset dword_1001148  +
push offset dword_100113C  +
call sub_10023BB  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10024B5  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100257F  +
mov dword_10040DC esi +
mov eax dword_100441C +
cmp eax esi +
jnz loc_10024D9  +
push offset dword_1001138  +
push offset dword_1001130  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100441C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10024E6  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1004424 ebx +
jz loc_1002507  +
push offset dword_1004424  +
call sub_1002919  +
pop ecx  +
test eax eax +
jz loc_1002507  +
push ebx  +
push 2  +
push ebx  +
call dword_1004424  +
push dword_10040C4  +
push dword_10040C8  +
push dword_10040C0  +
call sub_10013A0  +
add esp 0Ch +
mov dword_10040D8 eax +
cmp dword_10040CC ebx +
jnz loc_1002565  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_10040D8 eax +
xor ebx ebx +
cmp dword_10040CC ebx +
jnz loc_1002565  +
push eax  +
call ds:_exit  +
cmp dword_10040DC ebx +
jnz loc_1002573  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10040D8 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100259C  +
xor eax eax +
jmp loc_10025E9  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1002598  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10025D6  +
cmp ecx 20Bh +
jnz loc_1002598  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1002598  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10025E4  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1002598  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_10040CC eax +
call sub_1002A88  +
push eax  +
call ds:__set_app_type  +
or dword_1004414 0FFFFFFFFh +
or dword_1004418 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10040EC +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10040E8 +
mov [eax] ecx +
call sub_1002A1A  +
cmp dword_10040B8 0 +
jnz loc_1002642  +
push offset sub_1002A1A  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1002A02  +
xor eax eax +
retn   +
***
call sub_1002AC7  +
jmp sub_100241C  +
***
cmp ecx dword_10040A8 +
jnz loc_1002669  +
retn 0  +
jmp loc_1002B5D  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push offset loc_100270C  +
push large dword ptr fs:0  +
mov eax [esp+10h] +
mov [esp+10h] ebp +
lea ebp [esp+10h] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_10040A8 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_100265E  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100265E  +
push offset dword_10040A8  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_1002759  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
push esi  +
mov eax [esp+14h] +
or eax eax +
jnz loc_10027B1  +
mov ecx [esp+10h] +
mov eax [esp+0Ch] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+8] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  dword ptr [esp+10h] +
mov ecx eax +
mov eax esi +
mul  dword ptr [esp+10h] +
add edx ecx +
jmp loc_10027F8  +
mov ecx eax +
mov ebx [esp+10h] +
mov edx [esp+0Ch] +
mov eax [esp+8] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_10027BF  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+14h] +
mov ecx eax +
mov eax [esp+10h] +
mul  esi +
add edx ecx +
jb loc_10027ED  +
cmp edx [esp+0Ch] +
ja loc_10027ED  +
jb loc_10027F6  +
cmp eax [esp+8] +
jbe loc_10027F6  +
dec esi  +
sub eax [esp+10h] +
sbb edx [esp+14h] +
xor ebx ebx +
sub eax [esp+8] +
sbb edx [esp+0Ch] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1002857  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1002857  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1002851  +
cmp eax 19930521h +
jz loc_1002851  +
cmp eax 19930522h +
jz loc_1002851  +
cmp eax 1994000h +
jnz loc_1002857  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1002818+2)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10028A6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10028A2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100290D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002905  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100290F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10028F5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002890  +
pop ecx  +
test eax eax +
jz loc_1002976  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10028D0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002976  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100297F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002A7B  +
cmp ecx 0FFFFFFFFh +
jz loc_1002A7B  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002A74  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002A74  +
cmp edx 10000000h +
jnb loc_1002A74  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1002A74  +
jmp loc_1002A6F  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002ABD  +
push eax  +
call sub_1002A22  +
test eax eax +
jz loc_1002ABD  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1002AB2  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002ABD  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_10040A8 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002AF9  +
test eax ebx +
jz loc_1002AF9  +
not eax  +
mov dword_10040AC eax +
jmp loc_1002B54  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1002B40  +
test dword_10040A8 ebx +
jnz loc_1002B45  +
mov esi 0BB40E64Fh +
mov dword_10040A8 esi +
not esi  +
mov dword_10040AC esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10041F0 eax +
mov dword_10041EC ecx +
mov dword_10041E8 edx +
mov dword_10041E4 ebx +
mov dword_10041E0 esi +
mov dword_10041DC edi +
mov word_1004208 ss +
mov word_10041FC cs +
mov word_10041D8 ds +
mov word_10041D4 es +
mov word_10041D0 fs +
mov word_10041CC gs +
pushf   +
pop dword_1004200  +
mov eax [ebp+0] +
mov dword_10041F4 eax +
mov eax [ebp+4] +
mov dword_10041F8 eax +
lea eax [ebp+8] +
mov dword_1004204 eax +
mov eax [ebp-320h] +
mov dword_1004140 10001h +
mov eax dword_10041F8 +
mov dword_10040FC eax +
mov dword_10040F0 0C0000409h +
mov dword_10040F4 1 +
mov eax dword_10040A8 +
mov [ebp-328h] eax +
mov eax dword_10040AC +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
