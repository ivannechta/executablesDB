push 40h  +
call sub_42C7DB  +
push offset loc_4516A0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_470298 eax +
call sub_42CA47  +
add esp 8 +
retn   +
***
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44F035+1)  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 5  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset aAdobe  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-24h] +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aAdobecommon  +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 1 +
push eax  +
mov ecx offset unk_4702A0 +
call sub_406290  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov ecx offset unk_4702BC +
mov dword_4702B8 2Bh +
call sub_406290  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_40111E  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401114  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024D0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401170  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401166  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024D0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Dh  +
push offset off_4626BC  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 7 +
push eax  +
mov ecx offset unk_4702D4 +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 8 +
push eax  +
mov ecx offset unk_4702F0 +
mov dword_4702EC 14h +
call sub_406290  +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401221  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401217  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024D5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 0Bh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401273  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401269  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024D5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 5  +
push offset aAdobe  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-14h] eax +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-3Ch] +
push 13h  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset aAdobeprogramfi  +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 0Dh +
push eax  +
mov ecx offset unk_470308 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 0Eh +
push eax  +
mov ecx offset unk_470324 +
mov dword_470320 26h +
call sub_406290  +
mov byte ptr [ebp-4] 10h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401337  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40132D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024DA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401389  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40137F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024DA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push 8  +
push offset aCommon  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 13h +
push eax  +
mov ecx offset unk_47033C +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 14h +
push eax  +
mov ecx offset unk_470358 +
mov dword_470354 2Bh +
call sub_406290  +
mov byte ptr [ebp-4] 16h +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_40143A  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401430  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024DF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 17h +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_40148C  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401482  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024DF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 0Eh  +
push offset aProgramfiles  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 19h +
push eax  +
mov ecx offset unk_470370 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 1Ah +
push eax  +
mov ecx offset unk_47038C +
mov dword_470388 26h +
call sub_406290  +
mov byte ptr [ebp-4] 1Ch +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_40153D  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401533  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024E4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 1Dh +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_40158F  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401585  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024E4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 17h  +
push offset aSharedapplicat  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 1Fh +
push eax  +
mov ecx offset unk_4703A4 +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 20h +
push eax  +
mov ecx offset unk_4703C0 +
mov dword_4703BC 23h +
call sub_406290  +
mov byte ptr [ebp-4] 22h +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401640  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401636  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024E9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 23h +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401692  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401688  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024E9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 11h  +
push offset aShareddocument  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 25h +
push eax  +
mov ecx offset unk_4703D8 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 26h +
push eax  +
mov ecx offset unk_4703F4 +
mov dword_4703F0 2Eh +
call sub_406290  +
mov byte ptr [ebp-4] 28h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401743  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401739  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024EE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 29h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401795  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40178B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024EE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Bh  +
push offset aUtilities  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 2Bh +
push eax  +
mov ecx offset unk_47040C +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 2Ch +
push eax  +
mov ecx offset unk_470428 +
mov dword_470424 2Bh +
call sub_406290  +
mov byte ptr [ebp-4] 2Eh +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401846  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40183C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 2Fh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401898  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40188E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 0Bh  +
push offset aStartmenu  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 31h +
push eax  +
mov ecx offset unk_470440 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 32h +
push eax  +
mov ecx offset unk_47045C +
mov dword_470458 17h +
call sub_406290  +
mov byte ptr [ebp-4] 34h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401949  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40193F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024F8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 35h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_40199B  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401991  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024F8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 14h  +
push offset aStartmenusubfo  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 37h +
push eax  +
mov ecx offset unk_470474 +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 38h +
push eax  +
mov ecx offset unk_470490 +
mov dword_47048C 17h +
call sub_406290  +
mov byte ptr [ebp-4] 3Ah +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401A4C  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401A42  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024FD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 3Bh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401A9E  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401A94  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4024FD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 10h  +
push offset aSystem32folder  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 3Dh +
push eax  +
mov ecx offset unk_4704A8 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 3Eh +
push eax  +
mov ecx offset unk_4704C4 +
mov dword_4704C0 25h +
call sub_406290  +
mov byte ptr [ebp-4] 40h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401B4F  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401B45  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402502  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 41h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401BA1  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401B97  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402502  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Ah  +
push offset aUserhome  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 43h +
push eax  +
mov ecx offset unk_4704DC +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 44h +
push eax  +
mov ecx offset unk_4704F8 +
mov dword_4704F4 28h +
call sub_406290  +
mov byte ptr [ebp-4] 46h +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401C52  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401C48  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402507  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 47h +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401CA4  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401C9A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402507  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 0Fh  +
push offset aUserdocuments  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 49h +
push eax  +
mov ecx offset unk_470510 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 4Ah +
push eax  +
mov ecx offset unk_47052C +
mov dword_470528 5 +
call sub_406290  +
mov byte ptr [ebp-4] 4Ch +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401D55  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401D4B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40250C  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 4Dh +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401DA7  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401D9D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40250C  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 14h  +
push offset aUserroamingapp  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 4Fh +
push eax  +
mov ecx offset unk_470544 +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 50h +
push eax  +
mov ecx offset unk_470560 +
mov dword_47055C 1Ah +
call sub_406290  +
mov byte ptr [ebp-4] 52h +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_401E58  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401E4E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402511  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 53h +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_401EAA  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401EA0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402511  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 12h  +
push offset aUserlocalappda  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 55h +
push eax  +
mov ecx offset unk_470578 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 56h +
push eax  +
mov ecx offset unk_470594 +
mov dword_470590 1Ch +
call sub_406290  +
mov byte ptr [ebp-4] 58h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_401F5B  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401F51  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402516  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 59h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_401FAD  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_401FA3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402516  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Fh  +
push offset aUserfavorites  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 5Bh +
push eax  +
mov ecx offset unk_4705AC +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 5Ch +
push eax  +
mov ecx offset unk_4705C8 +
mov dword_4705C4 6 +
call sub_406290  +
mov byte ptr [ebp-4] 5Eh +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_40205E  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402054  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40251B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 5Fh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_4020B0  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4020A6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40251B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 0Eh  +
push offset aUserpictures  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 61h +
push eax  +
mov ecx offset unk_4705E0 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 62h +
push eax  +
mov ecx offset unk_4705FC +
mov dword_4705F8 27h +
call sub_406290  +
mov byte ptr [ebp-4] 64h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402161  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402157  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402520  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 65h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_4021B3  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4021A9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402520  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Fh  +
push offset aUsertemplates  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 67h +
push eax  +
mov ecx offset unk_470614 +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 68h +
push eax  +
mov ecx offset unk_470630 +
mov dword_47062C 15h +
call sub_406290  +
mov byte ptr [ebp-4] 6Ah +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_402264  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40225A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402525  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 6Bh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_4022B6  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4022AC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402525  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push 0Dh  +
push offset aUserdesktop  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 6Dh +
push eax  +
mov ecx offset unk_470648 +
call sub_406290  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 6Eh +
push eax  +
mov ecx offset unk_470664 +
mov dword_470660 0 +
call sub_406290  +
mov byte ptr [ebp-4] 70h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402367  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40235D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40252A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
mov byte ptr [ebp-4] 71h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_4023B9  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4023AF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40252A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push 0Fh  +
push offset aShareddesktop  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 73h +
push eax  +
mov ecx offset unk_47067C +
call sub_406290  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 74h +
push eax  +
mov ecx offset unk_470698 +
mov dword_470694 19h +
call sub_406290  +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_402466  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40245C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40252F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-40h] +
xor eax eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
cmp edx 8 +
jb loc_4024B4  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4024AA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40252F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push offset loc_451710  +
call sub_42CA47  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44F078  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 410h  +
call sub_42C7DB  +
mov esi eax +
mov [ebp+var_20] offset dword_4706B0 +
add esp 4 +
mov dword_4706B0 esi +
mov dword_4706B4 esi +
lea ecx [esi+410h] +
mov dword_4706B8 ecx +
mov [ebp+var_4] 0 +
xorps xmm0 xmm0 +
movq [ebp+var_1C] xmm0 +
mov edi offset unk_4702A0 +
mov [ebp+var_14] 0 +
mov dword ptr [ebp+var_1C] esi +
mov dword ptr [ebp+var_1C+4] esi +
mov [ebp+var_14] offset dword_4706B0 +
mov byte ptr [ebp+var_4] 1 +
push edi  +
mov ecx esi +
mov [ebp+var_24] esi +
call sub_406290  +
lea ecx [edi+1Ch] +
mov byte ptr [ebp+var_4] 2 +
mov eax [ecx-4] +
push ecx  +
lea ecx [esi+1Ch] +
mov [esi+18h] eax +
call sub_406290  +
add esi 34h +
mov byte ptr [ebp+var_4] 1 +
add edi 34h +
mov dword ptr [ebp+var_1C+4] esi +
cmp edi offset dword_4706B0 +
jnz loc_4025C4  +
push offset byte_451730  +
mov dword_4706B4 esi +
call sub_42CA47  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx offset dword_46E9B8 +
call loc_406450  +
push offset loc_451740  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA30 +
call loc_406450  +
push offset loc_4517B0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46E9D0 +
call loc_406450  +
push offset loc_451810  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA18 +
call loc_406450  +
push offset loc_451870  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46E9E8 +
call loc_406450  +
push offset loc_4518D0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA00 +
call loc_406450  +
push offset loc_451930  +
call sub_42CA47  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset dword_46EA48 +
call loc_406450  +
push offset loc_4519C0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA60 +
call loc_406450  +
push offset loc_451A20  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA78 +
call loc_406450  +
push offset loc_451A80  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EA90 +
call loc_406450  +
push offset loc_451AF0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset dword_46EAA8 +
call loc_406450  +
push offset loc_451B50  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset unk_46F380 +
call loc_42AB8A  +
push offset byte_451BB0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset unk_46F57C +
call loc_42AB8A  +
push offset byte_451BF0  +
call sub_42CA47  +
pop ecx  +
retn   +
***
mov ecx offset unk_46F60C +
call sub_42BE7B  +
push offset loc_451C00  +
call sub_42CA47  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_452C04 +
push eax  +
call sub_42D707  +
pop ecx  +
retn   +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
xorps xmm0 xmm0 +
mov eax ecx +
movq qword ptr [ecx+4] xmm0 +
mov dword ptr [ecx+4] offset aBadArrayNewLen +
mov dword ptr [ecx] offset off_452C5C +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea ecx [ebp-0Ch] +
call sub_4028D0  +
push offset unk_46CC6C  +
lea eax [ebp-0Ch] +
push eax  +
call sub_42DBD3  +
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov dword ptr [esi] offset off_452C5C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov dword ptr [esi] offset off_452C10 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aMapSetTooLong  +
call sub_42AB2A  +
push ecx  +
call ds:InitializeCriticalSectionEx  +
test eax eax +
jnz loc_4029C2  +
call ds:GetLastError  +
test eax eax +
jle locret_4029C4  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44E824  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_470710 +
cmp eax [ecx+4] +
jle loc_402AB3  +
push offset dword_470710  +
call sub_42C50A  +
add esp 4 +
cmp dword_470710 0FFFFFFFFh +
jnz loc_402AB3  +
mov dword ptr [ebp-4] 0 +
push 2Ch  +
mov dword_4706F8 0 +
mov dword_4706FC 0 +
call sub_42C7DB  +
push offset loc_4515B0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_4706F8 eax +
call sub_42CA47  +
push offset dword_470710  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_42C4C0  +
add esp 0Ch +
cmp dword_4706FC 0 +
jnz loc_402D17  +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a0  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 1 +
push eax  +
call loc_405FB0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 80000000h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402B3A  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402B30  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402D2B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a1  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 2 +
push eax  +
call loc_405FB0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 80000001h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402BB4  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402BAA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402D30  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a2  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 3 +
push eax  +
call loc_405FB0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 80000002h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402C2E  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402C24  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402D35  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a3  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 4 +
push eax  +
call loc_405FB0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 80000003h +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402CA8  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402C9E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402D3A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset a4  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 5 +
push eax  +
call loc_405FB0  +
mov dword ptr [eax] 80000005h +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_402D17  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402D0D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_402D3F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax offset dword_4706F8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44E8A4  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4706F4 +
cmp eax [ecx+4] +
jle loc_402DF3  +
push offset dword_4706F4  +
call sub_42C50A  +
add esp 4 +
cmp dword_4706F4 0FFFFFFFFh +
jnz loc_402DF3  +
mov dword ptr [ebp-4] 0 +
push 2Ch  +
mov dword_470714 0 +
mov dword_470718 0 +
call sub_42C7DB  +
push offset loc_4515E0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_470714 eax +
call sub_42CA47  +
push offset dword_4706F4  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_42C4C0  +
add esp 0Ch +
cmp dword_470718 0 +
jnz loc_403333  +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_binary  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 1 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 3 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402E7A  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402E70  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403347  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_dword  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 2 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 4 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402EF4  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402EEA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40334C  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 17h  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_dword_litt  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 3 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 4 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402F6E  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402F64  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403351  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 14h  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_dword_big_  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 4 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 5 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_402FE8  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_402FDE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403356  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_expand_sz  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 5 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 2 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_403062  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403058  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40335B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_link  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 6 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 6 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_4030DC  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4030D2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403360  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_multi_sz  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 7 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 7 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_403156  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40314C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403365  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_none  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 8 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 0 +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_4031D0  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4031C6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40336A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_qword  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 9 +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_40324A  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403240  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40336F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 17h  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset aReg_qword_litt  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 0Ah +
push eax  +
call loc_405E60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_4032C4  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4032BA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403374  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 6  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset aReg_sz  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 0Bh +
push eax  +
call loc_405E60  +
mov dword ptr [eax] 1 +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_403333  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403329  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403379  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax offset dword_470714 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
mov eax large fs:2Ch +
push ebx  +
push esi  +
push edi  +
mov edx [eax] +
mov ebx ecx +
mov eax dword_470700 +
cmp eax [edx+4] +
jle loc_4033E5  +
push offset dword_470700  +
call sub_42C50A  +
add esp 4 +
cmp dword_470700 0FFFFFFFFh +
jnz loc_4033E5  +
push offset loc_451610  +
mov dword_470704 0 +
mov dword_470708 0 +
mov dword_47070C 0 +
call sub_42CA47  +
push offset dword_470700  +
call sub_42C4C0  +
add esp 8 +
mov esi dword_470708 +
mov eax 2AAAAAABh +
mov edi dword_470704 +
mov ecx esi +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jnz loc_403555  +
mov ecx dword_47070C +
mov eax 2AAAAAABh +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 0Ch +
jnb loc_403434  +
sub esp 8 +
call loc_4072C0  +
jmp loc_40346E  +
mov eax 0Ch +
xor ecx ecx +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] cx +
add esi 18h +
sub eax 1 +
jnz loc_403440  +
push ecx  +
mov edx esi +
mov ecx esi +
call loc_406C50  +
add esp 4 +
mov dword_470708 esi +
mov ecx dword_470704 +
push 0Ah  +
push offset aReg_binary  +
lea ecx [ecx+48h] +
call loc_406450  +
mov ecx dword_470704 +
push 9  +
push offset aReg_dword  +
lea ecx [ecx+60h] +
call loc_406450  +
mov ecx dword_470704 +
push 14h  +
push offset aReg_dword_big_  +
lea ecx [ecx+78h] +
call loc_406450  +
mov ecx dword_470704 +
push 0Dh  +
push offset aReg_expand_sz  +
lea ecx [ecx+30h] +
call loc_406450  +
mov ecx dword_470704 +
push 8  +
push offset aReg_link  +
lea ecx [ecx+90h] +
call loc_406450  +
mov ecx dword_470704 +
push 0Ch  +
push offset aReg_multi_sz  +
lea ecx [ecx+0A8h] +
call loc_406450  +
mov ecx dword_470704 +
push 8  +
push offset aReg_none  +
call loc_406450  +
mov ecx dword_470704 +
push 9  +
push offset aReg_qword  +
lea ecx [ecx+108h] +
call loc_406450  +
mov ecx dword_470704 +
push 17h  +
push offset aReg_qword_litt  +
lea ecx [ecx+108h] +
call loc_406450  +
mov ecx dword_470704 +
push 6  +
push offset aReg_sz  +
lea ecx [ecx+18h] +
call loc_406450  +
mov esi dword_470708 +
mov edi dword_470704 +
sub esi edi +
mov eax 2AAAAAABh +
imul  esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp ebx eax +
sbb eax eax +
and eax ebx +
lea eax [eax+eax*2] +
lea eax [edi+eax*8] +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44E8E2  +
mov eax large fs:0 +
push eax  +
sub esp 238h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov [ebp-220h] ecx +
mov eax [ebp+8] +
xor edi edi +
mov dword ptr [ebp-240h] 0 +
mov ecx esi +
mov ebx [esi+14h] +
mov [ebp-224h] eax +
mov eax [ebp+0Ch] +
mov [ebp-21Ch] eax +
mov dword ptr [ebp-214h] 0 +
mov dword ptr [ebp-218h] 0 +
cmp ebx 8 +
jb loc_4035F4  +
mov ecx [esi] +
mov edx [esi+10h] +
push 7  +
push offset aDefault  +
call loc_406B60  +
add esp 8 +
test eax eax +
jz loc_403613  +
mov edi esi +
cmp ebx 8 +
jb loc_403613  +
mov edi [esi] +
mov ebx [ebp-220h] +
lea eax [ebp-218h] +
push eax  +
push 0  +
lea eax [ebp-214h] +
push eax  +
push 0  +
push edi  +
push ebx  +
call ds:RegQueryValueExW  +
mov ecx [ebp-218h] +
mov [ebp-244h] eax +
test ecx ecx +
jz loc_403895  +
push ecx  +
call sub_4324E2  +
mov esi eax +
add esp 4 +
mov [ebp-220h] esi +
test esi esi +
jz loc_403895  +
lea eax [ebp-218h] +
push eax  +
push esi  +
lea eax [ebp-214h] +
push eax  +
push 0  +
push edi  +
push ebx  +
call ds:RegQueryValueExW  +
mov ecx [ebp-214h] +
call loc_403380  +
mov ecx [ebp-224h] +
cmp ecx eax +
jz loc_4036A1  +
cmp dword ptr [eax+14h] 8 +
mov edx eax +
jb loc_403698  +
mov edx [eax] +
push dword ptr [eax+10h]  +
push edx  +
call loc_406450  +
mov eax [ebp-214h] +
cmp eax 4 +
jnz loc_40376E  +
push dword ptr [esi]  +
lea eax [ebp-210h] +
push offset aD  +
push 100h  +
push eax  +
call sub_407490  +
add esp 10h +
mov dword ptr [ebp-22Ch] 0 +
xor eax eax +
mov dword ptr [ebp-228h] 7 +
lea edx [ebp-210h] +
mov [ebp-23Ch] ax +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4036F1  +
sub edx ecx +
lea eax [ebp-210h] +
sar edx 1 +
lea ecx [ebp-23Ch] +
push edx  +
push eax  +
call loc_406450  +
mov ecx [ebp-21Ch] +
lea eax [ebp-23Ch] +
push eax  +
call loc_406200  +
mov edx [ebp-228h] +
cmp edx 8 +
jb loc_40388C  +
mov ecx [ebp-23Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40375F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4038B7  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
jmp loc_40388C  +
cmp eax 1 +
jz loc_403863  +
cmp eax 2 +
jz loc_403863  +
cmp eax 3 +
jnz loc_40388C  +
mov edi [ebp-218h] +
mov [ebp-224h] esi +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-22Ch] 0 +
mov dword ptr [ebp-228h] 7 +
mov [ebp-23Ch] ax +
mov dword ptr [ebp-240h] 2 +
test edi edi +
jle loc_403816  +
mov bl [esi] +
lea esi [esi+1] +
mov cl bl +
mov al 9 +
shr cl 4 +
dec edi  +
cmp al cl +
sbb al al +
add cl 30h +
and al 27h +
add al cl +
lea ecx [ebp-23Ch] +
movzx eax al +
push eax  +
call loc_406320  +
mov al 9 +
lea ecx [ebp-23Ch] +
and bl 0Fh +
cmp al bl +
sbb al al +
and al 27h +
add al 30h +
add al bl +
movzx eax al +
push eax  +
call loc_406320  +
test edi edi +
jg loc_4037C7  +
mov esi [ebp-220h] +
mov ecx [ebp-21Ch] +
lea eax [ebp-23Ch] +
push eax  +
call loc_406200  +
mov edx [ebp-228h] +
cmp edx 8 +
jb loc_40388C  +
mov ecx [ebp-23Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40375F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4038B7  +
jmp loc_40375F  +
***
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403870  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp-21Ch] +
push esi  +
call loc_406450  +
push esi  +
call sub_4322BA  +
add esp 4 +
mov eax [ebp-244h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 44h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+44h+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [esp+50h+var_40] eax +
push 44h  +
mov esi ecx +
mov [esp+54h+bDaclPresent] 0 +
push edi  +
mov [esp+58h+pDacl] esi +
mov [esp+58h+bDaclDefaulted] 0 +
mov [esp+58h+hMem] 0 +
mov [esp+20h] edi +
mov [esp+24h] edi +
mov dword ptr [esp+28h] 44h +
call ds:LocalAlloc  +
mov ebx eax +
lea eax [esp+50h+hMem] +
push eax  +
push edi  +
push 4  +
push esi  +
call ds:RegGetKeySecurity  +
mov esi eax +
mov eax [esp+50h+hMem] +
test eax eax +
jz loc_40394C  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_403AB1  +
lea eax [esp+50h+hMem] +
push eax  +
push edi  +
push 4  +
push [esp+5Ch+pDacl]  +
call ds:RegGetKeySecurity  +
mov esi eax +
test esi esi +
jz loc_40396F  +
push esi  +
push offset aCheckForRegist  +
jmp loc_403A7F  +
lea eax [esp+50h+bDaclDefaulted] +
push eax  +
lea eax [esp+1Ch] +
push eax  +
lea eax [esp+58h+bDaclPresent] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jnz loc_40399C  +
call ds:GetLastError  +
mov esi eax +
push esi  +
push offset aCheckForRegi_0  +
jmp loc_403A7F  +
test ebx ebx +
jz loc_403A71  +
lea eax [esp+20h] +
push eax  +
push ebx  +
push 0  +
push 1Ah  +
call ds:CreateWellKnownSid  +
test eax eax +
jz loc_403A71  +
mov eax [esp+60h+var_50] +
movaps xmm0 oword ptr ds:oword_467E10 +
mov dword ptr [esp+28h] 2 +
mov dword ptr [esp+2Ch] 3 +
mov eax [eax] +
mov [esp+60h+hMem] eax +
lea eax [esp+60h+pDacl] +
push eax  +
push [esp+64h+OldAcl]  +
lea eax [esp+68h+hMem] +
mov [esp+48h] ebx +
push eax  +
push 1  +
movups oword ptr [esp+40h] xmm0 +
call ds:SetEntriesInAclW  +
mov esi eax +
test esi esi +
jz loc_403A0A  +
push esi  +
push offset aCheckForRegi_1  +
jmp loc_403A7F  +
push 1  +
lea eax [esp+64h+hMem] +
push eax  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jnz loc_403A2B  +
call ds:GetLastError  +
mov esi eax +
push esi  +
push offset aInitializesecu  +
jmp loc_403A7F  +
push 0  +
push [esp+64h+pDacl]  +
lea eax [esp+68h+hMem] +
push 1  +
push eax  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_403A52  +
call ds:GetLastError  +
mov esi eax +
push esi  +
push offset aCheckForRegi_2  +
jmp loc_403A7F  +
lea eax [esp+60h+hMem] +
push eax  +
push 4  +
push [esp+68h+hKey]  +
call ds:RegSetKeySecurity  +
mov esi eax +
test esi esi +
jz loc_403A9D  +
push esi  +
push offset aCheckForRegi_3  +
jmp loc_403A7F  +
call ds:GetLastError  +
mov esi eax +
push esi  +
push offset aFailedToCreate  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aRegistrycomman  +
push offset aHdhelperexe  +
push 28h  +
call loc_412B30  +
add esp 1Ch +
test edi edi +
jz loc_403AB1  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test ebx ebx +
jz loc_403ABC  +
push ebx  +
call ds:LocalFree  +
mov eax [esp+18h] +
test eax eax +
jz loc_403ACB  +
push eax  +
call ds:LocalFree  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_403ADA  +
push eax  +
call ds:LocalFree  +
mov ecx [esp+50h+var_4] +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44E930  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-60h] ecx +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-3Ch] +
push 2Dh  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset aSoftwareMicros  +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-18h] +
cmp eax [ebp-14h] +
jz loc_403BA0  +
movups xmm0 oword ptr [ebp-3Ch] +
mov dword ptr [eax+10h] 0 +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-2Ch] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [ebp-18h] 18h +
mov [ebp-3Ch] ax +
jmp loc_403BB0  +
lea ecx [ebp-3Ch] +
push ecx  +
push eax  +
lea ecx [ebp-1Ch] +
call loc_4069F0  +
mov edx [ebp-28h] +
mov byte ptr [ebp-4] 0 +
cmp edx 8 +
jb loc_403BEB  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403BE1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403E9E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 33h  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
push offset aSoftwareMicr_0  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
call loc_406450  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-18h] +
cmp eax [ebp-14h] +
jz loc_403C43  +
movups xmm0 oword ptr [ebp-3Ch] +
mov dword ptr [eax+10h] 0 +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-2Ch] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [ebp-18h] 18h +
mov [ebp-3Ch] ax +
jmp loc_403C53  +
lea ecx [ebp-3Ch] +
push ecx  +
push eax  +
lea ecx [ebp-1Ch] +
call loc_4069F0  +
mov edx [ebp-28h] +
mov byte ptr [ebp-4] 0 +
cmp edx 8 +
jb loc_403C8E  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403C84  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403E9E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-1Ch] +
mov ecx [ebp-18h] +
mov [ebp-40h] eax +
mov [ebp-64h] ecx +
cmp eax ecx +
jz loc_403E1C  +
push eax  +
lea ecx [ebp-3Ch] +
call sub_406290  +
cmp dword ptr [ebp-28h] 8 +
lea eax [ebp-3Ch] +
mov edx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
cmovnb eax edx +
lea edi [ebp-3Ch] +
mov [ebp-5Ch] eax +
cmovnb ecx edx +
mov eax [ebp-2Ch] +
cmovnb edi edx +
lea eax [ecx+eax*2] +
mov [ebp-24h] eax +
cmp edi eax +
jz loc_403CF8  +
mov esi [ebp-5Ch] +
sub esi edi +
movzx eax word ptr [edi] +
push eax  +
call sub_431135  +
mov [esi+edi] ax +
add esp 4 +
add edi 2 +
cmp edi [ebp-24h] +
jnz loc_403CE0  +
push dword ptr [ebp-60h]  +
lea ecx [ebp-58h] +
mov byte ptr [ebp-4] 3 +
call sub_406290  +
mov edx [ebp-44h] +
lea eax [ebp-58h] +
mov ecx [ebp-58h] +
lea edi [ebp-58h] +
mov esi [ebp-48h] +
cmp edx 8 +
cmovnb eax ecx +
cmovnb edi ecx +
lea eax [eax+esi*2] +
lea esi [ebp-58h] +
mov [ebp-24h] eax +
cmovnb esi ecx +
cmp esi eax +
jz loc_403D4C  +
sub edi esi +
movzx eax word ptr [esi] +
push eax  +
call sub_431135  +
mov [edi+esi] ax +
add esp 4 +
add esi 2 +
cmp esi [ebp-24h] +
jnz loc_403D31  +
mov edx [ebp-44h] +
cmp dword ptr [ebp-28h] 8 +
lea eax [ebp-3Ch] +
push dword ptr [ebp-2Ch]  +
mov edi [ebp-3Ch] +
lea ecx [ebp-58h] +
mov esi [ebp-58h] +
cmovnb eax edi +
cmp edx 8 +
mov edx [ebp-48h] +
push eax  +
cmovnb ecx esi +
push 0  +
call loc_406BC0  +
mov ecx [ebp-44h] +
add esp 0Ch +
mov [ebp-24h] eax +
cmp ecx 8 +
jb loc_403DB3  +
lea ecx ds:2[ecx*2] +
mov eax esi +
cmp ecx 1000h +
jb loc_403DA6  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403E9E  +
push ecx  +
push esi  +
call sub_42CA5C  +
mov edi [ebp-3Ch] +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
mov [ebp-58h] ax +
mov [ebp-4] al +
mov eax [ebp-28h] +
mov dword ptr [ebp-44h] 7 +
cmp eax 8 +
jb loc_403E01  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_403DF7  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403E9E  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-24h] 0 +
jz loc_403E6D  +
mov eax [ebp-40h] +
add eax 18h +
mov [ebp-40h] eax +
cmp eax [ebp-64h] +
jnz loc_403CA2  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-1Dh] 0 +
test eax eax +
jz loc_403E80  +
mov edx [ebp-18h] +
push ecx  +
mov ecx eax +
call loc_406C50  +
mov ecx [ebp-14h] +
mov eax 2AAAAAABh +
mov esi [ebp-1Ch] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_403E76  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_403E9E  +
jmp loc_403E76  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-1Dh] 1 +
jmp loc_403E20  +
***
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-1Dh] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44E9B0  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-38h] esi +
mov eax [ebp+10h] +
lea ecx [ebp-34h] +
mov edi [ebp+8] +
mov ebx [ebp+0Ch] +
mov [ebp-14h] eax +
mov eax [ebp+14h] +
mov [ebp-18h] eax +
mov eax [ebp+18h] +
mov [ebp-3Ch] esi +
mov [ebp-1Ch] eax +
xor eax eax +
push 17h  +
push offset aSetregistryval  +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 7 +
mov [ebp-34h] ax +
call loc_406450  +
lea eax [ebp-34h] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_463E9C +
call sub_406290  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+20h] +
mov dword ptr [esi+1Ch] 0Eh +
call sub_411480  +
inc dword_470284  +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-20h] +
cmp edx 8 +
jb loc_403F8B  +
mov ecx [ebp-34h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_403F81  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40403D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push edi  +
lea ecx [esi+68h] +
mov dword ptr [esi] offset off_46260C +
call sub_406290  +
push ebx  +
lea ecx [esi+80h] +
mov byte ptr [ebp-4] 4 +
call sub_406290  +
push dword ptr [ebp-14h]  +
lea ecx [esi+98h] +
mov byte ptr [ebp-4] 5 +
call sub_406290  +
push dword ptr [ebp-18h]  +
lea ecx [esi+0B0h] +
mov byte ptr [ebp-4] 6 +
call sub_406290  +
push dword ptr [ebp-1Ch]  +
lea ecx [esi+0C8h] +
mov byte ptr [ebp-4] 7 +
call sub_406290  +
mov al [ebp+1Ch] +
mov [esi+0E0h] al +
xor eax eax +
mov dword ptr [esi+0E4h] 1 +
mov [esi+0E8h] ax +
mov dword ptr [esi+0F8h] 0 +
mov dword ptr [esi+0FCh] 7 +
mov [esi+110h] eax +
mov [esi+100h] ax +
mov eax esi +
mov dword ptr [esi+114h] 7 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
push esi  +
mov esi ecx +
call loc_404080  +
test [ebp+arg_0] 1 +
jz loc_40406F  +
push 118h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46260C +
mov ecx [esi+114h] +
cmp ecx 8 +
jb loc_4040C9  +
mov eax [esi+100h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4040BF  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+110h] 0 +
mov dword ptr [esi+114h] 7 +
mov [esi+100h] ax +
mov ecx [esi+0FCh] +
cmp ecx 8 +
jb loc_404126  +
mov eax [esi+0E8h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40411C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0F8h] 0 +
mov dword ptr [esi+0FCh] 7 +
mov [esi+0E8h] ax +
mov ecx [esi+0DCh] +
cmp ecx 8 +
jb loc_404183  +
mov eax [esi+0C8h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_404179  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 7 +
mov [esi+0C8h] ax +
mov ecx [esi+0C4h] +
cmp ecx 8 +
jb loc_4041E0  +
mov eax [esi+0B0h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4041D6  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 7 +
mov [esi+0B0h] ax +
mov ecx [esi+0ACh] +
cmp ecx 8 +
jb loc_40423D  +
mov eax [esi+98h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_404233  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+0ACh] 7 +
mov [esi+98h] ax +
mov ecx [esi+94h] +
cmp ecx 8 +
jb loc_404296  +
mov eax [esi+80h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40428C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+94h] 7 +
mov [esi+80h] ax +
mov ecx [esi+7Ch] +
cmp ecx 8 +
jb loc_4042E9  +
mov eax [esi+68h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4042DF  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404305  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 7 +
mov ecx esi +
mov [esi+68h] ax +
pop esi  +
jmp loc_411550  +
***
call sub_432491  +
lea eax [ecx+4] +
mov ecx [ebp+arg_0] +
push eax  +
call sub_406290  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EA20  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
test byte ptr [ebx+0E4h] 2 +
mov eax [ebp+8] +
mov [ebp-58h] eax +
jnz loc_4047B6  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-14h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-50h] +
push 16h  +
xor eax eax +
mov dword ptr [ebp-40h] 0 +
push offset aDeleteregistry  +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
call loc_406450  +
lea eax [ebp-50h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-1Ch] +
call loc_414E60  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_404409  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4043FF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047D6  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-20h] 0 +
lea eax [ebp-20h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-1Ch] +
call sub_416200  +
xor eax eax +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 7 +
mov [ebp-38h] ax +
lea ecx [ebx+68h] +
mov byte ptr [ebp-4] 4 +
lea edx [ebp-38h] +
call loc_410EE0  +
lea eax [ebx+80h] +
mov edx offset asc_45EDCC +
push eax  +
lea ecx [ebp-70h] +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 5 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_404468  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-38h] +
call loc_406570  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-5Ch] +
cmp edx 8 +
jb loc_4044B2  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4044A8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebp-38h] +
mov dword ptr [ebp-40h] 0 +
push eax  +
push 4  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
push offset aPath  +
lea ecx [ebp-50h] +
mov [ebp-50h] ax +
call loc_406450  +
lea eax [ebp-50h] +
mov byte ptr [ebp-4] 6 +
mov esi [ebp-20h] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_4044FD  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-1Ch] +
call loc_417A60  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_404543  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404539  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebx+98h] +
mov dword ptr [ebp-40h] 0 +
push eax  +
push 4  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
push offset aName  +
lea ecx [ebp-50h] +
mov [ebp-50h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 7 +
lea eax [ebp-50h] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_40458E  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-1Ch] +
call loc_417A60  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_4045D4  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4045CA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047E5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test byte ptr [ebx+0E4h] 8 +
jz loc_4046E8  +
push 4  +
xor eax eax +
mov dword ptr [ebp-60h] 0 +
push offset aTrue  +
lea ecx [ebp-70h] +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
call loc_406450  +
lea eax [ebp-70h] +
mov byte ptr [ebp-4] 8 +
push eax  +
push 11h  +
xor eax eax +
mov dword ptr [ebp-40h] 0 +
push offset aIsuserpreferen  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 9 +
lea eax [ebp-50h] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404650  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-1Ch] +
call loc_417A60  +
mov byte ptr [ebp-4] 8 +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_404696  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40468C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047EA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-5Ch] +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
cmp edx 8 +
jb loc_4046E8  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4046DE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047EA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push dword ptr [ebp-58h]  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404704  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-1Ch] +
call loc_4170C0  +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-24h] +
cmp edx 8 +
jb loc_40474A  +
mov ecx [ebp-38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404740  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4047EF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 7 +
mov [ebp-38h] ax +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_404776  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0Ah +
mov esi [ebp-18h] +
test esi esi +
jz loc_404796  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-14h] 0 +
jz loc_4047A2  +
call ds:CoUninitialize  +
test esi esi +
jz loc_4047B6  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EAA8  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+8] +
xorps xmm0 xmm0 +
movq qword ptr [ebp-20h] xmm0 +
mov [ebp-5Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-18h] 0 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-58h] +
push 0Bh  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
push offset aRegistry  +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
call loc_406450  +
lea eax [ebp-58h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-20h] +
call loc_414E60  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_4048CC  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4048C2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D6A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-24h] 0 +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-20h] +
call sub_416200  +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
lea ecx [ebx+68h] +
mov byte ptr [ebp-4] 4 +
lea edx [ebp-3Ch] +
call loc_410EE0  +
lea eax [ebx+80h] +
mov edx offset asc_45EDCC +
push eax  +
lea ecx [ebp-58h] +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 5 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40492B  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-3Ch] +
call loc_406570  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_404975  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40496B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D6F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-58h] +
push 4  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
push offset aPath  +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
call loc_406450  +
lea eax [ebp-14h] +
mov byte ptr [ebp-4] 7 +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-20h] +
call loc_416350  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_4049F9  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4049EF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D74  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov esi [ebp-24h] +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404A15  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp-14h] +
push ecx  +
mov ecx esp +
mov [ecx] eax +
test eax eax +
jz loc_404A31  +
mov ecx [eax] +
push eax  +
mov edi [ecx+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-20h] +
call sub_4167C0  +
push 4  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
push offset aName  +
lea ecx [ebp-58h] +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
call loc_406450  +
lea eax [ebp-14h] +
mov byte ptr [ebp-4] 8 +
push eax  +
lea eax [ebx+98h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-20h] +
call loc_416350  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_404AB5  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404AAB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D79  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404ACE  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp-14h] +
push ecx  +
mov ecx esp +
mov [ecx] eax +
test eax eax +
jz loc_404AEA  +
mov ecx [eax] +
push eax  +
mov edi [ecx+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-20h] +
call sub_4167C0  +
push 4  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
push offset aType  +
lea ecx [ebp-58h] +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
call loc_406450  +
lea eax [ebp-14h] +
mov byte ptr [ebp-4] 9 +
push eax  +
lea eax [ebx+0B0h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-20h] +
call loc_416350  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_404B6E  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404B64  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D7E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404B87  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp-14h] +
push ecx  +
mov ecx esp +
mov [ecx] eax +
test eax eax +
jz loc_404BA3  +
mov ecx [eax] +
push eax  +
mov edi [ecx+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-20h] +
call sub_4167C0  +
push 5  +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
push offset aValue  +
lea ecx [ebp-58h] +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
call loc_406450  +
lea eax [ebp-14h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea eax [ebx+0C8h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-20h] +
call loc_416350  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_404C27  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404C1D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D83  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404C40  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov edi [ebp-14h] +
push ecx  +
mov eax esp +
mov [eax] edi +
test edi edi +
jz loc_404C5C  +
mov eax [edi] +
push edi  +
mov ebx [eax+4] +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
lea ecx [ebp-20h] +
call sub_4167C0  +
push dword ptr [ebp-5Ch]  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_404C80  +
mov eax [esi] +
push esi  +
mov ebx [eax+4] +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
lea ecx [ebp-20h] +
call loc_4170C0  +
mov byte ptr [ebp-4] 4 +
test edi edi +
jz loc_404CA0  +
mov eax [edi] +
push edi  +
mov edi [eax+8] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-28h] +
cmp edx 8 +
jb loc_404CDE  +
mov ecx [ebp-3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_404CD4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_404D88  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 7 +
mov [ebp-3Ch] ax +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_404D0A  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0Bh +
mov esi [ebp-1Ch] +
test esi esi +
jz loc_404D2A  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-18h] 0 +
jz loc_404D36  +
call ds:CoUninitialize  +
test esi esi +
jz loc_404D4A  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44EAF0+1)  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-44h] ebx +
lea edi [ebx+0C8h] +
mov dword ptr [ebp-34h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
mov dword ptr [ebp-60h] 0 +
jb loc_404DDE  +
mov eax [edi] +
cmp dword ptr [ebx+0C4h] 8 +
lea edx [ebx+0B0h] +
mov [ebp-54h] edx +
mov ecx edx +
jb loc_404DF4  +
mov ecx [edx] +
cmp dword ptr [ebx+0ACh] 8 +
lea esi [ebx+98h] +
mov [ebp-58h] esi +
mov edx esi +
jb loc_404E0A  +
mov edx [esi] +
cmp dword ptr [ebx+94h] 8 +
lea esi [ebx+80h] +
mov [ebp-50h] esi +
mov ebx esi +
jb loc_404E20  +
mov ebx [esi] +
mov esi [ebp-44h] +
add esi 68h +
mov [ebp-5Ch] esi +
mov [ebp-4Ch] esi +
cmp dword ptr [esi+14h] 8 +
jb loc_404E37  +
mov esi [esi] +
mov [ebp-4Ch] esi +
mov esi [ebp-44h] +
add esi 4 +
mov [ebp-40h] esi +
cmp dword ptr [esi+14h] 8 +
mov esi [ebp-50h] +
jb loc_404E55  +
mov esi [ebp-44h] +
mov esi [esi+4] +
mov [ebp-40h] esi +
mov esi [ebp-50h] +
push eax  +
mov eax [ebp-44h] +
push ecx  +
push edx  +
push ebx  +
push dword ptr [ebp-4Ch]  +
movzx eax byte ptr [eax+0E0h] +
push eax  +
push offset aSettingRegistr  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push dword ptr [ebp-40h]  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 30h +
mov dword ptr [ebp-4Ch] 1 +
call loc_402A10  +
push dword ptr [ebp-5Ch]  +
mov ecx eax +
call loc_405D50  +
mov ebx [eax] +
mov [ebp-14h] ebx +
call loc_402D50  +
mov ecx [ebp-44h] +
cmp dword ptr [ecx+0C0h] 0 +
jbe loc_404EC6  +
push dword ptr [ebp-54h]  +
mov ecx eax +
call loc_405D50  +
mov ecx [ebp-44h] +
mov eax [eax] +
mov [ebp-4Ch] eax +
cmp byte ptr [ecx+0E0h] 0 +
mov edx 0F003Fh +
lea ecx [ebp-40h] +
mov eax 0F013Fh +
push ecx  +
cmovz eax edx +
push eax  +
push 0  +
push 0  +
push ebx  +
mov [ebp-34h] eax +
call ds:RegOpenKeyExW  +
mov ebx eax +
test ebx ebx +
jnz loc_4052D3  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_404F01  +
mov eax [esi] +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
push 0  +
push dword ptr [ebp-34h]  +
push 0  +
push 0  +
push 0  +
push eax  +
push dword ptr [ebp-40h]  +
call ds:RegCreateKeyExW  +
mov ebx eax +
cmp ebx 5 +
jnz loc_404FD6  +
mov ecx [ebp-44h] +
test dword ptr [ecx+0E4h] 10000000h +
jnz loc_404FDA  +
cmp byte ptr [ecx+0E0h] 0 +
mov eax 60119h +
mov edx 60019h +
mov dword ptr [ebp-38h] 0 +
cmovz eax edx +
mov ecx esi +
cmp dword ptr [esi+14h] 8 +
jb loc_404F61  +
mov ecx [esi] +
lea edx [ebp-38h] +
push edx  +
push eax  +
push 0  +
push ecx  +
push dword ptr [ebp-14h]  +
call ds:RegOpenKeyExW  +
mov ecx [ebp-38h] +
test ecx ecx +
jz loc_404FA0  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 10000000h +
push eax  +
call sub_4038C0  +
mov [ebp-14h] eax +
add esp 4 +
mov eax [ebp-38h] +
test eax eax +
jz loc_404F9D  +
push eax  +
call ds:RegCloseKey  +
mov eax [ebp-14h] +
test eax eax +
jnz loc_404FCD  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_404FAE  +
mov eax [esi] +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
push 0  +
push dword ptr [ebp-34h]  +
push 0  +
push 0  +
push 0  +
push eax  +
push dword ptr [ebp-40h]  +
call ds:RegCreateKeyExW  +
mov ebx eax +
push dword ptr [ebp-40h]  +
call ds:RegCloseKey  +
test ebx ebx +
jz loc_404FE4  +
cmp dword ptr [ebp-30h] 2 +
jnz loc_4052C2  +
cmp dword ptr [ebp-3Ch] 0 +
jz loc_4052C2  +
mov eax [ebp-44h] +
cmp dword ptr [eax+0A8h] 0 +
jnz loc_405010  +
cmp dword ptr [eax+0C0h] 0 +
jnz loc_405010  +
cmp dword ptr [eax+0D8h] 0 +
jz loc_4052C2  +
mov eax [ebp-58h] +
mov ecx eax +
mov dword ptr [ebp-38h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_405024  +
mov ecx [eax] +
mov edx [eax+10h] +
push 7  +
push offset aDefault  +
call loc_406B60  +
add esp 8 +
test eax eax +
jz loc_40504B  +
mov eax [ebp-58h] +
mov [ebp-38h] eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40504B  +
mov eax [eax] +
mov [ebp-38h] eax +
mov ecx [ebp-44h] +
lea eax [ecx+100h] +
push eax  +
lea eax [ecx+0E8h] +
lea edx [ecx+98h] +
mov ecx [ebp-3Ch] +
push eax  +
call loc_403580  +
mov ecx [ebp-44h] +
add esp 8 +
test byte ptr [ecx+0E4h] 8 +
jz loc_40510A  +
test eax eax +
jnz loc_40510A  +
cmp dword ptr [edi+14h] 8 +
mov [ebp-34h] edi +
jb loc_405093  +
mov eax [edi] +
mov [ebp-34h] eax +
cmp dword ptr [ecx+0C4h] 8 +
lea eax [ecx+0B0h] +
mov [ebp-14h] eax +
jb loc_4050AA  +
mov eax [eax] +
mov [ebp-14h] eax +
cmp dword ptr [ecx+0ACh] 8 +
lea edx [ecx+98h] +
jb loc_4050BF  +
mov edx [ecx+98h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_4050C9  +
mov ecx [esi] +
mov esi [ebp-44h] +
cmp dword ptr [esi+18h] 8 +
lea eax [esi+4] +
mov esi [ebp-50h] +
jb loc_4050DE  +
mov eax [ebp-44h] +
mov eax [eax+4] +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-14h]  +
push edx  +
push ecx  +
push offset aResgistryIsMar  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 28h +
jmp loc_4052B9  +
mov eax [ebp-4Ch] +
cmp eax 4 +
jnz loc_405152  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
mov dword ptr [ebp-34h] 0 +
jb loc_405123  +
mov eax [edi] +
push 0Ah  +
lea ecx [ebp-34h] +
push ecx  +
push eax  +
call sub_432290  +
add esp 0Ch +
mov [ebp-14h] eax +
lea eax [ebp-14h] +
push 4  +
push eax  +
push 4  +
push 0  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
call ds:RegSetValueExW  +
mov ebx eax +
jmp loc_4052B9  +
cmp eax 1 +
jz loc_405464  +
cmp eax 2 +
jz loc_405464  +
cmp eax 3 +
jnz loc_40541E  +
mov dword ptr [ebp-4] 0 +
xor ecx ecx +
xorps xmm0 xmm0 +
mov dword ptr [ebp-18h] 0 +
xor ebx ebx +
movq qword ptr [ebp-20h] xmm0 +
cmp dword ptr [edi+14h] 8 +
mov esi edi +
mov dword ptr [ebp-20h] 0 +
mov [ebp-1Ch] ebx +
mov [ebp-4Ch] ecx +
mov [ebp-18h] ecx +
mov dword ptr [ebp-34h] 1 +
jb loc_4051A8  +
mov esi [edi] +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4051B2  +
mov eax [edi] +
mov ecx [edi+10h] +
add ecx ecx +
add eax ecx +
mov [ebp-14h] ecx +
cmp esi eax +
jz loc_40525D  +
mov dl [esi] +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_4051EA  +
mov al dl +
sub al 61h +
cmp al 5 +
ja loc_4051DB  +
lea ecx [edx-57h] +
jmp loc_4051EA  +
mov al dl +
sub al 41h +
cmp al 5 +
ja loc_4051E8  +
lea ecx [edx-37h] +
jmp loc_4051EA  +
xor cl cl +
add esi 2 +
mov [ebp-45h] cl +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4051FA  +
mov eax [edi] +
add eax [ebp-14h] +
cmp esi eax +
jz loc_405232  +
mov dl [esi] +
mov al dl +
shl cl 4 +
sub al 30h +
cmp al 9 +
jbe loc_40522A  +
mov al dl +
sub al 61h +
cmp al 5 +
mov al dl +
ja loc_40521C  +
sub al 57h +
jmp loc_40522A  +
sub al 41h +
cmp al 5 +
ja loc_405228  +
mov al dl +
sub al 37h +
jmp loc_40522A  +
xor al al +
or cl al +
add esi 2 +
mov [ebp-45h] cl +
cmp ebx [ebp-4Ch] +
jz loc_405242  +
mov [ebx] cl +
inc ebx  +
mov [ebp-1Ch] ebx +
jmp loc_4051A8  +
***
lea eax [ebp-45h] +
push eax  +
push ebx  +
lea ecx [ebp-20h] +
call loc_4068B0  +
mov eax [ebp-18h] +
mov ebx [ebp-1Ch] +
mov [ebp-4Ch] eax +
jmp loc_4051A8  +
***
mov esi [ebp-20h] +
xor eax eax +
sub ebx esi +
cmp eax ebx +
push ebx  +
sbb eax eax +
and eax esi +
push eax  +
push 3  +
push 0  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
call ds:RegSetValueExW  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov ebx eax +
test esi esi +
jz loc_4052B6  +
mov ecx [ebp-4Ch] +
mov eax esi +
sub ecx esi +
cmp ecx 1000h +
jb loc_4052AC  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40558C  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov esi [ebp-50h] +
push dword ptr [ebp-3Ch]  +
call ds:RegCloseKey  +
push dword ptr [ebp-40h]  +
call ds:RegCloseKey  +
test ebx ebx +
jz loc_405540  +
mov edx ebx +
lea ecx [ebp-2Ch] +
call loc_407A50  +
mov dword ptr [ebp-4] 1 +
lea ebx [ebp-2Ch] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ebx [ebp-2Ch] +
cmp dword ptr [edi+14h] 8 +
jb loc_4052F7  +
mov edi [edi] +
mov eax [ebp-54h] +
cmp dword ptr [eax+14h] 8 +
jb loc_405305  +
mov eax [eax] +
mov [ebp-54h] eax +
mov eax [ebp-58h] +
cmp dword ptr [eax+14h] 8 +
jb loc_405313  +
mov eax [eax] +
mov [ebp-58h] eax +
cmp dword ptr [esi+14h] 8 +
mov edx esi +
jb loc_40531D  +
mov edx [esi] +
mov ecx [ebp-5Ch] +
mov eax ecx +
cmp dword ptr [ecx+14h] 8 +
jb loc_40532A  +
mov eax [ecx] +
mov esi [ebp-44h] +
cmp dword ptr [esi+18h] 8 +
lea ecx [esi+4] +
jb loc_405339  +
mov ecx [esi+4] +
push ebx  +
push edi  +
push dword ptr [ebp-54h]  +
mov ebx esi +
push dword ptr [ebp-58h]  +
push edx  +
push eax  +
movzx eax byte ptr [ebx+0E0h] +
push eax  +
push offset aErrorSettingRe  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push ecx  +
push offset aHdhelperexe  +
push 28h  +
call loc_412B30  +
lea esi [ebx+20h] +
add esp 34h +
lea ecx [ebx+68h] +
cmp esi ecx +
jz loc_40538B  +
cmp dword ptr [ecx+14h] 8 +
mov eax ecx +
jb loc_405380  +
mov eax [ecx] +
push dword ptr [ecx+10h]  +
mov ecx esi +
push eax  +
call loc_406450  +
mov edi [ebp-50h] +
mov edx edi +
push ecx  +
mov ecx esi +
call loc_414330  +
lea ecx [ebx+38h] +
add esp 4 +
lea eax [ebp-2Ch] +
cmp ecx eax +
jz loc_4053B6  +
cmp dword ptr [ebp-18h] 8 +
push dword ptr [ebp-1Ch]  +
cmovnb eax [ebp-2Ch] +
push eax  +
call loc_406450  +
mov ecx edi +
call loc_403AF0  +
test al al +
jz loc_4054E6  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
cmp dword ptr [edi+14h] 8 +
jb loc_4053D8  +
mov edi [edi] +
cmp dword ptr [ebx+7Ch] 8 +
lea esi [ebx+68h] +
jb loc_4053E3  +
mov esi [esi] +
cmp dword ptr [ebx+18h] 8 +
lea ecx [ebx+4] +
jb loc_4053EF  +
mov ecx [ebx+4] +
push eax  +
movzx eax byte ptr [ebx+0E0h] +
push edi  +
push esi  +
push eax  +
push offset aAllowingRegist  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push ecx  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 28h +
jmp loc_4054ED  +
mov eax [ebp-54h] +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40542B  +
mov ecx [eax] +
mov edx [ebp-44h] +
cmp dword ptr [edx+18h] 8 +
lea eax [edx+4] +
jb loc_40543A  +
mov eax [edx+4] +
push ecx  +
push offset aUnsupportedInv  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 1Ch +
mov ebx 0Dh +
jmp loc_4052B9  +
***
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_40546E  +
mov ecx [edi] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_405471  +
sub ecx edx +
mov edx 2 +
sar ecx 1 +
lea eax [ecx+1] +
xor ecx ecx +
mov [ebp-34h] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_42CA6A  +
mov ebx eax +
add esp 4 +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
mov [ebp-14h] ebx +
jb loc_4054AE  +
mov eax [edi] +
push eax  +
push dword ptr [ebp-34h]  +
push ebx  +
call sub_431165  +
mov eax [ebp-34h] +
add esp 0Ch +
add eax eax +
push eax  +
mov eax [ebp-4Ch] +
push ebx  +
push eax  +
push 0  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
call ds:RegSetValueExW  +
push dword ptr [ebp-14h]  +
mov ebx eax +
call sub_42C3C0  +
add esp 4 +
jmp loc_4052B9  +
***
mov dword ptr [ebp-60h] 19h +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_40552A  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_405520  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_405591  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
jmp loc_405543  +
mov ebx [ebp-44h] +
cmp dword ptr [ebx+18h] 8 +
lea eax [ebx+4] +
jb loc_40554E  +
mov eax [eax] +
push offset aSettingRegis_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
mov eax [ebp-60h] +
add esp 18h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
push 0FFFFFFFFh  +
retn   +
***
push esi  +
mov esi ecx +
call loc_405830  +
test [ebp+arg_0] 1 +
jz loc_40581F  +
push 0E8h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_45FC40 +
mov ecx [esi+0E4h] +
cmp ecx 8 +
jb loc_405879  +
mov eax [esi+0D0h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40586F  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059FB  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0E4h] 7 +
mov [esi+0D0h] ax +
mov ecx [esi+0CCh] +
cmp ecx 8 +
jb loc_4058D6  +
mov eax [esi+0B8h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4058CC  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059FB  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0C8h] 0 +
mov dword ptr [esi+0CCh] 7 +
mov [esi+0B8h] ax +
mov ecx [esi+0ACh] +
cmp ecx 8 +
jb loc_405933  +
mov eax [esi+98h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_405929  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059FB  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+0ACh] 7 +
mov [esi+98h] ax +
mov ecx [esi+94h] +
cmp ecx 8 +
jb loc_40598C  +
mov eax [esi+80h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_405982  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059FB  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+94h] 7 +
mov [esi+80h] ax +
mov ecx [esi+7Ch] +
cmp ecx 8 +
jb loc_4059DF  +
mov eax [esi+68h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4059D5  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4059FB  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 7 +
mov ecx esi +
mov [esi+68h] ax +
pop esi  +
jmp loc_411550  +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+0Ch+var_4] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
cmp dword ptr [ebx+18h] 8 +
lea eax [ebx+4] +
jb loc_405A35  +
mov eax [ebx+4] +
push offset aDeletingRegist  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 18h +
call loc_402A10  +
lea ecx [ebx+68h] +
push ecx  +
mov ecx eax +
call loc_405D50  +
cmp byte ptr [ebx+0B0h] 0 +
lea edi [ebx+80h] +
mov ecx 0F013Fh +
mov edx [eax] +
mov eax 0F003Fh +
cmovz ecx eax +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_405A8A  +
mov eax [edi] +
lea esi [esp+1Ch+hKey] +
push esi  +
push ecx  +
push 0  +
push eax  +
push edx  +
call ds:RegOpenKeyExW  +
mov ecx eax +
lea esi [ebx+4] +
test ecx ecx +
jnz loc_405B89  +
mov ecx [esp+1Ch+hKey] +
lea eax [ebx+0D0h] +
push eax  +
lea eax [ebx+0B8h] +
lea edi [ebx+98h] +
push eax  +
mov edx edi +
call loc_403580  +
add esp 8 +
mov [esp+1Ch+lpValueName] 0 +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_405ADB  +
mov ecx [edi] +
mov edx [edi+10h] +
push 7  +
push offset aDefault  +
call loc_406B60  +
add esp 8 +
test eax eax +
jz loc_405B01  +
cmp dword ptr [edi+14h] 8 +
mov [esp+1Ch+lpValueName] edi +
jb loc_405B01  +
mov eax [edi] +
mov [esp+1Ch+lpValueName] eax +
push [esp+1Ch+lpValueName]  +
push [esp+20h+hKey]  +
call ds:RegDeleteValueW  +
mov ecx eax +
test ecx ecx +
jnz loc_405B4A  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_405B1F  +
mov eax [esi] +
push offset aDeletingRegi_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 18h +
push [esp+1Ch+hKey]  +
call ds:RegCloseKey  +
jmp loc_405BBC  +
cmp dword ptr [ebx+0A8h] 0 +
jz loc_405B7D  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_405B5D  +
mov eax [esi] +
push ecx  +
push offset aCheckForRegi_4  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 0Ah  +
call loc_412B30  +
add esp 1Ch +
push [esp+1Ch+hKey]  +
call ds:RegCloseKey  +
jmp loc_405BBC  +
cmp dword ptr [edi+14h] 8 +
jb loc_405B91  +
mov edi [edi] +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_405B9B  +
mov eax [esi] +
push ecx  +
push edi  +
push offset aCheckForRegi_5  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 0Ah  +
call loc_412B30  +
add esp 20h +
cmp dword ptr [esi+14h] 8 +
jb loc_405BC4  +
mov esi [esi] +
push offset aDeletingRegi_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push esi  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
mov ecx [esp+34h+var_8] +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44EBAB  +
mov eax large fs:0 +
push eax  +
sub esp 11Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
cmp dword ptr [edi+18h] 8 +
lea esi [edi+4] +
mov eax esi +
jb loc_405C3C  +
mov eax [esi] +
push offset aRollingBackDel  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push eax  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 18h +
cmp dword ptr [edi+0C8h] 0 +
jz loc_405CBC  +
movzx eax byte ptr [edi+0B0h] +
push ecx  +
push eax  +
lea eax [edi+0D0h] +
push eax  +
lea eax [edi+0B8h] +
push eax  +
lea eax [edi+98h] +
push eax  +
lea eax [edi+80h] +
push eax  +
lea eax [edi+68h] +
push eax  +
lea ecx [ebp+var_128] +
call loc_403EB0  +
lea ecx [ebp+var_128] +
mov [ebp+var_4] 0 +
call loc_404D90  +
lea ecx [ebp+var_128] +
mov [ebp+var_4] 0FFFFFFFFh +
call loc_404080  +
cmp dword ptr [esi+14h] 8 +
jb loc_405CC4  +
mov esi [esi] +
push offset aRollingBackD_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push esi  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_405D46  +
mov ecx [esi+8] +
sub ecx eax +
cmp ecx 1000h +
jb loc_405D28  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_405D48  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
mov dword ptr [esi] 0 +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
call sub_432491  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EBF0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-1Ch] edi +
mov ebx [ebp+8] +
lea eax [ebp-28h] +
push ebx  +
push eax  +
mov [ebp-18h] ebx +
call sub_407190  +
mov esi [ebp-20h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_405DC2  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_405DA2  +
mov edx [esi+10h] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_405DAC  +
mov ecx [ebx] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [ebx+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_405E38  +
cmp dword ptr [edi+4] 5D1745Dh +
jz loc_405E4F  +
mov ebx [edi] +
mov [ebp-14h] edi +
mov dword ptr [ebp-4] 0 +
push 2Ch  +
mov dword ptr [ebp-10h] 0 +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-10h] edi +
push dword ptr [ebp-18h]  +
lea ecx [edi+10h] +
mov dword ptr [ebp-4] 1 +
call sub_406290  +
mov dword ptr [edi+28h] 0 +
lea ecx [ebp-14h] +
mov [edi] ebx +
mov [edi+4] ebx +
mov [edi+8] ebx +
mov word ptr [edi+0Ch] 0 +
mov dword ptr [ebp-10h] 0 +
call sub_406CC0  +
mov ecx [ebp-1Ch] +
push edi  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-28h]  +
call sub_406D40  +
mov esi eax +
lea eax [esi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_402990  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EC18  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebx+8] +
lea eax [ebp-28h] +
push esi  +
push eax  +
mov ecx offset dword_470714 +
mov [ebp-14h] esi +
call sub_407190  +
mov edi [ebp-20h] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_405EE9  +
cmp dword ptr [edi+24h] 8 +
lea edx [edi+10h] +
jb loc_405EC5  +
mov edx [edi+10h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_405ECF  +
mov ecx [esi] +
push dword ptr [edi+20h]  +
push edx  +
mov edx [esi+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_405F82  +
cmp dword_470718 5D1745Dh +
jz loc_405F9B  +
mov edi dword_470714 +
mov dword ptr [ebp-1Ch] offset dword_470714 +
mov dword ptr [ebp-4] 0 +
push 2Ch  +
mov dword ptr [ebp-18h] 0 +
call sub_42C7DB  +
mov esi eax +
xor ecx ecx +
mov eax [ebp-14h] +
add esp 4 +
mov [ebp-18h] ecx +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi+10h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [esi+20h] xmm0 +
mov [eax] cx +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [esi+28h] ecx +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] cx +
lea ecx [ebp-1Ch] +
call sub_406CC0  +
push esi  +
push dword ptr [ebp-24h]  +
mov ecx offset dword_470714 +
push dword ptr [ebp-28h]  +
call sub_406D40  +
mov edi eax +
lea eax [edi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call loc_402990  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EC18  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebx+8] +
lea eax [ebp-28h] +
push esi  +
push eax  +
mov ecx offset dword_4706F8 +
mov [ebp-14h] esi +
call sub_407190  +
mov edi [ebp-20h] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_406039  +
cmp dword ptr [edi+24h] 8 +
lea edx [edi+10h] +
jb loc_406015  +
mov edx [edi+10h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40601F  +
mov ecx [esi] +
push dword ptr [edi+20h]  +
push edx  +
mov edx [esi+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_4060D2  +
cmp dword_4706FC 5D1745Dh +
jz loc_4060EB  +
mov edi dword_4706F8 +
mov dword ptr [ebp-1Ch] offset dword_4706F8 +
mov dword ptr [ebp-4] 0 +
push 2Ch  +
mov dword ptr [ebp-18h] 0 +
call sub_42C7DB  +
mov esi eax +
xor ecx ecx +
mov eax [ebp-14h] +
add esp 4 +
mov [ebp-18h] ecx +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi+10h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [esi+20h] xmm0 +
mov [eax] cx +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [esi+28h] ecx +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] cx +
lea ecx [ebp-1Ch] +
call sub_406CC0  +
push esi  +
push dword ptr [ebp-24h]  +
mov ecx offset dword_4706F8 +
push dword ptr [ebp-28h]  +
call sub_406D40  +
mov edi eax +
lea eax [edi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call loc_402990  +
adc eax offset off_4522C0 +
call esi  +
pop esi  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_40618D  +
mov edx [edi+4] +
push esi  +
push ecx  +
call loc_406C50  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
mov esi [edi] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40616E  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_40618F  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop esi  +
pop edi  +
retn   +
call sub_432491  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp esi edi +
jz loc_406273  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_406243  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_406239  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40627B  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
mov [edi+10h] eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_432491  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp+var_4] eax +
jb loc_4062B8  +
mov edi [edi] +
cmp eax 8 +
jnb loc_4062D9  +
movups xmm0 oword ptr [edi] +
mov ebx 7 +
pop edi  +
movups oword ptr [esi] xmm0 +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx eax +
mov eax 7FFFFFFEh +
or ebx 7 +
cmp ebx eax +
cmova ebx eax +
lea eax [ebx+1] +
push eax  +
call loc_406770  +
mov ecx eax +
mov eax [ebp+var_4] +
mov [esi] ecx +
lea eax ds:2[eax*2] +
push eax  +
push edi  +
push ecx  +
call loc_42DC40  +
mov eax [ebp+var_4] +
add esp 0Ch +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
mov ebx [esi+10h] +
mov [ebp-8] ecx +
cmp ebx ecx +
jnb loc_40635B  +
lea eax [ebx+1] +
mov [esi+10h] eax +
cmp ecx 8 +
jb loc_406344  +
mov esi [esi] +
mov ax [ebp+8] +
mov [esi+ebx*2] ax +
xor eax eax +
mov [esi+ebx*2+2] ax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx 7FFFFFFEh +
mov eax edx +
sub eax ebx +
cmp eax 1 +
jb loc_406442  +
push edi  +
lea edi [ebx+1] +
or edi 7 +
cmp edi edx +
jbe loc_40637C  +
mov edi edx +
jmp loc_406394  +
mov eax ecx +
shr eax 1 +
sub edx eax +
cmp ecx edx +
jbe loc_40638D  +
mov edi 7FFFFFFEh +
jmp loc_406394  +
add eax ecx +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_406770  +
lea ecx [ebx+1] +
mov [esi+14h] edi +
mov [esi+10h] ecx +
lea ecx [ebx+ebx] +
mov ebx [ebp-8] +
mov [ebp-4] eax +
lea edi [ecx+eax] +
mov [ebp-0Ch] edi +
push ecx  +
cmp ebx 8 +
jb loc_40641D  +
mov edi [esi] +
push edi  +
push eax  +
call loc_42DC40  +
mov ecx [ebp-0Ch] +
lea ebx ds:2[ebx*2] +
mov ax [ebp+8] +
add esp 0Ch +
mov [ecx] ax +
xor eax eax +
mov [ecx+2] ax +
cmp ebx 1000h +
jb loc_406405  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_406447  +
mov edi ecx +
push ebx  +
push edi  +
call sub_42CA5C  +
mov eax [ebp-4] +
add esp 8 +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push eax  +
call loc_42DC40  +
mov ax [ebp+8] +
add esp 0Ch +
mov [edi] ax +
xor eax eax +
mov [edi+2] ax +
mov eax [ebp-4] +
pop edi  +
mov [esi] eax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_406FE0  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-0Ch] edx +
mov [ebp-8] eax +
mov ebx [edi+14h] +
cmp eax ebx +
ja loc_4064A0  +
mov [ebp-4] edi +
cmp ebx 8 +
jb loc_40647B  +
mov ecx [edi] +
mov [ebp-4] ecx +
lea esi [eax+eax] +
mov [edi+10h] eax +
push esi  +
push edx  +
push ecx  +
call loc_42E1C0  +
mov eax [ebp-4] +
add esp 0Ch +
xor ecx ecx +
mov [esi+eax] cx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp eax 7FFFFFFEh +
ja loc_40655F  +
mov esi eax +
or esi 7 +
cmp esi 7FFFFFFEh +
jbe loc_4064BF  +
mov esi 7FFFFFFEh +
jmp loc_4064DD  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_4064D5  +
mov esi 7FFFFFFEh +
jmp loc_4064DD  +
lea eax [ecx+ebx] +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx edi +
call loc_406770  +
mov ecx [ebp-8] +
mov [edi+14h] esi +
mov [ebp-4] eax +
mov [edi+10h] ecx +
lea esi [ecx+ecx] +
push esi  +
push dword ptr [ebp-0Ch]  +
push eax  +
call loc_42DC40  +
mov eax [ebp-4] +
xor ecx ecx +
add esp 0Ch +
mov [esi+eax] cx +
cmp ebx 8 +
jb loc_40654D  +
mov eax [edi] +
lea ebx ds:2[ebx*2] +
cmp ebx 1000h +
jb loc_406540  +
mov ecx [eax-4] +
add ebx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40655A  +
mov eax ecx +
push ebx  +
push eax  +
call sub_42CA5C  +
mov eax [ebp-4] +
add esp 8 +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406FE0  +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-14h] eax +
mov ecx [ebp+0Ch] +
push edi  +
mov [ebp-8] ecx +
mov ebx [esi+14h] +
mov eax ebx +
mov edx [esi+10h] +
sub eax edx +
mov [ebp-4] edx +
cmp ecx eax +
ja loc_4065D0  +
lea eax [ecx+edx] +
mov edi esi +
mov [ebp-10h] eax +
mov [esi+10h] eax +
cmp ebx 8 +
jb loc_4065AA  +
mov edi [esi] +
add ecx ecx +
push ecx  +
push dword ptr [ebp-14h]  +
lea ecx [edi+edx*2] +
push ecx  +
call loc_42E1C0  +
mov eax [ebp-10h] +
add esp 0Ch +
xor ecx ecx +
mov [edi+eax*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax 7FFFFFFEh +
sub eax edx +
cmp eax ecx +
jb loc_4066F3  +
lea eax [ecx+edx] +
mov edi eax +
mov [ebp-0Ch] eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_4065F9  +
mov edi 7FFFFFFEh +
jmp loc_406617  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_40660F  +
mov edi 7FFFFFFEh +
jmp loc_406617  +
lea eax [ecx+ebx] +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_406770  +
mov ecx [ebp-8] +
mov edx [ebp-4] +
mov [ebp-10h] eax +
mov eax [ebp-0Ch] +
mov [esi+10h] eax +
lea eax [ecx+ecx] +
mov [ebp-8] eax +
mov eax [ebp-10h] +
mov [esi+14h] edi +
lea edi [edx+edx] +
lea edx [edi+eax] +
mov [ebp-0Ch] edx +
mov edx [ebp-4] +
add ecx edx +
lea ecx [eax+ecx*2] +
mov [ebp-4] ecx +
cmp ebx 8 +
jb loc_4066C2  +
mov edi [esi] +
lea ecx [edx+edx] +
push ecx  +
push edi  +
push eax  +
call loc_42DC40  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-0Ch]  +
call loc_42DC40  +
mov eax [ebp-4] +
lea ebx ds:2[ebx*2] +
xor ecx ecx +
add esp 18h +
mov [eax] cx +
cmp ebx 1000h +
jb loc_4066A8  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_4066F8  +
mov edi ecx +
push ebx  +
push edi  +
call sub_42CA5C  +
mov eax [ebp-10h] +
add esp 8 +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push eax  +
call loc_42DC40  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-0Ch]  +
call loc_42DC40  +
mov eax [ebp-4] +
add esp 18h +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp-10h] +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_406FE0  +
call sub_432491  +
mov edx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_406C50  +
add esp 4 +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
lea edx [eax+eax*2] +
shl edx 3 +
cmp edx 1000h +
jb loc_40674B  +
push esi  +
mov esi [ecx-4] +
add edx 23h +
sub ecx esi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_406759  +
mov ecx esi +
pop esi  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
pop ebp  +
retn 8  +
***
call sub_432491  +
push offset aInvalidStringP  +
call sub_42AB4A  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_4067C0  +
add eax eax +
cmp eax 1000h +
jb loc_4067A9  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4067C0  +
push ecx  +
call sub_42C7DB  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_4067C5  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_4067BA  +
push eax  +
call sub_42C7DB  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_4028F0  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44EC59  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp-18h] esi +
mov dword ptr [ebp-10h] 0 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov [ebp-4] eax +
mov eax ebx +
mov dword ptr [ebp-10h] 1 +
lea edx [eax+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_406860  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push ebx  +
mov ecx esi +
call loc_406570  +
cmp dword ptr [edi+14h] 8 +
jb loc_406880  +
mov edi [edi] +
mov eax [ebp-14h] +
mov ecx esi +
push dword ptr [eax]  +
push edi  +
call loc_406570  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push ebx  +
mov ebx ecx +
mov [ebp-8] eax +
push esi  +
push edi  +
mov ecx [ebx] +
sub eax ecx +
mov [ebp-4] eax +
mov eax [ebx+4] +
sub eax ecx +
cmp eax 7FFFFFFFh +
jz loc_4069DB  +
mov edx [ebx+8] +
lea esi [eax+1] +
sub edx ecx +
mov [ebp-0Ch] esi +
mov ecx edx +
mov eax 7FFFFFFFh +
shr ecx 1 +
sub eax ecx +
cmp edx eax +
jbe loc_4068F6  +
mov edi esi +
jmp loc_4068FE  +
lea edi [ecx+edx] +
cmp edi esi +
cmovb edi esi +
cmp edi 1000h +
jb loc_40692D  +
lea eax [edi+23h] +
cmp eax edi +
jbe loc_4069E0  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_4069D6  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_406940  +
test edi edi +
jz loc_40693E  +
push edi  +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_406940  +
xor esi esi +
mov ecx [ebp-4] +
mov eax [ebp+0Ch] +
add ecx esi +
mov edx [ebp-8] +
mov [ebp-4] ecx +
mov al [eax] +
mov [ecx] al +
mov eax [ebx+4] +
mov ecx [ebx] +
cmp edx eax +
jnz loc_40696A  +
sub eax ecx +
push eax  +
push ecx  +
push esi  +
call loc_42E1C0  +
add esp 0Ch +
jmp loc_40698B  +
sub edx ecx +
push edx  +
push ecx  +
push esi  +
call loc_42E1C0  +
mov eax [ebx+4] +
mov ecx [ebp-8] +
sub eax ecx +
push eax  +
mov eax [ebp-4] +
push ecx  +
inc eax  +
push eax  +
call loc_42E1C0  +
add esp 18h +
mov eax [ebx] +
test eax eax +
jz loc_4069BA  +
mov ecx [ebx+8] +
sub ecx eax +
cmp ecx 1000h +
jb loc_4069B0  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4069D6  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov eax [ebp-4] +
add ecx esi +
mov [ebx] esi +
mov [ebx+4] ecx +
lea ecx [esi+edi] +
pop edi  +
pop esi  +
mov [ebx+8] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406D30  +
call loc_4028F0  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov edx [ebp+8] +
mov eax 2AAAAAABh +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp-4] esi +
mov edi [esi] +
sub edx edi +
mov ecx [esi+4] +
imul  edx +
sub ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-8] eax +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-0Ch] eax +
cmp eax 0AAAAAAAh +
jz loc_406B50  +
mov ecx [esi+8] +
lea ebx [eax+1] +
sub ecx edi +
mov eax 2AAAAAABh +
imul  ecx +
mov eax 0AAAAAAAh +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_406A69  +
mov edi ebx +
jmp loc_406A71  +
lea edi [edx+ecx] +
cmp edi ebx +
cmovb edi ebx +
cmp edi 0AAAAAAAh +
ja loc_406B4B  +
lea eax [edi+edi*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_406AB1  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_406B4B  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_406B55  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_406AC4  +
test eax eax +
jz loc_406AC2  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_406AC4  +
xor esi esi +
mov eax [ebp-8] +
xor ecx ecx +
lea eax [eax+eax*2] +
lea ebx [esi+eax*8] +
mov eax [ebp+0Ch] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebx] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebx+10h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov eax [ebp-4] +
mov edx [eax+4] +
mov ecx [eax] +
mov eax [ebp+8] +
push ecx  +
push esi  +
cmp eax edx +
jz loc_406B29  +
mov edx eax +
call sub_4073F0  +
mov edx [ebp-4] +
lea eax [ebx+18h] +
mov ecx [ebp+8] +
add esp 4 +
mov edx [edx+4] +
push eax  +
call sub_4073F0  +
mov eax [ebp-0Ch] +
add esp 8 +
mov ecx [ebp-4] +
inc eax  +
push edi  +
push eax  +
push esi  +
call loc_406F50  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_4028F0  +
call loc_406D30  +
call sub_432491  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov ebx edx +
mov edi ecx +
mov ecx [ebp+0Ch] +
mov esi ebx +
cmp ecx ebx +
cmovb esi ecx +
test esi esi +
jz loc_406B97  +
sub edi eax +
movzx ecx word ptr [edi+eax] +
movzx edx word ptr [eax] +
cmp cx dx +
jnz loc_406BA3  +
add eax 2 +
sub esi 1 +
jnz loc_406B80  +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jbe loc_406BAE  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn   +
***
sbb eax eax +
pop edi  +
and eax 0FFFFFFFEh +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn   +
***
pop edi  +
sbb eax eax +
pop esi  +
neg eax  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi ecx +
mov [ebp-8] esi +
push edi  +
cmp ebx edx +
ja loc_406C0D  +
mov eax [ebp+8] +
sub edx ebx +
cmp eax edx +
ja loc_406C0D  +
test ebx ebx +
jz loc_406C10  +
lea ecx [edx+1] +
lea ecx [esi+ecx*2] +
mov [ebp-4] ecx +
lea eax [esi+eax*2] +
nop   +
sub ecx eax +
sar ecx 1 +
jz loc_406C0D  +
mov edx [ebp+0Ch] +
movzx edx word ptr [edx] +
cmp [eax] dx +
jz loc_406C17  +
add eax 2 +
sub ecx 1 +
jnz loc_406C00  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+0Ch] +
mov esi ebx +
mov edx ecx +
test ebx ebx +
jz loc_406C37  +
mov edi eax +
sub edi ecx +
mov cx [edi+edx] +
cmp cx [edx] +
jnz loc_406C43  +
add edx 2 +
sub esi 1 +
jnz loc_406C26  +
sub eax [ebp-8] +
pop edi  +
pop esi  +
sar eax 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp-4] +
add eax 2 +
jmp loc_406BF0  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_406CAF  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_406C95  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_406C8B  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406CB3  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
add esi 18h +
cmp esi edi +
jnz loc_406C60  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call sub_432491  +
mov edi ecx +
mov esi [edi+4] +
test esi esi +
jz loc_406D15  +
mov ecx [esi+24h] +
cmp ecx 8 +
jb loc_406D01  +
mov eax [esi+10h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_406CF7  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_406D2A  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 7 +
mov [esi+10h] ax +
mov eax [edi+4] +
pop edi  +
pop esi  +
test eax eax +
jz locret_406D29  +
push 2Ch  +
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
call sub_432491  +
int 3  +
***
push offset aVectorTTooLong  +
call sub_42AB2A  +
sub esp 8 +
mov edx [ebp+arg_0] +
mov eax ecx +
mov [ebp+var_4] eax +
mov ecx [eax] +
inc dword ptr [eax+4]  +
mov eax [ebp+arg_8] +
mov [ebp+var_8] ecx +
mov [eax+4] edx +
cmp edx ecx +
jnz loc_406D72  +
mov [ecx] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov byte ptr [eax+0Ch] 1 +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp [ebp+arg_4] 0 +
jnz loc_406D85  +
mov [edx+8] eax +
cmp edx [ecx+8] +
jnz loc_406D8D  +
mov [ecx+8] eax +
jmp loc_406D8D  +
mov [edx] eax +
cmp edx [ecx] +
jnz loc_406D8D  +
mov [ecx] eax +
mov edx eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_406F35  +
push ebx  +
push esi  +
push edi  +
nop   +
mov ecx [edx+4] +
lea edi [edx+4] +
mov esi [ecx+4] +
lea ebx [ecx+4] +
mov eax [esi] +
cmp ecx eax +
jnz loc_406E70  +
mov eax [esi+8] +
cmp byte ptr [eax+0Ch] 0 +
jz loc_406E76  +
mov esi [ecx+8] +
cmp edx esi +
jnz loc_406E11  +
mov eax [esi] +
mov edx ecx +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406DDC  +
mov [eax+4] edx +
mov eax [ebx] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_406DF6  +
mov [eax+4] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_406E13  +
mov eax [ebx] +
cmp edx [eax] +
jnz loc_406E06  +
mov [eax] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_406E13  +
mov [eax+8] esi +
mov edi ebx +
mov [esi] edx +
mov [ebx] esi +
jmp loc_406E13  +
mov esi ecx +
mov byte ptr [esi+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov ecx [eax+4] +
mov esi [ecx] +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406E38  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_406E53  +
mov [eax+4] esi +
mov [esi+8] ecx +
jmp loc_406F1F  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_406E66  +
mov [eax+8] esi +
mov [esi+8] ecx +
jmp loc_406F1F  +
mov [eax] esi +
mov [esi+8] ecx +
jmp loc_406F1F  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_406E91  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [eax+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov edx [eax+4] +
jmp loc_406F22  +
mov eax [ecx] +
cmp edx eax +
jnz loc_406ED5  +
mov edx ecx +
mov ecx eax +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406EAC  +
mov [eax+4] edx +
mov eax [ebx] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_406EC0  +
mov [eax+4] ecx +
jmp loc_406ECE  +
mov eax [ebx] +
cmp edx [eax+8] +
jnz loc_406ECC  +
mov [eax+8] ecx +
jmp loc_406ECE  +
mov [eax] ecx +
mov [ecx+8] edx +
mov edi ebx +
mov [ebx] ecx +
mov byte ptr [ecx+0Ch] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 0 +
mov eax [edi] +
mov ecx [eax+4] +
mov esi [ecx+8] +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406EFA  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_406F0F  +
mov [eax+4] esi +
jmp loc_406F1D  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_406F1A  +
mov [eax] esi +
jmp loc_406F1D  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov eax [edx+4] +
cmp byte ptr [eax+0Ch] 0 +
jz loc_406DA0  +
mov ecx [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ecx+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+arg_8] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_406FAC  +
mov edx [edi+4] +
push esi  +
push ecx  +
call loc_406C50  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
mov esi [edi] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
shl ecx 3 +
cmp ecx 1000h +
jb loc_406FA1  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_406FCE  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
pop esi  +
mov ecx [ebp+8] +
mov eax [ebp+0Ch] +
mov [edi] ecx +
lea eax [eax+eax*2] +
lea eax [ecx+eax*8] +
mov [edi+4] eax +
mov eax [ebp+10h] +
lea eax [eax+eax*2] +
lea eax [ecx+eax*8] +
mov [edi+8] eax +
pop edi  +
pop ebp  +
retn 0Ch  +
***
call sub_432491  +
push offset aStringTooLong  +
call sub_42AB2A  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov edx [esi+10h] +
mov [ebp-8] edx +
cmp edx edi +
ja loc_407156  +
push ebx  +
mov ebx [esi+14h] +
cmp ebx edi +
jz loc_407155  +
jnb loc_407102  +
mov ecx edi +
mov eax 7FFFFFFEh +
sub ecx edx +
sub eax edx +
cmp eax ecx +
jb loc_407163  +
mov edx edi +
or edx 7 +
cmp edx 7FFFFFFEh +
jbe loc_407044  +
mov edx 7FFFFFFEh +
jmp loc_407062  +
mov ecx ebx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp ebx eax +
jbe loc_40705A  +
mov edx 7FFFFFFEh +
jmp loc_407062  +
lea eax [ecx+ebx] +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx esi +
call loc_406770  +
mov ecx [ebp-4] +
mov [esi+14h] ecx +
mov ecx [ebp-8] +
mov [ebp-0Ch] eax +
mov [esi+10h] edi +
lea ecx ds:2[ecx*2] +
push ecx  +
cmp ebx 8 +
jb loc_4070E4  +
mov edi [esi] +
push edi  +
push eax  +
call loc_42DC40  +
lea ebx ds:2[ebx*2] +
add esp 0Ch +
cmp ebx 1000h +
jb loc_4070C6  +
mov ecx [edi-4] +
add ebx 23h +
sub edi ecx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40715E  +
mov edi ecx +
push ebx  +
push edi  +
call sub_42CA5C  +
mov eax [ebp-0Ch] +
add esp 8 +
mov [esi] eax +
mov eax [ebp-8] +
mov [esi+10h] eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push eax  +
call loc_42DC40  +
mov eax [ebp-0Ch] +
add esp 0Ch +
mov [esi] eax +
mov eax [ebp-8] +
mov [esi+10h] eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp edi 8 +
jnb loc_407155  +
cmp ebx 8 +
jb loc_407155  +
mov edi [esi] +
lea eax ds:2[edx*2] +
push eax  +
push edi  +
push esi  +
call loc_42DC40  +
mov eax [esi+14h] +
add esp 0Ch +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_407144  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_40715E  +
mov edi edx +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+14h] 7 +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call loc_406FE0  +
mov eax [ecx] +
sub esp 8 +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [esi+0Dh] 0 +
mov [edi] esi +
mov dword ptr [edi+4] 0 +
mov [edi+8] eax +
jnz loc_40720A  +
push ebx  +
mov ebx [ebp+arg_4] +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
mov [edi] esi +
mov eax ebx +
cmp ecx 8 +
jb loc_4071CD  +
mov eax [ebx] +
cmp dword ptr [esi+24h] 8 +
lea ecx [esi+10h] +
jb loc_4071D9  +
mov ecx [esi+10h] +
push [ebp+var_4]  +
mov edx [esi+20h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_4071F3  +
mov esi [esi+8] +
xor eax eax +
jmp loc_4071FD  +
mov [edi+8] esi +
mov eax 1 +
mov esi [esi] +
mov ecx [ebp+var_8] +
mov [edi+4] eax +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4071C2  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx ecx +
mov [ebp-4] eax +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4072A8  +
push esi  +
push dword ptr [edi+8]  +
mov ecx ebx +
push eax  +
call loc_407220  +
mov esi edi +
mov edi [edi] +
mov ecx [esi+24h] +
cmp ecx 8 +
jb loc_40727D  +
mov eax [esi+10h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_407273  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4072B0  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+20h] 0 +
push 2Ch  +
push esi  +
mov dword ptr [esi+24h] 7 +
mov [esi+10h] ax +
call sub_42CA5C  +
add esp 8 +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4072A7  +
mov eax [ebp-4] +
jmp loc_407238  +
***
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
mov ecx dword_470708 +
mov eax 2AAAAAABh +
sub ecx dword_470704 +
imul  ecx +
mov ecx dword_47070C +
mov eax 2AAAAAABh +
sub ecx dword_470704 +
sar edx 2 +
push ebx  +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
imul  ecx +
mov eax 0AAAAAAAh +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx ecx +
shr edx 1 +
sub eax edx +
push esi  +
push edi  +
cmp ecx eax +
jbe loc_407313  +
mov edi 0Ch +
jmp loc_40732E  +
lea edi [edx+ecx] +
cmp edi 0Ch +
jnb loc_407322  +
mov edi 0Ch +
jmp loc_40732E  +
cmp edi 0AAAAAAAh +
ja loc_4073DC  +
lea eax [edi+edi*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_407362  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4073DC  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_4073E1  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_407375  +
test eax eax +
jz loc_407373  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_407375  +
xor esi esi +
lea eax [ebx+ebx*2] +
lea ecx [esi+eax*8] +
mov eax 0Ch +
sub eax ebx +
jz loc_4073AB  +
xor edx edx +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] dx +
add ecx 18h +
sub eax 1 +
jnz loc_407390  +
push ecx  +
mov edx ecx +
call loc_406C50  +
mov edx dword_470708 +
mov ecx dword_470704 +
push esi  +
call sub_4073F0  +
add esp 8 +
mov ecx offset dword_470704 +
push edi  +
push 0Ch  +
push esi  +
call loc_406F50  +
pop edi  +
pop esi  +
pop ebx  +
retn 8  +
***
call loc_4028F0  +
call sub_432491  +
push esi  +
mov esi [ebp+arg_0] +
cmp ecx edx +
jz loc_40743D  +
mov eax esi +
sub eax ecx +
push edi  +
mov dword ptr [esi+10h] 0 +
xor edi edi +
mov dword ptr [eax+ecx+14h] 0 +
movups xmm0 oword ptr [ecx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ecx+10h] +
movq qword ptr [esi+10h] xmm0 +
add esi 18h +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] di +
add ecx 18h +
cmp ecx edx +
jnz loc_407400  +
pop edi  +
push ecx  +
mov edx esi +
mov ecx esi +
call loc_406C50  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_0]  +
push edx  +
push ecx  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4357A9  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_C] +
mov edx [ebp+arg_4] +
push eax  +
push ecx  +
push [ebp+arg_8]  +
call sub_407460  +
add esp 0Ch +
pop ecx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_10] +
push ecx  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_43573A  +
or ecx 0FFFFFFFFh +
add esp 20h +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_452C04 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_42D6A4  +
mov ecx [ebp+var_4] +
add esp 8 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_452C04 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_42D6A4  +
mov ecx [ebp+var_4] +
add esp 8 +
mov dword ptr [esi] offset off_452C50 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov dword ptr [esi] offset off_452C50 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44ECA0  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-58h] ecx +
mov ebx [ebp+8] +
xorps xmm0 xmm0 +
mov [ebp-64h] ebx +
mov edx ecx +
cmp dword ptr [ecx+14h] 8 +
movq qword ptr [ebp-20h] xmm0 +
mov dword ptr [ebp-18h] 0 +
jb loc_40762D  +
mov edx [ecx] +
mov eax [ecx+10h] +
mov [ebp-54h] ecx +
lea edx [edx+eax*2] +
mov eax ecx +
jb loc_40763F  +
mov eax [ecx] +
mov [ebp-54h] eax +
sub edx eax +
xor edi edi +
mov ecx edx +
mov [ebp-20h] edi +
xor esi esi +
sar ecx 1 +
xor eax eax +
mov [ebp-1Ch] edi +
mov [ebp-18h] esi +
mov [ebp-60h] edx +
mov [ebp-5Ch] ecx +
cmp edx 2 +
jb loc_407696  +
cmp ecx 7FFFFFFFh +
ja loc_4078CD  +
push ecx  +
lea ecx [ebp-20h] +
call loc_406770  +
push dword ptr [ebp-60h]  +
mov edi eax +
mov eax [ebp-5Ch] +
push dword ptr [ebp-54h]  +
mov [ebp-20h] edi +
push edi  +
lea esi [edi+eax*2] +
mov [ebp-18h] esi +
call loc_42E1C0  +
add esp 0Ch +
mov [ebp-1Ch] esi +
mov eax esi +
push offset unk_45FC6C  +
push eax  +
lea ecx [ebp-20h] +
mov dword ptr [ebp-4] 0 +
call loc_408310  +
mov edi [ebp-20h] +
mov esi [ebp-18h] +
push edi  +
call ds:PathStripPathW  +
mov ecx edi +
mov dword ptr [ebp-40h] 0 +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4076D1  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [ebp-50h] +
call loc_406450  +
mov eax [ebp-58h] +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-40h] +
push eax  +
cmp ecx [eax+10h] +
jz loc_407864  +
lea ecx [ebp-38h] +
call sub_406290  +
mov eax [ebp-58h] +
mov byte ptr [ebp-4] 2 +
mov ecx [eax+10h] +
sub ecx [ebp-40h] +
mov eax [ebp-28h] +
cmp ecx eax +
ja loc_407730  +
cmp dword ptr [ebp-24h] 8 +
lea eax [ebp-38h] +
mov [ebp-28h] ecx +
cmovnb eax [ebp-38h] +
xor edx edx +
mov [eax+ecx*2] dx +
jmp loc_40773D  +
sub ecx eax +
push 0  +
push ecx  +
lea ecx [ebp-38h] +
call loc_408020  +
lea eax [ebp-38h] +
mov ecx ebx +
push eax  +
call sub_406290  +
mov byte ptr [ebp-4] 3 +
mov eax [ebx+10h] +
cmp eax 1 +
jbe loc_40779F  +
mov edx [ebx+14h] +
mov ecx ebx +
cmp edx 8 +
jb loc_407760  +
mov ecx [ebx] +
cmp word ptr [ecx+eax*2-2] 2Fh +
jz loc_407779  +
mov ecx ebx +
cmp edx 8 +
jb loc_407771  +
mov ecx [ebx] +
cmp word ptr [ecx+eax*2-2] 5Ch +
jnz loc_40779F  +
lea ecx [eax-1] +
cmp ecx eax +
ja loc_407794  +
mov [ebx+10h] ecx +
mov eax ebx +
cmp edx 8 +
jb loc_40778C  +
mov eax [ebx] +
xor edx edx +
mov [eax+ecx*2] dx +
jmp loc_40779F  +
push 0  +
push 0FFFFFFFFh  +
mov ecx ebx +
call loc_408020  +
mov edx [ebp-24h] +
cmp edx 8 +
jb loc_4077D9  +
mov ecx [ebp-38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4077CF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4078C8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_407813  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407809  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4078C8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test edi edi +
jz loc_407844  +
sub esi edi +
mov eax edi +
and esi 0FFFFFFFEh +
cmp esi 1000h +
jb loc_40783A  +
mov edi [edi-4] +
add esi 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4078C8  +
push esi  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx ebx +
call sub_406290  +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_4078A1  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407897  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4078C8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test edi edi +
jz loc_407844  +
sub esi edi +
mov eax edi +
and esi 0FFFFFFFEh +
cmp esi 1000h +
jb loc_40783A  +
mov edi [edi-4] +
add esi 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
jbe loc_40783A  +
call sub_432491  +
call loc_406D30  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44ECE5+1)  +
mov eax large fs:0 +
push eax  +
sub esp 824h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-82Ch] esi +
push 3FFh  +
lea eax [ebp-810h] +
mov [ebp-830h] esi +
push eax  +
push dword_470280  +
call ds:GetModuleFileNameW  +
xor eax eax +
mov dword ptr [ebp-818h] 0 +
lea ecx [ebp-810h] +
mov dword ptr [ebp-814h] 7 +
mov [ebp-828h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407960  +
sub ecx edx +
lea eax [ebp-810h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-828h] +
call loc_406450  +
lea eax [ebp-828h] +
mov dword ptr [ebp-4] 0 +
push eax  +
mov ecx esi +
call sub_406290  +
mov byte ptr [ebp-4] 1 +
mov eax [esi+10h] +
cmp eax 1 +
jbe loc_4079EE  +
mov edx [esi+14h] +
mov ecx esi +
cmp edx 8 +
jb loc_4079AF  +
mov ecx [esi] +
cmp word ptr [ecx+eax*2-2] 2Fh +
jz loc_4079C8  +
mov ecx esi +
cmp edx 8 +
jb loc_4079C0  +
mov ecx [esi] +
cmp word ptr [ecx+eax*2-2] 5Ch +
jnz loc_4079EE  +
lea ecx [eax-1] +
cmp ecx eax +
ja loc_4079E3  +
mov [esi+10h] ecx +
mov eax esi +
cmp edx 8 +
jb loc_4079DB  +
mov eax [esi] +
xor edx edx +
mov [eax+ecx*2] dx +
jmp loc_4079EE  +
push 0  +
push 0FFFFFFFFh  +
mov ecx esi +
call loc_408020  +
mov edx [ebp-814h] +
cmp edx 8 +
jb loc_407A2A  +
mov ecx [ebp-828h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407A20  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407A46  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44ED48  +
mov eax large fs:0 +
push eax  +
sub esp 240h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-214h] esi +
mov dword ptr [ebp-4] 0 +
mov [ebp-24Ch] esi +
mov dword ptr [ebp-218h] 0 +
cmp edi 0FFFFFFFFh +
jnz loc_407AAB  +
call ds:GetLastError  +
mov edi eax +
push edi  +
push offset aErrorD  +
push 0FFFFFFFFh  +
lea eax [ebp-210h] +
push 100h  +
push eax  +
call sub_4074B0  +
add esp 14h +
mov dword ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
lea ecx [ebp-210h] +
mov [esi] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407AE3  +
sub ecx edx +
lea eax [ebp-210h] +
sar ecx 1 +
push ecx  +
push eax  +
mov ecx esi +
call loc_406450  +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-218h] 1 +
test edi edi +
jz loc_407BDB  +
push 0  +
push 0  +
lea eax [ebp-214h] +
mov dword ptr [ebp-214h] 0 +
push eax  +
push 0  +
push edi  +
push 0  +
push 1300h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_407BDB  +
mov edx [ebp-214h] +
test edx edx +
jz loc_407BDB  +
mov ecx edx +
lea edi [ecx+2] +
push 1  +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
push offset asc_462658  +
lea ecx [ebp-248h] +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-230h] +
push 1  +
xor eax eax +
mov dword ptr [ebp-220h] 0 +
push offset asc_46265C  +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
call loc_406450  +
lea eax [ebp-248h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea edx [ebp-230h] +
mov ecx esi +
call sub_4187B0  +
mov edx [ebp-21Ch] +
add esp 4 +
cmp edx 8 +
jb loc_407C97  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407C8D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407CF5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_407CD3  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_407CC9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407CF5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_406760  +
call sub_432491  +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_407D49  +
mov ecx [esi+8] +
sub ecx eax +
and ecx 0FFFFFFFEh +
cmp ecx 1000h +
jb loc_407D2B  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_407D4B  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
mov dword ptr [esi] 0 +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
call sub_432491  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [edi+14h] 10h +
mov eax [edi+10h] +
mov [ebp-4] eax +
jb loc_407DD8  +
mov edi [edi] +
cmp eax 10h +
jnb loc_407DF9  +
movups xmm0 oword ptr [edi] +
mov ebx 0Fh +
pop edi  +
movups oword ptr [esi] xmm0 +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ebx eax +
mov eax 7FFFFFFFh +
or ebx 0Fh +
cmp ebx eax +
cmova ebx eax +
lea eax [ebx+1] +
cmp eax 1000h +
jb loc_407E31  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_407E69  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_407E6E  +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
jmp loc_407E44  +
test eax eax +
jz loc_407E42  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov ecx eax +
jmp loc_407E44  +
xor ecx ecx +
mov eax [ebp-4] +
inc eax  +
mov [esi] ecx +
push eax  +
push edi  +
push ecx  +
call loc_42DC40  +
mov eax [ebp-4] +
add esp 0Ch +
mov [esi+10h] eax +
mov eax esi +
mov [esi+14h] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_4028F0  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov edx [ebp+10h] +
push ebx  +
mov ebx ecx +
mov [ebp-4] eax +
mov ecx [ebp+14h] +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebx+10h] +
mov [ebp-10h] edx +
mov [ebp-14h] ecx +
cmp edi eax +
jb loc_408010  +
mov eax edi +
sub eax [ebp-4] +
cmp eax esi +
cmovb esi eax +
mov [ebp-0Ch] esi +
cmp esi ecx +
jnz loc_407EE4  +
cmp dword ptr [ebx+14h] 8 +
mov esi ebx +
jb loc_407EC6  +
mov esi [ebx] +
mov eax [ebp-4] +
add ecx ecx +
push ecx  +
push edx  +
lea ecx [esi+eax*2] +
push ecx  +
call loc_42E1C0  +
add esp 0Ch +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax edi +
sub eax esi +
sub eax [ebp-4] +
mov [ebp-18h] eax +
mov eax ecx +
sub eax esi +
mov [ebp-8] eax +
cmp ecx esi +
jnb loc_407F42  +
add eax edi +
mov esi ebx +
mov [ebx+10h] eax +
cmp dword ptr [ebx+14h] 8 +
jb loc_407F08  +
mov esi [ebx] +
mov eax [ebp-4] +
lea edi [esi+eax*2] +
lea esi [ecx+ecx] +
push esi  +
push edx  +
push edi  +
call loc_42E1C0  +
mov eax [ebp-18h] +
lea eax ds:2[eax*2] +
push eax  +
mov eax [ebp-0Ch] +
lea eax [edi+eax*2] +
push eax  +
lea eax [esi+edi] +
push eax  +
call loc_42E1C0  +
add esp 18h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [ebx+14h] +
sub eax edi +
cmp [ebp-8] eax +
ja loc_407FF0  +
mov eax [ebp-8] +
add eax edi +
mov [ebp-0Ch] ebx +
cmp dword ptr [ebx+14h] 8 +
mov [ebx+10h] eax +
jb loc_407F66  +
mov eax [ebx] +
mov [ebp-0Ch] eax +
mov eax [ebp-4] +
mov edx [ebp-0Ch] +
lea eax [edx+eax*2] +
mov edx [ebp-10h] +
mov [ebp-4] eax +
lea esi [eax+esi*2] +
lea eax [edx+ecx*2] +
cmp eax [ebp-4] +
jbe loc_407F9A  +
mov eax [ebp-0Ch] +
lea eax [eax+edi*2] +
cmp edx eax +
ja loc_407F9A  +
cmp esi edx +
ja loc_407F92  +
xor edi edi +
jmp loc_407F9C  +
mov edi esi +
sub edi edx +
sar edi 1 +
jmp loc_407F9C  +
mov edi ecx +
mov eax [ebp-18h] +
lea eax ds:2[eax*2] +
push eax  +
mov eax [ebp-8] +
push esi  +
lea eax [esi+eax*2] +
push eax  +
call loc_42E1C0  +
lea esi [edi+edi] +
push esi  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-4]  +
call loc_42E1C0  +
mov eax [ebp-14h] +
mov ecx [ebp-10h] +
sub eax edi +
add eax eax +
push eax  +
mov eax [ebp-8] +
add eax edi +
lea eax [ecx+eax*2] +
push eax  +
mov eax [ebp-4] +
add eax esi +
push eax  +
call loc_42DC40  +
add esp 24h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
push edx  +
push esi  +
push dword ptr [ebp-4]  +
mov byte ptr [ebp-14h] 0 +
mov ecx ebx +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-8]  +
call loc_408420  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call loc_406760  +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov edx [esi+14h] +
mov eax edx +
mov ecx [esi+10h] +
sub eax ecx +
mov [ebp-0Ch] ecx +
mov [ebp-10h] edx +
cmp ebx eax +
ja loc_408090  +
mov [ebp-4] esi +
lea eax [ebx+ecx] +
mov [ebp-8] eax +
mov [esi+10h] eax +
mov eax esi +
cmp edx 8 +
jb loc_40805A  +
mov eax [esi] +
mov [ebp-4] eax +
lea edi [eax+ecx*2] +
test ebx ebx +
jz loc_40807C  +
mov eax [ebp+0Ch] +
mov ecx ebx +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov eax [ebp-4] +
mov ecx [ebp-8] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax 7FFFFFFEh +
sub eax ecx +
cmp eax ebx +
jb loc_4081C2  +
lea eax [ecx+ebx] +
mov edi eax +
mov [ebp-4] eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_4080B9  +
mov edi 7FFFFFFEh +
jmp loc_4080D7  +
mov ecx edx +
mov eax 7FFFFFFEh +
shr ecx 1 +
sub eax ecx +
cmp edx eax +
jbe loc_4080CF  +
mov edi 7FFFFFFEh +
jmp loc_4080D7  +
lea eax [ecx+edx] +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_406770  +
mov ecx [ebp-4] +
mov [esi+10h] ecx +
mov ecx [ebp-0Ch] +
add ecx ecx +
mov [esi+14h] edi +
cmp dword ptr [ebp-10h] 8 +
mov [ebp-8] eax +
push ecx  +
lea edi [ecx+eax] +
mov [ebp-0Ch] edi +
jb loc_408183  +
mov edi [esi] +
push edi  +
push eax  +
mov [ebp-14h] edi +
call loc_42DC40  +
add esp 0Ch +
test ebx ebx +
jz loc_40813C  +
mov eax [ebp+0Ch] +
mov ecx ebx +
mov edi [ebp-0Ch] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov edi [ebp-14h] +
mov eax [ebp-4] +
xor ecx ecx +
mov ebx [ebp-8] +
mov [ebx+eax*2] cx +
mov eax [ebp-10h] +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_40816C  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_4081C7  +
mov edi edx +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov [esi] ebx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push eax  +
call loc_42DC40  +
add esp 0Ch +
test ebx ebx +
jz loc_4081A9  +
mov eax [ebp+0Ch] +
mov ecx ebx +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov ebx [ebp-8] +
xor ecx ecx +
mov eax [ebp-4] +
pop edi  +
mov [ebx+eax*2] cx +
mov eax esi +
mov [esi] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_406FE0  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-8] eax +
push edi  +
mov edi [ebp+0Ch] +
mov ecx [esi+14h] +
mov [ebp-0Ch] ecx +
cmp edi ecx +
ja loc_408214  +
mov ebx esi +
cmp ecx 10h +
jb loc_4081F7  +
mov ebx [esi] +
push edi  +
push eax  +
push ebx  +
mov [esi+10h] edi +
call loc_42E1C0  +
add esp 0Ch +
mov byte ptr [edi+ebx] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp edi 7FFFFFFFh +
ja loc_4082FE  +
mov ebx edi +
or ebx 0Fh +
cmp ebx 7FFFFFFFh +
jbe loc_408234  +
mov ebx 7FFFFFFFh +
jmp loc_408252  +
mov edx ecx +
mov eax 7FFFFFFFh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_40824A  +
mov ebx 7FFFFFFFh +
jmp loc_408252  +
lea eax [edx+ecx] +
cmp ebx eax +
cmovb ebx eax +
xor ecx ecx +
mov eax ebx +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
cmp ecx 1000h +
jb loc_40828D  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_408303  +
push eax  +
call sub_42C7DB  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_4082F9  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
jmp loc_40829E  +
test ecx ecx +
jz loc_40829C  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
jmp loc_40829E  +
xor eax eax +
push edi  +
push dword ptr [ebp-8]  +
mov [ebp-4] eax +
push eax  +
mov [esi+10h] edi +
mov [esi+14h] ebx +
call loc_42DC40  +
mov ebx [ebp-4] +
add esp 0Ch +
mov eax [ebp-0Ch] +
mov byte ptr [edi+ebx] 0 +
cmp eax 10h +
jb loc_4082EC  +
lea ecx [eax+1] +
mov eax [esi] +
cmp ecx 1000h +
jb loc_4082E2  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4082F9  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
mov [esi] ebx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406FE0  +
call loc_4028F0  +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-0Ch] ebx +
push edi  +
mov edx [esi] +
sub ebx edx +
mov eax [esi+4] +
sub eax edx +
sar ebx 1 +
sar eax 1 +
cmp eax 7FFFFFFFh +
jz loc_408416  +
mov ecx [esi+8] +
lea edi [eax+1] +
sub ecx edx +
mov [ebp-10h] edi +
sar ecx 1 +
mov eax 7FFFFFFFh +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_40835C  +
mov eax edi +
mov [ebp-8] edi +
jmp loc_408367  +
lea eax [edx+ecx] +
cmp eax edi +
cmovb eax edi +
mov [ebp-8] eax +
push eax  +
mov ecx esi +
call loc_406770  +
mov ecx [ebp+0Ch] +
mov edi eax +
lea eax [edi+ebx*2] +
mov ebx [ebp-0Ch] +
mov [ebp-4] eax +
mov cx [ecx] +
mov [eax] cx +
mov eax [esi+4] +
mov ecx [esi] +
cmp ebx eax +
jnz loc_40839E  +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_42E1C0  +
mov ebx [ebp-4] +
add esp 0Ch +
jmp loc_4083C0  +
mov eax ebx +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_42E1C0  +
mov eax [esi+4] +
sub eax ebx +
push eax  +
push ebx  +
mov ebx [ebp-4] +
lea eax [ebx+2] +
push eax  +
call loc_42E1C0  +
add esp 18h +
mov eax [esi] +
test eax eax +
jz loc_4083F2  +
mov ecx [esi+8] +
sub ecx eax +
and ecx 0FFFFFFFEh +
cmp ecx 1000h +
jb loc_4083E8  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_408411  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-10h] +
mov eax ebx +
mov [esi] edi +
lea ecx [edi+ecx*2] +
mov [esi+4] ecx +
mov ecx [ebp-8] +
lea ecx [edi+ecx*2] +
pop edi  +
mov [esi+8] ecx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406D30  +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+18h] +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov [ebp-14h] eax +
mov ecx 7FFFFFFEh +
mov eax ecx +
mov edx [edi+10h] +
sub eax edx +
mov [ebp-4] edx +
cmp eax esi +
jb loc_408587  +
mov ebx [edi+14h] +
lea eax [edx+esi] +
mov esi eax +
mov [ebp-8] eax +
or esi 7 +
cmp esi ecx +
jbe loc_408461  +
mov esi ecx +
jmp loc_408479  +
mov eax ebx +
shr eax 1 +
sub ecx eax +
cmp ebx ecx +
jbe loc_408472  +
mov esi 7FFFFFFEh +
jmp loc_408479  +
add eax ebx +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx edi +
call loc_406770  +
mov ecx [ebp+1Ch] +
mov edx [ebp+10h] +
mov [ebp-0Ch] eax +
mov eax [ebp-8] +
mov [edi+10h] eax +
lea eax [ecx+ecx] +
mov [edi+14h] esi +
lea esi [edx+edx] +
mov [ebp-10h] eax +
mov eax [ebp-0Ch] +
add eax esi +
mov [ebp-20h] esi +
mov esi [ebp-4] +
sub esi edx +
mov [ebp-18h] eax +
mov eax [ebp+14h] +
sub esi eax +
lea esi ds:2[esi*2] +
mov [ebp-4] esi +
lea esi [edx+eax] +
lea eax [edx+ecx] +
add esi esi +
mov ecx [ebp-0Ch] +
mov [ebp-1Ch] esi +
lea eax [ecx+eax*2] +
mov [ebp-8] eax +
cmp ebx 8 +
jb loc_40854C  +
mov esi [edi] +
lea eax [edx+edx] +
push eax  +
push esi  +
push ecx  +
call loc_42DC40  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
call loc_42DC40  +
push dword ptr [ebp-4]  +
mov eax [ebp-1Ch] +
add eax esi +
push eax  +
push dword ptr [ebp-8]  +
call loc_42DC40  +
lea ecx ds:2[ebx*2] +
add esp 24h +
cmp ecx 1000h +
jb loc_408532  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_40858C  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
mov eax [ebp-0Ch] +
add esp 8 +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov eax [ebp-20h] +
push eax  +
push edi  +
push ecx  +
call loc_42DC40  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
call loc_42DC40  +
push dword ptr [ebp-4]  +
lea ecx [esi+edi] +
push ecx  +
push dword ptr [ebp-8]  +
call loc_42DC40  +
mov eax [ebp-0Ch] +
add esp 24h +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call loc_406FE0  +
call sub_432491  +
and esp 0FFFFFFF8h +
push [ebp+arg_4]  +
push 0  +
push edx  +
push ecx  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_435690  +
add esp 18h +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_4] +
push eax  +
push ecx  +
push 1  +
call sub_435A28  +
mov edx [ebp+arg_0] +
add esp 4 +
mov ecx eax +
call sub_4085A0  +
add esp 8 +
pop ecx  +
pop ebp  +
retn   +
***
push ecx  +
call loc_4087E0  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+2Ch] +
cmp ecx 8 +
jb loc_408649  +
mov eax [esi+18h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_40863F  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4086A7  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 7 +
mov [esi+18h] ax +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_408692  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_408688  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4086A7  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_432491  +
mov dword ptr [edi+8] 0 +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
mov ecx [ebp+8] +
push edi  +
mov [ebp-4] ecx +
mov eax [ebx] +
mov edi [eax+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_40882E  +
push esi  +
push 40h  +
push eax  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F0A0  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov edi [ebx] +
mov eax 2AAAAAABh +
mov edx [ebp+8] +
mov ecx [ebx+4] +
sub edx edi +
imul  edx +
sub ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-18h] eax +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-20h] eax +
cmp eax 0AAAAAAAh +
jz loc_4089C5  +
mov ecx [ebx+8] +
lea esi [eax+1] +
sub ecx edi +
mov eax 2AAAAAABh +
imul  ecx +
mov eax 0AAAAAAAh +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_4088EB  +
mov edi esi +
mov [ebp-1Ch] esi +
jmp loc_4088F6  +
lea edi [edx+ecx] +
cmp edi esi +
cmovb edi esi +
mov [ebp-1Ch] edi +
cmp edi 0AAAAAAAh +
ja loc_4089C0  +
lea eax [edi+edi*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_408936  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4089C0  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_4089CA  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_40894C  +
test eax eax +
jz loc_40894A  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov [ebp-14h] eax +
mov esi eax +
jmp loc_40894F  +
xor esi esi +
mov [ebp-14h] esi +
mov eax [ebp-18h] +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
lea eax [eax+eax*2] +
lea eax [esi+eax*8] +
lea ecx [eax+18h] +
mov [ebp-24h] eax +
mov [ebp-18h] ecx +
mov ecx eax +
call sub_406290  +
mov ecx [ebx] +
mov edx [ebx+4] +
mov eax [ebp+8] +
push ecx  +
push esi  +
cmp eax edx +
jz loc_408993  +
mov edx eax +
call sub_4073F0  +
mov edx [ebx+4] +
add esp 4 +
mov ecx [ebp+8] +
push dword ptr [ebp-18h]  +
call sub_4073F0  +
mov eax [ebp-20h] +
add esp 8 +
inc eax  +
mov ecx ebx +
push edi  +
push eax  +
push esi  +
call loc_406F50  +
mov eax [ebp-24h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_4028F0  +
call loc_406D30  +
call sub_432491  +
mov eax [ebp-18h] +
push eax  +
push eax  +
call sub_406700  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call loc_406720  +
push 0  +
push 0  +
call sub_42DBD3  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
mov [ebp+var_4] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_408A34  +
push edi  +
push dword ptr [esi+8]  +
mov ecx ebx +
push eax  +
call sub_4089F0  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_408610  +
push 40h  +
push edi  +
call sub_42CA5C  +
mov eax [ebp+var_4] +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_408A08  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_435761  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_C] +
push ecx  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_408AA0  +
add esp 14h +
pop ecx  +
pop ebp  +
retn   +
***
xorps xmm0 xmm0 +
mov dword ptr [ecx] offset off_452C04 +
movq qword ptr [ecx+4] xmm0 +
mov eax ecx +
retn   +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
sub esp 8 +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
lea ecx [ebp+var_8] +
push ecx  +
mov eax [edi] +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_408B83  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_408B83  +
pop edi  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
cmp eax [edx+4] +
jnz loc_408BB0  +
mov eax [esi] +
cmp eax [ebp+arg_4] +
jnz loc_408BB0  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push offset unk_4706D4  +
push offset sub_410A10  +
push offset unk_4706D0  +
mov esi ecx +
call sub_42AC2E  +
add esp 0Ch +
test eax eax +
jz loc_408BEF  +
mov dword ptr [esi] 1 +
mov eax esi +
mov dword ptr [esi+4] offset unk_4706D4 +
pop esi  +
retn   +
***
call sub_435DE6  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F0D0  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 60h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-20h] edi +
mov eax [ebx+10h] +
lea ecx [ebp-38h] +
push eax  +
mov [ebp-20h] edi +
call loc_407DB0  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
mov [ebp-18h] eax +
mov [ebp-20h] esi +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp-28h] +
test ecx ecx +
jz loc_408CB0  +
mov edx [ebp-24h] +
mov eax edx +
sub eax ecx +
cmp eax 2 +
jb loc_408C98  +
lea eax [ecx+2] +
cmp edx 10h +
mov [ebp-28h] eax +
mov edx 203Ah +
lea eax [ebp-38h] +
cmovnb eax [ebp-38h] +
mov [eax+ecx] dx +
mov byte ptr [eax+ecx+2] 0 +
jmp loc_408CB0  +
push 2  +
push offset asc_462940  +
mov byte ptr [ebp-3Ch] 0 +
lea ecx [ebp-38h] +
push dword ptr [ebp-3Ch]  +
push 2  +
call loc_410510  +
mov eax [esi] +
lea ecx [ebp-54h] +
push dword ptr [ebp-18h]  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-20h] +
call esi  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-54h] +
cmp dword ptr [ebp-40h] 10h +
mov ecx [ebp-44h] +
cmovnb edx [ebp-54h] +
mov eax [ebp-24h] +
mov esi [ebp-28h] +
sub eax esi +
mov [ebp-20h] ecx +
push ecx  +
push edx  +
cmp ecx eax +
ja loc_408D11  +
cmp dword ptr [ebp-24h] 10h +
lea eax [esi+ecx] +
mov [ebp-28h] eax +
lea eax [ebp-38h] +
cmovnb eax [ebp-38h] +
add esi eax +
push esi  +
call loc_42E1C0  +
mov eax [ebp-20h] +
add esp 0Ch +
mov byte ptr [esi+eax] 0 +
jmp loc_408D21  +
mov byte ptr [ebp-20h] 0 +
push dword ptr [ebp-20h]  +
push ecx  +
lea ecx [ebp-38h] +
call loc_410510  +
mov edx [ebp-40h] +
cmp edx 10h +
jb loc_408D55  +
mov ecx [ebp-54h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_408D4B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_408E16  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm1 oword ptr [ebp-38h] +
lea ecx [ebp-6Ch] +
mov dword ptr [edi] offset off_452C04 +
movq xmm0 qword ptr [ebp-28h] +
movq qword ptr [ebp-5Ch] xmm0 +
xorps xmm0 xmm0 +
cmp dword ptr [ebp-58h] 10h +
movd eax xmm1 +
movq qword ptr [edi+4] xmm0 +
movups oword ptr [ebp-6Ch] xmm1 +
cmovnb ecx eax +
mov dword ptr [ebp-28h] 0 +
lea eax [edi+4] +
mov dword ptr [ebp-24h] 0Fh +
push eax  +
lea eax [ebp-1Ch] +
mov byte ptr [ebp-38h] 0 +
push eax  +
mov [ebp-1Ch] ecx +
mov byte ptr [ebp-18h] 1 +
call sub_42D6A4  +
mov edx [ebp-58h] +
add esp 8 +
mov dword ptr [edi] offset off_452C50 +
cmp edx 10h +
jb loc_408DE2  +
mov ecx [ebp-6Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_408DD8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_408E1B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebx+8] +
mov eax edi +
mov [edi+0Ch] ecx +
mov ecx [ebx+0Ch] +
mov dword ptr [edi] offset off_452C68 +
mov [edi+10h] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 0Ch  +
***
call sub_432491  +
call sub_432491  +
push esi  +
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_42D6A4  +
mov dword ptr [edi] offset off_452C68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_452C74 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_42D6A4  +
mov dword ptr [edi] offset off_452C68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
mov [ebp-4] esi +
cmp eax 1 +
jnz loc_408F4B  +
push 15h  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov dword ptr [esi+14h] 0Fh +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_4081D0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push eax  +
call sub_42B0E8  +
mov edx eax +
mov dword ptr [esi+10h] 0 +
mov ecx edx +
mov dword ptr [esi+14h] 0Fh +
add esp 4 +
mov byte ptr [esi] 0 +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_408F70  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_4081D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_408FA7  +
push 8  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_452C90 +
jz loc_408FCD  +
push 4  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F14A  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
push 0  +
call sub_42ABB7  +
mov dword ptr [ebp-4] 0 +
mov dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov byte ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+18h] ax +
mov [esi+1Ch] eax +
mov [esi+20h] ax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov [esi+2Ch] eax +
mov [esi+30h] al +
mov eax [ebp+8] +
mov byte ptr [ebp-4] 6 +
test eax eax +
jz loc_409076  +
push eax  +
push esi  +
call sub_42AEE4  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aBadLocaleName  +
call sub_42AB6A  +
push 0FFFFFFFFh  +
push offset loc_44F170  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
call sub_42AF2F  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_4090CE  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_4090E5  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_4090FC  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_409113  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_40912A  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_409141  +
push eax  +
call sub_4322BA  +
add esp 4 +
mov ecx esi +
mov dword ptr [esi+4] 0 +
call sub_42AC0F  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx] offset off_452C90 +
retn   +
***
test edi edi +
jz loc_4091D3  +
mov eax [edi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_4091D2  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_42B178  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_42B345  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
mov al [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov ecx edi +
sub ecx esi +
push ecx  +
push esi  +
push edx  +
call loc_42DC40  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov ecx edi +
sub ecx esi +
push ecx  +
push esi  +
push edx  +
call loc_42DC40  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_453BD8 +
test eax eax +
jle loc_40931D  +
push dword ptr [esi+0Ch]  +
call sub_4322BA  +
jmp loc_409327  +
jns loc_40932A  +
push dword ptr [esi+0Ch]  +
call sub_42C3C0  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi] offset off_452C90 +
test [ebp+arg_0] 1 +
jz loc_40934C  +
push 18h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F198  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
mov ecx edx +
mov [ebp-10h] esi +
mov dword ptr [ebp-18h] 0 +
mov edi [eax] +
mov ebx [eax+4] +
lea eax [ecx+1] +
mov dword ptr [ebp-14h] 0Fh +
mov byte ptr [ebp-28h] 0 +
mov [ebp-10h] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4093B5  +
sub ecx [ebp-10h] +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4081D0  +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push ebx  +
push edi  +
mov ecx esi +
call loc_408C00  +
mov edx [ebp-14h] +
cmp edx 10h +
jb loc_40940D  +
mov ecx [ebp-28h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_409403  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409429  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi] offset off_463E70 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 1Ch +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
push esi  +
and ecx eax +
jz loc_409452  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_409462  +
jmp loc_409459  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_42DBD3  +
test cl 4 +
jz loc_40946E  +
mov esi offset aIos_baseBadbit +
jmp loc_40947E  +
test cl 2 +
mov esi offset aIos_baseFailbi +
mov eax offset aIos_baseEofbit +
cmovz esi eax +
lea ecx [esp+4] +
call loc_408BC0  +
push eax  +
push esi  +
lea ecx [esp+14h] +
call loc_409360  +
push offset unk_46CCFC  +
lea eax [esp+10h] +
push eax  +
call sub_42DBD3  +
push 0FFFFFFFFh  +
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_42D6A4  +
mov dword ptr [edi] offset off_452C68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_463E70 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4095FC  +
push 38h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi+28h] +
test eax eax +
jz loc_40962C  +
push eax  +
call ds:FreeLibrary  +
test eax eax +
jz loc_40962C  +
mov dword ptr [esi+28h] 0 +
mov ecx [esi+44h] +
test ecx ecx +
jz loc_40969D  +
mov edx [esi+48h] +
push edi  +
push ecx  +
call loc_406C50  +
mov ecx [esi+4Ch] +
mov eax 2AAAAAABh +
mov edi [esi+44h] +
add esp 4 +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40967D  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_4096FE  +
mov edi edx +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 0 +
pop edi  +
mov ecx [esi+40h] +
cmp ecx 8 +
jb loc_4096D3  +
mov eax [esi+2Ch] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4096C9  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4096FE  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+40h] 7 +
mov [esi+2Ch] ax +
mov eax [esi+28h] +
test eax eax +
jz loc_4096F5  +
push eax  +
call ds:FreeLibrary  +
mov dword ptr [esi+28h] 0 +
pop esi  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F220  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
lea ecx [ebp-70h] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call loc_4078E0  +
lea ecx [ebp-58h] +
mov dword ptr [ebp-4] 0 +
push ecx  +
mov ecx eax +
call loc_4075E0  +
push eax  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call sub_406290  +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_4097E7  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4097DD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409A9B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-5Ch] +
cmp edx 8 +
jb loc_409839  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40982F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409A9B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-60h] 0 +
push 9  +
push offset aHduwp_dll  +
lea ecx [ebp-40h] +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
mov [ebp-30h] eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
call loc_406450  +
push ecx  +
lea edx [ebp-40h] +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-28h] +
call loc_414330  +
mov byte ptr [ebp-4] 4 +
add esp 4 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_4098BB  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4098B1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409AA0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebp-28h] +
push eax  +
lea ecx [esi+28h] +
call sub_41CEF0  +
test al al +
jnz loc_4098D5  +
mov ecx offset aFailedToLoadHd +
jmp loc_409A1A  +
mov eax [esi+28h] +
xor ecx ecx +
test eax eax +
jz loc_4098EF  +
push offset aHduwpinstallpa  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi] ecx +
xor ecx ecx +
test eax eax +
jz loc_409908  +
push offset aHduwpuninstall  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+4] ecx +
xor ecx ecx +
test eax eax +
jz loc_409922  +
push offset aHduwpispackage  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+0Ch] ecx +
xor ecx ecx +
test eax eax +
jz loc_40993C  +
push offset aHduwpispacka_0  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+8] ecx +
xor ecx ecx +
test eax eax +
jz loc_409956  +
push offset aHduwpispacka_1  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+10h] ecx +
xor ecx ecx +
test eax eax +
jz loc_409970  +
push offset aHduwplaunchpac  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+14h] ecx +
xor ecx ecx +
test eax eax +
jz loc_40998A  +
push offset aHduwpgetinstal  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+18h] ecx +
xor ecx ecx +
test eax eax +
jz loc_4099A4  +
push offset aHduwpgetpackag  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+1Ch] ecx +
xor ecx ecx +
test eax eax +
jz loc_4099BE  +
push offset aHduwpgetpack_0  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [esi+28h] +
mov [esi+20h] ecx +
xor ecx ecx +
test eax eax +
jz loc_4099D5  +
push offset aHduwpregisterp  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
cmp dword ptr [esi] 0 +
mov [esi+24h] ecx +
jz loc_409A15  +
cmp dword ptr [esi+4] 0 +
jz loc_409A15  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_409A15  +
cmp dword ptr [esi+10h] 0 +
jz loc_409A15  +
cmp dword ptr [esi+8] 0 +
jz loc_409A15  +
cmp dword ptr [esi+14h] 0 +
jz loc_409A15  +
cmp dword ptr [esi+18h] 0 +
jz loc_409A15  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_409A15  +
cmp dword ptr [esi+20h] 0 +
jz loc_409A15  +
test ecx ecx +
jz loc_409A15  +
mov bl 1 +
jmp loc_409A47  +
mov ecx offset aFailedToLoadFu +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push ecx  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
xor bl bl +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_409A7D  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_409A73  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409AA5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F298  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+8] +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov [ebp-4] eax +
lea eax [ebp-2Ch] +
push eax  +
push esi  +
call loc_40C1D0  +
test al al +
jnz loc_409D3B  +
cmp dword ptr [esi+14h] 8 +
jb loc_409D0D  +
mov esi [esi] +
push esi  +
push offset aPackagefullnam  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov edi 2 +
jmp loc_409E3C  +
cmp dword ptr [ebp-18h] 8 +
lea ecx [ebp-34h] +
mov esi [ebx+8] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
mov edi 6 +
push ecx  +
lea ecx [ebp-30h] +
mov dword ptr [ebp-30h] 0 +
push ecx  +
lea ecx [ebp-11h] +
mov dword ptr [ebp-34h] 0 +
push ecx  +
push eax  +
mov ecx esi +
mov byte ptr [ebp-11h] 0 +
call ds:off_4522C0  +
call esi  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_409DC2  +
cmp byte ptr [ebp-11h] 1 +
lea eax [ebp-2Ch] +
jnz loc_409D93  +
lea edi [esi+5] +
mov ecx offset aProductWithApp +
jmp loc_409D98  +
mov ecx offset aProductWithA_0 +
cmp dword ptr [ebp-18h] 8 +
cmovnb eax [ebp-2Ch] +
push eax  +
push ecx  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 1Ch +
jmp loc_409E3C  +
mov ecx [ebp-30h] +
test ecx ecx +
jz loc_409E0C  +
mov edx [ebp-34h] +
test edx edx +
jz loc_409E0C  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push ecx  +
push esi  +
push eax  +
push offset aFailedToGetIns  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
push dword ptr [ebp-34h]  +
call sub_4322BA  +
add esp 2Ch +
jmp loc_409E3C  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push esi  +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aFailedToGetI_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 20h +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_409E72  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_409E68  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_409E92  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F2E8  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+8] +
xorps xmm0 xmm0 +
movq qword ptr [ebp-38h] xmm0 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-34h] 0 +
mov byte ptr [ebp-30h] 0 +
mov dword ptr [ebp-38h] 0 +
push esi  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 1 +
call loc_414E60  +
test al al +
jnz loc_409F4B  +
cmp dword ptr [esi+14h] 8 +
jb loc_409F1D  +
mov esi [esi] +
push esi  +
push offset aInvalidXmlS  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov edi 2 +
jmp loc_40A182  +
push 15h  +
xor eax eax +
mov dword ptr [ebp-3Ch] 0 +
push offset aAdduwpappxLaun  +
lea ecx [ebp-5Ch] +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] ax +
call loc_406450  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea ecx [ebp-38h] +
call loc_4154F0  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_409FC7  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_409FBD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40A1E2  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 6 +
mov esi [ebp-3Ch] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_409FFF  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea ecx [ebp-38h] +
call loc_417400  +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_40A03A  +
push offset aLaunchuriNotPr  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov edi 2 +
jmp loc_40A118  +
cmp dword ptr [ebp-18h] 8 +
lea ecx [ebp-44h] +
mov edi [ebx+14h] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push ecx  +
lea ecx [ebp-40h] +
mov dword ptr [ebp-40h] 0 +
push ecx  +
push 0  +
push eax  +
mov ecx edi +
mov dword ptr [ebp-44h] 0 +
call ds:off_4522C0  +
call edi  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_40A09D  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aSuccessfullyLa  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
jmp loc_40A110  +
mov ecx [ebp-40h] +
test ecx ecx +
jz loc_40A0E9  +
mov edx [ebp-44h] +
test edx edx +
jz loc_40A0E9  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push ecx  +
push eax  +
push offset aFailedToLaunch  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 24h +
push dword ptr [ebp-44h]  +
call sub_4322BA  +
add esp 4 +
jmp loc_40A118  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aFailedToLaun_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_40A156  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A14C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40A1E7  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_40A182  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 8 +
mov esi [ebp-34h] +
test esi esi +
jz loc_40A1A2  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-30h] 0 +
jz loc_40A1AE  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40A1C2  +
mov ecx [esi] +
push esi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F3EB  +
mov eax large fs:0 +
push eax  +
sub esp 114h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-118h] ebx +
mov eax [ebp+0Ch] +
xorps xmm0 xmm0 +
mov esi [ebp+8] +
movq qword ptr [ebp-64h] xmm0 +
mov [ebp-11Ch] eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-64h] 0 +
push esi  +
lea ecx [ebp-64h] +
mov dword ptr [ebp-4] 1 +
call loc_414E60  +
test al al +
jnz loc_40A29D  +
cmp dword ptr [esi+14h] 8 +
jb loc_40A26F  +
mov esi [esi] +
push esi  +
push offset aInvalidXmlS  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov ebx 2 +
jmp loc_40AD1D  +
push 10h  +
xor eax eax +
mov dword ptr [ebp-84h] 0 +
push offset aAdduwpappxPath  +
lea ecx [ebp-9Ch] +
mov dword ptr [ebp-8Ch] 0 +
mov dword ptr [ebp-88h] 7 +
mov [ebp-9Ch] ax +
call loc_406450  +
lea eax [ebp-9Ch] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-84h] +
push eax  +
lea ecx [ebp-64h] +
call loc_4154F0  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-88h] +
cmp edx 8 +
jb loc_40A334  +
mov ecx [ebp-9Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A32A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD7D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-84h] +
test eax eax +
jz loc_40A383  +
lea ecx [ebp-0B4h] +
push ecx  +
push ecx  +
mov ecx esp +
push eax  +
mov [ecx] eax +
mov ecx [eax] +
mov esi [ecx+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea ecx [ebp-64h] +
call loc_417400  +
push 29h  +
xor eax eax +
mov dword ptr [ebp-114h] 0 +
push offset aAdduwpappxUwpd  +
lea ecx [ebp-9Ch] +
mov dword ptr [ebp-80h] 0 +
mov dword ptr [ebp-8Ch] 0 +
mov dword ptr [ebp-88h] 7 +
mov [ebp-9Ch] ax +
call loc_406450  +
lea eax [ebp-114h] +
mov byte ptr [ebp-4] 7 +
push eax  +
lea eax [ebp-9Ch] +
push eax  +
lea eax [ebp-80h] +
push eax  +
lea ecx [ebp-64h] +
call loc_4158F0  +
mov byte ptr [ebp-4] 9 +
mov edx [ebp-88h] +
cmp edx 8 +
jb loc_40A425  +
mov ecx [ebp-9Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A41B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD82  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-28h] 0 +
movq qword ptr [ebp-30h] xmm0 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
movq qword ptr [ebp-3Ch] xmm0 +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0 +
xor edi edi +
mov byte ptr [ebp-4] 0Bh +
cmp [ebp-114h] edi +
jle loc_40A904  +
xor eax eax +
mov dword ptr [ebp-8Ch] 0 +
mov dword ptr [ebp-88h] 7 +
mov [ebp-9Ch] ax +
mov [ebp-6Ch] eax +
mov dword ptr [ebp-68h] 7 +
mov [ebp-7Ch] ax +
xorps xmm0 xmm0 +
mov byte ptr [ebp-4] 0Dh +
movlpd oword ptr [ebp-20h] xmm0 +
push 40h  +
mov [ebp-20h] eax +
mov [ebp-1Ch] eax +
call sub_42C7DB  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-20h] eax +
push edi  +
push ecx  +
mov byte ptr [ebp-4] 0Eh +
mov ecx esp +
mov eax [ebp-80h] +
mov dword ptr [ebp-58h] 0 +
mov [ecx] eax +
test eax eax +
jz loc_40A500  +
mov ecx [eax] +
push eax  +
mov esi [ecx+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-64h] +
call loc_415C30  +
lea eax [ebp-9Ch] +
mov byte ptr [ebp-4] 0Fh +
push eax  +
mov eax [ebp-58h] +
push ecx  +
mov ecx esp +
mov [ecx] eax +
mov eax [ebp-58h] +
test eax eax +
jz loc_40A536  +
mov ecx [eax] +
push eax  +
mov esi [ecx+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea ecx [ebp-64h] +
call loc_4170C0  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-9Ch] +
push eax  +
call loc_40C970  +
lea eax [ebp-7Ch] +
mov byte ptr [ebp-10Dh] 0 +
push eax  +
lea eax [ebp-9Ch] +
mov ecx ebx +
push eax  +
call loc_40C1D0  +
test al al +
jnz loc_40A572  +
mov bl 1 +
jmp loc_40A6CC  +
push 50h  +
lea eax [ebp-108h] +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov dword ptr [ebp-0E0h] 0 +
xor eax eax +
mov dword ptr [ebp-0CCh] 0 +
mov dword ptr [ebp-0C8h] 7 +
mov [ebp-0DCh] ax +
mov [ebp-0C4h] eax +
mov [ebp-0C0h] eax +
mov [ebp-0BCh] eax +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 12h +
call loc_409710  +
test al al +
jz loc_40AD87  +
mov byte ptr [ebp-4] 13h +
lea ecx [ebp-10Ch] +
cmp dword ptr [ebp-68h] 8 +
lea eax [ebp-7Ch] +
mov esi [ebp-100h] +
cmovnb eax [ebp-7Ch] +
push ecx  +
lea ecx [ebp-18h] +
mov dword ptr [ebp-18h] 0 +
push ecx  +
lea ecx [ebp-11h] +
mov dword ptr [ebp-10Ch] 0 +
push ecx  +
push eax  +
mov ecx esi +
mov byte ptr [ebp-11h] 0 +
call ds:off_4522C0  +
call esi  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_40A6AA  +
mov ecx [ebp-18h] +
mov byte ptr [ebp-11h] 0 +
test ecx ecx +
jz loc_40A67A  +
mov edx [ebp-10Ch] +
test edx edx +
jz loc_40A67A  +
cmp dword ptr [ebp-68h] 8 +
lea eax [ebp-7Ch] +
push edx  +
cmovnb eax [ebp-7Ch] +
push ecx  +
push esi  +
push eax  +
push offset aFailedToGetIns  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
push dword ptr [ebp-10Ch]  +
call sub_4322BA  +
add esp 2Ch +
jmp loc_40A6AA  +
cmp dword ptr [ebp-68h] 8 +
lea eax [ebp-7Ch] +
push esi  +
cmovnb eax [ebp-7Ch] +
push eax  +
push offset aFailedToGetI_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 20h +
cmp byte ptr [ebp-11h] 0 +
lea ecx [ebp-108h] +
movzx ebx byte ptr [ebp-10Dh] +
mov eax 1 +
cmovz ebx eax +
mov byte ptr [ebp-4] 0Fh +
call loc_409610  +
test bl bl +
jz loc_40A834  +
push 8  +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
push offset aOptional  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
call loc_406450  +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 14h +
push eax  +
lea ecx [ebp-20h] +
call loc_40DAB0  +
mov esi eax +
cmp dword ptr [eax+14h] 8 +
jb loc_40A711  +
mov esi [eax] +
cmp dword ptr [eax+10h] 4 +
jnz loc_40A738  +
mov ecx offset aTrue +
mov edx 4 +
sub esi ecx +
mov ax [esi+ecx] +
cmp ax [ecx] +
jnz loc_40A738  +
add ecx 2 +
sub edx 1 +
jnz loc_40A723  +
mov bl 1 +
jmp loc_40A73A  +
xor bl bl +
mov byte ptr [ebp-4] 0Fh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_40A778  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A76E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD7D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 4  +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
lea ecx [ebp-54h] +
mov dword ptr [ebp-40h] 7 +
push offset aPath  +
mov [ebp-54h] ax +
call loc_406450  +
test bl bl +
jz loc_40A7C9  +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 15h +
push eax  +
lea ecx [ebp-20h] +
call loc_40DAB0  +
mov ecx [ebp-2Ch] +
push eax  +
cmp ecx [ebp-28h] +
jz loc_40A7C3  +
call sub_406290  +
add dword ptr [ebp-2Ch] 18h +
jmp loc_40A7F6  +
push ecx  +
lea ecx [ebp-30h] +
jmp loc_40A7F1  +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 16h +
push eax  +
lea ecx [ebp-20h] +
call loc_40DAB0  +
mov ecx [ebp-38h] +
push eax  +
cmp ecx [ebp-34h] +
jz loc_40A7ED  +
call sub_406290  +
add dword ptr [ebp-38h] 18h +
jmp loc_40A7F6  +
push ecx  +
lea ecx [ebp-3Ch] +
call loc_408850  +
mov byte ptr [ebp-4] 0Fh +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_40A834  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A82A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD7D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0Eh +
mov eax [ebp-58h] +
test eax eax +
jz loc_40A84F  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea eax [ebp-20h] +
push eax  +
mov ecx eax +
call loc_4087E0  +
mov byte ptr [ebp-4] 0Ch +
mov edx [ebp-68h] +
cmp edx 8 +
jb loc_40A898  +
mov ecx [ebp-7Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A88E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD7D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 0Bh +
mov edx [ebp-88h] +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-68h] 7 +
mov [ebp-7Ch] ax +
cmp edx 8 +
jb loc_40A8F0  +
mov ecx [ebp-9Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A8E6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD7D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
inc edi  +
cmp edi [ebp-114h] +
jge loc_40A904  +
mov ebx [ebp-118h] +
jmp loc_40A480  +
***
push 39h  +
xor eax eax +
mov byte ptr [ebp-114h] 0 +
push offset aAdduwpappxUw_0  +
lea ecx [ebp-7Ch] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-68h] 7 +
mov [ebp-7Ch] ax +
call loc_406450  +
lea eax [ebp-7Ch] +
mov byte ptr [ebp-4] 17h +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-64h] +
call loc_4154F0  +
mov byte ptr [ebp-4] 19h +
mov edx [ebp-68h] +
cmp edx 8 +
jb loc_40A987  +
mov ecx [ebp-7Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40A97D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40AD9D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edi [ebp-18h] +
xor eax eax +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-68h] 7 +
mov [ebp-7Ch] ax +
test edi edi +
jz loc_40AA5F  +
mov [ebp-44h] eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 1Ah +
push eax  +
push ecx  +
mov eax esp +
push edi  +
mov [eax] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea ecx [ebp-64h] +
call loc_417400  +
cmp dword ptr [ebp-40h] 8 +
lea esi [ebp-54h] +
mov ebx [ebp-54h] +
cmovnb esi ebx +
cmp dword ptr [ebp-44h] 4 +
jnz loc_40AA17  +
mov ecx offset aTrue +
mov edx 4 +
sub esi ecx +
mov ax [esi+ecx] +
cmp ax [ecx] +
jnz loc_40AA17  +
add ecx 2 +
sub edx 1 +
jnz loc_40AA00  +
mov byte ptr [ebp-11h] 1 +
jmp loc_40AA1B  +
mov byte ptr [ebp-11h] 0 +
mov byte ptr [ebp-4] 19h +
mov eax [ebp-40h] +
cmp eax 8 +
jb loc_40AA56  +
lea ecx ds:2[eax*2] +
mov eax ebx +
cmp ecx 1000h +
jb loc_40AA4C  +
mov ebx [ebx-4] +
add ecx 23h +
sub eax ebx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40ADA2  +
push ecx  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-11h] +
mov [ebp-114h] al +
mov esi [ebp-30h] +
mov eax [ebp-114h] +
cmp esi [ebp-2Ch] +
jz loc_40AB66  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-1Ch] 0 +
movq qword ptr [ebp-24h] xmm0 +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
push dword ptr [ebp-11Ch]  +
mov ecx [ebp-118h] +
push eax  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 1Bh +
push eax  +
push esi  +
call loc_40ADB0  +
test eax eax +
jz loc_40AAE2  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_40AABE  +
mov eax [esi] +
push eax  +
push offset aIgnoringTheFai  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 28h  +
call loc_412B30  +
add esp 1Ch +
mov byte ptr [ebp-4] 19h +
mov ebx [ebp-24h] +
test ebx ebx +
jz loc_40AB54  +
mov edx [ebp-20h] +
push ecx  +
mov ecx ebx +
call loc_406C50  +
mov ecx [ebp-1Ch] +
mov eax 2AAAAAABh +
sub ecx ebx +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax ebx +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40AB35  +
mov ebx [ebx-4] +
add ecx 23h +
sub eax ebx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40ADA2  +
push ecx  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov eax [ebp-114h] +
add esi 18h +
cmp esi [ebp-2Ch] +
jnz loc_40AA71  +
push dword ptr [ebp-11Ch]  +
mov ecx [ebp-118h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-0B4h] +
push eax  +
call loc_40ADB0  +
mov byte ptr [ebp-4] 0Bh +
mov ebx eax +
test edi edi +
jz loc_40AB9D  +
mov ecx [edi] +
push edi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov byte ptr [ebp-4] 0Ah +
mov ecx [ebp-3Ch] +
test ecx ecx +
jz loc_40AC10  +
mov edx [ebp-38h] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-34h] +
mov eax 2AAAAAABh +
mov esi [ebp-3Ch] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40ABF1  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40ADA2  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0 +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-30h] +
test ecx ecx +
jz loc_40AC83  +
mov edx [ebp-2Ch] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-28h] +
mov eax 2AAAAAABh +
mov esi [ebp-30h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40AC64  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40ADA2  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-80h] +
test eax eax +
jz loc_40AC9E  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40ACE2  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40ACD8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40ADA2  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-0B4h] ax +
mov eax [ebp-84h] +
mov dword ptr [ebp-0A4h] 0 +
mov dword ptr [ebp-0A0h] 7 +
test eax eax +
jz loc_40AD1D  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 1Ch +
mov esi [ebp-60h] +
test esi esi +
jz loc_40AD3D  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-5Ch] 0 +
jz loc_40AD49  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40AD5D  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call sub_432491  +
lea ecx [ebp-48h] +
call sub_408B00  +
push offset unk_46CCD0  +
lea eax [ebp-48h] +
push eax  +
call sub_42DBD3  +
call sub_432491  +
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44F4ED+1)  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 160h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-0ECh] ecx +
mov edi [ebx+8] +
mov esi [ebx+0Ch] +
mov eax [ebx+14h] +
mov dword ptr [ebp-0E8h] 0 +
cmp dword ptr [edi+10h] 0 +
mov [ebp-124h] esi +
mov [ebp-12Ch] eax +
jnz loc_40AE49  +
push offset aUwpAppPathNotP  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov eax 2 +
jmp loc_40B7BB  +
mov ecx [esi+4] +
mov eax 2AAAAAABh +
sub ecx [esi] +
imul  ecx +
xor ecx ecx +
sar edx 2 +
mov eax edx +
inc edx  +
shr eax 1Fh +
add eax edx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov edx [ebp-124h] +
xor ecx ecx +
mov esi [esi] +
add esp 4 +
mov [ebp-128h] eax +
mov [ebp-0E8h] ecx +
cmp esi [edx+4] +
jz loc_40AECD  +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_40AE9E  +
mov ecx [esi] +
push ecx  +
call sub_435D36  +
mov ecx [ebp-0E8h] +
add esi 18h +
mov edx [ebp-128h] +
add esp 4 +
mov [edx+ecx*4] eax +
inc ecx  +
mov eax [ebp-124h] +
mov [ebp-0E8h] ecx +
cmp esi [eax+4] +
jnz loc_40AE94  +
mov eax edx +
cmp dword ptr [edi+14h] 8 +
movzx edx byte ptr [ebx+10h] +
mov dword ptr [eax+ecx*4] 0 +
mov ecx edi +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-0E4h] 0 +
jb loc_40AEF3  +
mov ecx [edi] +
lea esi [ebp-0E4h] +
push esi  +
lea esi [ebp-18h] +
push esi  +
mov esi [ebp-0ECh] +
push edx  +
push eax  +
push ecx  +
mov esi [esi] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov esi eax +
add esp 14h +
test esi esi +
jnz loc_40AF4D  +
cmp dword ptr [edi+14h] 8 +
jb loc_40AF24  +
mov edi [edi] +
push edi  +
push offset aSuccessfullyIn  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 1Ch +
jmp loc_40B7B9  +
mov eax [ebp-18h] +
test eax eax +
jz loc_40B78C  +
mov edx [ebp-0E4h] +
test edx edx +
jz loc_40B78C  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_40AF70  +
mov ecx [edi] +
push edx  +
push eax  +
push esi  +
push ecx  +
push offset aFailedToInstal  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
mov eax [ebp-12Ch] +
add esp 28h +
cmp dword ptr [eax+10h] 0 +
jz loc_40B77C  +
push 0B0h  +
lea eax [ebp-0E0h] +
push 0  +
push eax  +
call sub_42E740  +
mov dword ptr [ebp-0E0h] offset unk_463E5C +
mov dword ptr [ebp-0D0h] offset unk_463DF4 +
mov dword ptr [ebp-78h] offset off_463E00 +
add esp 4 +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-0C8h] +
mov dword ptr [ebp-0E8h] 1 +
lea ecx [ebp-0E0h] +
push eax  +
call sub_40F9F0  +
lea eax [ebp-0D0h] +
mov [ebp-0ECh] eax +
mov eax [ebp-0D0h] +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0D0h] offset off_463E68 +
mov eax [ebp-0D0h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ebp+ecx-0D4h] eax +
mov eax [ebp-0E0h] +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0E0h] offset off_463E08 +
mov eax [ebp-0E0h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ebp+ecx-0E4h] eax +
mov dword ptr [ebp-4] 4 +
mov eax [ebp-0E0h] +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0E0h] offset off_463E50 +
mov eax [ebp-0E0h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx-0E4h] eax +
lea ecx [ebp-0C8h] +
call sub_40F7B0  +
mov dword ptr [ebp-0C8h] offset off_463E10 +
mov dword ptr [ebp-90h] 0 +
mov dword ptr [ebp-8Ch] 0 +
lea ecx [ebp-0D0h] +
mov dword ptr [ebp-4] 5 +
call loc_40FEB0  +
mov ecx [eax] +
mov edx [ecx+4] +
mov ecx [edx+eax+14h] +
and ecx 0FFFFF9FFh +
or ecx 800h +
mov [edx+eax+14h] ecx +
mov ecx eax +
push dword ptr [ebp-18h]  +
call sub_40D5C0  +
push edi  +
lea ecx [ebp-30h] +
call sub_406290  +
mov byte ptr [ebp-4] 7 +
mov ecx [ebp-8Ch] +
mov dword ptr [ebp-14Ch] 0 +
mov dword ptr [ebp-148h] 0Fh +
mov byte ptr [ebp-15Ch] 0 +
mov dword ptr [ebp-0E8h] 11h +
test cl 2 +
jnz loc_40B143  +
mov eax [ebp-0A8h] +
mov edx [eax] +
test edx edx +
jz loc_40B143  +
mov eax [ebp-0B8h] +
cmp edx [ebp-90h] +
cmovb edx [ebp-90h] +
mov ecx [eax] +
sub edx ecx +
jmp loc_40B166  +
test cl 4 +
jnz loc_40B173  +
mov eax [ebp-0ACh] +
mov edx [eax] +
test edx edx +
jz loc_40B173  +
mov eax [ebp-0BCh] +
mov ecx [eax] +
sub edx ecx +
mov eax [ebp-9Ch] +
add edx [eax] +
push edx  +
push ecx  +
lea ecx [ebp-15Ch] +
call loc_4081D0  +
mov dword ptr [ebp-4] 9 +
lea ecx [ebp-15Ch] +
xor eax eax +
mov dword ptr [ebp-110h] 0 +
cmp dword ptr [ebp-148h] 10h +
lea edx [ebp-120h] +
mov dword ptr [ebp-10Ch] 7 +
cmovnb ecx [ebp-15Ch] +
push ecx  +
mov [ebp-120h] ax +
mov dword ptr [ebp-0E8h] 29h +
call sub_41BB30  +
add esp 4 +
lea edx [ebp-30h] +
lea ecx [ebp-144h] +
push offset a@  +
call loc_40FDE0  +
add esp 4 +
push 0Fh  +
push offset aOs_error_code  +
mov ecx eax +
mov byte ptr [ebp-4] 0Ah +
call loc_406570  +
mov dword ptr [ebp-0F8h] 0 +
xor ecx ecx +
mov dword ptr [ebp-0F4h] 0 +
mov dword ptr [ebp-0E8h] 69h +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-108h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-0F8h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 0Bh +
mov eax [ebp-0F4h] +
mov ecx [ebp-0F8h] +
sub eax ecx +
mov edx [ebp-110h] +
mov edi [ebp-10Ch] +
cmp edx eax +
jbe loc_40B282  +
mov eax edi +
sub eax edx +
cmp eax ecx +
jb loc_40B282  +
cmp dword ptr [ebp-0F4h] 8 +
lea eax [ebp-108h] +
push ecx  +
cmovnb eax [ebp-108h] +
push eax  +
push ecx  +
lea ecx [ebp-120h] +
call loc_410810  +
jmp loc_40B29F  +
cmp edi 8 +
lea eax [ebp-120h] +
push edx  +
cmovnb eax [ebp-120h] +
lea ecx [ebp-108h] +
push eax  +
call loc_406570  +
movups xmm0 oword ptr [eax] +
xor ecx ecx +
movups oword ptr [ebp-170h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
mov edx [ebp-1Ch] +
movq qword ptr [ebp-0F0h] xmm0 +
cmp edx 8 +
jb loc_40B2FF  +
mov ecx [ebp-30h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B2F5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-170h] +
movups oword ptr [ebp-30h] xmm0 +
movq xmm0 qword ptr [ebp-0F0h] +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-0F4h] +
movq qword ptr [ebp-20h] xmm0 +
cmp edx 8 +
jb loc_40B35B  +
mov ecx [ebp-108h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B351  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 9 +
mov edx [ebp-130h] +
mov dword ptr [ebp-0F8h] 0 +
mov dword ptr [ebp-0F4h] 7 +
mov [ebp-108h] ax +
cmp edx 8 +
jb loc_40B3BC  +
mov ecx [ebp-144h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B3B2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 8 +
mov edx [ebp-10Ch] +
mov dword ptr [ebp-134h] 0 +
mov dword ptr [ebp-130h] 7 +
mov [ebp-144h] ax +
cmp edx 8 +
jb loc_40B41D  +
mov ecx [ebp-120h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B413  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-148h] +
mov dword ptr [ebp-110h] 0 +
mov dword ptr [ebp-10Ch] 7 +
mov [ebp-120h] ax +
cmp edx 10h +
jb loc_40B478  +
mov ecx [ebp-15Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40B46E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-0E4h] +
xor eax eax +
mov ecx edx +
mov dword ptr [ebp-110h] 0 +
mov dword ptr [ebp-10Ch] 7 +
mov [ebp-120h] ax +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40B4A0  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-120h] +
call loc_406450  +
push offset a@  +
lea edx [ebp-30h] +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-144h] +
call loc_40FDE0  +
add esp 4 +
push 11h  +
push offset aOs_error_strin  +
mov ecx eax +
mov byte ptr [ebp-4] 0Dh +
call loc_406570  +
mov dword ptr [ebp-0F8h] 0 +
xor ecx ecx +
mov dword ptr [ebp-0F4h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-108h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-0F8h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 0Eh +
mov eax [ebp-0F4h] +
mov ecx [ebp-0F8h] +
sub eax ecx +
mov edx [ebp-110h] +
mov edi [ebp-10Ch] +
cmp edx eax +
jbe loc_40B574  +
mov eax edi +
sub eax edx +
cmp eax ecx +
jb loc_40B574  +
cmp dword ptr [ebp-0F4h] 8 +
lea eax [ebp-108h] +
push ecx  +
cmovnb eax [ebp-108h] +
push eax  +
push ecx  +
lea ecx [ebp-120h] +
call loc_410810  +
jmp loc_40B591  +
cmp edi 8 +
lea eax [ebp-120h] +
push edx  +
cmovnb eax [ebp-120h] +
lea ecx [ebp-108h] +
push eax  +
call loc_406570  +
movups xmm0 oword ptr [eax] +
xor ecx ecx +
movups oword ptr [ebp-170h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
mov edx [ebp-1Ch] +
movq qword ptr [ebp-0F0h] xmm0 +
cmp edx 8 +
jb loc_40B5F1  +
mov ecx [ebp-30h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B5E7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-170h] +
movups oword ptr [ebp-30h] xmm0 +
movq xmm0 qword ptr [ebp-0F0h] +
mov byte ptr [ebp-4] 0Dh +
mov edx [ebp-0F4h] +
movq qword ptr [ebp-20h] xmm0 +
cmp edx 8 +
jb loc_40B64D  +
mov ecx [ebp-108h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B643  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 0Ch +
mov edx [ebp-130h] +
mov dword ptr [ebp-0F8h] 0 +
mov dword ptr [ebp-0F4h] 7 +
mov [ebp-108h] ax +
cmp edx 8 +
jb loc_40B6AE  +
mov ecx [ebp-144h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B6A4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-10Ch] +
mov dword ptr [ebp-134h] 0 +
mov dword ptr [ebp-130h] 7 +
mov [ebp-144h] ax +
cmp edx 8 +
jb loc_40B70F  +
mov ecx [ebp-120h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B705  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-12Ch] +
lea edx [ebp-30h] +
sub esp 8 +
call loc_4144B0  +
mov edx [ebp-1Ch] +
add esp 8 +
cmp edx 8 +
jb loc_40B75D  +
mov ecx [ebp-30h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40B753  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40B7E5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-20h] 0 +
lea ecx [ebp-0E0h] +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
call sub_40B7F0  +
push dword ptr [ebp-0E4h]  +
call sub_4322BA  +
add esp 4 +
jmp loc_40B7B9  +
cmp dword ptr [edi+14h] 8 +
jb loc_40B794  +
mov edi [edi] +
push esi  +
push edi  +
push offset aFailedToInst_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 20h +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 10h  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_463E50 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+esi-6Ch] eax +
lea ecx [esi-50h] +
call loc_40D190  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_463E08 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-6Ch] eax +
mov eax [esi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-58h] offset off_463E68 +
mov eax [esi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-5Ch] eax +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_463E58 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-6Ch] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F538  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
xorps xmm0 xmm0 +
movq qword ptr [ebp-3Ch] xmm0 +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-38h] 0 +
mov byte ptr [ebp-34h] 0 +
mov dword ptr [ebp-3Ch] 0 +
push esi  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4] 1 +
call loc_414E60  +
test al al +
jnz loc_40B94A  +
cmp dword ptr [esi+14h] 8 +
jb loc_40B91C  +
mov esi [esi] +
push esi  +
push offset aInvalidXmlS  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov edi 2 +
jmp loc_40BAD0  +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 3 +
push eax  +
push esi  +
mov ecx edi +
call loc_40C1D0  +
test al al +
jnz loc_40B99F  +
push offset aPackageFullNam  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov edi 2 +
jmp loc_40BA82  +
cmp dword ptr [ebp-18h] 8 +
lea ecx [ebp-40h] +
mov esi [edi+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push ecx  +
lea ecx [ebp-30h] +
mov dword ptr [ebp-30h] 0 +
push ecx  +
push eax  +
mov ecx esi +
mov dword ptr [ebp-40h] 0 +
call ds:off_4522C0  +
call esi  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_40BA08  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aSuccessfullyUn  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 1Ch +
jmp loc_40BA82  +
mov ecx [ebp-30h] +
test ecx ecx +
jz loc_40BA52  +
mov edx [ebp-40h] +
test edx edx +
jz loc_40BA52  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push ecx  +
push edi  +
push eax  +
push offset aFailedToUninst  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
push dword ptr [ebp-40h]  +
call sub_4322BA  +
add esp 2Ch +
jmp loc_40BA82  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edi  +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aFailedToUnin_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 20h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_40BABC  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BAB2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40BB2F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov dword ptr [ebp-4] 5 +
mov esi [ebp-38h] +
test esi esi +
jz loc_40BAF0  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-34h] 0 +
jz loc_40BAFC  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40BB10  +
mov ecx [esi] +
push esi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
push offset loc_44F613  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 0B8h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-4Ch] ecx +
mov edi [ebx+8] +
mov dword ptr [ebp-48h] 0 +
cmp dword ptr [edi+10h] 0 +
jnz loc_40BB9E  +
mov eax 2 +
jmp loc_40C196  +
push 118h  +
call sub_42C7DB  +
mov esi eax +
add esp 4 +
mov [ebp-0C8h] esi +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-64h] +
push 1  +
xor eax eax +
mov dword ptr [ebp-54h] 0 +
push offset a1  +
mov dword ptr [ebp-50h] 7 +
mov [ebp-64h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0C4h] +
push 9  +
xor eax eax +
mov dword ptr [ebp-48h] 1 +
push offset aReg_dword  +
mov dword ptr [ebp-0B4h] 0 +
mov dword ptr [ebp-0B0h] 7 +
mov [ebp-0C4h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 2 +
lea ecx [ebp-0ACh] +
push 13h  +
xor eax eax +
mov dword ptr [ebp-48h] 3 +
push offset aAllowalltruste  +
mov dword ptr [ebp-9Ch] 0 +
mov dword ptr [ebp-98h] 7 +
mov [ebp-0ACh] ax +
call loc_406450  +
mov dword ptr [ebp-4] 3 +
lea ecx [ebp-94h] +
push 38h  +
xor eax eax +
mov dword ptr [ebp-48h] 7 +
push offset aSoftwareMicr_1  +
mov dword ptr [ebp-84h] 0 +
mov dword ptr [ebp-80h] 7 +
mov [ebp-94h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 4 +
lea ecx [ebp-7Ch] +
push 1  +
xor eax eax +
mov dword ptr [ebp-48h] 0Fh +
push offset a2  +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-68h] 7 +
mov [ebp-7Ch] ax +
call loc_406450  +
push ecx  +
push 1  +
lea eax [ebp-64h] +
mov dword ptr [ebp-4] 5 +
push eax  +
lea eax [ebp-0C4h] +
mov dword ptr [ebp-48h] 1Fh +
push eax  +
lea eax [ebp-0ACh] +
mov ecx esi +
push eax  +
lea eax [ebp-94h] +
push eax  +
lea eax [ebp-7Ch] +
push eax  +
call loc_403EB0  +
mov esi eax +
mov [ebp-48h] esi +
mov dword ptr [ebp-4] 9 +
mov edx [ebp-68h] +
cmp edx 8 +
jb loc_40BD3A  +
mov ecx [ebp-7Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BD30  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-4] 8 +
mov edx [ebp-80h] +
cmp edx 8 +
jb loc_40BD7E  +
mov ecx [ebp-94h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BD74  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-4] 7 +
mov edx [ebp-98h] +
cmp edx 8 +
jb loc_40BDC5  +
mov ecx [ebp-0ACh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BDBB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-4] 6 +
mov edx [ebp-0B0h] +
cmp edx 8 +
jb loc_40BE0C  +
mov ecx [ebp-0C4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BE02  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-50h] +
cmp edx 8 +
jb loc_40BE4D  +
mov ecx [ebp-64h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BE43  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [esi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-48h] +
call esi  +
test eax eax +
jz loc_40BE90  +
push offset aFailedToEnable  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov eax 1 +
jmp loc_40C196  +
push offset aSuccessfullyEn  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-18h] 0 +
movq qword ptr [ebp-20h] xmm0 +
add esp 18h +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-4] 0Bh +
xor eax eax +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 7 +
mov [ebp-38h] ax +
push 1Eh  +
push offset aCommandHduwpre  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 0Ch +
call loc_406450  +
mov eax [ebp-1Ch] +
lea ecx [ebp-38h] +
push ecx  +
cmp eax [ebp-18h] +
jz loc_40BF1E  +
mov ecx eax +
call sub_406290  +
add dword ptr [ebp-1Ch] 18h +
jmp loc_40BF27  +
push eax  +
lea ecx [ebp-20h] +
call loc_408850  +
push edi  +
mov edx offset aPackagefulln_0 +
lea ecx [ebp-64h] +
call loc_4067D0  +
mov esi eax +
add esp 4 +
lea eax [ebp-38h] +
cmp eax esi +
jz loc_40BF9F  +
mov edx [ebp-24h] +
cmp edx 8 +
jb loc_40BF7B  +
mov ecx [ebp-38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BF71  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1B6  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [esi] +
xor eax eax +
movups oword ptr [ebp-38h] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [ebp-28h] xmm0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov edx [ebp-50h] +
cmp edx 8 +
jb loc_40BFD9  +
mov ecx [ebp-64h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40BFCF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1B6  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-1Ch] +
lea ecx [ebp-38h] +
push ecx  +
cmp eax [ebp-18h] +
jz loc_40BFF2  +
mov ecx eax +
call sub_406290  +
add dword ptr [ebp-1Ch] 18h +
jmp loc_40BFFB  +
push eax  +
lea ecx [ebp-20h] +
call loc_408850  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-3Ch] 0 +
movq qword ptr [ebp-44h] xmm0 +
mov dword ptr [ebp-44h] 0 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov esi [ebp-4Ch] +
lea eax [ebp-44h] +
push ecx  +
push eax  +
sub esp 8 +
mov byte ptr [ebp-4] 0Dh +
add esi 2Ch +
lea edx [ebp-20h] +
mov ecx esi +
call loc_41E9F0  +
add esp 10h +
test al al +
jnz loc_40C080  +
cmp dword ptr [edi+14h] 8 +
jb loc_40C04A  +
mov edi [edi] +
cmp dword ptr [esi+14h] 8 +
jb loc_40C052  +
mov esi [esi] +
push 0FFFFFFFFh  +
push edi  +
push esi  +
push offset aFailedToLaun_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 24h +
mov edi 1 +
jmp loc_40C0FC  +
cmp dword ptr [edi+14h] 8 +
jb loc_40C088  +
mov edi [edi] +
push 0FFFFFFFFh  +
push edi  +
push offset aCompletedHdhel  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
mov edi [ebp-48h] +
add esp 20h +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_40C0D2  +
mov eax 28h +
mov ecx offset aFailedToDisabl +
jmp loc_40C0DC  +
mov eax 1Eh +
mov ecx offset aSuccessfullyRe +
push ecx  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push eax  +
call loc_412B30  +
add esp 18h +
xor edi edi +
lea ecx [ebp-44h] +
call loc_40D930  +
mov edx [ebp-24h] +
cmp edx 8 +
jb loc_40C13E  +
mov ecx [ebp-38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C134  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-20h] +
test ecx ecx +
jz loc_40C194  +
mov edx [ebp-1Ch] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-18h] +
mov eax 2AAAAAABh +
mov esi [ebp-20h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_40C18A  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C1BB  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F6AA  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-0B8h] ecx +
mov eax [ebp+0Ch] +
xorps xmm0 xmm0 +
mov ebx [ebp+8] +
movlpd oword ptr [ebp-18h] xmm0 +
push 40h  +
mov [ebp-0BCh] ebx +
mov [ebp-0C0h] eax +
mov byte ptr [ebp-95h] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
call sub_42C7DB  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-50h] 0 +
mov dword ptr [ebp-4Ch] 7 +
mov [ebp-60h] ax +
mov [ebp-38h] eax +
mov dword ptr [ebp-34h] 7 +
mov [ebp-48h] ax +
mov [ebp-20h] eax +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
mov [ebp-80h] eax +
mov dword ptr [ebp-7Ch] 7 +
mov [ebp-90h] ax +
mov [ebp-68h] eax +
mov dword ptr [ebp-64h] 7 +
mov [ebp-78h] ax +
lea eax [ebp-18h] +
mov byte ptr [ebp-4] 5 +
push eax  +
push ebx  +
call loc_40C970  +
push 4  +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
push offset aName  +
lea ecx [ebp-0B4h] +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
call loc_406450  +
lea eax [ebp-0B4h] +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-18h] +
call loc_40DAB0  +
lea ecx [ebp-60h] +
cmp ecx eax +
jz loc_40C311  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_40C305  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-60h] +
call loc_406450  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40C355  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C34B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C946  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 7  +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
push offset aVersion  +
lea ecx [ebp-0B4h] +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
call loc_406450  +
lea eax [ebp-0B4h] +
mov byte ptr [ebp-4] 7 +
push eax  +
lea ecx [ebp-18h] +
call loc_40DAB0  +
lea ecx [ebp-48h] +
cmp ecx eax +
jz loc_40C3B4  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_40C3A8  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-48h] +
call loc_406450  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40C3F8  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C3EE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C94B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 15h  +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
push offset aProcessorarchi  +
lea ecx [ebp-0B4h] +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
call loc_406450  +
lea eax [ebp-0B4h] +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [ebp-18h] +
call loc_40DAB0  +
lea ecx [ebp-30h] +
cmp ecx eax +
jz loc_40C457  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_40C44B  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-30h] +
call loc_406450  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40C49B  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C491  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C950  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
push offset aPublisher  +
lea ecx [ebp-0B4h] +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
call loc_406450  +
lea eax [ebp-0B4h] +
mov byte ptr [ebp-4] 9 +
push eax  +
lea ecx [ebp-18h] +
call loc_40DAB0  +
lea ecx [ebp-90h] +
cmp ecx eax +
jz loc_40C500  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_40C4F1  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-90h] +
call loc_406450  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40C544  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C53A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C955  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-0A4h] 0 +
push offset aResourceid  +
lea ecx [ebp-0B4h] +
mov dword ptr [ebp-0A0h] 7 +
mov [ebp-0B4h] ax +
call loc_406450  +
lea eax [ebp-0B4h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea ecx [ebp-18h] +
call loc_40DAB0  +
lea ecx [ebp-78h] +
cmp ecx eax +
jz loc_40C5A3  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_40C597  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-78h] +
call loc_406450  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-0A0h] +
cmp edx 8 +
jb loc_40C5E7  +
mov ecx [ebp-0B4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C5DD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95A  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-38h] +
mov edx 2 +
add ecx [ebp-20h] +
mov eax [ebp-50h] +
add eax 14h +
add eax ecx +
xor ecx ecx +
mov [ebp-94h] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
add esp 4 +
mov [ebp-9Ch] eax +
cmp dword ptr [ebp-64h] 8 +
lea edi [ebp-78h] +
lea esi [ebp-90h] +
cmovnb edi [ebp-78h] +
lea ebx [ebp-94h] +
cmp dword ptr [ebp-7Ch] 8 +
lea edx [ebp-30h] +
push ebx  +
cmovnb esi [ebp-90h] +
lea ecx [ebp-48h] +
push dword ptr [ebp-9Ch]  +
cmp dword ptr [ebp-1Ch] 8 +
lea eax [ebp-60h] +
push edi  +
cmovnb edx [ebp-30h] +
cmp dword ptr [ebp-34h] 8 +
push esi  +
cmovnb ecx [ebp-48h] +
mov esi [ebp-0B8h] +
cmp dword ptr [ebp-4Ch] 8 +
push edx  +
cmovnb eax [ebp-60h] +
mov esi [esi+1Ch] +
push ecx  +
push eax  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ebx [ebp-0BCh] +
add esp 1Ch +
cmp eax 7 +
jnz loc_40C724  +
mov eax [ebp-94h] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
push dword ptr [ebp-9Ch]  +
call sub_435D95  +
add esp 8 +
mov [ebp-9Ch] eax +
cmp dword ptr [ebp-64h] 8 +
lea edi [ebp-78h] +
lea esi [ebp-90h] +
cmovnb edi [ebp-78h] +
lea ebx [ebp-94h] +
cmp dword ptr [ebp-7Ch] 8 +
lea edx [ebp-30h] +
push ebx  +
cmovnb esi [ebp-90h] +
lea ecx [ebp-48h] +
push dword ptr [ebp-9Ch]  +
cmp dword ptr [ebp-1Ch] 8 +
lea eax [ebp-60h] +
push edi  +
cmovnb edx [ebp-30h] +
cmp dword ptr [ebp-34h] 8 +
push esi  +
cmovnb ecx [ebp-48h] +
cmp dword ptr [ebp-4Ch] 8 +
push edx  +
cmovnb eax [ebp-60h] +
push ecx  +
push eax  +
mov eax [ebp-0B8h] +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ebx [ebp-0BCh] +
add esp 1Ch +
test eax eax +
jnz loc_40C753  +
mov ecx [ebp-9Ch] +
mov edx ecx +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_40C733  +
sub edx esi +
sar edx 1 +
push edx  +
push ecx  +
mov ecx [ebp-0C0h] +
call loc_406450  +
mov bl 1 +
jmp loc_40C785  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40C75B  +
mov ebx [ebx] +
push ebx  +
push offset aFailedToCrea_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdpimuwphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
mov bl [ebp-95h] +
add esp 1Ch +
push dword ptr [ebp-9Ch]  +
call sub_4322BA  +
mov edx [ebp-64h] +
add esp 4 +
cmp edx 8 +
jb loc_40C7CD  +
mov ecx [ebp-78h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C7C3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-7Ch] +
xor eax eax +
mov dword ptr [ebp-68h] 0 +
mov dword ptr [ebp-64h] 7 +
mov [ebp-78h] ax +
cmp edx 8 +
jb loc_40C81E  +
mov ecx [ebp-90h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C814  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-1Ch] +
xor eax eax +
mov dword ptr [ebp-80h] 0 +
mov dword ptr [ebp-7Ch] 7 +
mov [ebp-90h] ax +
cmp edx 8 +
jb loc_40C86F  +
mov ecx [ebp-30h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C865  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-34h] +
xor eax eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
cmp edx 8 +
jb loc_40C8BD  +
mov ecx [ebp-48h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C8B3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-4Ch] +
xor eax eax +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 7 +
mov [ebp-48h] ax +
cmp edx 8 +
jb loc_40C907  +
mov ecx [ebp-60h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_40C8FD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40C95F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-50h] 0 +
mov [ebp-60h] ax +
lea eax [ebp-18h] +
push eax  +
mov ecx eax +
mov dword ptr [ebp-4Ch] 7 +
call loc_4087E0  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F718  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ecx [ebp+0Ch] +
xorps xmm0 xmm0 +
mov eax [ebp+8] +
movq qword ptr [ebp-24h] xmm0 +
mov [ebp-64h] ecx +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-20h] 0 +
mov byte ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-24h] 0 +
xor esi esi +
mov dword ptr [ebp-4] 1 +
mov [ebp-2Ch] esi +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
push eax  +
mov [ebp-28h] esi +
call loc_414E60  +
test al al +
jnz loc_40C9EC  +
xor bl bl +
jmp loc_40CBE7  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-24h] +
call sub_416200  +
mov esi [ebp-2Ch] +
lea eax [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_40CA1F  +
mov eax [esi] +
push esi  +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-24h] +
call loc_415FF0  +
xor ebx ebx +
mov byte ptr [ebp-4] 4 +
cmp [ebp-28h] ebx +
jle loc_40CBCA  +
mov byte ptr [ebp-4] 2 +
mov bl 1 +
mov eax [ebp-18h] +
test eax eax +
jz loc_40CBE7  +
mov ecx [eax] +
push eax  +
mov edi [ecx+8] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_40CBFF  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 8 +
mov esi [ebp-20h] +
test esi esi +
jz loc_40CC1F  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-1Ch] 0 +
jz loc_40CC2B  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40CC3F  +
mov ecx [esi] +
push esi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
add ebx [ebp+arg_C] +
push esi  +
adc eax [ebp+arg_10] +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [esp+28h+var_14] eax +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+28h+var_10] eax +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40CCAB  +
cmp [edi+38h] ecx +
jnb loc_40CCAB  +
mov [edi+38h] ecx +
mov eax [edi+0Ch] +
mov edx [eax] +
mov eax [edi+38h] +
mov [esp+28h+var_8] eax +
sub eax edx +
mov [esp+28h+var_18] edx +
cdq   +
cmp [esp+28h+var_14] edx +
ja loc_40CD48  +
jb loc_40CCCE  +
cmp ebx eax +
ja loc_40CD48  +
mov edx [ebp+arg_1C] +
mov eax ebx +
or eax [esp+28h+var_14] +
jz loc_40CCEE  +
test dl 1 +
jz loc_40CCE5  +
cmp [esp+28h+var_10] 0 +
jz loc_40CD48  +
test dl 2 +
jz loc_40CCEE  +
test ecx ecx +
jz loc_40CD48  +
mov eax [esp+28h+var_18] +
add eax ebx +
test dl 1 +
jz loc_40CD13  +
cmp [esp+28h+var_10] 0 +
jz loc_40CD13  +
mov edx [edi+1Ch] +
mov [edx] eax +
mov edx [esp+28h+var_8] +
sub edx eax +
mov eax [edi+2Ch] +
mov [eax] edx +
mov edx [ebp+arg_1C] +
test dl 2 +
jz loc_40CD3D  +
test ecx ecx +
jz loc_40CD3D  +
mov eax [edi+30h] +
mov ecx [edi+20h] +
mov edx [eax] +
mov eax [edi+10h] +
add edx [ecx] +
mov ecx [esp+28h+var_18] +
mov [eax] ecx +
add ecx ebx +
mov eax [edi+20h] +
sub edx ecx +
mov [eax] ecx +
mov eax [edi+30h] +
mov [eax] edx +
mov eax [esp+28h+var_14] +
mov [esi] ebx +
mov [esi+4] eax +
jmp loc_40CD55  +
mov dword ptr [esi] 0FFFFFFFFh +
mov dword ptr [esi+4] 0FFFFFFFFh +
mov dword ptr [esi+8] 0 +
xorps xmm0 xmm0 +
mov dword ptr [esi+0Ch] 0 +
mov eax esi +
pop edi  +
movq qword ptr [esi+10h] xmm0 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
mov edi [eax] +
mov eax [esi+20h] +
mov [esp+28h+var_1C] edi +
mov ecx [eax] +
test ecx ecx +
jz loc_40CDA8  +
cmp [esi+38h] ecx +
jnb loc_40CDA8  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov ebx [ebp+arg_10] +
mov edx [eax] +
mov eax [esi+38h] +
mov [esp+28h+var_4] eax +
sub eax edx +
mov [esp+28h+var_10] eax +
mov eax [ebp+arg_C] +
mov [esp+28h+var_C] edx +
sub eax 0 +
jz loc_40CE2B  +
sub eax 1 +
jz loc_40CDE2  +
sub eax 1 +
jnz loc_40CED6  +
mov eax [esp+28h+var_10] +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_40CE3C  +
mov eax ebx +
and eax 3 +
cmp al 3 +
jz loc_40CED6  +
test bl 1 +
jz loc_40CE0B  +
test edi edi +
jnz loc_40CE00  +
test edx edx +
jnz loc_40CED6  +
mov eax edi +
sub eax edx +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_40CE3C  +
test bl 2 +
jz loc_40CED6  +
test ecx ecx +
jnz loc_40CE20  +
test edx edx +
jnz loc_40CED6  +
mov eax ecx +
sub eax edx +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_40CE3C  +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+10h] xmm0 +
mov eax [esp+28h+var_14] +
mov edi [esp+28h+var_18] +
add edi [ebp+arg_4] +
adc eax [ebp+arg_8] +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+var_10] +
cdq   +
cmp [esp+28h+var_18] edx +
ja loc_40CED6  +
jb loc_40CE5B  +
cmp edi eax +
ja loc_40CED6  +
mov edx [esp+28h+var_1C] +
mov eax edi +
or eax [esp+28h+var_18] +
jz loc_40CE79  +
test bl 1 +
jz loc_40CE70  +
test edx edx +
jz loc_40CED6  +
test bl 2 +
jz loc_40CE79  +
test ecx ecx +
jz loc_40CED6  +
mov eax [esp+28h+var_C] +
add eax edi +
mov [esp+28h+var_10] eax +
test bl 1 +
jz loc_40CE9C  +
test edx edx +
jz loc_40CE9C  +
mov edx [esi+1Ch] +
mov [edx] eax +
mov edx [esp+28h+var_4] +
sub edx eax +
mov eax [esi+2Ch] +
mov [eax] edx +
test bl 2 +
jz loc_40CEC8  +
test ecx ecx +
jz loc_40CEC8  +
mov eax [esi+30h] +
mov ecx [esi+20h] +
mov edx [eax] +
mov eax [esi+10h] +
add edx [ecx] +
mov ecx [esp+28h+var_C] +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [esp+28h+var_10] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+30h] +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov ecx [esp+28h+var_18] +
mov [eax] edi +
mov [eax+4] ecx +
jmp loc_40CEE6  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
pop edi  +
xorps xmm0 xmm0 +
mov dword ptr [eax+8] 0 +
pop esi  +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edi [ecx+1Ch] +
mov edx [edi] +
test edx edx +
jz loc_40CF60  +
mov eax [ecx+2Ch] +
mov eax [eax] +
add eax edx +
cmp edx eax +
jnb loc_40CF2C  +
movzx eax byte ptr [edx] +
pop edi  +
pop esi  +
retn   +
mov eax [ecx+20h] +
mov eax [eax] +
test eax eax +
jz loc_40CF60  +
test byte ptr [ecx+3Ch] 4 +
jnz loc_40CF60  +
mov esi [ecx+38h] +
cmp esi eax +
cmovb esi eax +
cmp esi edx +
jbe loc_40CF60  +
mov [ecx+38h] esi +
mov eax [edi] +
sub esi eax +
mov [edi] eax +
mov eax [ecx+2Ch] +
pop edi  +
mov [eax] esi +
mov eax [ecx+1Ch] +
pop esi  +
mov eax [eax] +
movzx eax byte ptr [eax] +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [ecx+1Ch] +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_40CFBC  +
mov eax [ecx+0Ch] +
cmp esi [eax] +
jbe loc_40CFBC  +
mov edx [ebp+arg_0] +
cmp edx 0FFFFFFFFh +
jz loc_40CF97  +
cmp dl [esi-1] +
jz loc_40CF97  +
test byte ptr [ecx+3Ch] 2 +
jnz loc_40CFBC  +
mov eax [ecx+2Ch] +
inc dword ptr [eax]  +
mov eax [ecx+1Ch] +
dec dword ptr [eax]  +
cmp edx 0FFFFFFFFh +
jz loc_40CFAD  +
mov ecx [ecx+1Ch] +
mov ecx [ecx] +
mov [ecx] dl +
xor eax eax +
cmp edx 0FFFFFFFFh +
pop esi  +
cmovz edx eax +
mov eax edx +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
test byte ptr [ebx+3Ch] 2 +
jnz loc_40D174  +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_40CFF6  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebx+20h] +
mov edi [eax] +
mov eax [ebx+30h] +
mov edx [eax] +
lea ecx [edx+edi] +
test edi edi +
jz loc_40D02E  +
cmp edi ecx +
jnb loc_40D02E  +
lea ecx [edx-1] +
mov [eax] ecx +
mov edx [ebx+20h] +
mov eax [ebp+8] +
mov esi [edx] +
lea ecx [esi+1] +
mov [edx] ecx +
lea ecx [edi+1] +
pop edi  +
mov [esi] al +
pop esi  +
mov [ebx+38h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebx+0Ch] +
mov eax [eax] +
sub ecx eax +
neg edi  +
mov [ebp-4] eax +
sbb edi edi +
and edi ecx +
cmp edi 20h +
jnb loc_40D058  +
mov eax 20h +
push eax  +
mov [ebp-8] eax +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_40D0BB  +
cmp edi 3FFFFFFFh +
jnb loc_40D082  +
lea eax [edi+edi] +
mov [ebp-8] eax +
cmp eax 1000h +
jnb loc_40D096  +
test eax eax +
jz loc_40D07E  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_40D0BB  +
xor esi esi +
jmp loc_40D0BB  +
cmp edi 7FFFFFFFh +
jnb loc_40D174  +
mov eax 7FFFFFFFh +
mov [ebp-8] eax +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40D180  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_40D185  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
push edi  +
push dword ptr [ebp-4]  +
push esi  +
call loc_42DC40  +
lea edx [edi+esi] +
mov ecx esi +
lea eax [edx+1] +
sub ecx edx +
add ecx [ebp-8] +
add esp 0Ch +
mov [ebx+38h] eax +
mov eax [ebx+10h] +
mov [eax] esi +
mov eax [ebx+20h] +
mov [eax] edx +
mov eax [ebx+30h] +
mov [eax] ecx +
test byte ptr [ebx+3Ch] 4 +
jz loc_40D102  +
mov eax [ebx+0Ch] +
mov [eax] esi +
mov eax [ebx+1Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+2Ch] +
mov [eax] esi +
jmp loc_40D120  +
mov eax [ebx+1Ch] +
mov edx [ebx+38h] +
mov ecx [eax] +
mov eax [ebx+0Ch] +
sub ecx [ebp-4] +
add ecx esi +
sub edx ecx +
mov [eax] esi +
mov eax [ebx+1Ch] +
mov [eax] ecx +
mov eax [ebx+2Ch] +
mov [eax] edx +
mov eax [ebx+3Ch] +
test al 1 +
jz loc_40D151  +
mov eax [ebp-4] +
cmp edi 1000h +
jb loc_40D144  +
mov ecx [eax-4] +
add edi 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D185  +
mov eax ecx +
push edi  +
push eax  +
call sub_42CA5C  +
mov eax [ebx+3Ch] +
add esp 8 +
or eax 1 +
mov [ebx+3Ch] eax +
mov eax [ebx+30h] +
pop edi  +
pop esi  +
dec dword ptr [eax]  +
mov ecx [ebx+20h] +
pop ebx  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+8] +
mov [edx] al +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_4028F0  +
call sub_432491  +
push ebx  +
push esi  +
mov esi ecx +
test byte ptr [esi+3Ch] 1 +
mov dword ptr [esi] offset off_463E10 +
jz loc_40D1EB  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D1B2  +
mov eax [esi+30h] +
mov edx [eax] +
add edx ecx +
jmp loc_40D1BC  +
mov eax [esi+2Ch] +
mov ecx [esi+1Ch] +
mov edx [eax] +
add edx [ecx] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub edx eax +
cmp edx 1000h +
jb loc_40D1E1  +
mov ecx [eax-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40D279  +
mov eax ecx +
push edx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov ebx [esi+34h] +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_463D94 +
test ebx ebx +
jz loc_40D276  +
push edi  +
mov edi [ebx+4] +
test edi edi +
jz loc_40D26A  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40D26A  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push 8  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_432491  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebp  +
retn 20h  +
***
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ebx +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_4] edx +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax edi +
mov [esp+20h+var_8] eax +
test ebx ebx +
jl loc_40D3D6  +
jg loc_40D334  +
test edi edi +
jz loc_40D3D6  +
call sub_40E8C0  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_C] eax +
test eax eax +
jl loc_40D387  +
jg loc_40D34B  +
test esi esi +
jz loc_40D387  +
cmp ebx eax +
jg loc_40D35B  +
jl loc_40D355  +
cmp edi esi +
jnb loc_40D35B  +
mov esi edi +
mov [esp+20h+var_C] ebx +
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov eax [esp+28h+var_10] +
mov eax [eax+20h] +
push dword ptr [eax]  +
call loc_42DC40  +
mov ecx [esp+2Ch+var_10] +
add esp 0Ch +
sub edi esi +
sbb ebx [esp+20h+var_C] +
mov eax [ecx+30h] +
sub [eax] esi +
mov eax [ecx+20h] +
add [eax] esi +
jmp loc_40D3B9  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [esp+20h+var_10] +
push ecx  +
mov eax [eax] +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [esp+24h+var_10] +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_40D3CE  +
mov ecx [esp+24h+var_14] +
add edi 0FFFFFFFFh +
mov esi 1 +
adc ebx 0FFFFFFFFh +
add [ebp+arg_0] esi +
test ebx ebx +
jg loc_40D334  +
jl loc_40D3CE  +
test edi edi +
jnz loc_40D334  +
mov eax [esp+24h+var_C] +
mov edx [esp+24h+var_8] +
sub eax edi +
pop edi  +
pop esi  +
sbb edx ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ebx +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_4] edx +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax edi +
mov [esp+20h+var_8] eax +
test ebx ebx +
jl loc_40D4CA  +
jg loc_40D424  +
test edi edi +
jz loc_40D4CA  +
call sub_40E8E0  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_C] eax +
test eax eax +
jl loc_40D479  +
jg loc_40D43B  +
test esi esi +
jz loc_40D479  +
cmp ebx eax +
jg loc_40D44B  +
jl loc_40D445  +
cmp edi esi +
jnb loc_40D44B  +
mov esi edi +
mov [esp+20h+var_C] ebx +
mov eax [esp+20h+var_10] +
push esi  +
mov eax [eax+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_42DC40  +
mov ecx [esp+2Ch+var_10] +
add esp 0Ch +
sub edi esi +
sbb ebx [esp+20h+var_C] +
mov eax [ecx+2Ch] +
sub [eax] esi +
mov eax [ecx+1Ch] +
add [eax] esi +
mov eax [ebp+arg_0] +
jmp loc_40D4AB  +
mov eax [esp+20h+var_10] +
mov eax [eax] +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [esp+20h+var_10] +
call esi  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_40D4C2  +
mov eax [ebp+arg_0] +
add edi 0FFFFFFFFh +
mov esi 1 +
adc ebx 0FFFFFFFFh +
mov [eax] cl +
mov ecx [esp+20h+var_10] +
add eax esi +
mov [ebp+arg_0] eax +
test ebx ebx +
jg loc_40D424  +
jl loc_40D4C2  +
test edi edi +
jnz loc_40D424  +
mov eax [esp+20h+var_8] +
mov edx [esp+20h+var_4] +
sub eax edi +
pop edi  +
pop esi  +
sbb edx ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi ecx +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_40D4FF  +
pop edi  +
or eax eax +
pop esi  +
retn   +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
pop edi  +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
retn 4  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_463E08 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_463E68 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_463E58 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F777  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_18] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov edx [edi] +
xor ebx ebx +
mov [ebp+var_34] edi +
mov [ebp+var_38] ebx +
mov [ebp+var_40] edi +
mov eax [edx+4] +
mov eax [eax+edi+38h] +
mov [ebp+var_24] eax +
test eax eax +
jz loc_40D61F  +
mov eax [eax] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_24] +
call esi  +
mov edx [edi] +
mov [ebp+var_4] 0 +
mov eax [edx+4] +
cmp dword ptr [eax+edi+0Ch] 0 +
lea ecx [eax+edi] +
jz loc_40D637  +
xor al al +
jmp loc_40D65B  +
mov eax [ecx+3Ch] +
test eax eax +
jz loc_40D659  +
cmp eax edi +
jz loc_40D659  +
mov ecx eax +
call sub_40F880  +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
jmp loc_40D65B  +
mov al 1 +
mov [ebp+var_3C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_40D838  +
mov eax [ecx+30h] +
mov ebx [eax+4] +
mov [ebp+var_30] ebx +
mov [ebp+var_44] ebx +
mov eax [ebx] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
push 0  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 2 +
call sub_42ABB7  +
mov byte ptr [ebp+var_4] 3 +
mov ecx dword_47071C +
mov eax dword_4706E0 +
mov [ebp+var_1C] eax +
mov [ebp+var_24] ecx +
test ecx ecx +
jnz loc_40D6E4  +
push ecx  +
lea ecx [ebp+var_24] +
call sub_42ABB7  +
cmp dword_47071C 0 +
jnz loc_40D6D3  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_47071C eax +
lea ecx [ebp+var_24] +
call sub_42AC0F  +
mov ecx dword_47071C +
mov [ebp+var_24] ecx +
cmp ecx [ebx+0Ch] +
jnb loc_40D70C  +
mov eax [ebx+8] +
mov ebx [eax+ecx*4] +
test ebx ebx +
jz loc_40D70E  +
mov esi [ebp+var_30] +
test ebx ebx +
jnz loc_40D78E  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40D72C  +
mov ebx eax +
jmp loc_40D78E  +
xor ebx ebx +
mov esi [ebp+var_30] +
cmp byte ptr [esi+14h] 0 +
jz loc_40D6F6  +
call sub_42ADDE  +
mov ebx [ebp+var_24] +
cmp ebx [eax+0Ch] +
jnb loc_40D6FE  +
mov eax [eax+8] +
mov ebx [eax+ebx*4] +
jmp loc_40D6F6  +
push 8  +
call sub_42C7DB  +
mov ebx eax +
add esp 4 +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_4] 4 +
mov eax [esi+18h] +
test eax eax +
jnz loc_40D749  +
lea eax [esi+1Ch] +
push eax  +
lea ecx [ebp+var_7C] +
call loc_408FE0  +
lea ecx [ebp+var_7C] +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx] offset off_453C08 +
call sub_409090  +
mov [ebp+var_1C] ebx +
push ebx  +
mov byte ptr [ebp+var_4] 5 +
call sub_42ADB2  +
mov eax [ebx] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov dword_4706E0 ebx +
lea ecx [ebp+var_2C] +
call sub_42AC0F  +
mov ecx [ebp+var_30] +
mov eax [ecx] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_30] +
call esi  +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_40D7C5  +
mov eax [eax] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_1C] +
call esi  +
mov eax [edi] +
push [ebp+arg_0]  +
mov ecx [eax+4] +
add ecx edi +
mov byte ptr [ebp+var_4] 6 +
mov esi [ebx] +
mov byte ptr [ebp+var_28] 0 +
mov al [ecx+40h] +
mov esi [esi+24h] +
mov byte ptr [ebp+var_1C] al +
lea eax [ebp+var_20] +
push [ebp+var_1C]  +
push ecx  +
push dword ptr [ecx+38h]  +
mov ecx esi +
push [ebp+var_28]  +
push eax  +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
xor ebx ebx +
mov edx 4 +
cmp byte ptr [ebp+var_20] bl +
mov [ebp+var_4] 1 +
cmovnz ebx edx +
jmp loc_40D83D  +
mov edx [ebp-34h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_40D82B +
retn   +
mov ebx [ebp-38h] +
mov edi [ebp-34h] +
mov dword ptr [ebp-4] 1 +
mov edx 4 +
mov eax [edi] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx edi +
cmp [ecx+38h] eax +
cmovnz edx eax +
or edx [ecx+0Ch] +
or edx ebx +
push edx  +
call loc_409430  +
mov [ebp+var_4] 8 +
call sub_42AFFA  +
test al al +
jnz loc_40D870  +
mov ecx edi +
call sub_40F960  +
mov byte ptr [ebp+var_4] 9 +
mov eax [edi] +
mov eax [eax+4] +
mov ebx [eax+edi+38h] +
test ebx ebx +
jz loc_40D892  +
mov edx [ebx] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_18] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_463E58 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F7A0  +
mov eax large fs:0 +
push eax  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_40D9A6  +
push ebx  +
mov ebx [edi+4] +
cmp esi ebx +
jz loc_40D952  +
mov ecx esi +
call loc_410A80  +
add esi 50h +
cmp esi ebx +
jnz loc_40D942  +
mov esi [edi] +
mov ecx [edi+8] +
mov eax 66666667h +
sub ecx esi +
imul  ecx +
pop ebx  +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea eax [eax+eax*4] +
shl eax 4 +
cmp eax 1000h +
jb loc_40D988  +
mov ecx [esi-4] +
add eax 23h +
sub esi ecx +
add esi 0FFFFFFFCh +
cmp esi 1Fh +
ja loc_40D9A9  +
mov esi ecx +
push eax  +
push esi  +
call sub_42CA5C  +
mov dword ptr [edi] 0 +
add esp 8 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
pop esi  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F7D0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-14h] edi +
mov ebx [ebp+8] +
lea eax [ebp-28h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
call sub_407190  +
mov esi [ebp-20h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40DA22  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_40DA02  +
mov edx [esi+10h] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_40DA0C  +
mov ecx [ebx] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [ebx+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_40DA90  +
cmp dword ptr [edi+4] 3FFFFFFh +
jz loc_40DAA7  +
mov ebx [edi] +
mov [ebp-1Ch] edi +
mov dword ptr [ebp-4] 0 +
push 40h  +
mov dword ptr [ebp-18h] 0 +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-18h] edi +
push dword ptr [ebp-10h]  +
lea ecx [edi+10h] +
mov dword ptr [ebp-4] 1 +
call sub_406290  +
mov ecx [ebp-14h] +
xor eax eax +
push edi  +
push dword ptr [ebp-24h]  +
mov dword ptr [edi+38h] 0 +
push dword ptr [ebp-28h]  +
mov dword ptr [edi+3Ch] 7 +
mov [edi+28h] ax +
mov [edi] ebx +
mov [edi+4] ebx +
mov [edi+8] ebx +
mov [edi+0Ch] ax +
call sub_406D40  +
mov esi eax +
lea eax [esi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_402990  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F7F8  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-14h] ecx +
mov edi [ebx+8] +
lea eax [ebp-20h] +
push edi  +
push eax  +
call sub_407190  +
mov esi [ebp-18h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40DB34  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_40DB10  +
mov edx [esi+10h] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_40DB1A  +
mov ecx [edi] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [edi+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_40DBBE  +
mov eax [ebp-14h] +
cmp dword ptr [eax+4] 3FFFFFFh +
jz loc_40DBD7  +
mov esi [eax] +
mov [ebp-28h] eax +
mov dword ptr [ebp-4] 0 +
push 40h  +
mov dword ptr [ebp-24h] 0 +
call sub_42C7DB  +
add esp 4 +
xor ecx ecx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+24h] 0 +
movups xmm0 oword ptr [edi] +
push eax  +
push dword ptr [ebp-1Ch]  +
movups oword ptr [eax+10h] xmm0 +
movq xmm0 qword ptr [edi+10h] +
push dword ptr [ebp-20h]  +
movq qword ptr [eax+20h] xmm0 +
mov [edi] cx +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [eax+38h] ecx +
mov [eax+28h] cx +
mov dword ptr [eax+3Ch] 7 +
mov [eax] esi +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] cx +
mov ecx [ebp-14h] +
call sub_406D40  +
mov esi eax +
lea eax [esi+28h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call loc_402990  +
pop esi  +
retn   +
***
push ecx  +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ecx+10h] +
cmp edx esi +
ja loc_40DC25  +
mov [ecx+10h] edx +
cmp dword ptr [ecx+14h] 10h +
jb loc_40DC1A  +
mov ecx [ecx] +
mov byte ptr [ecx+edx] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ecx+14h] +
push edi  +
mov edi edx +
sub eax esi +
sub edi esi +
cmp edi eax +
ja loc_40DC5B  +
cmp dword ptr [ecx+14h] 10h +
mov [ecx+10h] edx +
jb loc_40DC3E  +
mov ecx [ecx] +
movsx eax [ebp+arg_4] +
add esi ecx +
push edi  +
push eax  +
push esi  +
call sub_42E740  +
add esp 0Ch +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push dword ptr [ebp+arg_4]  +
mov byte ptr [ebp+var_4] 0 +
push edi  +
push [ebp+var_4]  +
push edi  +
call loc_4103B0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call loc_40D190  +
test [ebp+arg_0] 1 +
jz loc_40DC9C  +
push 44h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
mov ebx [edi+34h] +
mov dword ptr [edi] offset off_463D94 +
test ebx ebx +
jz loc_40DD08  +
mov eax [ebx+4] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_40DCFD  +
mov eax [eax] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_4] +
call esi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_40DCFC  +
mov ecx [eax] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_4] +
call esi  +
pop esi  +
push 8  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_40DD19  +
push 38h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-68h] +
mov ecx esi +
call sub_40B7F0  +
test [ebp+arg_0] 1 +
jz loc_40DD52  +
push 0B0h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F820  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi-20h] +
lea edi [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_463E08 +
mov eax [edi] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+esi-24h] eax +
mov eax [esi-10h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-10h] offset off_463E68 +
mov eax [esi-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-14h] eax +
mov eax [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_463E58 +
mov eax [esi-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-24h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40DE00  +
push 68h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-8] +
lea esi [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_463E68 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40DE87  +
push 50h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-18h] +
lea esi [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_463E58 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40DF07  +
push 60h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40ECD0  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F848  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
mov edx [ebp+14h] +
mov [ebp-48h] eax +
mov [ebp-40h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0Fh +
mov byte ptr [ebp-30h] 0 +
mov dword ptr [ebp-4] 0 +
mov eax [edx+14h] +
mov ecx [edx+18h] +
and eax 3000h +
mov edx [edx+1Ch] +
mov [ebp-3Ch] ecx +
test edx edx +
jg loc_40E06E  +
jl loc_40E05D  +
test ecx ecx +
jnz loc_40E06E  +
cmp eax 2000h +
jz loc_40E06E  +
mov ecx 6 +
xor edx edx +
mov [ebp-3Ch] ecx +
mov [ebp-34h] edx +
mov esi ecx +
cmp eax 2000h +
jnz loc_40E0CA  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_467E20 +
comisd xmm0 ds:qword_467E08 +
jbe loc_40E0CA  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_435E4A  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
add esi eax +
xor eax eax +
lea ecx [ebp-30h] +
add esi 32h +
push 0  +
setb al  +
neg eax  +
or eax esi +
push eax  +
call sub_40DC00  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 4Ch  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40F690  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_408AE0  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_40F1D0  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_40E176  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40E16C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40E195  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F848  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
mov edx [ebp+14h] +
mov [ebp-48h] eax +
mov [ebp-40h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0Fh +
mov byte ptr [ebp-30h] 0 +
mov dword ptr [ebp-4] 0 +
mov eax [edx+14h] +
mov ecx [edx+18h] +
and eax 3000h +
mov edx [edx+1Ch] +
mov [ebp-3Ch] ecx +
test edx edx +
jg loc_40E21E  +
jl loc_40E20D  +
test ecx ecx +
jnz loc_40E21E  +
cmp eax 2000h +
jz loc_40E21E  +
mov ecx 6 +
xor edx edx +
mov [ebp-3Ch] ecx +
mov [ebp-34h] edx +
mov esi ecx +
cmp eax 2000h +
jnz loc_40E27A  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_467E20 +
comisd xmm0 ds:qword_467E08 +
jbe loc_40E27A  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_435E4A  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
add esi eax +
xor eax eax +
lea ecx [ebp-30h] +
add esi 32h +
push 0  +
setb al  +
neg eax  +
or eax esi +
push eax  +
call sub_40DC00  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 0  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40F690  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_408AE0  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_40F1D0  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_40E326  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40E31C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40E345  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40ECD0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40ECD0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40ECD0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_40ECD0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F880  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-2Ch] ecx +
mov ebx [ebp+14h] +
mov al [ebp+18h] +
mov edi [ebp+8] +
mov [ebp-40h] edi +
test dword ptr [ebx+14h] 4000h +
mov [ebp-30h] al +
jnz loc_40E5BF  +
movzx eax byte ptr [ebp+1Ch] +
mov esi [ecx] +
push eax  +
push dword ptr [ebp-30h]  +
mov esi [esi+24h] +
mov ecx esi +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call ds:off_4522C0  +
mov ecx [ebp-2Ch] +
call esi  +
mov eax edi +
jmp loc_40E771  +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp-38h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_4101A0  +
mov edi eax +
add esp 4 +
mov eax [ebp-38h] +
mov [ebp-34h] edi +
test eax eax +
jz loc_40E625  +
mov edx [eax] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-38h] +
call esi  +
mov edi eax +
test edi edi +
jz loc_40E622  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-34h] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [ebp+1Ch] 0 +
lea eax [ebp-58h] +
mov dword ptr [ebp-4] 1 +
mov esi [edi] +
push eax  +
jz loc_40E691  +
mov esi [esi+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-28h] +
call loc_40FBD0  +
mov edx [ebp-44h] +
cmp edx 10h +
jb loc_40E6A0  +
mov ecx [ebp-58h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40E696  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40E78F  +
jmp loc_40E696  +
mov esi [esi+18h] +
jmp loc_40E64D  +
***
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebx+24h] 0 +
mov esi [ebx+20h] +
mov edi [ebp-18h] +
jl loc_40E6BA  +
jg loc_40E6B2  +
test esi esi +
jz loc_40E6BA  +
cmp esi edi +
jbe loc_40E6BA  +
sub esi edi +
jmp loc_40E6BC  +
xor esi esi +
mov eax [ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_40E6F1  +
push esi  +
push dword ptr [ebp-30h]  +
lea eax [ebp-3Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_40EBB0  +
add esp 18h +
xor esi esi +
mov ecx [eax] +
mov [ebp+0Ch] ecx +
mov edx [eax+4] +
mov [ebp+10h] edx +
jmp loc_40E6F7  +
mov edx [ebp+10h] +
mov ecx [ebp+0Ch] +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push edi  +
cmovnb eax [ebp-28h] +
mov edi [ebp-2Ch] +
push eax  +
push edx  +
push ecx  +
lea eax [ebp-3Ch] +
push eax  +
push edi  +
call sub_40EC30  +
push esi  +
push dword ptr [ebp-30h]  +
mov esi [ebp-40h] +
mov ecx [eax] +
mov [ebp+0Ch] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push edi  +
mov [ebp+10h] eax +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
call sub_40EBB0  +
mov edx [ebp-14h] +
add esp 30h +
cmp edx 10h +
jb loc_40E76F  +
mov ecx [ebp-28h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40E765  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40E78F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44F820  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_42AFFA  +
test al al +
jnz loc_40E7D6  +
mov ecx [esi] +
call sub_40F960  +
mov [ebp+var_4] 0 +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_40E7FD  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F8B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov ebx [ebp+arg_0] +
mov [edi] ebx +
mov edx [ebx] +
mov eax [edx+4] +
mov eax [eax+ebx+38h] +
mov [ebp+var_10] eax +
test eax eax +
jz loc_40E866  +
mov eax [eax] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_10] +
call esi  +
mov edx [ebx] +
mov [ebp+var_4] 0 +
mov eax [edx+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
lea ecx [eax+ebx] +
jz loc_40E87E  +
xor al al +
jmp loc_40E89F  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_40E89D  +
cmp ecx ebx +
jz loc_40E89D  +
call sub_40F880  +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
setz al  +
jmp loc_40E89F  +
mov al 1 +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_40E8CF  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_40E8EF  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
push [ebp+arg_4]  +
xor edx edx +
mov eax 4 +
cmp [ecx+38h] edx +
cmovnz eax edx +
or eax [ecx+0Ch] +
or eax [ebp+arg_0] +
push eax  +
call loc_409430  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov al [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-1] al +
push edi  +
mov edi [ebp+8] +
mov ecx [esi+14h] +
mov [ebp-0Ch] ecx +
cmp edi ecx +
ja loc_40E977  +
mov ebx esi +
cmp ecx 10h +
jb loc_40E957  +
mov ebx [esi] +
push edi  +
movsx ecx al +
push ecx  +
push ebx  +
mov [esi+10h] edi +
call sub_42E740  +
add esp 0Ch +
mov byte ptr [edi+ebx] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp edi 7FFFFFFFh +
ja loc_40EA63  +
mov ebx edi +
or ebx 0Fh +
cmp ebx 7FFFFFFFh +
jbe loc_40E997  +
mov ebx 7FFFFFFFh +
jmp loc_40E9B5  +
mov edx ecx +
mov eax 7FFFFFFFh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_40E9AD  +
mov ebx 7FFFFFFFh +
jmp loc_40E9B5  +
lea eax [edx+ecx] +
cmp ebx eax +
cmovb ebx eax +
xor ecx ecx +
mov eax ebx +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
cmp ecx 1000h +
jb loc_40E9EE  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_40EA68  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_40EA5E  +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
jmp loc_40EA01  +
test ecx ecx +
jz loc_40E9FF  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
mov ecx eax +
jmp loc_40EA01  +
xor ecx ecx +
movsx eax byte ptr [ebp-1] +
push edi  +
push eax  +
push ecx  +
mov [ebp-8] ecx +
mov [esi+10h] edi +
mov [esi+14h] ebx +
call sub_42E740  +
mov ebx [ebp-8] +
add esp 0Ch +
mov eax [ebp-0Ch] +
mov byte ptr [edi+ebx] 0 +
cmp eax 10h +
jb loc_40EA51  +
lea ecx [eax+1] +
mov eax [esi] +
cmp ecx 1000h +
jb loc_40EA47  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40EA5E  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
mov [esi] ebx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406FE0  +
call loc_4028F0  +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_452C90 +
jz loc_40EA8D  +
push 8  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+14h] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_4] esi +
lea edi [ecx+1] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EAC5  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_4081D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_4] esi +
lea edi [ecx+1] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EB15  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_4081D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+8] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_4] esi +
lea edi [ecx+1] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EB65  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_4081D0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_14] +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_C] +
test ebx ebx +
jz loc_40EC1E  +
push esi  +
test edi edi +
jz loc_40EC11  +
mov eax [edi+20h] +
cmp dword ptr [eax] 0 +
jz loc_40EBF3  +
mov ecx [edi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_40EBF3  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+arg_10] +
mov [edx] al +
movzx eax al +
jmp loc_40EC09  +
mov edx [edi] +
movzx eax [ebp+arg_10] +
push eax  +
mov esi [edx+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_40EC15  +
mov byte ptr [ebp+arg_8] 1 +
sub ebx 1 +
jnz loc_40EBC7  +
mov eax [ebp+var_4] +
pop esi  +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_14] +
mov [ebp+var_C] eax +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_8] esi +
push edi  +
mov edi [ebp+arg_C] +
test ebx ebx +
jz loc_40ECB2  +
nop   +
test edi edi +
jz loc_40ECA2  +
mov al [esi] +
mov [ebp+var_1] al +
mov eax [edi+20h] +
cmp dword ptr [eax] 0 +
jz loc_40EC81  +
mov ecx [edi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_40EC81  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_1] +
mov [edx] al +
movzx eax al +
jmp loc_40EC9A  +
mov edx [edi] +
movzx eax [ebp+var_1] +
push eax  +
mov esi [edx+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp+var_8] +
mov edi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_40ECA6  +
mov byte ptr [ebp+arg_8] 1 +
inc esi  +
mov [ebp+var_8] esi +
sub ebx 1 +
jnz loc_40EC50  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F900  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+24h] +
mov eax [ebp+0Ch] +
mov edi [ebp+18h] +
mov edx [ebp+20h] +
mov [ebp-60h] eax +
mov [ebp-54h] edi +
mov [ebp-58h] edx +
test ebx ebx +
jz loc_40ED25  +
mov al [edx] +
cmp al 2Bh +
jz loc_40ED1E  +
cmp al 2Dh +
jnz loc_40ED25  +
mov ecx 1 +
jmp loc_40ED27  +
xor ecx ecx +
mov eax [edi+14h] +
and eax 0E00h +
mov [ebp-48h] ecx +
cmp eax 800h +
jnz loc_40ED55  +
lea esi [ecx+2] +
cmp esi ebx +
ja loc_40ED55  +
cmp byte ptr [edx+ecx] 30h +
jnz loc_40ED55  +
mov al [edx+ecx+1] +
cmp al 78h +
jz loc_40ED52  +
cmp al 58h +
jnz loc_40ED55  +
mov [ebp-48h] esi +
mov eax [edi+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40FC50  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-4Ch] +
mov [ebp-44h] eax +
test edi edi +
jz loc_40EDBC  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40EDBC  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push 0  +
push ebx  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov byte ptr [ebp-28h] 0 +
call loc_40E930  +
mov edi [ebp-44h] +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 1 +
mov edx [ebp-58h] +
cmp dword ptr [ebp-14h] 10h +
mov ecx [edi] +
cmovnb eax [ebp-28h] +
push eax  +
lea eax [edx+ebx] +
mov esi [ecx+1Ch] +
mov ecx esi +
push eax  +
push edx  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edx [ebp-54h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-58h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_4101A0  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-58h] +
add esp 4 +
mov [ebp-44h] edi +
test eax eax +
jz loc_40EE72  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-58h] +
call esi  +
mov edi eax +
test edi edi +
jz loc_40EE6F  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-44h] +
mov eax [edi] +
lea ecx [ebp-40h] +
push ecx  +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov byte ptr [ebp-4] 3 +
lea edi [ebp-40h] +
cmp dword ptr [ebp-2Ch] 10h +
cmovnb edi [ebp-40h] +
mov al [edi] +
cmp al 7Fh +
jz loc_40EF5F  +
test al al +
jle loc_40EF5F  +
mov eax [ebp-44h] +
mov eax [eax] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-44h] +
call esi  +
mov [ebp-44h] al +
mov al [edi] +
cmp al 7Fh +
jz loc_40EF5F  +
mov edx [ebp-48h] +
mov ecx [ebp-54h] +
mov eax [ebp-18h] +
mov [ebp-44h] eax +
cmp dword ptr [ecx+24h] 0 +
mov edi [ecx+20h] +
jl loc_40EF82  +
jg loc_40EF7A  +
test edi edi +
jz loc_40EF82  +
cmp edi eax +
jbe loc_40EF82  +
sub edi eax +
jmp loc_40EF84  +
xor edi edi +
mov eax [ecx+14h] +
mov esi [ebp+1Ch] +
and eax 1C0h +
mov ebx [ebp+8] +
cmp eax 40h +
jz loc_40F01F  +
cmp eax 100h +
jz loc_40EFE2  +
push edi  +
push esi  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EBB0  +
mov esi [ebp-48h] +
xor edi edi +
cmp dword ptr [ebp-14h] 10h +
push esi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_40EC30  +
add esp 30h +
jmp loc_40F042  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push edx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EC30  +
push edi  +
push esi  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push ecx  +
push eax  +
push ebx  +
call sub_40EBB0  +
add esp 30h +
xor edi edi +
jmp loc_40F03F  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push edx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EC30  +
add esp 18h +
mov esi [ebp-48h] +
mov edx [eax] +
cmp dword ptr [ebp-14h] 10h +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub [ebp-44h] esi +
add eax esi +
push dword ptr [ebp-44h]  +
mov [ebp+14h] ecx +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
push eax  +
push ebx  +
call sub_40EC30  +
mov edx [ebp-54h] +
mov esi [ebp-60h] +
push edi  +
mov ecx [eax] +
push dword ptr [ebp+1Ch]  +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_40EBB0  +
mov edx [ebp-2Ch] +
add esp 30h +
cmp edx 10h +
jb loc_40F0CC  +
mov ecx [ebp-40h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40F0C2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40F131  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0Fh +
mov byte ptr [ebp-40h] 0 +
cmp edx 10h +
jb loc_40F10E  +
mov ecx [ebp-28h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40F104  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40F131  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_406760  +
call sub_432491  +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea ecx [esi+1] +
test al 20h +
jz loc_40F159  +
mov byte ptr [ecx] 2Bh +
inc ecx  +
test al 8 +
jz loc_40F161  +
mov byte ptr [ecx] 23h +
inc ecx  +
mov edi [ebp+arg_8] +
lea edx [ecx+1] +
push ebx  +
mov bl [edi] +
cmp bl 4Ch +
jz loc_40F173  +
mov [ecx] bl +
jmp loc_40F17E  +
mov byte ptr [ecx] 49h +
mov word ptr [edx] 3436h +
add edx 2 +
mov ecx eax +
and ecx 0E00h +
pop ebx  +
cmp ecx 400h +
jnz loc_40F19D  +
mov al 6Fh +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
cmp ecx 800h +
jz loc_40F1B4  +
mov al [edi+1] +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
shl al 3 +
not al  +
and al 20h +
or al 58h +
mov [edx] al +
mov eax esi +
pop edi  +
mov byte ptr [edx+1] 0 +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F950  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx [ebp+24h] +
mov eax [ebp+0Ch] +
mov edi [ebp+18h] +
mov ebx [ebp+20h] +
mov [ebp-6Ch] eax +
mov [ebp-64h] edi +
mov [ebp-58h] ebx +
mov [ebp-4Ch] edx +
test edx edx +
jz loc_40F228  +
mov al [ebx] +
cmp al 2Bh +
jz loc_40F221  +
cmp al 2Dh +
jnz loc_40F228  +
mov ecx 1 +
jmp loc_40F22A  +
xor ecx ecx +
mov eax [edi+14h] +
and eax 3000h +
mov [ebp-48h] ecx +
cmp eax 3000h +
jz loc_40F243  +
mov eax offset aEe +
jmp loc_40F264  +
lea esi [ecx+2] +
cmp esi edx +
ja loc_40F25F  +
cmp byte ptr [ebx+ecx] 30h +
jnz loc_40F25F  +
mov al [ebx+ecx+1] +
cmp al 78h +
jz loc_40F25C  +
cmp al 58h +
jnz loc_40F25F  +
mov [ebp-48h] esi +
mov eax offset aPp +
push eax  +
push ebx  +
call sub_435DA0  +
mov [ebp-68h] eax +
mov eax 2Eh +
mov [ebp-14h] ax +
call sub_435E22  +
mov eax [eax] +
mov al [eax] +
mov [ebp-14h] al +
lea eax [ebp-14h] +
push eax  +
push ebx  +
call sub_435DA0  +
mov ebx eax +
add esp 10h +
mov eax [edi+30h] +
mov edi [eax+4] +
mov [ebp-5Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-60h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_40FC50  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-5Ch] +
mov [ebp-50h] eax +
test edi edi +
jz loc_40F2F9  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40F2F9  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp-4Ch] +
lea ecx [ebp-2Ch] +
push 0  +
push esi  +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0Fh +
mov byte ptr [ebp-2Ch] 0 +
call loc_40E930  +
mov edx [ebp-58h] +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-4] 1 +
mov edi [ebp-50h] +
cmp dword ptr [ebp-18h] 10h +
cmovnb eax [ebp-2Ch] +
mov ecx [edi] +
push eax  +
lea eax [edx+esi] +
push eax  +
mov esi [ecx+1Ch] +
mov ecx esi +
push edx  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edx [ebp-64h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-50h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_4101A0  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-50h] +
add esp 4 +
mov [ebp-58h] edi +
test eax eax +
jz loc_40F3B1  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-50h] +
call esi  +
mov [ebp-50h] eax +
test eax eax +
jz loc_40F3B1  +
mov eax [eax] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-50h] +
call esi  +
mov eax [edi] +
lea ecx [ebp-44h] +
push ecx  +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov byte ptr [ebp-4] 3 +
mov eax [edi] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-4Ch] +
mov [ebp-50h] al +
cmp ebx edi +
jz loc_40F40C  +
mov eax [ebp-58h] +
mov eax [eax] +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-58h] +
call esi  +
cmp dword ptr [ebp-18h] 10h +
mov cl al +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
cmp ebx edi +
mov [eax+ebx] cl +
cmovz ebx [ebp-68h] +
lea edi [ebp-44h] +
cmp dword ptr [ebp-30h] 10h +
cmovnb edi [ebp-44h] +
mov al [edi] +
cmp al 7Fh +
jz loc_40F4B4  +
mov edx [ebp-48h] +
test al al +
jle loc_40F4B7  +
movsx ecx al +
mov eax ebx +
sub eax edx +
cmp ecx eax +
jnb loc_40F4B7  +
sub ebx ecx +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jb loc_40F681  +
mov edx [ebp-18h] +
mov eax edx +
sub eax ecx +
cmp eax 1 +
jb loc_40F489  +
lea eax [ecx+1] +
cmp edx 10h +
lea esi [ebp-2Ch] +
mov [ebp-1Ch] eax +
cmovnb esi [ebp-2Ch] +
sub ecx ebx +
add esi ebx +
inc ecx  +
push ecx  +
push esi  +
lea eax [esi+1] +
push eax  +
call loc_42E1C0  +
movsx ecx byte ptr [ebp-50h] +
add esp 0Ch +
movzx eax cl +
shl cx 8 +
or cx ax +
mov [esi] cl +
jmp loc_40F4A0  +
push dword ptr [ebp-50h]  +
mov byte ptr [ebp-68h] 0 +
lea ecx [ebp-2Ch] +
push 1  +
push ebx  +
push dword ptr [ebp-68h]  +
push 1  +
call loc_410670  +
cmp byte ptr [edi+1] 0 +
lea eax [edi+1] +
cmovg edi eax +
mov al [edi] +
cmp al 7Fh +
jnz loc_40F425  +
mov edx [ebp-48h] +
mov ecx [ebp-64h] +
mov eax [ebp-1Ch] +
mov [ebp-4Ch] eax +
cmp dword ptr [ecx+24h] 0 +
mov edi [ecx+20h] +
jl loc_40F4D7  +
jg loc_40F4CF  +
test edi edi +
jz loc_40F4D7  +
cmp edi eax +
jbe loc_40F4D7  +
sub edi eax +
jmp loc_40F4D9  +
xor edi edi +
mov eax [ecx+14h] +
mov esi [ebp+1Ch] +
and eax 1C0h +
mov ebx [ebp+8] +
cmp eax 40h +
jz loc_40F574  +
cmp eax 100h +
jz loc_40F537  +
push edi  +
push esi  +
push dword ptr [ebp+14h]  +
lea eax [ebp-60h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EBB0  +
mov esi [ebp-48h] +
xor edi edi +
cmp dword ptr [ebp-18h] 10h +
push esi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-60h] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_40EC30  +
add esp 30h +
jmp loc_40F597  +
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-60h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EC30  +
push edi  +
push esi  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-60h] +
push ecx  +
push eax  +
push ebx  +
call sub_40EBB0  +
add esp 30h +
xor edi edi +
jmp loc_40F594  +
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-60h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_40EC30  +
add esp 18h +
mov esi [ebp-48h] +
mov edx [eax] +
cmp dword ptr [ebp-18h] 10h +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
sub [ebp-4Ch] esi +
add eax esi +
push dword ptr [ebp-4Ch]  +
mov [ebp+14h] ecx +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-60h] +
push eax  +
push ebx  +
call sub_40EC30  +
mov edx [ebp-64h] +
mov esi [ebp-6Ch] +
push edi  +
mov ecx [eax] +
push dword ptr [ebp+1Ch]  +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_40EBB0  +
mov edx [ebp-30h] +
add esp 30h +
cmp edx 10h +
jb loc_40F621  +
mov ecx [ebp-44h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40F617  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40F686  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0Fh +
mov byte ptr [ebp-44h] 0 +
cmp edx 10h +
jb loc_40F663  +
mov ecx [ebp-2Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_40F659  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40F686  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_406760  +
call sub_432491  +
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_40F6A9  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_40F6B2  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_40F6C4  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_40F709  +
cmp ecx 2000h +
jz loc_40F711  +
cmp ecx 3000h +
jnz loc_40F6EE  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_40F71E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_40F733  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F980  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_40F794  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F9A0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_10] eax +
push 8  +
mov dword ptr [eax] offset off_463D94 +
call sub_42C7DB  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_42ADE4  +
mov [esi+4] eax +
add esp 8 +
mov eax [ebp+var_10] +
lea edi [eax+14h] +
lea ecx [eax+18h] +
lea edx [eax+24h] +
mov [eax+34h] esi +
lea ebx [eax+4] +
mov [eax+0Ch] ebx +
lea esi [eax+8] +
mov [eax+10h] esi +
mov [eax+1Ch] edi +
mov [eax+20h] ecx +
mov [eax+2Ch] edx +
add eax 28h +
mov [ebp+var_14] ebx +
mov ebx [ebp+var_10] +
mov [ebx+30h] eax +
mov ebx [ebp+var_14] +
mov dword ptr [esi] 0 +
mov dword ptr [ecx] 0 +
mov dword ptr [eax] 0 +
mov eax [ebp+var_10] +
mov dword ptr [ebx] 0 +
mov dword ptr [edi] 0 +
mov dword ptr [edx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F9C8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov eax [eax+4] +
mov ebx [eax+edi+38h] +
test ebx ebx +
jz loc_40F939  +
push edi  +
lea ecx [ebp+var_18] +
call sub_40E810  +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_40F8FC  +
mov eax [ebx] +
mov esi [eax+34h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_40F8FC  +
mov eax [edi] +
push 0  +
mov ecx [eax+4] +
mov eax [ecx+edi+0Ch] +
add ecx edi +
or eax 4 +
push eax  +
call loc_409430  +
mov [ebp+var_4] 1 +
call sub_42AFFA  +
test al al +
jnz loc_40F914  +
mov ecx [ebp+var_18] +
call sub_40F960  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_18] +
mov eax [ecx] +
mov eax [eax+4] +
mov ebx [eax+ecx+38h] +
test ebx ebx +
jz loc_40F939  +
mov edx [ebx] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44FA18  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ecx] +
mov [ebp+var_1C] 0 +
mov eax [eax+4] +
mov dword ptr [ecx+eax] offset off_463E58 +
mov eax [ecx] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-4] eax +
mov eax [ecx] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov ebx [eax+4] +
add ebx ecx +
mov ecx ebx +
call sub_4094B0  +
mov eax [ebp+arg_0] +
mov [ebx+38h] eax +
mov eax [ebx+30h] +
mov dword ptr [ebx+3Ch] 0 +
mov edi [eax+4] +
mov [ebp+var_20] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 1 +
push eax  +
call sub_40FC50  +
mov edi eax +
add esp 4 +
mov ecx [edi] +
push 20h  +
mov esi [ecx+20h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov byte ptr [ebp+var_4] 0 +
mov edi [ebp+var_20] +
mov [ebp+var_11] al +
test edi edi +
jz loc_40FADF  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_40FADC  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov al [ebp+var_11] +
cmp dword ptr [ebx+38h] 0 +
mov [ebx+40h] al +
jnz loc_40FAF8  +
mov eax [ebx+0Ch] +
mov ecx ebx +
push 0  +
or eax 4 +
push eax  +
call loc_409430  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_40FB2E  +
nop   +
mov ecx esi +
call loc_410A80  +
add esi 50h +
cmp esi edi +
jnz loc_40FB20  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
lea edx [eax+eax*4] +
shl edx 4 +
cmp edx 1000h +
jb loc_40FB6B  +
push esi  +
mov esi [ecx-4] +
add edx 23h +
sub ecx esi +
lea eax [ecx-4] +
cmp eax 1Fh +
ja loc_40FB79  +
mov ecx esi +
pop esi  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
pop ebp  +
retn 8  +
***
call sub_432491  +
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_453C38 +
call sub_4322BA  +
push dword ptr [esi+10h]  +
call sub_4322BA  +
push dword ptr [esi+14h]  +
call sub_4322BA  +
add esp 0Ch +
mov dword ptr [esi] offset off_452C90 +
test [ebp+arg_0] 1 +
jz loc_40FBBE  +
push 18h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp esi edi +
jz loc_40FC3F  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40FC0D  +
mov eax [esi] +
inc ecx  +
cmp ecx 1000h +
jb loc_40FC03  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_40FC47  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [esi] 0 +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0Fh +
mov byte ptr [edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_432491  +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FA5F  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 60h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebx+8] +
lea ecx [ebp-20h] +
push 0  +
mov [ebp-18h] edi +
call sub_42ABB7  +
mov dword ptr [ebp-4] 0 +
mov esi dword_46F460 +
mov eax dword_4706E4 +
mov [ebp-24h] eax +
test esi esi +
jnz loc_40FCE6  +
push esi  +
lea ecx [ebp-1Ch] +
call sub_42ABB7  +
cmp dword_46F460 esi +
jnz loc_40FCD8  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_46F460 eax +
lea ecx [ebp-1Ch] +
call sub_42AC0F  +
mov esi dword_46F460 +
mov ecx [edi+4] +
cmp esi [ecx+0Ch] +
jnb loc_40FCFE  +
mov eax [ecx+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_40FDB2  +
jmp loc_40FD00  +
xor edi edi +
cmp byte ptr [ecx+14h] 0 +
jz loc_40FD16  +
call sub_42ADDE  +
cmp esi [eax+0Ch] +
jnb loc_40FD1E  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_40FDB2  +
mov eax [ebp-24h] +
test eax eax +
jz loc_40FD2C  +
mov edi eax +
jmp loc_40FDB2  +
push 18h  +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-24h] edi +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-18h] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40FD55  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_40FD5A  +
lea eax [ecx+1Ch] +
jmp loc_40FD5A  +
mov eax offset unk_462943 +
push eax  +
lea ecx [ebp-6Ch] +
call loc_408FE0  +
lea eax [ebp-38h] +
mov dword ptr [edi+4] 0 +
push eax  +
mov dword ptr [edi] offset off_453BD8 +
call sub_42B10D  +
add esp 4 +
lea ecx [ebp-6Ch] +
movups xmm0 oword ptr [eax] +
movups oword ptr [edi+8] xmm0 +
call sub_409090  +
mov [ebp-18h] edi +
push edi  +
mov byte ptr [ebp-4] 2 +
call sub_42ADB2  +
mov eax [edi] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov dword_4706E4 edi +
lea ecx [ebp-20h] +
call sub_42AC0F  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FAA9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ecx [ebp+8] +
mov [ebp-4] eax +
mov dword ptr [ebp-10h] 1 +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40FE80  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_406570  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FAE0  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-18h] esi +
mov ecx [esi] +
mov [ebp-30h] esi +
mov dword ptr [ebp-34h] 0 +
mov eax [ecx+4] +
mov edi [eax+esi+24h] +
mov ebx [eax+esi+20h] +
test edi edi +
jl loc_40FF14  +
jg loc_40FF0C  +
test ebx ebx +
jz loc_40FF14  +
test edi edi +
jl loc_40FF14  +
jg loc_40FF0C  +
cmp ebx 2 +
jbe loc_40FF14  +
sub ebx 2 +
sbb edi 0 +
jmp loc_40FF22  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-28h] xmm0 +
mov edi [ebp-24h] +
mov ebx [ebp-28h] +
mov eax [esi+eax+38h] +
mov edx ecx +
mov [ebp-2Ch] edi +
mov [ebp-28h] esi +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_40FF4E  +
mov eax [eax] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-1Ch] +
call esi  +
mov esi [ebp-18h] +
mov ecx [esi] +
mov edx ecx +
mov dword ptr [ebp-4] 0 +
mov eax [ecx+4] +
add eax esi +
cmp dword ptr [eax+0Ch] 0 +
jz loc_40FF64  +
xor al al +
jmp loc_40FF89  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_40FF87  +
cmp eax esi +
jz loc_40FF87  +
mov ecx eax +
call sub_40F880  +
mov ecx [esi] +
mov edx ecx +
mov eax [ecx+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
jmp loc_40FF89  +
mov al 1 +
mov [ebp-24h] al +
mov dword ptr [ebp-4] 1 +
test al al +
jnz loc_40FFA1  +
mov edx 4 +
jmp loc_410117  +
***
mov byte ptr [ebp-4] 2 +
mov eax [ecx+4] +
mov eax [eax+esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41002F  +
test edi edi +
jl loc_41002D  +
jg loc_40FFC0  +
test ebx ebx +
jz loc_41002D  +
add ebx 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
mov [ebp-2Ch] edi +
jmp loc_40FFB6  +
***
mov edx [esi] +
mov eax [edx+4] +
push 0  +
push 2  +
push offset a0x  +
mov edi [eax+esi+38h] +
mov eax [edi] +
mov esi [eax+24h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
cmp eax 2 +
jnz loc_4100C3  +
test edx edx +
jnz loc_4100C3  +
mov edi [ebp-2Ch] +
add ebx 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
jmp loc_410060  +
***
mov edx [ebp-30h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_410107 +
retn   +
mov esi [ebp-30h] +
mov edx [ebp-34h] +
mov [ebp-18h] esi +
mov dword ptr [ebp-4] 1 +
mov eax [esi] +
xor edi edi +
push 0  +
mov ecx [eax+4] +
mov eax 4 +
add ecx esi +
cmp [ecx+38h] edi +
cmovnz eax edi +
or eax [ecx+0Ch] +
or eax edx +
push eax  +
call loc_409430  +
mov dword ptr [ebp-4] 4 +
call sub_42AFFA  +
mov edi [ebp-28h] +
test al al +
jnz loc_410152  +
mov ecx edi +
call sub_40F960  +
mov byte ptr [ebp-4] 5 +
mov eax [edi] +
mov eax [eax+4] +
mov edi [eax+edi+38h] +
test edi edi +
jz loc_410189  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov eax [ebp-18h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44FB48  +
mov eax large fs:0 +
push eax  +
sub esp 0CCh +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_14] edi +
mov [ebp+var_20] 0 +
call sub_42ABB7  +
mov [ebp+var_4] 0 +
mov esi dword_470720 +
mov eax dword_4706DC +
mov [ebp+var_20] eax +
test esi esi +
jnz loc_41022C  +
push esi  +
lea ecx [ebp+var_18] +
call sub_42ABB7  +
cmp dword_470720 esi +
jnz loc_41021E  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_470720 eax +
lea ecx [ebp+var_18] +
call sub_42AC0F  +
mov esi dword_470720 +
mov ecx [edi+4] +
cmp esi [ecx+0Ch] +
jnb loc_410244  +
mov eax [ecx+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_410380  +
jmp loc_410246  +
xor edi edi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41025C  +
call sub_42ADDE  +
cmp esi [eax+0Ch] +
jnb loc_410264  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_410380  +
mov eax [ebp+var_20] +
test eax eax +
jz loc_410272  +
mov edi eax +
jmp loc_410380  +
push 18h  +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp+var_18] edi +
mov byte ptr [ebp+var_4] 1 +
xorps xmm0 xmm0 +
mov ecx [ebp+var_14] +
movups oword ptr [edi] xmm0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4102A6  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_4102AB  +
lea eax [ecx+1Ch] +
jmp loc_4102AB  +
mov eax offset unk_462943 +
push eax  +
lea ecx [ebp+var_80] +
call loc_408FE0  +
mov [ebp+var_20] 1 +
mov dword ptr [edi+4] 0 +
mov [ebp+var_4] 3 +
mov dword ptr [edi] offset off_453C38 +
call sub_435E22  +
lea eax [ebp+var_AC] +
push eax  +
call sub_42B276  +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov [ebp+var_14] edi +
lea eax [ebp+var_D8] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
call sub_42B276  +
lea eax [ebp+var_4C] +
push eax  +
push 0  +
push offset unk_462943  +
call loc_410A30  +
mov [edi+8] eax +
lea eax [ebp+var_4C] +
push eax  +
push 0  +
push offset aFalse  +
call loc_410A30  +
mov [edi+10h] eax +
lea eax [ebp+var_4C] +
push eax  +
push 0  +
push offset aTrue_0  +
call loc_410A30  +
add esp 2Ch +
mov [edi+14h] eax +
mov word ptr [edi+0Ch] 2C2Eh +
lea ecx [ebp+var_80] +
mov [ebp+var_4] 0 +
call sub_409090  +
mov [ebp+var_14] edi +
push edi  +
mov byte ptr [ebp+var_4] 6 +
call sub_42ADB2  +
mov eax [edi] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov dword_4706DC edi +
lea ecx [ebp+var_1C] +
call sub_42AC0F  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx ecx +
mov ecx 7FFFFFFFh +
mov eax ecx +
push esi  +
mov esi [ebp+8] +
mov edx [ebx+10h] +
sub eax edx +
mov [ebp-4] edx +
push edi  +
cmp eax esi +
jb loc_4104FF  +
mov edi [ebx+14h] +
lea eax [edx+esi] +
mov esi eax +
mov [ebp-8] eax +
or esi 0Fh +
mov [ebp-0Ch] edi +
cmp esi ecx +
jbe loc_4103EE  +
mov esi ecx +
jmp loc_410406  +
mov eax edi +
shr eax 1 +
sub ecx eax +
cmp edi ecx +
jbe loc_4103FF  +
mov esi 7FFFFFFFh +
jmp loc_410406  +
add eax edi +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
cmp ecx 1000h +
jb loc_410446  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_410504  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_410509  +
mov edx [ebp-4] +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_41045C  +
test ecx ecx +
jz loc_41045A  +
push ecx  +
call sub_42C7DB  +
mov edx [ebp-4] +
add esp 4 +
mov edi eax +
jmp loc_41045C  +
xor edi edi +
mov eax [ebp-8] +
mov [ebx+10h] eax +
movsx eax byte ptr [ebp+14h] +
mov [ebp-4] eax +
mov eax [ebp+10h] +
mov [ebx+14h] esi +
lea esi [edi+edx] +
add eax esi +
mov [ebp-10h] esi +
cmp dword ptr [ebp-0Ch] 10h +
mov [ebp-8] eax +
push edx  +
jb loc_4104D6  +
mov esi [ebx] +
push esi  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-10h]  +
call sub_42E740  +
mov eax [ebp-8] +
add esp 18h +
mov ecx [ebp-0Ch] +
inc ecx  +
mov byte ptr [eax] 0 +
cmp ecx 1000h +
jb loc_4104BF  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_410509  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov [ebx] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebx  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-4]  +
push esi  +
call sub_42E740  +
mov eax [ebp-8] +
add esp 18h +
mov byte ptr [eax] 0 +
mov eax ebx +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call loc_406FE0  +
call loc_4028F0  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+10h] +
push ebx  +
mov ebx ecx +
mov [ebp-10h] eax +
mov ecx 7FFFFFFFh +
mov eax ecx +
push esi  +
mov edx [ebx+10h] +
sub eax edx +
mov esi [ebp+8] +
mov [ebp-8] edx +
push edi  +
cmp eax esi +
jb loc_41065E  +
mov edi [ebx+14h] +
lea eax [edx+esi] +
mov esi eax +
mov [ebp-4] eax +
or esi 0Fh +
mov [ebp-0Ch] edi +
cmp esi ecx +
jbe loc_410554  +
mov esi ecx +
jmp loc_41056C  +
mov eax edi +
shr eax 1 +
sub ecx eax +
cmp edi ecx +
jbe loc_410565  +
mov esi 7FFFFFFFh +
jmp loc_41056C  +
add eax edi +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
cmp ecx 1000h +
jb loc_4105AC  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_410663  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_410668  +
mov edx [ebp-8] +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_4105C2  +
test ecx ecx +
jz loc_4105C0  +
push ecx  +
call sub_42C7DB  +
mov edx [ebp-8] +
add esp 4 +
mov edi eax +
jmp loc_4105C2  +
xor edi edi +
mov eax [ebp-4] +
mov [ebx+10h] eax +
mov eax [ebp+14h] +
mov [ebx+14h] esi +
lea esi [edi+edx] +
add eax esi +
cmp dword ptr [ebp-0Ch] 10h +
mov [ebp-4] eax +
push edx  +
jb loc_410635  +
mov esi [ebx] +
push esi  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+14h]  +
mov eax [ebp-8] +
push dword ptr [ebp-10h]  +
add eax edi +
push eax  +
call loc_42DC40  +
mov eax [ebp-4] +
add esp 18h +
mov ecx [ebp-0Ch] +
inc ecx  +
mov byte ptr [eax] 0 +
cmp ecx 1000h +
jb loc_41061E  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_410668  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov [ebx] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebx  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-10h]  +
push esi  +
call loc_42DC40  +
mov eax [ebp-4] +
add esp 18h +
mov byte ptr [eax] 0 +
mov eax ebx +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call loc_406FE0  +
call loc_4028F0  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 14h +
mov edx [ebp+8] +
push ebx  +
mov ebx ecx +
mov ecx 7FFFFFFFh +
push esi  +
mov eax ecx +
push edi  +
mov esi [ebx+10h] +
sub eax esi +
mov [ebp-4] esi +
cmp eax edx +
jb loc_4107DB  +
mov edi [ebx+14h] +
lea eax [esi+edx] +
mov esi eax +
mov [ebp-8] eax +
or esi 0Fh +
mov [ebp-0Ch] edi +
cmp esi ecx +
jbe loc_4106AE  +
mov esi ecx +
jmp loc_4106C6  +
mov eax edi +
shr eax 1 +
sub ecx eax +
cmp edi ecx +
jbe loc_4106BF  +
mov esi 7FFFFFFFh +
jmp loc_4106C6  +
add eax edi +
cmp esi eax +
cmovb esi eax +
xor ecx ecx +
mov eax esi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
cmp ecx 1000h +
jb loc_410703  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_4107E0  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_4107E5  +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_410716  +
test ecx ecx +
jz loc_410714  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
mov edi eax +
jmp loc_410716  +
xor edi edi +
mov eax [ebp-8] +
mov ecx [ebp-4] +
mov [ebx+10h] eax +
movsx eax byte ptr [ebp+18h] +
mov [ebp-10h] eax +
mov eax [ebp+10h] +
sub ecx eax +
inc ecx  +
mov [ebx+14h] esi +
mov [ebp-4] ecx +
mov ecx [ebp+14h] +
lea esi [edi+eax] +
add ecx esi +
mov [ebp-14h] esi +
cmp dword ptr [ebp-0Ch] 10h +
mov [ebp-8] ecx +
push eax  +
jb loc_4107A7  +
mov esi [ebx] +
push esi  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call sub_42E740  +
push dword ptr [ebp-4]  +
mov eax [ebp+10h] +
add eax esi +
push eax  +
push dword ptr [ebp-8]  +
call loc_42DC40  +
mov ecx [ebp-0Ch] +
add esp 24h +
inc ecx  +
cmp ecx 1000h +
jb loc_410790  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_4107E5  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov [ebx] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebx  +
push edi  +
call loc_42DC40  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-10h]  +
push esi  +
call sub_42E740  +
push dword ptr [ebp-4]  +
mov ecx [ebp+10h] +
add ecx ebx +
push ecx  +
push dword ptr [ebp-8]  +
call loc_42DC40  +
add esp 24h +
mov [ebx] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
call loc_406FE0  +
call loc_4028F0  +
call sub_432491  +
push edi  +
mov edi [ecx] +
test edi edi +
jz loc_41080B  +
mov eax [edi] +
push esi  +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi ecx +
mov [ebp-10h] esi +
mov [ebp-8] ebx +
mov ecx [edi+14h] +
mov eax ecx +
mov edx [edi+10h] +
sub eax edx +
mov [ebp-14h] edx +
mov [ebp-0Ch] ecx +
cmp esi eax +
ja loc_4108CB  +
cmp dword ptr [ebp-0Ch] 8 +
lea eax [esi+edx] +
mov [edi+10h] eax +
mov ecx edi +
mov [ebp-4] edi +
jb loc_410855  +
mov ecx [edi] +
mov [ebp-4] ecx +
lea eax [esi+esi] +
mov [ebp-0Ch] eax +
add eax ebx +
cmp eax ecx +
jbe loc_410879  +
lea eax [ecx+edx*2] +
cmp ebx eax +
ja loc_410879  +
cmp ecx ebx +
ja loc_410870  +
xor ebx ebx +
jmp loc_41087B  +
mov ebx ecx +
sub ebx [ebp-8] +
sar ebx 1 +
jmp loc_41087B  +
mov ebx esi +
lea eax ds:2[edx*2] +
push eax  +
mov eax [ebp-0Ch] +
push ecx  +
add eax ecx +
push eax  +
call loc_42E1C0  +
lea esi [ebx+ebx] +
push esi  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
call loc_42DC40  +
mov eax [ebp-10h] +
mov ecx eax +
sub ecx ebx +
add ecx ecx +
push ecx  +
lea ecx [eax+ebx] +
mov eax [ebp-8] +
lea ecx [eax+ecx*2] +
push ecx  +
mov ecx [ebp-4] +
add ecx esi +
push ecx  +
call loc_42DC40  +
add esp 24h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax 7FFFFFFEh +
sub eax edx +
cmp eax esi +
jb loc_4109D3  +
lea eax [esi+edx] +
mov edx eax +
mov [ebp-10h] eax +
or edx 7 +
cmp edx 7FFFFFFEh +
jbe loc_4108F4  +
mov edx 7FFFFFFEh +
jmp loc_410918  +
mov eax ecx +
shr eax 1 +
mov [ebp-4] eax +
mov eax 7FFFFFFEh +
sub eax [ebp-4] +
cmp ecx eax +
jbe loc_41090E  +
mov edx 7FFFFFFEh +
jmp loc_410918  +
mov eax [ebp-4] +
add eax ecx +
cmp edx eax +
cmovb edx eax +
xor ecx ecx +
mov [ebp-4] edx +
add edx 1 +
setb cl  +
neg ecx  +
or ecx edx +
push ecx  +
mov ecx edi +
call loc_406770  +
cmp dword ptr [ebp-0Ch] 8 +
lea edx [esi+esi] +
mov ecx [ebp-10h] +
mov [edi+10h] ecx +
mov ecx [ebp-4] +
lea esi [eax+esi*2] +
mov [edi+14h] ecx +
mov ecx [ebp-14h] +
push edx  +
push ebx  +
mov [ebp-8] eax +
lea ecx ds:2[ecx*2] +
mov [ebp-14h] esi +
mov [ebp-4] ecx +
push eax  +
jb loc_4109B1  +
mov esi [edi] +
call loc_42DC40  +
push dword ptr [ebp-4]  +
push esi  +
push dword ptr [ebp-14h]  +
call loc_42DC40  +
mov eax [ebp-0Ch] +
add esp 18h +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_410997  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_4109D8  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
mov eax [ebp-8] +
add esp 8 +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call loc_42DC40  +
push dword ptr [ebp-4]  +
push edi  +
push esi  +
call loc_42DC40  +
mov eax [ebp-8] +
add esp 18h +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call loc_406FE0  +
call sub_432491  +
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_410A02  +
push dword ptr [esi+8]  +
call sub_4322BA  +
push dword ptr [esi+10h]  +
call sub_4322BA  +
push dword ptr [esi+14h]  +
call sub_4322BA  +
add esp 0Ch +
pop esi  +
retn   +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax] offset off_463DD4 +
mov dword ptr [eax+4] 5 +
mov eax 1 +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410A40  +
push esi  +
sub eax edx +
push edi  +
push 1  +
lea edi [eax+1] +
push edi  +
call sub_435D2B  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_410A76  +
test edi edi +
jz loc_410A70  +
push edi  +
push dword ptr [ebp+8]  +
push esi  +
call loc_42DC40  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
call sub_42AB0D  +
push esi  +
mov esi ecx +
mov ecx [esi+44h] +
cmp ecx 8 +
jb loc_410ABD  +
mov eax [esi+30h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_410AB3  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410B65  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+40h] 0 +
mov dword ptr [esi+44h] 7 +
mov [esi+30h] ax +
mov ecx [esi+2Ch] +
cmp ecx 8 +
jb loc_410B07  +
mov eax [esi+18h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_410AFD  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410B65  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 7 +
mov [esi+18h] ax +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_410B50  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_410B46  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_410B65  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_432491  +
sub ecx [ecx-4] +
jmp sub_40DE20  +
***
sub ecx [ecx-4] +
jmp sub_40DD30  +
***
sub ecx [ecx-4] +
jmp sub_40DEA0  +
***
sub ecx [ecx-4] +
jmp sub_40DD60  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FB7F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_42C7DB  +
mov esi eax +
add esp 4 +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 0 +
test esi esi +
jz loc_410C23  +
push dword ptr [ebp+8]  +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_410C25  +
cmp [ebp+8] eax +
jnz loc_410C47  +
jmp loc_410C25  +
xor esi esi +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jz loc_410C51  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_410CB4  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_410CAE  +
mov eax [esi] +
test eax eax +
jz loc_410C8C  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_410CA3  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
call ds:VariantClear  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ecx] +
push esi  +
mov [ebp-4] ecx +
mov [ebp-8] ebx +
mov esi [ebx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_410D1F  +
mov ebx ecx +
push edi  +
push dword ptr [esi+8]  +
mov ecx ebx +
push ebx  +
call sub_4089F0  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_408610  +
push 40h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_410CF0  +
mov ebx [ebp-8] +
mov ecx [ebp-4] +
pop edi  +
mov [ebx+4] ebx +
mov [ebx] ebx +
mov [ebx+8] ebx +
pop esi  +
mov dword ptr [ecx+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
mov eax [esi] +
push dword ptr [edi]  +
push dword ptr [eax+4]  +
call sub_410DC0  +
mov ecx [edi] +
mov [ecx+4] eax +
mov eax [esi+4] +
mov esi [edi] +
mov [edi+4] eax +
mov edx [esi+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_410DA7  +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_410D83  +
mov eax [ecx] +
mov edx ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_410D77  +
mov [esi] edx +
mov edx [edi] +
mov ecx [edx+4] +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_410D9E  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_410D93  +
pop edi  +
mov [edx+8] ecx +
pop esi  +
pop ebp  +
retn 8  +
mov [esi] esi +
mov eax [edi] +
pop edi  +
pop esi  +
mov [eax+8] eax +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_44FBB0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] ecx +
mov edx [ebp+arg_0] +
mov al [ebp+arg_8] +
mov byte ptr [ebp+var_1C] al +
mov eax [ecx] +
cmp byte ptr [edx+0Dh] 0 +
mov [ebp+var_24] ecx +
mov [ebp+var_18] edx +
mov [ebp+var_14] eax +
jnz loc_410EA4  +
lea edi [edx+10h] +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0 +
push 40h  +
mov [ebp+var_28] 0 +
call sub_42C7DB  +
mov ebx eax +
add esp 4 +
mov [ebp+var_28] ebx +
lea esi [ebx+10h] +
push edi  +
mov ecx esi +
mov [ebp+var_30] esi +
call sub_406290  +
lea eax [edi+18h] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea ecx [esi+18h] +
call sub_406290  +
mov ecx [ebp+var_14] +
mov edi [ebp+var_18] +
mov eax [ebp+arg_4] +
mov esi [ebp+var_20] +
mov [ebx] ecx +
mov [ebx+8] ecx +
mov word ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
mov al [edi+0Ch] +
mov [ebx+0Ch] al +
cmp byte ptr [ecx+0Dh] 0 +
mov [ebp+var_4] 2 +
push [ebp+var_1C]  +
cmovnz ecx ebx +
push ebx  +
push dword ptr [edi]  +
mov [ebp+var_14] ecx +
mov [ebp+var_18] ecx +
mov ecx esi +
call sub_410DC0  +
push [ebp+var_1C]  +
mov [ebx] eax +
mov ecx esi +
push ebx  +
push dword ptr [edi+8]  +
call sub_410DC0  +
mov [ebx+8] eax +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FC04  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_47072C +
cmp eax [ecx+4] +
jle loc_410F8A  +
push offset dword_47072C  +
call sub_42C50A  +
add esp 4 +
cmp dword_47072C 0FFFFFFFFh +
jnz loc_410F8A  +
mov dword ptr [ebp-4] 0 +
push 40h  +
mov dword_470724 0 +
mov dword_470728 0 +
call sub_42C7DB  +
push offset loc_4517A0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_470724 eax +
call sub_42CA47  +
push offset dword_47072C  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_42C4C0  +
add esp 0Ch +
cmp dword_470728 0 +
jnz loc_41123A  +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a0  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 1 +
push eax  +
mov ecx offset dword_470724 +
call loc_40DAB0  +
push 11h  +
push offset aHkey_classes_r  +
mov ecx eax +
call loc_406450  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_41101E  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411014  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4112C7  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a1  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 2 +
push eax  +
mov ecx offset dword_470724 +
call loc_40DAB0  +
push 11h  +
push offset aHkey_current_u  +
mov ecx eax +
call loc_406450  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_4110A5  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41109B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4112CC  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a2  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 3 +
push eax  +
mov ecx offset dword_470724 +
call loc_40DAB0  +
push 12h  +
push offset aHkey_local_mac  +
mov ecx eax +
call loc_406450  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_41112C  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411122  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4112D1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a3  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 4 +
push eax  +
mov ecx offset dword_470724 +
call loc_40DAB0  +
push 0Ah  +
push offset aHkey_users  +
mov ecx eax +
call loc_406450  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_4111B3  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4111A9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4112D6  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 1  +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
push offset a4  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 7 +
mov [ebp-24h] ax +
call loc_406450  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 5 +
push eax  +
mov ecx offset dword_470724 +
call loc_40DAB0  +
push 13h  +
push offset aHkey_current_c  +
mov ecx eax +
call loc_406450  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-10h] +
cmp edx 8 +
jb loc_41123A  +
mov ecx [ebp-24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411230  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4112DB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push edi  +
lea eax [ebp-18h] +
mov ecx offset dword_470724 +
push eax  +
call sub_407190  +
mov esi [ebp-10h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4112B3  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_41125E  +
mov edx [esi+10h] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_411268  +
mov ecx [edi] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [edi+10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_4112B3  +
cmp esi dword_470724 +
jz loc_4112B3  +
lea eax [esi+28h] +
cmp ebx eax +
jz loc_41129F  +
cmp dword ptr [eax+14h] 8 +
mov edx eax +
jb loc_411294  +
mov edx [eax] +
push dword ptr [eax+10h]  +
mov ecx ebx +
push edx  +
call loc_406450  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi eax +
mov [ebp-110h] eax +
push edi  +
lea edx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_411314  +
sub esi edx +
mov ebx ecx +
sar esi 1 +
cmp dword ptr [ecx+14h] 8 +
jb loc_41132D  +
mov ebx [ecx] +
mov edi [ecx+10h] +
test esi esi +
jz loc_4113B9  +
test edi edi +
jz loc_4113B9  +
push 100h  +
lea eax [ebp-108h] +
push 0  +
push eax  +
call sub_42E740  +
mov eax [ebp-110h] +
add esp 0Ch +
mov ecx eax +
mov dword ptr [ebp-10Ch] 100h +
lea edx [eax+esi*2] +
cmp eax edx +
jz loc_41138E  +
nop   +
movzx eax word ptr [ecx] +
cmp ax [ebp-10Ch] +
jnb loc_4113CF  +
movzx eax al +
add ecx 2 +
mov byte ptr [ebp+eax-108h] 1 +
cmp ecx edx +
jnz loc_411370  +
lea edx [ebx+edi*2] +
mov ecx ebx +
cmp ebx edx +
jnb loc_4113B9  +
mov esi [ebp-10Ch] +
movzx eax word ptr [ecx] +
cmp ax si +
jnb loc_4113B2  +
cmp byte ptr [ebp+eax-108h] 0 +
jnz loc_411426  +
add ecx 2 +
cmp ecx edx +
jb loc_4113A0  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea eax [ebx+edi*2] +
mov edx ebx +
mov [ebp-10Ch] eax +
cmp ebx eax +
jnb loc_411408  +
nop   +
mov eax [ebp-110h] +
mov ecx esi +
test esi esi +
jz loc_4113FD  +
movzx edi word ptr [edx] +
nop   +
cmp [eax] di +
jz loc_411420  +
add eax 2 +
sub ecx 1 +
jnz loc_4113F0  +
add edx 2 +
cmp edx [ebp-10Ch] +
jb loc_4113E0  +
or edx 0FFFFFFFFh +
mov eax edx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub edx ebx +
sar edx 1 +
jmp loc_41140B  +
***
sub ecx ebx +
sar ecx 1 +
mov eax ecx +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov dword ptr [esi] offset off_452C2C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44FC3E  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
xor eax eax +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 7 +
mov [ebx] ax +
mov [ebp+var_4] eax +
mov [ebx+28h] eax +
mov dword ptr [ebx+2Ch] 7 +
mov [ebx+18h] ax +
mov [ebx+40h] eax +
mov dword ptr [ebx+44h] 7 +
mov [ebx+30h] ax +
push 2  +
push offset aNa  +
mov byte ptr [ebp+var_4] 2 +
call loc_406450  +
push 2  +
push offset aNa  +
lea ecx [ebx+18h] +
call loc_406450  +
push 2  +
push offset aNa  +
lea ecx [ebx+30h] +
call loc_406450  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call loc_411550  +
test [ebp+arg_0] 1 +
jz loc_41153C  +
push 68h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+20h] +
mov dword ptr [esi] offset off_463E9C +
call loc_410A80  +
mov ecx [esi+18h] +
cmp ecx 8 +
jb loc_411597  +
mov eax [esi+4] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_41158D  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4115AD  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 7 +
mov [esi+4] ax +
pop esi  +
retn   +
***
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44FC6F  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_470288 +
test eax eax +
jnz loc_41164C  +
push 14h  +
call sub_42C7DB  +
mov edi eax +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
lea esi [edi+8] +
xorps xmm0 xmm0 +
mov [ebp+var_14] esi +
movups oword ptr [edi] xmm0 +
mov dword ptr [edi+10h] 0 +
push 40h  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_42C7DB  +
add esp 8 +
mov dword_470288 edi +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [esi] eax +
mov eax edi +
mov dword ptr [esi+8] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FCB8  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+0Ch] +
call loc_4127A0  +
xor eax eax +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
mov [ebp-4] eax +
mov [ebp-48h] eax +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
push esi  +
push dword ptr [ebp+8]  +
lea ecx [ebx+8] +
mov byte ptr [ebp-4] 1 +
call loc_426260  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebx+8] +
call loc_426E70  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push offset aArgumentsPasse  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 1Ch +
mov dword ptr [ebp-60h] 0 +
xor eax eax +
mov dword ptr [ebp-5Ch] 7 +
lea ecx [ebp-70h] +
mov [ebp-70h] ax +
push 7  +
push offset aCommand  +
call loc_406450  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-70h] +
push eax  +
lea ecx [ebx+8] +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-5Ch] +
cmp edx 8 +
jb loc_411792  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411788  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Eh  +
xor eax eax +
mov dword ptr [ebp-60h] 0 +
push offset aCommandargsxml  +
lea ecx [ebp-70h] +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
call loc_406450  +
lea eax [ebp-58h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-70h] +
push eax  +
lea ecx [ebx+8] +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-5Ch] +
cmp edx 8 +
jb loc_411807  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4117FD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebx+0Ch] 2 +
jl loc_411817  +
cmp dword ptr [ebp-30h] 0 +
jz loc_411817  +
mov bl 1 +
jmp loc_41183C  +
push offset aInvalidArgumen  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
xor bl bl +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_411876  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41186C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-44h] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
cmp edx 8 +
jb loc_4118C0  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4118B6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_4118F6  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4118EC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_411916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44FE54  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 0F0h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-0F8h] esi +
mov eax [ebx+8] +
mov [ebp-100h] eax +
xor eax eax +
mov dword ptr [ebp-44h] 0 +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov [ebp-4] eax +
mov [ebp-0CCh] eax +
mov dword ptr [ebp-0C8h] 7 +
mov [ebp-0DCh] ax +
mov [ebp-0E4h] eax +
mov dword ptr [ebp-0E0h] 7 +
mov [ebp-0F4h] ax +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-2Ch] +
push 7  +
push offset aCommand  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
call loc_406450  +
lea eax [ebp-54h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [esi+8] +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_411A2A  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411A20  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4125E3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Eh  +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
push offset aCommandargsxml  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
call loc_406450  +
lea eax [ebp-0DCh] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [esi+8] +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_411AA2  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411A98  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4125E3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-0CCh] 0 +
jz loc_411AE2  +
push ecx  +
lea edx [ebp-0F4h] +
lea ecx [ebp-0DCh] +
call loc_414730  +
add esp 4 +
test al al +
jnz loc_411AE2  +
cmp dword ptr [ebp-0C8h] 8 +
lea eax [ebp-0DCh] +
mov ecx offset aFailedToLoadCo +
cmovnb eax [ebp-0DCh] +
jmp loc_4124A6  +
mov edi [ebp-40h] +
lea esi [ebp-54h] +
mov eax [ebp-54h] +
cmp edi 8 +
mov ecx [ebp-44h] +
cmovnb esi eax +
cmp ecx 13h +
jnz loc_411C82  +
mov edx ecx +
mov ecx offset aHduwpinstall_0 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_411C7C  +
add ecx 2 +
sub edx 1 +
jnz loc_411B10  +
xor eax eax +
mov [ebp-5Ch] edx +
mov dword ptr [ebp-58h] 7 +
mov [ebp-6Ch] ax +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-2Ch] +
push 9  +
push offset aErrorfile  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
call loc_406450  +
mov byte ptr [ebp-4] 6 +
lea eax [ebp-6Ch] +
mov ecx [ebp-0F8h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ecx+8] +
call sub_426DD0  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_411BAE  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411BA4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4125FE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 50h  +
lea eax [ebp-0C0h] +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov dword ptr [ebp-98h] 0 +
xor eax eax +
mov dword ptr [ebp-84h] 0 +
mov dword ptr [ebp-80h] 7 +
mov [ebp-94h] ax +
mov [ebp-7Ch] eax +
mov [ebp-78h] eax +
mov [ebp-74h] eax +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 9 +
call loc_409710  +
test al al +
jz loc_4125E8  +
lea eax [ebp-6Ch] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea eax [ebp-0F4h] +
push eax  +
lea ecx [ebp-0C0h] +
call loc_40A1F0  +
mov ecx [ebp-100h] +
mov [ecx] eax +
lea ecx [ebp-0C0h] +
call loc_409610  +
mov edx [ebp-58h] +
cmp edx 8 +
jb loc_41248E  +
mov ecx [ebp-6Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_411C66  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4125FE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-0F9h] 1 +
jmp loc_4124CD  +
mov eax [ebp-54h] +
mov ecx [ebp-44h] +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 15h +
jnz loc_411D46  +
mov edx ecx +
mov ecx offset aHduwpuninsta_0 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_411D40  +
add ecx 2 +
sub edx 1 +
jnz loc_411CA0  +
push 50h  +
push edx  +
lea eax [ebp-0C0h] +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov dword ptr [ebp-98h] 0 +
xor eax eax +
mov dword ptr [ebp-84h] 0 +
mov dword ptr [ebp-80h] 7 +
mov [ebp-94h] ax +
mov [ebp-7Ch] eax +
mov [ebp-78h] eax +
mov [ebp-74h] eax +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 0Dh +
call loc_409710  +
test al al +
jz loc_4125E8  +
lea eax [ebp-0F4h] +
mov byte ptr [ebp-4] 0Eh +
push eax  +
lea ecx [ebp-0C0h] +
call loc_40B8B0  +
mov ecx [ebp-100h] +
mov [ecx] eax +
lea ecx [ebp-0C0h] +
call loc_409610  +
mov byte ptr [ebp-0F9h] 1 +
jmp loc_4124CD  +
mov eax [ebp-54h] +
mov ecx [ebp-44h] +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 12h +
jnz loc_411E07  +
mov edx ecx +
mov ecx offset aHduwplaunchp_0 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_411E01  +
add ecx 2 +
sub edx 1 +
jnz loc_411D61  +
push 50h  +
push edx  +
lea eax [ebp-0C0h] +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov dword ptr [ebp-98h] 0 +
xor eax eax +
mov dword ptr [ebp-84h] 0 +
mov dword ptr [ebp-80h] 7 +
mov [ebp-94h] ax +
mov [ebp-7Ch] eax +
mov [ebp-78h] eax +
mov [ebp-74h] eax +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 11h +
call loc_409710  +
test al al +
jz loc_4125E8  +
lea eax [ebp-0F4h] +
mov byte ptr [ebp-4] 12h +
push eax  +
lea ecx [ebp-0C0h] +
call loc_409EB0  +
mov ecx [ebp-100h] +
mov [ecx] eax +
lea ecx [ebp-0C0h] +
call loc_409610  +
mov byte ptr [ebp-0F9h] 1 +
jmp loc_4124CD  +
mov eax [ebp-54h] +
mov ecx [ebp-44h] +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 25h +
jnz loc_411EC9  +
mov edx ecx +
mov ecx offset aHduwpispacka_2 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_411EC3  +
add ecx 2 +
sub edx 1 +
jnz loc_411E22  +
push 50h  +
push edx  +
lea eax [ebp-0C0h] +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov dword ptr [ebp-98h] 0 +
xor eax eax +
mov dword ptr [ebp-84h] 0 +
mov dword ptr [ebp-80h] 7 +
mov [ebp-94h] ax +
mov [ebp-7Ch] eax +
mov [ebp-78h] eax +
mov [ebp-74h] eax +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 15h +
call loc_409710  +
test al al +
jz loc_4125E8  +
push ecx  +
lea eax [ebp-0F4h] +
mov byte ptr [ebp-4] 16h +
push eax  +
lea ecx [ebp-0C0h] +
call loc_409CB0  +
mov ecx [ebp-100h] +
mov [ecx] eax +
lea ecx [ebp-0C0h] +
call loc_409610  +
mov byte ptr [ebp-0F9h] 1 +
jmp loc_4124CD  +
mov eax [ebp-54h] +
mov ecx [ebp-44h] +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 27h +
jnz loc_412042  +
mov edx ecx +
mov ecx offset aHduwp_register +
sub esi ecx +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 14h +
jnz loc_4122E1  +
mov edx ecx +
mov ecx offset aHduwpregiste_0 +
sub esi ecx +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 13h +
jnz loc_41239A  +
mov edx ecx +
mov ecx offset aHdzipcompressf +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_412394  +
add ecx 2 +
sub edx 1 +
jnz loc_412300  +
xorps xmm0 xmm0 +
movups oword ptr [ebp-3Ch] xmm0 +
mov [ebp-30h] edx +
mov byte ptr [ebp-4] 23h +
lea ecx [ebp-3Ch] +
mov [ebp-3Ch] edx +
mov [ebp-38h] edx +
mov [ebp-34h] edx +
call loc_412CE0  +
mov byte ptr [ebp-4] 24h +
mov esi [ebp-34h] +
mov edi [ebp-0F8h] +
test esi esi +
jz loc_41235A  +
push dword ptr [edi+4]  +
mov ecx esi +
push offset loc_412B30  +
call ds:off_4522C0  +
call esi  +
add esp 8 +
push offset aStartingComp_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 18h +
lea eax [edi+8] +
lea ecx [ebp-3Ch] +
push eax  +
call loc_413390  +
push eax  +
push offset aCompletedCompr  +
jmp loc_41244F  +
mov eax [ebp-54h] +
mov ecx [ebp-44h] +
cmp edi 8 +
lea esi [ebp-54h] +
cmovnb esi eax +
cmp ecx 13h +
jnz loc_412497  +
mov edx ecx +
mov ecx offset aHdzipdecompres +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_412497  +
add ecx 2 +
sub edx 1 +
jnz loc_4123C0  +
xorps xmm0 xmm0 +
movups oword ptr [ebp-3Ch] xmm0 +
mov [ebp-30h] edx +
mov byte ptr [ebp-4] 25h +
lea ecx [ebp-3Ch] +
mov [ebp-3Ch] edx +
mov [ebp-38h] edx +
mov [ebp-34h] edx +
call loc_412CE0  +
mov byte ptr [ebp-4] 26h +
mov esi [ebp-34h] +
mov edi [ebp-0F8h] +
test esi esi +
jz loc_41241A  +
push dword ptr [edi+4]  +
mov ecx esi +
push offset loc_412B30  +
call ds:off_4522C0  +
call esi  +
add esp 8 +
push offset aStartingDeComp  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 18h +
lea eax [edi+8] +
lea ecx [ebp-3Ch] +
push eax  +
call loc_413720  +
push eax  +
push offset aCompletedDeCom  +
mov ecx [ebp-100h] +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 1Eh  +
mov [ecx] eax +
call loc_412B30  +
mov esi [ebp-30h] +
add esp 1Ch +
test esi esi +
jz loc_41248E  +
push esi  +
call ds:FreeLibrary  +
test eax eax +
jnz loc_41248E  +
push esi  +
call ds:FreeLibrary  +
mov byte ptr [ebp-0F9h] 1 +
jmp loc_4124CD  +
cmp edi 8 +
lea eax [ebp-54h] +
mov ecx offset aInvalidCommand +
cmovnb eax [ebp-54h] +
push eax  +
push ecx  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aAppcontext  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 1Ch +
mov byte ptr [ebp-0F9h] 0 +
mov edx [ebp-0E0h] +
cmp edx 8 +
jb loc_41250D  +
mov ecx [ebp-0F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412503  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412603  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-0C8h] +
xor eax eax +
mov dword ptr [ebp-0E4h] 0 +
mov dword ptr [ebp-0E0h] 7 +
mov [ebp-0F4h] ax +
cmp edx 8 +
jb loc_41256A  +
mov ecx [ebp-0DCh] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412560  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412603  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-40h] +
xor eax eax +
mov dword ptr [ebp-0CCh] 0 +
mov dword ptr [ebp-0C8h] 7 +
mov [ebp-0DCh] ax +
cmp edx 8 +
jb loc_4125BD  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4125B3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412603  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-0F9h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
call sub_432491  +
lea ecx [ebp-38h] +
call sub_408B00  +
push offset unk_46CCD0  +
lea eax [ebp-38h] +
push eax  +
call sub_42DBD3  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push esi  +
mov esi ecx +
mov ecx [esi+7Ch] +
cmp ecx 8 +
jb loc_41264D  +
mov eax [esi+68h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_412643  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412793  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 7 +
mov [esi+68h] ax +
mov ecx [esi+64h] +
cmp ecx 8 +
jb loc_41269B  +
mov eax [esi+50h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_412691  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412793  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+60h] 0 +
mov dword ptr [esi+64h] 7 +
mov [esi+50h] ax +
mov ecx [esi+4Ch] +
cmp ecx 8 +
jb loc_4126E9  +
mov eax [esi+38h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4126DF  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412793  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 7 +
mov [esi+38h] ax +
mov ecx [esi+34h] +
cmp ecx 8 +
jb loc_412733  +
mov eax [esi+20h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_412729  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412793  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 7 +
mov [esi+20h] ax +
mov ecx [esi+1Ch] +
cmp ecx 8 +
jb loc_41277D  +
mov eax [esi+8] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_412773  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412793  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 7 +
mov [esi+8] ax +
pop esi  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44FF61+1)  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-30h] ecx +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-28h] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
mov dword ptr [ebp-34h] 1 +
call sub_413E40  +
push 1Fh  +
xor eax eax +
mov dword ptr [ebp-3Ch] 0 +
push offset aCreativecloudA  +
lea ecx [ebp-4Ch] +
mov dword ptr [ebp-38h] 7 +
mov [ebp-4Ch] ax +
call loc_406450  +
push ecx  +
lea edx [ebp-4Ch] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
call loc_414330  +
mov byte ptr [ebp-4] 0 +
add esp 4 +
mov edx [ebp-38h] +
cmp edx 8 +
jb loc_412873  +
mov ecx [ebp-4Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412869  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412B21  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push ecx  +
lea ecx [ebp-28h] +
call sub_4143F0  +
add esp 4 +
push 110h  +
call sub_42C7DB  +
mov esi eax +
add esp 4 +
mov [ebp-2Ch] esi +
push 110h  +
push 0  +
push esi  +
call sub_42E740  +
lea ebx [esi+4] +
mov dword ptr [esi] offset off_4674C8 +
xor eax eax +
mov dword ptr [ebx+10h] 0 +
add esp 0Ch +
mov dword ptr [ebx+14h] 7 +
mov [ebx] ax +
mov [esi+2Ch] eax +
mov dword ptr [esi+30h] 7 +
mov [esi+1Ch] ax +
mov [esi+44h] eax +
mov dword ptr [esi+48h] 7 +
mov [esi+34h] ax +
mov [esi+5Ch] eax +
mov dword ptr [esi+60h] 7 +
mov [esi+4Ch] ax +
mov ecx esi +
mov byte ptr [ebp-4] 6 +
call sub_424E80  +
lea edi [esi+94h] +
mov dword ptr [esi] offset off_467418 +
mov [ebp-50h] edi +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
lea esi [edi+18h] +
mov byte ptr [ebp-4] 8 +
push 40h  +
mov [ebp-54h] esi +
mov [esi] eax +
mov [esi+4] eax +
call sub_42C7DB  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [esi] eax +
xor eax eax +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+34h] 7 +
mov [edi+20h] ax +
mov esi [ebp-2Ch] +
mov [esi+0E4h] eax +
mov dword ptr [esi+0E8h] 7 +
mov [esi+0D4h] ax +
mov [esi+100h] eax +
mov [esi+104h] eax +
mov [esi+108h] eax +
mov byte ptr [ebp-4] 0Bh +
mov ecx ebx +
push 11h  +
push offset aBootstrapper_l  +
mov [esi+90h] eax +
mov byte ptr [esi+0D1h] 1 +
mov [esi+68h] eax +
call loc_406450  +
mov ecx esi +
call loc_4281C0  +
mov ecx esi +
call loc_429250  +
mov ebx [ebp-30h] +
lea eax [ebp-28h] +
mov byte ptr [esi+0D0h] 0 +
mov byte ptr [ebp-4] 0 +
cmp dword ptr [ebp-14h] 8 +
mov [ebx] esi +
cmovnb eax [ebp-28h] +
push eax  +
push ecx  +
mov ecx esi +
call loc_4253A0  +
mov ecx [ebx] +
push 0  +
call loc_424EF0  +
call sub_41F3D0  +
push dword ptr [ebx]  +
mov ecx eax +
call loc_41F480  +
push 80h  +
call sub_42C7DB  +
mov esi eax +
add esp 4 +
mov [ebp-2Ch] esi +
push 80h  +
push 0  +
push esi  +
call sub_42E740  +
mov dword ptr [esi] offset off_4674E8 +
xor ecx ecx +
add esp 0Ch +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 7 +
mov [esi+8] cx +
xor eax eax +
mov [esi+30h] ecx +
mov dword ptr [esi+34h] 7 +
mov [esi+20h] ax +
mov [esi+48h] eax +
mov dword ptr [esi+4Ch] 7 +
mov [esi+38h] ax +
mov [esi+60h] eax +
mov dword ptr [esi+64h] 7 +
mov [esi+50h] ax +
mov ecx esi +
add ecx 68h +
mov [ecx+10h] eax +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
push 11h  +
push offset aBootstrapper_l  +
mov byte ptr [ebp-4] 11h +
call loc_406450  +
mov ecx esi +
push 0  +
push offset unk_45EE80  +
lea ecx [ecx+8] +
call loc_406450  +
push 0Bh  +
push offset aHdhelperexe  +
lea ecx [esi+20h] +
call loc_406450  +
push 8  +
push offset aHdhelper  +
lea ecx [esi+38h] +
call loc_406450  +
push 0Ah  +
push offset aAppcontext  +
lea ecx [esi+50h] +
call loc_406450  +
call sub_41F3D0  +
mov ecx esi +
mov [ecx+4] eax +
mov eax ebx +
mov edx [ebp-14h] +
mov dword_470290 offset loc_412B30 +
mov dword_470294 ecx +
mov [eax+4] ecx +
cmp edx 8 +
jb loc_412B05  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412AFB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_412B26  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+18h] +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi dword_470288 +
mov [ebp-4] eax +
test edi edi +
jz loc_412BD4  +
mov edx [edi+4] +
test edx edx +
jz loc_412BD4  +
test ebx ebx +
jz loc_412B84  +
mov ecx ebx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412B65  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push ebx  +
lea ecx [edx+38h] +
call loc_406450  +
mov edi dword_470288 +
test esi esi +
jz loc_412BB2  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412B90  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [edi+4] +
push esi  +
add ecx 50h +
call loc_406450  +
mov edi dword_470288 +
mov edi [edi+4] +
lea eax [ebp+20h] +
push eax  +
push dword ptr [ebp+1Ch]  +
mov esi [edi] +
push ebx  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
mov esi [esi+3Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov [esp+14h+var_4] 0FFFFFFFFh +
push [ebp+arg_0]  +
call sub_4115C0  +
mov ecx eax +
call loc_411660  +
test al al +
jnz loc_412C12  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [esp+18h+var_C] +
push eax  +
call sub_4115C0  +
mov ecx eax +
call loc_411920  +
call sub_4115C0  +
mov edi eax +
mov dword_470290 0 +
mov dword_470294 0 +
cmp dword ptr [edi] 0 +
jz loc_412C70  +
call sub_41F3D0  +
push dword ptr [edi]  +
mov ecx eax +
call sub_41F7C0  +
mov ebx [edi] +
test ebx ebx +
jz loc_412C6A  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov dword ptr [edi] 0 +
mov esi [edi+4] +
test esi esi +
jz loc_412C93  +
mov ecx esi +
call loc_412610  +
push 80h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [edi+4] 0 +
mov eax [esp+20h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_412CBC  +
push eax  +
call ds:FreeLibrary  +
test eax eax +
jz loc_412CBC  +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_412CCA  +
push eax  +
call ds:FreeLibrary  +
mov dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_44FFC6+1)  +
mov eax large fs:0 +
push eax  +
sub esp 27Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-26Ch] esi +
cmp dword ptr [esi+0Ch] 0 +
lea ebx [esi+0Ch] +
jnz loc_41335D  +
xor eax eax +
mov dword ptr [ebp-220h] 0 +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
lea ecx [ebp-260h] +
mov [ebp-4] eax +
call loc_4078E0  +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebp-250h] 0 +
jnz loc_412DE7  +
push offset aPathReturnedFr  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 18h +
lea eax [ebp-218h] +
push 104h  +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_412EB1  +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jz loc_412EB1  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412DC0  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
jmp loc_412EB1  +
lea eax [ebp-284h] +
push eax  +
lea ecx [ebp-260h] +
call loc_4075E0  +
lea ecx [ebp-230h] +
mov byte ptr [ebp-4] 2 +
cmp ecx eax +
jz loc_412E20  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_412E11  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-230h] +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-270h] +
cmp edx 8 +
jb loc_412E64  +
mov ecx [ebp-284h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_412E5A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413379  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-21Ch] 8 +
lea ecx [ebp-230h] +
lea eax [ebp-260h] +
cmovnb ecx [ebp-230h] +
cmp dword ptr [ebp-24Ch] 8 +
push ecx  +
cmovnb eax [ebp-260h] +
push eax  +
push offset aPathReturned_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 20h +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
push 9  +
push offset aHdzip_dll  +
lea ecx [ebp-248h] +
mov byte ptr [ebp-4] 3 +
call loc_406450  +
push ecx  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_414330  +
add esp 4 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
push offset aPathFormedForH  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 1Ch +
mov byte ptr [ebp-261h] 1 +
lea eax [ebp-230h] +
mov ecx ebx +
push eax  +
call sub_41CEF0  +
test al al +
jnz loc_413180  +
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_412FA2  +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jz loc_412FA2  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412F80  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
push ecx  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_414330  +
add esp 4 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
push offset aFirstFallbackF  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 1Ch +
lea eax [ebp-230h] +
mov ecx ebx +
push eax  +
call sub_41CEF0  +
test al al +
jnz loc_413180  +
lea edx [ebp-268h] +
lea ecx [ebp-288h] +
call sub_41C030  +
cmp dword ptr [ebp-268h] 2 +
jnz loc_413037  +
lea ecx [ebp-230h] +
call sub_413EC0  +
test al al +
jz loc_41308B  +
push 15h  +
push offset aAdobeDesktopCo  +
jmp loc_413080  +
push 0  +
push 2Bh  +
lea eax [ebp-218h] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_41308B  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413057  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
push 1Bh  +
push offset aAdobeAdobeDesk  +
lea ecx [ebp-230h] +
call loc_406570  +
push 5  +
xor eax eax +
mov dword ptr [ebp-274h] 0 +
push offset aHdbox  +
lea ecx [ebp-284h] +
mov dword ptr [ebp-270h] 7 +
mov [ebp-284h] ax +
call loc_406450  +
push ecx  +
lea edx [ebp-284h] +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-230h] +
call loc_414330  +
mov byte ptr [ebp-4] 3 +
add esp 4 +
mov edx [ebp-270h] +
cmp edx 8 +
jb loc_413117  +
mov ecx [ebp-284h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41310D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41337E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push ecx  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_414330  +
add esp 4 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
push offset aSecondFallback  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 14h  +
call loc_412B30  +
add esp 1Ch +
lea eax [ebp-230h] +
mov ecx ebx +
push eax  +
call sub_41CEF0  +
mov cl [ebp-261h] +
neg al  +
sbb al al +
and cl al +
jmp loc_413186  +
mov cl [ebp-261h] +
xor edi edi +
test cl cl +
jnz loc_4131EB  +
xor esi esi +
nop   +
cmp esi 7D0h +
jge loc_4131DE  +
push esi  +
call ds:Sleep  +
lea eax [ebp-230h] +
mov ecx ebx +
push eax  +
call sub_41CEF0  +
test al al +
jnz loc_4131E5  +
inc edi  +
push edi  +
push offset aFailedToLoad_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 28h  +
call loc_412B30  +
add esp 1Ch +
add esi 1F4h +
jmp loc_413190  +
***
push offset aFailedToLoad_1  +
jmp loc_413249  +
mov esi [ebp-26Ch] +
mov eax [ebx] +
xor ecx ecx +
test eax eax +
jz loc_413203  +
push offset aHdzipcompres_0  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [ebx] +
mov [esi] ecx +
xor ecx ecx +
test eax eax +
jz loc_41321B  +
push offset aHdzipdecompr_0  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
mov eax [ebx] +
mov [esi+4] ecx +
xor ecx ecx +
test eax eax +
jz loc_413232  +
push offset aHdzipsetlogger  +
push eax  +
call ds:GetProcAddress  +
mov ecx eax +
cmp dword ptr [esi] 0 +
mov [esi+8] ecx +
jz loc_413244  +
cmp dword ptr [esi+4] 0 +
jz loc_413244  +
test ecx ecx +
jnz loc_413267  +
push offset aFailedToLoad_2  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_4132A7  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41329D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413383  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-24Ch] +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
cmp edx 8 +
jb loc_413304  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4132FA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413383  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-21Ch] +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
cmp edx 8 +
jb loc_41335D  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413353  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413383  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450020  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
cmp dword ptr [edi] 0 +
mov esi [ebp+8] +
jnz loc_4133CE  +
mov eax 1 +
jmp loc_4136F9  +
xor eax eax +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] ax +
mov [ebp-4] eax +
mov [ebp-34h] eax +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-74h] +
push 10h  +
push offset aSourcefolderpa  +
mov [ebp-64h] eax +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_413473  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413469  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Eh  +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
push offset aTargetfilename  +
lea ecx [ebp-74h] +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-44h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_4134E7  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4134DD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 4  +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
push offset aType_0  +
lea ecx [ebp-74h] +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_41355B  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413551  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-4Ch] 0 +
jz loc_413601  +
cmp dword ptr [ebp-34h] 0 +
jz loc_413601  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_413601  +
cmp dword ptr [ebp-18h] 8 +
lea edx [ebp-2Ch] +
lea ecx [ebp-44h] +
cmovnb edx [ebp-2Ch] +
lea eax [ebp-5Ch] +
cmp dword ptr [ebp-30h] 8 +
push edx  +
cmovnb ecx [ebp-44h] +
cmp dword ptr [ebp-48h] 8 +
push ecx  +
cmovnb eax [ebp-5Ch] +
push eax  +
push offset aStartingCompre  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
call sub_435F44  +
mov esi [edi] +
lea edx [ebp-44h] +
add esp 28h +
lea ecx [ebp-5Ch] +
cmp dword ptr [ebp-30h] 8 +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-48h] 8 +
push 0  +
cmovnb ecx [ebp-5Ch] +
push 0  +
push eax  +
push edx  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov esi eax +
jmp loc_413629  +
push offset aMandatoryArgum  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 32h  +
call loc_412B30  +
add esp 18h +
mov esi 2 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_413663  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413659  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-30h] +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
cmp edx 8 +
jb loc_4136AD  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4136A3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-48h] +
xor eax eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
cmp edx 8 +
jb loc_4136F7  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4136ED  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413716  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450020  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
cmp dword ptr [edi+4] 0 +
mov esi [ebp+8] +
jnz loc_41375F  +
mov eax 1 +
jmp loc_413A90  +
xor eax eax +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] ax +
mov [ebp-4] eax +
mov [ebp-34h] eax +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-74h] +
push 0Eh  +
push offset aSourcefilepath  +
mov [ebp-64h] eax +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-44h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_413804  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4137FA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 10h  +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
push offset aTargetfolderpa  +
lea ecx [ebp-74h] +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_413878  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41386E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 4  +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
push offset aType_0  +
lea ecx [ebp-74h] +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
call loc_406450  +
lea eax [ebp-2Ch] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea eax [ebp-74h] +
mov ecx esi +
push eax  +
call sub_426DD0  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-60h] +
cmp edx 8 +
jb loc_4138EC  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4138E2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-4Ch] 0 +
jz loc_413993  +
cmp dword ptr [ebp-34h] 0 +
jz loc_413993  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_413993  +
cmp dword ptr [ebp-18h] 8 +
lea edx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
cmovnb edx [ebp-2Ch] +
lea eax [ebp-44h] +
cmp dword ptr [ebp-48h] 8 +
push edx  +
cmovnb ecx [ebp-5Ch] +
cmp dword ptr [ebp-30h] 8 +
push ecx  +
cmovnb eax [ebp-44h] +
push eax  +
push offset aStartingDecomp  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
call sub_435F44  +
mov esi [edi+4] +
lea edx [ebp-5Ch] +
add esp 28h +
lea ecx [ebp-44h] +
cmp dword ptr [ebp-48h] 8 +
cmovnb edx [ebp-5Ch] +
cmp dword ptr [ebp-30h] 8 +
push 0  +
cmovnb ecx [ebp-44h] +
push 0  +
push eax  +
push edx  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov esi eax +
jmp loc_4139C0  +
push offset aMandatoryArg_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aHdziphelper  +
push offset aHdhelperexe  +
push 1Eh  +
call loc_412B30  +
add esp 1Ch +
mov esi 2 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_4139FA  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4139F0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-30h] +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
cmp edx 8 +
jb loc_413A44  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413A3A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-48h] +
xor eax eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
cmp edx 8 +
jb loc_413A8E  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_413A84  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413AAD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_452C04 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_42D6A4  +
mov ecx [ebp+var_4] +
add esp 8 +
mov dword ptr [esi] offset off_452C44 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_452C04 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_42D6A4  +
add esp 8 +
mov dword ptr [esi] offset off_452C44 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
lea eax [ecx+4] +
push eax  +
call sub_42D91B  +
add esp 8 +
test eax eax +
setz al  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+14h] +
mov [ebp-8] ecx +
cmp ebx ecx +
ja loc_413BDC  +
mov [ebp-4] esi +
mov edx esi +
cmp ecx 8 +
jb loc_413BA7  +
mov edx [esi] +
mov [ebp-4] edx +
mov [esi+10h] ebx +
test ebx ebx +
jz loc_413BC8  +
mov eax [ebp+0Ch] +
mov edi edx +
movzx edx ax +
mov ecx ebx +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov eax [ebp-4] +
xor ecx ecx +
pop edi  +
mov [eax+ebx*2] cx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp ebx 7FFFFFFEh +
ja loc_413CA1  +
mov edi ebx +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_413BFC  +
mov edi 7FFFFFFEh +
jmp loc_413C1A  +
mov edx ecx +
mov eax 7FFFFFFEh +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_413C12  +
mov edi 7FFFFFFEh +
jmp loc_413C1A  +
lea eax [edx+ecx] +
cmp edi eax +
cmovb edi eax +
lea eax [edi+1] +
mov ecx esi +
push eax  +
call loc_406770  +
mov [esi+10h] ebx +
mov edx eax +
mov [ebp-4] edx +
mov [esi+14h] edi +
test ebx ebx +
jz loc_413C51  +
mov eax [ebp+0Ch] +
mov edi edx +
movzx edx ax +
mov ecx ebx +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
mov edx [ebp-4] +
stos   +
adc ecx ecx +
stos   +
xor eax eax +
mov [edx+ebx*2] ax +
mov eax [ebp-8] +
cmp eax 8 +
jb loc_413C8F  +
lea ecx ds:2[eax*2] +
mov eax [esi] +
cmp ecx 1000h +
jb loc_413C82  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_413C9C  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
mov edx [ebp-4] +
add esp 8 +
pop edi  +
mov [esi] edx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406FE0  +
push ebp  +
mov ebp esp +
sub esp 10h +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx 7FFFFFFEh +
mov eax ecx +
push edi  +
mov ebx [esi+10h] +
sub eax ebx +
mov [ebp-10h] ebx +
cmp eax edx +
jb loc_413E32  +
lea eax [ebx+edx] +
mov edx [esi+14h] +
mov edi eax +
mov [ebp-4] eax +
or edi 7 +
mov [ebp-8] edx +
cmp edi ecx +
jbe loc_413CEE  +
mov edi ecx +
jmp loc_413D06  +
mov eax edx +
shr eax 1 +
sub ecx eax +
cmp edx ecx +
jbe loc_413CFF  +
mov edi 7FFFFFFEh +
jmp loc_413D06  +
add eax edx +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
mov eax edi +
add eax 1 +
setb cl  +
neg ecx  +
or ecx eax +
push ecx  +
mov ecx esi +
call loc_406770  +
cmp dword ptr [ebp-8] 8 +
mov ecx [ebp-4] +
mov [esi+14h] edi +
mov edi [ebp+10h] +
mov [esi+10h] ecx +
mov [ebp-0Ch] eax +
lea ecx [edi+edi] +
lea edx [ecx+eax] +
mov [ebp-4] edx +
push ecx  +
jb loc_413DD2  +
mov ebx [esi] +
push ebx  +
push eax  +
call loc_42DC40  +
mov eax [ebp+14h] +
add esp 0Ch +
test eax eax +
jz loc_413D70  +
mov edi [ebp-4] +
mov ecx eax +
mov eax [ebp+18h] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov edi [ebp+10h] +
mov eax [ebp-10h] +
sub eax edi +
lea eax ds:2[eax*2] +
push eax  +
lea eax [edi+edi] +
add eax ebx +
push eax  +
mov eax [ebp+14h] +
add eax edi +
mov edi [ebp-0Ch] +
lea eax [edi+eax*2] +
push eax  +
call loc_42DC40  +
mov eax [ebp-8] +
add esp 0Ch +
lea ecx ds:2[eax*2] +
cmp ecx 1000h +
jb loc_413DBB  +
mov edx [ebx-4] +
add ecx 23h +
sub ebx edx +
lea eax [ebx-4] +
cmp eax 1Fh +
ja loc_413E37  +
mov ebx edx +
push ecx  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
mov [esi] edi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push esi  +
push eax  +
call loc_42DC40  +
mov eax [ebp+14h] +
add esp 0Ch +
test eax eax +
jz loc_413E01  +
mov edi [ebp-4] +
mov ecx eax +
mov eax [ebp+18h] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov edi [ebp+10h] +
sub ebx edi +
lea ecx [edi+edi] +
add ecx esi +
lea eax ds:2[ebx*2] +
push eax  +
push ecx  +
mov ecx [ebp+14h] +
add ecx edi +
mov edi [ebp-0Ch] +
lea ecx [edi+ecx*2] +
push ecx  +
call loc_42DC40  +
add esp 0Ch +
mov [esi] edi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
call loc_406FE0  +
call sub_432491  +
push edi  +
push 0  +
push 0  +
mov ebx ecx +
call ds:GetTempPathW  +
mov edi eax +
test edi edi +
jz loc_413E8C  +
xor ecx ecx +
lea eax [edi+1] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_413E8C  +
push esi  +
push edi  +
call ds:GetTempPathW  +
test eax eax +
jnz loc_413E92  +
push esi  +
call sub_4322BA  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
retn   +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413E97  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
mov ecx ebx +
call loc_406450  +
push esi  +
call sub_4322BA  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450060  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edx [ebp+var_14] +
lea ecx [ebp+var_10] +
call sub_41C030  +
cmp [ebp+var_10] 20h +
jnz loc_413F54  +
mov esi dword_470290 +
test esi esi +
jz loc_413F3D  +
push offset aInsideGetacf64  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41405D  +
push offset aInsideGetacf64  +
jmp loc_41403E  +
sub esp 18h +
xor eax eax +
mov ecx esp +
mov [ebp+var_14] esp +
push 6  +
push offset aReg_sz  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
sub esp 18h +
mov [ebp+var_4] 0 +
mov ecx esp +
mov [ebp+var_10] esp +
xor eax eax +
push 0Eh  +
push offset aCommonfilesdir  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
sub esp 18h +
mov byte ptr [ebp+var_4] 1 +
mov ecx esp +
xor eax eax +
push 3Ch  +
push offset aHkey_local_m_0  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
xor dl dl +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx esi +
call loc_41C570  +
add esp 48h +
test al al +
jnz loc_41406F  +
mov esi dword_470290 +
test esi esi +
jz loc_414030  +
push offset aInsideGetacf_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41405D  +
push offset aInsideGetacf_0  +
mov esi [eax] +
push offset aFileutils  +
push offset unk_45EE80  +
push 32h  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 6  +
push offset aAdobe_0  +
mov ecx esi +
call loc_406570  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450060  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edx [ebp+var_14] +
lea ecx [ebp+var_10] +
call sub_41C030  +
cmp [ebp+var_10] 20h +
jnz loc_414124  +
mov esi dword_470290 +
test esi esi +
jz loc_41410D  +
push offset aInsideGetacc64  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41422D  +
push offset aInsideGetacc64  +
jmp loc_41420E  +
sub esp 18h +
xor eax eax +
mov ecx esp +
mov [ebp+var_14] esp +
push 6  +
push offset aReg_sz  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
sub esp 18h +
mov [ebp+var_4] 0 +
mov ecx esp +
mov [ebp+var_10] esp +
xor eax eax +
push 0Fh  +
push offset aProgramfilesdi  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
sub esp 18h +
mov byte ptr [ebp+var_4] 1 +
mov ecx esp +
xor eax eax +
push 3Ch  +
push offset aHkey_local_m_0  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 7 +
mov [ecx] ax +
call loc_406450  +
xor dl dl +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx esi +
call loc_41C570  +
add esp 48h +
test al al +
jnz loc_41423F  +
mov esi dword_470290 +
test esi esi +
jz loc_414200  +
push offset aInsideGetacc_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41422D  +
push offset aInsideGetacc_0  +
mov esi [eax] +
push offset aFileutils  +
push offset unk_45EE80  +
push 32h  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 1Bh  +
push offset aAdobeAdobeCrea  +
mov ecx esi +
call loc_406570  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebx+10h] +
test edi edi +
jz loc_4142EF  +
xor ecx ecx +
lea eax [edi+1] +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4142EF  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_41429C  +
mov eax [ebx] +
push eax  +
lea eax [edi+1] +
push eax  +
push esi  +
call sub_431165  +
lea eax [edi-1] +
add esp 0Ch +
cmp word ptr [esi+eax*2] 5Ch +
lea eax [esi+eax*2] +
jnz loc_4142DB  +
xor ecx ecx +
mov [eax] cx +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4142C1  +
sub eax edx +
sar eax 1 +
dec eax  +
cmp word ptr [esi+eax*2] 5Ch +
lea eax [esi+eax*2] +
jz loc_4142B7  +
push esi  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_4142F5  +
push esi  +
call sub_42C3C0  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
retn   +
***
mov ecx esi +
lea edx [ecx+2] +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_4143DB  +
mov eax [esi+10h] +
test eax eax +
jz loc_4143DB  +
add ecx 0Bh +
mov edx 2 +
add eax ecx +
xor ecx ecx +
mov [ebp-8] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4143DB  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_414384  +
mov eax [edi] +
push eax  +
push dword ptr [ebp-8]  +
push ebx  +
call sub_431165  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_414399  +
mov esi [esi] +
push esi  +
push ebx  +
call ds:PathAppendW  +
mov ecx ebx +
cmp eax 1 +
setz byte ptr [ebp-1]  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4143B0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push ebx  +
mov ecx edi +
call loc_406450  +
push ebx  +
call sub_4322BA  +
mov al [ebp-1] +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_4143FD  +
mov eax [esi] +
push eax  +
call ds:PathFileExistsW  +
mov ecx [esi+14h] +
test eax eax +
jz loc_414420  +
cmp ecx 8 +
jb loc_414412  +
mov esi [esi] +
push esi  +
call ds:PathIsDirectoryW  +
test eax eax +
pop esi  +
setnz al  +
retn   +
cmp ecx 8 +
jb loc_414427  +
mov esi [esi] +
push edi  +
push 0  +
push esi  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov edi eax +
test edi edi +
jz loc_4144A4  +
mov esi dword_470290 +
test esi esi +
jz loc_414474  +
push edi  +
push offset aShcreatedirect  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
test edi edi +
setz al  +
pop edi  +
pop esi  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_4144A2  +
mov esi [eax] +
push edi  +
push offset aShcreatedirect  +
push offset aFileutils  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_45EE80  +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
test edi edi +
pop edi  +
setz al  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450088  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_4144E9  +
mov eax [edi] +
push 0  +
push 200080h  +
push 2  +
push 0  +
push 1  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp-30h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4145A6  +
cmp dword_470290 0 +
jz loc_41455C  +
cmp dword ptr [edi+14h] 8 +
jb loc_41451F  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push edi  +
push offset aFailedToCrea_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
xor al al +
jmp loc_414705  +
mov esi dword_470294 +
test esi esi +
jz loc_41459F  +
cmp dword ptr [edi+14h] 8 +
jb loc_41456E  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push edi  +
push offset aFailedToCrea_1  +
push offset aFileutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
xor al al +
jmp loc_414705  +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0Fh +
mov byte ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4145CE  +
mov esi [esi] +
push ecx  +
lea edx [ebp-2Ch] +
mov ecx esi +
call sub_41B990  +
mov bl al +
add esp 4 +
test bl bl +
jz loc_4146D3  +
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-14h] +
push 0  +
push eax  +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-2Ch] +
cmovnb ecx [ebp-2Ch] +
push ecx  +
push dword ptr [ebp-30h]  +
call ds:WriteFile  +
test eax eax +
jz loc_41464E  +
cmp dword ptr [edi+10h] 0 +
jz loc_4146CA  +
cmp dword ptr [edi+14h] 8 +
jb loc_41461A  +
mov edi [edi] +
push 0  +
push 0A0000080h  +
push 4  +
push 0  +
push 1  +
push 40000000h  +
push edi  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_4146CA  +
push esi  +
call ds:FlushFileBuffers  +
push esi  +
call ds:CloseHandle  +
jmp loc_4146CA  +
cmp dword_470290 0 +
jz loc_41468E  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedToWriteI  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4146C8  +
mov esi dword_470294 +
test esi esi +
jz loc_4146C8  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aFailedToWriteI  +
push offset aFileutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor bl bl +
push dword ptr [ebp-30h]  +
call ds:CloseHandle  +
mov edx [ebp-18h] +
cmp edx 10h +
jb loc_414703  +
mov ecx [ebp-2Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_4146F9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_414721  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 808h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi edx +
mov eax esi +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_414758  +
mov eax [esi] +
xor edx edx +
mov [eax] dx +
cmp dword ptr [ecx+14h] 8 +
mov [ebp-808h] edx +
jb loc_41476B  +
mov ecx [ecx] +
push offset aRCcsUtf8  +
push ecx  +
lea eax [ebp-808h] +
push eax  +
call sub_436063  +
mov eax [ebp-808h] +
add esp 0Ch +
test eax eax +
setnz bl  +
test eax eax +
jz loc_41480A  +
push eax  +
lea eax [ebp-804h] +
push 400h  +
push eax  +
call sub_435B73  +
add esp 0Ch +
test eax eax +
jz loc_4147FC  +
push dword ptr [ebp-808h]  +
call sub_436121  +
add esp 4 +
mov ecx [ebp-4] +
mov al bl +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_41482D  +
mov eax [edi] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_4149DB  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_414846  +
mov eax [edi] +
push eax  +
call ds:PathIsDirectoryW  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_414857  +
mov eax [edi] +
push ebx  +
push esi  +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
jz loc_41493D  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_41493D  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_414885  +
mov eax [edi] +
push eax  +
call ds:GetFileAttributesW  +
mov edx eax +
test dl 1 +
jz loc_41493D  +
mov esi dword_470290 +
test esi esi +
jz loc_4148D7  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_4148AB  +
mov ecx [edi] +
push edx  +
push ecx  +
push offset aFileSIsWithRea  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_414910  +
mov eax dword_470294 +
test eax eax +
jz loc_414910  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_4148EA  +
mov ecx [edi] +
mov esi [eax] +
push edx  +
push ecx  +
push offset aFileSIsWithRea  +
mov esi [esi+34h] +
mov ecx esi +
push offset aFileutils  +
push offset unk_45EE80  +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_41491A  +
mov eax [edi] +
push 80h  +
push eax  +
call ds:SetFileAttributesW  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_414930  +
mov eax [edi] +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
test bl bl +
jnz loc_4149D5  +
cmp dword_470290 0 +
jz loc_414992  +
cmp dword ptr [edi+14h] 8 +
jb loc_414956  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push edi  +
push offset aFailedToDelete  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
mov al bl +
pop esi  +
pop ebx  +
pop edi  +
retn   +
mov esi dword_470294 +
test esi esi +
jz loc_4149D5  +
cmp dword ptr [edi+14h] 8 +
jb loc_4149A4  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push edi  +
push offset aFailedToDelete  +
push offset aFileutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
pop esi  +
mov al bl +
pop ebx  +
pop edi  +
retn   +
mov al 1 +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4500BF  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+8] +
lea ecx [ebp-14h] +
mov [ebp-14h] edi +
mov eax [ebx] +
push ecx  +
push ebx  +
mov dword ptr [ebp-14h] 0 +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_414A3E  +
push offset unk_4662E4  +
push ebx  +
push eax  +
call sub_42BF50  +
mov esi [ebp-14h] +
push 0Ch  +
call sub_42C7DB  +
add esp 4 +
mov [ebp-18h] eax +
test eax eax +
jz loc_414A72  +
xorps xmm0 xmm0 +
movq qword ptr [eax] xmm0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 1 +
mov [eax] esi +
jmp loc_414A74  +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [edi] eax +
test eax eax +
jz loc_414AA1  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call sub_42BF30  +
push 0FFFFFFFFh  +
push offset loc_4500F8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov [ebp+var_14] edi +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
mov [ebp+var_14] 0 +
test eax eax +
jz loc_414AFC  +
mov eax [eax] +
jmp loc_414AFE  +
xor eax eax +
mov esi [ebx] +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
push ebx  +
mov esi [esi+90h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_414B26  +
push offset unk_4662E4  +
push ebx  +
push eax  +
call sub_42BF50  +
mov esi [ebp+arg_4] +
mov eax [ebp+var_14] +
mov [edi] eax +
test esi esi +
jz loc_414B76  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_414B76  +
test esi esi +
jz loc_414B76  +
mov eax [esi] +
test eax eax +
jz loc_414B54  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_414B6B  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_450130  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov edi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ebp+var_1C] edi +
mov [ebp+var_1C] eax +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_C] +
mov [ebp+var_14] 0 +
test eax eax +
jz loc_414BF2  +
mov edx [eax] +
jmp loc_414BF4  +
xor edx edx +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_414BFF  +
mov eax [eax] +
jmp loc_414C01  +
xor eax eax +
lea esi [ebp+var_14] +
push esi  +
mov esi [ecx] +
push edx  +
mov edx [ebp+var_1C] +
push eax  +
mov esi [esi+0E0h] +
sub esp 10h +
mov eax esp +
movups xmm0 oword ptr [edx] +
push ecx  +
mov ecx esi +
movups oword ptr [eax] xmm0 +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_414C3A  +
push offset unk_4662D4  +
push [ebp+var_18]  +
push eax  +
call sub_42BF50  +
mov eax [ebp+var_14] +
mov esi [ebp+arg_8] +
mov [edi] eax +
or eax 0FFFFFFFFh +
test esi esi +
jz loc_414C94  +
xadd [esi+8] eax +
dec eax  +
jnz loc_414C8A  +
test esi esi +
jz loc_414C8A  +
mov eax [esi] +
test eax eax +
jz loc_414C68  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_414C7F  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov [ebp+arg_8] 0 +
or eax 0FFFFFFFFh +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_414CDC  +
xadd [esi+8] eax +
dec eax  +
jnz loc_414CDC  +
test esi esi +
jz loc_414CDC  +
mov eax [esi] +
test eax eax +
jz loc_414CBA  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_414CD1  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_450168  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor eax eax +
mov [ebp+var_4] 0 +
mov word ptr [ebp+var_14] ax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_414D44  +
mov eax [eax] +
jmp loc_414D46  +
xor eax eax +
mov esi [edi] +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
push edi  +
mov esi [esi+104h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_414D6E  +
push offset unk_4662D4  +
push edi  +
push eax  +
call sub_42BF50  +
mov esi [ebp+arg_0] +
movzx edi word ptr [ebp+var_14] +
test esi esi +
jz loc_414DBD  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_414DBD  +
test esi esi +
jz loc_414DBD  +
mov eax [esi] +
test eax eax +
jz loc_414D9B  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_414DB2  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov ax di +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F980  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [edi+4] +
test ecx ecx +
jz loc_414E24  +
mov dword ptr [edi+4] 0 +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
cmp byte ptr [edi+8] 0 +
jz loc_414E30  +
call ds:CoUninitialize  +
mov byte ptr [edi+8] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_414E4B  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4501A0  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov eax [ebp+8] +
mov [ebp-20h] ebx +
mov [ebp-24h] eax +
mov dword ptr [ebp-18h] 0 +
sub esp 0Ch +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call sub_418080  +
mov byte ptr [ebp-4] 1 +
test eax eax +
js loc_414EC1  +
mov edi [ebp-18h] +
test edi edi +
jnz loc_414EF1  +
cmp byte ptr [ebx+8] 0 +
jnz loc_414ECF  +
push 0  +
call ds:CoInitialize  +
sub esp 0Ch +
mov byte ptr [ebx+8] 1 +
lea ecx [ebp-18h] +
call sub_418080  +
mov edi [ebp-18h] +
test eax eax +
js loc_414FC9  +
test edi edi +
jz loc_414FC9  +
mov eax [edi] +
push 0  +
push edi  +
mov esi [eax+0FCh] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_414F16  +
push offset unk_4662D4  +
push edi  +
push eax  +
call sub_42BF50  +
mov eax [ebp-24h] +
cmp dword ptr [eax+14h] 8 +
jb loc_414F21  +
mov eax [eax] +
push ecx  +
mov ecx esp +
mov [ebp-24h] esp +
push eax  +
call loc_410BB0  +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-18h] +
test ecx ecx +
jz loc_41522C  +
mov byte ptr [ebp-4] 1 +
call sub_414D00  +
cmp ax 0FFFFh +
jz loc_414F68  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-18h] +
test eax eax +
jz loc_415019  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
jmp loc_41500F  +
***
mov dword ptr [ebp-4] 0 +
mov edi [ebx+4] +
mov eax [ebp-18h] +
cmp edi eax +
jz loc_414FAA  +
mov [ebx+4] eax +
test eax eax +
jz loc_414F93  +
mov ecx [eax] +
push eax  +
mov esi [ecx+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp-18h] +
test edi edi +
jz loc_414FAA  +
mov eax [edi] +
push edi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_414FC5  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
jmp loc_41501B  +
***
mov esi [ebx] +
test esi esi +
jz loc_415039  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aFailedInMsxmlC  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [ebx]  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov edi [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test edi edi +
jz loc_415019  +
mov eax [edi] +
push edi  +
mov esi [eax+8] +
***
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedInMsxmlC  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_414FFB  +
***
mov ebx [ebp-20h] +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_4151AC  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_0  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_415216  +
cmp dword_470290 0 +
jz loc_4151EC  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_415226  +
mov esi dword_470294 +
test esi esi +
jz loc_415226  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_0  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_415168 +
retn   +
***
push 80004003h  +
call sub_42BF30  +
mov ebx [ebp-28h] +
mov edi [ebp-28h] +
mov esi [edi] +
test esi esi +
jz loc_415453  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_2  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4154BD  +
cmp dword_470290 0 +
jz loc_415493  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_2  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4154CD  +
mov esi dword_470294 +
test esi esi +
jz loc_4154CD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_2  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_4153EE +
retn   +
***
push 80004003h  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
mov ebx [ebp-2Ch] +
mov edi [ebx] +
test edi edi +
jz loc_415651  +
mov eax [ebp-28h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_3  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_4156C9  +
cmp dword_470290 0 +
jz loc_415698  +
mov eax [ebp-28h] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aCaughtExcept_3  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_4156D9  +
mov edi dword_470294 +
test edi edi +
jz loc_4156D9  +
mov eax [ebp-28h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_3  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax [ebp-24h] +
mov dword ptr [eax] 0 +
mov eax offset loc_4156E8 +
retn   +
mov dword ptr [ebp-4] 0 +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_415706  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-18h] +
test eax eax +
jz loc_415724  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ebx [ebp-24h] +
jmp loc_4158AD  +
mov edi [ebp-2Ch] +
mov esi [edi] +
test esi esi +
jz loc_415753  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_4  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4157BD  +
cmp dword_470290 0 +
jz loc_415793  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_4  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4157CD  +
mov esi dword_470294 +
test esi esi +
jz loc_4157CD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_4  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax [ebp-24h] +
mov dword ptr [eax] 0 +
mov eax offset loc_4156E8 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_41581F  +
mov edi dword_470290 +
test edi edi +
jz loc_415816  +
push offset aGetnodeforxque  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 18h +
jmp loc_415843  +
mov eax dword_470294 +
test eax eax +
jz loc_415843  +
mov edi [eax] +
push offset aGetnodeforxque  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov edi [edi+34h] +
mov ecx edi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 14h +
mov eax [ebp-18h] +
mov dword ptr [ebx] 0 +
push ecx  +
mov ecx esp +
mov [ecx] eax +
test eax eax +
jz loc_415865  +
mov ecx [eax] +
push eax  +
mov edi [ecx+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov ecx ebx +
call sub_418260  +
test eax eax +
jns loc_415877  +
cmp eax 80004002h +
jnz loc_4158E1  +
mov byte ptr [ebp-4] 0 +
test esi esi +
jz loc_41588F  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-18h] +
test ecx ecx +
jz loc_4158AD  +
mov edx [ecx] +
push ecx  +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80004003h  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
***
push eax  +
call sub_42BF30  +
***
mov ebx [ebp-28h] +
mov edi [ebx] +
test edi edi +
jz loc_415A1D  +
mov eax [ebp-24h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_5  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_415A95  +
cmp dword_470290 0 +
jz loc_415A64  +
mov eax [ebp-24h] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aCaughtExcept_5  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_415AA5  +
mov edi dword_470294 +
test edi edi +
jz loc_415AA5  +
mov eax [ebp-24h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_5  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax [ebp-20h] +
mov dword ptr [eax] 0 +
mov eax offset loc_415AB4 +
retn   +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-18h] +
test eax eax +
jz loc_415AD2  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp-20h] +
jmp loc_415BF6  +
mov edi [ebp-28h] +
mov esi [edi] +
test esi esi +
jz loc_415B01  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_415B6B  +
cmp dword_470290 0 +
jz loc_415B41  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_6  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_415B7B  +
mov esi dword_470294 +
test esi esi +
jz loc_415B7B  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax [ebp-20h] +
mov dword ptr [eax] 0 +
mov eax offset loc_415AB4 +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_415BCD  +
mov edi dword_470290 +
test edi edi +
jz loc_415BC4  +
push offset aGetnodelistfor  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 18h +
jmp loc_415BF1  +
mov eax dword_470294 +
test eax eax +
jz loc_415BF1  +
mov edi [eax] +
push offset aGetnodelistfor  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov edi [edi+34h] +
mov ecx edi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 14h +
mov eax [ebp-34h] +
mov [eax] esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 80004003h  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4502A8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov eax ecx +
mov [ebp-2Ch] eax +
mov ebx [ebp+8] +
mov [ebp-24h] eax +
mov [ebp-28h] ebx +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_415CF4  +
mov eax [eax] +
test eax eax +
jnz loc_415CC5  +
mov esi dword_470290 +
test esi esi +
jz loc_415CBC  +
push offset aGetnodeatindex  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov dword ptr [ebx] 0 +
jmp loc_415FBC  +
***
mov eax dword_470294 +
test eax eax +
jz loc_415CE9  +
mov esi [eax] +
push offset aGetnodeatindex  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov dword ptr [ebx] 0 +
jmp loc_415FBC  +
***
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-4] 2 +
mov esi [ebp+0Ch] +
push esi  +
mov [ebp-1Ch] esi +
mov eax [esi] +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp-2Ch] +
mov byte ptr [ebp-4] 3 +
cmp dword ptr [eax+4] 0 +
jz loc_415D59  +
mov eax [ebp-18h] +
test eax eax +
jz loc_415D39  +
mov ecx [eax] +
push eax  +
mov edi [ecx+8] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] 0 +
mov edi [esi] +
push eax  +
push dword ptr [ebp+10h]  +
mov edi [edi+1Ch] +
mov ecx edi +
push esi  +
call ds:off_4522C0  +
call edi  +
jmp loc_415DC0  +
mov eax [eax] +
test eax eax +
jnz loc_415D9C  +
mov edi dword_470290 +
test edi edi +
jz loc_415D93  +
push offset aGetnodelistfor  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 18h +
jmp loc_415DC0  +
mov eax dword_470294 +
test eax eax +
jz loc_415DC0  +
mov edi [eax] +
push offset aGetnodelistfor  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov edi [edi+34h] +
mov ecx edi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 14h +
mov byte ptr [ebp-4] 2 +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
***
mov ebx [ebp-24h] +
mov edi [ebp-24h] +
mov esi [edi] +
test esi esi +
jz loc_415F07  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_415F71  +
cmp dword_470290 0 +
jz loc_415F47  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_6  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_415F81  +
mov esi dword_470294 +
test esi esi +
jz loc_415F81  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_415ED8 +
retn   +
***
mov byte ptr [ebp-4] 0 +
mov eax [ebp-18h] +
test eax eax +
jz loc_415FA2  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
push ecx  +
mov edx [ecx] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push eax  +
call sub_42BF30  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4502E8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-18h] edi +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov ecx [ebp+10h] +
mov [ebp-28h] eax +
mov [ebp-1Ch] ebx +
mov [ebp-24h] ecx +
xor ecx ecx +
mov dword ptr [ebp-4] 0 +
mov [ebp-14h] ecx +
mov byte ptr [ebp-4] 1 +
mov esi eax +
mov [ebp-20h] esi +
test eax eax +
jz loc_416064  +
mov ecx [eax] +
push eax  +
mov edi [ecx+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp+0Ch] +
mov ecx [ebp-14h] +
mov edi [ebp-18h] +
cmp dword ptr [ebp-24h] 0 +
mov byte ptr [ebp-4] 2 +
mov dword ptr [ebp-1Ch] 0 +
jz loc_41616F  +
cmp dword ptr [ebp-28h] 0 +
mov eax [ebp-24h] +
mov dword ptr [eax] 0 +
jnz loc_416094  +
xor eax eax +
mov [ebx] ecx +
mov [ebp-4] al +
jmp loc_4161CA  +
cmp dword ptr [edi+4] 0 +
jz loc_416123  +
xor eax eax +
lea ecx [ebp-18h] +
mov [ebp-18h] ax +
mov eax [esi] +
push ecx  +
push esi  +
mov edi [eax+58h] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
test eax eax +
jns loc_4160C8  +
push offset unk_4662E4  +
push esi  +
push eax  +
call sub_42BF50  +
cmp word ptr [ebp-18h] 0 +
jz loc_416120  +
mov eax [ebp-14h] +
test eax eax +
jz loc_4160E6  +
mov ecx [eax] +
push eax  +
mov edi [ecx+8] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov dword ptr [ebp-14h] 0 +
lea ecx [ebp-14h] +
mov eax [esi] +
push ecx  +
push esi  +
mov edi [eax+30h] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov eax [ebp-14h] +
test eax eax +
jz loc_4161EA  +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
mov edi [ecx+20h] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov ecx [ebp-14h] +
mov edx [ebp-24h] +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
mov dword ptr [ebp-14h] 0 +
mov [edx] eax +
mov [ebx] ecx +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp-14h] +
test eax eax +
jz loc_416163  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+0Ch] +
jmp loc_4161BA  +
mov [ebx] ecx +
xor ecx ecx +
mov [ebp-14h] ecx +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_416194  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+0Ch] +
mov ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
test ecx ecx +
jz loc_4161AF  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+0Ch] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_4161CA  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 80004003h  +
call sub_42BF30  +
sub esp 8 +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax ecx +
mov [ebp+var_8] eax +
mov ecx [edi] +
test ecx ecx +
jz loc_41623A  +
mov dword ptr [edi] 0 +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+var_8] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_4162D0  +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
mov [ebp+var_8] 0 +
mov esi [eax+0B4h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_416273  +
push offset unk_4662D4  +
push ebx  +
push eax  +
call sub_42BF50  +
mov edx [edi] +
mov ecx [ebp+var_8] +
cmp edx ecx +
jz loc_4162A7  +
mov [edi] ecx +
test edx edx +
jz loc_4162BB  +
mov eax [edx] +
push edx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
test ecx ecx +
jz loc_4162BB  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [eax] +
test eax eax +
jnz loc_416313  +
mov esi dword_470290 +
test esi esi +
jz loc_41630A  +
push offset aGetrootnode___  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_416337  +
mov eax dword_470294 +
test eax eax +
jz loc_416337  +
mov esi [eax] +
push offset aGetrootnode___  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov ecx [ebp+var_4] +
xor al al +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp-2Ch] +
mov edi [eax] +
test edi edi +
jz loc_4165BC  +
mov eax [ebp-30h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
mov eax [ebp-2Ch] +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [eax]  +
jmp loc_416634  +
cmp dword_470290 0 +
jz loc_416603  +
mov eax [ebp-30h] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aCaughtExcept_7  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_416644  +
mov edi dword_470294 +
test edi edi +
jz loc_416644  +
mov eax [ebp-30h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax offset loc_416758 +
retn   +
mov edi [ebp-2Ch] +
mov esi [edi] +
test esi esi +
jz loc_416671  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_8  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4166DB  +
cmp dword_470290 0 +
jz loc_4166B1  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcept_8  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4166EB  +
mov esi dword_470294 +
test esi esi +
jz loc_4166EB  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_8  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_416758 +
retn   +
mov eax [edi] +
test eax eax +
jnz loc_416734  +
mov esi dword_470290 +
test esi esi +
jz loc_41672B  +
push offset aGetrootnode___  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_416758  +
mov eax dword_470294 +
test eax eax +
jz loc_416758  +
mov esi [eax] +
push offset aGetrootnode___  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push eax  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push eax  +
call sub_42BF30  +
push 0FFFFFFFFh  +
push offset loc_450390  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] ecx +
mov [ebp+var_4] 1 +
cmp [ebp+arg_4] 0 +
jz loc_416A9D  +
cmp [ebp+arg_0] 0 +
jz loc_416A9D  +
cmp dword ptr [ecx+4] 0 +
jz loc_416A26  +
mov byte ptr [ebp+var_4] 2 +
lea eax [ebp+var_18] +
mov edi [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_18] 0 +
mov esi [edi] +
push edi  +
mov esi [esi+54h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_41684B  +
push offset unk_4662E4  +
push edi  +
push eax  +
call sub_42BF50  +
mov ecx [ebp+var_18] +
test ecx ecx +
jz loc_416862  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
jmp loc_416B3F  +
mov ebx [ebp-20h] +
mov edi [ebx] +
test edi edi +
jz loc_4168C8  +
mov eax [ebp-1Ch] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_416940  +
cmp dword_470290 0 +
jz loc_41690F  +
mov eax [ebp+var_1C] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aCaughtExcept_9  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_416950  +
mov edi dword_470294 +
test edi edi +
jz loc_416950  +
mov eax [ebp+var_1C] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax offset loc_416956 +
retn   +
mov dword ptr [ebp-4] 0 +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
jmp loc_416B2D  +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_4169A6  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_10  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_416A10  +
cmp dword_470290 0 +
jz loc_4169E6  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcep_10  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_416A20  +
mov esi dword_470294 +
test esi esi +
jz loc_416A20  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_10  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_416956 +
retn   +
mov eax [ecx] +
test eax eax +
jnz loc_416A70  +
mov esi dword_470290 +
test esi esi +
jz loc_416A67  +
push offset aAddchildtonode  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov byte ptr [ebp+var_4] 0 +
jmp loc_41695D  +
mov eax dword_470294 +
test eax eax +
jz loc_416A94  +
mov esi [eax] +
push offset aAddchildtonode  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov byte ptr [ebp+var_4] 0 +
jmp loc_41695D  +
mov eax [ecx] +
test eax eax +
jnz loc_416AE0  +
mov esi dword_470290 +
test esi esi +
jz loc_416AD7  +
push offset aAddchildtono_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_416B04  +
mov eax dword_470294 +
test eax eax +
jz loc_416B04  +
mov esi [eax] +
push offset aAddchildtono_0  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_416B1F  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_416B3D  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_416C1D  +
mov esi dword_470290 +
test esi esi +
jz loc_416C0F  +
push offset aAddchildtono_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_417030  +
***
mov ecx dword_470294 +
test ecx ecx +
jz loc_417033  +
push offset aAddchildtono_1  +
jmp loc_417011  +
***
mov ebx [ebp-14h] +
mov eax [ebp-38h] +
mov edi [eax] +
test edi edi +
jz loc_416E6F  +
mov eax [ebp-40h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
mov eax [ebp-38h] +
push esi  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [eax]  +
jmp loc_416EE7  +
cmp dword_470290 0 +
jz loc_416EB6  +
mov eax [ebp-40h] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aCaughtExcept_9  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_416EF7  +
mov edi dword_470294 +
test edi edi +
jz loc_416EF7  +
mov eax [ebp-40h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax offset loc_416EFD +
retn   +
mov ebx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebx+10h] +
jmp loc_41703A  +
mov ebx [ebp-14h] +
mov edi [ebp-38h] +
mov esi [edi] +
test esi esi +
jz loc_416F39  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_10  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_416FA3  +
cmp dword_470290 0 +
jz loc_416F79  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcep_10  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_416FB3  +
mov esi dword_470294 +
test esi esi +
jz loc_416FB3  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_10  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_416FB9 +
retn   +
mov ebx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebx+10h] +
jmp loc_41703A  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_41700C  +
mov esi dword_470290 +
test esi esi +
jz loc_417002  +
push offset aAddchildtonode  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_417030  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_417033  +
push offset aAddchildtonode  +
mov esi [ecx] +
push offset aXmlparser  +
push offset unk_45EE80  +
push 14h  +
mov esi [esi+34h] +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov eax [ebx+10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_41704E  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 0Ch  +
***
push eax  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push 8007000Eh  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450438  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx [ebp+0Ch] +
mov [ebp-20h] ecx +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+8] 0 +
jnz loc_417174  +
mov eax [ecx] +
test eax eax +
jnz loc_41714B  +
mov esi dword_470290 +
test esi esi +
jz loc_41713E  +
push offset aGetnodexmlstri  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_417241  +
***
mov eax dword_470294 +
test eax eax +
jz loc_417241  +
mov esi [eax] +
push offset aGetnodexmlstri  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
jmp loc_417241  +
***
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ecx+4] 0 +
jz loc_4171EF  +
mov eax [ebp+8] +
lea edx [ebp-18h] +
push edx  +
push eax  +
mov ecx [eax] +
mov esi [ecx+88h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
js loc_417227  +
mov esi [ebp-18h] +
mov edx esi +
lea edi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4171B0  +
sub edx edi +
mov ecx ebx +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
push dword ptr [ebp-18h]  +
call ds:SysFreeString  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
jmp loc_417243  +
***
mov eax [ecx] +
test eax eax +
jnz loc_41726A  +
mov esi dword_470290 +
test esi esi +
jz loc_417261  +
push offset aGetxmlstringof  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
***
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ebx [ebp-20h] +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_417378  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_12  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4173E2  +
cmp dword_470290 0 +
jz loc_4173B8  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcep_12  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4173F2  +
mov esi dword_470294 +
test esi esi +
jz loc_4173F2  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_12  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_417227 +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450470  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx [ebp+0Ch] +
mov [ebp-28h] ecx +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+8] 0 +
jnz loc_4174B4  +
mov eax [ecx] +
test eax eax +
jnz loc_41748B  +
mov esi dword_470290 +
test esi esi +
jz loc_41747E  +
push offset aGetnodexmlstri  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_4175DF  +
***
mov eax dword_470294 +
test eax eax +
jz loc_4175DF  +
mov esi [eax] +
push offset aGetnodexmlstri  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
jmp loc_4175DF  +
***
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ecx+4] 0 +
jz loc_4175FF  +
mov edi [ebp+8] +
lea ecx [ebp-18h] +
xor eax eax +
mov [ebp-18h] ax +
push ecx  +
mov eax [edi] +
push edi  +
mov esi [eax+58h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jns loc_4174EF  +
push offset unk_4662E4  +
push edi  +
push eax  +
call sub_42BF50  +
cmp word ptr [ebp-18h] 0 +
jz loc_4175C5  +
mov byte ptr [ebp-4] 2 +
lea edx [ebp-1Ch] +
mov eax [ebp+8] +
mov dword ptr [ebp-1Ch] 0 +
push edx  +
push eax  +
mov ecx [eax] +
mov esi [ecx+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_4177D3  +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
mov esi [ecx+88h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
js loc_4175AA  +
mov esi [ebp-20h] +
mov edx esi +
lea edi [edx+2] +
adc eax offset SysFreeString +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_41758C  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
jmp loc_4175E1  +
***
mov byte ptr [ebp-4] 1 +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_4175C5  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
***
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset aGetnodexmlst_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_4175C5  +
***
mov ebx [ebp-28h] +
mov edi [ebp-28h] +
mov esi [edi] +
test esi esi +
jz loc_417753  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_14  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4177BD  +
cmp dword_470290 0 +
jz loc_417793  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcep_14  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4177CD  +
mov esi dword_470294 +
test esi esi +
jz loc_4177CD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_14  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_4175C5 +
retn   +
***
push 80004003h  +
call sub_42BF30  +
push 0FFFFFFFFh  +
mov ebx [ebp-20h] +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_4179D4  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_16  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword ptr [edi]  +
jmp loc_417A3E  +
cmp dword_470290 0 +
jz loc_417A14  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aCaughtExcep_16  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_417A4E  +
mov esi dword_470294 +
test esi esi +
jz loc_417A4E  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_16  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov eax offset loc_4178A2 +
retn   +
***
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
test eax eax +
jz loc_417BCB  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedToAddAtt  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_417DB4  +
***
mov eax [ebp-18h] +
mov edi [eax] +
test edi edi +
jz loc_417CBF  +
mov eax [ebp-1Ch] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
mov eax [ebp-18h] +
push esi  +
push offset aErrorOccured_C  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 32h  +
push dword ptr [eax]  +
jmp loc_417D37  +
cmp dword_470290 0 +
jz loc_417D06  +
mov eax [ebp-1Ch] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
mov esi dword_470290 +
mov ecx esi +
push offset aErrorOccured_C  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_417D47  +
mov edi dword_470294 +
test edi edi +
jz loc_417D47  +
mov eax [ebp-1Ch] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aErrorOccured_C  +
push offset aXmlparser  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
mov esi [edi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax offset loc_417DB4 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_417D90  +
mov esi dword_470290 +
test esi esi +
jz loc_417D87  +
push offset aXmldocNotIniti  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_417DB4  +
mov eax dword_470294 +
test eax eax +
jz loc_417DB4  +
mov esi [eax] +
push offset aXmldocNotIniti  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+8] +
test eax eax +
jz loc_417DD2  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 8007000Eh  +
call sub_42BF30  +
push 80004003h  +
call sub_42BF30  +
jmp fword ptr [eax+23h]  +
***
push eax  +
sub esp 220h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+0Ch] +
mov [ebp-228h] eax +
mov dword ptr [ebp-4] 0 +
mov esi [ebp+8] +
mov byte ptr [ebp-21Dh] 1 +
test esi esi +
jz loc_417FCC  +
mov eax [esi] +
push esi  +
mov [ebp-21Ch] esi +
mov edi [eax+4] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebx+4] 0 +
jz loc_417F4A  +
push 208h  +
lea eax [ebp-218h] +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
lea eax [ebp-224h] +
mov ecx esi +
push eax  +
call loc_4149E0  +
mov eax [eax] +
test eax eax +
jz loc_417EA4  +
mov eax [eax] +
jmp loc_417EA6  +
xor eax eax +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_431165  +
mov edi [ebp-224h] +
add esp 0Ch +
test edi edi +
jz loc_417F13  +
or eax 0FFFFFFFFh +
xadd [edi+8] eax +
dec eax  +
jnz loc_417F09  +
test edi edi +
jz loc_417F09  +
mov eax [edi] +
test eax eax +
jz loc_417EE7  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [edi] 0 +
mov eax [edi+4] +
test eax eax +
jz loc_417EFE  +
push eax  +
call sub_42C3C0  +
add esp 4 +
mov dword ptr [edi+4] 0 +
push 0Ch  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-224h] 0 +
lea edx [ebp-218h] +
lea edi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_417F20  +
mov ecx [ebp-228h] +
lea eax [ebp-218h] +
sub edx edi +
sar edx 1 +
push edx  +
push eax  +
call loc_406450  +
mov bl [ebp-21Dh] +
jmp loc_417FB3  +
mov eax [ebx] +
test eax eax +
jnz loc_417F8D  +
mov edi dword_470290 +
test edi edi +
jz loc_417F84  +
push offset aGetmapofnode__  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 18h +
jmp loc_417FB1  +
mov eax dword_470294 +
test eax eax +
jz loc_417FB1  +
mov edi [eax] +
push offset aGetmapofnode__  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov edi [edi+34h] +
mov ecx edi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 14h +
xor bl bl +
mov byte ptr [ebp-4] 0 +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov esi [ebp+8] +
jmp loc_418038  +
mov eax [ebx] +
test eax eax +
jnz loc_41800F  +
mov edi dword_470290 +
test edi edi +
jz loc_418006  +
push offset aGetmapofnode_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 18h +
jmp loc_418033  +
mov eax dword_470294 +
test eax eax +
jz loc_418036  +
mov esi [eax] +
push offset aGetmapofnode_0  +
push offset aXmlparser  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 14h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov esi [ebp+8] +
xor bl bl +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jz loc_418053  +
mov ecx [esi] +
push esi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 18h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 17h  +
push offset MultiByteStr  +
push 0  +
push 0  +
mov ebx ecx +
call ds:MultiByteToWideChar  +
mov edi eax +
test edi edi +
jz loc_41812F  +
lea eax [edi+edi] +
lea ecx [eax+8] +
cmp eax ecx +
sbb eax eax +
and eax ecx +
jz loc_41818A  +
cmp eax 400h +
ja loc_4180E0  +
call sub_42CD30  +
mov esi esp +
test esi esi +
jz loc_41818A  +
mov dword ptr [esi] 0CCCCh +
jmp loc_4180F9  +
push eax  +
call sub_4324E2  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41818A  +
mov dword ptr [esi] 0DDDDh +
add esi 8 +
test esi esi +
jz loc_41818A  +
push edi  +
push esi  +
push 17h  +
push offset MultiByteStr  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_418143  +
add esi 0FFFFFFF8h +
cmp dword ptr [esi] 0DDDDh +
jnz loc_41812F  +
push esi  +
call sub_4322BA  +
add esp 4 +
call ds:GetLastError  +
test eax eax +
jle loc_41818F  +
movzx eax ax +
or eax 80070000h +
jmp loc_41818F  +
cmp word ptr [esi] 7Bh +
lea eax [ebp+pclsid] +
push eax  +
push esi  +
jnz loc_418156  +
call ds:CLSIDFromString  +
jmp loc_41815C  +
call ds:CLSIDFromProgID  +
mov edi eax +
test edi edi +
js loc_418172  +
sub esp 8 +
lea eax [ebp+pclsid] +
mov ecx ebx +
push eax  +
call sub_4181B0  +
mov edi eax +
add esi 0FFFFFFF8h +
cmp dword ptr [esi] 0DDDDh +
jnz loc_418186  +
push esi  +
call sub_4322BA  +
add esp 4 +
mov eax edi +
jmp loc_41818F  +
mov eax 8007000Eh +
lea esp [ebp-24h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [ebx] +
test ecx ecx +
jz loc_4181DE  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
lea eax [ebp+pUnknown] +
push eax  +
push offset riid  +
push 17h  +
push 0  +
push edi  +
call ds:CoCreateInstance  +
mov edi eax +
test edi edi +
js loc_418238  +
push [ebp+pUnknown]  +
call ds:OleRun  +
mov edi eax +
test edi edi +
js loc_418221  +
mov eax [ebp+pUnknown] +
push ebx  +
push offset unk_4662A4  +
push eax  +
mov ecx [eax] +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov edi eax +
mov eax [ebp+pUnknown] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test edi edi +
jns loc_41823E  +
mov dword ptr [ebx] 0 +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
test eax eax +
jz loc_4182C8  +
mov [ebp+var_8] 0 +
lea ecx [ebp+var_8] +
mov esi [eax] +
push ecx  +
push offset unk_4662B4  +
push eax  +
mov esi [esi] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ecx [edi] +
mov ebx eax +
xor eax eax +
test ebx ebx +
cmovns eax [ebp+var_8] +
mov [ebp+var_C] eax +
test ecx ecx +
jz loc_4182C1  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+var_C] +
mov [edi] eax +
mov eax [ebp+arg_0] +
jmp loc_4182EC  +
mov ecx [edi] +
test ecx ecx +
jz loc_4182E7  +
mov dword ptr [edi] 0 +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+arg_0] +
mov ebx 80004002h +
test eax eax +
jz loc_418300  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov ecx [ebp+var_4] +
mov eax ebx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-8] eax +
mov edx [ebp+10h] +
xorps xmm0 xmm0 +
push ebx  +
mov ebx [ebp+8] +
mov ecx ebx +
push esi  +
push edi  +
mov [ebp-20h] ebx +
mov [ebp-24h] edx +
lea esi [ecx+1] +
movlpd oword ptr [ebp-14h] xmm0 +
push edx  +
lea eax [ebp-14h] +
push eax  +
push edi  +
lea eax [ebp-0Ch] +
push ebx  +
push eax  +
call sub_42B443  +
add esp 14h +
test eax eax +
jle loc_418388  +
mov edx [ebp-24h] +
add ebx eax +
inc esi  +
sub edi eax +
jnz loc_418367  +
mov ebx [ebp-20h] +
inc esi  +
push 2  +
push esi  +
call sub_435D2B  +
add esp 8 +
mov [ebp-20h] eax +
test eax eax +
jz loc_4183EB  +
xorps xmm0 xmm0 +
mov edi eax +
movlpd oword ptr [ebp-1Ch] xmm0 +
test esi esi +
jz loc_4183D5  +
push dword ptr [ebp-24h]  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-28h]  +
push ebx  +
push edi  +
call sub_42B443  +
add esp 14h +
test eax eax +
jle loc_4183D2  +
add ebx eax +
add edi 2 +
sub esi 1 +
jnz loc_4183B0  +
mov eax [ebp-20h] +
xor ecx ecx +
mov [edi] cx +
mov ecx [ebp-8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42AB0D  +
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_42B5CC  +
add esp 8 +
test [ebp+arg_0] ax +
setnz al  +
pop ebp  +
retn 8  +
***
mov edx [ebp+lpCharType] +
lea eax [ecx+8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+lpSrcStr] +
push eax  +
push edx  +
push esi  +
push edi  +
call sub_42B5EC  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ecx  +
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_42B60B  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_41853B  +
push ebx  +
lea ebx [ecx+8] +
movzx eax word ptr [esi] +
push ebx  +
push eax  +
call sub_42B60B  +
mov [esi] ax +
add esp 8 +
add esi 2 +
cmp esi edi +
jnz loc_418523  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_42B66B  +
add esp 8 +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_41859B  +
push ebx  +
lea ebx [ecx+8] +
movzx eax word ptr [esi] +
push ebx  +
push eax  +
call sub_42B66B  +
mov [esi] ax +
add esp 8 +
add esi 2 +
cmp esi edi +
jnz loc_418583  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
sub esp 14h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov al [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [ebp-8] al +
lea eax [ecx+18h] +
push eax  +
lea eax [ebp+WideCharStr] +
movlpd oword ptr [ebp+WideCharStr] xmm0 +
push eax  +
push 1  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
call sub_42B443  +
movzx ecx word ptr [ebp-0Ch] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
mov ax cx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi ebx +
jz loc_418677  +
add ecx 18h +
mov [ebp+var_18] ecx +
mov al [esi] +
xorps xmm0 xmm0 +
mov [ebp-8] al +
lea eax [ebp+WideCharStr] +
push ecx  +
push eax  +
push 1  +
lea eax [ebp-8] +
movlpd oword ptr [ebp+WideCharStr] xmm0 +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
call sub_42B443  +
movzx ecx word ptr [ebp-0Ch] +
lea edi [edi+2] +
add esp 14h +
test eax eax +
mov eax 0FFFFh +
cmovs ecx eax +
inc esi  +
mov [edi-2] cx +
mov ecx [ebp+var_18] +
cmp esi ebx +
jnz loc_418636  +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ecx+18h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp+MultiByteStr] +
movlpd oword ptr [ebp+MultiByteStr] xmm0 +
push eax  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp-0Ch] +
push eax  +
call sub_42B2E9  +
movzx ecx [ebp+arg_4] +
add esp 10h +
movzx edx byte ptr [ebp-0Ch] +
cmp eax 1 +
cmovnz edx ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov al dl +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 18h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
cmp esi ebx +
jz loc_418741  +
add ecx 18h +
mov [ebp+var_18] ecx +
movzx eax word ptr [esi] +
xorps xmm0 xmm0 +
push ecx  +
lea ecx [ebp+MultiByteStr] +
movlpd oword ptr [ebp+MultiByteStr] xmm0 +
push ecx  +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
call sub_42B2E9  +
movzx ecx [ebp+arg_8] +
lea edi [edi+1] +
movzx edx byte ptr [ebp-0Ch] +
add esp 10h +
cmp eax 1 +
cmovnz edx ecx +
mov ecx [ebp+var_18] +
add esi 2 +
mov [edi-1] dl +
cmp esi ebx +
jnz loc_418706  +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_453C5C +
jz loc_41877D  +
push dword ptr [esi+0Ch]  +
call sub_4322BA  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_4322BA  +
add esp 4 +
mov dword ptr [esi] offset off_452C90 +
test [ebp+arg_0] 1 +
jz loc_41879F  +
push 44h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx edx +
mov esi ecx +
xor eax eax +
cmp dword ptr [ebx+14h] 8 +
mov edx ebx +
jb loc_4187CA  +
mov edx [ebx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_4187D4  +
mov ecx [esi] +
push dword ptr [ebx+10h]  +
push edx  +
mov edx [esi+10h] +
push eax  +
call loc_406BC0  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp eax 0FFFFFFFFh +
jz loc_41880D  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_4187F6  +
mov ecx [edi] +
push dword ptr [edi+10h]  +
push ecx  +
push dword ptr [ebx+10h]  +
mov ecx esi +
push eax  +
call loc_407E80  +
mov eax [ebp+var_4] +
add eax [edi+10h] +
jmp loc_4187C0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450558  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 50h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-3Ch] edx +
mov edi ecx +
mov eax [ebx+8] +
mov edx [edi+4] +
push ecx  +
mov ecx [edi] +
mov [ebp-44h] eax +
call loc_406C50  +
mov eax [edi] +
xor ecx ecx +
mov edx [ebp-44h] +
add esp 4 +
mov [edi+4] eax +
mov eax [ebp-3Ch] +
mov [ebp-30h] edx +
mov esi [eax+10h] +
cmp ecx esi +
sbb ecx ecx +
neg ecx  +
dec ecx  +
cmp dword ptr [edx+14h] 8 +
mov [ebp-40h] ecx +
jb loc_41889F  +
mov ecx [edx] +
mov [ebp-30h] ecx +
mov ecx [eax+14h] +
mov [ebp-38h] ecx +
cmp ecx 8 +
jb loc_4188AC  +
mov eax [eax] +
push dword ptr [edx+10h]  +
mov edx esi +
mov ecx eax +
push dword ptr [ebp-30h]  +
push 0  +
call loc_406BC0  +
mov ecx eax +
mov dword ptr [ebp-1Ch] 0 +
add esp 0Ch +
mov [ebp-30h] ecx +
xor eax eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov [ebp-4] eax +
cmp ecx 0FFFFFFFFh +
jz loc_4189DE  +
mov edx [ebp-38h] +
xor eax eax +
mov [ebp-5Ch] ax +
mov eax [ebp-40h] +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
cmp esi eax +
jb loc_418B01  +
sub esi eax +
sub ecx eax +
cmp esi ecx +
cmovb ecx esi +
mov esi [ebp-3Ch] +
cmp edx 8 +
jb loc_41891C  +
mov edx [esi] +
jmp loc_41891E  +
mov edx esi +
push ecx  +
lea eax [edx+eax*2] +
push eax  +
lea ecx [ebp-5Ch] +
call loc_406450  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_418965  +
mov ecx [ebp-2Ch] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41895B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_418B06  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-5Ch] +
mov eax [edi+4] +
lea ecx [ebp-2Ch] +
push ecx  +
movups oword ptr [ebp-2Ch] xmm0 +
movq xmm0 qword ptr [ebp-4Ch] +
movq qword ptr [ebp-1Ch] xmm0 +
cmp eax [edi+8] +
jz loc_418990  +
mov ecx eax +
call sub_406290  +
add dword ptr [edi+4] 18h +
jmp loc_418998  +
push eax  +
mov ecx edi +
call loc_408850  +
mov ecx [ebp-44h] +
mov edx ecx +
mov eax [ecx+10h] +
mov [ebp-34h] eax +
add eax [ebp-30h] +
cmp dword ptr [ecx+14h] 8 +
mov [ebp-40h] eax +
jb loc_4189B1  +
mov edx [ecx] +
mov ecx [esi+14h] +
mov [ebp-38h] ecx +
cmp ecx 8 +
jb loc_4189C0  +
mov ecx [esi] +
jmp loc_4189C2  +
mov ecx esi +
push dword ptr [ebp-34h]  +
mov esi [esi+10h] +
push edx  +
push eax  +
mov edx esi +
call loc_406BC0  +
mov ecx eax +
add esp 0Ch +
mov [ebp-30h] ecx +
jmp loc_4188DC  +
***
test esi esi +
jz loc_418A95  +
xor eax eax +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-5Ch] ax +
mov eax [ebp-40h] +
mov dword ptr [ebp-48h] 7 +
cmp esi eax +
jb loc_418B01  +
mov edx [ebp-3Ch] +
sub esi eax +
or ecx 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
cmovb ecx esi +
cmp dword ptr [ebp-38h] 8 +
jb loc_418A1B  +
mov edx [edx] +
push ecx  +
lea eax [edx+eax*2] +
push eax  +
lea ecx [ebp-5Ch] +
call loc_406450  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_418A62  +
mov ecx [ebp-2Ch] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_418A58  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_418B06  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-5Ch] +
mov eax [edi+4] +
lea ecx [ebp-2Ch] +
push ecx  +
movups oword ptr [ebp-2Ch] xmm0 +
movq xmm0 qword ptr [ebp-4Ch] +
movq qword ptr [ebp-1Ch] xmm0 +
cmp eax [edi+8] +
jz loc_418A8D  +
mov ecx eax +
call sub_406290  +
add dword ptr [edi+4] 18h +
jmp loc_418A95  +
push eax  +
mov ecx edi +
call loc_408850  +
mov ecx [edi+4] +
mov eax 2AAAAAABh +
sub ecx [edi] +
imul  ecx +
mov eax [ebp-18h] +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
cmp eax 8 +
jb loc_418AE1  +
mov ecx [ebp-2Ch] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_418AD7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_418B06  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call loc_406760  +
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_466398 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+esi-6Ch] eax +
lea ecx [esi-50h] +
call loc_419130  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_466308 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-6Ch] eax +
mov eax [esi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-58h] offset off_466310 +
mov eax [esi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-5Ch] eax +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_466300 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-6Ch] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
add ebx [ebp+arg_C] +
push esi  +
adc eax [ebp+arg_10] +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_8] esi +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+28h+var_C] eax +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_418C0F  +
cmp [edi+38h] ecx +
jnb loc_418C0F  +
mov [edi+38h] ecx +
mov eax [edi+0Ch] +
mov edx [eax] +
mov eax [edi+38h] +
mov [esp+28h+var_14] eax +
sub eax edx +
sar eax 1 +
mov [esp+28h+var_18] edx +
cdq   +
cmp [esp+28h+var_10] edx +
ja loc_418CD8  +
jb loc_418C38  +
cmp ebx eax +
ja loc_418CD8  +
mov edx [ebp+arg_1C] +
mov eax ebx +
or eax [esp+28h+var_10] +
jz loc_418C5C  +
test dl 1 +
jz loc_418C53  +
cmp [esp+28h+var_C] 0 +
jz loc_418CD8  +
test dl 2 +
jz loc_418C5C  +
test ecx ecx +
jz loc_418CD8  +
mov eax [esp+28h+var_18] +
lea eax [eax+ebx*2] +
test dl 1 +
jz loc_418C97  +
cmp [esp+28h+var_C] 0 +
jz loc_418C97  +
mov edx [edi+1Ch] +
mov esi [esp+28h+var_18] +
mov [edx] eax +
mov eax [esp+28h+var_14] +
lea edx [esi+ebx*2] +
mov esi [esp+28h+var_8] +
sub eax edx +
sar eax 1 +
mov [esp+28h+var_14] eax +
mov eax [edi+2Ch] +
mov edx [esp+28h+var_14] +
mov [eax] edx +
mov edx [ebp+arg_1C] +
test dl 2 +
jz loc_418CCD  +
test ecx ecx +
jz loc_418CCD  +
mov eax [edi+30h] +
mov edx [esp+28h+var_18] +
mov esi edx +
mov ecx [eax] +
mov eax [edi+20h] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [edi+10h] +
mov [eax] edx +
lea edx [esi+ebx*2] +
mov eax [edi+20h] +
sub ecx edx +
mov esi [esp+28h+var_8] +
sar ecx 1 +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
mov eax [esp+28h+var_10] +
mov [esi] ebx +
mov [esi+4] eax +
jmp loc_418CE5  +
mov dword ptr [esi] 0FFFFFFFFh +
mov dword ptr [esi+4] 0FFFFFFFFh +
mov dword ptr [esi+8] 0 +
xorps xmm0 xmm0 +
mov dword ptr [esi+0Ch] 0 +
mov eax esi +
pop edi  +
movq qword ptr [esi+10h] xmm0 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 24h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
mov eax [eax] +
mov [esp+30h+var_20] eax +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_418D38  +
cmp [esi+38h] ecx +
jnb loc_418D38  +
mov [esi+38h] ecx +
mov eax [esi+0Ch] +
mov ebx [ebp+arg_10] +
mov edx [eax] +
mov eax [esi+38h] +
mov edi eax +
mov [esp+30h+var_1C] eax +
sub edi edx +
mov eax [ebp+arg_C] +
sar edi 1 +
mov [esp+30h+var_C] edx +
mov [esp+30h+var_8] edi +
sub eax 0 +
jz loc_418DC3  +
sub eax 1 +
jz loc_418D74  +
sub eax 1 +
jnz loc_418E86  +
mov eax edi +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_418DD4  +
mov eax ebx +
and eax 3 +
cmp al 3 +
jz loc_418E86  +
test bl 1 +
jz loc_418DA1  +
mov eax [esp+30h+var_20] +
test eax eax +
jnz loc_418D96  +
test edx edx +
jnz loc_418E86  +
sub eax edx +
sar eax 1 +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_418DD4  +
test bl 2 +
jz loc_418E86  +
test ecx ecx +
jnz loc_418DB6  +
test edx edx +
jnz loc_418E86  +
mov eax ecx +
sub eax edx +
sar eax 1 +
cdq   +
mov edi eax +
mov eax edx +
jmp loc_418DD4  +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h] xmm0 +
mov eax [esp+30h+var_14] +
mov edi [esp+30h+var_18] +
add edi [ebp+arg_4] +
adc eax [ebp+arg_8] +
mov [esp+30h+var_18] eax +
mov eax [esp+30h+var_8] +
cdq   +
cmp [esp+30h+var_18] edx +
ja loc_418E86  +
jb loc_418DF7  +
cmp edi eax +
ja loc_418E86  +
mov eax edi +
or eax [esp+30h+var_18] +
jz loc_418E14  +
test bl 1 +
jz loc_418E0B  +
cmp [esp+30h+var_20] 0 +
jz loc_418E86  +
test bl 2 +
jz loc_418E14  +
test ecx ecx +
jz loc_418E86  +
mov edx [esp+30h+var_C] +
lea eax [edx+edi*2] +
mov [esp+30h+var_8] eax +
test bl 1 +
jz loc_418E4B  +
cmp [esp+30h+var_20] 0 +
jz loc_418E4B  +
mov edx [esi+1Ch] +
mov [edx] eax +
mov eax [esp+30h+var_1C] +
sub eax [esp+30h+var_8] +
sar eax 1 +
mov [esp+30h+var_1C] eax +
mov eax [esi+2Ch] +
mov edx [esp+30h+var_1C] +
mov [eax] edx +
mov edx [esp+30h+var_C] +
test bl 2 +
jz loc_418E78  +
test ecx ecx +
jz loc_418E78  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+10h] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [esp+30h+var_8] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov ecx [esp+30h+var_18] +
mov [eax] edi +
mov [eax+4] ecx +
jmp loc_418E96  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
pop edi  +
xorps xmm0 xmm0 +
mov dword ptr [eax+8] 0 +
pop esi  +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jz loc_418F15  +
mov ecx [edx+2Ch] +
mov ecx [ecx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_418EDF  +
mov ax [esi] +
pop edi  +
pop esi  +
retn   +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_418F15  +
test byte ptr [edx+3Ch] 4 +
jnz loc_418F15  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
cmp ecx esi +
jbe loc_418F15  +
mov [edx+38h] ecx +
mov eax [edi] +
sub ecx eax +
mov [edi] eax +
mov eax [edx+2Ch] +
sar ecx 1 +
pop edi  +
pop esi  +
mov [eax] ecx +
mov eax [edx+1Ch] +
mov eax [eax] +
mov ax [eax] +
retn   +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
mov edx ecx +
push esi  +
push edi  +
mov edi 0FFFFh +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_418F7A  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_418F7A  +
mov cx [ebp+arg_0] +
cmp di cx +
jz loc_418F51  +
cmp cx [esi-2] +
jz loc_418F51  +
test byte ptr [edx+3Ch] 2 +
jnz loc_418F7A  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di cx +
jz loc_418F69  +
mov eax [edx+1Ch] +
mov eax [eax] +
mov [eax] cx +
xor edx edx +
movzx eax cx +
cmp cx di +
pop edi  +
cmovz eax edx +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax 0FFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
test byte ptr [edi+3Ch] 2 +
jnz loc_419118  +
mov bx [ebp+8] +
cmp ax bx +
jnz loc_418FBE  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [edi+20h] +
mov edx [edi+30h] +
mov eax [eax] +
mov esi [edx] +
mov [ebp-4] eax +
lea ecx [eax+esi*2] +
test eax eax +
jz loc_418FFA  +
cmp eax ecx +
jnb loc_418FFA  +
lea ecx [esi-1] +
mov [edx] ecx +
mov edx [edi+20h] +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
lea ecx [eax+2] +
mov [esi] bx +
mov ax bx +
mov [edi+38h] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [edi+0Ch] +
xor esi esi +
mov ebx [eax] +
cmp [ebp-4] esi +
jz loc_419031  +
mov esi ecx +
sub esi ebx +
sar esi 1 +
cmp esi 20h +
jb loc_419031  +
cmp esi 3FFFFFFFh +
jnb loc_41901E  +
lea eax [esi+esi] +
jmp loc_419036  +
cmp esi 7FFFFFFFh +
jnb loc_419113  +
mov eax 7FFFFFFFh +
jmp loc_419036  +
mov eax 20h +
push eax  +
lea ecx [edi+40h] +
mov [ebp-8] eax +
call loc_406770  +
mov [ebp-0Ch] eax +
lea eax [esi+esi] +
mov esi [ebp-0Ch] +
push eax  +
push ebx  +
push esi  +
mov [ebp-4] eax +
call loc_42DC40  +
mov edx [ebp-4] +
add esp 0Ch +
mov ecx [ebp-8] +
add edx esi +
add ecx ecx +
sub ecx edx +
add ecx esi +
lea eax [edx+2] +
sar ecx 1 +
mov [edi+38h] eax +
mov eax [edi+10h] +
mov [eax] esi +
mov eax [edi+20h] +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
test byte ptr [edi+3Ch] 4 +
jz loc_41909B  +
mov eax [edi+0Ch] +
mov [eax] esi +
mov eax [edi+1Ch] +
sar esi 1 +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov [eax] esi +
jmp loc_4190BD  +
mov eax [edi+1Ch] +
mov edx [edi+38h] +
mov eax [eax] +
sub eax ebx +
sar eax 1 +
lea ecx [esi+eax*2] +
mov eax [edi+0Ch] +
sub edx ecx +
sar edx 1 +
mov [eax] esi +
mov eax [edi+1Ch] +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
mov eax [edi+3Ch] +
test al 1 +
jz loc_4190EE  +
mov ecx [ebp-4] +
cmp ecx 1000h +
jb loc_4190E1  +
mov edx [ebx-4] +
add ecx 23h +
sub ebx edx +
lea eax [ebx-4] +
cmp eax 1Fh +
ja loc_419121  +
mov ebx edx +
push ecx  +
push ebx  +
call sub_42CA5C  +
mov eax [edi+3Ch] +
add esp 8 +
or eax 1 +
mov [edi+3Ch] eax +
mov eax [edi+30h] +
dec dword ptr [eax]  +
mov ecx [edi+20h] +
pop edi  +
pop esi  +
pop ebx  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+8] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax 0FFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
push ebx  +
push esi  +
mov esi ecx +
test byte ptr [esi+3Ch] 1 +
mov dword ptr [esi] offset off_466318 +
jz loc_419192  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_419153  +
mov eax [esi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
jmp loc_419160  +
mov eax [esi+2Ch] +
mov ecx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub ecx eax +
and ecx 0FFFFFFFEh +
cmp ecx 1000h +
jb loc_419188  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419220  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov ebx [esi+34h] +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_466358 +
test ebx ebx +
jz loc_41921D  +
push edi  +
mov edi [ebx+4] +
test edi edi +
jz loc_419211  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_419211  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push 8  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_10] edx +
mov ecx ebx +
mov [esp+18h+var_4] ecx +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
mov [esp+1Ch+var_8] eax +
push edi  +
test ebx ebx +
jl loc_419315  +
jg loc_419266  +
test esi esi +
jz loc_419315  +
mov ecx edx +
call sub_40E8C0  +
mov edi eax +
mov eax edx +
mov [esp+20h+var_C] eax +
test eax eax +
jl loc_4192C1  +
jg loc_41927F  +
test edi edi +
jz loc_4192C1  +
cmp ebx eax +
jg loc_41928F  +
jl loc_419289  +
cmp esi edi +
jnb loc_41928F  +
mov edi esi +
mov [esp+20h+var_C] ebx +
mov ecx [esp+20h+var_10] +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_42DC40  +
mov edx [esp+2Ch+var_10] +
lea ecx [edi+edi] +
add esp 0Ch +
sub esi edi +
sbb ebx [esp+20h+var_C] +
mov eax [edx+30h] +
sub [eax] edi +
mov eax [edx+20h] +
add [eax] ecx +
jmp loc_4192F8  +
mov ecx [esp+20h+var_10] +
mov eax [ebp+arg_0] +
mov ecx [ecx] +
movzx eax word ptr [eax] +
push eax  +
mov edi [ecx+0Ch] +
mov ecx edi +
call ds:off_4522C0  +
mov ecx [esp+24h+var_10] +
call edi  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_41930D  +
mov edx [esp+24h+var_14] +
add esi 0FFFFFFFFh +
mov ecx 2 +
adc ebx 0FFFFFFFFh +
add [ebp+arg_0] ecx +
test ebx ebx +
jg loc_419266  +
jl loc_41930D  +
test esi esi +
jnz loc_419266  +
mov eax [esp+24h+var_C] +
mov ecx [esp+24h+var_8] +
sub eax esi +
pop edi  +
sbb ecx ebx +
pop esi  +
mov edx ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_10] edx +
mov ecx ebx +
mov [esp+18h+var_4] ecx +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
mov [esp+1Ch+var_8] eax +
push edi  +
test ebx ebx +
jl loc_41941B  +
jg loc_419366  +
test esi esi +
jz loc_41941B  +
mov ecx edx +
call sub_40E8E0  +
mov edi eax +
mov eax edx +
mov [esp+20h+var_C] eax +
test eax eax +
jl loc_4193C3  +
jg loc_41937F  +
test edi edi +
jz loc_4193C3  +
cmp ebx eax +
jg loc_41938F  +
jl loc_419389  +
cmp esi edi +
jnb loc_41938F  +
mov edi esi +
mov [esp+20h+var_C] ebx +
lea eax [edi+edi] +
push eax  +
mov eax [esp+24h+var_10] +
mov eax [eax+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_42DC40  +
mov edx [esp+2Ch+var_10] +
lea ecx [edi+edi] +
add esp 0Ch +
sub esi edi +
sbb ebx [esp+20h+var_C] +
mov eax [edx+2Ch] +
sub [eax] edi +
mov eax [edx+1Ch] +
add [eax] ecx +
mov eax [ebp+arg_0] +
jmp loc_4193FC  +
mov eax [esp+20h+var_10] +
mov eax [eax] +
mov edi [eax+1Ch] +
mov ecx edi +
call ds:off_4522C0  +
mov ecx [esp+20h+var_10] +
call edi  +
movzx ecx ax +
mov eax 0FFFFh +
cmp ax cx +
jz loc_419413  +
mov eax [ebp+arg_0] +
add esi 0FFFFFFFFh +
mov edx [esp+20h+var_10] +
adc ebx 0FFFFFFFFh +
mov [eax] cx +
mov ecx 2 +
add eax ecx +
mov [ebp+arg_0] eax +
test ebx ebx +
jg loc_419366  +
jl loc_419413  +
test esi esi +
jnz loc_419366  +
mov eax [esp+20h+var_8] +
mov ecx [esp+20h+var_4] +
sub eax esi +
pop edi  +
sbb ecx ebx +
pop esi  +
mov edx ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi ecx +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_419454  +
pop edi  +
mov eax ecx +
pop esi  +
retn   +
mov eax [edi+2Ch] +
dec dword ptr [eax]  +
mov ecx [edi+1Ch] +
pop edi  +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
***
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4505B2  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] 0 +
lea esi [ebx+10h] +
mov dword ptr [ebx] offset unk_463E5C +
mov dword ptr [esi] offset unk_463DF4 +
mov dword ptr [ebx+68h] offset off_4662F8 +
mov [ebp+var_4] 0 +
lea edi [ebx+18h] +
mov eax [ebx] +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_466300 +
mov eax [ebx] +
mov ecx [eax+4] +
push ecx  +
push edi  +
lea eax [ecx-18h] +
mov [ecx+ebx-4] eax +
mov eax [ebx] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ecx [eax+4] +
add ecx ebx +
call sub_41AD40  +
mov [ebp+var_18] esi +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_466310 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_466308 +
mov eax [ebx] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+ebx-4] eax +
mov [ebp+var_4] 5 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_466398 +
mov eax [ebx] +
mov ecx [eax+4] +
mov [ebp+var_18] edi +
lea eax [ecx-68h] +
mov [ecx+ebx-4] eax +
mov ecx edi +
call sub_41AC20  +
mov dword ptr [edi] offset off_466318 +
mov eax ebx +
mov dword ptr [edi+38h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_466308 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_466310 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_466300 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_466300 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
push esi  +
mov esi ecx +
call loc_419130  +
test [ebp+arg_0] 1 +
jz loc_41964C  +
push 44h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
mov ebx [edi+34h] +
mov dword ptr [edi] offset off_466358 +
test ebx ebx +
jz loc_4196B8  +
mov eax [ebx+4] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4196AD  +
mov eax [eax] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_4] +
call esi  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4196AC  +
mov ecx [eax] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_4] +
call esi  +
pop esi  +
push 8  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_4196C9  +
push 38h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-68h] +
mov ecx esi +
call sub_418B10  +
test [ebp+arg_0] 1 +
jz loc_419702  +
push 0B0h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F820  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi-20h] +
lea edi [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_466308 +
mov eax [edi] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+esi-24h] eax +
mov eax [esi-10h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-10h] offset off_466310 +
mov eax [esi-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-14h] eax +
mov eax [esi-20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-20h] offset off_466300 +
mov eax [esi-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-24h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4197B0  +
push 68h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-8] +
lea esi [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_466310 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_419837  +
push 50h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44F1E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx-18h] +
lea esi [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_466300 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_463DF0 +
call sub_42B032  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4198B7  +
push 60h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41A2E0  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F848  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
mov edx [ebp+14h] +
mov [ebp-48h] eax +
mov [ebp-40h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0Fh +
mov byte ptr [ebp-30h] 0 +
mov dword ptr [ebp-4] 0 +
mov eax [edx+14h] +
mov ecx [edx+18h] +
and eax 3000h +
mov edx [edx+1Ch] +
mov [ebp-3Ch] ecx +
test edx edx +
jg loc_4199BE  +
jl loc_4199AD  +
test ecx ecx +
jnz loc_4199BE  +
cmp eax 2000h +
jz loc_4199BE  +
mov ecx 6 +
xor edx edx +
mov [ebp-3Ch] ecx +
mov [ebp-34h] edx +
mov esi ecx +
cmp eax 2000h +
jnz loc_419A1A  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_467E20 +
comisd xmm0 ds:qword_467E08 +
jbe loc_419A1A  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_435E4A  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
add esi eax +
xor eax eax +
lea ecx [ebp-30h] +
add esi 32h +
push 0  +
setb al  +
neg eax  +
or eax esi +
push eax  +
call sub_40DC00  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 4Ch  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40F690  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_408AE0  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_41A750  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_419AC6  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_419ABC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419AE5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44F848  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-44h] ecx +
mov eax [ebp+8] +
mov edx [ebp+14h] +
mov [ebp-48h] eax +
mov [ebp-40h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0Fh +
mov byte ptr [ebp-30h] 0 +
mov dword ptr [ebp-4] 0 +
mov eax [edx+14h] +
mov ecx [edx+18h] +
and eax 3000h +
mov edx [edx+1Ch] +
mov [ebp-3Ch] ecx +
test edx edx +
jg loc_419B6E  +
jl loc_419B5D  +
test ecx ecx +
jnz loc_419B6E  +
cmp eax 2000h +
jz loc_419B6E  +
mov ecx 6 +
xor edx edx +
mov [ebp-3Ch] ecx +
mov [ebp-34h] edx +
mov esi ecx +
cmp eax 2000h +
jnz loc_419BCA  +
movsd xmm1 qword ptr [ebp+1Ch] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_467E20 +
comisd xmm0 ds:qword_467E08 +
jbe loc_419BCA  +
lea eax [ebp-34h] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_435E4A  +
mov eax [ebp-34h] +
add esp 0Ch +
cdq   +
fstp  st +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov eax edx +
shr eax 1Fh +
add eax edx +
add esi eax +
xor eax eax +
lea ecx [ebp-30h] +
add esi 32h +
push 0  +
setb al  +
neg eax  +
or eax esi +
push eax  +
call sub_40DC00  +
cmp dword ptr [ebp-1Ch] 10h +
lea edi [ebp-30h] +
movsd xmm0 qword ptr [ebp+1Ch] +
cmovnb edi [ebp-30h] +
sub esp 8 +
mov eax [ebp-40h] +
mov esi [ebp-20h] +
movsd qword ptr [esp] xmm0 +
push dword ptr [ebp-3Ch]  +
push dword ptr [eax+14h]  +
lea eax [ebp-18h] +
push 0  +
push eax  +
push dword ptr [ebp-44h]  +
call sub_40F690  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_408AE0  +
cmp dword ptr [ebp-1Ch] 10h +
lea ecx [ebp-30h] +
mov esi [ebp-48h] +
cmovnb ecx [ebp-30h] +
push eax  +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
push dword ptr [ebp-44h]  +
call loc_41A750  +
mov edx [ebp-1Ch] +
add esp 38h +
cmp edx 10h +
jb loc_419C76  +
mov ecx [ebp-30h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_419C6C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_419C95  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41A2E0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41A2E0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41A2E0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_40F140  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_408AE0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41A2E0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4505E0  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp-2Ch] eax +
mov ebx [ebp+14h] +
movzx ecx word ptr [ebp+18h] +
mov edi [ebp+8] +
mov [ebp-40h] edi +
test dword ptr [ebx+14h] 4000h +
mov [ebp-34h] ecx +
jnz loc_419F10  +
mov esi [eax] +
movzx eax byte ptr [ebp+1Ch] +
push eax  +
push ecx  +
mov esi [esi+24h] +
mov ecx esi +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call ds:off_4522C0  +
mov ecx [ebp-2Ch] +
call esi  +
mov eax edi +
jmp loc_41A0D0  +
mov eax [ebx+30h] +
mov edi [eax+4] +
mov [ebp-38h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_41AF90  +
mov edi eax +
add esp 4 +
mov eax [ebp-38h] +
mov [ebp-30h] edi +
test eax eax +
jz loc_419F76  +
mov edx [eax] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-38h] +
call esi  +
mov edi eax +
test edi edi +
jz loc_419F73  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-30h] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
cmp byte ptr [ebp+1Ch] 0 +
lea eax [ebp-58h] +
mov dword ptr [ebp-4] 1 +
mov esi [edi] +
push eax  +
jz loc_419FEA  +
mov esi [esi+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-28h] +
call loc_406200  +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_419FF9  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_419FEF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41A0EE  +
jmp loc_419FEF  +
mov esi [esi+18h] +
jmp loc_419FA0  +
***
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebx+24h] 0 +
mov esi [ebx+20h] +
mov edi [ebp-18h] +
jl loc_41A013  +
jg loc_41A00B  +
test esi esi +
jz loc_41A013  +
cmp esi edi +
jbe loc_41A013  +
sub esi edi +
jmp loc_41A015  +
xor esi esi +
mov eax [ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41A04A  +
push esi  +
push dword ptr [ebp-34h]  +
lea eax [ebp-3Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_41A1C0  +
add esp 18h +
xor esi esi +
mov ecx [eax] +
mov [ebp+0Ch] ecx +
mov edx [eax+4] +
mov [ebp+10h] edx +
jmp loc_41A050  +
mov edx [ebp+10h] +
mov ecx [ebp+0Ch] +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push edi  +
cmovnb eax [ebp-28h] +
mov edi [ebp-2Ch] +
push eax  +
push edx  +
push ecx  +
lea eax [ebp-3Ch] +
push eax  +
push edi  +
call sub_41A240  +
push esi  +
push dword ptr [ebp-34h]  +
mov esi [ebp-40h] +
mov ecx [eax] +
mov [ebp+0Ch] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push edi  +
mov [ebp+10h] eax +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
call sub_41A1C0  +
mov edx [ebp-14h] +
add esp 30h +
cmp edx 8 +
jb loc_41A0CE  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41A0C4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41A0EE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call sub_432491  +
push ecx  +
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov ecx edx +
push edi  +
mov [ebp+var_4] esi +
mov dword ptr [esi+10h] 0 +
lea edi [ecx+2] +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41A127  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_406450  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov ecx edx +
push edi  +
mov [ebp+var_4] esi +
mov dword ptr [esi+10h] 0 +
lea edi [ecx+2] +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41A177  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_406450  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
sub esp 0Ch +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_14] +
mov [ebp+var_C] eax +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_4] esi +
push edi  +
mov edi [ebp+arg_C] +
test ebx ebx +
jz loc_41A2C7  +
nop   +
test edi edi +
jz loc_41A2B5  +
mov eax [edi+20h] +
movzx edx word ptr [esi] +
mov [ebp+var_8] edx +
cmp dword ptr [eax] 0 +
jz loc_41A290  +
mov ecx [edi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_41A290  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov eax [ebp+var_8] +
mov [edx] ax +
jmp loc_41A2A5  +
mov eax [edi] +
push edx  +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_C] +
mov ecx 0FFFFh +
movzx eax ax +
cmp cx ax +
jnz loc_41A2B9  +
mov byte ptr [ebp+arg_8] 1 +
add esi 2 +
mov [ebp+var_4] esi +
sub ebx 1 +
jnz loc_41A260  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450630  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+24h] +
mov eax [ebp+0Ch] +
mov edx [ebp+18h] +
mov esi [ebp+20h] +
mov [ebp-60h] eax +
mov [ebp-54h] edx +
mov [ebp-58h] esi +
test ebx ebx +
jz loc_41A335  +
mov al [esi] +
cmp al 2Bh +
jz loc_41A32E  +
cmp al 2Dh +
jnz loc_41A335  +
mov ecx 1 +
jmp loc_41A337  +
xor ecx ecx +
mov eax [edx+14h] +
and eax 0E00h +
mov [ebp-48h] ecx +
cmp eax 800h +
jnz loc_41A367  +
lea eax [ecx+2] +
cmp eax ebx +
ja loc_41A367  +
cmp byte ptr [esi+ecx] 30h +
jnz loc_41A367  +
mov cl [esi+ecx+1] +
cmp cl 78h +
jz loc_41A364  +
cmp cl 58h +
jnz loc_41A367  +
mov [ebp-48h] eax +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_41B250  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-4Ch] +
mov [ebp-44h] eax +
test edi edi +
jz loc_41A3CE  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41A3CE  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push eax  +
push ebx  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_413B80  +
mov edi [ebp-44h] +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 1 +
mov edx [ebp-58h] +
cmp dword ptr [ebp-14h] 8 +
mov ecx [edi] +
cmovnb eax [ebp-28h] +
push eax  +
lea eax [edx+ebx] +
mov esi [ecx+2Ch] +
mov ecx esi +
push eax  +
push edx  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edx [ebp-54h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-58h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_41AF90  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-58h] +
add esp 4 +
mov [ebp-44h] edi +
test eax eax +
jz loc_41A485  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-58h] +
call esi  +
mov edi eax +
test edi edi +
jz loc_41A482  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-44h] +
mov eax [edi] +
lea ecx [ebp-40h] +
push ecx  +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov byte ptr [ebp-4] 3 +
lea edi [ebp-40h] +
cmp dword ptr [ebp-2Ch] 10h +
cmovnb edi [ebp-40h] +
mov al [edi] +
cmp al 7Fh +
jz loc_41A56C  +
test al al +
jle loc_41A56C  +
mov eax [ebp-44h] +
mov eax [eax] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-44h] +
call esi  +
movzx esi ax +
mov al [edi] +
mov [ebp-44h] esi +
cmp al 7Fh +
jz loc_41A56C  +
mov edx [ebp-48h] +
test al al +
jle loc_41A56F  +
movsx ecx al +
mov eax ebx +
sub eax edx +
cmp ecx eax +
jnb loc_41A56F  +
sub ebx ecx +
mov ecx [ebp-18h] +
cmp ecx ebx +
jb loc_41A740  +
mov edx [ebp-14h] +
mov eax edx +
sub eax ecx +
cmp eax 1 +
jb loc_41A543  +
lea eax [ecx+1] +
cmp edx 8 +
mov [ebp-18h] eax +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub ecx ebx +
lea esi [eax+ebx*2] +
lea eax ds:2[ecx*2] +
push eax  +
lea eax [esi+2] +
push esi  +
push eax  +
call loc_42E1C0  +
mov eax [ebp-44h] +
add esp 0Ch +
mov [esi] ax +
mov esi eax +
jmp loc_41A558  +
push esi  +
push 1  +
push ebx  +
mov byte ptr [ebp-58h] 0 +
lea ecx [ebp-28h] +
push dword ptr [ebp-58h]  +
push 1  +
call loc_413CB0  +
cmp byte ptr [edi+1] 0 +
lea eax [edi+1] +
cmovg edi eax +
mov al [edi] +
cmp al 7Fh +
jnz loc_41A4E0  +
mov edx [ebp-48h] +
mov eax [ebp-54h] +
mov ecx [ebp-18h] +
mov [ebp-44h] ecx +
cmp dword ptr [eax+24h] 0 +
mov edi [eax+20h] +
jl loc_41A58F  +
jg loc_41A587  +
test edi edi +
jz loc_41A58F  +
cmp edi ecx +
jbe loc_41A58F  +
sub edi ecx +
jmp loc_41A591  +
xor edi edi +
mov eax [eax+14h] +
mov esi [ebp+1Ch] +
and eax 1C0h +
mov ebx [ebp+8] +
cmp eax 40h +
jz loc_41A62C  +
cmp eax 100h +
jz loc_41A5EF  +
push edi  +
push esi  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A1C0  +
mov esi [ebp-48h] +
xor edi edi +
cmp dword ptr [ebp-14h] 8 +
push esi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_41A240  +
add esp 30h +
jmp loc_41A64F  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push edx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A240  +
push edi  +
push esi  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push ecx  +
push eax  +
push ebx  +
call sub_41A1C0  +
add esp 30h +
xor edi edi +
jmp loc_41A64C  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push edx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A240  +
add esp 18h +
mov esi [ebp-48h] +
mov edx [eax] +
cmp dword ptr [ebp-14h] 8 +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub [ebp-44h] esi +
push dword ptr [ebp-44h]  +
mov [ebp+14h] ecx +
lea eax [eax+esi*2] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-50h] +
push eax  +
push ebx  +
call sub_41A240  +
mov edx [ebp-54h] +
mov esi [ebp-60h] +
push edi  +
mov ecx [eax] +
push dword ptr [ebp+1Ch]  +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_41A1C0  +
mov edx [ebp-2Ch] +
add esp 30h +
cmp edx 10h +
jb loc_41A6DA  +
mov ecx [ebp-40h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_41A6D0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41A745  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0Fh +
mov byte ptr [ebp-40h] 0 +
cmp edx 8 +
jb loc_41A722  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41A718  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41A745  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_406760  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450680  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx [ebp+24h] +
mov eax [ebp+0Ch] +
mov edi [ebp+18h] +
mov ebx [ebp+20h] +
mov [ebp-6Ch] eax +
mov [ebp-60h] edi +
mov [ebp-4Ch] ebx +
mov [ebp-68h] edx +
test edx edx +
jz loc_41A7A8  +
mov al [ebx] +
cmp al 2Bh +
jz loc_41A7A1  +
cmp al 2Dh +
jnz loc_41A7A8  +
mov ecx 1 +
jmp loc_41A7AA  +
xor ecx ecx +
mov eax [edi+14h] +
and eax 3000h +
mov [ebp-48h] ecx +
cmp eax 3000h +
jz loc_41A7C3  +
mov eax offset aEe +
jmp loc_41A7E4  +
lea esi [ecx+2] +
cmp esi edx +
ja loc_41A7DF  +
cmp byte ptr [ebx+ecx] 30h +
jnz loc_41A7DF  +
mov al [ebx+ecx+1] +
cmp al 78h +
jz loc_41A7DC  +
cmp al 58h +
jnz loc_41A7DF  +
mov [ebp-48h] esi +
mov eax offset aPp +
push eax  +
push ebx  +
call sub_435DA0  +
mov [ebp-64h] eax +
mov eax 2Eh +
mov [ebp-14h] ax +
call sub_435E22  +
mov eax [eax] +
mov al [eax] +
mov [ebp-14h] al +
lea eax [ebp-14h] +
push eax  +
push ebx  +
call sub_435DA0  +
mov ebx eax +
add esp 10h +
mov eax [edi+30h] +
mov edi [eax+4] +
mov [ebp-58h] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-5Ch] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_41B250  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add esp 4 +
mov edi [ebp-58h] +
mov [ebp-54h] eax +
test edi edi +
jz loc_41A879  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41A879  +
mov eax [edi] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp-68h] +
lea ecx [ebp-2Ch] +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push esi  +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
call loc_413B80  +
mov edi [ebp-54h] +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-4] 1 +
mov edx [ebp-4Ch] +
cmp dword ptr [ebp-18h] 8 +
mov ecx [edi] +
cmovnb eax [ebp-2Ch] +
push eax  +
lea eax [edx+esi] +
mov esi [ecx+2Ch] +
mov ecx esi +
push eax  +
push edx  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edx [ebp-60h] +
mov eax [edx+30h] +
mov edi [eax+4] +
mov [ebp-4Ch] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp-50h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_41AF90  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-4Ch] +
add esp 4 +
mov [ebp-54h] edi +
test eax eax +
jz loc_41A932  +
mov eax [eax] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-4Ch] +
call esi  +
mov [ebp-4Ch] eax +
test eax eax +
jz loc_41A932  +
mov eax [eax] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-4Ch] +
call esi  +
mov eax [edi] +
lea ecx [ebp-44h] +
push ecx  +
mov esi [eax+14h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov byte ptr [ebp-4] 3 +
mov eax [edi] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi [ebp-68h] +
movzx esi ax +
mov [ebp-4Ch] esi +
cmp ebx edi +
jz loc_41A995  +
mov eax [ebp-54h] +
mov eax [eax] +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp-54h] +
call esi  +
cmp dword ptr [ebp-18h] 8 +
mov esi [ebp-4Ch] +
movzx ecx ax +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
cmp ebx edi +
mov [eax+ebx*2] cx +
cmovz ebx [ebp-64h] +
lea edi [ebp-44h] +
cmp dword ptr [ebp-30h] 10h +
cmovnb edi [ebp-44h] +
mov al [edi] +
cmp al 7Fh +
jz loc_41AA3C  +
nop   +
mov edx [ebp-48h] +
test al al +
jle loc_41AA3F  +
movsx ecx al +
mov eax ebx +
sub eax edx +
cmp ecx eax +
jnb loc_41AA3F  +
sub ebx ecx +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jb loc_41AC10  +
mov edx [ebp-18h] +
mov eax edx +
sub eax ecx +
cmp eax 1 +
jb loc_41AA13  +
lea eax [ecx+1] +
cmp edx 8 +
mov [ebp-1Ch] eax +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
sub ecx ebx +
lea esi [eax+ebx*2] +
lea eax ds:2[ecx*2] +
push eax  +
lea eax [esi+2] +
push esi  +
push eax  +
call loc_42E1C0  +
mov eax [ebp-4Ch] +
add esp 0Ch +
mov [esi] ax +
mov esi eax +
jmp loc_41AA28  +
push esi  +
push 1  +
push ebx  +
mov byte ptr [ebp-64h] 0 +
lea ecx [ebp-2Ch] +
push dword ptr [ebp-64h]  +
push 1  +
call loc_413CB0  +
cmp byte ptr [edi+1] 0 +
lea eax [edi+1] +
cmovg edi eax +
mov al [edi] +
cmp al 7Fh +
jnz loc_41A9B0  +
mov edx [ebp-48h] +
mov ecx [ebp-60h] +
mov eax [ebp-1Ch] +
mov [ebp-4Ch] eax +
cmp dword ptr [ecx+24h] 0 +
mov edi [ecx+20h] +
jl loc_41AA5F  +
jg loc_41AA57  +
test edi edi +
jz loc_41AA5F  +
cmp edi eax +
jbe loc_41AA5F  +
sub edi eax +
jmp loc_41AA61  +
xor edi edi +
mov eax [ecx+14h] +
mov esi [ebp+1Ch] +
and eax 1C0h +
mov ebx [ebp+8] +
cmp eax 40h +
jz loc_41AAFC  +
cmp eax 100h +
jz loc_41AABF  +
push edi  +
push esi  +
push dword ptr [ebp+14h]  +
lea eax [ebp-5Ch] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A1C0  +
mov esi [ebp-48h] +
xor edi edi +
cmp dword ptr [ebp-18h] 8 +
push esi  +
mov edx [eax] +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-5Ch] +
mov [ebp+14h] ecx +
push eax  +
push ebx  +
call sub_41A240  +
add esp 30h +
jmp loc_41AB1F  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-5Ch] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A240  +
push edi  +
push esi  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
mov [ebp+14h] eax +
lea eax [ebp-5Ch] +
push ecx  +
push eax  +
push ebx  +
call sub_41A1C0  +
add esp 30h +
xor edi edi +
jmp loc_41AB1C  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push edx  +
cmovnb eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-5Ch] +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_41A240  +
add esp 18h +
mov esi [ebp-48h] +
mov edx [eax] +
cmp dword ptr [ebp-18h] 8 +
mov [ebp+10h] edx +
mov ecx [eax+4] +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
sub [ebp-4Ch] esi +
push dword ptr [ebp-4Ch]  +
mov [ebp+14h] ecx +
lea eax [eax+esi*2] +
push eax  +
push ecx  +
push edx  +
lea eax [ebp-5Ch] +
push eax  +
push ebx  +
call sub_41A240  +
mov edx [ebp-60h] +
mov esi [ebp-6Ch] +
push edi  +
mov ecx [eax] +
push dword ptr [ebp+1Ch]  +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edx+20h] 0 +
mov dword ptr [edx+24h] 0 +
call sub_41A1C0  +
mov edx [ebp-30h] +
add esp 30h +
cmp edx 10h +
jb loc_41ABAA  +
mov ecx [ebp-44h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_41ABA0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41AC15  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0Fh +
mov byte ptr [ebp-44h] 0 +
cmp edx 8 +
jb loc_41ABF2  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41ABE8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41AC15  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_406760  +
call sub_432491  +
push 0FFFFFFFFh  +
push offset loc_44F9A0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_10] eax +
push 8  +
mov dword ptr [eax] offset off_466358 +
call sub_42C7DB  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_42ADE4  +
mov [esi+4] eax +
add esp 8 +
mov eax [ebp+var_10] +
lea edi [eax+14h] +
lea ecx [eax+18h] +
lea edx [eax+24h] +
mov [eax+34h] esi +
lea ebx [eax+4] +
mov [eax+0Ch] ebx +
lea esi [eax+8] +
mov [eax+10h] esi +
mov [eax+1Ch] edi +
mov [eax+20h] ecx +
mov [eax+2Ch] edx +
add eax 28h +
mov [ebp+var_14] ebx +
mov ebx [ebp+var_10] +
mov [ebx+30h] eax +
mov ebx [ebp+var_14] +
mov dword ptr [esi] 0 +
mov dword ptr [ecx] 0 +
mov dword ptr [eax] 0 +
mov eax [ebp+var_10] +
mov dword ptr [ebx] 0 +
mov dword ptr [edi] 0 +
mov dword ptr [edx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_453CCC +
call sub_4322BA  +
push dword ptr [esi+10h]  +
call sub_4322BA  +
push dword ptr [esi+14h]  +
call sub_4322BA  +
add esp 0Ch +
mov dword ptr [esi] offset off_452C90 +
test [ebp+arg_0] 1 +
jz loc_41AD2E  +
push 18h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4506B8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
call sub_4094B0  +
mov eax [ebp+arg_0] +
mov [ebx+38h] eax +
mov eax [ebx+30h] +
mov dword ptr [ebx+3Ch] 0 +
mov edi [eax+4] +
mov [ebp+var_14] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0 +
push eax  +
call sub_41B250  +
mov edi eax +
add esp 4 +
mov ecx [edi] +
push 20h  +
mov esi [ecx+30h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
movzx edi ax +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0FFFFFFFFh +
mov edi [ebp+var_14] +
test edi edi +
jz loc_41ADFB  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41ADFB  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
cmp dword ptr [ebx+38h] 0 +
mov eax [ebp+var_10] +
mov [ebx+40h] ax +
jnz loc_41AE18  +
mov eax [ebx+0Ch] +
mov ecx ebx +
push 0  +
or eax 4 +
push eax  +
call loc_409430  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4506FF  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_18] edi +
call sub_42ABB7  +
mov [ebp+var_4] 0 +
mov esi dword_47073C +
mov ebx dword_4706F0 +
test esi esi +
jnz loc_41AEB1  +
push esi  +
lea ecx [ebp+var_14] +
call sub_42ABB7  +
cmp dword_47073C esi +
jnz loc_41AEA3  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_47073C eax +
lea ecx [ebp+var_14] +
call sub_42AC0F  +
mov esi dword_47073C +
mov ecx [edi+4] +
cmp esi [ecx+0Ch] +
jnb loc_41AEC9  +
mov eax [ecx+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41AF60  +
jmp loc_41AECB  +
xor edi edi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41AEE1  +
call sub_42ADDE  +
cmp esi [eax+0Ch] +
jnb loc_41AEE5  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41AF60  +
test ebx ebx +
jz loc_41AEED  +
mov edi ebx +
jmp loc_41AF60  +
push 8  +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp+var_14] edi +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_18] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_41AF16  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41AF1B  +
lea eax [ecx+1Ch] +
jmp loc_41AF1B  +
mov eax offset unk_462943 +
push eax  +
lea ecx [ebp+var_50] +
call loc_408FE0  +
lea ecx [ebp+var_50] +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi] offset off_453C9C +
call sub_409090  +
mov [ebp+var_18] edi +
push edi  +
mov byte ptr [ebp+var_4] 2 +
call sub_42ADB2  +
mov eax [edi] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov dword_4706F0 edi +
lea ecx [ebp+var_1C] +
call sub_42AC0F  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45077B  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 118h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebx+8] +
lea ecx [ebp-30h] +
push 0  +
mov [ebp-28h] edi +
mov dword ptr [ebp-20h] 0 +
call sub_42ABB7  +
mov dword ptr [ebp-4] 0 +
mov esi dword_470738 +
mov eax dword_4706E8 +
mov [ebp-24h] eax +
test esi esi +
jnz loc_41B030  +
push esi  +
lea ecx [ebp-20h] +
call sub_42ABB7  +
cmp dword_470738 esi +
jnz loc_41B022  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_470738 eax +
lea ecx [ebp-20h] +
call sub_42AC0F  +
mov esi dword_470738 +
mov ecx [edi+4] +
cmp esi [ecx+0Ch] +
jnb loc_41B048  +
mov eax [ecx+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41B21A  +
jmp loc_41B04A  +
xor edi edi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41B060  +
call sub_42ADDE  +
cmp esi [eax+0Ch] +
jnb loc_41B068  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41B21A  +
mov eax [ebp-24h] +
test eax eax +
jz loc_41B076  +
mov edi eax +
jmp loc_41B21A  +
push 18h  +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-24h] edi +
mov byte ptr [ebp-4] 1 +
xorps xmm0 xmm0 +
mov ecx [ebp-28h] +
movups oword ptr [edi] xmm0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_41B0AA  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41B0AF  +
lea eax [ecx+1Ch] +
jmp loc_41B0AF  +
mov eax offset unk_462943 +
push eax  +
lea ecx [ebp-98h] +
call loc_408FE0  +
mov dword ptr [ebp-20h] 1 +
mov dword ptr [edi+4] 0 +
mov dword ptr [ebp-4] 3 +
mov dword ptr [edi] offset off_453CCC +
call sub_435E22  +
lea eax [ebp-0C8h] +
push eax  +
call sub_42B276  +
add esp 4 +
mov [ebp-28h] edi +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-64h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [ebp-54h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [ebp-44h] xmm0 +
mov eax [eax+28h] +
mov [ebp-3Ch] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
lea eax [ebp-0F8h] +
mov byte ptr [ebp-4] 4 +
push eax  +
call sub_42B276  +
add esp 4 +
lea eax [ebp-124h] +
push eax  +
push 0  +
push offset unk_462943  +
call loc_410A30  +
add esp 0Ch +
mov [edi+8] eax +
lea eax [ebp-64h] +
push eax  +
push 0  +
push offset aFalse  +
call loc_418320  +
add esp 0Ch +
mov [edi+10h] eax +
lea eax [ebp-64h] +
push eax  +
push 0  +
push offset aTrue_0  +
call loc_418320  +
mov [edi+14h] eax +
add esp 0Ch +
xor eax eax +
mov byte ptr [ebp-18h] 2Eh +
mov [ebp-24h] ax +
xorps xmm0 xmm0 +
lea eax [ebp-64h] +
movlpd oword ptr [ebp-2Ch] xmm0 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push 1  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_42B443  +
movzx eax word ptr [ebp-24h] +
add esp 14h +
mov [edi+0Ch] ax +
xorps xmm0 xmm0 +
xor eax eax +
mov byte ptr [ebp-1Ch] 2Ch +
mov [ebp-20h] ax +
lea eax [ebp-64h] +
push eax  +
lea eax [ebp-38h] +
movlpd oword ptr [ebp-38h] xmm0 +
push eax  +
push 1  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
call sub_42B443  +
movzx eax word ptr [ebp-20h] +
add esp 14h +
mov [edi+0Eh] ax +
lea ecx [ebp-98h] +
mov dword ptr [ebp-4] 0 +
call sub_409090  +
mov [ebp-28h] edi +
push edi  +
mov byte ptr [ebp-4] 6 +
call sub_42ADB2  +
mov eax [edi] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov dword_4706E8 edi +
lea ecx [ebp-30h] +
call sub_42AC0F  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4507CF  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 90h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebx+8] +
lea ecx [ebp-20h] +
push 0  +
mov [ebp-18h] edi +
call sub_42ABB7  +
mov dword ptr [ebp-4] 0 +
mov esi dword_46F45C +
mov eax dword_4706EC +
mov [ebp-24h] eax +
test esi esi +
jnz loc_41B2E9  +
push esi  +
lea ecx [ebp-1Ch] +
call sub_42ABB7  +
cmp dword_46F45C esi +
jnz loc_41B2DB  +
mov eax dword_46F448 +
inc eax  +
mov dword_46F448 eax +
mov dword_46F45C eax +
lea ecx [ebp-1Ch] +
call sub_42AC0F  +
mov esi dword_46F45C +
mov ecx [edi+4] +
cmp esi [ecx+0Ch] +
jnb loc_41B301  +
mov eax [ecx+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41B3E3  +
jmp loc_41B303  +
xor edi edi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41B319  +
call sub_42ADDE  +
cmp esi [eax+0Ch] +
jnb loc_41B321  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
test edi edi +
jnz loc_41B3E3  +
mov eax [ebp-24h] +
test eax eax +
jz loc_41B32F  +
mov edi eax +
jmp loc_41B3E3  +
push 44h  +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-24h] edi +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-18h] +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_41B358  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41B35D  +
lea eax [ecx+1Ch] +
jmp loc_41B35D  +
mov eax offset unk_462943 +
push eax  +
lea ecx [ebp-6Ch] +
call loc_408FE0  +
lea eax [ebp-38h] +
mov dword ptr [edi+4] 0 +
push eax  +
mov dword ptr [edi] offset off_453C5C +
call sub_42B10D  +
add esp 4 +
movups xmm0 oword ptr [eax] +
lea eax [ebp-0A0h] +
push eax  +
movups oword ptr [edi+8] xmm0 +
call sub_42B276  +
add esp 4 +
lea ecx [ebp-6Ch] +
movups xmm0 oword ptr [eax] +
movups oword ptr [edi+18h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [edi+28h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [edi+38h] xmm0 +
mov eax [eax+28h] +
mov [edi+40h] eax +
call sub_409090  +
mov [ebp-18h] edi +
push edi  +
mov byte ptr [ebp-4] 2 +
call sub_42ADB2  +
mov eax [edi] +
add esp 4 +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov dword_4706EC edi +
lea ecx [ebp-20h] +
call sub_42AC0F  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450818  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_24] edx +
mov ebx ecx +
mov [ebp+var_28] ebx +
mov eax [ebx] +
xor esi esi +
mov [ebp+var_2C] esi +
mov [ebp+var_11] 0 +
mov [ebp+var_34] ebx +
mov eax [eax+4] +
mov edi [eax+ebx+38h] +
test edi edi +
jz loc_41B46F  +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
xor esi esi +
push ecx  +
mov ecx ebx +
mov [ebp+var_4] 0 +
call sub_41B770  +
mov [ebp+var_30] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41B5EB  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_18] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_1C] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
call sub_41B250  +
mov edi [ebp+var_18] +
add esp 4 +
mov [ebp+var_20] eax +
test edi edi +
jz loc_41B4F3  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41B4F3  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov eax [ebp+var_24] +
mov ecx eax +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_41B507  +
mov ecx [eax] +
xor eax eax +
mov byte ptr [ebp+var_4] 3 +
mov [ecx] ax +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+24h] 0 +
mov ecx [eax+ebx+20h] +
mov [ebp+var_18] ecx +
jl loc_41B531  +
jg loc_41B529  +
test ecx ecx +
jz loc_41B531  +
cmp ecx 7FFFFFFEh +
jb loc_41B538  +
mov [ebp+var_18] 7FFFFFFEh +
mov edi [eax+ebx+38h] +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_41B552  +
mov eax [edi+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_41B552  +
movzx eax word ptr [ecx] +
jmp loc_41B566  +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
movzx eax ax +
movzx edi ax +
cmp [ebp+var_18] 0 +
mov eax 0FFFFh +
jbe loc_41B5C1  +
cmp ax di +
jnz loc_41B580  +
mov esi 1 +
jmp loc_41B5E4  +
mov eax [ebp+var_20] +
push edi  +
push 48h  +
mov eax [eax] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx [ebp+var_20] +
call esi  +
test al al +
jnz loc_41B5C1  +
mov ecx [ebp+var_24] +
push edi  +
call loc_406320  +
mov eax [ebx] +
dec [ebp+var_18]  +
mov [ebp+var_11] 1 +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
call sub_41B6D0  +
movzx eax ax +
mov edi eax +
jmp loc_41B569  +
xor esi esi +
jmp loc_41B5E4  +
mov edx [ebp-28h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_41B5DE +
retn   +
mov ebx [ebp-28h] +
mov esi [ebp-2Ch] +
mov [ebp+var_4] 1 +
cmp [ebp+var_11] 0 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [eax+ebx+20h] 0 +
mov dword ptr [eax+ebx+24h] 0 +
jnz loc_41B609  +
or esi 2 +
mov eax [ebx] +
xor edx edx +
push 0  +
mov ecx [eax+4] +
mov eax 4 +
add ecx ebx +
cmp [ecx+38h] edx +
cmovnz eax edx +
or eax [ecx+0Ch] +
or eax esi +
push eax  +
call loc_409430  +
mov [ebp+var_4] 5 +
mov edi [ebp+var_34] +
mov eax [edi] +
mov eax [eax+4] +
mov edi [eax+edi+38h] +
test edi edi +
jz loc_41B652  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44F820  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_41B6BB  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi ecx +
mov eax [edi+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_41B70F  +
mov ecx [edi+2Ch] +
mov eax [ecx] +
cmp eax 1 +
jle loc_41B6F9  +
dec eax  +
mov [ecx] eax +
mov eax [edi+1Ch] +
pop edi  +
pop esi  +
mov ecx [eax] +
add ecx 2 +
mov [eax] ecx +
movzx eax word ptr [ecx] +
retn   +
test eax eax +
jle loc_41B70F  +
dec eax  +
mov [ecx] eax +
mov ecx [edi+1Ch] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
jmp loc_41B723  +
mov eax [edi] +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_41B732  +
pop edi  +
mov eax ecx +
pop esi  +
retn   +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_41B74C  +
mov eax [edi+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_41B74C  +
movzx eax word ptr [ecx] +
pop edi  +
movzx eax ax +
pop esi  +
retn   +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
movzx eax ax +
pop edi  +
movzx eax ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450848  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov edx [ebx] +
mov eax [edx+4] +
mov esi [eax+ebx+0Ch] +
lea ecx [eax+ebx] +
test esi esi +
jz loc_41B7DF  +
xor eax eax +
cmp [ecx+38h] eax +
push 0  +
setz al  +
lea eax ds:2[eax*4] +
or eax esi +
push eax  +
call loc_409430  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_41B7ED  +
call sub_40F880  +
mov edx [ebx] +
xor al al +
mov [ebp+var_15] al +
mov eax [edx+4] +
test byte ptr [eax+ebx+14h] 1 +
jz loc_41B927  +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_24] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
call sub_41B250  +
mov edi [ebp+var_24] +
add esp 4 +
mov [ebp+var_20] eax +
test edi edi +
jz loc_41B861  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41B861  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov [ebp+var_4] 1 +
mov eax [ebx] +
mov eax [eax+4] +
mov edi [eax+ebx+38h] +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_41B887  +
mov eax [edi+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_41B887  +
movzx eax word ptr [ecx] +
jmp loc_41B89B  +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
movzx eax ax +
mov edi [ebp+var_20] +
movzx ecx ax +
mov eax 0FFFFh +
cmp ax cx +
jnz loc_41B8AF  +
mov al 1 +
jmp loc_41B8FB  +
mov eax [edi] +
push ecx  +
push 48h  +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
test al al +
jz loc_41B8F8  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
call sub_41B6D0  +
movzx eax ax +
mov ecx eax +
jmp loc_41B8A1  +
mov edx [ebp-1Ch] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_41B8F5 +
retn   +
mov ebx [ebp-1Ch] +
mov al [ebp+var_15] +
mov [ebp+var_4] 0FFFFFFFFh +
test al al +
jz loc_41B927  +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
setz al  +
lea eax ds:3[eax*4] +
or eax [ecx+0Ch] +
push eax  +
call loc_409430  +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
setz al  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub ecx [ecx-4] +
jmp sub_4196E0  +
***
sub ecx [ecx-4] +
jmp sub_419710  +
***
sub ecx [ecx-4] +
jmp sub_4197D0  +
***
sub ecx [ecx-4] +
jmp sub_419850  +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov esi ecx +
mov [ebp+var_8] edx +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
mov [ebp+var_4] eax +
lea ebx [eax+1] +
push ebx  +
call sub_4324E2  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_41BA3C  +
mov esi dword_470290 +
test esi esi +
jz loc_41BA06  +
push offset aErrorAllocatin  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41BA33  +
mov esi [eax] +
push offset aErrorAllocatin  +
push offset aStringutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 28h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push 0  +
push 0  +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_41BAF6  +
cmp dword_470290 0 +
jz loc_41BAAA  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedToConver  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
push edi  +
call sub_4322BA  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov esi dword_470294 +
test esi esi +
jz loc_41BAE4  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aFailedToConver  +
push offset aStringutils  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
push edi  +
call sub_4322BA  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_4] +
mov ecx edi +
mov byte ptr [edi+eax] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41BB02  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_8] +
push edi  +
call loc_4081D0  +
push edi  +
call sub_4322BA  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov ebx ecx +
mov [ebp+var_4] edx +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov esi eax +
xor ecx ecx +
mov edx 2 +
lea eax [esi+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_41BBE5  +
mov esi dword_470290 +
test esi esi +
jz loc_41BBAF  +
push offset aErrorAllocat_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41BBDC  +
mov esi [eax] +
push offset aErrorAllocat_0  +
push offset aStringutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 28h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_41BC9B  +
cmp dword_470290 0 +
jz loc_41BC4F  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedToConv_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
push edi  +
call sub_4322BA  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov esi dword_470294 +
test esi esi +
jz loc_41BC89  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aFailedToConv_0  +
push offset aStringutils  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
push edi  +
call sub_4322BA  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
xor eax eax +
mov [edi+esi*2] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41BCA6  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp+var_4] +
push edi  +
call loc_406450  +
push edi  +
call sub_4322BA  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450880  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_14] ebx +
xor esi esi +
lea ecx [ebp+var_24] +
push ebx  +
mov [ebp+var_1C] esi +
call sub_40E810  +
mov [ebp+var_4] esi +
cmp [ebp+var_20] 0 +
jz loc_41BE04  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_28] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_41AE30  +
mov edi [ebp+var_28] +
add esp 4 +
mov [ebp+var_18] eax +
test edi edi +
jz loc_41BD8E  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41BD8E  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push [ebp+arg_4]  +
mov edi [ebp+var_18] +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebx] +
mov esi [edi] +
mov ecx [eax+4] +
mov esi [esi+1Ch] +
add ecx ebx +
mov byte ptr [ebp+var_2C] 0 +
movzx eax word ptr [ecx+40h] +
push eax  +
push ecx  +
push dword ptr [ecx+38h]  +
lea eax [ebp+var_2C] +
mov ecx esi +
push [ebp+var_2C]  +
push eax  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
xor esi esi +
mov edx 4 +
cmp byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
cmovnz esi edx +
jmp loc_41BE09  +
mov edx [ebp-14h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_41BDF7 +
retn   +
mov ebx [ebp-14h] +
mov esi [ebp-1Ch] +
mov dword ptr [ebp-4] 0 +
mov edx 4 +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
cmovnz edx eax +
or edx [ecx+0Ch] +
or edx esi +
push edx  +
call loc_409430  +
mov [ebp+var_4] 4 +
call sub_42AFFA  +
test al al +
jnz loc_41BE3D  +
mov ecx [ebp+var_24] +
call sub_40F960  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_24] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_41BE62  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_8] +
push ecx  +
push 0  +
push [ebp+arg_4]  +
push 0FFFFFFFFh  +
push eax  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_435785  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push offset ProcName  +
push offset ModuleName  +
mov [ebp+var_C] edx +
mov edi ecx +
xor bl bl +
mov [ebp+var_8] 0 +
call ds:GetModuleHandleW  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_41BFA8  +
lea eax [ebp+var_8] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jz loc_41BF25  +
cmp [ebp+var_8] 1 +
mov eax 20h +
mov ecx 40h +
mov bl 1 +
cmovz eax ecx +
mov [edi] eax +
jmp loc_41C009  +
cmp dword_470290 0 +
jz loc_41BF68  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aInside_getosde  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41C009  +
mov esi dword_470294 +
test esi esi +
jz loc_41C009  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aInside_getosde  +
push offset aOsutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_41C009  +
mov esi dword_470290 +
test esi esi +
jz loc_41BFDC  +
push offset aInside_getos_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_41C009  +
mov eax dword_470294 +
test eax eax +
jz loc_41C009  +
mov esi [eax] +
push offset aInside_getos_0  +
push offset aOsutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov eax [ebp+var_C] +
xor ecx ecx +
cmp dword ptr [edi] 20h +
pop edi  +
setnz cl  +
mov [eax] ecx +
mov al bl +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push offset aIswow64proce_0  +
push offset ModuleName  +
mov edi edx +
mov ebx ecx +
call ds:GetModuleHandleW  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_41C0FB  +
mov esi dword_470290 +
test esi esi +
jz loc_41C0B4  +
push offset aInside_getos_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov edx edi +
mov ecx ebx +
call sub_41BEB0  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
mov eax dword_470294 +
test eax eax +
jz loc_41C0E1  +
mov esi [eax] +
push offset aInside_getos_1  +
push offset aOsutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov edx edi +
mov ecx ebx +
call sub_41BEB0  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
jnz loc_41C1C7  +
cmp dword_470290 eax +
jz loc_41C173  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aInside_getos_2  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov edx edi +
mov ecx ebx +
call sub_41BEB0  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
mov esi dword_470294 +
test esi esi +
jz loc_41C1AD  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aInside_getos_2  +
push offset aOsutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov edx edi +
mov ecx ebx +
call sub_41BEB0  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
cmp word ptr [ebp+var_8] 0 +
jz loc_41C1D4  +
mov dword ptr [ebx] 40h +
mov cx word ptr [ebp+var_C] +
mov eax 0AA64h +
cmp cx ax +
jnz loc_41C1FB  +
mov dword ptr [edi] 2 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov edx 8664h +
cmp cx dx +
mov ecx [ebp+var_4] +
setz al  +
xor ecx ebp +
mov [edi] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov [ebp-12Ch] ebx +
mov esi 4 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
push 110h  +
lea eax [ebp-124h] +
mov dword ptr [ebp-128h] 11Ch +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
xor eax eax +
mov [ebp-12h] ax +
mov [ebp-10h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
movzx ecx si +
lea eax [ebp-128h] +
mov [ebp-124h] ecx +
xor ecx ecx +
push 23h  +
push eax  +
mov dword ptr [ebp-120h] 0 +
mov [ebp-14h] cx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_41C2E7  +
inc esi  +
cmp esi 0Fh +
jl loc_41C260  +
jmp loc_41C2EC  +
lea eax [esi-1] +
mov [ebx] eax +
mov edi 1 +
movzx esi word ptr [ebx] +
lea eax [ebp-124h] +
push 110h  +
push 0  +
push eax  +
mov dword ptr [ebp-128h] 11Ch +
call sub_42E740  +
add esp 0Ch +
xor eax eax +
mov [ebp-12h] ax +
mov [ebp-10h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
mov ecx esi +
mov [ebp-124h] ecx +
push eax  +
movzx ecx di +
lea eax [ebp-128h] +
mov [ebp-120h] ecx +
xor ecx ecx +
push 23h  +
push eax  +
mov [ebp-14h] cx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_41C379  +
inc edi  +
cmp edi 0Ah +
jl loc_41C2F1  +
jmp loc_41C37F  +
lea eax [edi-1] +
mov [ebx+4] eax +
mov ebx 1 +
mov eax [ebp-12Ch] +
push 110h  +
push 0  +
mov dword ptr [ebp-128h] 11Ch +
movzx edi word ptr [eax+4] +
movzx esi word ptr [eax] +
lea eax [ebp-124h] +
push eax  +
call sub_42E740  +
add esp 0Ch +
xor eax eax +
mov [ebp-12h] ax +
mov [ebp-10h] eax +
push 3  +
push 20h  +
push 3  +
push 1  +
push 3  +
push 2  +
push eax  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
call ds:VerSetConditionMask  +
push edx  +
push eax  +
mov ecx esi +
mov [ebp-14h] bx +
mov [ebp-124h] ecx +
lea eax [ebp-128h] +
push 23h  +
mov ecx edi +
push eax  +
mov [ebp-120h] ecx +
call ds:VerifyVersionInfoW  +
test eax eax +
jz loc_41C430  +
inc ebx  +
cmp ebx 0Ah +
jl loc_41C390  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp-12Ch] +
lea eax [ebx-1] +
pop edi  +
pop esi  +
pop ebx  +
mov [ecx+8] eax +
mov al 1 +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 34Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
lea eax [ebp-330h] +
mov dword ptr [ebp-330h] 11Ch +
push eax  +
mov esi ecx +
call ds:GetVersionExW  +
test eax eax +
jnz loc_41C492  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push 208h  +
lea eax [ebp-210h] +
push 0  +
push eax  +
call sub_42E740  +
push dword ptr [ebp-324h]  +
lea eax [ebp-210h] +
push offset aD  +
push eax  +
call sub_41BE80  +
add esp 18h +
mov dword ptr [ebp-338h] 0 +
xor eax eax +
mov dword ptr [ebp-334h] 7 +
lea edx [ebp-210h] +
mov [ebp-348h] ax +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_41C4E5  +
sub edx ecx +
lea eax [ebp-210h] +
sar edx 1 +
lea ecx [ebp-348h] +
push edx  +
push eax  +
call loc_406450  +
lea eax [ebp-348h] +
mov ecx esi +
push eax  +
call loc_406200  +
mov edx [ebp-334h] +
cmp edx 8 +
jb loc_41C551  +
mov ecx [ebp-348h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41C547  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41C562  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_4508EC+1)  +
mov eax large fs:0 +
push eax  +
push ebx  +
mov eax 5058h +
call sub_42D2D0  +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-5049h] dl +
mov [ebp-5050h] ecx +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-501Ch] 0 +
movq qword ptr [ebp-5024h] xmm0 +
mov dword ptr [ebp-5024h] 0 +
mov dword ptr [ebp-5020h] 0 +
mov dword ptr [ebp-501Ch] 0 +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-5068h] +
push 1  +
xor eax eax +
mov dword ptr [ebp-5058h] 0 +
push offset asc_45EDCC  +
mov dword ptr [ebp-5054h] 7 +
mov [ebp-5068h] ax +
call loc_406450  +
lea eax [ebp-5068h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea edx [ebx+8] +
lea ecx [ebp-5024h] +
call loc_418820  +
mov byte ptr [ebp-4] 3 +
add esp 4 +
mov edx [ebp-5054h] +
cmp edx 8 +
jb loc_41C68E  +
mov ecx [ebp-5068h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41C684  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edi [ebp-5020h] +
mov eax 2AAAAAABh +
mov esi [ebp-5024h] +
mov ecx edi +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jnz loc_41C6DF  +
lea eax [ebx+8] +
push eax  +
cmp edi [ebp-501Ch] +
jz loc_41C6CD  +
mov ecx edi +
call sub_406290  +
add dword ptr [ebp-5020h] 18h +
jmp loc_41C6D9  +
push edi  +
lea ecx [ebp-5024h] +
call loc_408850  +
mov esi [ebp-5024h] +
mov eax [esi+14h] +
mov edi esi +
cmp eax 8 +
jb loc_41C6EB  +
mov edi [esi] +
mov ecx [esi+10h] +
cmp ecx 11h +
jnz loc_41C721  +
mov edx ecx +
mov ecx offset aHkey_classes_r +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C71B  +
add ecx 2 +
sub edx 1 +
jnz loc_41C700  +
mov esi 80000000h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C72A  +
mov edi [esi] +
cmp ecx 11h +
jnz loc_41C761  +
mov edx ecx +
mov ecx offset aHkey_current_u +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C75B  +
add ecx 2 +
sub edx 1 +
jnz loc_41C740  +
mov esi 80000001h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C76A  +
mov edi [esi] +
cmp ecx 12h +
jnz loc_41C7A1  +
mov edx ecx +
mov ecx offset aHkey_local_mac +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C79B  +
add ecx 2 +
sub edx 1 +
jnz loc_41C780  +
mov esi 80000002h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C7AA  +
mov edi [esi] +
cmp ecx 0Ah +
jnz loc_41C7E1  +
mov edx ecx +
mov ecx offset aHkey_users +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C7DB  +
add ecx 2 +
sub edx 1 +
jnz loc_41C7C0  +
mov esi 80000003h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C7EA  +
mov edi [esi] +
cmp ecx 13h +
jnz loc_41C821  +
mov edx ecx +
mov ecx offset aHkey_current_c +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C81B  +
add ecx 2 +
sub edx 1 +
jnz loc_41C800  +
mov esi 80000005h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C82A  +
mov edi [esi] +
cmp ecx 15h +
jnz loc_41C85E  +
mov edx ecx +
mov ecx offset aHkey_performan +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C858  +
add ecx 2 +
sub edx 1 +
jnz loc_41C840  +
mov esi 80000004h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C867  +
mov edi [esi] +
cmp ecx 18h +
jnz loc_41C893  +
mov edx ecx +
mov ecx offset aHkey_perform_0 +
sub edi ecx +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41C88D  +
add ecx 2 +
sub edx 1 +
jnz loc_41C875  +
mov esi 80000060h +
jmp loc_41C8CA  +
mov eax [esi+14h] +
mov ecx [esi+10h] +
mov edi esi +
cmp eax 8 +
jb loc_41C89C  +
mov edi [esi] +
cmp ecx 15h +
jnz loc_41CD4C  +
mov edx ecx +
mov ecx offset aHkey_perform_1 +
sub edi ecx +
nop   +
mov ax [ecx+edi] +
cmp ax [ecx] +
jnz loc_41CD4C  +
add ecx 2 +
sub edx 1 +
jnz loc_41C8B0  +
mov esi 80000050h +
mov edi 7 +
mov dword ptr [ebp-5034h] 0 +
xor eax eax +
mov [ebp-5030h] edi +
mov [ebp-5044h] ax +
push ecx  +
push offset asc_45EDCC  +
lea ecx [ebx+8] +
mov byte ptr [ebp-4] 5 +
call loc_4112F0  +
cmp eax 0FFFFFFFFh +
jz loc_41C9B4  +
lea edx [eax+1] +
mov dword ptr [ebp-5058h] 0 +
xor eax eax +
mov [ebp-5054h] edi +
mov [ebp-5068h] ax +
mov eax [ebx+18h] +
cmp eax edx +
jb loc_41CEC5  +
sub eax edx +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebx+1Ch] 8 +
lea eax [ebx+8] +
cmovnb eax [ebx+8] +
push ecx  +
lea ecx [ebp-5068h] +
lea eax [eax+edx*2] +
push eax  +
call loc_406450  +
mov edx [ebp-5030h] +
cmp edx 8 +
jb loc_41C990  +
mov ecx [ebp-5044h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41C986  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-5068h] +
movups oword ptr [ebp-5044h] xmm0 +
movq xmm0 qword ptr [ebp-5058h] +
movq qword ptr [ebp-5034h] xmm0 +
mov edi [ebp-5030h] +
cmp byte ptr [ebp-5049h] 0 +
lea ecx [ebp-5048h] +
lea eax [ebp-5044h] +
push ecx  +
jz loc_41C9D1  +
push 20019h  +
jmp loc_41C9D6  +
push 20119h  +
cmp edi 8 +
push 0  +
cmovnb eax [ebp-5044h] +
push eax  +
push esi  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_41CA68  +
mov esi dword_470290 +
test esi esi +
jz loc_41CA2D  +
push eax  +
push offset aGetregistryval  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov byte ptr [ebp-5049h] 0 +
jmp loc_41CCE7  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41CA5C  +
mov esi [ecx] +
push eax  +
push offset aGetregistryval  +
push offset aOsutils  +
mov esi [esi+34h] +
push offset unk_45EE80  +
push 28h  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov byte ptr [ebp-5049h] 0 +
jmp loc_41CCE7  +
cmp dword ptr [ebx+4Ch] 8 +
lea esi [ebx+38h] +
mov byte ptr [ebp-5049h] 0 +
cmovnb esi [ebx+38h] +
cmp dword ptr [ebx+48h] 9 +
jnz loc_41CB85  +
mov ecx offset aReg_dword +
mov edx 9 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_41CB85  +
add ecx 2 +
sub edx 1 +
jnz loc_41CA90  +
cmp dword ptr [ebx+34h] 8 +
lea ecx [ebp-5028h] +
push ecx  +
lea ecx [ebp-502Ch] +
mov dword ptr [ebp-5028h] 4 +
push ecx  +
push edx  +
lea eax [ebx+20h] +
mov [ebp-502Ch] edx +
cmovnb eax [ebx+20h] +
push edx  +
push eax  +
push dword ptr [ebp-5048h]  +
call ds:RegQueryValueExW  +
mov ecx eax +
test ecx ecx +
jnz loc_41CB49  +
mov esi [ebp-502Ch] +
push 0B0h  +
push eax  +
lea eax [ebp-0C8h] +
push eax  +
call sub_42E740  +
add esp 4 +
lea ecx [ebp-0C8h] +
call sub_419490  +
push 0  +
push esi  +
lea ecx [ebp-0B8h] +
mov byte ptr [ebp-4] 6 +
call sub_41BCE0  +
mov edi [ebp-5050h] +
lea ecx [ebp-0C8h] +
mov edx edi +
call sub_41B410  +
lea ecx [ebp-0C8h] +
mov byte ptr [ebp-4] 5 +
call sub_418B10  +
mov byte ptr [ebp-5049h] 1 +
jmp loc_41CC3F  +
mov esi dword_470290 +
test esi esi +
jz loc_41CC0B  +
push ecx  +
push offset aGetregistryv_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41CC39  +
cmp dword ptr [ebx+34h] 8 +
lea ecx [ebp-5028h] +
push ecx  +
lea ecx [ebp-5018h] +
mov dword ptr [ebp-5028h] 5000h +
push ecx  +
push 0  +
lea eax [ebx+20h] +
cmovnb eax [ebx+20h] +
push 0  +
push eax  +
push dword ptr [ebp-5048h]  +
call ds:RegQueryValueExW  +
mov ecx eax +
test ecx ecx +
jnz loc_41CBFD  +
lea ecx [ebp-5018h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41CBD0  +
mov edi [ebp-5050h] +
lea eax [ebp-5018h] +
sub ecx edx +
sar ecx 1 +
push ecx  +
push eax  +
mov ecx edi +
call loc_406450  +
mov byte ptr [ebp-5049h] 1 +
jmp loc_41CC3F  +
mov esi dword_470290 +
test esi esi +
jnz loc_41CB57  +
mov eax dword_470294 +
test eax eax +
jz loc_41CC39  +
mov esi [eax] +
push ecx  +
push offset aGetregistryv_0  +
push offset aOsutils  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_45EE80  +
push 28h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov edi [ebp-5050h] +
push dword ptr [ebp-5048h]  +
call ds:RegCloseKey  +
cmp dword_470290 0 +
jz loc_41CC9C  +
cmp dword ptr [edi+14h] 8 +
jb loc_41CC5C  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
movzx eax byte ptr [ebp-5049h] +
push edi  +
push eax  +
push offset aGetregistryv_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aOsutils  +
push offset aOobeutils  +
push 0Ah  +
call ds:off_4522C0  +
call esi  +
add esp 24h +
jmp loc_41CCE7  +
mov esi dword_470294 +
test esi esi +
jz loc_41CCE7  +
cmp dword ptr [edi+14h] 8 +
jb loc_41CCAE  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
movzx eax byte ptr [ebp-5049h] +
push edi  +
push eax  +
push offset aGetregistryv_1  +
push offset aOsutils  +
push offset unk_45EE80  +
push 0Ah  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
mov edx [ebp-5030h] +
cmp edx 8 +
jb loc_41CD27  +
mov ecx [ebp-5044h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41CD1D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov esi [ebp-5024h] +
xor eax eax +
mov dword ptr [ebp-5034h] 0 +
mov dword ptr [ebp-5030h] 7 +
mov [ebp-5044h] ax +
jmp loc_41CD53  +
mov byte ptr [ebp-5049h] 0 +
test esi esi +
jz loc_41CDD3  +
mov edx [ebp-5020h] +
push ecx  +
mov ecx esi +
call loc_406C50  +
mov ecx [ebp-501Ch] +
mov eax 2AAAAAABh +
mov esi [ebp-5024h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_41CDAB  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-5024h] 0 +
mov dword ptr [ebp-5020h] 0 +
mov dword ptr [ebp-501Ch] 0 +
mov edx [ebx+1Ch] +
cmp edx 8 +
jb loc_41CE0D  +
mov ecx [ebx+8] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41CE03  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebx+34h] +
xor eax eax +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 7 +
mov [ebx+8] ax +
cmp edx 8 +
jb loc_41CE57  +
mov ecx [ebx+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41CE4D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebx+4Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 7 +
mov [ebx+20h] ax +
cmp edx 8 +
jb loc_41CEA1  +
mov ecx [ebx+38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41CE97  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41CECA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-5049h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call loc_406760  +
call sub_432491  +
int 3  +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_41CEE0  +
push eax  +
call ds:FreeLibrary  +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx] 0 +
jnz loc_41CFB8  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_41CF0D  +
mov eax [edi] +
push eax  +
call ds:LoadLibraryW  +
mov [ebx] eax +
test eax eax +
jnz loc_41CFAB  +
push esi  +
cmp dword_470290 eax +
jz loc_41CF67  +
cmp dword ptr [edi+14h] 8 +
jb loc_41CF2F  +
mov edi [edi] +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push edi  +
push offset aUnableToLoadLi  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aNativelibrary  +
push offset aOobeutils  +
push 28h  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_41CFAA  +
mov esi dword_470294 +
test esi esi +
jz loc_41CFAA  +
cmp dword ptr [edi+14h] 8 +
jb loc_41CF79  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push edi  +
push offset aUnableToLoadLi  +
push offset aNativelibrary  +
push offset unk_45EE80  +
push 28h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
pop esi  +
cmp dword ptr [ebx] 0 +
pop edi  +
jnz loc_41CFB8  +
xor al al +
pop ebx  +
pop ebp  +
retn 4  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450930  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 54h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-34h] esi +
push edx  +
lea ecx [ebp-2Ch] +
mov [ebp-34h] esi +
call sub_406290  +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp-1Ch] +
test ecx ecx +
jnz loc_41D03B  +
movups xmm0 oword ptr [ebp-2Ch] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebp-1Ch] +
jmp loc_41D15E  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
cmp word ptr [eax] 22h +
jz loc_41D01C  +
cmp dword ptr [ebp-18h] 8 +
lea edx [ebp-2Ch] +
cmovnb edx [ebp-2Ch] +
test ecx ecx +
jz loc_41D06E  +
mov eax edx +
cmp word ptr [eax] 20h +
jz loc_41D07C  +
add eax 2 +
sub ecx 1 +
jnz loc_41D060  +
movq xmm0 qword ptr [ebp-1Ch] +
movups xmm1 oword ptr [ebp-2Ch] +
jmp loc_41D14D  +
sub eax edx +
sar eax 1 +
cmp eax 0FFFFFFFFh +
jz loc_41D06E  +
lea eax [ebp-2Ch] +
mov edx offset asc_46293C +
push eax  +
lea ecx [ebp-60h] +
call loc_4067D0  +
add esp 4 +
push 1  +
push offset asc_46293C  +
mov ecx eax +
mov byte ptr [ebp-4] 1 +
call loc_406570  +
mov edx [ebp-18h] +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-48h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-38h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
cmp edx 8 +
jb loc_41D10E  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41D0FF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41D182  +
push edx  +
push ecx  +
call sub_42CA5C  +
movq xmm0 qword ptr [ebp-38h] +
add esp 8 +
mov edx [ebp-4Ch] +
cmp edx 8 +
jb loc_41D149  +
mov ecx [ebp-60h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41D13A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41D182  +
push edx  +
push ecx  +
call sub_42CA5C  +
movq xmm0 qword ptr [ebp-38h] +
add esp 8 +
movups xmm1 oword ptr [ebp-48h] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
movups oword ptr [esi] xmm1 +
movq qword ptr [esi+10h] xmm0 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov eax edx +
mov dword ptr [ebp-41Ch] 101h +
push esi  +
mov esi [ebp+8] +
mov edx ecx +
mov ecx [ebp+0Ch] +
mov ebx eax +
push edi  +
xor edi edi +
mov [ebp-42Ch] eax +
mov [eax+10h] edi +
cmp dword ptr [eax+14h] 8 +
mov [ebp-424h] edx +
mov [ebp-430h] ecx +
mov [ebp-428h] edi +
jb loc_41D1E1  +
mov ebx [eax] +
xor eax eax +
mov [ebx] ax +
mov [esi+10h] eax +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_41D1F3  +
mov eax [esi] +
xor ebx ebx +
mov [eax] bx +
mov eax ecx +
mov [ecx+10h] ebx +
cmp dword ptr [ecx+14h] 8 +
jb loc_41D205  +
mov eax [ecx] +
xor ecx ecx +
xor ebx ebx +
mov [eax] cx +
test edx edx +
jz loc_41D4A1  +
lea eax [ebp-428h] +
push eax  +
push ebx  +
push ebx  +
push 1  +
push edx  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_41D258  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_41D4A1  +
push dword ptr [ebp-428h]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_41D4A1  +
lea eax [ebp-428h] +
push eax  +
push dword ptr [ebp-428h]  +
push ebx  +
push 1  +
push dword ptr [ebp-424h]  +
call ds:GetTokenInformation  +
test eax eax +
jz loc_41D48D  +
lea eax [ebp-420h] +
push eax  +
lea eax [ebp-41Ch] +
push eax  +
lea eax [ebp-418h] +
push eax  +
lea eax [ebp-41Ch] +
push eax  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebx]  +
push 0  +
call ds:LookupAccountSidW  +
test eax eax +
jnz loc_41D367  +
call ds:GetLastError  +
cmp eax 534h +
jnz loc_41D2D5  +
push offset aNone_mapped  +
lea eax [ebp-210h] +
push eax  +
call ds:lstrcpyW  +
jmp loc_41D48D  +
cmp dword_470290 edi +
jz loc_41D314  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aLookupaccounts  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41D34E  +
mov esi dword_470294 +
test esi esi +
jz loc_41D34E  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aLookupaccounts  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
call ds:GetLastError  +
push eax  +
push offset aLookupaccoun_0  +
call sub_4085D0  +
add esp 8 +
jmp loc_41D48D  +
lea edx [ebp-210h] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_41D370  +
sub edx ecx +
lea eax [ebp-210h] +
mov ecx [ebp-42Ch] +
sar edx 1 +
push edx  +
push eax  +
call loc_406450  +
lea edx [ebp-418h] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_41D3A0  +
sub edx ecx +
lea eax [ebp-418h] +
sar edx 1 +
mov ecx esi +
push edx  +
push eax  +
call loc_406450  +
lea eax [ebp-424h] +
mov [ebp-424h] edi +
push eax  +
push dword ptr [ebx]  +
call ds:ConvertSidToStringSidW  +
test eax eax +
jnz loc_41D452  +
cmp dword_470290 edi +
jz loc_41D416  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aConvertsidtost  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41D48D  +
mov esi dword_470294 +
test esi esi +
jz loc_41D48D  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aConvertsidtost  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_41D48D  +
mov ecx [ebp-424h] +
mov edx ecx +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_41D460  +
sub edx esi +
sar edx 1 +
push edx  +
push ecx  +
mov ecx [ebp-430h] +
call loc_406450  +
push dword ptr [ebp-424h]  +
call ds:LocalFree  +
mov edi 1 +
test ebx ebx +
jz loc_41D4A1  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_450975+1)  +
mov eax large fs:0 +
push eax  +
sub esp 65Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp-668h] +
push eax  +
push offset aS1518  +
call ds:ConvertStringSidToSidW  +
lea eax [ebp-664h] +
mov dword ptr [ebp-62Ch] 101h +
push eax  +
lea eax [ebp-62Ch] +
push eax  +
lea eax [ebp-628h] +
push eax  +
lea eax [ebp-62Ch] +
push eax  +
lea eax [ebp-218h] +
push eax  +
push dword ptr [ebp-668h]  +
push 0  +
call ds:LookupAccountSidW  +
test eax eax +
jnz loc_41D5E0  +
cmp dword_470290 eax +
jz loc_41D593  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aIssystemproces  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
push dword ptr [ebp-668h]  +
call ds:LocalFree  +
xor al al +
jmp loc_41D877  +
mov esi dword_470294 +
test esi esi +
jz loc_41D5CD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aIssystemproces  +
mov esi [esi+34h] +
mov ecx esi +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
push dword ptr [ebp-668h]  +
call ds:LocalFree  +
xor al al +
jmp loc_41D877  +
lea eax [ebp-648h] +
mov dword ptr [ebp-648h] 101h +
push eax  +
lea eax [ebp-420h] +
push eax  +
call ds:GetUserNameW  +
test eax eax +
jnz loc_41D673  +
cmp dword_470290 eax +
jz loc_41D652  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aIssystemproc_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
push dword ptr [ebp-668h]  +
call ds:LocalFree  +
xor al al +
jmp loc_41D877  +
mov esi dword_470294 +
test esi esi +
jz loc_41D5CD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aIssystemproc_0  +
jmp loc_41D5AB  +
***
xor eax eax +
mov dword ptr [ebp-634h] 0 +
lea ecx [ebp-218h] +
mov dword ptr [ebp-630h] 7 +
mov [ebp-644h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41D6A0  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-644h] +
call loc_406450  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-420h] +
xor eax eax +
mov dword ptr [ebp-650h] 0 +
mov dword ptr [ebp-64Ch] 7 +
lea edx [ecx+2] +
mov [ebp-660h] ax +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41D6F0  +
sub ecx edx +
lea eax [ebp-420h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-660h] +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
mov esi dword_470290 +
test esi esi +
jz loc_41D75F  +
cmp dword ptr [ebp-630h] 8 +
lea eax [ebp-644h] +
mov ecx esi +
cmovnb eax [ebp-644h] +
push eax  +
push offset aIssystemproc_1  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 0Ah  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41D7A2  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41D7A2  +
cmp dword ptr [ebp-630h] 8 +
lea eax [ebp-644h] +
mov esi [ecx] +
cmovnb eax [ebp-644h] +
push eax  +
push offset aIssystemproc_1  +
mov esi [esi+34h] +
push offset aProcessutils  +
push offset unk_45EE80  +
push 0Ah  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
cmp dword ptr [ebp-64Ch] 8 +
lea ecx [ebp-660h] +
mov edi [ebp-660h] +
lea esi [ebp-644h] +
mov edx [ebp-634h] +
cmovnb ecx edi +
cmp dword ptr [ebp-630h] 8 +
cmovnb esi [ebp-644h] +
cmp edx [ebp-650h] +
jnz loc_41D7F5  +
test edx edx +
jz loc_41D7F1  +
sub esi ecx +
mov ax [esi+ecx] +
cmp ax [ecx] +
jnz loc_41D7F5  +
add ecx 2 +
sub edx 1 +
jnz loc_41D7E0  +
mov bl 1 +
jmp loc_41D7F7  +
xor bl bl +
push dword ptr [ebp-668h]  +
call ds:LocalFree  +
mov eax [ebp-64Ch] +
cmp eax 8 +
jb loc_41D839  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_41D82F  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41D893  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-630h] +
cmp edx 8 +
jb loc_41D875  +
mov ecx [ebp-644h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41D86B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41D893  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
sub esp 24h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+hObject] +
mov [ebp+hObject] 0 +
push eax  +
push 20h  +
mov bl cl +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_41D8EF  +
lea eax [ebp+Luid] +
push eax  +
push offset Name  +
push 0  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_41D900  +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+Luid.LowPart] +
mov ecx 2 +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
xor eax eax +
push 0  +
test bl bl +
mov [ebp+NewState.PrivilegeCount] 1 +
push 0  +
cmovnz eax ecx +
push 0  +
mov [ebp+NewState.Privileges.Attributes] eax +
lea eax [ebp+NewState] +
push eax  +
push 0  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
push [ebp+hObject]  +
test eax eax +
jz loc_41D8E9  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_4509DD+1)  +
mov eax large fs:0 +
push eax  +
sub esp 2B4h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov cl 1 +
mov [ebp-2B4h] eax +
mov eax [ebp+0Ch] +
mov [ebp-2B0h] eax +
call sub_41D8A0  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-20h] 0 +
movq qword ptr [ebp-28h] xmm0 +
xor ebx ebx +
xor edi edi +
mov dword ptr [ebp-28h] 0 +
mov [ebp-24h] ebx +
mov [ebp-20h] edi +
push edi  +
push 0Fh  +
mov [ebp-4] edi +
call ds:CreateToolhelp32Snapshot  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_41D9FA  +
lea eax [ebp-2A0h] +
mov dword ptr [ebp-2A0h] 22Ch +
push eax  +
push esi  +
call ds:Process32FirstW  +
test eax eax +
jnz loc_41DA80  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx eax +
test esi esi +
jz loc_41DA43  +
push ecx  +
push offset aFailedToGetAll  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
xor cl cl +
call sub_41D8A0  +
xor bl bl +
jmp loc_41E00D  +
mov eax dword_470294 +
test eax eax +
jz loc_41DA71  +
mov esi [eax] +
push ecx  +
push offset aFailedToGetAll  +
push offset aProcessutils  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_45EE80  +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor cl cl +
call sub_41D8A0  +
xor bl bl +
jmp loc_41E00D  +
push offset aExplorer_exe  +
lea eax [ebp-27Ch] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_41DAC0  +
cmp ebx edi +
jz loc_41DAAA  +
mov eax [ebp-298h] +
mov [ebx] eax +
add ebx 4 +
mov [ebp-24h] ebx +
jmp loc_41DAC0  +
lea eax [ebp-298h] +
push eax  +
push ebx  +
lea ecx [ebp-28h] +
call loc_41F1A0  +
mov edi [ebp-20h] +
mov ebx [ebp-24h] +
lea eax [ebp-2A0h] +
push eax  +
push esi  +
call ds:Process32NextW  +
test eax eax +
jnz loc_41DA80  +
push esi  +
mov [ebp-2ACh] edi +
call ds:CloseHandle  +
mov esi dword_470290 +
mov edi [ebp-28h] +
test esi esi +
jz loc_41DB1E  +
mov eax ebx +
mov ecx esi +
sub eax edi +
sar eax 2 +
push eax  +
push offset aSignedInUsersC  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 1Eh  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_41DB54  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41DB54  +
mov esi [ecx] +
mov eax ebx +
sub eax edi +
sar eax 2 +
push eax  +
mov esi [esi+34h] +
push offset aSignedInUsersC  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 1Eh  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
mov esi edi +
mov byte ptr [ebp-4] 1 +
cmp esi ebx +
jz loc_41DF66  +
xor eax eax +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
mov [ebp-48h] eax +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
mov [ebp-30h] eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
mov byte ptr [ebp-4] 4 +
mov ebx [esi] +
push ebx  +
push eax  +
push 400h  +
mov [ebp-2A4h] eax +
call ds:OpenProcess  +
mov edi eax +
test edi edi +
jnz loc_41DC60  +
call ds:GetLastError  +
mov edi dword_470290 +
mov ecx eax +
test edi edi +
jz loc_41DC28  +
push ecx  +
push ebx  +
push offset aFailedToOpenpr  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 20h +
mov byte ptr [ebp-4] 1 +
jmp loc_41DF57  +
mov eax dword_470294 +
test eax eax +
jz loc_41DC57  +
push ecx  +
push ebx  +
push offset aFailedToOpenpr  +
mov edi [eax] +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
mov edi [edi+34h] +
mov ecx edi +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 1Ch +
mov byte ptr [ebp-4] 1 +
jmp loc_41DF57  +
lea eax [ebp-2A4h] +
push eax  +
push 0Ah  +
push edi  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_41DCCE  +
call ds:GetLastError  +
mov edi dword_470290 +
mov ecx eax +
test edi edi +
jz loc_41DCB9  +
push ecx  +
push ebx  +
push offset aFailedToOpen_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 20h +
mov byte ptr [ebp-4] 1 +
jmp loc_41DF57  +
mov eax dword_470294 +
test eax eax +
jz loc_41DC57  +
push ecx  +
push ebx  +
push offset aFailedToOpen_0  +
jmp loc_41DC38  +
***
push edi  +
call ds:CloseHandle  +
push ecx  +
mov ecx [ebp-2A4h] +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
lea edx [ebp-70h] +
call loc_41D190  +
add esp 0Ch +
test eax eax +
jnz loc_41DD6C  +
call ds:GetLastError  +
mov edi dword_470290 +
mov ecx eax +
test edi edi +
jz loc_41DD34  +
push ecx  +
push ebx  +
push offset aFailedToGetlog  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 20h +
jmp loc_41DE91  +
mov eax dword_470294 +
test eax eax +
jz loc_41DE91  +
mov edi [eax] +
push ecx  +
push ebx  +
push offset aFailedToGetlog  +
mov edi [edi+34h] +
mov ecx edi +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push eax  +
call ds:off_4522C0  +
call edi  +
add esp 1Ch +
jmp loc_41DE91  +
mov edi [ebp-1Ch] +
mov ecx [ebp-18h] +
cmp edi ecx +
jz loc_41DE14  +
mov edx [ebp-40h] +
mov [ebp-2A8h] edx +
cmp dword ptr [ebp-2Ch] 8 +
lea eax [ebp-40h] +
mov ebx edi +
cmovnb eax edx +
cmp dword ptr [edi+14h] 8 +
jb loc_41DD97  +
mov ebx [edi] +
mov edx [edi+10h] +
cmp edx [ebp-30h] +
jnz loc_41DE02  +
test edx edx +
jz loc_41DDB9  +
sub ebx eax +
mov cx [ebx+eax] +
cmp cx [eax] +
jnz loc_41DDFF  +
add eax 2 +
sub edx 1 +
jnz loc_41DDA5  +
mov ecx [ebp-18h] +
cmp edi ecx +
jz loc_41DE14  +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_41DEDB  +
mov edx [ebp-2A8h] +
lea ecx ds:2[eax*2] +
mov eax edx +
cmp ecx 1000h +
jb loc_41DDF8  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push ecx  +
push edx  +
jmp loc_41DED3  +
mov ecx [ebp-18h] +
add edi 18h +
cmp edi ecx +
jz loc_41DE14  +
mov edx [ebp-2A8h] +
jmp loc_41DD83  +
***
lea eax [ebp-40h] +
push eax  +
cmp ecx [ebp-14h] +
jz loc_41DE28  +
call sub_406290  +
add dword ptr [ebp-18h] 18h +
jmp loc_41DE31  +
push ecx  +
lea ecx [ebp-1Ch] +
call loc_408850  +
push 0  +
push 0  +
push dword ptr [ebp-2B0h]  +
lea eax [ebp-40h] +
push dword ptr [ebp-2B4h]  +
sub esp 18h +
mov ecx esp +
mov [ebp-2A8h] esp +
push eax  +
call sub_406290  +
sub esp 18h +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-58h] +
mov [ebp-2B8h] esp +
mov ecx esp +
push eax  +
call sub_406290  +
sub esp 18h +
mov byte ptr [ebp-4] 6 +
lea eax [ebp-70h] +
mov ecx esp +
push eax  +
call sub_406290  +
push dword ptr [ebp-2A4h]  +
mov byte ptr [ebp-4] 4 +
call loc_41E040  +
add esp 5Ch +
push dword ptr [ebp-2A4h]  +
call ds:CloseHandle  +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_41DEDB  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41DED1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-44h] +
cmp edx 8 +
jb loc_41DF19  +
mov ecx [ebp-58h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41DF0F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-5Ch] +
cmp edx 8 +
jb loc_41DF57  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41DF4D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
add esi 4 +
cmp esi [ebp-24h] +
jnz loc_41DB90  +
mov edi [ebp-28h] +
xor cl cl +
call sub_41D8A0  +
mov ecx [ebp-1Ch] +
mov bl 1 +
test ecx ecx +
jz loc_41DFDA  +
mov edx [ebp-18h] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-14h] +
mov eax 2AAAAAABh +
mov esi [ebp-1Ch] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_41DFBB  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
test edi edi +
jz loc_41E00D  +
mov ecx [ebp-2ACh] +
mov eax edi +
sub ecx edi +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_41E003  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E02B  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450A6A  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 108h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebx+58h] +
mov edx [ebx+8] +
mov edi [ebx+54h] +
mov [ebp-0E0h] eax +
mov eax [ebx+60h] +
mov [ebp-0F4h] edx +
mov [ebp-0E4h] edi +
mov [ebp-0F0h] eax +
mov dword ptr [ebp-4] 2 +
mov dword ptr [ebp-0ECh] 0 +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-0D9h] 1 +
mov dword ptr [ebp-0F8h] 0 +
test edx edx +
jz loc_41E87C  +
test edi edi +
jz loc_41E87C  +
test eax eax +
jnz loc_41E136  +
mov esi dword_470290 +
test esi esi +
jz loc_41E12D  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
mov ecx edi +
cmovnb eax [ebx+3Ch] +
cmp dword ptr [edi+14h] 8 +
jb loc_41E101  +
mov ecx [edi] +
push eax  +
push ecx  +
push offset aLaunchingProce  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 1Eh  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_41E171  +
mov eax dword_470294 +
test eax eax +
jz loc_41E171  +
cmp dword ptr [ebx+50h] 8 +
lea ecx [ebx+3Ch] +
mov edx edi +
cmovnb ecx [ebx+3Ch] +
cmp dword ptr [edi+14h] 8 +
jb loc_41E14B  +
mov edx [edi] +
mov esi [eax] +
push ecx  +
push edx  +
push offset aLaunchingProce  +
mov esi [esi+34h] +
mov ecx esi +
push offset aProcessutils  +
push offset unk_45EE80  +
push 1Eh  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
mov eax [ebp-0E0h] +
xor ecx ecx +
test eax eax +
mov [ebp-1Ch] ecx +
cmovz eax ecx +
mov [ebp-0E0h] eax +
mov byte ptr [ebp-4] 3 +
xor eax eax +
push 0Bh  +
mov [ebp-0C8h] ecx +
lea ecx [ebp-0D8h] +
push offset aUserenv_dll  +
mov dword ptr [ebp-0C4h] 7 +
mov [ebp-0D8h] ax +
call loc_406450  +
lea eax [ebp-0D8h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-1Ch] +
call sub_41CEF0  +
mov eax [ebp-1Ch] +
mov dword ptr [ebp-0E8h] 0 +
test eax eax +
jz loc_41E1EC  +
push offset aCreateenvironm  +
push eax  +
call ds:GetProcAddress  +
mov [ebp-0E8h] eax +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-0C4h] +
cmp edx 8 +
jb loc_41E230  +
mov ecx [ebp-0D8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41E226  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E9DE  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-0C8h] 0 +
push 0Bh  +
push offset aUserenv_dll  +
lea ecx [ebp-114h] +
mov dword ptr [ebp-0C4h] 7 +
mov [ebp-0D8h] ax +
mov [ebp-104h] eax +
mov dword ptr [ebp-100h] 7 +
mov [ebp-114h] ax +
call loc_406450  +
lea eax [ebp-114h] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-1Ch] +
call sub_41CEF0  +
mov esi [ebp-1Ch] +
mov dword ptr [ebp-0FCh] 0 +
test esi esi +
jz loc_41E2AC  +
push offset aDestroyenviron  +
push esi  +
call ds:GetProcAddress  +
mov [ebp-0FCh] eax +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-100h] +
cmp edx 8 +
jb loc_41E2F0  +
mov ecx [ebp-114h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41E2E6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E9E3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-104h] 0 +
mov [ebp-114h] ax +
mov [ebp-0C0h] eax +
mov eax [ebp-0E8h] +
mov dword ptr [ebp-100h] 7 +
test eax eax +
jz loc_41E355  +
push 0  +
push dword ptr [ebp-0F4h]  +
lea ecx [ebp-0C0h] +
push ecx  +
mov ecx eax +
call ds:off_4522C0  +
mov eax [ebp-0E8h] +
call eax  +
test eax eax +
jz loc_41E355  +
mov al [ebp-0D9h] +
mov dword ptr [ebp-0F8h] 400h +
jmp loc_41E41D  +
call ds:GetLastError  +
mov [ebp-0ECh] eax +
mov eax [ebp-0F0h] +
test eax eax +
jz loc_41E38D  +
cmp dword ptr [ebx+50h] 8 +
lea ecx [ebx+3Ch] +
mov edi [eax] +
cmovnb ecx [ebx+3Ch] +
push ecx  +
push offset aFailedToCrea_2  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push eax  +
jmp loc_41E3FF  +
mov ecx dword_470290 +
mov [ebp-0E8h] ecx +
test ecx ecx +
jz loc_41E3D5  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
cmovnb eax [ebx+3Ch] +
push eax  +
push offset aFailedToCrea_2  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call dword ptr [ebp-0E8h]  +
add esp 1Ch +
jmp loc_41E415  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41E415  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
mov edi [ecx] +
cmovnb eax [ebx+3Ch] +
push eax  +
push offset aFailedToCrea_2  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov edi [edi+34h] +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
mov edi [ebp-0E4h] +
add esp 18h +
xor al al +
mov [ebp-0D9h] al +
mov dword ptr [ebp-0BCh] 0 +
test al al +
jz loc_41E689  +
lea eax [ebp-0BCh] +
push eax  +
push 1  +
push 2  +
push 0  +
push 0Bh  +
push dword ptr [ebp-0F4h]  +
call ds:DuplicateTokenEx  +
test eax eax +
jnz loc_41E4FC  +
call ds:GetLastError  +
mov ecx [ebp-0F0h] +
mov edx eax +
mov [ebp-0ECh] edx +
test ecx ecx +
jnz loc_41E4BF  +
mov edi dword_470290 +
test edi edi +
jz loc_41E4B5  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
push edx  +
cmovnb eax [ebx+3Ch] +
mov ecx edi +
push eax  +
push offset aFailedToDuplic  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call edi  +
add esp 20h +
mov byte ptr [ebp-0D9h] 0 +
jmp loc_41E689  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41E4F0  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
mov edi [ecx] +
cmovnb eax [ebx+3Ch] +
push edx  +
push eax  +
mov edi [edi+34h] +
push offset aFailedToDuplic  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 1Ch +
mov byte ptr [ebp-0D9h] 0 +
jmp loc_41E689  +
cmp dword ptr [edi+2Ch] 8 +
lea eax [edi+18h] +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0B8h] 44h +
movlpd oword ptr [ebp-0B4h] xmm0 +
movlpd oword ptr [ebp-0ACh] xmm0 +
movlpd oword ptr [ebp-0A4h] xmm0 +
movlpd oword ptr [ebp-9Ch] xmm0 +
movlpd oword ptr [ebp-94h] xmm0 +
movlpd oword ptr [ebp-8Ch] xmm0 +
movlpd oword ptr [ebp-84h] xmm0 +
movlpd oword ptr [ebp-7Ch] xmm0 +
movups oword ptr [ebp-0D0h] xmm0 +
jb loc_41E558  +
mov eax [eax] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_41E562  +
mov ecx [edi] +
lea edx [ebp-0D0h] +
push edx  +
lea edx [ebp-0B8h] +
push edx  +
push eax  +
push dword ptr [ebp-0C0h]  +
push dword ptr [ebp-0F8h]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push 0  +
push dword ptr [ebp-0BCh]  +
call ds:CreateProcessAsUserW  +
test eax eax +
jnz loc_41E641  +
call ds:GetLastError  +
mov ecx [ebp-0F0h] +
mov edx eax +
mov [ebp-0ECh] edx +
test ecx ecx +
jnz loc_41E607  +
mov edi dword_470290 +
test edi edi +
jz loc_41E5FD  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
push edx  +
cmovnb eax [ebx+3Ch] +
mov ecx edi +
push eax  +
push offset aFailedToCrea_3  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call edi  +
add esp 20h +
mov byte ptr [ebp-0D9h] 0 +
jmp loc_41E67D  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_41E638  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
mov edi [ecx] +
cmovnb eax [ebx+3Ch] +
push edx  +
push eax  +
mov edi [edi+34h] +
push offset aFailedToCrea_3  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 1Ch +
mov byte ptr [ebp-0D9h] 0 +
jmp loc_41E67D  +
cmp byte ptr [edi+31h] 0 +
jz loc_41E653  +
push dword ptr [ebp-0C8h]  +
call ds:AllowSetForegroundWindow  +
cmp byte ptr [edi+30h] 0 +
jz loc_41E67D  +
push 0FFFFFFFFh  +
push dword ptr [ebp-0D0h]  +
call ds:WaitForSingleObject  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp-0D0h]  +
call ds:GetExitCodeProcess  +
mov eax [ebp-18h] +
mov [ebp-18h] eax +
push dword ptr [ebp-0BCh]  +
call ds:CloseHandle  +
mov edi [ebp-0FCh] +
test edi edi +
jz loc_41E6A3  +
push dword ptr [ebp-0C0h]  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
cmp dword ptr [ebp-0E0h] 0 +
jz loc_41E7A4  +
xor eax eax +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
mov [ebp-48h] eax +
mov dword ptr [ebp-44h] 7 +
mov [ebp-58h] ax +
mov [ebp-30h] eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
mov byte ptr [ebp-4] 6 +
lea eax [ebx+0Ch] +
cmp dword ptr [ebx+20h] 8 +
lea ecx [ebp-70h] +
push dword ptr [ebx+1Ch]  +
cmovnb eax [ebx+0Ch] +
push eax  +
call loc_406450  +
cmp dword ptr [ebx+38h] 8 +
lea eax [ebx+24h] +
push dword ptr [ebx+34h]  +
cmovnb eax [ebx+24h] +
lea ecx [ebp-58h] +
push eax  +
call loc_406450  +
cmp dword ptr [ebx+50h] 8 +
lea eax [ebx+3Ch] +
push dword ptr [ebx+4Ch]  +
cmovnb eax [ebx+3Ch] +
lea ecx [ebp-40h] +
push eax  +
call loc_406450  +
mov eax [ebp-18h] +
mov [ebp-24h] eax +
mov eax [ebp-0ECh] +
mov [ebp-28h] eax +
mov eax [ebp-0E0h] +
mov edi [eax+4] +
cmp edi [eax+8] +
jz loc_41E78C  +
lea eax [ebp-70h] +
mov [ebp-18h] edi +
push eax  +
mov ecx edi +
call sub_406290  +
lea eax [ebp-58h] +
mov byte ptr [ebp-4] 7 +
push eax  +
lea ecx [edi+18h] +
call sub_406290  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [edi+30h] +
call sub_406290  +
mov eax [ebp-28h] +
mov [edi+48h] eax +
mov eax [ebp-24h] +
mov [edi+4Ch] eax +
mov eax [ebp-0E0h] +
add dword ptr [eax+4] 50h +
jmp loc_41E798  +
lea ecx [ebp-70h] +
push ecx  +
push edi  +
mov ecx eax +
call loc_41EF50  +
lea ecx [ebp-70h] +
mov byte ptr [ebp-4] 3 +
call loc_410A80  +
mov ecx [ebp-0F0h] +
test ecx ecx +
jz loc_41E7CD  +
cmp dword ptr [ebx+50h] 8 +
lea edx [ebx+3Ch] +
mov eax [ebp-0E4h] +
cmovnb edx [ebx+3Ch] +
cmp dword ptr [eax+14h] 8 +
jb loc_41E849  +
mov eax [eax] +
jmp loc_41E849  +
cmp dword_470290 0 +
jz loc_41E821  +
cmp dword ptr [ebx+50h] 8 +
lea ecx [ebx+3Ch] +
mov eax [ebp-0E4h] +
cmovnb ecx [ebx+3Ch] +
cmp dword ptr [eax+14h] 8 +
jb loc_41E7EF  +
mov eax [eax] +
mov edi dword_470290 +
push ecx  +
push eax  +
push offset aLaunchingPro_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 1Eh  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 20h +
jmp loc_41E86F  +
cmp dword_470294 0 +
jz loc_41E86F  +
cmp dword ptr [ebx+50h] 8 +
lea edx [ebx+3Ch] +
mov eax [ebp-0E4h] +
cmovnb edx [ebx+3Ch] +
cmp dword ptr [eax+14h] 8 +
jb loc_41E843  +
mov eax [eax] +
mov ecx dword_470294 +
mov edi [ecx] +
push edx  +
push eax  +
push offset aLaunchingPro_0  +
mov edi [edi+34h] +
push offset aProcessutils  +
push offset unk_45EE80  +
push 1Eh  +
push ecx  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esp 1Ch +
test esi esi +
jz loc_41E8E8  +
push esi  +
call ds:FreeLibrary  +
jmp loc_41E8E8  +
test eax eax +
jnz loc_41E8BD  +
mov esi dword_470290 +
test esi esi +
jz loc_41E8B4  +
push offset aInvalidArgum_0  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 28h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_41E8E1  +
mov eax dword_470294 +
test eax eax +
jz loc_41E8E1  +
mov esi [eax] +
push offset aInvalidArgum_0  +
push offset aProcessutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 28h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov byte ptr [ebp-0D9h] 0 +
mov edx [ebx+20h] +
cmp edx 8 +
jb loc_41E922  +
mov ecx [ebx+0Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41E918  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E9E8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebx+38h] +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 7 +
mov [ebx+0Ch] ax +
cmp edx 8 +
jb loc_41E970  +
mov ecx [ebx+24h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41E966  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E9E8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebx+50h] +
xor eax eax +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 7 +
mov [ebx+24h] ax +
cmp edx 8 +
jb loc_41E9BA  +
mov ecx [ebx+3Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41E9B0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41E9E8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-0D9h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_450AD8+1)  +
mov eax large fs:0 +
push eax  +
sub esp 0A4h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov ebx ecx +
mov [ebp-78h] ebx +
mov eax [ebp+10h] +
mov [ebp-7Ch] eax +
call loc_41D4C0  +
test al al +
jnz loc_41EAA1  +
mov esi dword_470290 +
test esi esi +
jz loc_41EA6D  +
push offset aLaunchprocessd  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
jmp loc_41EEBE  +
mov eax dword_470294 +
test eax eax +
jz loc_41EA9A  +
mov esi [eax] +
push offset aLaunchprocessd  +
push offset aProcessutils  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
xor al al +
jmp loc_41EEBE  +
xor eax eax +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
mov [ebp-4] eax +
lea ecx [ebp-94h] +
mov esi [edi] +
mov edx ebx +
mov edi [edi+4] +
call loc_41CFC0  +
mov byte ptr [ebp-4] 1 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_41EAD8  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-40h] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-80h] +
cmp edx 8 +
jb loc_41EB25  +
mov ecx [ebp-94h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41EB1B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41EEDA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp esi edi +
jz loc_41EC67  +
jp loc_41EB3C  +
inc dword ptr [ebx-74F7EB82h]  +
setalc   +
jb loc_41EB49  +
mov edx [esi] +
mov ecx edx +
mov dword ptr [ebp-9Ch] 0 +
xor eax eax +
mov dword ptr [ebp-98h] 7 +
mov [ebp-0ACh] ax +
lea ebx [ecx+2] +
mov ebx [ebp-78h] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 4 +
cmp eax ebx +
jz loc_41EC9C  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_41EC90  +
mov eax [ebx] +
push dword ptr [ebx+10h]  +
lea ecx [ebp-28h] +
push eax  +
call loc_406450  +
lea ecx [ebp-28h] +
call loc_414260  +
test al al +
jnz loc_41ED32  +
cmp dword_470290 0 +
jz loc_41ECF1  +
call ds:GetLastError  +
mov esi dword_470290 +
mov ecx esi +
push eax  +
push offset aFailedToGetPar  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aProcessutils  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
xor bl bl +
jmp loc_41EE3C  +
mov esi dword_470294 +
test esi esi +
jz loc_41ED2B  +
mov esi [esi] +
call ds:GetLastError  +
mov esi [esi+34h] +
mov ecx esi +
push eax  +
push offset aFailedToGetPar  +
push offset aProcessutils  +
push offset unk_45EE80  +
push 32h  +
push dword_470294  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor bl bl +
jmp loc_41EE3C  +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
mov [ebp-4Ch] eax +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] ax +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
lea ecx [ebp-74h] +
push dword ptr [ebp-30h]  +
cmovnb eax [ebp-40h] +
push eax  +
call loc_406450  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
push dword ptr [ebp-18h]  +
cmovnb eax [ebp-28h] +
lea ecx [ebp-5Ch] +
push eax  +
call loc_406450  +
sub esp 8 +
mov word ptr [ebp-44h] 1 +
lea eax [ebp-74h] +
push dword ptr [ebp-7Ch]  +
push eax  +
call loc_41D960  +
mov edx [ebp-48h] +
add esp 10h +
mov bl al +
cmp edx 8 +
jb loc_41EDDA  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41EDD0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41EEDF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-60h] +
xor eax eax +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] ax +
cmp edx 8 +
jb loc_41EE28  +
mov ecx [ebp-74h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41EE1E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41EEDF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-64h] 0 +
mov dword ptr [ebp-60h] 7 +
mov [ebp-74h] ax +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_41EE72  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41EE68  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41EEDF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-2Ch] +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
cmp edx 8 +
jb loc_41EEBC  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_41EEB2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41EEDF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
add esp 8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450B23  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov ecx [ebp+8] +
mov eax [ebp+0Ch] +
mov edi [ebx] +
mov [ebp-18h] eax +
mov eax 66666667h +
mov [ebp-20h] ecx +
sub ecx edi +
imul  ecx +
mov ecx [ebx+4] +
sar edx 5 +
sub ecx edi +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-14h] eax +
mov eax 66666667h +
imul  ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-28h] eax +
cmp eax 3333333h +
jz loc_41F177  +
mov ecx [ebx+8] +
lea esi [eax+1] +
sub ecx edi +
mov eax 66666667h +
imul  ecx +
mov eax 3333333h +
sar edx 5 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_41EFF4  +
mov eax esi +
mov [ebp-24h] esi +
jmp loc_41EFFF  +
lea eax [edx+ecx] +
cmp eax esi +
cmovb eax esi +
mov [ebp-24h] eax +
cmp eax 3333333h +
ja loc_41F172  +
lea eax [eax+eax*4] +
shl eax 4 +
mov [ebp-2Ch] eax +
cmp eax 1000h +
jb loc_41F041  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_41F172  +
push ecx  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_41F17C  +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_41F057  +
test eax eax +
jz loc_41F055  +
push eax  +
call sub_42C7DB  +
add esp 4 +
mov [ebp-1Ch] eax +
mov edi eax +
jmp loc_41F05A  +
xor edi edi +
mov [ebp-1Ch] edi +
mov eax [ebp-14h] +
push dword ptr [ebp-18h]  +
mov dword ptr [ebp-4] 0 +
lea esi [eax+eax*4] +
shl esi 4 +
add esi edi +
mov ecx esi +
mov [ebp-30h] esi +
mov [ebp-34h] esi +
lea eax [esi+50h] +
mov [ebp-14h] eax +
call sub_406290  +
mov eax [ebp-18h] +
lea ecx [esi+18h] +
add eax 18h +
mov byte ptr [ebp-4] 1 +
push eax  +
call sub_406290  +
mov eax [ebp-18h] +
lea ecx [esi+30h] +
add eax 30h +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_406290  +
mov ecx [ebp-18h] +
mov eax [ecx+48h] +
mov [esi+48h] eax +
mov eax [ecx+4Ch] +
mov [esi+4Ch] eax +
mov ecx [ebx] +
mov edx [ebx+4] +
mov eax [ebp-20h] +
push ecx  +
push edi  +
cmp eax edx +
jz loc_41F0D9  +
mov edx eax +
call sub_41F300  +
mov edx [ebx+4] +
lea eax [esi+50h] +
mov ecx [ebp-20h] +
add esp 4 +
push eax  +
call sub_41F300  +
mov esi [ebx] +
add esp 8 +
test esi esi +
jz loc_41F142  +
mov eax [ebx+4] +
mov [ebp-14h] eax +
cmp esi eax +
jz loc_41F102  +
mov ecx esi +
call loc_410A80  +
add esi 50h +
cmp esi [ebp-14h] +
jnz loc_41F0F1  +
mov esi [ebx] +
mov ecx [ebx+8] +
mov eax 66666667h +
sub ecx esi +
imul  ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*4] +
shl ecx 4 +
cmp ecx 1000h +
jb loc_41F138  +
mov edx [esi-4] +
add ecx 23h +
sub esi edx +
lea eax [esi-4] +
cmp eax 1Fh +
ja loc_41F17C  +
mov esi edx +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-28h] +
inc eax  +
mov [ebx] edi +
lea ecx [eax+eax*4] +
mov eax [ebp-30h] +
shl ecx 4 +
add ecx edi +
mov [ebx+4] ecx +
mov ecx [ebp-2Ch] +
add ecx edi +
mov [ebx+8] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_4028F0  +
call loc_406D30  +
call sub_432491  +
mov eax [ebp-14h] +
push eax  +
push eax  +
call sub_40FB10  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-1Ch]  +
call loc_40FB40  +
push 0  +
push 0  +
call sub_42DBD3  +
int 3  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-8] eax +
mov edx [edi] +
sub eax edx +
sar eax 2 +
mov [ebp-4] eax +
mov eax [edi+4] +
sub eax edx +
sar eax 2 +
cmp eax 3FFFFFFFh +
jz loc_41F2ED  +
mov ecx [edi+8] +
lea ebx [eax+1] +
sub ecx edx +
mov [ebp-0Ch] ebx +
sar ecx 2 +
mov eax 3FFFFFFFh +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_41F1EF  +
mov eax ebx +
jmp loc_41F1F7  +
lea eax [edx+ecx] +
cmp eax ebx +
cmovb eax ebx +
cmp eax 3FFFFFFFh +
ja loc_41F2E8  +
lea ebx ds:0[eax*4] +
cmp ebx 1000h +
jb loc_41F238  +
lea eax [ebx+23h] +
cmp eax ebx +
jbe loc_41F2E8  +
push eax  +
call sub_42C7DB  +
add esp 4 +
test eax eax +
jz loc_41F2F2  +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_41F24B  +
test ebx ebx +
jz loc_41F249  +
push ebx  +
call sub_42C7DB  +
add esp 4 +
mov esi eax +
jmp loc_41F24B  +
xor esi esi +
mov eax [ebp-4] +
mov edx [ebp-8] +
lea ecx [esi+eax*4] +
mov eax [ebp+0Ch] +
mov [ebp-4] ecx +
mov eax [eax] +
mov [ecx] eax +
mov eax [edi+4] +
mov ecx [edi] +
cmp edx eax +
jnz loc_41F276  +
sub eax ecx +
push eax  +
push ecx  +
push esi  +
call loc_42E1C0  +
add esp 0Ch +
jmp loc_41F299  +
sub edx ecx +
push edx  +
push ecx  +
push esi  +
call loc_42E1C0  +
mov eax [edi+4] +
mov ecx [ebp-8] +
sub eax ecx +
push eax  +
mov eax [ebp-4] +
push ecx  +
add eax 4 +
push eax  +
call loc_42E1C0  +
add esp 18h +
mov eax [edi] +
test eax eax +
jz loc_41F2CB  +
mov ecx [edi+8] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_41F2C1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41F2F2  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-0Ch] +
mov [edi] esi +
lea ecx [esi+eax*4] +
mov eax [ebp-4] +
mov [edi+4] ecx +
lea ecx [ebx+esi] +
mov [edi+8] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call loc_4028F0  +
call loc_406D30  +
call sub_432491  +
push ecx  +
mov eax ecx +
mov [ebp+var_4] edx +
push edi  +
mov edi [ebp+arg_0] +
cmp eax edx +
jz loc_41F3C4  +
push ebx  +
mov ebx edi +
lea ecx [eax+2Ch] +
push esi  +
lea esi [edi+40h] +
sub ebx eax +
mov dword ptr [esi-30h] 0 +
lea ecx [ecx+50h] +
mov dword ptr [esi-2Ch] 0 +
lea esi [esi+50h] +
movups xmm0 oword ptr [ecx-7Ch] +
xor eax eax +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [ecx-6Ch] +
movq qword ptr [edi+10h] xmm0 +
add edi 50h +
mov dword ptr [ecx-6Ch] 0 +
mov dword ptr [ecx-68h] 7 +
mov [ecx-7Ch] ax +
mov [esi-68h] eax +
mov [ebx+ecx-50h] eax +
movups xmm0 oword ptr [ecx-64h] +
movups oword ptr [esi-78h] xmm0 +
movq xmm0 qword ptr [ecx-54h] +
movq qword ptr [esi-68h] xmm0 +
mov [ecx-54h] eax +
mov dword ptr [ecx-50h] 7 +
mov [ecx-64h] ax +
mov [esi-50h] eax +
mov [esi-4Ch] eax +
movups xmm0 oword ptr [ecx-4Ch] +
movups oword ptr [esi-60h] xmm0 +
movq xmm0 qword ptr [ecx-3Ch] +
movq qword ptr [esi-50h] xmm0 +
mov [ecx-3Ch] eax +
mov dword ptr [ecx-38h] 7 +
mov [ecx-4Ch] ax +
mov eax [ecx-34h] +
mov [esi-48h] eax +
mov edx [ecx-30h] +
mov [esi-44h] edx +
lea edx [ecx-2Ch] +
cmp edx [ebp+var_4] +
jnz loc_41F321  +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_450B4C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_470748 +
cmp eax [ecx+4] +
jle loc_41F46A  +
push offset dword_470748  +
call sub_42C50A  +
add esp 4 +
cmp dword_470748 0FFFFFFFFh +
jnz loc_41F46A  +
mov [ebp+var_4] 0 +
push 34h  +
mov dword_47074C 0 +
mov dword_470750 0 +
call sub_42C7DB  +
push offset loc_451AE0  +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov dword_47074C eax +
call sub_42CA47  +
push offset dword_470748  +
call sub_42C4C0  +
add esp 0Ch +
mov eax offset dword_47074C +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450B88  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-30h] ecx +
mov edi [ebp+8] +
mov [ebp-24h] edi +
test edi edi +
jnz loc_41F4BF  +
xor al al +
jmp loc_41F785  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov [ebp-29h] al +
test al al +
jz loc_41F785  +
mov ecx [ebp-30h] +
lea ebx [edi+4] +
push ebx  +
lea eax [ebp-40h] +
mov [ebp-34h] ebx +
push eax  +
call sub_407190  +
mov esi [ebp-38h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41F52A  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_41F503  +
mov edx [esi+10h] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_41F50D  +
mov ecx [ebx] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [ebx+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jnz loc_41F52A  +
mov eax [ebp-30h] +
mov eax [eax] +
jmp loc_41F531  +
mov eax [ebp-30h] +
mov esi [eax] +
mov eax esi +
cmp esi eax +
jnz loc_41F73A  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-18h] 0 +
movq qword ptr [ebp-20h] xmm0 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push 0  +
lea ecx [ebp-20h] +
call loc_41FC40  +
mov esi [ebp-30h] +
lea eax [ebp-40h] +
push ebx  +
push eax  +
mov ecx esi +
call sub_407190  +
mov edi [ebp-38h] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_41F5CA  +
cmp dword ptr [edi+24h] 8 +
lea edx [edi+10h] +
jb loc_41F5AA  +
mov edx [edi+10h] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_41F5B4  +
mov ecx [ebx] +
push dword ptr [edi+20h]  +
push edx  +
mov edx [ebx+10h] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_41F63D  +
cmp dword ptr [esi+4] 4EC4EC4h +
jz loc_41F7A3  +
mov ebx [esi] +
mov [ebp-28h] esi +
mov byte ptr [ebp-4] 1 +
push 34h  +
mov dword ptr [ebp-24h] 0 +
call sub_42C7DB  +
mov edi eax +
add esp 4 +
mov [ebp-24h] edi +
push dword ptr [ebp-34h]  +
lea ecx [edi+10h] +
mov byte ptr [ebp-4] 2 +
call sub_406290  +
mov ecx [ebp-30h] +
push edi  +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
mov dword ptr [edi+30h] 0 +
mov byte ptr [ebp-4] 0 +
push dword ptr [ebp-3Ch]  +
mov [edi] ebx +
push dword ptr [ebp-40h]  +
mov [edi+4] ebx +
mov [edi+8] ebx +
mov word ptr [edi+0Ch] 0 +
call sub_406D40  +
mov edi eax +
lea ebx [edi+28h] +
mov edi [ebp-20h] +
lea eax [ebp-20h] +
cmp ebx eax +
jz loc_41F708  +
mov eax [ebp-1Ch] +
mov ecx [ebx+8] +
sub eax edi +
mov edx [ebx] +
mov esi eax +
sub ecx edx +
sar esi 2 +
sar ecx 2 +
mov [ebp-24h] eax +
cmp esi ecx +
jbe loc_41F6F3  +
cmp esi 3FFFFFFFh +
ja loc_41F7A8  +
mov eax ecx +
shr eax 1 +
mov [ebp-30h] eax +
mov eax 3FFFFFFFh +
sub eax [ebp-30h] +
cmp ecx eax +
ja loc_41F698  +
mov eax [ebp-30h] +
add eax ecx +
cmp eax esi +
cmovb eax esi +
mov esi eax +
test edx edx +
jz loc_41F6DF  +
shl ecx 2 +
cmp ecx 1000h +
jb loc_41F6C1  +
mov eax [edx-4] +
add ecx 23h +
sub edx eax +
mov [ebp-34h] eax +
lea eax [edx-4] +
cmp eax 1Fh +
ja loc_41F7AD  +
mov edx [ebp-34h] +
push ecx  +
push edx  +
call sub_42CA5C  +
mov dword ptr [ebx] 0 +
add esp 8 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
push esi  +
call loc_41FD50  +
mov [ebx] eax +
mov [ebx+4] eax +
lea eax [eax+esi*4] +
mov [ebx+8] eax +
mov eax [ebp-24h] +
mov esi [ebx] +
push eax  +
push edi  +
push esi  +
call loc_42E1C0  +
mov eax [ebp-24h] +
add esp 0Ch +
add eax esi +
mov [ebx+4] eax +
test edi edi +
jz loc_41F782  +
mov ecx [ebp-18h] +
mov eax edi +
sub ecx edi +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_41F72E  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41F7AD  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
jmp loc_41F782  +
mov eax [esi+28h] +
lea ebx [esi+28h] +
mov ecx [ebx+4] +
cmp eax ecx +
jz loc_41F752  +
cmp edi [eax] +
jz loc_41F782  +
add eax 4 +
cmp eax ecx +
jnz loc_41F747  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_41F776  +
mov [eax] edi +
add dword ptr [ebx+4] 4 +
jmp loc_41F782  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
mov ecx ebx +
call loc_41FC40  +
mov al [ebp-29h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_402990  +
call loc_406D30  +
call sub_432491  +
sub esp 18h +
push edi  +
mov edi [ebp+arg_0] +
mov eax ecx +
mov [ebp+var_8] eax +
test edi edi +
jnz loc_41F7DC  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebx  +
push esi  +
lea esi [edi+4] +
mov [ebp+var_1] 0 +
push esi  +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx eax +
call sub_407190  +
mov ebx [ebp+var_10] +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_41F82A  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_41F806  +
mov edx [ebx+10h] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_41F810  +
mov ecx [esi] +
push dword ptr [ebx+20h]  +
push edx  +
mov edx [esi+10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_41F82A  +
mov eax [ebp+var_8] +
mov eax [eax] +
jmp loc_41F831  +
mov eax [ebp+var_8] +
mov ebx [eax] +
mov eax ebx +
cmp ebx eax +
jnz loc_41F840  +
pop esi  +
pop ebx  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov esi [ebx+28h] +
mov eax [ebx+2Ch] +
cmp esi eax +
jz loc_41F8E9  +
nop   +
mov ecx [esi] +
mov [ebp+var_C] ecx +
cmp edi ecx +
jz loc_41F86C  +
add esi 4 +
cmp esi eax +
jnz loc_41F850  +
mov al [ebp+var_1] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
lea edi [ecx+74h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+var_C] +
push edi  +
dec dword ptr [eax+70h]  +
call ds:LeaveCriticalSection  +
mov eax [esi] +
mov [ebp+var_1] 1 +
mov [ebp+var_C] eax +
cmp dword ptr [eax+70h] 0 +
jnz loc_41F8A7  +
mov eax [eax] +
mov edi [eax+0Ch] +
mov ecx edi +
call ds:off_4522C0  +
mov ecx [ebp+var_C] +
call edi  +
mov [ebp+var_1] al +
mov ecx [ebx+2Ch] +
lea edx [esi+4] +
sub ecx edx +
push ecx  +
push edx  +
push esi  +
call loc_42E1C0  +
add dword ptr [ebx+2Ch] 0FFFFFFFCh +
add esp 0Ch +
mov eax [ebx+2Ch] +
sub eax [ebx+28h] +
test eax 0FFFFFFFCh +
jnz loc_41F8E9  +
mov ecx [ebp+var_8] +
push ebx  +
call loc_41FE30  +
mov esi eax +
lea ecx [esi+10h] +
call loc_420260  +
push 34h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp+var_1] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax [ebp+10h] +
mov edx [ebp+8] +
mov [ebp-28h] eax +
mov eax [ebp+14h] +
mov [ebp-24h] eax +
mov eax [ebp+18h] +
mov [ebp-20h] eax +
mov eax [ebp+1Ch] +
mov [ebp-1Ch] eax +
mov eax [ebp+20h] +
mov [ebp-18h] eax +
mov eax [ebp+24h] +
mov [ebp-14h] eax +
mov eax [ebp+28h] +
mov [ebp-10h] eax +
mov eax [ebp+2Ch] +
mov [ebp-0Ch] eax +
push ebx  +
mov ebx ecx +
mov [ebp-4] ebx +
push esi  +
push edi  +
test edx edx +
jz loc_41FA4F  +
mov ecx edx +
mov dword ptr [ebp-30h] 0 +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F962  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_406450  +
lea eax [ebp-40h] +
mov ecx ebx +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
call sub_407190  +
mov ebx [ebp-44h] +
mov edi [ebp-2Ch] +
mov esi [ebp-40h] +
mov [ebp-8] ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_41F9C4  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_41F9A8  +
mov edx [ebx+10h] +
push dword ptr [ebx+20h]  +
cmp edi 8 +
lea ecx [ebp-40h] +
push edx  +
mov edx [ebp-30h] +
cmovnb ecx esi +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_41F9CC  +
mov ebx [ebp-4] +
mov ebx [ebx] +
mov [ebp-8] ebx +
cmp edi 8 +
jb loc_41F9FC  +
lea ecx ds:2[edi*2] +
mov eax esi +
cmp ecx 1000h +
jb loc_41F9F2  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41FA58  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-4] +
cmp ebx [eax] +
jz loc_41FA4F  +
mov esi [ebx+28h] +
cmp esi [ebx+2Ch] +
jz loc_41FA4F  +
mov ebx [esi] +
push 1  +
push 0  +
push 0  +
push dword ptr [ebp-0Ch]  +
mov edi [ebx] +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
mov edi [edi+14h] +
mov ecx edi +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+0Ch]  +
call ds:off_4522C0  +
mov ecx ebx +
call edi  +
mov eax [ebp-8] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_41FA10  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax [ebp+10h] +
mov edx [ebp+8] +
mov [esp+24h] eax +
mov eax [ebp+14h] +
mov [esp+20h] eax +
mov eax [ebp+18h] +
mov [esp+1Ch] eax +
mov eax [ebp+1Ch] +
mov [esp+18h] eax +
mov eax [ebp+20h] +
mov [esp+14h] eax +
mov eax [ebp+24h] +
mov [esp+10h] eax +
mov eax [ebp+28h] +
mov [esp+0Ch] eax +
mov eax [ebp+2Ch] +
mov [esp+8] eax +
push ebx  +
mov ebx ecx +
mov [esp+4] ebx +
push esi  +
push edi  +
test edx edx +
jz loc_41FBCE  +
mov ecx edx +
mov dword ptr [esp+44h] 0 +
xor eax eax +
mov dword ptr [esp+48h] 7 +
mov [esp+34h] ax +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41FAD1  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+3Ch] +
call loc_406450  +
lea eax [esp+34h] +
mov ecx ebx +
push eax  +
lea eax [esp+50h] +
push eax  +
call sub_407190  +
mov ebx [esp+54h] +
mov edi [esp+48h] +
mov esi [esp+34h] +
mov [esp+10h] ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_41FB3C  +
cmp dword ptr [ebx+24h] 8 +
lea edx [ebx+10h] +
jb loc_41FB1E  +
mov edx [ebx+10h] +
push dword ptr [ebx+20h]  +
cmp edi 8 +
lea ecx [esp+38h] +
push edx  +
mov edx [esp+4Ch] +
cmovnb ecx esi +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_41FB46  +
mov ebx [esp+0Ch] +
mov ebx [ebx] +
mov [esp+10h] ebx +
cmp edi 8 +
jb loc_41FB76  +
lea ecx ds:2[edi*2] +
mov eax esi +
cmp ecx 1000h +
jb loc_41FB6C  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41FBD7  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax [esp+0Ch] +
cmp ebx [eax] +
jz loc_41FBCE  +
mov esi [ebx+28h] +
cmp esi [ebx+2Ch] +
jz loc_41FBCE  +
mov ebx [esi] +
push 1  +
push 0  +
push 0  +
push dword ptr [esp+20h]  +
mov edi [ebx] +
push dword ptr [esp+28h]  +
push dword ptr [esp+30h]  +
mov edi [edi+10h] +
mov ecx edi +
push dword ptr [esp+38h]  +
push dword ptr [esp+40h]  +
push dword ptr [esp+48h]  +
push dword ptr [esp+50h]  +
push dword ptr [esp+58h]  +
push dword ptr [ebp+0Ch]  +
call ds:off_4522C0  +
mov ecx ebx +
call edi  +
mov eax [esp+10h] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_41FB86  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
call sub_432491  +
mov eax dword_47074C +
push esi  +
mov esi [eax+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41FC25  +
push edi  +
push dword ptr [esi+8]  +
mov ecx offset dword_47074C +
push offset dword_47074C  +
call sub_420210  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_420260  +
push 34h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_41FBF0  +
mov eax dword_47074C +
pop edi  +
push 34h  +
push eax  +
call sub_42CA5C  +
add esp 8 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-0Ch] ebx +
push edi  +
mov edx [esi] +
sub ebx edx +
mov eax [esi+4] +
sub eax edx +
sar ebx 2 +
sar eax 2 +
cmp eax 3FFFFFFFh +
jz loc_41FD45  +
mov ecx [esi+8] +
lea edi [eax+1] +
sub ecx edx +
mov [ebp-10h] edi +
sar ecx 2 +
mov eax 3FFFFFFFh +
mov edx ecx +
shr edx 1 +
sub eax edx +
cmp ecx eax +
jbe loc_41FC8F  +
mov eax edi +
mov [ebp-8] edi +
jmp loc_41FC9A  +
lea eax [edx+ecx] +
cmp eax edi +
cmovb eax edi +
mov [ebp-8] eax +
push eax  +
call loc_41FD50  +
mov ecx [ebp+0Ch] +
mov edi eax +
lea eax [edi+ebx*4] +
mov ebx [ebp-0Ch] +
mov [ebp-4] eax +
mov ecx [ecx] +
mov [eax] ecx +
mov eax [esi+4] +
mov ecx [esi] +
cmp ebx eax +
jnz loc_41FCCD  +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_42E1C0  +
mov ebx [ebp-4] +
add esp 0Ch +
jmp loc_41FCEF  +
mov eax ebx +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call loc_42E1C0  +
mov eax [esi+4] +
sub eax ebx +
push eax  +
push ebx  +
mov ebx [ebp-4] +
lea eax [ebx+4] +
push eax  +
call loc_42E1C0  +
add esp 18h +
mov eax [esi] +
test eax eax +
jz loc_41FD21  +
mov ecx [esi+8] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_41FD17  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_41FD40  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-10h] +
mov eax ebx +
mov [esi] edi +
lea ecx [edi+ecx*4] +
mov [esi+4] ecx +
mov ecx [ebp-8] +
lea ecx [edi+ecx*4] +
pop edi  +
mov [esi+8] ecx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call loc_406D30  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_41FDA1  +
shl eax 2 +
cmp eax 1000h +
jb loc_41FD8A  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_41FDA1  +
push ecx  +
call sub_42C7DB  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_41FDA6  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
test eax eax +
jz loc_41FD9B  +
push eax  +
call sub_42C7DB  +
add esp 4 +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
call loc_4028F0  +
call sub_432491  +
mov eax [ecx+4] +
test eax eax +
jz locret_41FDC2  +
push 34h  +
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov edx [esi] +
mov edi [edx+8] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41FE01  +
mov eax [edx+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41FDFA  +
cmp edx [eax+8] +
jnz loc_41FDFA  +
mov [esi] eax +
mov edx eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41FDE8  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41FE1C  +
mov eax [ecx] +
mov edi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41FE10  +
mov [esi] edi +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-8] ebx +
lea ecx [ebp+8] +
mov [ebp-4] edi +
call loc_41FDD0  +
mov eax [ebx] +
mov esi [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41FE6F  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_41FE61  +
mov esi eax +
jmp loc_41FE6F  +
mov edx [ebp+8] +
mov esi [edx+8] +
cmp edx ebx +
jnz loc_41FF06  +
cmp byte ptr [esi+0Dh] 0 +
mov ecx [ebx+4] +
jnz loc_41FE7B  +
mov [esi+4] ecx +
mov eax [edi] +
cmp [eax+4] ebx +
jnz loc_41FE87  +
mov [eax+4] esi +
jmp loc_41FE92  +
cmp [ecx] ebx +
jnz loc_41FE8F  +
mov [ecx] esi +
jmp loc_41FE92  +
mov [ecx+8] esi +
mov ebx [edi] +
mov eax [ebp-8] +
cmp [ebx] eax +
jnz loc_41FEC4  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_41FEA5  +
mov edi ecx +
jmp loc_41FEBF  +
mov edx [esi] +
mov edi esi +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41FEBF  +
nop   +
mov eax [edx] +
mov edi edx +
mov edx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41FEB0  +
mov eax [ebp-8] +
mov [ebx] edi +
mov edi [ebp-4] +
mov ebx [edi] +
cmp [ebx+8] eax +
jnz loc_41FF01  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_41FEDE  +
mov edx ecx +
mov [ebx+8] edx +
mov bl [eax+0Ch] +
jmp loc_41FF62  +
mov eax [esi+8] +
mov edx esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41FEFB  +
mov edx eax +
mov eax [edx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41FEF0  +
mov eax [ebp-8] +
mov [ebx+8] edx +
mov bl [eax+0Ch] +
jmp loc_41FF62  +
mov [eax+4] edx +
mov eax [ebx] +
mov [edx] eax +
cmp edx [ebx+8] +
jnz loc_41FF16  +
mov ecx edx +
jmp loc_41FF30  +
cmp byte ptr [esi+0Dh] 0 +
mov ecx [edx+4] +
jnz loc_41FF22  +
mov [esi+4] ecx +
mov [ecx] esi +
mov eax [ebx+8] +
mov [edx+8] eax +
mov eax [ebx+8] +
mov [eax+4] edx +
mov eax [edi] +
cmp [eax+4] ebx +
jnz loc_41FF3C  +
mov [eax+4] edx +
jmp loc_41FF4A  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_41FF47  +
mov [eax] edx +
jmp loc_41FF4A  +
mov [eax+8] edx +
mov eax [ebx+4] +
mov bl [edx+0Ch] +
mov [edx+4] eax +
mov eax [ebp-8] +
mov al [eax+0Ch] +
mov [edx+0Ch] al +
mov eax [ebp-8] +
mov [eax+0Ch] bl +
cmp bl 1 +
jnz loc_4200C9  +
mov eax [edi] +
cmp esi [eax+4] +
jz loc_4200C5  +
cmp byte ptr [esi+0Ch] 1 +
mov ebx ecx +
jnz loc_4200C5  +
mov edx [ecx] +
cmp esi edx +
jnz loc_420045  +
mov edx [ecx+8] +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_41FFE2  +
mov byte ptr [edx+0Ch] 1 +
mov edx [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edx] +
mov [ecx+8] eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41FFBA  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [edi] +
cmp ecx [eax+4] +
jnz loc_41FFCC  +
mov [eax+4] edx +
jmp loc_41FFDA  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_41FFD7  +
mov [eax] edx +
jmp loc_41FFDA  +
mov [eax+8] edx +
mov [edx] ecx +
mov [ecx+4] edx +
mov edx [ecx+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_4200B5  +
mov edi [edx] +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_420001  +
mov eax [edx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_4200AE  +
mov eax [edx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4200F8  +
mov byte ptr [edi+0Ch] 1 +
mov edi [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [edi+8] +
mov [edx] eax +
mov eax [edi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420029  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [edi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_4200E0  +
mov [eax+4] edi +
jmp loc_4200EF  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_42008F  +
mov byte ptr [edx+0Ch] 1 +
mov edx [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edx+8] +
mov [ecx] eax +
mov eax [edx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420066  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [edi] +
cmp ecx [eax+4] +
jnz loc_420078  +
mov [eax+4] edx +
jmp loc_420087  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_420085  +
mov [eax+8] edx +
jmp loc_420087  +
mov [eax] edx +
mov [edx+8] ecx +
mov [ecx+4] edx +
mov edx [ecx] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_4200B5  +
mov edi [edx+8] +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_420156  +
mov eax [edx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_420156  +
mov edi [ebp-4] +
mov byte ptr [edx+0Ch] 0 +
mov eax [edi] +
mov esi ebx +
mov ecx [ecx+4] +
cmp ebx [eax+4] +
jnz loc_41FF80  +
mov byte ptr [esi+0Ch] 1 +
mov ecx [edi+4] +
mov eax [ebp-8] +
test ecx ecx +
jz loc_4200D7  +
dec ecx  +
mov [edi+4] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4200ED  +
mov [eax+8] edi +
jmp loc_4200EF  +
mov [eax] edi +
mov [edi+8] edx +
mov [edx+4] edi +
mov edx [ecx+8] +
mov al [ecx+0Ch] +
mov [edx+0Ch] al +
mov byte ptr [ecx+0Ch] 1 +
mov eax [edx+8] +
mov byte ptr [eax+0Ch] 1 +
mov edx [ecx+8] +
mov eax [edx] +
mov [ecx+8] eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42011C  +
mov [eax+4] ecx +
mov edi [ebp-4] +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [edi] +
cmp ecx [eax+4] +
jnz loc_420136  +
mov [eax+4] edx +
mov [edx] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_420149  +
mov [eax] edx +
mov [edx] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
mov [eax+8] edx +
mov [edx] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
mov eax [edx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4201A3  +
mov byte ptr [edi+0Ch] 1 +
mov edi [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [edi] +
mov [edx+8] eax +
mov eax [edi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420179  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [edi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp edx [eax+4] +
jnz loc_42018E  +
mov [eax+4] edi +
jmp loc_42019C  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_420199  +
mov [eax] edi +
jmp loc_42019C  +
mov [eax+8] edi +
mov [edi] edx +
mov [edx+4] edi +
mov edx [ecx] +
mov al [ecx+0Ch] +
mov [edx+0Ch] al +
mov byte ptr [ecx+0Ch] 1 +
mov eax [edx] +
mov byte ptr [eax+0Ch] 1 +
mov edx [ecx] +
mov eax [edx+8] +
mov [ecx] eax +
mov eax [edx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4201C6  +
mov [eax+4] ecx +
mov edi [ebp-4] +
mov eax [ecx+4] +
mov [edx+4] eax +
mov eax [edi] +
cmp ecx [eax+4] +
jnz loc_4201E4  +
mov [eax+4] edx +
mov [edx+8] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_4201FA  +
mov [eax+8] edx +
mov [edx+8] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
mov [eax] edx +
mov [edx+8] ecx +
mov [ecx+4] edx +
jmp loc_4200C5  +
***
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
mov [ebp+var_4] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_420254  +
push edi  +
push dword ptr [esi+8]  +
mov ecx ebx +
push eax  +
call sub_420210  +
mov edi esi +
mov esi [esi] +
lea ecx [edi+10h] +
call loc_420260  +
push 34h  +
push edi  +
call sub_42CA5C  +
mov eax [ebp+var_4] +
add esp 8 +
cmp byte ptr [esi+0Dh] 0 +
jz loc_420228  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_4202AB  +
mov ecx [esi+20h] +
sub ecx eax +
and ecx 0FFFFFFFCh +
cmp ecx 1000h +
jb loc_42028C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4202F5  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
mov dword ptr [esi+18h] 0 +
add esp 8 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4202E0  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4202D6  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4202F5  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_432491  +
push esi  +
mov esi ecx +
call loc_4203E0  +
test [ebp+arg_0] 1 +
jz loc_42031F  +
push 110h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+34h] +
cmp ecx 8 +
jb loc_420369  +
mov eax [esi+20h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_42035F  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4203D0  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
lea ecx [esi+18h] +
mov dword ptr [esi+30h] 0 +
xor eax eax +
mov dword ptr [esi+34h] 7 +
push ecx  +
mov [esi+20h] ax +
call loc_4087E0  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4203BB  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4203B1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4203D0  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
pop esi  +
retn   +
***
call sub_432491  +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
mov dword ptr [esi] offset off_467418 +
test eax eax +
jz loc_4203FE  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_42043F  +
mov ecx [eax] +
test ecx ecx +
jz loc_420420  +
cmp ecx 0FFFFFFFFh +
jz loc_420420  +
push ecx  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_420435  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
mov ecx [esi+100h] +
test ecx ecx +
jz loc_4204C5  +
mov edx [esi+104h] +
push edi  +
push ecx  +
call loc_406C50  +
mov ecx [esi+108h] +
mov eax 2AAAAAABh +
mov edi [esi+100h] +
add esp 4 +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
shl ecx 3 +
cmp ecx 1000h +
jb loc_42049C  +
mov edx [edi-4] +
add ecx 23h +
sub edi edx +
lea eax [edi-4] +
cmp eax 1Fh +
ja loc_420531  +
mov edi edx +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+100h] 0 +
mov dword ptr [esi+104h] 0 +
mov dword ptr [esi+108h] 0 +
pop edi  +
mov ecx [esi+0E8h] +
cmp ecx 8 +
jb loc_420501  +
mov eax [esi+0D4h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4204F7  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_420531  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+0E4h] 0 +
lea ecx [esi+94h] +
mov dword ptr [esi+0E8h] 7 +
mov [esi+0D4h] ax +
call loc_420330  +
mov ecx esi +
pop esi  +
jmp loc_424D20  +
***
call sub_432491  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+0Ch+var_4] eax +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [ebx+8Ch] 1 +
jnz loc_4205E2  +
xor eax eax +
cmp dword ptr [ebx+60h] 8 +
mov word ptr [esp+18h+Buffer] ax +
mov [esp+18h+NumberOfBytesWritten] eax +
lea eax [ebx+4Ch] +
jb loc_42057B  +
mov eax [eax] +
push offset aRbCcsUtf8  +
push eax  +
lea eax [esp+20h+NumberOfBytesWritten] +
push eax  +
call sub_436063  +
mov eax [esp+24h+NumberOfBytesWritten] +
add esp 0Ch +
test eax eax +
jz loc_4205E2  +
push eax  +
push 2  +
lea eax [esp+20h+Buffer] +
push 1  +
push eax  +
call sub_438313  +
push [esp+28h+NumberOfBytesWritten]  +
call sub_436121  +
mov ax word ptr [esp+2Ch+Buffer] +
add esp 14h +
cmp al 0FFh +
jnz loc_4205BF  +
cmp ah 0FEh +
jz loc_4205E2  +
cmp ah 0FFh +
jnz loc_4205C8  +
cmp al 0FEh +
jz loc_4205E2  +
mov eax [edi] +
test eax eax +
jz loc_4205DB  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [edi] 0 +
mov ecx ebx +
call loc_423270  +
lea esi [ebx+4Ch] +
push ecx  +
mov ecx esi +
call loc_427060  +
add esp 4 +
test eax eax +
jz loc_42060E  +
cmp eax 1 +
jnz loc_420660  +
push ecx  +
mov ecx esi +
call sub_414820  +
add esp 4 +
test al al +
jz loc_420660  +
mov dword ptr [edi] 0FFFFFFFFh +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_420618  +
mov eax [esi] +
push 0  +
push 200080h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [edi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4206B7  +
cmp dword ptr [esi+14h] 8 +
jb loc_420640  +
mov esi [esi] +
push 0  +
push 200080h  +
push 1  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [edi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_420676  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0Ch+var_4] +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [ebx+8Ch] 1 +
push 0  +
jnz loc_420698  +
mov ecx 0FEFFh +
mov word ptr [esp+1Ch+Buffer] cx +
lea ecx [esp+1Ch+NumberOfBytesWritten] +
push ecx  +
push 2  +
lea ecx [esp+24h+Buffer] +
jmp loc_4206AF  +
lea ecx [esp+1Ch+NumberOfBytesWritten] +
mov word ptr [esp+1Ch+Buffer] 0BBEFh +
push ecx  +
mov byte ptr [esp+20h+Buffer+2] 0BFh +
lea ecx [esp+20h+Buffer] +
push 3  +
push ecx  +
push eax  +
call ds:WriteFile  +
mov ecx [esp+18h+var_4] +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_450BC5+1)  +
mov eax large fs:0 +
push eax  +
sub esp 254h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp-218h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_4207F0  +
lea ecx [ebp-218h] +
mov [ebp-238h] eax +
mov dword ptr [ebp-234h] 7 +
lea edx [ecx+2] +
mov [ebp-248h] ax +
add bh bh +
adc eax offset SHCreateDirectoryExW +
test eax eax +
jz loc_4207A3  +
cmp eax 0B7h +
jz loc_4207A3  +
cmp eax 50h +
jnz loc_4207A5  +
mov bl 1 +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_4207E5  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4207DB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_420961  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jnz loc_4207F0  +
xor al al +
jmp loc_420943  +
xor eax eax +
mov dword ptr [ebp-220h] 0 +
lea ecx [ebp-218h] +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_420816  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
mov ecx esi +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_420861  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-260h] +
call loc_406450  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-230h] +
call loc_4276B0  +
mov byte ptr [ebp-4] 0 +
mov bl al +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_4208D8  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4208CE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_420966  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_420905  +
lea ecx [edi+4Ch] +
lea eax [ebp-230h] +
cmp ecx eax +
jz loc_420903  +
cmp dword ptr [ebp-21Ch] 8 +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_406450  +
mov bl 1 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_420941  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_420937  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42096B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450BF8  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
cmp byte ptr [edi+6Ch] 0 +
jnz loc_4209BA  +
xor al al +
jmp loc_420BB0  +
lea eax [edi+4Ch] +
push eax  +
lea ecx [ebp-38h] +
call sub_406290  +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-28h] 0 +
jnz loc_4209EA  +
cmp dword ptr [edi+48h] 8 +
lea eax [edi+34h] +
jb loc_4209DE  +
mov eax [eax] +
push eax  +
mov ecx edi +
call loc_4206D0  +
test al al +
jz loc_420A08  +
cmp dword ptr [edi+68h] 0 +
lea ecx [edi+68h] +
jnz loc_420A0F  +
mov eax [edi] +
push ecx  +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
test al al +
jnz loc_420A0F  +
xor bl bl +
jmp loc_420B78  +
cmp dword ptr [edi+90h] 0 +
jnz loc_420A37  +
push 4  +
call sub_42C7DB  +
add esp 4 +
mov [ebp-54h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax] 0 +
mov [edi+90h] eax +
cmp dword ptr [edi+48h] 8 +
lea edx [edi+34h] +
jb loc_420A42  +
mov edx [edx] +
mov ecx edx +
mov dword ptr [ebp-40h] 0 +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_420A60  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-50h] +
call loc_406450  +
mov esi [edi+90h] +
cmp dword ptr [esi] 0 +
jnz loc_420AC3  +
cmp dword ptr [ebp-3Ch] 8 +
lea eax [ebp-50h] +
cmovnb eax [ebp-50h] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov [esi] eax +
test eax eax +
jnz loc_420AC3  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_420AC3  +
cmp dword ptr [ebp-3Ch] 8 +
lea eax [ebp-50h] +
cmovnb eax [ebp-50h] +
push eax  +
push 0  +
push 0  +
call ds:OpenMutexW  +
mov [esi] eax +
mov edx [ebp-3Ch] +
cmp edx 8 +
jb loc_420AFD  +
mov ecx [ebp-50h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_420AF3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_420BCC  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebp-20h] +
push eax  +
call sub_4386BC  +
mov ecx [ebp-20h] +
add esp 4 +
cmp byte ptr [edi+0D1h] 0 +
mov eax [ebp-1Ch] +
mov [edi+0F0h] ecx +
mov [edi+0F4h] eax +
mov [edi+0F8h] ecx +
mov [edi+0FCh] eax +
jz loc_420B6B  +
mov eax [edi+90h] +
mov eax [eax] +
test eax eax +
jz loc_420B6B  +
push 7D0h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_420B53  +
cmp eax 80h +
jnz loc_420B6B  +
push ecx  +
mov ecx edi +
call loc_427B10  +
mov eax [edi+90h] +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
jmp loc_420B72  +
mov byte ptr [edi+0D1h] 0 +
mov byte ptr [edi+6Dh] 1 +
mov bl 1 +
mov edx [ebp-24h] +
cmp edx 8 +
jb loc_420BAE  +
mov ecx [ebp-38h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_420BA4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_420BD1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
mov eax [esi+68h] +
test eax eax +
jz loc_420BFD  +
cmp eax 0FFFFFFFFh +
jz loc_420BFD  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_420C3E  +
mov ecx [eax] +
test ecx ecx +
jz loc_420C1F  +
cmp ecx 0FFFFFFFFh +
jz loc_420C1F  +
push ecx  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_420C34  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
mov byte ptr [esi+6Dh] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov esi edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_420C70  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
sar esi 1 +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
add esi esi +
push esi  +
push edi  +
push dword ptr [ebx+68h]  +
call ds:WriteFile  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
push 4  +
push offset asc_467328  +
push dword ptr [ebx+68h]  +
call ds:WriteFile  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ebx +
push edi  +
mov edi ecx +
lea ecx [esi+1] +
and esp 0FFFFFFF8h +
sub esp 25Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+25Ch+var_4] eax +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
mov [esp+264h+var_254] eax +
mov eax edx +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
or eax ecx +
mov [esp+268h+var_248] edi +
jnz loc_420DB0  +
lea eax [esp+268h+var_240] +
push eax  +
call sub_4386BC  +
mov ebx [esp+26Ch+var_23C] +
add esp 4 +
mov esi [esp+268h+var_240] +
jmp loc_420E42  +
mov edi edx +
mov ebx 1A9FBE77h +
mov eax edi +
mov [esp+268h+var_258] edi +
mul  ebx +
mov [esp+268h+var_250] eax +
mov esi edx +
mov eax edi +
mov edx 624DD2Fh +
mul  edx +
mov edi eax +
mov [esp+268h+var_25C] edx +
mov eax ecx +
mul  ebx +
mov ecx eax +
mov ebx edx +
mov eax [ebp+arg_4] +
mov edx 624DD2Fh +
mul  edx +
add ecx esi +
mov esi [esp+268h+var_258] +
mov [esp+268h+var_250] eax +
adc ebx 0 +
add edi ecx +
mov ecx [esp+268h+var_25C] +
adc ecx 0 +
mov [esp+268h+var_240] edi +
xor eax eax +
mov edi [esp+268h+var_248] +
add ebx ecx +
mov ecx [esp+268h+var_250] +
adc eax eax +
add ecx ebx +
mov ebx [ebp+arg_4] +
adc edx eax +
sub esi ecx +
sbb ebx edx +
shrd esi ebx +
shr ebx 1 +
add esi ecx +
mov ecx [ebp+arg_0] +
adc ebx edx +
shrd esi ebx +
imul eax esi +
shr ebx 9 +
mov [esp+268h+var_240] esi +
mov [esp+268h+var_23C] ebx +
sub ecx eax +
mov [esp+268h+var_238] cx +
lea eax [esp+268h+var_248] +
mov [esp+268h+var_248] esi +
push eax  +
lea eax [esp+26Ch+var_22C] +
mov [esp+26Ch+var_244] ebx +
push eax  +
mov [edi+0F8h] esi +
mov [edi+0FCh] ebx +
call sub_436EA6  +
lea eax [esp+270h+var_22C] +
push eax  +
push offset aXX  +
lea eax [esp+278h+var_208] +
push 100h  +
push eax  +
call sub_43810E  +
movzx eax [esp+280h+var_238] +
push eax  +
lea eax [esp+284h+var_208] +
push eax  +
push offset aS_3d  +
push 100h  +
push [esp+290h+var_254]  +
call sub_407490  +
mov ecx [esp+294h+var_4] +
add esp 2Ch +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450CD0  +
mov eax large fs:0 +
push eax  +
sub esp 378h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+14h] +
mov esi [ebp+2Ch] +
mov ecx esi +
mov [ebp-358h] eax +
mov eax [ebp+18h] +
mov [ebp-35Ch] eax +
mov eax [ebp+1Ch] +
lea edx [ecx+2] +
mov [ebp-360h] eax +
mov eax [ebp+20h] +
mov [ebp-364h] eax +
mov eax [ebp+24h] +
mov [ebp-368h] eax +
mov eax [ebp+28h] +
mov [ebp-36Ch] eax +
mov eax [ebp+30h] +
mov [ebp-2DCh] eax +
xor eax eax +
mov dword ptr [ebp-218h] 0 +
mov dword ptr [ebp-214h] 7 +
mov [ebp-228h] ax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_420F53  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-228h] +
call loc_406450  +
lea eax [ebp-210h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
push dword ptr [ebp+8]  +
call sub_420D60  +
push offset aEyj  +
push esi  +
call loc_42D957  +
add esp 8 +
test eax eax +
jz loc_420FC7  +
push offset a_eyj  +
push eax  +
call loc_42D957  +
add esp 8 +
test eax eax +
jz loc_420FC7  +
push 27h  +
push offset aFoundAccessDev  +
lea ecx [ebp-228h] +
mov esi 28h +
call loc_406450  +
jmp loc_420FD9  +
lea eax [ebp-228h] +
mov ecx edi +
push eax  +
push esi  +
call loc_4289D0  +
mov esi [ebp+10h] +
lea eax [esi-0Ah] +
cmp eax 3Ch +
ja loc_42102E  +
movzx eax ds:byte_421940[eax] +
jmp ds:off_421920[eax*4]  +
push 5  +
push offset aFatal  +
jmp loc_421035  +
push 5  +
push offset aError  +
jmp loc_421035  +
push 4  +
push offset aWarn  +
jmp loc_421035  +
push 4  +
push offset aInfo  +
jmp loc_421035  +
push 5  +
push offset aDebug  +
jmp loc_421035  +
push 5  +
push offset aTrace  +
jmp loc_421035  +
push 4  +
push offset aNone  +
jmp loc_421035  +
push 3  +
push offset aAll  +
xor eax eax +
mov dword ptr [ebp-2E0h] 7 +
lea ecx [ebp-2F4h] +
mov [ebp-2E4h] eax +
mov [ebp-2F4h] ax +
call loc_406450  +
lea esi [edi+1Ch] +
mov byte ptr [ebp-4] 1 +
push esi  +
lea edx [ebp-210h] +
lea ecx [ebp-30Ch] +
call loc_4067D0  +
add esp 4 +
push 1  +
push offset asc_463E88  +
mov ecx eax +
mov byte ptr [ebp-4] 2 +
call loc_406570  +
mov dword ptr [ebp-314h] 0 +
xor ecx ecx +
mov dword ptr [ebp-310h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-324h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-314h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-310h] +
mov ecx [ebp-314h] +
sub eax ecx +
mov edx [ebp-2E4h] +
mov edi [ebp-2E0h] +
cmp edx eax +
jbe loc_421113  +
mov eax edi +
sub eax edx +
cmp eax ecx +
jb loc_421113  +
cmp dword ptr [ebp-310h] 8 +
lea eax [ebp-324h] +
push ecx  +
cmovnb eax [ebp-324h] +
push eax  +
push ecx  +
lea ecx [ebp-2F4h] +
call loc_410810  +
jmp loc_421130  +
cmp edi 8 +
lea eax [ebp-2F4h] +
push edx  +
cmovnb eax [ebp-2F4h] +
lea ecx [ebp-324h] +
push eax  +
call loc_406570  +
mov dword ptr [ebp-32Ch] 0 +
xor ecx ecx +
mov dword ptr [ebp-328h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-33Ch] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-32Ch] xmm0 +
mov [eax] cx +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
push 1  +
push offset asc_463E84  +
lea ecx [ebp-33Ch] +
mov byte ptr [ebp-4] 4 +
call loc_406570  +
mov dword ptr [ebp-374h] 0 +
xor ecx ecx +
mov dword ptr [ebp-370h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-384h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-374h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 5 +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_4211CC  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-384h] +
push eax  +
call loc_406570  +
xor ecx ecx +
movups xmm1 oword ptr [eax] +
movq xmm0 qword ptr [eax+10h] +
movups oword ptr [ebp-354h] xmm1 +
mov dword ptr [eax+10h] 0 +
movq qword ptr [ebp-344h] xmm0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-354h] +
cmp dword ptr [ebp-340h] 8 +
push dword ptr [ebp-344h]  +
movd eax xmm1 +
cmovnb ecx eax +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 5 +
mov edx [ebp-340h] +
cmp edx 8 +
jb loc_421273  +
mov ecx [ebp-354h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421269  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-370h] +
cmp edx 8 +
jb loc_4212B7  +
mov ecx [ebp-384h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4212AD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-328h] +
mov dword ptr [ebp-374h] 0 +
mov dword ptr [ebp-370h] 7 +
mov [ebp-384h] ax +
cmp edx 8 +
jb loc_421318  +
mov ecx [ebp-33Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42130E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-310h] +
mov dword ptr [ebp-32Ch] 0 +
mov dword ptr [ebp-328h] 7 +
mov [ebp-33Ch] ax +
cmp edx 8 +
jb loc_421379  +
mov ecx [ebp-324h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42136F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-2F8h] +
mov dword ptr [ebp-314h] 0 +
mov dword ptr [ebp-310h] 7 +
mov [ebp-324h] ax +
cmp edx 8 +
jb loc_4213DA  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4213D0  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2FCh] 0 +
mov [ebp-4] al +
mov edx [ebp-2E0h] +
mov dword ptr [ebp-2F8h] 7 +
mov [ebp-30Ch] ax +
cmp edx 8 +
jb loc_42143A  +
mov ecx [ebp-2F4h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421430  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-358h] +
lea ecx [ebp-30Ch] +
mov edi offset unk_45EE80 +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 7 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_421469  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_4214BC  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4214B2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218F8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-35Ch] +
lea ecx [ebp-30Ch] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 8 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4214E6  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_421539  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42152F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4218FD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-360h] +
lea ecx [ebp-30Ch] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 9 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_421563  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_4215B6  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4215AC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421902  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-364h] +
lea ecx [ebp-30Ch] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ah +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4215E0  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_421633  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421629  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421907  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-368h] +
lea ecx [ebp-30Ch] +
test eax eax +
mov edx edi +
push esi  +
cmovnz edx eax +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Bh +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_42165D  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx [ebp-2DCh] +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_4216B0  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4216A6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42190C  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-36Ch] +
lea ecx [ebp-30Ch] +
test eax eax +
push esi  +
cmovnz edi eax +
mov edx edi +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Ch +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_4216DA  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
mov edi [ebp-2DCh] +
push ecx  +
mov ecx edi +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_42172F  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421725  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421911  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0B0h  +
lea eax [ebp-2D8h] +
push 0  +
push eax  +
call sub_42E740  +
add esp 4 +
lea ecx [ebp-2D8h] +
call sub_419490  +
mov byte ptr [ebp-4] 0Dh +
call ds:GetCurrentThreadId  +
push eax  +
lea ecx [ebp-2C8h] +
call sub_423C50  +
lea eax [ebp-30Ch] +
push eax  +
lea ecx [ebp-2C0h] +
call sub_423DF0  +
lea ecx [ebp-2D8h] +
call sub_418B10  +
mov byte ptr [ebp-4] 0Eh +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_421791  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-30Ch] +
push eax  +
call loc_406570  +
xor ecx ecx +
movups xmm1 oword ptr [eax] +
movq xmm0 qword ptr [eax+10h] +
movups oword ptr [ebp-354h] xmm1 +
mov dword ptr [eax+10h] 0 +
movq qword ptr [ebp-344h] xmm0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 0Fh +
lea ecx [ebp-354h] +
cmp dword ptr [ebp-340h] 8 +
push dword ptr [ebp-344h]  +
movd eax xmm1 +
cmovnb ecx eax +
push ecx  +
mov ecx edi +
call loc_406570  +
mov byte ptr [ebp-4] 0Eh +
mov edx [ebp-340h] +
cmp edx 8 +
jb loc_421834  +
mov ecx [ebp-354h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42182A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2F8h] +
cmp edx 8 +
jb loc_421878  +
mov ecx [ebp-30Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42186E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421916  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-214h] 8 +
lea eax [ebp-228h] +
push dword ptr [ebp-218h]  +
cmovnb eax [ebp-228h] +
mov ecx edi +
push eax  +
call loc_406570  +
mov edx [ebp-214h] +
cmp edx 8 +
jb loc_4218D6  +
mov ecx [ebp-228h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4218CC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42191B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_450D15+1)  +
mov eax large fs:0 +
push eax  +
mov eax 205Ch +
call sub_42D2D0  +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+14h] +
mov ecx [ebp+0Ch] +
mov edx [ebp+10h] +
mov esi [ebp+28h] +
mov [ebp-2054h] eax +
mov eax [ebp+18h] +
mov [ebp-2050h] eax +
mov eax [ebp+1Ch] +
mov [ebp-2060h] eax +
mov eax [ebp+20h] +
mov [ebp-205Ch] eax +
mov eax [ebp+24h] +
mov [ebp-204Ch] eax +
mov eax [ebp+8] +
mov [ebp-2048h] ecx +
mov [ebp-2044h] edx +
mov [ebp-2058h] esi +
cmp [edi+64h] eax +
jg loc_421C93  +
mov bl [ebp+34h] +
test bl bl +
jz loc_421AB1  +
mov eax [edi+90h] +
test eax eax +
jz loc_421A99  +
cmp byte ptr [edi+0D1h] 0 +
jz loc_421A99  +
mov eax [eax] +
test eax eax +
jz loc_421A99  +
push 7D0h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_421A43  +
cmp eax 80h +
jnz loc_421A99  +
mov ecx [edi+0F8h] +
sub ecx [edi+0F0h] +
mov eax [edi+0FCh] +
sbb eax [edi+0F4h] +
js loc_421AA5  +
jg loc_421A67  +
cmp ecx 384h +
jb loc_421AA5  +
push ecx  +
mov ecx edi +
call loc_427B10  +
mov ecx [ebp-2048h] +
mov edx [ebp-2044h] +
test al al +
jz loc_421AB1  +
mov eax [edi+0F8h] +
mov [edi+0F0h] eax +
mov eax [edi+0FCh] +
mov [edi+0F4h] eax +
jmp loc_421AB1  +
mov byte ptr [edi+0D1h] 0 +
jmp loc_421C93  +
mov edx [ebp-2044h] +
mov ecx [ebp-2048h] +
cmp byte ptr [edi+0D0h] 0 +
jz loc_421AE5  +
mov esi [edi] +
push 0  +
push 0  +
push dword ptr [ebp-2050h]  +
mov esi [esi+18h] +
push dword ptr [ebp-2054h]  +
push edx  +
push ecx  +
push 1Eh  +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp-2058h] +
xor eax eax +
mov dword ptr [ebp-2018h] 0 +
mov dword ptr [ebp-2014h] 7 +
mov [ebp-2028h] ax +
mov [ebp-4] eax +
test esi esi +
jnz loc_421B11  +
mov eax [ebp-204Ch] +
jmp loc_421B40  +
push esi  +
push 0  +
push dword ptr [ebp-204Ch]  +
lea eax [ebp-2010h] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_407450  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_43573A  +
add esp 20h +
lea eax [ebp-2010h] +
lea ecx [ebp-2028h] +
push ecx  +
push eax  +
push dword ptr [ebp-205Ch]  +
mov ecx edi +
push dword ptr [ebp-2060h]  +
push dword ptr [ebp-2050h]  +
push dword ptr [ebp-2054h]  +
push dword ptr [ebp-2044h]  +
push dword ptr [ebp-2048h]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+30h]  +
push dword ptr [ebp+2Ch]  +
call loc_420EC0  +
cmp dword ptr [edi+8Ch] 0 +
jnz loc_421C1B  +
mov dword ptr [ebp-2030h] 0 +
mov dword ptr [ebp-202Ch] 0Fh +
mov byte ptr [ebp-2040h] 0 +
lea edx [ebp-2040h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-2028h] +
call sub_427310  +
mov eax [edi] +
lea ecx [ebp-2040h] +
cmp dword ptr [ebp-202Ch] 10h +
cmovnb ecx [ebp-2040h] +
mov esi [eax+1Ch] +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edx [ebp-202Ch] +
cmp edx 10h +
jb loc_421C41  +
mov ecx [ebp-2040h] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_421C0F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421CB3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
jmp loc_421C41  +
mov eax [edi] +
lea ecx [ebp-2028h] +
cmp dword ptr [ebp-2014h] 8 +
cmovnb ecx [ebp-2028h] +
mov esi [eax+20h] +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
test bl bl +
jz loc_421C57  +
mov eax [edi+90h] +
test eax eax +
jz loc_421C57  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
mov edx [ebp-2014h] +
cmp edx 8 +
jb loc_421C93  +
mov ecx [ebp-2028h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421C89  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_421CB8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450E1C  +
mov eax large fs:0 +
push eax  +
sub esp 5ECh +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
xor edi edi +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-280h] xmm0 +
push 2Ch  +
mov [ebp-5B0h] edi +
mov [ebp-280h] edi +
mov [ebp-27Ch] edi +
call sub_42C7DB  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-280h] eax +
mov [ebp-4] edi +
xorps xmm0 xmm0 +
movq qword ptr [ebp-230h] xmm0 +
mov [ebp-228h] edi +
mov [ebp-230h] edi +
mov [ebp-22Ch] edi +
mov [ebp-228h] edi +
movq qword ptr [ebp-224h] xmm0 +
mov [ebp-21Ch] edi +
mov [ebp-224h] edi +
mov [ebp-220h] edi +
mov [ebp-21Ch] edi +
xor eax eax +
mov [ebp-268h] edi +
mov dword ptr [ebp-264h] 7 +
mov [ebp-278h] ax +
mov [ebp-2B8h] eax +
mov dword ptr [ebp-2B4h] 7 +
mov [ebp-2C8h] ax +
mov [ebp-2D0h] eax +
mov dword ptr [ebp-2CCh] 7 +
mov [ebp-2E0h] ax +
mov [ebp-330h] eax +
mov dword ptr [ebp-32Ch] 7 +
mov [ebp-340h] ax +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-2F8h] +
push eax  +
push offset unk_45EE80  +
mov [ebp-2E8h] eax +
mov dword ptr [ebp-2E4h] 7 +
mov [ebp-2F8h] ax +
call loc_406450  +
add esi 4Ch +
mov byte ptr [ebp-4] 7 +
push esi  +
lea ecx [ebp-2B0h] +
call sub_406290  +
lea edx [ebp-340h] +
mov byte ptr [ebp-4] 8 +
mov ecx esi +
call sub_427920  +
cmp dword ptr [ebp-29Ch] 8 +
lea eax [ebp-2B0h] +
cmovnb eax [ebp-2B0h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_421E60  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2B0h] +
call loc_406450  +
xor esi esi +
mov [ebp-5B4h] esi +
push eax  +
push offset unk_45EE80  +
lea ecx [ebp-298h] +
mov dword ptr [ebp-284h] 7 +
mov [ebp-298h] ax +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
mov edx esi +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-260h] +
call sub_427470  +
lea eax [ebp-260h] +
mov edx offset asc_462658 +
push eax  +
lea ecx [ebp-358h] +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-2B0h] +
cmp dword ptr [ebp-29Ch] 8 +
push dword ptr [ebp-2A0h]  +
cmovnb ecx [ebp-2B0h] +
push ecx  +
push ecx  +
mov ecx eax +
call loc_410810  +
xor ecx ecx +
or edi 1 +
mov [ebp-5B0h] edi +
movups xmm0 oword ptr [eax] +
movq xmm1 qword ptr [eax+10h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov edx [ebp-284h] +
movq qword ptr [ebp-5E0h] xmm1 +
movups oword ptr [ebp-240h] xmm0 +
cmp edx 8 +
jb loc_421FAF  +
mov ecx [ebp-298h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421F96  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
movups xmm0 oword ptr [ebp-240h] +
add esp 8 +
movq xmm1 qword ptr [ebp-5E0h] +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-344h] +
movq qword ptr [ebp-288h] xmm1 +
movups oword ptr [ebp-298h] xmm0 +
cmp edx 8 +
jb loc_422002  +
mov ecx [ebp-358h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_421FF8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-300h] 0 +
push eax  +
push offset unk_45EE80  +
lea ecx [ebp-310h] +
mov dword ptr [ebp-2FCh] 7 +
mov [ebp-310h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-298h] +
push dword ptr [ebp-5DCh]  +
cmp dword ptr [ebp-284h] 8 +
mov esi [ebp-288h] +
mov edx esi +
cmovnb ecx [ebp-298h] +
push 1  +
push offset asc_45EDCC  +
push ecx  +
call loc_423EC0  +
xor ecx ecx +
mov [ebp-5BCh] eax +
add esp 10h +
mov [ebp-5D8h] cx +
cmp esi eax +
mov dword ptr [ebp-5C8h] 0 +
mov ecx eax +
mov dword ptr [ebp-5C4h] 7 +
cmovb ecx esi +
lea eax [ebp-298h] +
cmp dword ptr [ebp-284h] 8 +
push ecx  +
cmovnb eax [ebp-298h] +
lea ecx [ebp-5D8h] +
push eax  +
call loc_406450  +
mov edx [ebp-2E4h] +
cmp edx 8 +
jb loc_4220F1  +
mov ecx [ebp-2F8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4220E7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-5D8h] +
mov edx [ebp-5BCh] +
xor eax eax +
inc edx  +
mov [ebp-5D8h] ax +
mov eax [ebp-288h] +
movups oword ptr [ebp-2F8h] xmm0 +
movq xmm0 qword ptr [ebp-5C8h] +
movq qword ptr [ebp-2E8h] xmm0 +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
cmp eax edx +
jb loc_42322E  +
sub eax edx +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-284h] 8 +
lea eax [ebp-298h] +
cmovnb eax [ebp-298h] +
push ecx  +
lea ecx [ebp-5D8h] +
lea eax [eax+edx*2] +
push eax  +
call loc_406450  +
mov edx [ebp-2FCh] +
cmp edx 8 +
jb loc_4221B0  +
mov ecx [ebp-310h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4221A6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push dword ptr [ebp-5DCh]  +
movups xmm0 oword ptr [ebp-5D8h] +
mov edi [ebp-29Ch] +
lea ecx [ebp-2B0h] +
mov esi [ebp-2A0h] +
cmp edi 8 +
push 1  +
cmovnb ecx [ebp-2B0h] +
mov edx esi +
movups oword ptr [ebp-310h] xmm0 +
push offset asc_45EDCC  +
movq xmm0 qword ptr [ebp-5C8h] +
push ecx  +
movq qword ptr [ebp-300h] xmm0 +
call loc_423EC0  +
add esp 10h +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
lea edx [eax+1] +
xor eax eax +
mov [ebp-5D8h] ax +
cmp esi edx +
jb loc_42322E  +
sub esi edx +
lea eax [ebp-2B0h] +
or ecx 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
cmovb ecx esi +
cmp edi 8 +
push ecx  +
cmovnb eax [ebp-2B0h] +
lea ecx [ebp-5D8h] +
lea eax [eax+edx*2] +
push eax  +
call loc_406450  +
mov edi [ebp-5B0h] +
mov eax [ebp-2B4h] +
or edi 0Eh +
cmp eax 8 +
jb loc_42229E  +
mov ecx [ebp-2C8h] +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422294  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-5D8h] +
mov eax [ebp-22Ch] +
lea ecx [ebp-310h] +
push ecx  +
movups oword ptr [ebp-2C8h] xmm0 +
movq xmm0 qword ptr [ebp-5C8h] +
movq qword ptr [ebp-2B8h] xmm0 +
cmp eax [ebp-228h] +
jz loc_4222E1  +
mov ecx eax +
call sub_406290  +
add dword ptr [ebp-22Ch] 18h +
jmp loc_4222ED  +
push eax  +
lea ecx [ebp-230h] +
call loc_408850  +
mov byte ptr [ebp-4] 0Ah +
mov edx [ebp-2FCh] +
cmp edx 8 +
jb loc_422331  +
mov ecx [ebp-310h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422327  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 9 +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_422375  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42236B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 8 +
mov edx [ebp-284h] +
cmp edx 8 +
jb loc_4223B9  +
mov ecx [ebp-298h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4223AF  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov esi [ebp-5B4h] +
dec esi  +
mov [ebp-5B4h] esi +
cmp esi 0FFFFFFFEh +
jg near ptr dword_421E8C+4  +
cmp dword ptr [ebp-5C4h] 8 +
lea eax [ebp-2C8h] +
push dword ptr [ebp-5C8h]  +
cmovnb eax [ebp-5D8h] +
lea ecx [ebp-2E0h] +
push eax  +
call loc_406450  +
cmp dword ptr [ebp-2CCh] 8 +
lea eax [ebp-2E0h] +
cmovnb eax [ebp-2E0h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
lea eax [ebp-340h] +
cmp dword ptr [ebp-32Ch] 8 +
cmovnb eax [ebp-340h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jz loc_422472  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_422450  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2E0h] +
call loc_406450  +
push offset asc_45EDCC  +
lea edx [ebp-2F8h] +
lea ecx [ebp-5F8h] +
call loc_40FDE0  +
add esp 4 +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-2C8h] +
cmp dword ptr [ebp-2B4h] 8 +
push dword ptr [ebp-2B8h]  +
cmovnb ecx [ebp-2C8h] +
push ecx  +
mov ecx eax +
call loc_406570  +
mov dword ptr [ebp-5C8h] 0 +
xor ecx ecx +
mov dword ptr [ebp-5C4h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-5D8h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-5C8h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
push 1  +
push offset unk_462634  +
lea ecx [ebp-5D8h] +
mov byte ptr [ebp-4] 0Eh +
call loc_406570  +
mov dword ptr [ebp-318h] 0 +
xor ecx ecx +
mov dword ptr [ebp-314h] 0 +
or edi 30h +
mov [ebp-5B0h] edi +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-328h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-318h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 10h +
mov edx [ebp-5C4h] +
cmp edx 8 +
jb loc_422590  +
mov ecx [ebp-5D8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422586  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5C8h] 0 +
mov dword ptr [ebp-5C4h] 7 +
mov [ebp-5D8h] ax +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-5E4h] +
cmp edx 8 +
jb loc_4225F1  +
mov ecx [ebp-5F8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4225E7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-5E8h] 0 +
cmp dword ptr [ebp-314h] 8 +
lea ecx [ebp-5A8h] +
mov [ebp-5F8h] ax +
lea eax [ebp-328h] +
cmovnb eax [ebp-328h] +
push ecx  +
push eax  +
mov dword ptr [ebp-5E4h] 7 +
call ds:FindFirstFileW  +
mov esi [ebp-2C8h] +
mov [ebp-5DCh] eax +
cmp eax 0FFFFFFFFh +
jnz loc_422650  +
call ds:GetLastError  +
jmp loc_422E8D  +
lea ecx [ebp-57Ch] +
mov byte ptr [ebp-5A9h] 0 +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_422660  +
sub ecx edx +
lea eax [ebp-57Ch] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-278h] +
call loc_406450  +
mov ecx offset unk_462638 +
lea eax [ebp-57Ch] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4226B6  +
test dx dx +
jz loc_4226B2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4226B6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_422690  +
xor eax eax +
jmp loc_4226BB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_422CB5  +
mov ecx offset a___1 +
lea eax [ebp-57Ch] +
nop   +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4226F6  +
test dx dx +
jz loc_4226F2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4226F6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4226D0  +
xor eax eax +
jmp loc_4226FB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_422CB5  +
mov ecx [ebp-22Ch] +
mov eax 2AAAAAABh +
sub ecx [ebp-230h] +
xor esi esi +
imul  ecx +
mov [ebp-5C0h] esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_422B4D  +
xor edi edi +
mov [ebp-5BCh] edi +
cmp eax esi +
jbe loc_423238  +
add edi [ebp-230h] +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp-5B4h] eax +
jb loc_422769  +
mov edi [edi] +
cmp eax 8 +
jnb loc_42278B  +
movups xmm0 oword ptr [edi] +
mov edi [ebp-5B4h] +
mov esi 7 +
mov [ebp-238h] eax +
movups oword ptr [ebp-248h] xmm0 +
jmp loc_4227D7  +
mov esi eax +
lea ecx [ebp-248h] +
or esi 7 +
mov eax 7FFFFFFEh +
cmp esi 7FFFFFFEh +
cmova esi eax +
lea eax [esi+1] +
push eax  +
call loc_406770  +
mov ecx [ebp-5B4h] +
mov [ebp-248h] eax +
lea ecx ds:2[ecx*2] +
push ecx  +
push edi  +
push eax  +
call loc_42DC40  +
mov edi [ebp-5B4h] +
add esp 0Ch +
mov [ebp-238h] edi +
mov [ebp-234h] esi +
mov byte ptr [ebp-4] 12h +
lea eax [ebp-2C8h] +
cmp dword ptr [ebp-2B4h] 8 +
lea ecx [ebp-278h] +
push dword ptr [ebp-2B8h]  +
cmovnb eax [ebp-2C8h] +
cmp dword ptr [ebp-264h] 8 +
mov edx [ebp-268h] +
cmovnb ecx [ebp-278h] +
push eax  +
push 0  +
call loc_406BC0  +
add esp 0Ch +
test eax eax +
jnz loc_42290A  +
cmp [ebp-268h] edi +
lea ecx [ebp-260h] +
mov [ebp-250h] eax +
cmovb edi [ebp-268h] +
cmp dword ptr [ebp-264h] 8 +
mov [ebp-260h] ax +
lea eax [ebp-278h] +
cmovnb eax [ebp-278h] +
push edi  +
push eax  +
mov byte ptr [ebp-5A9h] 1 +
mov dword ptr [ebp-24Ch] 7 +
call loc_406450  +
or dword ptr [ebp-5B0h] 40h +
lea ecx [ebp-248h] +
cmp dword ptr [ebp-234h] 8 +
lea eax [ebp-260h] +
cmovnb ecx [ebp-248h] +
cmp dword ptr [ebp-24Ch] 8 +
push ecx  +
cmovnb eax [ebp-260h] +
push eax  +
call ds:lstrcmpW  +
mov edx [ebp-24Ch] +
test eax eax +
setz al  +
mov [ebp-5B5h] al +
cmp edx 8 +
jb loc_4228FC  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4228EC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
mov al [ebp-5B5h] +
add esp 8 +
test al al +
jnz loc_422B09  +
mov esi [ebp-234h] +
mov byte ptr [ebp-4] 11h +
cmp esi 8 +
jb loc_422948  +
mov ecx [ebp-248h] +
lea esi ds:2[esi*2] +
mov eax ecx +
cmp esi 1000h +
jb loc_42293E  +
mov ecx [ecx-4] +
add esi 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push esi  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-22Ch] +
mov eax 2AAAAAABh +
sub ecx [ebp-230h] +
mov esi [ebp-5C0h] +
mov edi [ebp-5BCh] +
inc esi  +
imul  ecx +
add edi 18h +
mov [ebp-5C0h] esi +
sar edx 2 +
mov eax edx +
mov [ebp-5BCh] edi +
shr eax 1Fh +
add eax edx +
cmp eax esi +
ja loc_42273E  +
mov al [ebp-5A9h] +
cmp al 1 +
jnz loc_422CB5  +
cmp dword ptr [ebp-2CCh] 8 +
lea ecx [ebp-2E0h] +
lea eax [ebp-278h] +
cmovnb ecx [ebp-2E0h] +
cmp dword ptr [ebp-264h] 8 +
push ecx  +
cmovnb eax [ebp-278h] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_422B4D  +
push offset asc_45EDCC  +
lea edx [ebp-2F8h] +
lea ecx [ebp-248h] +
call loc_40FDE0  +
add esp 4 +
mov esi eax +
mov byte ptr [ebp-4] 13h +
lea edx [ebp-278h] +
cmp dword ptr [ebp-264h] 8 +
cmovnb edx [ebp-278h] +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_422A07  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_406570  +
or dword ptr [ebp-5B0h] 80h +
xor ecx ecx +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-260h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-250h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_422AAB  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422AA1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-24Ch] 8 +
lea eax [ebp-260h] +
cmovnb eax [ebp-260h] +
push eax  +
call ds:DeleteFileW  +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_422CB5  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422CAB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
jmp loc_422CAB  +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_422B4D  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422B43  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-5A9h] +
cmp al 1 +
jnz loc_422CB5  +
push offset asc_45EDCC  +
lea edx [ebp-2F8h] +
lea ecx [ebp-260h] +
call loc_40FDE0  +
add esp 4 +
mov esi eax +
mov byte ptr [ebp-4] 14h +
lea edx [ebp-278h] +
cmp dword ptr [ebp-264h] 8 +
cmovnb edx [ebp-278h] +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_422B93  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_406570  +
or dword ptr [ebp-5B0h] 100h +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-358h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-348h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 16h +
mov edx [ebp-24Ch] +
cmp edx 8 +
jb loc_422C23  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422C19  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov [ebp-260h] ax +
lea ecx [ebp-358h] +
mov eax [ebp-220h] +
mov dword ptr [ebp-24Ch] 7 +
push ecx  +
cmp eax [ebp-21Ch] +
jz loc_422C65  +
mov ecx eax +
call sub_406290  +
add dword ptr [ebp-220h] 18h +
jmp loc_422C71  +
push eax  +
lea ecx [ebp-224h] +
call loc_408850  +
mov byte ptr [ebp-4] 11h +
mov edx [ebp-344h] +
cmp edx 8 +
jb loc_422CB5  +
mov ecx [ebp-358h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422CAB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebp-5A8h] +
push eax  +
push dword ptr [ebp-5DCh]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_422650  +
mov esi [ebp-220h] +
mov eax 2AAAAAABh +
mov ecx [ebp-224h] +
sub esi ecx +
push dword ptr [ebp-5DCh]  +
imul  esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx [ebp-220h] +
push eax  +
call loc_424010  +
mov ecx [ebp-220h] +
mov eax 2AAAAAABh +
sub ecx [ebp-224h] +
mov esi 3 +
imul  ecx +
add esp 8 +
mov [ebp-5C0h] esi +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
cmp ecx esi +
jbe loc_422E87  +
xor edi edi +
mov [ebp-5B4h] edi +
lea eax [esi-3] +
cmp ecx eax +
jbe loc_423238  +
add edi [ebp-224h] +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 0 +
cmp dword ptr [edi+14h] 8 +
mov eax [edi+10h] +
mov [ebp-5BCh] eax +
jb loc_422D76  +
mov edi [edi] +
cmp eax 8 +
jnb loc_422D9D  +
movups xmm0 oword ptr [edi] +
mov [ebp-238h] eax +
lea eax [ebp-248h] +
mov dword ptr [ebp-234h] 7 +
movups oword ptr [ebp-248h] xmm0 +
jmp loc_422E05  +
mov esi eax +
lea ecx [ebp-248h] +
or esi 7 +
mov eax 7FFFFFFEh +
cmp esi 7FFFFFFEh +
cmova esi eax +
lea eax [esi+1] +
push eax  +
call loc_406770  +
mov ecx [ebp-5BCh] +
mov [ebp-248h] eax +
lea ecx ds:2[ecx*2] +
push ecx  +
push edi  +
push eax  +
call loc_42DC40  +
mov eax [ebp-5BCh] +
add esp 0Ch +
mov [ebp-238h] eax +
cmp esi 8 +
lea eax [ebp-248h] +
mov [ebp-234h] esi +
cmovnb eax [ebp-248h] +
mov esi [ebp-5C0h] +
push eax  +
call ds:DeleteFileW  +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_422E4C  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422E42  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423233  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-220h] +
mov eax 2AAAAAABh +
sub ecx [ebp-224h] +
inc esi  +
mov edi [ebp-5B4h] +
imul  ecx +
add edi 18h +
mov [ebp-5C0h] esi +
sar edx 2 +
mov ecx edx +
mov [ebp-5B4h] edi +
shr ecx 1Fh +
add ecx edx +
cmp esi ecx +
jb loc_422D40  +
mov esi [ebp-2C8h] +
mov edx [ebp-314h] +
cmp edx 8 +
jb loc_422ECD  +
mov ecx [ebp-328h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422EC3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-29Ch] +
xor eax eax +
mov dword ptr [ebp-318h] 0 +
mov dword ptr [ebp-314h] 7 +
mov [ebp-328h] ax +
cmp edx 8 +
jb loc_422F2A  +
mov ecx [ebp-2B0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422F20  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-2E4h] +
xor eax eax +
mov dword ptr [ebp-2A0h] 0 +
mov dword ptr [ebp-29Ch] 7 +
mov [ebp-2B0h] ax +
cmp edx 8 +
jb loc_422F87  +
mov ecx [ebp-2F8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422F7D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-32Ch] +
cmp edx 8 +
jb loc_422FC7  +
mov ecx [ebp-340h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_422FBD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-2CCh] +
xor eax eax +
mov dword ptr [ebp-330h] 0 +
mov dword ptr [ebp-32Ch] 7 +
mov [ebp-340h] ax +
cmp edx 8 +
jb loc_423024  +
mov ecx [ebp-2E0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42301A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-2D0h] 0 +
mov [ebp-2E0h] ax +
mov eax [ebp-2B4h] +
mov dword ptr [ebp-2CCh] 7 +
cmp eax 8 +
jb loc_42307B  +
lea ecx ds:2[eax*2] +
mov eax esi +
cmp ecx 1000h +
jb loc_423071  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-264h] +
cmp edx 8 +
jb loc_4230BB  +
mov ecx [ebp-278h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4230B1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-224h] +
xor eax eax +
mov dword ptr [ebp-268h] 0 +
mov dword ptr [ebp-264h] 7 +
mov [ebp-278h] ax +
test ecx ecx +
jz loc_423160  +
mov edx [ebp-220h] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-21Ch] +
mov eax 2AAAAAABh +
mov esi [ebp-224h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_423138  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-224h] 0 +
mov dword ptr [ebp-220h] 0 +
mov dword ptr [ebp-21Ch] 0 +
mov ecx [ebp-230h] +
test ecx ecx +
jz loc_4231E8  +
mov edx [ebp-22Ch] +
push ecx  +
call loc_406C50  +
mov ecx [ebp-228h] +
mov eax 2AAAAAABh +
mov esi [ebp-230h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax esi +
shl ecx 3 +
cmp ecx 1000h +
jb loc_4231C0  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42323D  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-230h] 0 +
mov dword ptr [ebp-22Ch] 0 +
mov dword ptr [ebp-228h] 0 +
mov eax [ebp-280h] +
push dword ptr [eax+4]  +
lea eax [ebp-280h] +
push eax  +
mov ecx eax +
call loc_407220  +
push 2Ch  +
push dword ptr [ebp-280h]  +
call sub_42CA5C  +
add esp 8 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_406760  +
call sub_432491  +
call loc_423EB0  +
call sub_432491  +
push esi  +
mov esi ecx +
mov eax [esi] +
push dword ptr [eax+4]  +
push esi  +
call loc_407220  +
push 2Ch  +
push dword ptr [esi]  +
call sub_42CA5C  +
add esp 8 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450E7C  +
mov eax large fs:0 +
push eax  +
sub esp 26Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
lea esi [edi+4Ch] +
push esi  +
lea ecx [ebp-230h] +
call sub_406290  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4232F5  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
call loc_4275B0  +
lea eax [ebp-260h] +
mov edx offset asc_462658 +
push eax  +
lea ecx [ebp-278h] +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 2 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_42336B  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-230h] +
call loc_406570  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-264h] +
cmp edx 8 +
jb loc_4233BE  +
mov ecx [ebp-278h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4233B4  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_423586  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
lea edx [ebp-248h] +
mov byte ptr [ebp-4] 3 +
mov ecx esi +
call sub_427920  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_427750  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_423491  +
push ecx  +
mov ecx esi +
call loc_427060  +
add esp 4 +
test eax eax +
jnz loc_423491  +
cmp [esi+10h] eax +
jz loc_423491  +
cmp [ebp-220h] eax +
jz loc_423491  +
cmp dword ptr [ebp-21Ch] 8 +
lea eax [ebp-230h] +
cmovnb eax [ebp-230h] +
cmp dword ptr [esi+14h] 8 +
jb loc_423455  +
mov esi [esi] +
push eax  +
push esi  +
call sub_438525  +
add esp 8 +
test eax eax +
jnz loc_423491  +
lea ecx [edi+0D4h] +
lea eax [ebp-230h] +
cmp ecx eax +
jz loc_42348D  +
cmp dword ptr [ebp-21Ch] 8 +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_406450  +
mov bl 1 +
jmp loc_423493  +
xor bl bl +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_4234D3  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4234C9  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42358B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-24Ch] +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
cmp edx 8 +
jb loc_42352C  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_423522  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42358B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_423568  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42355E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42358B  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_450F08  +
mov eax large fs:0 +
push eax  +
mov eax 10A0h +
call sub_42D2D0  +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+14h] +
mov ecx [ebp+0Ch] +
mov edx [ebp+10h] +
mov esi [ebp+20h] +
mov ebx [ebp+1Ch] +
mov [ebp-109Ch] eax +
mov eax [ebp+18h] +
mov [ebp-1098h] eax +
mov eax [ebp+24h] +
mov [ebp-1094h] eax +
mov eax [ebp+28h] +
mov [ebp-10A4h] eax +
mov eax [ebp+8] +
mov [ebp-1090h] ecx +
mov [ebp-108Ch] edx +
mov [ebp-10A0h] esi +
cmp [edi+64h] eax +
jg loc_423C16  +
cmp byte ptr [ebp+34h] 0 +
jz loc_4236CA  +
mov eax [edi+90h] +
test eax eax +
jz loc_4236B2  +
cmp byte ptr [edi+0D1h] 0 +
jz loc_4236B2  +
mov eax [eax] +
test eax eax +
jz loc_4236B2  +
push 7D0h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_42365C  +
cmp eax 80h +
jnz loc_4236B2  +
mov ecx [edi+0F8h] +
sub ecx [edi+0F0h] +
mov eax [edi+0FCh] +
sbb eax [edi+0F4h] +
js loc_4236BE  +
jg loc_423680  +
cmp ecx 384h +
jb loc_4236BE  +
push ecx  +
mov ecx edi +
call loc_427B10  +
mov ecx [ebp-1090h] +
mov edx [ebp-108Ch] +
test al al +
jz loc_4236CA  +
mov eax [edi+0F8h] +
mov [edi+0F0h] eax +
mov eax [edi+0FCh] +
mov [edi+0F4h] eax +
jmp loc_4236CA  +
mov byte ptr [edi+0D1h] 0 +
jmp loc_423C16  +
mov edx [ebp-108Ch] +
mov ecx [ebp-1090h] +
cmp byte ptr [edi+0D0h] 0 +
jz loc_4236FE  +
mov esi [edi] +
push 0  +
push 0  +
push dword ptr [ebp-1098h]  +
mov esi [esi+18h] +
push dword ptr [ebp-109Ch]  +
push edx  +
push ecx  +
push 1Eh  +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov esi [ebp-10A0h] +
xor eax eax +
mov dword ptr [ebp-1078h] 0 +
mov dword ptr [ebp-1074h] 7 +
mov [ebp-1088h] ax +
mov [ebp-4] eax +
mov [ebp-1048h] eax +
mov dword ptr [ebp-1044h] 7 +
mov [ebp-1058h] ax +
mov [ebp-1030h] eax +
mov dword ptr [ebp-102Ch] 7 +
mov [ebp-1040h] ax +
mov [ebp-1060h] eax +
mov dword ptr [ebp-105Ch] 7 +
mov [ebp-1070h] ax +
mov byte ptr [ebp-4] 3 +
test ebx ebx +
jz loc_4237FB  +
mov ecx ebx +
mov [ebp-1018h] eax +
mov dword ptr [ebp-1014h] 0Fh +
mov [ebp-1028h] al +
lea edx [ecx+1] +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push 0FFFFFFFFh  +
push offset loc_450F40  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_14] ebx +
xor esi esi +
lea ecx [ebp+var_24] +
push ebx  +
mov [ebp+var_1C] esi +
call sub_40E810  +
mov [ebp+var_4] esi +
cmp [ebp+var_20] 0 +
jz loc_423D72  +
mov eax [ebx] +
mov eax [eax+4] +
mov eax [eax+ebx+30h] +
mov edi [eax+4] +
mov [ebp+var_28] edi +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_41AE30  +
mov edi [ebp+var_28] +
add esp 4 +
mov [ebp+var_18] eax +
test edi edi +
jz loc_423CFE  +
mov edx [edi] +
mov esi [edx+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_423CFE  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push [ebp+arg_0]  +
mov edi [ebp+var_18] +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebx] +
mov esi [edi] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+ebx+40h] +
add ecx ebx +
mov esi [esi+20h] +
push eax  +
push ecx  +
mov byte ptr [ebp+var_2C] 0 +
lea eax [ebp+var_2C] +
push dword ptr [ecx+38h]  +
mov ecx esi +
push [ebp+var_2C]  +
push eax  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
xor esi esi +
mov edx 4 +
cmp byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
cmovnz esi edx +
jmp loc_423D77  +
mov edx [ebp-14h] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call sub_40E900  +
mov eax offset loc_423D65 +
retn   +
mov ebx [ebp-14h] +
mov esi [ebp-1Ch] +
mov dword ptr [ebp-4] 0 +
mov edx 4 +
mov eax [ebx] +
push 0  +
mov ecx [eax+4] +
xor eax eax +
add ecx ebx +
cmp [ecx+38h] eax +
cmovnz edx eax +
or edx [ecx+0Ch] +
or edx esi +
push edx  +
call loc_409430  +
mov [ebp+var_4] 4 +
call sub_42AFFA  +
test al al +
jnz loc_423DAB  +
mov ecx [ebp+var_24] +
call sub_40F960  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_24] +
mov eax [ecx] +
mov eax [eax+4] +
mov edi [eax+ecx+38h] +
test edi edi +
jz loc_423DD0  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_450F79  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] 0 +
xor eax eax +
mov esi [ebp+arg_0] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov [ebp+var_4] eax +
mov ecx [edi+3Ch] +
mov [ebp+var_10] 1 +
test cl 2 +
jnz loc_423E64  +
mov eax [edi+20h] +
mov ebx [eax] +
test ebx ebx +
jz loc_423E64  +
cmp ebx [edi+38h] +
mov eax [edi+10h] +
cmovb ebx [edi+38h] +
mov edx [eax] +
sub ebx edx +
sar ebx 1 +
push ebx  +
push edx  +
jmp loc_423E86  +
test cl 4 +
jnz loc_423E8D  +
mov eax [edi+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_423E8D  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+2Ch] +
mov eax [eax] +
add eax eax +
sub eax ecx +
add eax edx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_406450  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aInvalidVectorT  +
call sub_42AB4A  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 114h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+110h] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
mov [esp+8] eax +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_423FF6  +
test esi esi +
jz loc_423FF6  +
push 100h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_42E740  +
mov eax [esp+1Ch] +
add esp 0Ch +
mov ecx eax +
mov dword ptr [esp+14h] 100h +
lea edx [eax+ebx*2] +
cmp eax edx +
jz loc_423F3D  +
movzx eax word ptr [ecx] +
cmp ax [esp+14h] +
jnb loc_423F6C  +
movzx eax al +
add ecx 2 +
mov byte ptr [esp+eax+18h] 1 +
cmp ecx edx +
jnz loc_423F24  +
mov edx [esp+14h] +
lea eax [esi-1] +
or ecx 0FFFFFFFFh +
cmp eax ecx +
cmovb ecx eax +
lea ecx [edi+ecx*2] +
nop   +
movzx eax word ptr [ecx] +
cmp ax dx +
jnb loc_423F5F  +
cmp byte ptr [esp+eax+18h] 0 +
jnz loc_423FDB  +
cmp ecx edi +
jz loc_423FF6  +
sub ecx 2 +
jmp loc_423F50  +
***
lea eax [esi-1] +
or ecx 0FFFFFFFFh +
cmp eax ecx +
cmovb ecx eax +
lea edx [edi+ecx*2] +
sub ecx edi +
sar ecx 1 +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [esp+11Ch] +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 48h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+44h] eax +
push esi  +
mov esi edx +
mov eax 2AAAAAABh +
push edi  +
mov edi ecx +
mov [esp+10h] esi +
mov ecx esi +
sub ecx edi +
imul  ecx +
mov ecx [ebp+0Ch] +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 20h +
jle loc_424107  +
mov esi [ebp+8] +
test esi esi +
jle loc_42412A  +
push ecx  +
push dword ptr [esp+14h]  +
mov edx edi +
lea ecx [esp+1Ch] +
call loc_424300  +
mov ecx [esp+18h] +
mov eax esi +
sub ecx [esp+20h] +
add esp 8 +
sar eax 2 +
sar esi 1 +
add esi eax +
mov eax 2AAAAAABh +
imul  ecx +
mov ecx [esp+14h] +
mov eax 2AAAAAABh +
sar edx 2 +
sub ecx edi +
mov [ebp+8] esi +
mov esi edx +
shr esi 1Fh +
add esi edx +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax esi +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
push eax  +
push esi  +
jge loc_4240CA  +
mov edx [esp+1Ch] +
mov ecx edi +
call loc_424010  +
mov edi [esp+20h] +
mov eax [esp+18h] +
jmp loc_4240DF  +
mov edx [esp+18h] +
mov ecx [esp+20h] +
call loc_424010  +
mov eax [esp+1Ch] +
mov [esp+18h] eax +
mov ecx eax +
add esp 8 +
sub ecx edi +
mov eax 2AAAAAABh +
imul  ecx +
mov ecx [ebp+0Ch] +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 20h +
jg loc_424052  +
mov esi [esp+10h] +
cmp eax 2 +
jl loc_424119  +
push ecx  +
mov edx esi +
mov ecx edi +
call loc_424710  +
add esp 4 +
pop edi  +
pop esi  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp eax 20h +
jle loc_424103  +
mov esi [esp+10h] +
mov eax 2AAAAAABh +
mov ecx esi +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx eax +
mov [esp+1Ch] eax +
mov ecx edx +
sar ecx 1 +
test ecx ecx +
jle loc_4241F4  +
lea eax [ecx+ecx*2] +
lea esi [edi+eax*8] +
movups xmm0 oword ptr [esi-18h] +
lea esi [esi-18h] +
xor eax eax +
push dword ptr [ebp+0Ch]  +
movups oword ptr [esp+24h] xmm0 +
dec ecx  +
movq xmm0 qword ptr [esi+10h] +
mov [esi] ax +
lea eax [esp+24h] +
push eax  +
push edx  +
mov [esp+20h] ecx +
mov edx ecx +
mov ecx edi +
movq qword ptr [esp+3Ch] xmm0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
call loc_4249F0  +
mov edx [esp+40h] +
add esp 0Ch +
cmp edx 8 +
jb loc_4241E0  +
mov ecx [esp+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4241D6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4242EB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
test ecx ecx +
jg loc_424160  +
mov esi [esp+10h] +
cmp edx 2 +
jl loc_424119  +
mov eax 0FFFFFFECh +
add esi 0FFFFFFE8h +
sub eax edi +
mov [esp+14h] eax +
mov eax 18h +
sub eax edi +
mov [esp+1Ch] eax +
cmp edx 2 +
jl loc_4242B4  +
movups xmm0 oword ptr [esi] +
xor eax eax +
mov ecx esi +
push edi  +
movups oword ptr [esp+24h] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [esp+34h] xmm0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
call loc_406200  +
push dword ptr [ebp+0Ch]  +
mov ecx [esp+18h] +
lea eax [esp+24h] +
push eax  +
add ecx 14h +
mov eax 2AAAAAABh +
add ecx esi +
imul  ecx +
mov ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
xor edx edx +
push eax  +
call loc_4249F0  +
mov edx [esp+40h] +
add esp 0Ch +
cmp edx 8 +
jb loc_4242B4  +
mov ecx [esp+20h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4242AA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4242EB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [esp+1Ch] +
sub esi 18h +
mov eax 2AAAAAABh +
lea ecx [ecx+esi] +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx eax +
cmp eax 2 +
jge loc_424216  +
mov ecx [esp+4Ch] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
mov al [ebp+0Ch] +
mov [ebp-8] al +
mov eax 2AAAAAABh +
push ebx  +
mov ebx [ebp+8] +
mov [ebp-1Ch] ecx +
mov ecx ebx +
push esi  +
mov esi edx +
mov [ebp-14h] ebx +
sub ecx esi +
mov [ebp-10h] esi +
imul  ecx +
push edi  +
sar edx 2 +
lea edi [ebx-18h] +
mov ebx [ebp-10h] +
mov eax edx +
shr eax 1Fh +
mov ecx edi +
add eax edx +
sub ecx ebx +
sar eax 1 +
lea eax [eax+eax*2] +
lea esi [esi+eax*8] +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 28h +
jle loc_4243CB  +
mov edi [ebp-8] +
inc eax  +
sar eax 3 +
push edi  +
lea ebx [eax+eax*2] +
lea ecx [eax+eax*2] +
shl ebx 3 +
mov eax [ebp-10h] +
shl ecx 4 +
mov [ebp-0Ch] ecx +
lea edx [eax+ebx] +
add eax ecx +
mov ecx [ebp-10h] +
push eax  +
mov [ebp-18h] edx +
call sub_424C00  +
lea eax [ebx+esi] +
mov ecx esi +
push edi  +
push eax  +
sub ecx ebx +
mov edx esi +
call sub_424C00  +
mov eax [ebp-14h] +
add eax 0FFFFFFE8h +
mov edi eax +
sub edi ebx +
mov ebx [ebp-8] +
push ebx  +
push eax  +
sub eax [ebp-0Ch] +
mov edx edi +
mov ecx eax +
call sub_424C00  +
mov ecx [ebp-18h] +
mov edx esi +
push ebx  +
push edi  +
call sub_424C00  +
add esp 20h +
jmp loc_4243DB  +
push dword ptr [ebp-8]  +
mov edx esi +
mov ecx ebx +
push edi  +
call sub_424C00  +
add esp 8 +
lea ebx [esi+18h] +
mov [ebp-0Ch] ebx +
cmp [ebp-10h] esi +
jnb loc_42444B  +
mov ebx [ebp-10h] +
lea edi [esi-18h] +
cmp dword ptr [edi+2Ch] 8 +
mov eax esi +
jb loc_4243FA  +
mov eax [esi] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_424404  +
mov ecx [edi] +
push dword ptr [edi+28h]  +
mov edx [edi+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_424448  +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
jb loc_424421  +
mov eax [edi] +
cmp dword ptr [edi+2Ch] 8 +
mov ecx esi +
jb loc_42442B  +
mov ecx [esi] +
push dword ptr [edi+10h]  +
mov edx [edi+28h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_424448  +
sub esi 18h +
sub edi 18h +
cmp ebx esi +
jb loc_4243F0  +
mov ebx [ebp-0Ch] +
mov ecx [ebp-14h] +
cmp ebx ecx +
jnb loc_4244B3  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_42445C  +
mov eax [esi] +
mov edi [ebx+14h] +
mov ecx ebx +
cmp edi 8 +
jb loc_424468  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
mov edx [ebx+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_4244AD  +
mov eax ebx +
cmp edi 8 +
jb loc_424484  +
mov eax [ebx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_42448E  +
mov ecx [esi] +
push dword ptr [ebx+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_406B60  +
mov ecx [ebp-14h] +
add esp 8 +
test eax eax +
js loc_4244B0  +
add ebx 18h +
cmp ebx ecx +
jb loc_424452  +
jmp loc_4244B0  +
mov ecx [ebp-14h] +
mov [ebp-0Ch] ebx +
mov edi ebx +
mov eax esi +
mov [ebp-8] eax +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_42456A  +
mov eax [esi] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_424574  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
mov edx [ebx+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_4245D5  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_424591  +
mov eax [ebx] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_42459B  +
mov ecx [esi] +
push dword ptr [ebx+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_4245EE  +
sub esi 18h +
cmp esi ebx +
jz loc_4245D5  +
movups xmm0 oword ptr [ebx] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
mov eax [ebp-8] +
sub ebx 18h +
mov ecx [ebp-10h] +
sub eax 18h +
mov [ebp-8] eax +
cmp ecx eax +
jb loc_424560  +
jmp loc_4245F4  +
mov eax [ebp-8] +
mov ecx [ebp-10h] +
cmp eax ecx +
mov ecx [ebp-14h] +
jnz loc_42465B  +
cmp edi ecx +
jz loc_4246E5  +
mov ebx [ebp-0Ch] +
cmp ebx edi +
jz loc_42462A  +
movups xmm0 oword ptr [ebx] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
movups xmm0 oword ptr [edi] +
add ebx 18h +
movups xmm1 oword ptr [esi] +
mov [ebp-0Ch] ebx +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
add esi 18h +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
add edi 18h +
jmp near ptr dword_4244BC+4  +
***
add eax 0FFFFFFE8h +
mov [ebp-8] eax +
cmp edi ecx +
jnz loc_4246BA  +
sub esi 18h +
cmp eax esi +
jz loc_42468C  +
movups xmm0 oword ptr [esi] +
movups xmm1 oword ptr [eax] +
movq xmm2 qword ptr [eax+10h] +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [eax+10h] xmm0 +
movups oword ptr [esi] xmm1 +
movq qword ptr [esi+10h] xmm2 +
mov ebx [ebp-0Ch] +
movups xmm1 oword ptr [esi] +
sub ebx 18h +
movq xmm2 qword ptr [esi+10h] +
mov [ebp-0Ch] ebx +
movups xmm0 oword ptr [ebx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [ebx] xmm1 +
movq qword ptr [ebx+10h] xmm2 +
jmp near ptr dword_4244BC+4  +
***
movups xmm0 oword ptr [eax] +
mov ebx [ebp-0Ch] +
movups xmm1 oword ptr [edi] +
movq xmm2 qword ptr [edi+10h] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [edi+10h] xmm0 +
add edi 18h +
movups oword ptr [eax] xmm1 +
movq qword ptr [eax+10h] xmm2 +
jmp loc_4244B7  +
***
mov eax [ebp-1Ch] +
mov ecx [ebp-0Ch] +
pop edi  +
mov [eax+4] ecx +
mov ecx [ebp-4] +
mov [eax] esi +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-8] eax +
push ebx  +
mov ebx ecx +
mov [ebp-30h] edx +
mov [ebp-28h] ebx +
push esi  +
push edi  +
cmp ebx edx +
jz loc_4249CF  +
lea eax [ebx+18h] +
mov [ebp-24h] eax +
cmp eax edx +
jz loc_4249CF  +
movups xmm0 oword ptr [eax] +
lea esi [eax+14h] +
xor ecx ecx +
movq xmm1 qword ptr [eax+10h] +
mov edi eax +
mov dword ptr [eax+10h] 0 +
mov [eax] cx +
mov eax ebx +
mov dword ptr [esi] 7 +
cmp dword ptr [ebx+14h] 8 +
movups oword ptr [ebp-4Ch] xmm0 +
movups oword ptr [ebp-20h] xmm0 +
movq qword ptr [ebp-3Ch] xmm1 +
movq qword ptr [ebp-10h] xmm1 +
jb loc_42477C  +
mov eax [ebx] +
cmp dword ptr [ebp-0Ch] 8 +
lea ecx [ebp-20h] +
push dword ptr [ebx+10h]  +
movd edx xmm0 +
push eax  +
mov [ebp-2Ch] edx +
cmovnb ecx edx +
mov edx [ebp-10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424890  +
mov eax [ebp-24h] +
lea edi [eax+18h] +
cmp ebx eax +
jz loc_424836  +
mov eax [ebp-28h] +
lea esi [esi-18h] +
sub edi 18h +
lea ebx [esi-14h] +
cmp edi ebx +
jz loc_42482F  +
mov ecx [esi+18h] +
cmp ecx 8 +
jb loc_4247FB  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4247F1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4249E2  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+14h] 0 +
xor eax eax +
mov [edi] ax +
mov dword ptr [esi+18h] 7 +
movups xmm0 oword ptr [esi-14h] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [esi-4] +
movq qword ptr [edi+10h] xmm0 +
mov [esi-4] eax +
mov [esi-14h] ax +
mov eax [ebp-28h] +
mov dword ptr [esi] 7 +
cmp eax ebx +
jnz loc_4247B5  +
mov ebx [ebp-28h] +
lea eax [ebp-20h] +
cmp ebx eax +
jz loc_424985  +
mov ecx [ebx+14h] +
cmp ecx 8 +
jb loc_42487A  +
mov eax [ebx] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424870  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4249E2  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-4Ch] +
movups oword ptr [ebx] xmm0 +
movq xmm0 qword ptr [ebp-3Ch] +
movq qword ptr [ebx+10h] xmm0 +
jmp loc_4249BB  +
mov esi [ebp-24h] +
sub esi 18h +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_4248A0  +
mov eax [esi] +
cmp dword ptr [ebp-0Ch] 8 +
lea ecx [ebp-20h] +
push dword ptr [esi+10h]  +
cmovnb ecx [ebp-2Ch] +
mov edx [ebp-10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424932  +
cmp edi esi +
jz loc_42492B  +
mov ecx [edi+14h] +
cmp ecx 8 +
jb loc_4248FB  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_4248F1  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4249E2  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [edi+10h] 0 +
xor eax eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
movups xmm0 oword ptr [esi] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [edi+10h] xmm0 +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov edi esi +
jmp loc_424893  +
***
lea eax [ebp-20h] +
cmp edi eax +
jz loc_424985  +
mov ecx [edi+14h] +
cmp ecx 8 +
jb loc_424972  +
mov eax [edi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424968  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4249E2  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-4Ch] +
movups oword ptr [edi] xmm0 +
movq xmm0 qword ptr [ebp-3Ch] +
movq qword ptr [edi+10h] xmm0 +
jmp loc_4249BB  +
mov eax [ebp-0Ch] +
cmp eax 8 +
jb loc_4249BB  +
mov edx [ebp-2Ch] +
lea ecx ds:2[eax*2] +
mov eax edx +
cmp ecx 1000h +
jb loc_4249B1  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4249E2  +
push ecx  +
push edx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-24h] +
mov edx [ebp-30h] +
add eax 18h +
mov [ebp-24h] eax +
cmp eax edx +
jnz loc_424741  +
mov ecx [ebp-8] +
mov eax edx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx edx +
mov [ebp-10h] eax +
mov edx [ebp+8] +
push esi  +
push edi  +
mov [ebp-8] ebx +
mov edi ebx +
lea esi [edx-1] +
mov [ebp-4] ecx +
mov eax esi +
mov [ebp-18h] edx +
sar eax 1 +
mov [ebp-0Ch] ebx +
mov [ebp-1Ch] esi +
mov [ebp-14h] eax +
cmp ebx eax +
jge loc_424B01  +
add edi edi +
lea eax [edi+edi*2] +
cmp dword ptr [ecx+eax*8+2Ch] 8 +
lea esi [ecx+eax*8] +
lea edx [ecx+eax*8] +
lea eax [esi+18h] +
jb loc_424A48  +
mov eax [esi+18h] +
cmp dword ptr [edx+44h] 8 +
lea ecx [edx+30h] +
jb loc_424A54  +
mov ecx [edx+30h] +
push dword ptr [esi+28h]  +
mov edx [edx+40h] +
push eax  +
call loc_406B60  +
mov ecx [ebp-4] +
add esp 8 +
sar eax 1Fh +
add eax 2 +
add edi eax +
lea eax [edi+edi*2] +
lea ebx [ecx+eax*8] +
mov eax [ebp-8] +
lea eax [eax+eax*2] +
lea esi [ecx+eax*8] +
cmp esi ebx +
jz loc_424AED  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_424ABA  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424AB0  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424BF8  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-4] +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
movups xmm0 oword ptr [ebx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
mov [ebx+10h] eax +
mov dword ptr [ebx+14h] 7 +
mov [ebx] ax +
mov eax [ebp-14h] +
mov [ebp-8] edi +
cmp edi eax +
jl loc_424A30  +
mov edx [ebp-18h] +
mov esi [ebp-1Ch] +
mov ebx edi +
cmp edi eax +
jnz loc_424B21  +
test dl 1 +
jnz loc_424B21  +
dec edx  +
lea eax [edx+edx*2] +
lea eax [ecx+eax*8] +
push eax  +
lea eax [edi+edi*2] +
lea ecx [ecx+eax*8] +
call loc_406200  +
mov ebx esi +
lea esi [ebx-1] +
sar esi 1 +
cmp [ebp-0Ch] ebx +
jge loc_424B7C  +
mov ecx [ebp-4] +
lea eax [esi+esi*2] +
lea edi [ecx+eax*8] +
mov eax [ebp-10h] +
mov edx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_424B46  +
mov edx [eax] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_424B50  +
mov ecx [edi] +
push dword ptr [eax+10h]  +
push edx  +
mov edx [edi+10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424B7C  +
mov ecx [ebp-4] +
lea eax [ebx+ebx*2] +
push edi  +
lea ecx [ecx+eax*8] +
call loc_406200  +
mov ebx esi +
dec esi  +
sar esi 1 +
cmp [ebp-0Ch] ebx +
jl loc_424B30  +
mov ecx [ebp-4] +
lea eax [ebx+ebx*2] +
mov ebx [ebp-10h] +
lea esi [ecx+eax*8] +
cmp esi ebx +
jz loc_424BF1  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_424BC1  +
mov eax [esi] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424BB7  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424BF8  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
movups xmm0 oword ptr [ebx] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [ebx+10h] +
movq qword ptr [esi+10h] xmm0 +
mov [ebx+10h] eax +
mov dword ptr [ebx+14h] 7 +
mov [ebx] ax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_424C17  +
mov eax [edi] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_424C21  +
mov ecx [esi] +
push dword ptr [edi+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424C54  +
movups xmm0 oword ptr [edi] +
movups xmm1 oword ptr [esi] +
movq xmm2 qword ptr [esi+10h] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
mov eax [esi+14h] +
mov edx esi +
cmp eax 8 +
jb loc_424C60  +
mov edx [esi] +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_424C6A  +
mov ecx [ebx] +
push dword ptr [esi+10h]  +
push edx  +
mov edx [ebx+10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424CDC  +
movups xmm0 oword ptr [esi] +
mov eax edi +
movups xmm1 oword ptr [ebx] +
movq xmm2 qword ptr [ebx+10h] +
movups oword ptr [ebx] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [ebx+10h] xmm0 +
movups oword ptr [esi] xmm1 +
movq qword ptr [esi+10h] xmm2 +
cmp dword ptr [edi+14h] 8 +
jb loc_424CA7  +
mov eax [edi] +
cmp dword ptr [esi+14h] 8 +
mov ecx esi +
jb loc_424CB1  +
mov ecx [esi] +
push dword ptr [edi+10h]  +
mov edx [esi+10h] +
push eax  +
call loc_406B60  +
add esp 8 +
test eax eax +
jns loc_424CDC  +
movups xmm0 oword ptr [edi] +
movups oword ptr [esi] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [esi+10h] xmm0 +
movups oword ptr [edi] xmm1 +
movq qword ptr [edi+10h] xmm2 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call loc_424D20  +
test [ebp+arg_0] 1 +
jz loc_424D0F  +
push 90h  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea eax [esi+74h] +
mov dword ptr [esi] offset off_4674C8 +
push eax  +
mov dword ptr [esi+70h] 0 +
call ds:DeleteCriticalSection  +
mov ecx [esi+60h] +
cmp ecx 8 +
jb loc_424D74  +
mov eax [esi+4Ch] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424D6A  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424E6C  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+5Ch] 0 +
mov dword ptr [esi+60h] 7 +
mov [esi+4Ch] ax +
mov ecx [esi+48h] +
cmp ecx 8 +
jb loc_424DC2  +
mov eax [esi+34h] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424DB8  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424E6C  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 7 +
mov [esi+34h] ax +
mov ecx [esi+30h] +
cmp ecx 8 +
jb loc_424E0C  +
mov eax [esi+1Ch] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424E02  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424E6C  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 7 +
mov [esi+1Ch] ax +
mov ecx [esi+18h] +
cmp ecx 8 +
jb loc_424E56  +
mov eax [esi+4] +
lea ecx ds:2[ecx*2] +
cmp ecx 1000h +
jb loc_424E4C  +
mov edx [eax-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_424E6C  +
mov eax edx +
push ecx  +
push eax  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 7 +
mov [esi+4] ax +
pop esi  +
retn   +
***
call sub_432491  +
push 3  +
push offset asc_46743C  +
lea ecx [esi+1Ch] +
call loc_406450  +
push 8  +
push offset aOobe_log  +
lea ecx [esi+34h] +
call loc_406450  +
push 0  +
push offset unk_45EE80  +
lea ecx [esi+4Ch] +
call loc_406450  +
push 1Eh  +
mov ecx esi +
mov byte ptr [esi+6Ch] 1 +
call loc_424EF0  +
lea eax [esi+74h] +
mov dword ptr [esi+70h] 0 +
push eax  +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+8Ch] 1 +
mov byte ptr [esi+6Dh] 0 +
call ds:InitializeCriticalSection  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_450FE1+1)  +
mov eax large fs:0 +
push eax  +
sub esp 258h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+8] +
xor eax eax +
mov [esi+64h] edi +
mov dword ptr [ebp-224h] 0 +
mov dword ptr [ebp-220h] 7 +
mov [ebp-234h] ax +
mov [ebp-4] eax +
lea eax [ebp-21Ch] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_425325  +
lea ecx [ebp-21Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_424F70  +
sub ecx edx +
lea eax [ebp-21Ch] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-234h] +
call loc_406450  +
lea eax [esi+34h] +
push eax  +
lea ecx [ebp-24Ch] +
call sub_406290  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-264h] +
push 6  +
xor eax eax +
mov dword ptr [ebp-254h] 0 +
push offset a_trace  +
mov dword ptr [ebp-250h] 7 +
mov [ebp-264h] ax +
call loc_406450  +
lea edx [ebp-264h] +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24Ch] +
call loc_4277F0  +
mov byte ptr [ebp-4] 1 +
mov bl al +
mov edx [ebp-250h] +
cmp edx 8 +
jb loc_42502F  +
mov ecx [ebp-264h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_425025  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42537F  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_4252C8  +
lea edx [ebp-24Ch] +
lea ecx [ebp-234h] +
call loc_4276B0  +
test al al +
jz loc_4252C8  +
cmp dword ptr [ebp-220h] 8 +
lea eax [ebp-234h] +
cmovnb eax [ebp-234h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_42507C  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_4252C8  +
push 6  +
xor eax eax +
mov dword ptr [ebp-254h] 0 +
push offset a_debug  +
lea ecx [ebp-264h] +
mov dword ptr [ebp-250h] 7 +
mov [ebp-264h] ax +
call loc_406450  +
lea edx [ebp-264h] +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-234h] +
call loc_4277F0  +
mov byte ptr [ebp-4] 1 +
mov bl al +
mov edx [ebp-250h] +
cmp edx 8 +
jb loc_425106  +
mov ecx [ebp-264h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4250FC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_425384  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_42512E  +
cmp dword ptr [ebp-220h] 8 +
lea eax [ebp-234h] +
cmovnb eax [ebp-234h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_4252BC  +
lea ecx [ebp-234h] +
call sub_427890  +
test al al +
jz loc_4252C8  +
push 9  +
xor eax eax +
mov dword ptr [ebp-254h] 0 +
push offset aAsu_trace  +
lea ecx [ebp-264h] +
mov dword ptr [ebp-250h] 7 +
mov [ebp-264h] ax +
call loc_406450  +
lea edx [ebp-264h] +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-234h] +
call loc_4276B0  +
mov byte ptr [ebp-4] 1 +
mov bl al +
mov edx [ebp-250h] +
cmp edx 8 +
jb loc_4251CB  +
mov ecx [ebp-264h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4251C1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_425389  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_4252C8  +
cmp dword ptr [ebp-220h] 8 +
lea eax [ebp-234h] +
cmovnb eax [ebp-234h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_4251FF  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_4252C8  +
lea ecx [ebp-234h] +
call sub_427890  +
test al al +
jz loc_4252C8  +
push 9  +
xor eax eax +
mov dword ptr [ebp-254h] 0 +
push offset aAsu_debug  +
lea ecx [ebp-264h] +
mov dword ptr [ebp-250h] 7 +
mov [ebp-264h] ax +
call loc_406450  +
lea edx [ebp-264h] +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-234h] +
call loc_4276B0  +
mov edx [ebp-250h] +
mov bl al +
cmp edx 8 +
jb loc_425298  +
mov ecx [ebp-264h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42528E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42538E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_4252C8  +
cmp dword ptr [ebp-220h] 8 +
lea eax [ebp-234h] +
cmovnb eax [ebp-234h] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_4252C8  +
cmp edi 14h +
jle loc_4252C8  +
mov dword ptr [esi+64h] 14h +
mov edx [ebp-238h] +
cmp edx 8 +
jb loc_425308  +
mov ecx [ebp-24Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4252FE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_425393  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-23Ch] 0 +
mov dword ptr [ebp-238h] 7 +
mov [ebp-24Ch] ax +
mov edx [ebp-220h] +
cmp edx 8 +
jb loc_425361  +
mov ecx [ebp-234h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_425357  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_425393  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_45101A+1)  +
mov eax large fs:0 +
push eax  +
sub esp 244h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_425402  +
cmp word ptr [edx] 0 +
jz loc_425402  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4253E2  +
sub ecx esi +
lea edi [ebx+4Ch] +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx edi +
call loc_406450  +
jmp loc_4255C2  +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_425440  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_425421  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebx+4Ch] +
call loc_406450  +
push 11h  +
push offset aCreativeclou_0  +
lea ecx [ebx+4Ch] +
call loc_406570  +
cmp dword ptr [ebx+60h] 8 +
lea edx [ebx+4Ch] +
jb loc_42545B  +
mov edx [ebx+4Ch] +
mov ecx edx +
mov dword ptr [ebp-228h] 0 +
xor eax eax +
mov dword ptr [ebp-224h] 7 +
mov [ebp-238h] ax +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_425480  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-238h] +
call loc_406450  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
cmovnb eax [ebp-238h] +
push eax  +
call ds:PathIsDirectoryW  +
mov edx [ebp-224h] +
test eax eax +
setz al  +
mov [ebp-21Dh] al +
cmp edx 8 +
jb loc_425508  +
mov ecx [ebp-238h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4254F8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4257DE  +
push edx  +
push ecx  +
call sub_42CA5C  +
mov al [ebp-21Dh] +
add esp 8 +
lea edi [ebx+4Ch] +
test al al +
jz loc_4255C2  +
cmp dword ptr [ebx+60h] 8 +
lea edx [ebx+4Ch] +
jb loc_42551F  +
mov edx [ebx+4Ch] +
mov ecx edx +
mov dword ptr [ebp-228h] 0 +
xor eax eax +
mov dword ptr [ebp-224h] 7 +
mov [ebp-238h] ax +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_425541  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-238h] +
call loc_406450  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
push 0  +
cmovnb eax [ebp-238h] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov edx [ebp-224h] +
lea edi [ebx+4Ch] +
cmp edx 8 +
jb loc_4255C2  +
mov ecx [ebp-238h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4255B5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4257E3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea edi [ebx+4Ch] +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-228h] 0 +
push offset aHdhelper_log  +
lea ecx [ebp-238h] +
mov dword ptr [ebp-224h] 7 +
mov [ebp-238h] ax +
call loc_406450  +
cmp dword ptr [ebp-224h] 8 +
lea eax [ebp-238h] +
cmovnb eax [ebp-238h] +
push eax  +
call ds:PathIsFileSpecW  +
mov edx [ebp-224h] +
cmp eax 1 +
setnz al  +
mov [ebp-21Dh] al +
cmp edx 8 +
jb loc_42565E  +
mov ecx [ebp-238h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42564E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4257E8  +
push edx  +
push ecx  +
call sub_42CA5C  +
mov al [ebp-21Dh] +
add esp 8 +
test al al +
jnz loc_4257BA  +
push 0Ch  +
xor eax eax +
mov dword ptr [ebp-240h] 0 +
push offset aHdhelper_log  +
lea ecx [ebp-250h] +
mov dword ptr [ebp-23Ch] 7 +
mov [ebp-250h] ax +
call loc_406450  +
lea edx [ebp-250h] +
mov dword ptr [ebp-4] 0 +
mov ecx edi +
call loc_4276B0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-23Ch] +
mov [ebp-21Dh] al +
cmp edx 8 +
jb loc_4256FC  +
mov ecx [ebp-250h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4256EC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4257ED  +
push edx  +
push ecx  +
call sub_42CA5C  +
mov al [ebp-21Dh] +
add esp 8 +
xor ecx ecx +
mov dword ptr [ebp-240h] 0 +
mov dword ptr [ebp-23Ch] 7 +
mov [ebp-250h] cx +
test al al +
jz loc_4257BA  +
mov eax [ebx+68h] +
test eax eax +
jz loc_425736  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx+68h] 0 +
cmp dword ptr [edi+14h] 8 +
mov dword ptr [ebp-21Ch] 0 +
jb loc_425748  +
mov edi [edi] +
push edi  +
call ds:PathFindFileNameW  +
mov edx eax +
lea esi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_425754  +
sub edx esi +
lea ecx [ebx+34h] +
sar edx 1 +
push edx  +
push eax  +
call loc_406450  +
cmp byte ptr [ebx+6Dh] 0 +
mov eax [ebx] +
mov esi [eax] +
mov ecx esi +
jz loc_42578C  +
lea eax [ebx+68h] +
push eax  +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov [ebx+6Ch] al +
jmp loc_4257C0  +
lea eax [ebp-21Ch] +
push eax  +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
mov [ebx+6Ch] al +
test al al +
jz loc_4257B5  +
mov eax [ebp-21Ch] +
test eax eax +
jz loc_4257B5  +
push eax  +
call ds:CloseHandle  +
mov al [ebx+6Ch] +
jmp loc_4257C0  +
mov byte ptr [ebx+6Ch] 0 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425832  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_45EE80  +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
push 0Ah  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425872  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_45EE80  +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
push 14h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_4258B2  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_45EE80  +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
push 1Eh  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_4258FB  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_45EE80 +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
cmovnz eax edx +
push eax  +
push 28h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_42593B  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_45EE80 +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
cmovnz eax edx +
push eax  +
push 32h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_42597B  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_45EE80 +
mov esi [esi+3Ch] +
mov ecx esi +
push offset unk_45EE80  +
cmovnz eax edx +
push eax  +
push 3Ch  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_4259C3  +
push esi  +
mov esi [ebx] +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
test ecx ecx +
mov edx offset unk_45EE80 +
mov esi [esi+3Ch] +
mov eax edx +
cmovnz eax ecx +
test edi edi +
push eax  +
cmovnz edx edi +
mov ecx esi +
push edx  +
push [ebp+arg_4]  +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_4259E5  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_4259F0  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_4259FB  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_425A06  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_425A11  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_425AB1  +
test ebx ebx +
jz loc_425AB1  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425A69  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425A74  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425A7F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425A8A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_45EE80  +
push offset unk_45EE80  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 0Ah  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_425B31  +
test ebx ebx +
jz loc_425B31  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425AE9  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425AF4  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425AFF  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425B0A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_45EE80  +
push offset unk_45EE80  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 14h  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_425BB1  +
test ebx ebx +
jz loc_425BB1  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425B69  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425B74  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425B7F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425B8A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset unk_45EE80  +
push offset unk_45EE80  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 1Eh  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_C] 0 +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+18h+var_4] ebx +
mov [esp+18h+var_8] eax +
jz loc_425C3D  +
test ebx ebx +
jz loc_425C3D  +
test eax eax +
jz loc_425C3D  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425BF6  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425C01  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425C0C  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425C17  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_10] +
push ebx  +
push [ebp+arg_C]  +
mov ebx [esp+28h+var_4] +
push offset unk_45EE80  +
push [esp+2Ch+var_8]  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 28h  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_C] 0 +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+18h+var_4] ebx +
mov [esp+18h+var_8] eax +
jz loc_425CCD  +
test ebx ebx +
jz loc_425CCD  +
test eax eax +
jz loc_425CCD  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425C86  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425C91  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425C9C  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425CA7  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_10] +
push ebx  +
push [ebp+arg_C]  +
mov ebx [esp+28h+var_4] +
push offset unk_45EE80  +
push [esp+2Ch+var_8]  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 32h  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_C] 0 +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+18h+var_4] ebx +
mov [esp+18h+var_8] eax +
jz loc_425D5D  +
test ebx ebx +
jz loc_425D5D  +
test eax eax +
jz loc_425D5D  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_425D16  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_425D21  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_425D2C  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_425D37  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_10] +
push ebx  +
push [ebp+arg_C]  +
mov ebx [esp+28h+var_4] +
push offset unk_45EE80  +
push [esp+2Ch+var_8]  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 3Ch  +
push edi  +
call loc_41F900  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425DA2  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_462943  +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
push 0Ah  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425DE2  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_462943  +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
push 14h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425E22  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push eax  +
push offset unk_462943  +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
push 1Eh  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425E6B  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_462943 +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
cmovnz eax edx +
push eax  +
push 28h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425EAB  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_462943 +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
cmovnz eax edx +
push eax  +
push 32h  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jz loc_425EEB  +
push esi  +
mov esi [edi] +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
test edx edx +
mov eax offset unk_462943 +
mov esi [esi+38h] +
mov ecx esi +
push offset unk_462943  +
cmovnz eax edx +
push eax  +
push 3Ch  +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_425F19  +
test eax eax +
jz loc_425F19  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_462943  +
push 0Ah  +
call loc_426010  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_425F49  +
test eax eax +
jz loc_425F49  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_462943  +
push 14h  +
call loc_426010  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_425F79  +
test eax eax +
jz loc_425F79  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_462943  +
push 1Eh  +
call loc_426010  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_425FAD  +
test eax eax +
jz loc_425FAD  +
test edx edx +
jz loc_425FAD  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 28h  +
call loc_426010  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_425FDD  +
test eax eax +
jz loc_425FDD  +
test edx edx +
jz loc_425FDD  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 32h  +
call loc_426010  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_42600D  +
test eax eax +
jz loc_42600D  +
test edx edx +
jz loc_42600D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 3Ch  +
call loc_426010  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451060  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+0Ch] +
mov edx [ebp+14h] +
mov [ebp-34h] eax +
mov eax [ebp+18h] +
mov [ebp-30h] eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] eax +
test edx edx +
jz loc_42616B  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
mov ecx edx +
mov [ebp-4] eax +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-38h] 0Fh +
mov [ebp-4Ch] al +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_426083  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp-4Ch] +
call loc_4081D0  +
lea edx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-4Ch] +
call loc_4273B0  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-38h] +
cmp edx 10h +
jb loc_4260DD  +
mov ecx [ebp-4Ch] +
inc edx  +
mov eax ecx +
cmp edx 1000h +
jb loc_4260D3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426189  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
lea edi [ebx+38h] +
cmovnb ecx [ebp-28h] +
cmp dword ptr [edi+14h] 8 +
jb loc_4260F3  +
mov edi [edi] +
cmp dword ptr [ebx+34h] 8 +
lea eax [ebx+20h] +
jb loc_4260FE  +
mov eax [eax] +
cmp dword ptr [ebx+1Ch] 8 +
lea edx [ebx+8] +
jb loc_426109  +
mov edx [edx] +
cmp dword ptr [ebx+7Ch] 8 +
lea esi [ebx+68h] +
jb loc_426114  +
mov esi [esi] +
sub esp 8 +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push offset unk_462943  +
push dword ptr [ebp-34h]  +
push ecx  +
mov ecx [ebx+4] +
push edi  +
push eax  +
push edx  +
push dword ptr [ebp+8]  +
push esi  +
call loc_41FA60  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_42616B  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426161  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42618E  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call sub_432491  +
call sub_432491  +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_4261E3  +
push esi  +
mov esi [ebx] +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
test ecx ecx +
mov edx offset unk_462943 +
mov esi [esi+38h] +
mov eax edx +
cmovnz eax ecx +
test edi edi +
push eax  +
cmovnz edx edi +
mov ecx esi +
push edx  +
push [ebp+arg_4]  +
call ds:off_4522C0  +
mov ecx ebx +
call esi  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_426205  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_426210  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_42621B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_426226  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_426231  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call loc_41FA60  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4510A8  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 80h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-64h] edi +
mov eax [ebx+0Ch] +
mov ecx [ebx+8] +
mov [ebp-80h] eax +
mov eax [edi+8] +
test eax eax +
jnz loc_4262F4  +
mov esi dword_470290 +
test esi esi +
jz loc_4262EB  +
push ecx  +
push offset aParsingTheComm  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 1Eh  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_426319  +
mov eax dword_470294 +
test eax eax +
jz loc_426324  +
mov esi [eax] +
push ecx  +
push offset aParsingTheComm  +
push offset aCommandlinepar  +
mov esi [esi+34h] +
mov ecx esi +
push offset unk_45EE80  +
push 1Eh  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov esi dword_470290 +
mov eax dword_470294 +
mov edx [ebx+8] +
mov ecx [edi+8] +
test edx edx +
jg loc_4263AD  +
test ecx ecx +
jz loc_426349  +
mov esi [ecx] +
push edx  +
push offset aArgumentCountI  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
jmp loc_426396  +
test esi esi +
jz loc_42637D  +
push edx  +
push offset aArgumentCountI  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
xor al al +
jmp loc_42660A  +
test eax eax +
jz loc_4263A6  +
mov esi [eax] +
push edx  +
push offset aArgumentCountI  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 32h  +
push eax  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor al al +
jmp loc_42660A  +
test ecx ecx +
jz loc_4263CC  +
mov eax [ebp-80h] +
mov esi [ecx] +
push dword ptr [eax]  +
push offset aFirstCommandLi  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 14h  +
push ecx  +
jmp loc_42641C  +
test esi esi +
jz loc_4263FF  +
mov eax [ebp-80h] +
mov ecx esi +
push dword ptr [eax]  +
push offset aFirstCommandLi  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 14h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_42642C  +
test eax eax +
jz loc_42642F  +
mov ecx [ebp-80h] +
mov esi [eax] +
push dword ptr [ecx]  +
push offset aFirstCommandLi  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 14h  +
push eax  +
mov esi [esi+34h] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov edx [ebx+8] +
mov eax 1 +
mov [ebp-84h] eax +
cmp edx eax +
jle loc_426608  +
mov ecx [ebp-80h] +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov edx [ecx+eax*4] +
mov ecx edx +
xor eax eax +
mov [ebp-2Ch] ax +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_426461  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-2Ch] +
call loc_406450  +
mov dword ptr [ebp-4] 0 +
mov ecx [edi+8] +
test ecx ecx +
jnz loc_4264D2  +
mov esi dword_470290 +
test esi esi +
jz loc_4264C8  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov ecx esi +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aArgumentSpecif  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 14h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_426502  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_426502  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov esi [ecx] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aArgumentSpecif  +
mov esi [esi+34h] +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 14h  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
xor eax eax +
mov dword ptr [ebp-6Ch] 0 +
mov ecx 4 +
mov [ebp-7Ch] ax +
cmp [ebp-1Ch] ecx +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-68h] 7 +
cmovb ecx [ebp-1Ch] +
cmp dword ptr [ebp-18h] 8 +
push ecx  +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-7Ch] +
push eax  +
call loc_406450  +
cmp dword ptr [ebp-68h] 8 +
lea esi [ebp-7Ch] +
mov edi [ebp-7Ch] +
cmovnb esi edi +
cmp dword ptr [ebp-6Ch] 4 +
jnz loc_42656D  +
mov ecx offset aPsn +
mov edx 4 +
sub esi ecx +
mov ax [esi+ecx] +
cmp ax [ecx] +
jnz loc_42656D  +
add ecx 2 +
sub edx 1 +
jnz loc_426556  +
mov byte ptr [ebp-5Dh] 1 +
jmp loc_426571  +
mov byte ptr [ebp-5Dh] 0 +
mov eax [ebp-68h] +
cmp eax 8 +
jb loc_4265A8  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_42659E  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
cmp byte ptr [ebp-5Dh] 0 +
jz loc_42662A  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_4265EF  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4265E5  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edi [ebp-64h] +
mov eax [ebp-84h] +
inc eax  +
mov [ebp-84h] eax +
cmp eax [ebx+8] +
jl loc_426442  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 8  +
***
push ecx  +
push offset asc_462690  +
lea ecx [ebp-2Ch] +
call loc_4112F0  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_426711  +
mov edi [ebp-64h] +
mov ecx [edi+8] +
test ecx ecx +
jnz loc_426697  +
mov esi dword_470290 +
test esi esi +
jz loc_42668D  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov ecx esi +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aTheArgumentDoe  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_4266C7  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_4266C7  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov esi [ecx] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aTheArgumentDoe  +
mov esi [esi+34h] +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_4265F2  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426702  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
jmp loc_4265F2  +
***
xor eax eax +
mov dword ptr [ebp-34h] 0 +
cmp [ebp-1Ch] esi +
mov ecx esi +
mov [ebp-44h] ax +
lea eax [ebp-2Ch] +
cmovb ecx [ebp-1Ch] +
cmp dword ptr [ebp-18h] 8 +
push ecx  +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-44h] +
push eax  +
mov dword ptr [ebp-30h] 7 +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
xor eax eax +
inc esi  +
mov [ebp-5Ch] ax +
mov eax [ebp-1Ch] +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
cmp eax esi +
jb loc_426DB6  +
sub eax esi +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
cmovnb eax [ebp-2Ch] +
push ecx  +
lea ecx [ebp-5Ch] +
lea eax [eax+esi*2] +
push eax  +
call loc_406450  +
mov byte ptr [ebp-4] 2 +
xor eax eax +
mov ecx 2 +
mov [ebp-7Ch] ax +
cmp [ebp-34h] ecx +
lea eax [ebp-44h] +
mov dword ptr [ebp-6Ch] 0 +
cmovb ecx [ebp-34h] +
cmp dword ptr [ebp-30h] 8 +
push ecx  +
cmovnb eax [ebp-44h] +
lea ecx [ebp-7Ch] +
push eax  +
mov dword ptr [ebp-68h] 7 +
call loc_406450  +
cmp dword ptr [ebp-68h] 8 +
lea esi [ebp-7Ch] +
mov edi [ebp-7Ch] +
cmovnb esi edi +
cmp dword ptr [ebp-6Ch] 2 +
jnz loc_4267F8  +
mov ecx offset asc_46780C +
mov edx 2 +
sub esi ecx +
mov ax [ecx+esi] +
cmp ax [ecx] +
jnz loc_4267F8  +
add ecx 2 +
sub edx 1 +
jnz loc_4267E2  +
mov [ebp-5Dh] dl +
jmp loc_4267FC  +
mov byte ptr [ebp-5Dh] 1 +
mov eax [ebp-68h] +
cmp eax 8 +
jb loc_426833  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_426829  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
cmp byte ptr [ebp-5Dh] 0 +
jz loc_426982  +
mov edi [ebp-64h] +
mov eax [edi+8] +
test eax eax +
jnz loc_426884  +
mov esi dword_470290 +
test esi esi +
jz loc_42687B  +
push offset aTheIsNotThereF  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
jmp loc_4268A8  +
mov eax dword_470294 +
test eax eax +
jz loc_4268A8  +
mov esi [eax] +
push offset aTheIsNotThereF  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
mov esi [esi+34h] +
mov ecx esi +
push 32h  +
push eax  +
call ds:off_4522C0  +
call esi  +
add esp 14h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_4268E6  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4268DC  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426924  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42691A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
cmp edx 8 +
jb loc_4265F2  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426973  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
jmp loc_4265F2  +
***
xor eax eax +
mov dword ptr [ebp-6Ch] 0 +
mov [ebp-7Ch] ax +
mov eax [ebp-34h] +
mov dword ptr [ebp-68h] 7 +
cmp eax 2 +
jb loc_426DB6  +
add eax 0FFFFFFFEh +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb ecx eax +
cmp dword ptr [ebp-30h] 8 +
lea eax [ebp-44h] +
cmovnb eax [ebp-44h] +
push ecx  +
add eax 4 +
lea ecx [ebp-7Ch] +
push eax  +
call loc_406450  +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426A00  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4269F6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-6Ch] 0 +
movups xmm0 oword ptr [ebp-7Ch] +
movups oword ptr [ebp-44h] xmm0 +
movq xmm0 qword ptr [ebp-6Ch] +
movq qword ptr [ebp-34h] xmm0 +
jz loc_426C60  +
mov edi [ebp-4Ch] +
test edi edi +
jz loc_426C60  +
mov ecx [ebp-64h] +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_407190  +
mov esi [ebp-88h] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_426BA1  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_426A56  +
mov edx [esi+10h] +
mov edi [ebp-68h] +
lea ecx [ebp-44h] +
push dword ptr [esi+20h]  +
cmp edi 8 +
push edx  +
cmovnb ecx [ebp-7Ch] +
mov edx [ebp-6Ch] +
call loc_406B60  +
shr eax 1Fh +
add esp 8 +
test al al +
mov eax [ebp-64h] +
jnz loc_426B9C  +
cmp esi [eax] +
jz loc_426B9C  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_426AD8  +
mov esi dword_470290 +
test esi esi +
jz loc_426ACE  +
cmp edi 8 +
lea eax [ebp-44h] +
mov ecx esi +
cmovnb eax [ebp-7Ch] +
push eax  +
push offset aTheArgumentSAl  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_426B07  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_426B07  +
mov esi [ecx] +
lea eax [ebp-44h] +
cmp edi 8 +
cmovnb eax [ebp-7Ch] +
mov esi [esi+34h] +
push eax  +
push offset aTheArgumentSAl  +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_426B45  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426B3B  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426B83  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426B79  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
jmp loc_4265AE  +
***
mov edi [ebp-4Ch] +
jmp loc_426BA4  +
mov eax [ebp-64h] +
lea ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call loc_40D9B0  +
lea ecx [ebp-5Ch] +
cmp eax ecx +
jz loc_426BC7  +
cmp dword ptr [ebp-48h] 8 +
push edi  +
cmovnb ecx [ebp-5Ch] +
push ecx  +
mov ecx eax +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_426C05  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426BFB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426B83  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426C3D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-34h] 0 +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
jmp loc_4265AE  +
***
mov edi [ebp-64h] +
mov ecx [edi+8] +
test ecx ecx +
jnz loc_426CB4  +
mov esi dword_470290 +
test esi esi +
jz loc_426CAA  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov ecx esi +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aTheArgumentKey  +
push offset unk_45EE80  +
push offset unk_45EE80  +
push offset aCommandlinepar  +
push offset aOobeutils  +
push 32h  +
call ds:off_4522C0  +
call esi  +
add esp 1Ch +
jmp loc_426CE4  +
mov ecx dword_470294 +
test ecx ecx +
jz loc_426CE4  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov esi [ecx] +
cmovnb eax [ebp-2Ch] +
push eax  +
push offset aTheArgumentKey  +
mov esi [esi+34h] +
push offset aCommandlinepar  +
push offset unk_45EE80  +
push 32h  +
push ecx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 18h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_426D22  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426D18  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426D5C  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426D52  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
cmp edx 8 +
jb loc_4265F2  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426DA7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_426DBB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
jmp loc_4265F2  +
***
call loc_406760  +
call sub_432491  +
sub esp 10h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov [ebp+var_4] eax +
lea eax [ebp+var_10] +
push edi  +
push eax  +
call sub_407190  +
mov esi [ebp+var_8] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_426E24  +
cmp dword ptr [esi+24h] 8 +
lea edx [esi+10h] +
jb loc_426E03  +
mov edx [esi+10h] +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_426E0D  +
mov ecx [edi] +
push dword ptr [esi+20h]  +
push edx  +
mov edx [edi+10h] +
call loc_406B60  +
add esp 8 +
test eax eax +
js loc_426E24  +
mov eax [ebx] +
jmp loc_426E28  +
mov esi [ebx] +
mov eax esi +
cmp esi eax +
jnz loc_426E37  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
add esi 28h +
cmp dword ptr [esi+14h] 8 +
jb loc_426E42  +
mov esi [esi] +
mov edx esi +
lea edi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_426E47  +
mov ecx [ebp+var_4] +
sub edx edi +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4510F0  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-28h] ebx +
mov eax [ebp+8] +
xorps xmm0 xmm0 +
movq qword ptr [ebp-20h] xmm0 +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-18h] 0 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-44h] +
push 17h  +
xor eax eax +
mov dword ptr [ebp-34h] 0 +
push offset aCommandlinearg  +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] ax +
call loc_406450  +
lea eax [ebp-44h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-20h] +
call loc_414E60  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_426F3F  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_426F35  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_427053  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-24h] 0 +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-20h] +
call sub_416200  +
mov eax [ebx] +
mov edi [ebp-24h] +
mov esi [eax] +
cmp esi eax +
jz loc_426FD0  +
push ecx  +
mov eax esp +
mov [eax] edi +
test edi edi +
jz loc_426F7D  +
mov eax [edi] +
push edi  +
mov ebx [eax+4] +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
mov ebx [ebp-28h] +
lea eax [esi+28h] +
lea ecx [esi+10h] +
push eax  +
push ecx  +
lea ecx [ebp-20h] +
call loc_416B70  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_426FB4  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_426FB0  +
nop   +
cmp esi [eax+8] +
jnz loc_426FB0  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_426FA0  +
mov esi eax +
jmp loc_426FCC  +
mov esi eax +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_426FCC  +
nop   +
mov eax [ecx] +
mov esi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_426FC0  +
cmp esi [ebx] +
jnz loc_426F61  +
push dword ptr [ebp-2Ch]  +
lea ecx [ebp-20h] +
call sub_4177E0  +
mov byte ptr [ebp-4] 1 +
test edi edi +
jz loc_426FF3  +
mov eax [edi] +
push edi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov dword ptr [ebp-4] 4 +
mov esi [ebp-1Ch] +
test esi esi +
jz loc_427013  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
xor esi esi +
cmp byte ptr [ebp-18h] 0 +
jz loc_42701F  +
call ds:CoUninitialize  +
test esi esi +
jz loc_427033  +
mov eax [esi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451130  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_427097  +
mov eax [esi] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_4270B4  +
test eax 400h +
jz loc_4270B4  +
mov eax 1 +
jmp loc_427260  +
push esi  +
lea ecx [ebp-2Ch] +
call sub_406290  +
push esi  +
lea ecx [ebp-44h] +
mov dword ptr [ebp-4] 0 +
call sub_406290  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 1 +
call loc_414260  +
test al al +
jz loc_42716D  +
mov ecx [ebp-18h] +
lea eax [ebp-2Ch] +
mov ebx [ebp-2Ch] +
lea esi [ebp-44h] +
mov edi [ebp-44h] +
cmp ecx 8 +
mov edx [ebp-34h] +
cmovnb eax ebx +
cmp dword ptr [ebp-30h] 8 +
cmovnb esi edi +
cmp edx [ebp-1Ch] +
jnz loc_427126  +
test edx edx +
jz loc_427173  +
sub esi eax +
mov cx [esi+eax] +
cmp cx [eax] +
jnz loc_427123  +
add eax 2 +
sub edx 1 +
jnz loc_427110  +
jmp loc_427173  +
mov ecx [ebp-18h] +
cmp ecx 8 +
lea eax [ebp-2Ch] +
cmovnb eax ebx +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_427146  +
test eax 400h +
jnz loc_4271E4  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
push dword ptr [ebp-1Ch]  +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-44h] +
push eax  +
call loc_406450  +
lea ecx [ebp-2Ch] +
call loc_414260  +
test al al +
jnz loc_4270E1  +
mov ebx [ebp-2Ch] +
mov edi [ebp-44h] +
mov eax [ebp-30h] +
cmp eax 8 +
jb loc_4271AD  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_4271A0  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42727C  +
push ecx  +
push edi  +
call sub_42CA5C  +
mov ebx [ebp-2Ch] +
add esp 8 +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_42725E  +
lea ecx ds:2[eax*2] +
mov eax ebx +
cmp ecx 1000h +
jb loc_427254  +
mov ebx [ebx-4] +
add ecx 23h +
sub eax ebx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42727C  +
jmp loc_427254  +
mov eax [ebp-30h] +
cmp eax 8 +
jb loc_427217  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_42720D  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42727C  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_42724D  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_427243  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42727C  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax 2 +
jmp loc_427260  +
push ecx  +
push ebx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
cmp dword ptr [ecx+14h] 8 +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
jb loc_42729D  +
mov ebx [ecx] +
mov eax [ecx+10h] +
cmp eax 1 +
jb loc_4272F9  +
dec eax  +
or ecx 0FFFFFFFFh +
cmp eax ecx +
cmovb ecx eax +
lea edi [ebx+ecx*2] +
mov esi edi +
sub esi offset unk_462638 +
cmp word ptr [edi] 2Eh +
jnz loc_4272ED  +
mov edx 1 +
mov eax offset unk_462638 +
mov cx [esi+eax] +
cmp cx [eax] +
jnz loc_4272ED  +
add eax 2 +
sub edx 1 +
jnz loc_4272D0  +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn 8  +
***
cmp edi ebx +
jz loc_4272F9  +
sub edi 2 +
sub esi 2 +
jmp loc_4272C0  +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn 8  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] edx +
push edi  +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_427326  +
mov eax [esi] +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
lea ebx [eax+1] +
push ebx  +
call sub_42CA6A  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 8 +
jb loc_427354  +
mov esi [esi] +
push 0  +
push 0  +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_427380  +
push edi  +
call sub_42C3C0  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_427385  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_4] +
push edi  +
call loc_4081D0  +
push edi  +
call sub_42C3C0  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-4] edx +
push edi  +
mov eax esi +
cmp dword ptr [esi+14h] 10h +
jb loc_4273C6  +
mov eax [esi] +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov ebx eax +
xor ecx ecx +
mov edx 2 +
lea eax [ebx+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_4324E2  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_427425  +
cmp dword ptr [esi+14h] 10h +
jb loc_427406  +
mov esi [esi] +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_42742E  +
push edi  +
call sub_4322BA  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx edi +
xor eax eax +
mov [edi+ebx*2] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_427440  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp-4] +
push edi  +
call loc_406450  +
push edi  +
call sub_4322BA  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF0h +
sub esp 448h +
mov eax dword_46E02C +
xor eax esp +
mov [esp+448h+var_4] eax +
push esi  +
push edi  +
lea eax [esp+450h+Date] +
mov esi edx +
push eax  +
mov edi ecx +
call ds:GetLocalTime  +
movaps xmm0 oword ptr [esp+450h+Date.wYear] +
lea eax [esp+450h+FileTime] +
push eax  +
lea eax [esp+454h+var_420] +
movaps oword ptr [esp+454h+var_420] xmm0 +
push eax  +
call ds:SystemTimeToFileTime  +
imul eax esi +
mov edx [esp+450h+FileTime.dwHighDateTime] +
mov ecx [esp+450h+FileTime.dwLowDateTime] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
divsd xmm0 ds:qword_467E00 +
movsd [esp+450h+var_448] xmm0 +
call loc_44DBF0  +
addsd xmm0 [esp+450h+var_448] +
call loc_44DA99  +
mov [esp+450h+FileTime.dwLowDateTime] eax +
lea eax [esp+450h+var_420] +
push eax  +
lea eax [esp+454h+FileTime] +
mov [esp+454h+FileTime.dwHighDateTime] edx +
push eax  +
call ds:FileTimeToSystemTime  +
movaps xmm0 oword ptr [esp+450h+var_420] +
lea eax [esp+450h+DateStr] +
push 100h  +
push eax  +
push offset Format  +
lea eax [esp+45Ch+Date] +
movaps oword ptr [esp+45Ch+Date.wYear] xmm0 +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+450h+DateStr] +
push eax  +
push offset aS  +
lea eax [esp+458h+var_408] +
push 100h  +
push eax  +
call sub_407490  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_427569  +
xor al al +
pop edi  +
pop esi  +
mov ecx [esp+448h+var_4] +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
lea edx [esp+450h+var_408] +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_427570  +
sub edx esi +
lea eax [esp+450h+var_408] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_406450  +
mov ecx [esp+458h+var_C] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 61Ch +
mov eax dword_46E02C +
xor eax esp +
mov [esp+618h] eax +
push esi  +
lea eax [esp+8] +
mov esi ecx +
push eax  +
call ds:GetLocalTime  +
push 100h  +
lea eax [esp+21Ch] +
push eax  +
push offset aHhMmSs  +
lea eax [esp+14h] +
push eax  +
push 8  +
push 400h  +
call ds:GetTimeFormatW  +
push 100h  +
lea eax [esp+41Ch] +
push eax  +
push offset Format  +
lea eax [esp+14h] +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+218h] +
push eax  +
lea eax [esp+41Ch] +
push eax  +
push offset aSS  +
lea eax [esp+24h] +
push 100h  +
push eax  +
call sub_407490  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_427661  +
xor al al +
pop esi  +
mov ecx [esp+618h] +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [esp+18h] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_427670  +
sub eax edx +
mov ecx esi +
sar eax 1 +
push eax  +
lea eax [esp+1Ch] +
push eax  +
call loc_406450  +
mov ecx [esp+61Ch] +
mov al 1 +
pop esi  +
xor ecx esp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_4276D3  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_4276F0  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAppendW  +
mov esi eax +
test esi esi +
jz loc_42772E  +
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_427710  +
sub edx ecx +
lea eax [ebp-20Ch] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_406450  +
mov ecx [ebp-4] +
cmp esi 1 +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_427773  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_427790  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jnz loc_4277B4  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4277C0  +
sub edx ecx +
lea eax [ebp-20Ch] +
sar edx 1 +
mov ecx edi +
push edx  +
push eax  +
call loc_406450  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov eax edi +
cmp dword ptr [edi+14h] 8 +
jb loc_427813  +
mov eax [edi] +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_427830  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRenameExtensionW  +
test eax eax +
jnz loc_427854  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-20Ch] +
lea ecx [edx+2] +
sub esp 20Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov eax esi +
cmp dword ptr [esi+14h] 8 +
jb loc_4278B0  +
mov eax [esi] +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_4278E7  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
lea edx [ebp+pszPath] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4278F0  +
sub edx ecx +
lea eax [ebp+pszPath] +
sar edx 1 +
mov ecx esi +
push edx  +
push eax  +
call loc_406450  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 18h +
push esi  +
push edi  +
sub esp 8 +
mov edi edx +
mov esi ecx +
call loc_427290  +
mov edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_427943  +
xor al al +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [esi+10h] +
xor eax eax +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 7 +
mov word ptr [ebp+var_18] ax +
cmp ecx edx +
jb loc_4279C5  +
mov eax ecx +
sub eax edx +
cmp eax ecx +
cmovb ecx eax +
cmp dword ptr [esi+14h] 8 +
jb loc_42796F  +
mov esi [esi] +
push ecx  +
lea eax [esi+edx*2] +
push eax  +
lea ecx [ebp+var_18] +
call loc_406450  +
lea eax [ebp+var_18] +
mov ecx edi +
push eax  +
call loc_406200  +
mov edx [ebp+var_4] +
cmp edx 8 +
jb loc_4279BD  +
mov ecx [ebp+var_18] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4279B3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4279CA  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
pop edi  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
call loc_406760  +
call sub_432491  +
int 3  +
push ebp  +
mov ebp esp +
mov eax 200Ch +
call sub_42D2D0  +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi edx +
mov edi ecx +
push ecx  +
mov ecx esi +
call loc_427060  +
add esp 4 +
test eax eax +
jz loc_427A22  +
cmp eax 2 +
jz loc_427A10  +
push ecx  +
mov ecx esi +
call sub_414820  +
add esp 4 +
test al al +
jnz loc_427A22  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
push ebx  +
xor ebx ebx +
cmp dword ptr [edi+14h] 8 +
jb loc_427A2D  +
mov edi [edi] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 0C0000000h  +
push edi  +
call ds:CreateFileW  +
cmp dword ptr [esi+14h] 8 +
mov edi eax +
jb loc_427A50  +
mov esi [esi] +
push 0  +
push 200080h  +
push 4  +
push 0  +
push 0  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_427A90  +
push edi  +
call ds:CloseHandle  +
pop ebx  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
push 0  +
lea eax [ebp+nNumberOfBytesToWrite] +
push eax  +
push 1000h  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_427ACF  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:WriteFile  +
jmp loc_427AD7  +
call ds:GetLastError  +
mov ebx eax +
cmp [ebp+nNumberOfBytesToWrite] 1000h +
jz loc_427A90  +
push edi  +
call ds:CloseHandle  +
push esi  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
test ebx ebx +
pop ebx  +
setz al  +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_4511AD+1)  +
mov eax large fs:0 +
push eax  +
sub esp 488h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-490h] edi +
mov dword ptr [ebp-484h] 0 +
xor eax eax +
mov dword ptr [ebp-420h] 0 +
mov dword ptr [ebp-41Ch] 7 +
mov [ebp-430h] ax +
mov [ebp-4] eax +
lea ecx [ebp-478h] +
push 1  +
push offset asc_45EDCC  +
mov [ebp-468h] eax +
mov dword ptr [ebp-464h] 7 +
mov [ebp-478h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-478h] +
cmp dword ptr [ebp-464h] 8 +
cmovnb edx [ebp-478h] +
add edi 4Ch +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_427BC0  +
sub ecx esi +
mov eax edi +
sar ecx 1 +
cmp dword ptr [edi+14h] 8 +
jb loc_427BD9  +
mov eax [edi] +
push dword ptr [ebp-494h]  +
mov esi [edi+10h] +
push ecx  +
push edx  +
push ecx  +
mov edx esi +
mov ecx eax +
call loc_423EC0  +
xor ecx ecx +
mov dword ptr [ebp-450h] 0 +
add esp 10h +
mov [ebp-460h] cx +
cmp esi eax +
mov dword ptr [ebp-44Ch] 7 +
mov ecx edi +
cmovb eax esi +
cmp dword ptr [edi+14h] 8 +
jb loc_427C1D  +
mov ecx [edi] +
push eax  +
push ecx  +
lea ecx [ebp-460h] +
call loc_406450  +
mov edx [ebp-41Ch] +
cmp edx 8 +
jb loc_427C6A  +
mov ecx [ebp-430h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_427C60  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281B1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
movups xmm0 oword ptr [ebp-460h] +
movups oword ptr [ebp-430h] xmm0 +
movq xmm0 qword ptr [ebp-450h] +
movq qword ptr [ebp-420h] xmm0 +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-448h] +
mov esi [ebp-468h] +
xor eax eax +
mov [ebp-448h] ax +
mov eax [ebp-450h] +
add eax esi +
mov dword ptr [ebp-438h] 0 +
push eax  +
mov dword ptr [ebp-434h] 7 +
mov dword ptr [ebp-484h] 3 +
call loc_406FF0  +
cmp dword ptr [ebp-41Ch] 8 +
lea eax [ebp-430h] +
push dword ptr [ebp-420h]  +
cmovnb eax [ebp-430h] +
lea ecx [ebp-448h] +
push eax  +
call loc_406570  +
cmp dword ptr [ebp-464h] 8 +
lea eax [ebp-478h] +
push esi  +
cmovnb eax [ebp-478h] +
lea ecx [ebp-448h] +
push eax  +
call loc_406570  +
push 9  +
push offset aAsu_trace  +
lea ecx [ebp-448h] +
call loc_406570  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movq xmm1 qword ptr [eax+10h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov edx [ebp-41Ch] +
movq qword ptr [ebp-418h] xmm1 +
movups oword ptr [ebp-458h] xmm0 +
cmp edx 8 +
jb loc_427D9F  +
mov ecx [ebp-430h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_427D86  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281A7  +
push edx  +
push ecx  +
call sub_42CA5C  +
movups xmm0 oword ptr [ebp-458h] +
add esp 8 +
movq xmm1 qword ptr [ebp-418h] +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-434h] +
movq qword ptr [ebp-420h] xmm1 +
movups oword ptr [ebp-430h] xmm0 +
cmp edx 8 +
jb loc_427DF2  +
mov ecx [ebp-448h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_427DE8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281A7  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov esi [ebp-490h] +
mov eax [esi+64h] +
cmp eax 0Ah +
jz loc_427E1D  +
cmp eax 14h +
jz loc_427E11  +
mov dword ptr [ebp-488h] 0A00000h +
jmp loc_427E27  +
mov dword ptr [ebp-488h] 1400000h +
jmp loc_427E27  +
mov dword ptr [ebp-488h] 3200000h +
push 400h  +
lea eax [ebp-410h] +
push 0  +
push eax  +
call sub_42E740  +
cmp dword ptr [ebp-41Ch] 8 +
lea eax [ebp-430h] +
push offset aRbCcsUtf8  +
cmovnb eax [ebp-430h] +
push eax  +
lea eax [ebp-47Ch] +
mov dword ptr [ebp-47Ch] 0 +
push eax  +
call sub_436063  +
mov eax [ebp-47Ch] +
add esp 18h +
test eax eax +
jz loc_427E96  +
push eax  +
push 9  +
lea eax [ebp-410h] +
push 1  +
push eax  +
call sub_438313  +
push dword ptr [ebp-47Ch]  +
call sub_436121  +
add esp 14h +
cmp dword ptr [edi+14h] 8 +
mov eax edi +
mov byte ptr [ebp-47Dh] 0 +
jb loc_427EA7  +
mov eax [edi] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp-494h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_427ED7  +
mov byte ptr [ebp-47Dh] 0 +
jmp loc_42810C  +
lea ecx [ebp-418h] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_427F0A  +
mov eax [ebp-418h] +
mov [ebp-484h] eax +
mov eax [ebp-414h] +
mov [ebp-48Ch] eax +
mov byte ptr [ebp-47Dh] 1 +
jmp loc_427F22  +
mov eax [ebp-414h] +
mov [ebp-48Ch] eax +
mov eax [ebp-418h] +
mov [ebp-484h] eax +
push dword ptr [ebp-494h]  +
call ds:CloseHandle  +
cmp byte ptr [ebp-47Dh] 0 +
jz loc_42810C  +
cmp dword ptr [ebp-48Ch] 0 +
jl loc_42810C  +
jg loc_427F5C  +
mov eax [ebp-484h] +
cmp eax [ebp-488h] +
jb loc_42810C  +
mov eax [esi+68h] +
mov byte ptr [esi+0D0h] 1 +
add esi 68h +
test eax eax +
jz loc_427F74  +
push eax  +
call ds:CloseHandle  +
push edi  +
lea ecx [ebp-460h] +
call sub_406290  +
lea ecx [ebp-460h] +
mov byte ptr [ebp-4] 3 +
call loc_429F20  +
push ecx  +
lea edx [ebp-460h] +
mov ecx edi +
call loc_4279D0  +
add esp 4 +
test al al +
jz loc_427FFB  +
push ecx  +
mov ecx edi +
call loc_427060  +
add esp 4 +
test eax eax +
jz loc_427FC7  +
cmp eax 2 +
jz loc_427FFB  +
push ecx  +
mov ecx edi +
call sub_414820  +
add esp 4 +
test al al +
jz loc_427FFB  +
cmp dword ptr [edi+14h] 8 +
jb loc_427FCF  +
mov edi [edi] +
push 0  +
push 200080h  +
push 5  +
push 0  +
push 3  +
push 40000000h  +
push edi  +
call ds:CreateFileW  +
mov [esi] eax +
test eax eax +
jz loc_427FFB  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi] 0 +
mov edi [ebp-490h] +
push esi  +
mov eax [edi] +
mov esi [eax] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
push 8  +
push offset aKeeplogs  +
lea ecx [ebp-448h] +
mov [ebp-47Dh] al +
mov dword ptr [ebp-438h] 0 +
mov dword ptr [ebp-434h] 0Fh +
mov byte ptr [ebp-448h] 0 +
call loc_4081D0  +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-448h] +
cmp dword ptr [ebp-434h] 10h +
lea ecx [ebp-410h] +
mov esi [ebp-448h] +
cmovnb eax esi +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_428085  +
test dl dl +
jz loc_428081  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_428085  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_428065  +
xor eax eax +
jmp loc_42808A  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_428096  +
push ecx  +
mov ecx edi +
call loc_421CC0  +
mov eax [ebp-434h] +
cmp eax 10h +
jb loc_4280CC  +
lea ecx [eax+1] +
mov eax esi +
cmp ecx 1000h +
jb loc_4280C2  +
mov esi [esi-4] +
add ecx 23h +
sub eax esi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281AC  +
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-44Ch] +
cmp edx 8 +
jb loc_42810C  +
mov ecx [ebp-460h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428102  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281AC  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-464h] +
cmp edx 8 +
jb loc_428148  +
mov ecx [ebp-478h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42813E  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281B1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-41Ch] +
cmp edx 8 +
jb loc_428184  +
mov ecx [ebp-430h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42817A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4281B1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al [ebp-47Dh] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451228  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 1Ch +
push esi  +
mov eax dword_46E02C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxyusername  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
add esi 100h +
mov dword ptr [ebp-4] 0 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_428256  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_428265  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_4282A3  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428299  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Ah  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxyUser  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 1 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_4282F7  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_428306  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_428344  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42833A  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxyuser  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 2 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_428398  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_4283A7  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_4283E5  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4283DB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 4  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aUser  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 3 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_428439  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_428448  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_428486  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42847C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aUsername  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 4 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_4284DA  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_4284E9  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_428527  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42851D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Eh  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxyPassword  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 5 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_42857B  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_42858A  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_4285C8  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4285BE  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxypassword  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 6 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_42861C  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_42862B  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_428669  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42865F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 8  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aPassword  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 7 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_4286BD  +
movups xmm0 oword ptr [ebp-28h] +
mov edx 7 +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
xor eax eax +
add dword ptr [esi+4] 18h +
mov [ebp-28h] ax +
jmp loc_4286CC  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp edx 8 +
jb loc_42870A  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428700  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 9  +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
push offset aProxypass  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
call loc_406450  +
mov dword ptr [ebp-4] 8 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_428764  +
movups xmm0 oword ptr [ebp-28h] +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ebp-18h] +
movq qword ptr [eax+10h] xmm0 +
add dword ptr [esi+4] 18h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
lea ecx [ebp-28h] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4069F0  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_4287A6  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42879C  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4287B9  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451268  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
xor edx edx +
mov ecx [ebp+0Ch] +
mov edi [ebp+10h] +
mov eax [ebp+14h] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] dx +
mov [ebp-4] edx +
mov ecx [ecx] +
mov eax [eax] +
add ecx eax +
xor eax eax +
mov [ebp-30h] edx +
cmp [esi+10h] ecx +
mov [ebp-40h] ax +
mov eax esi +
cmovb ecx [esi+10h] +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [ebp-2Ch] 7 +
jb loc_428834  +
mov eax [esi] +
push ecx  +
push eax  +
lea ecx [ebp-40h] +
call loc_406450  +
push 4  +
push offset asc_467A80  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 1 +
call loc_406570  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movq xmm1 qword ptr [eax+10h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov [ebp-4] cl +
mov edx [ebp-2Ch] +
movq qword ptr [ebp-18h] xmm1 +
movups oword ptr [ebp-28h] xmm0 +
cmp edx 8 +
jb loc_4288B2  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4288A8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4289BB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [edi] +
xor eax eax +
mov [ebp-40h] ax +
mov eax [esi+10h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
cmp eax ecx +
jb loc_4289C0  +
sub eax ecx +
or edx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
cmovb edx eax +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_4288E8  +
mov eax [esi] +
lea eax [eax+ecx*2] +
push edx  +
push eax  +
lea ecx [ebp-40h] +
call loc_406450  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
lea ecx [ebp-28h] +
push dword ptr [ebp-30h]  +
cmovnb eax [ebp-40h] +
push eax  +
call loc_406570  +
mov byte ptr [ebp-4] 0 +
mov edx [ebp-2Ch] +
cmp edx 8 +
jb loc_42894E  +
mov ecx [ebp-40h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428944  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4289C5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea eax [ebp-28h] +
cmp esi eax +
jz loc_428968  +
cmp dword ptr [ebp-14h] 8 +
mov ecx esi +
push dword ptr [ebp-18h]  +
cmovnb eax [ebp-28h] +
push eax  +
call loc_406450  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_42899E  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428994  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4289C5  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_432491  +
call loc_406760  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4512B0  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-84h] ecx +
mov esi [ebp+8] +
mov edx esi +
mov eax [ebp+0Ch] +
mov [ebp-88h] eax +
xor eax eax +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 7 +
lea ecx [edx+2] +
mov [ebp-40h] ax +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_428A30  +
sub edx ecx +
lea ecx [ebp-40h] +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
lea ecx [ebp-40h] +
mov edx [ebp-40h] +
lea esi [ebp-40h] +
cmovnb eax edx +
cmovnb ecx edx +
mov [ebp-78h] eax +
cmovnb esi edx +
mov eax [ebp-30h] +
lea eax [ecx+eax*2] +
mov [ebp-74h] eax +
cmp esi eax +
jz loc_428A98  +
mov edi [ebp-78h] +
sub edi esi +
nop   +
movzx eax word ptr [esi] +
push eax  +
call sub_431135  +
mov [edi+esi] ax +
add esp 4 +
add esi 2 +
cmp esi [ebp-74h] +
jnz loc_428A80  +
mov eax [ebp-84h] +
mov esi [eax+100h] +
cmp esi [eax+104h] +
jz loc_428D71  +
push esi  +
lea ecx [ebp-70h] +
call sub_406290  +
push offset asc_467AA8  +
lea edx [ebp-70h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
call loc_40FDE0  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov edx offset asc_467AA0 +
lea ecx [ebp-58h] +
call loc_4067D0  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 3 +
push eax  +
mov edx offset asc_467ADC +
lea ecx [ebp-0A0h] +
call loc_4067D0  +
mov edi eax +
add esp 0Ch +
lea eax [ebp-28h] +
cmp eax edi +
jz loc_428B72  +
mov edx [ebp-14h] +
cmp edx 8 +
jb loc_428B40  +
mov ecx [ebp-28h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428B36  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov dword ptr [ebp-18h] 0 +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
movups xmm0 oword ptr [edi] +
movups oword ptr [ebp-28h] xmm0 +
movq xmm0 qword ptr [edi+10h] +
movq qword ptr [ebp-18h] xmm0 +
mov [edi+10h] eax +
mov dword ptr [edi+14h] 7 +
mov [edi] ax +
mov edx [ebp-8Ch] +
cmp edx 8 +
jb loc_428BB2  +
mov ecx [ebp-0A0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428BA8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
mov edi [ebp-28h] +
lea ecx [ebp-40h] +
push dword ptr [ebp-18h]  +
mov edx [ebp-30h] +
cmovnb eax edi +
cmp dword ptr [ebp-2Ch] 8 +
push eax  +
cmovnb ecx [ebp-40h] +
push 0  +
mov [ebp-78h] edi +
call loc_406BC0  +
mov ecx [ebp-58h] +
add esp 0Ch +
mov [ebp-74h] eax +
cmp eax 0FFFFFFFFh +
jz loc_428C82  +
cmp dword ptr [ebp-44h] 8 +
lea edi [ebp-58h] +
push dword ptr [ebp-48h]  +
mov edx [ebp-30h] +
cmovnb edi ecx +
cmp dword ptr [ebp-2Ch] 8 +
mov [ebp-7Ch] ecx +
lea ecx [ebp-40h] +
cmovnb ecx [ebp-40h] +
push edi  +
push 0  +
call loc_406BC0  +
add esp 0Ch +
mov [ebp-80h] eax +
cmp eax 0FFFFFFFFh +
jz loc_428C7C  +
mov edi [ebp-74h] +
mov edx [ebp-18h] +
lea ecx [edx+edi] +
cmp ecx eax +
jz loc_428C74  +
mov [ebp-78h] eax +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-78h] +
mov [ebp-74h] edx +
push eax  +
lea eax [ebp-7Ch] +
mov [ebp-7Ch] edi +
push eax  +
push dword ptr [ebp-88h]  +
call loc_4287C0  +
mov eax [ebp-18h] +
mov [ebp-7Ch] eax +
mov eax [ebp-80h] +
mov [ebp-80h] eax +
lea eax [ebp-7Ch] +
push eax  +
lea eax [ebp-80h] +
mov [ebp-74h] edi +
push eax  +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
call loc_4287C0  +
mov edi [ebp-28h] +
jmp loc_428C7F  +
mov edi [ebp-78h] +
mov ecx [ebp-7Ch] +
jmp loc_428C82  +
mov edi [ebp-78h] +
mov ecx [ebp-58h] +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-44h] +
cmp eax 8 +
jb loc_428CC0  +
lea edx ds:2[eax*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428CB3  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push edx  +
push ecx  +
call sub_42CA5C  +
mov edi [ebp-28h] +
add esp 8 +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-58h] ax +
mov eax [ebp-14h] +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 7 +
cmp eax 8 +
jb loc_428D0F  +
lea ecx ds:2[eax*2] +
mov eax edi +
cmp ecx 1000h +
jb loc_428D05  +
mov edi [edi-4] +
add ecx 23h +
sub eax edi +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push ecx  +
push edi  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov [ebp-4] al +
mov edx [ebp-5Ch] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
cmp edx 8 +
jb loc_428D5C  +
mov ecx [ebp-70h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_428D52  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [ebp-84h] +
add esi 18h +
cmp esi [eax+104h] +
jnz loc_428AB0  +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_428DA7  +
mov edx [ebp-40h] +
lea ecx ds:2[eax*2] +
mov eax edx +
cmp ecx 1000h +
jb loc_428D9D  +
mov edx [edx-4] +
add ecx 23h +
sub eax edx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_428DC4  +
push ecx  +
push edx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451309  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-68h] edi +
mov eax [ebp+0Ch] +
mov ebx [ebp+1Ch] +
mov [ebp-7Ch] eax +
mov eax [ebp+10h] +
mov [ebp-78h] eax +
mov eax [ebp+14h] +
mov [ebp-74h] eax +
mov eax [ebp+18h] +
mov [ebp-70h] eax +
xor eax eax +
mov [ebp-80h] eax +
mov [ebp-6Ch] eax +
mov [edi+0D0h] al +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-38h] 7 +
mov [ebp-4Ch] ax +
mov [ebp-4] eax +
push 40h  +
mov [ebp-34h] eax +
mov [ebp-30h] eax +
call sub_42C7DB  +
add esp 4 +
mov [eax] eax +
mov [eax+4] eax +
mov [eax+8] eax +
mov word ptr [eax+0Ch] 101h +
mov [ebp-34h] eax +
xor eax eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] ax +
mov dword ptr [ebp-4] 1 +
test ebx ebx +
jz loc_428FBD  +
cmp [ebx+38h] al +
jnz loc_428E89  +
push ebx  +
jmp loc_428FC4  +
mov eax [ebx+10h] +
test eax eax +
jz loc_428EAD  +
lea edx [edi+94h] +
cmp edx ebx +
jz loc_428EAD  +
cmp dword ptr [ebx+14h] 8 +
mov ecx ebx +
jb loc_428EA4  +
mov ecx [ebx] +
push eax  +
push ecx  +
mov ecx edx +
call loc_406450  +
mov eax [ebx+18h] +
mov esi [eax] +
cmp esi eax +
jz loc_428F2C  +
lea ecx [edi+0ACh] +
mov [ebp-80h] ecx +
nop   +
lea eax [esi+10h] +
push eax  +
lea edi [esi+28h] +
call loc_40D9B0  +
cmp eax edi +
jz loc_428EE5  +
cmp dword ptr [edi+14h] 8 +
mov ecx edi +
jb loc_428EDA  +
mov ecx [edi] +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx eax +
call loc_406450  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_428F0B  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_428F07  +
cmp esi [eax+8] +
jnz loc_428F07  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_428EF7  +
mov esi eax +
jmp loc_428F21  +
mov esi eax +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_428F21  +
mov eax [ecx] +
mov esi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_428F15  +
mov ecx [ebp-80h] +
cmp esi [ebx+18h] +
jnz loc_428EC0  +
mov edi [ebp-68h] +
cmp dword ptr [ebx+30h] 0 +
jz loc_428F52  +
add ebx 20h +
lea ecx [edi+0B4h] +
cmp ecx ebx +
jz loc_428F52  +
cmp dword ptr [ebx+14h] 8 +
mov eax ebx +
jb loc_428F49  +
mov eax [ebx] +
push dword ptr [ebx+10h]  +
push eax  +
call loc_406450  +
lea esi [edi+94h] +
lea eax [ebp-4Ch] +
cmp eax esi +
jz loc_428F75  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_428F69  +
mov eax [esi] +
push dword ptr [esi+10h]  +
lea ecx [ebp-4Ch] +
push eax  +
call loc_406450  +
lea edi [esi+18h] +
lea eax [ebp-34h] +
cmp eax edi +
jz loc_428F95  +
mov ecx eax +
call loc_410CD0  +
push dword ptr [ebp-84h]  +
lea ecx [ebp-34h] +
push edi  +
call sub_410D40  +
lea eax [esi+20h] +
lea ecx [ebp-2Ch] +
cmp ecx eax +
jz loc_428FB5  +
cmp dword ptr [eax+14h] 8 +
mov ecx eax +
jb loc_428FA9  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-2Ch] +
call loc_406450  +
mov al [esi+38h] +
mov [ebp-14h] al +
jmp loc_428FCC  +
lea eax [edi+94h] +
push eax  +
lea ecx [ebp-4Ch] +
call sub_4291E0  +
cmp dword ptr [ebp-3Ch] 0 +
mov ebx [ebp+8] +
mov edi [ebp+20h] +
jz loc_429011  +
cmp dword ptr [ebp-38h] 8 +
lea eax [ebp-4Ch] +
mov ecx [ebp-68h] +
cmovnb eax [ebp-4Ch] +
push edi  +
push 0  +
mov esi [ecx] +
push 0  +
push 0  +
push eax  +
mov esi [esi+14h] +
mov ecx esi +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push ebx  +
call ds:off_4522C0  +
mov ecx [ebp-68h] +
call esi  +
mov eax [ebp-34h] +
mov esi [eax] +
cmp esi eax +
jz loc_429168  +
nop   +
lea ebx [esi+10h] +
lea edi [esi+28h] +
mov byte ptr [ebp-4] 2 +
xor eax eax +
mov ecx [ebx+10h] +
mov [ebp-64h] ax +
mov eax [ebp-6Ch] +
or eax 1 +
mov dword ptr [ebp-54h] 0 +
mov [ebp-6Ch] eax +
mov [ebp-80h] eax +
lea eax [ebx+10h] +
mov [ebp-88h] eax +
lea eax [edi+10h] +
mov [ebp-84h] eax +
mov eax [eax] +
add eax ecx +
mov dword ptr [ebp-50h] 7 +
push eax  +
lea ecx [ebp-64h] +
call loc_406FF0  +
cmp dword ptr [ebx+14h] 8 +
jb loc_429074  +
mov ebx [ebx] +
mov eax [ebp-88h] +
lea ecx [ebp-64h] +
push dword ptr [eax]  +
push ebx  +
call loc_406570  +
cmp dword ptr [edi+14h] 8 +
jb loc_42908D  +
mov edi [edi] +
mov eax [ebp-84h] +
lea ecx [ebp-64h] +
push dword ptr [eax]  +
push edi  +
call loc_406570  +
push dword ptr [ebp+20h]  +
cmp dword ptr [ebp-50h] 8 +
lea eax [ebp-64h] +
mov ecx [ebp-68h] +
cmovnb eax [ebp-64h] +
push 0  +
mov ebx [ebp+8] +
mov edi [ecx] +
push 0  +
push 0  +
push eax  +
mov edi [edi+14h] +
mov ecx edi +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push ebx  +
call ds:off_4522C0  +
mov ecx [ebp-68h] +
call edi  +
and dword ptr [ebp-6Ch] 0FFFFFFFEh +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-50h] +
cmp edx 8 +
jb loc_42911E  +
mov ecx [ebp-64h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429114  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_4291CD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_429144  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_429140  +
cmp esi [eax+8] +
jnz loc_429140  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_429130  +
mov esi eax +
jmp loc_42915C  +
mov esi eax +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_42915C  +
nop   +
mov eax [ecx] +
mov esi ecx +
mov ecx eax +
cmp byte ptr [eax+0Dh] 0 +
jz loc_429150  +
cmp esi [ebp-34h] +
jnz loc_429020  +
mov edi [ebp+20h] +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_4291A7  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov ecx [ebp-68h] +
cmovnb eax [ebp-2Ch] +
push edi  +
push 0  +
mov esi [ecx] +
push 0  +
push 0  +
push eax  +
mov esi [esi+14h] +
mov ecx esi +
push 0  +
push 0  +
push dword ptr [ebp-70h]  +
push dword ptr [ebp-74h]  +
push dword ptr [ebp-78h]  +
push dword ptr [ebp-7Ch]  +
push ebx  +
call ds:off_4522C0  +
mov ecx [ebp-68h] +
call esi  +
lea ecx [ebp-4Ch] +
call loc_420330  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_432491  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp edi esi +
jz loc_429202  +
cmp dword ptr [esi+14h] 8 +
mov eax esi +
jb loc_4291F9  +
mov eax [esi] +
push dword ptr [esi+10h]  +
push eax  +
call loc_406450  +
push ebx  +
lea eax [esi+18h] +
lea ebx [edi+18h] +
cmp ebx eax +
jz loc_429222  +
mov ecx ebx +
call loc_410CD0  +
push [ebp+var_4]  +
lea eax [esi+18h] +
mov ecx ebx +
push eax  +
call sub_410D40  +
lea eax [esi+20h] +
lea ecx [edi+20h] +
pop ebx  +
cmp ecx eax +
jz loc_429240  +
cmp dword ptr [eax+14h] 8 +
mov edx eax +
jb loc_429237  +
mov edx [eax] +
push dword ptr [eax+10h]  +
push edx  +
call loc_406450  +
mov al [esi+38h] +
mov [edi+38h] al +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4513F0  +
mov eax large fs:0 +
push eax  +
sub esp 2FCh +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-2ECh] ecx +
xor eax eax +
mov dword ptr [ebp-2A0h] 0 +
mov dword ptr [ebp-29Ch] 7 +
mov [ebp-2B0h] ax +
mov [ebp-4] eax +
mov [ebp-224h] eax +
mov dword ptr [ebp-220h] 7 +
mov [ebp-234h] ax +
mov [ebp-288h] eax +
mov dword ptr [ebp-284h] 7 +
mov [ebp-298h] ax +
mov [ebp-2B8h] eax +
mov dword ptr [ebp-2B4h] 7 +
mov [ebp-2C8h] ax +
mov [ebp-270h] eax +
mov dword ptr [ebp-26Ch] 7 +
mov [ebp-280h] ax +
lea ecx [ebp-298h] +
mov byte ptr [ebp-4] 4 +
call loc_42A690  +
lea ecx [ebp-240h] +
call loc_41C220  +
push 7  +
push offset aUnknown  +
lea ecx [ebp-234h] +
call loc_406450  +
mov eax [ebp-240h] +
add eax 0FFFFFFFCh +
cmp eax 6 +
ja loc_4293E5  +
jmp ds:off_429F00[eax*4]  +
push 0Ah  +
push offset aWindows10  +
jmp loc_4293EC  +
mov eax [ebp-23Ch] +
cmp eax 3 +
jnz loc_429368  +
push 0Bh  +
push offset aWindows8_1  +
jmp loc_4293EC  +
cmp eax 2 +
jnz loc_429376  +
push 9  +
push offset aWindows8  +
jmp loc_4293EC  +
cmp eax 1 +
jnz loc_429384  +
push 9  +
push offset aWindows7  +
jmp loc_4293EC  +
test eax eax +
jnz loc_4293F7  +
push 0Dh  +
push offset aWindowsVista  +
jmp loc_4293EC  +
mov eax [ebp-23Ch] +
cmp eax 2 +
jz loc_4293AE  +
cmp eax 1 +
jz loc_4293AE  +
test eax eax +
jnz loc_4293F7  +
push 0Ch  +
push offset aWindows2000  +
jmp loc_4293EC  +
push 0Ah  +
push offset aWindowsXp  +
jmp loc_4293EC  +
mov eax [ebp-23Ch] +
cmp eax 5Ah +
jnz loc_4293CB  +
push 0Ah  +
push offset aWindowsMe  +
jmp loc_4293EC  +
cmp eax 0Ah +
jnz loc_4293D8  +
push eax  +
push offset aWindows98  +
jmp loc_4293EC  +
test eax eax +
jnz loc_4293F7  +
push 0Ah  +
push offset aWindows95  +
jmp loc_4293EC  +
push 7  +
push offset aUnknown  +
lea ecx [ebp-234h] +
call loc_406450  +
lea edx [ebp-2B0h] +
lea ecx [ebp-240h] +
call loc_42A1D0  +
lea edx [ebp-2CCh] +
lea ecx [ebp-308h] +
call sub_41C030  +
push dword ptr [ebp-308h]  +
lea eax [ebp-210h] +
push offset aD  +
push 100h  +
push eax  +
call sub_407490  +
add esp 10h +
mov dword ptr [ebp-2F4h] 0 +
xor eax eax +
mov dword ptr [ebp-2F0h] 7 +
lea ecx [ebp-210h] +
mov [ebp-304h] ax +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_429460  +
sub ecx edx +
lea eax [ebp-210h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-304h] +
call loc_406450  +
mov edx [ebp-2F0h] +
cmp edx 8 +
jb loc_4294C2  +
mov ecx [ebp-304h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4294B8  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-258h] 0 +
mov dword ptr [ebp-254h] 7 +
mov [ebp-268h] ax +
xor edi edi +
mov [ebp-24Ch] ax +
mov ebx 7 +
mov [ebp-23Ch] edi +
mov [ebp-238h] ebx +
lea edx [ebp-2CCh] +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-21Ch] +
call sub_41C030  +
cmp dword ptr [ebp-2CCh] 2 +
jnz loc_429524  +
lea ecx [ebp-268h] +
call sub_414090  +
jmp loc_429578  +
push 0  +
push 26h  +
lea eax [ebp-218h] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_429578  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_429544  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-268h] +
call loc_406450  +
push 1Bh  +
push offset aAdobeAdobeCrea  +
lea ecx [ebp-268h] +
call loc_406570  +
push 16h  +
xor eax eax +
mov dword ptr [ebp-2D8h] 0 +
push offset aAccCreativeClo  +
lea ecx [ebp-2E8h] +
mov dword ptr [ebp-2D4h] 7 +
mov [ebp-2E8h] ax +
call loc_406450  +
push ecx  +
lea edx [ebp-2E8h] +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-268h] +
call loc_414330  +
mov byte ptr [ebp-4] 6 +
add esp 4 +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_429604  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4295FA  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429ED3  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [ebp-254h] 8 +
lea eax [ebp-268h] +
cmovnb eax [ebp-268h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_429875  +
lea eax [ebp-268h] +
push eax  +
lea ecx [ebp-2E8h] +
call sub_406290  +
mov byte ptr [ebp-4] 8 +
lea ecx [ebp-250h] +
xor bl bl +
mov dword ptr [ebp-250h] 0 +
cmp dword ptr [ebp-2D4h] 8 +
lea eax [ebp-2E8h] +
push ecx  +
cmovnb eax [ebp-2E8h] +
push eax  +
mov dword ptr [ebp-21Ch] 0 +
mov dword ptr [ebp-2CCh] 0 +
call ds:GetFileVersionInfoSizeW  +
push 208h  +
mov esi eax +
lea eax [ebp-218h] +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
test esi esi +
jz loc_429773  +
push esi  +
call sub_42CA6A  +
add esp 4 +
lea ecx [ebp-2E8h] +
cmp dword ptr [ebp-2D4h] 8 +
mov edi eax +
cmovnb ecx [ebp-2E8h] +
push edi  +
push esi  +
push dword ptr [ebp-250h]  +
push ecx  +
call ds:GetFileVersionInfoW  +
test eax eax +
jz loc_429764  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-2CCh] +
push eax  +
push offset asc_45EDCC  +
push edi  +
call ds:VerQueryValueW  +
test eax eax +
jz loc_429764  +
cmp dword ptr [ebp-21Ch] 0 +
jz loc_429764  +
mov eax [ebp-2CCh] +
cmp dword ptr [eax] 0FEEF04BDh +
jnz loc_429764  +
movzx esi word ptr [eax+0Ah] +
movzx edx word ptr [eax+8] +
movzx ecx word ptr [eax+0Eh] +
movzx eax word ptr [eax+0Ch] +
push eax  +
push ecx  +
push edx  +
push esi  +
push offset aD_D_D_D  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_407490  +
lea ecx [ebp-218h] +
add esp 1Ch +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_429740  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-24Ch] +
call loc_406450  +
mov bl 1 +
push edi  +
call sub_42C3C0  +
mov edi [ebp-23Ch] +
add esp 4 +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_4297B7  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4297AD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429ED8  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
test bl bl +
jz loc_42986F  +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-2D8h] 0 +
push offset aAccVersion  +
lea ecx [ebp-2E8h] +
mov dword ptr [ebp-2D4h] 7 +
mov [ebp-2E8h] ax +
call loc_406450  +
mov ecx [ebp-2ECh] +
lea eax [ebp-2E8h] +
push eax  +
mov byte ptr [ebp-4] 9 +
lea ecx [ecx+0ACh] +
call loc_40DAB0  +
lea ecx [ebp-24Ch] +
cmp eax ecx +
jz loc_42982B  +
cmp dword ptr [ebp-238h] 8 +
push edi  +
cmovnb ecx [ebp-24Ch] +
push ecx  +
mov ecx eax +
call loc_406450  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_42986F  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429865  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EDD  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ebx [ebp-238h] +
mov edi [ebp-2ECh] +
push 4Eh  +
push offset asc_467AE0  +
lea ecx [edi+94h] +
call loc_406450  +
push 9  +
xor eax eax +
mov dword ptr [ebp-2D8h] 0 +
push offset aOsName  +
lea ecx [ebp-2E8h] +
mov dword ptr [ebp-2D4h] 7 +
mov [ebp-2E8h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-2E8h] +
cmp dword ptr [ebp-220h] 8 +
lea esi [ebp-234h] +
push ecx  +
cmovnb esi [ebp-234h] +
lea ecx [edi+0ACh] +
call loc_40DAB0  +
mov edx esi +
lea edi [edx+2] +
lea ecx [ebp-2E8h] +
mov dword ptr [ebp-2D4h] 7 +
mov [ebp-2E8h] ax +
call loc_406450  +
mov ecx [ebp-2ECh] +
lea eax [ebp-2E8h] +
mov byte ptr [ebp-4] 0Bh +
lea esi [ebp-2B0h] +
cmp dword ptr [ebp-29Ch] 8 +
push eax  +
cmovnb esi [ebp-2B0h] +
lea ecx [ecx+0ACh] +
call loc_40DAB0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_4299B0  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_429A0C  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429A02  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EE7  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 0Bh  +
xor eax eax +
mov dword ptr [ebp-2D8h] 0 +
push offset aOsLocale  +
lea ecx [ebp-2E8h] +
mov dword ptr [ebp-2D4h] 7 +
mov [ebp-2E8h] ax +
call loc_406450  +
mov ecx [ebp-2ECh] +
lea eax [ebp-2E8h] +
mov byte ptr [ebp-4] 0Ch +
lea esi [ebp-298h] +
cmp dword ptr [ebp-284h] 8 +
push eax  +
cmovnb esi [ebp-298h] +
lea ecx [ecx+0ACh] +
call loc_40DAB0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_429A70  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_429ACC  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429AC2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EEC  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
push 5  +
xor eax eax +
mov dword ptr [ebp-2F4h] 0 +
push offset aBit  +
lea ecx [ebp-304h] +
mov dword ptr [ebp-2F0h] 7 +
mov [ebp-304h] ax +
call loc_406450  +
mov byte ptr [ebp-4] 0Dh +
lea eax [ebp-210h] +
push dword ptr [ebp-308h]  +
push offset aD  +
push 100h  +
push eax  +
call sub_407490  +
add esp 10h +
mov dword ptr [ebp-2D8h] 0 +
xor eax eax +
mov dword ptr [ebp-2D4h] 7 +
lea ecx [ebp-210h] +
mov [ebp-2E8h] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_429B44  +
sub ecx edx +
lea eax [ebp-210h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-2E8h] +
call loc_406450  +
mov ecx [ebp-2ECh] +
lea eax [ebp-304h] +
mov byte ptr [ebp-4] 0Eh +
lea esi [ebp-2E8h] +
cmp dword ptr [ebp-2D4h] 8 +
push eax  +
cmovnb esi [ebp-2E8h] +
lea ecx [ecx+0ACh] +
call loc_40DAB0  +
mov edx esi +
lea edi [edx+2] +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_429BA0  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
mov byte ptr [ebp-4] 0Dh +
mov edx [ebp-2D4h] +
cmp edx 8 +
jb loc_429BFC  +
mov ecx [ebp-2E8h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429BF2  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EF1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2F0h] +
cmp edx 8 +
jb loc_429C40  +
mov ecx [ebp-304h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429C36  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EF1  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
lea ecx [ebp-280h] +
call loc_41C450  +
push 12h  +
xor eax eax +
mov dword ptr [ebp-2F4h] 0 +
push offset aOsBuildVersion  +
lea ecx [ebp-304h] +
mov dword ptr [ebp-2F0h] 7 +
mov [ebp-304h] ax +
call loc_406450  +
mov ecx [ebp-2ECh] +
lea eax [ebp-304h] +
mov byte ptr [ebp-4] 0Fh +
lea esi [ebp-280h] +
cmp dword ptr [ebp-26Ch] 8 +
push eax  +
cmovnb esi [ebp-280h] +
lea ecx [ecx+0ACh] +
call loc_40DAB0  +
mov edx esi +
lea edi [edx+2] +
nop   +
mov cx [edx] +
add edx 2 +
test cx cx +
jnz loc_429CB0  +
sub edx edi +
mov ecx eax +
sar edx 1 +
push edx  +
push esi  +
call loc_406450  +
mov byte ptr [ebp-4] 6 +
mov edx [ebp-2F0h] +
cmp edx 8 +
jb loc_429D0C  +
mov ecx [ebp-304h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429D02  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EF6  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-2ECh] +
push 4Eh  +
push offset asc_467AE0  +
lea ecx [ecx+0B4h] +
call loc_406450  +
cmp ebx 8 +
jb loc_429D5E  +
mov ecx [ebp-24Ch] +
lea edx ds:2[ebx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429D54  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-254h] +
cmp edx 8 +
jb loc_429D9E  +
mov ecx [ebp-268h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429D94  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-26Ch] +
xor eax eax +
mov dword ptr [ebp-258h] 0 +
mov dword ptr [ebp-254h] 7 +
mov [ebp-268h] ax +
cmp edx 8 +
jb loc_429DFB  +
mov ecx [ebp-280h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429DF1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-284h] +
cmp edx 8 +
jb loc_429E3B  +
mov ecx [ebp-298h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429E31  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-220h] +
cmp edx 8 +
jb loc_429E7B  +
mov ecx [ebp-234h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429E71  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-29Ch] +
cmp edx 8 +
jb loc_429EB7  +
mov ecx [ebp-2B0h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_429EAD  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_429EFB  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
call sub_432491  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45144C  +
mov eax large fs:0 +
push eax  +
sub esp 26Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp-230h] +
call sub_406290  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
cmovnb eax [ebp-230h] +
push eax  +
lea eax [ebp-218h] +
push 104h  +
push eax  +
call sub_431165  +
add esp 0Ch +
lea eax [ebp-218h] +
push eax  +
call ds:PathRemoveExtensionW  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_429FA0  +
sub ecx edx +
lea eax [ebp-218h] +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp-230h] +
call loc_406450  +
xor eax eax +
mov dword ptr [ebp-250h] 0 +
mov dword ptr [ebp-24Ch] 7 +
mov [ebp-260h] ax +
lea ecx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
call loc_4275B0  +
lea eax [ebp-260h] +
mov edx offset asc_462658 +
push eax  +
lea ecx [ebp-278h] +
call loc_4067D0  +
add esp 4 +
mov byte ptr [ebp-4] 2 +
mov ecx eax +
cmp dword ptr [eax+14h] 8 +
jb loc_42A016  +
mov ecx [eax] +
push dword ptr [eax+10h]  +
push ecx  +
lea ecx [ebp-230h] +
call loc_406570  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-264h] +
cmp edx 8 +
jb loc_42A069  +
mov ecx [ebp-278h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A05F  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A1BF  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
lea edx [ebp-248h] +
mov byte ptr [ebp-4] 3 +
mov ecx esi +
call sub_427920  +
lea edx [ebp-248h] +
lea ecx [ebp-230h] +
call loc_427750  +
lea eax [ebp-230h] +
cmp esi eax +
jz loc_42A0CE  +
cmp dword ptr [ebp-21Ch] 8 +
mov ecx esi +
push dword ptr [ebp-220h]  +
cmovnb eax [ebp-230h] +
push eax  +
call loc_406450  +
mov edx [ebp-234h] +
cmp edx 8 +
jb loc_42A10E  +
mov ecx [ebp-248h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A104  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A1C4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-24Ch] +
xor eax eax +
mov dword ptr [ebp-238h] 0 +
mov dword ptr [ebp-234h] 7 +
mov [ebp-248h] ax +
cmp edx 8 +
jb loc_42A167  +
mov ecx [ebp-260h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A15D  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A1C4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-21Ch] +
cmp edx 8 +
jb loc_42A1A3  +
mov ecx [ebp-230h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A199  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A1C4  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_432491  +
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push (offset loc_4514D9+1)  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 168h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-118h] edx +
mov eax ecx +
mov [ebp-114h] eax +
xor ecx ecx +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 7 +
mov [ebp-5Ch] cx +
mov [ebp-4] ecx +
mov [ebp-34h] ecx +
mov dword ptr [ebp-30h] 7 +
mov [ebp-44h] cx +
mov [ebp-1Ch] ecx +
mov dword ptr [ebp-18h] 7 +
mov [ebp-2Ch] cx +
mov byte ptr [ebp-4] 2 +
mov eax [eax] +
cdq   +
push 0B0h  +
mov edi eax +
mov esi edx +
push ecx  +
lea eax [ebp-110h] +
push eax  +
call sub_42E740  +
add esp 4 +
lea ecx [ebp-110h] +
call sub_419490  +
push esi  +
push edi  +
lea ecx [ebp-100h] +
mov byte ptr [ebp-4] 3 +
call sub_41BCE0  +
lea edx [ebp-5Ch] +
lea ecx [ebp-110h] +
call sub_41B410  +
lea ecx [ebp-110h] +
mov byte ptr [ebp-4] 2 +
call sub_418B10  +
mov eax [ebp-114h] +
push 0B0h  +
push 0  +
mov eax [eax+4] +
cdq   +
mov edi eax +
mov esi edx +
lea eax [ebp-110h] +
push eax  +
call sub_42E740  +
add esp 4 +
lea ecx [ebp-110h] +
call sub_419490  +
push esi  +
push edi  +
lea ecx [ebp-100h] +
mov byte ptr [ebp-4] 4 +
call sub_41BCE0  +
lea edx [ebp-44h] +
lea ecx [ebp-110h] +
call sub_41B410  +
lea ecx [ebp-110h] +
mov byte ptr [ebp-4] 2 +
call sub_418B10  +
mov eax [ebp-114h] +
push 0B0h  +
push 0  +
mov eax [eax+8] +
cdq   +
mov edi eax +
mov esi edx +
lea eax [ebp-110h] +
push eax  +
call sub_42E740  +
add esp 4 +
lea ecx [ebp-110h] +
call sub_419490  +
push esi  +
mov byte ptr [ebp-4] 5 +
push edi  +
lea ecx [ebp-100h] +
call sub_41BCE0  +
lea edx [ebp-2Ch] +
lea ecx [ebp-110h] +
call sub_41B410  +
lea ecx [ebp-110h] +
mov byte ptr [ebp-4] 2 +
call sub_418B10  +
push offset unk_462638  +
lea edx [ebp-5Ch] +
lea ecx [ebp-178h] +
call loc_40FDE0  +
add esp 4 +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-44h] +
cmp dword ptr [ebp-30h] 8 +
push dword ptr [ebp-34h]  +
cmovnb ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call loc_406570  +
mov dword ptr [ebp-138h] 0 +
xor ecx ecx +
mov dword ptr [ebp-134h] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-148h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-138h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
push 1  +
push offset unk_462638  +
lea ecx [ebp-148h] +
mov byte ptr [ebp-4] 7 +
call loc_406570  +
mov dword ptr [ebp-120h] 0 +
xor ecx ecx +
mov dword ptr [ebp-11Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-130h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
movq qword ptr [ebp-120h] xmm0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
mov [eax] cx +
mov byte ptr [ebp-4] 8 +
lea eax [ebp-2Ch] +
cmp dword ptr [ebp-18h] 8 +
lea ecx [ebp-130h] +
push dword ptr [ebp-1Ch]  +
cmovnb eax [ebp-2Ch] +
push eax  +
call loc_406570  +
xor ecx ecx +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-160h] xmm0 +
movq xmm0 qword ptr [eax+10h] +
mov [eax] cx +
mov ecx [ebp-118h] +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 7 +
lea eax [ebp-160h] +
push eax  +
movq qword ptr [ebp-150h] xmm0 +
call loc_406200  +
mov edx [ebp-14Ch] +
cmp edx 8 +
jb loc_42A4C1  +
mov ecx [ebp-160h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A4B7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A681  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-11Ch] +
cmp edx 8 +
jb loc_42A501  +
mov ecx [ebp-130h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A4F7  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A681  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-134h] +
xor eax eax +
mov dword ptr [ebp-120h] 0 +
mov dword ptr [ebp-11Ch] 7 +
mov [ebp-130h] ax +
cmp edx 8 +
jb loc_42A55E  +
mov ecx [ebp-148h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A554  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A681  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-164h] +
xor eax eax +
mov dword ptr [ebp-138h] 0 +
mov dword ptr [ebp-134h] 7 +
mov [ebp-148h] ax +
cmp edx 8 +
jb loc_42A5BB  +
mov ecx [ebp-178h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A5B1  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A681  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-18h] +
cmp edx 8 +
jb loc_42A5F5  +
mov ecx [ebp-2Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A5EB  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A686  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-30h] +
cmp edx 8 +
jb loc_42A62B  +
mov ecx [ebp-44h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A621  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A686  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov edx [ebp-48h] +
cmp edx 8 +
jb loc_42A661  +
mov ecx [ebp-5Ch] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A657  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A686  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_432491  +
call sub_432491  +
push ebx  +
mov ebx esp +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_451518  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 48h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-3Ch] esi +
xor eax eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 7 +
mov [ebp-30h] ax +
mov [ebp-4] eax +
lea eax [ebp-38h] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareAdobeA  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_42A7AE  +
mov [ebp-18h] eax +
mov [ebp-34h] eax +
lea eax [ebp-34h] +
push eax  +
push 0  +
lea eax [ebp-18h] +
push eax  +
push 0  +
push offset aCclangpref  +
push dword ptr [ebp-38h]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_42A7A5  +
mov eax [ebp-34h] +
test eax eax +
jz loc_42A7A5  +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_42CA6A  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_42A7A2  +
lea eax [ebp-34h] +
push eax  +
push esi  +
lea eax [ebp-18h] +
push eax  +
push 0  +
push offset aCclangpref  +
push dword ptr [ebp-38h]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_42A799  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42A780  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-30h] +
call loc_406450  +
push esi  +
call sub_42C3C0  +
add esp 4 +
mov esi [ebp-3Ch] +
push dword ptr [ebp-38h]  +
call ds:RegCloseKey  +
movups xmm0 oword ptr [ebp-30h] +
lea eax [ebp-54h] +
mov ecx esi +
push eax  +
movups oword ptr [ebp-54h] xmm0 +
movq xmm0 qword ptr [ebp-20h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
movq qword ptr [ebp-44h] xmm0 +
call loc_406200  +
mov edx [ebp-40h] +
cmp edx 8 +
jb loc_42A80C  +
mov ecx [ebp-54h] +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_42A802  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja loc_42A9E0  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
cmp dword ptr [esi+10h] 0 +
jnz loc_42A9C0  +
call ds:GetUserDefaultUILanguage  +
movzx esi ax +
mov edi esi +
and edi 3FFh +
call ds:GetUserDefaultLangID  +
movzx eax ax +
mov edx eax +
shr si 0Ah +
shr ax 0Ah +
and edx 3FFh +
movzx ecx ax +
cmp dx di +
movzx eax si +
cmovnz ecx eax +
lea eax [edi-1] +
movzx ecx cx +
cmp eax 26h +
ja loc_42A9B0  +
jmp ds:off_42A9E8[eax*4]  +
cmp ecx 2 +
mov eax offset aEn_us +
mov edx offset aEn_gb +
cmovz eax edx +
jmp loc_42A9B5  +
cmp ecx 5 +
jz loc_42A890  +
cmp ecx 7 +
jz loc_42A890  +
cmp ecx 6 +
jz loc_42A890  +
mov eax offset aEn_ae +
jmp loc_42A9B5  +
mov eax offset aFr_ma +
jmp loc_42A9B5  +
cmp ecx 3 +
mov eax offset aFr_fr +
mov edx offset aFr_ca +
cmovz eax edx +
jmp loc_42A9B5  +
cmp ecx 2 +
mov eax offset aEs_es +
mov edx offset aEs_mx +
cmovz eax edx +
jmp loc_42A9B5  +
cmp ecx 2 +
jz loc_42A8D8  +
cmp ecx 4 +
jz loc_42A8D8  +
mov eax offset aZh_tw +
jmp loc_42A9B5  +
mov eax offset aZh_cn +
jmp loc_42A9B5  +
mov eax offset aEn_il +
jmp loc_42A9B5  +
mov eax offset aDa_dk +
jmp loc_42A9B5  +
mov eax offset aNl_nl +
jmp loc_42A9B5  +
mov eax offset aFi_fi +
jmp loc_42A9B5  +
mov eax offset aDe_de +
jmp loc_42A9B5  +
mov eax offset aIt_it +
jmp loc_42A9B5  +
mov eax offset aJa_jp +
jmp loc_42A9B5  +
mov eax offset aKo_kr +
jmp loc_42A9B5  +
mov eax offset aSv_se +
jmp loc_42A9B5  +
mov eax offset aPl_pl +
jmp loc_42A9B5  +
mov eax offset aCs_cz +
jmp loc_42A9B5  +
mov eax offset aTr_tr +
jmp loc_42A9B5  +
mov eax offset aEl_gr +
jmp loc_42A9B5  +
mov eax offset aRu_ru +
jmp loc_42A9B5  +
mov eax offset aRo_ro +
jmp loc_42A9B5  +
mov eax offset aHr_hr +
jmp loc_42A9B5  +
mov eax offset aLv_lv +
jmp loc_42A9B5  +
mov eax offset aEt_ee +
jmp loc_42A9B5  +
mov eax offset aSk_sk +
jmp loc_42A9B5  +
mov eax offset aSl_si +
jmp loc_42A9B5  +
mov eax offset aHu_hu +
jmp loc_42A9B5  +
mov eax offset aNb_no +
jmp loc_42A9B5  +
mov eax offset aBg_bg +
jmp loc_42A9B5  +
mov eax offset aUk_ua +
jmp loc_42A9B5  +
mov eax offset aPt_br +
jmp loc_42A9B5  +
mov eax offset aLt_lt +
jmp loc_42A9B5  +
mov eax offset aEn_us +
mov ecx [ebp-3Ch] +
push 5  +
push eax  +
call loc_406450  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
call sub_432491  +
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset aBadAllocation +
mov dword ptr [ecx] offset off_452C10 +
retn   +
***
push esi  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_4074F0  +
mov dword ptr [esi] offset off_452C38 +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push esi  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_42ABCD  +
call sub_4389B8  +
jmp loc_42ABE1  +
cmp eax 8 +
jge loc_42ABE1  +
imul eax eax +
add eax offset stru_46F388 +
push eax  +
call sub_42B6F4  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push 0  +
push ecx  +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_42ACB5  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_0] +
cmp [ebx] edi +
jz loc_42AD84  +
cmp dword ptr [ebx] 0 +
jz loc_42AD53  +
push dword ptr [ebx]  +
call sub_4322BA  +
pop ecx  +
and dword ptr [ebx] 0 +
test edi edi +
jz loc_42AD84  +
cmp byte ptr [edi] 0 +
push esi  +
mov esi edi +
jz loc_42AD68  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_42AD62  +
sub esi edi +
inc esi  +
push esi  +
call sub_4324E2  +
mov [ebx] eax +
pop ecx  +
test eax eax +
jz loc_42AD83  +
push esi  +
push edi  +
push eax  +
call loc_42DC40  +
add esp 0Ch +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push ecx  +
call sub_42CBDE  +
push ecx  +
push 0  +
mov eax [ebp+arg_0] +
push ecx  +
cmp byte_46F478 0 +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax] +
test edi edi +
jz loc_42AFCC  +
mov eax [edi] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_42AFCB  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_4522C0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_0] +
push ebx  +
sub esp 10h +
push esi  +
push ecx  +
sub esp 10h +
push ecx  +
mov cl [ebp+arg_4] +
push ecx  +
push [ebp+lpCharType]  +
push ecx  +
push ecx  +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
call ds:GetModuleHandleW  +
push esi  +
push esi  +
mov esi dword_46F4C8 +
test esi esi +
jz loc_42BA77  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+dwSpinCount]  +
push [ebp+lpCriticalSection]  +
call ds:off_4522C0  +
call esi  +
jmp loc_42BA86  +
push [ebp+dwSpinCount]  +
push [ebp+lpCriticalSection]  +
call ds:InitializeCriticalSectionAndSpinCount  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn   +
***
cmp dword_46E008 0 +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
call sub_42BECE  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_42E740  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
jmp $+5  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_42BF1A  +
push dword ptr [esi]  +
call sub_4322BA  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi off_46E00C +
mov ecx esi +
push 0  +
push [ebp+arg_0]  +
call ds:off_4522C0  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ebp+pperrinfo] eax +
push esi  +
test ecx ecx +
jz loc_42BFCD  +
mov esi [ecx] +
lea eax [ebp+var_8] +
push eax  +
push offset unk_455E34  +
push ecx  +
mov esi [esi] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test eax eax +
js loc_42BFCA  +
mov eax [ebp+var_8] +
push edi  +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
mov edi eax +
mov eax [ebp+var_8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
test edi edi +
pop edi  +
jnz loc_42BFCA  +
lea eax [ebp+pperrinfo] +
push eax  +
push 0  +
call ds:GetErrorInfo  +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+pperrinfo] +
mov [ebp+pperrinfo] eax +
jmp loc_42BFCD  +
mov eax [ebp+pperrinfo] +
mov esi off_46E00C +
mov ecx esi +
push eax  +
push [ebp+arg_0]  +
call ds:off_4522C0  +
call esi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edx [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] offset off_455E44 +
mov eax [edx+4] +
mov [edi+4] eax +
mov ecx [edx+8] +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_42C028  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_455E44 +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_42C06B  +
cmp [ebp+arg_8] 0 +
jz loc_42C06B  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_455E44 +
test ecx ecx +
jz loc_42C0A2  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_42C0B1  +
push eax  +
call ds:LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_455E44 +
test ecx ecx +
jz loc_42C0E5  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_42C0F3  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_42C104  +
push 10h  +
push edi  +
call sub_42CA5C  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
lea ecx [ebp-10h] +
push 0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_42C030  +
push offset unk_46C488  +
lea eax [ebp-10h] +
push eax  +
call sub_42DBD3  +
call sub_42CA47  +
call sub_42CDF4  +
push eax  +
call sub_439C5A  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_42C1E3  +
call sub_42CDFE  +
call sub_42CE57  +
test eax eax +
jz loc_42C1AB  +
push offset sub_4057F0  +
call sub_439932  +
pop ecx  +
call nullsub_1  +
call nullsub_1  +
call sub_42CE13  +
call sub_4057F0  +
push eax  +
call loc_43AB77  +
pop ecx  +
call sub_42CE10  +
test al al +
jz loc_42C1D4  +
call sub_43A130  +
call sub_4057F0  +
call sub_42CF89  +
test eax eax +
jnz loc_42C1E3  +
retn   +
***
push 7  +
call sub_42CE6F  +
call sub_42CE3A  +
xor eax eax +
retn   +
***
call sub_42CFD1  +
call sub_4057F0  +
push eax  +
call sub_43BD1B  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_42CF8E  +
test al al +
jz loc_42C38B  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_42C364  +
call sub_43A3EA  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 7  +
call sub_42CE6F  +
push esi  +
call sub_43A444  +
push dword ptr [ebp-20h]  +
call sub_43A408  +
***
call sub_42CDA9  +
cmp ecx dword_46E02C +
call loc_42C3F7  +
push 0  +
call sub_42C8BA  +
pop ecx  +
test al al +
jz loc_42C3EF  +
push offset loc_42C480  +
call sub_42CA47  +
pop ecx  +
xor eax eax +
retn   +
push 7  +
call sub_42CE6F  +
int 3  +
***
push esi  +
push edi  +
push 0FA0h  +
push offset CriticalSection  +
call ds:InitializeCriticalSectionAndSpinCount  +
push offset aApiMsWinCoreSy  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jnz loc_42C42B  +
push offset aKernel32_dll  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_42C471  +
push offset aSleepcondition  +
push esi  +
call ds:GetProcAddress  +
push offset aWakeallconditi  +
push esi  +
mov edi eax +
call ds:GetProcAddress  +
test edi edi +
jz loc_42C45B  +
test eax eax +
jz loc_42C45B  +
mov dword_46F668 edi +
mov dword_46F66C eax +
pop edi  +
pop esi  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov hEvent eax +
test eax eax +
jnz loc_42C458  +
push 7  +
call sub_42CE6F  +
push esi  +
push esi  +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_42C532  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_42C551  +
push 64h  +
call sub_42C592  +
pop ecx  +
jmp loc_42C51E  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_42C528  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_46E020 +
mov [ecx+4] eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
jmp loc_42C7ED  +
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
cmp byte_46F995 0 +
call sub_42D0A0  +
call sub_42D2BB  +
cmp byte_46F994 0 +
cmp dword_46F998 0FFFFFFFFh +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
pop ebp  +
jmp sub_42C7DB  +
***
test [ebp+arg_0] 1 +
call sub_42D0A0  +
mov edi [ebp+10h] +
test al al +
call sub_42D0A0  +
xor esi esi +
mov [ebp-4] esi +
mov edi [ebp+8] +
mov [ebp-24h] esi +
cmp esi [ebp+10h] +
jz loc_42CB82  +
sub edi [ebp+0Ch] +
mov [ebp+8] edi +
mov ecx [ebp+14h] +
call ds:off_4522C0  +
mov ecx edi +
call dword ptr [ebp+14h]  +
inc esi  +
jmp loc_42CB3C  +
mov eax [ebp-14h] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
mov eax [eax] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_42CB9B  +
mov dword ptr [ebp-28h] 0 +
mov eax [ebp-28h] +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_42CC99  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_42CCE2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_42CD23  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_42CCF0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42CD1E  +
cmp edx [esp+arg_4] +
ja loc_42CD1E  +
jb loc_42CD1F  +
cmp eax [esp+arg_0] +
jbe loc_42CD1F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_42D2D0  +
***
sub esp 14h +
mov ecx dword_46E02C +
inc eax  +
retn   +
***
retn   +
***
push 0  +
call sub_407450  +
xor eax eax +
sub esp 324h +
test eax eax +
retn   +
***
push esi  +
and dword_46F9C0 0 +
retn   +
***
push ebx  +
push esi  +
mov esi offset unk_469688 +
mov ebx offset unk_469688 +
cmp esi ebx +
jnb loc_42D067  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_42D05F  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_42D04F  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi offset unk_469690 +
mov ebx offset unk_469690 +
cmp esi ebx +
jnb loc_42D099  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_42D091  +
mov ecx edi +
call ds:off_4522C0  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_42D081  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
push ebp  +
mov ebp esp +
and dword_46F9C8 0 +
sub esp 24h +
or dword_46E050 1 +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_42D2B7  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
push ebx  +
push esi  +
push edi  +
xor ecx ecx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-1Ch] +
mov [ebp-0Ch] eax +
xor edi 6C65746Eh +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-20h] +
xor eax 756E6547h +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
or eax edi +
or eax [ebp-8] +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_42D1C8  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_42D1B7  +
cmp eax 20660h +
jz loc_42D1B7  +
cmp eax 20670h +
jz loc_42D1B7  +
cmp eax 30650h +
jz loc_42D1B7  +
cmp eax 30660h +
jz loc_42D1B7  +
cmp eax 30670h +
jnz loc_42D1C8  +
mov edi dword_46F9CC +
or edi 1 +
mov dword_46F9CC edi +
jmp loc_42D1CE  +
mov edi dword_46F9CC +
mov ecx [ebp-1Ch] +
push 7  +
pop eax  +
mov [ebp-4] ecx +
cmp [ebp-0Ch] eax +
jl loc_42D20B  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov ecx [ebp-4] +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_42D20E  +
or edi 2 +
mov dword_46F9CC edi +
jmp loc_42D20E  +
mov ebx [ebp-10h] +
mov eax dword_46E050 +
or eax 2 +
mov dword_46F9C8 1 +
mov dword_46E050 eax +
test ecx 100000h +
jz loc_42D2B4  +
or eax 4 +
mov dword_46F9C8 2 +
mov dword_46E050 eax +
test ecx 8000000h +
jz loc_42D2B4  +
test ecx 10000000h +
jz loc_42D2B4  +
xor ecx ecx +
xor eax eax +
cmp dword_470754 eax +
setnz al  +
retn   +
***
sub ecx eax +
push ecx  +
sub esp 18h +
sub esp 40h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_42C3AF  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_42D601  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_42D66B  +
jmp loc_42D66B  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_430402  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_42D63F  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_42D4E1  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_42D3CB  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
push edi  +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jz loc_42D71C  +
push dword ptr [esi]  +
call sub_4322BA  +
pop ecx  +
and dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn   +
***
call sub_42D0A0  +
mov ecx [ebp+arg_0] +
cmp [ebp+arg_4] 0 +
call sub_42FB0C  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_42FB0C  +
call sub_42FB0C  +
add eax 14h +
retn   +
***
test esi esi +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
cmp eax ecx +
jnz loc_42D92C  +
xor eax eax +
pop ebp  +
retn   +
add ecx 5 +
add eax 5 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_42D950  +
test dl dl +
jz loc_42D928  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_42D950  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_42D932  +
jmp loc_42D928  +
sbb eax eax +
or eax 1 +
pop ebp  +
retn   +
***
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_42D989  +
cmp dword_46F9C8 1 +
jle loc_42DA80  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_42D9AC  +
movups xmm0 oword ptr [edi] +
jmp loc_42D9D7  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_42D9CF  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_42D9B6  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_42DA43  +
add edx 10h +
mov ecx [ebp-8] +
jmp loc_42D9DA  +
***
lea edx [edx+ecx*2] +
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_42DA5A  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_42DA5A  +
movups xmm1 oword ptr [ecx] +
cmp ah [ebx+0Fh] +
or eax 41783C71h +
mov ecx [ebp-4] +
add edi 10h +
add ecx 10h +
jmp loc_42DA0C  +
***
cmp ax cx +
jz loc_42DA07  +
add edx esi +
jmp loc_42D9DA  +
***
cmp [edi] ax +
jnz loc_42DA72  +
add edi esi +
add ecx esi +
jmp loc_42DA0C  +
***
add edx esi +
jmp loc_42D9F3  +
***
add ecx 10h +
jmp loc_42DAA1  +
***
add edx 10h +
add edi 10h +
jmp loc_42DAEE  +
***
cmp [edx] ax +
jnz loc_42DB55  +
add edx esi +
add edi esi +
jmp loc_42DAEE  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_42DAA1  +
***
sub esp 10h +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx 19930520h +
mov [ebp+var_10] eax +
test edi edi +
jz loc_42DC1D  +
test byte ptr [edi] 10h +
jz loc_42DC0F  +
mov ecx [eax] +
sub ecx 4 +
push esi  +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call ds:off_4522C0  +
call esi  +
mov eax [ebp+var_10] +
pop esi  +
test edi edi +
jz loc_42DC1D  +
test byte ptr [edi] 8 +
jz loc_42DC1D  +
mov ebx 1994000h +
mov [ebp+var_8] eax +
lea eax [ebp+Arguments] +
push eax  +
push 3  +
push 1  +
push 0E06D7363h  +
mov [ebp+Arguments] ebx +
mov [ebp+var_4] edi +
call ds:RaiseException  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_42DC60  +
cmp edi eax +
jb loc_42DEF4  +
cmp ecx 20h +
jb loc_42E13B  +
cmp ecx 80h +
jnb loc_42DC84  +
bt dword_46E050 1 +
jb loc_42E10D  +
jmp loc_42DE67  +
bt dword_46F9CC 1 +
jnb loc_42DC97  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_42DCB0  +
bt dword_46E050 1 +
jb loc_42E090  +
bt dword_46F9CC 0 +
jnb loc_42DE67  +
test edi 3 +
jnz loc_42DE67  +
test esi 3 +
jnz loc_42DE82  +
bt edi 2 +
jnb loc_42DCE9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_42DD00  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_42DD6D  +
bt esi 3 +
jnb loc_42DDC6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_42DE1C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_42DE34  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_42DE1C  +
***
bt ecx 2 +
jnb loc_42DE47  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_42DE5E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_42DEA4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_42DE82  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_42DE6F  +
mov edx ecx +
cmp ecx 20h +
jb loc_42E13B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_42DEA4[edx*4]  +
jmp dword ptr ds:loc_42DEB4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_42E054  +
bt dword_46E050 1 +
jb loc_42DFA5  +
test edi 3 +
jz loc_42DF2D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_42DF20  +
cmp ecx 20h +
jb loc_42E054  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_42DF50[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_42DFBC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_42DFAD  +
cmp ecx 80h +
jb loc_42E02C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_42DFBC  +
cmp ecx 20h +
jb loc_42E054  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_42E031  +
test ecx 0FFFFFFFCh +
jz loc_42E071  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_42E05C  +
test ecx ecx +
jz loc_42E084  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_42E075  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42E090  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_42E180  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_42E10D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_42E0B0  +
test ecx ecx +
jz loc_42E170  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_42E13B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_42E120  +
and ecx 1Fh +
jz loc_42E170  +
mov eax ecx +
shr ecx 2 +
jz loc_42E156  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_42E147  +
mov ecx eax +
and ecx 3 +
jz loc_42E170  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42E15D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_42E19C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42E193  +
shr eax 2 +
jz loc_42E1AE  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_42E1A1  +
pop ecx  +
jmp loc_42E09D  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_42E1E0  +
cmp edi eax +
jb loc_42E474  +
cmp ecx 20h +
jb loc_42E6BB  +
cmp ecx 80h +
jnb loc_42E204  +
bt dword_46E050 1 +
jb loc_42E68D  +
jmp loc_42E3E7  +
bt dword_46F9CC 1 +
jnb loc_42E217  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_42E230  +
bt dword_46E050 1 +
jb loc_42E610  +
bt dword_46F9CC 0 +
jnb loc_42E3E7  +
test edi 3 +
jnz loc_42E3E7  +
test esi 3 +
jnz loc_42E402  +
bt edi 2 +
jnb loc_42E269  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_42E280  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_42E2ED  +
bt esi 3 +
jnb loc_42E346  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_42E39C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_42E3B4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_42E39C  +
***
bt ecx 2 +
jnb loc_42E3C7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_42E3DE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_42E424[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_42E402  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_42E3EF  +
mov edx ecx +
cmp ecx 20h +
jb loc_42E6BB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_42E424[edx*4]  +
jmp dword ptr ds:loc_42E434[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_42E5D4  +
bt dword_46E050 1 +
jb loc_42E525  +
test edi 3 +
jz loc_42E4AD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_42E4A0  +
cmp ecx 20h +
jb loc_42E5D4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_42E4D0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_42E53C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_42E52D  +
cmp ecx 80h +
jb loc_42E5AC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_42E53C  +
cmp ecx 20h +
jb loc_42E5D4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_42E5B1  +
test ecx 0FFFFFFFCh +
jz loc_42E5F1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_42E5DC  +
test ecx ecx +
jz loc_42E604  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_42E5F5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42E610  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_42E700  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_42E68D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_42E630  +
test ecx ecx +
jz loc_42E6F0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_42E6BB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_42E6A0  +
and ecx 1Fh +
jz loc_42E6F0  +
mov eax ecx +
shr ecx 2 +
jz loc_42E6D6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_42E6C7  +
mov ecx eax +
and ecx 3 +
jz loc_42E6F0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42E6DD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_42E71C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42E713  +
shr eax 2 +
jz loc_42E72E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_42E721  +
pop ecx  +
jmp loc_42E61D  +
***
mov ecx [esp+arg_8] +
call sub_42FBAC  +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz locret_42E8AD  +
cmp [ecx+18h] eax +
setnle al  +
retn   +
***
pop edi  +
add eax 4 +
jz loc_42E90B  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_42E946  +
sub eax 1 +
jnz loc_42E8FD  +
pop ebx  +
retn   +
***
xor ch bl +
jz loc_42E951  +
shr ecx 10h +
xor cl bl +
jz loc_42E94B  +
xor ch bl +
jz loc_42E945  +
jmp loc_42E90D  +
***
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_42F87A  +
sub eax 1 +
jz loc_42F86C  +
sub eax 1 +
jz loc_42F852  +
sub eax 1 +
jz loc_42F826  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_42F7D3  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_42ECBB  +
mov eax [esi] +
cmp eax [edx] +
jz loc_42E9F8  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_42E9CC  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_42E9CC  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_42E9DC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42E9FA  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_42E9FA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42E9FA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_42EA59  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_42EA2D  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_42EA2D  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_42EA3D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EA5B  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_42EA5B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EA5B  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_42EABA  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_42EA8E  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_42EA8E  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_42EA9E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EABC  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_42EABC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EABC  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_42EB1B  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_42EAEF  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_42EAEF  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_42EAFF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EB1D  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_42EB1D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EB1D  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_42EB7D  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_42EB51  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_42EB51  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_42EB61  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EB7F  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_42EB7F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EB7F  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_42EBDE  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_42EBB2  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_42EBB2  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_42EBC2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EBE0  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_42EBE0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EBE0  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_42EC3F  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_42EC13  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_42EC13  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_42EC23  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EC41  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_42EC41  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EC41  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_42ECA0  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_42EC74  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_42EC74  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_42EC84  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42ECA2  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_42ECA2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42ECA2  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_42E9A4  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_42EF6F  +
jmp ds:off_42F881[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_42ED26  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_42ECFA  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_42ECFA  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_42ED0A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42ED28  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_42ED28  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42ED28  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_42ED87  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_42ED5B  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_42ED5B  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_42ED6B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42ED89  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_42ED89  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42ED89  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_42EDE8  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_42EDBC  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_42EDBC  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_42EDCC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EDEA  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_42EDEA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EDEA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_42EE49  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_42EE1D  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_42EE1D  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_42EE2D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EE4B  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_42EE4B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EE4B  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_42EEAB  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_42EE7F  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_42EE7F  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_42EE8F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EEAD  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_42EEAD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EEAD  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_42EF0C  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_42EEE0  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_42EEE0  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_42EEF0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EF0E  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_42EF0E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EF0E  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_42EF69  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_42EF3D  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_42EF3D  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_42EF4D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EF6B  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_42EF6B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EF6B  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_42F87C  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_42EFD0  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_42EFA4  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_42EFA4  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_42EFB4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EFD2  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_42EFD2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EFD2  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_42F02D  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_42F001  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_42F001  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_42F011  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F02F  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_42F02F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F02F  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_42F08E  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_42F062  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_42F062  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_42F072  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F090  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_42F090  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F090  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_42F0EF  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_42F0C3  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_42F0C3  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_42F0D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F0F1  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_42F0F1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F0F1  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_42F150  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_42F124  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_42F124  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_42F134  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F152  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_42F152  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F152  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_42F1B2  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_42F186  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_42F186  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_42F196  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F1B4  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_42F1B4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F1B4  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_42F213  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_42F1E7  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_42F1E7  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_42F1F7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F215  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_42F215  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F215  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_42EF71  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42EF71  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_42F297  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_42F26B  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_42F26B  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_42F27B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F299  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_42F299  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F299  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_42F2F8  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_42F2CC  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_42F2CC  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_42F2DC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F2FA  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_42F2FA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F2FA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_42F359  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_42F32D  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_42F32D  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_42F33D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F35B  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_42F35B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F35B  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_42F3BA  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_42F38E  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_42F38E  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_42F39E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F3BC  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_42F3BC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F3BC  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_42F41B  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_42F3EF  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_42F3EF  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_42F3FF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F41D  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_42F41D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F41D  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_42F47D  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_42F451  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_42F451  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_42F461  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F47F  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_42F47F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F47F  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_42F4DE  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_42F4B2  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_42F4B2  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_42F4C2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F4E0  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_42F4E0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F4E0  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_42EF6F  +
jmp loc_42F7B0  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_42F553  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_42F527  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_42F527  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_42F537  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F555  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_42F555  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F555  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_42F5B4  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_42F588  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_42F588  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_42F598  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F5B6  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_42F5B6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F5B6  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_42F615  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_42F5E9  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_42F5E9  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_42F5F9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F617  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_42F617  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F617  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_42F676  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_42F64A  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_42F64A  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_42F65A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F678  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_42F678  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F678  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_42F6D8  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_42F6AC  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_42F6AC  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_42F6BC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F6DA  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_42F6DA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F6DA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_42F739  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_42F70D  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_42F70D  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_42F71D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F73B  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_42F73B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F73B  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_42F79A  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_42F76E  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_42F76E  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_42F77E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F79C  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_42F79C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42F79C  +
xor ecx ecx +
test ecx ecx +
jnz loc_42EF71  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_42F7C0  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_42F21D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42EF71  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_42F7F8  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_42F7F8  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_42F808  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42F822  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_42F822  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_42F87C  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_42F842  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_42F848  +
xor ecx ecx +
test edx edx +
jmp loc_42F7FC  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_42F810  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_42F842  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_42F810  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_42F810  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_42F92F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_42C3AF  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_42C3AF  +
***
sub esp 1Ch +
call sub_430B77  +
cmp [ebp+arg_0] 0 +
jnz loc_42FAE0  +
call sub_42FC16  +
call sub_430BB3  +
mov al 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
call sub_42FB1A  +
cmp dwTlsIndex 0FFFFFFFFh +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
call sub_42D0A0  +
call sub_42D0A0  +
mov esp [ebp-18h] +
cmp [ebp+arg_18] 0 +
sub esp 68h +
sub esp 38h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
call sub_4309AC  +
pop ecx  +
call sub_42FB0C  +
mov ecx [ebp+arg_10] +
xor esi esi +
mov edx [ebp+arg_0] +
mov ebx 1FFFFFFFh +
mov edi 19930522h +
cmp [eax+20h] esi +
jnz loc_43044F  +
cmp dword ptr [edx] 0E06D7363h +
jz loc_43044F  +
cmp dword ptr [edx] 80000026h +
jz loc_43044F  +
mov eax [ecx] +
and eax ebx +
cmp eax edi +
jb loc_43044F  +
test byte ptr [ecx+20h] 1 +
jnz loc_4304FC  +
test byte ptr [edx+4] 66h +
jz loc_43047B  +
cmp [ecx+4] esi +
jz loc_4304FC  +
cmp [ebp+arg_14] esi +
jnz loc_4304FC  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call sub_430794  +
add esp 0Ch +
jmp loc_4304FC  +
cmp [ecx+0Ch] esi +
jnz loc_43049E  +
mov eax [ecx] +
and eax ebx +
cmp eax 19930521h +
jb loc_430490  +
cmp [ecx+1Ch] esi +
jnz loc_43049E  +
cmp eax edi +
jb loc_4304FC  +
mov eax [ecx+20h] +
shr eax 2 +
test al 1 +
jz loc_4304FC  +
cmp dword ptr [edx] 0E06D7363h +
jnz loc_4304E0  +
cmp dword ptr [edx+10h] 3 +
jb loc_4304E0  +
cmp [edx+14h] edi +
jbe loc_4304E0  +
mov eax [edx+1Ch] +
mov esi [eax+8] +
test esi esi +
jz loc_4304E0  +
movzx eax [ebp+arg_1C] +
push eax  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ecx  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call ds:off_4522C0  +
call esi  +
add esp 20h +
jmp loc_4304FF  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push dword ptr [ebp+arg_1C]  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call sub_42FE88  +
add esp 20h +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
and dword ptr [ecx+4] 0 +
call sub_42D0A0  +
mov eax [ebp-30h] +
mov ecx [ebp+0Ch] +
mov [ecx-4] eax +
push dword ptr [ebp-34h]  +
call sub_42D589  +
pop ecx  +
call sub_42FB0C  +
mov ecx [ebp-38h] +
mov [eax+10h] ecx +
call sub_42FB0C  +
mov ecx [ebp-3Ch] +
mov [eax+14h] ecx +
cmp dword ptr [edi] 0E06D7363h +
jnz locret_430706  +
cmp dword ptr [edi+10h] 3 +
jnz locret_430706  +
cmp dword ptr [edi+14h] 19930520h +
jz loc_4306DC  +
cmp dword ptr [edi+14h] 19930521h +
jz loc_4306DC  +
cmp dword ptr [edi+14h] 19930522h +
jnz locret_430706  +
cmp dword ptr [ebp-40h] 0 +
jnz locret_430706  +
test ebx ebx +
jz locret_430706  +
push dword ptr [edi+18h]  +
call sub_42D836  +
pop ecx  +
test eax eax +
jz locret_430706  +
cmp dword ptr [ebp-44h] 0 +
setnz al  +
movzx eax al +
push eax  +
push edi  +
call sub_42D730  +
pop ecx  +
pop ecx  +
retn   +
***
call sub_42CC49  +
push 0FFFFFFFFh  +
call sub_42D0A0  +
call sub_42FB0C  +
cmp dword ptr [eax+18h] 0 +
jle locret_43088D  +
call sub_42FB0C  +
dec dword ptr [eax+18h]  +
retn   +
***
sub esp 18h +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [eax+1Ch] +
pop ebp  +
retn   +
***
sub esp 4 +
mov eax ds:off_4522C0 +
mov eax ds:off_4522C0 +
cmp eax offset nullsub_1 +
jz loc_430A07  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_430A02  +
cmp eax [ecx+4] +
jbe loc_430A07  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_430AE5  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_42C3AF  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_430A10  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_430F7C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_430B59  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov edi offset stru_46FA3C +
test esi esi +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov esi [eax+4] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_430E79  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_430E81  +
push large dword ptr fs:0  +
mov eax dword_46E02C +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_430F38  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_430F0B  +
cmp esi [esp+18h+arg_4] +
jbe loc_430F38  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_430F36  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_430F7C  +
mov eax [ebx+esi*4+8] +
call sub_430F9B  +
jmp loc_430EEF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_430E81 +
jnz locret_430F6C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_430F6C  +
mov eax 1 +
retn   +
***
mov ebx offset unk_46E070 +
jmp loc_430F87  +
***
mov ebx offset unk_46E070 +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov byte ptr [edi+0Ch] 0 +
lea ebx [edi+4] +
test ecx ecx +
jz loc_430FBE  +
mov eax [ecx] +
mov [ebx] eax +
mov eax [ecx+4] +
jmp loc_430FD3  +
cmp dword_46FE40 0 +
jnz loc_430FD8  +
mov eax off_46E270 +
mov [ebx] eax +
mov eax off_46E274 +
mov [ebx+4] eax +
jmp loc_431019  +
push esi  +
call sub_43C8E9  +
mov [edi] eax +
lea esi [edi+8] +
push ebx  +
push eax  +
mov ecx [eax+4Ch] +
mov [ebx] ecx +
mov ecx [eax+48h] +
mov [esi] ecx +
call sub_43CB4A  +
push esi  +
push dword ptr [edi]  +
call sub_43CB77  +
mov ecx [edi] +
add esp 10h +
mov eax [ecx+350h] +
pop esi  +
test al 2 +
jnz loc_431019  +
or eax 2 +
mov [ecx+350h] eax +
mov byte ptr [edi+0Ch] 1 +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_4322FA  +
push [ebp+arg_0]  +
call sub_42D036  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_42E740  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_42E740  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_432401  +
test edi edi +
jnz loc_432401  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_432401  +
push [ebp+arg_0]  +
call sub_42D036  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_42C3AF  +
leave   +
retn   +
***
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_435186  +
test al al +
jz loc_4335FD  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4336A6  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_433693  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_4336A6  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_433389  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_4335ED  +
cmp eax 7 +
ja loc_4335FD  +
jmp ds:off_4336C1[eax*4]  +
mov ecx esi +
call sub_433AC3  +
jmp loc_43368B  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_433693  +
mov ecx esi +
call sub_433A49  +
jmp loc_43368B  +
mov ecx esi +
call sub_43479A  +
jmp loc_43368B  +
mov [esi+28h] ebx +
jmp loc_433693  +
mov ecx esi +
call sub_433C70  +
jmp loc_43368B  +
mov ecx esi +
call sub_433CBD  +
jmp loc_43368B  +
mov ecx esi +
call sub_4340D1  +
test al al +
jz loc_4335FD  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_43360E  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_433603  +
mov eax [esi+18h] +
jmp loc_433600  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_4321AB  +
test al al +
jz loc_433711  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4337C9  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4337A7  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_4337BA  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_4333C6  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_433701  +
cmp eax 7 +
ja loc_433711  +
jmp ds:off_4337E5[eax*4]  +
mov ecx esi +
call sub_433AE2  +
jmp loc_43379F  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4337A7  +
mov ecx esi +
call sub_433A49  +
jmp loc_43379F  +
mov ecx esi +
call sub_43479A  +
jmp loc_43379F  +
mov [esi+28h] ebx +
jmp loc_4337A7  +
mov ecx esi +
call sub_433C70  +
jmp loc_43379F  +
mov ecx esi +
call sub_433E0B  +
jmp loc_43379F  +
mov ecx esi +
call sub_434303  +
test al al +
jz loc_433711  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_433722  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_4351A7  +
test al al +
jz loc_433711  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_433717  +
mov eax [esi+18h] +
jmp loc_433714  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_4321AB  +
test al al +
jz loc_433835  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4338F2  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4338CC  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_4338E3  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_433406  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_433825  +
cmp eax 7 +
ja loc_433835  +
jmp ds:off_43390D[eax*4]  +
mov ecx esi +
call sub_433B01  +
jmp loc_4338C4  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4338CC  +
mov ecx esi +
call sub_433A86  +
jmp loc_4338C4  +
mov ecx esi +
call sub_4347C5  +
jmp loc_4338C4  +
mov [esi+28h] ebx +
jmp loc_4338CC  +
mov ecx esi +
call sub_433C96  +
jmp loc_4338C4  +
mov ecx esi +
call sub_433F59  +
jmp loc_4338C4  +
mov ecx esi +
call sub_434535  +
test al al +
jz loc_433835  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_433846  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_4351A7  +
test al al +
jz loc_433835  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_43383B  +
mov eax [esi+18h] +
jmp loc_433838  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_4321AB  +
test al al +
jz loc_43395D  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_433A0B  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4339F4  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_433A0B  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_433448  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_43394D  +
cmp eax 7 +
ja loc_43395D  +
jmp ds:off_433A29[eax*4]  +
mov ecx esi +
call sub_433B01  +
jmp loc_4339EC  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4339F4  +
mov ecx esi +
call sub_433A86  +
jmp loc_4339EC  +
mov ecx esi +
call sub_4347C5  +
jmp loc_4339EC  +
mov [esi+28h] ebx +
jmp loc_4339F4  +
mov ecx esi +
call sub_433C96  +
jmp loc_4339EC  +
mov ecx esi +
call sub_433F59  +
jmp loc_4339EC  +
mov ecx esi +
call sub_434535  +
test al al +
jz loc_43395D  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_43396E  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_433963  +
mov eax [esi+18h] +
jmp loc_433960  +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_433B20  +
call sub_433B5A  +
call sub_433B84  +
mov edi edi +
mov edi edi +
lea edx [ecx+18h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
mov al [ecx+31h] +
movzx edx word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_43481E  +
movzx eax ds:byte_434839[eax] +
jmp ds:off_434825[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
pop eax  +
pop ebp  +
retn   +
push 4  +
jmp loc_434813  +
push 8  +
jmp loc_434813  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ecx] +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax ecx +
mov [ebp+var_4] eax +
test ebx ebx +
jz loc_4355ED  +
mov eax [eax] +
push edi  +
mov edi [eax+4] +
cmp [eax+8] edi +
jnz loc_4355AA  +
cmp byte ptr [eax+0Ch] 0 +
mov eax [ebp+arg_8] +
jz loc_4355E5  +
jmp loc_4355DD  +
sub edi [eax+8] +
cmp edi ebx +
jb loc_4355B3  +
mov edi ebx +
push esi  +
lea esi [edi+edi] +
push esi  +
push [ebp+arg_0]  +
push dword ptr [eax]  +
call loc_42DC40  +
mov ecx [ebp+var_4] +
add esp 0Ch +
mov eax [ecx] +
add [eax] esi +
mov eax [ecx] +
pop esi  +
add [eax+8] edi +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 0 +
mov eax [ebp+arg_8] +
jz loc_4355E1  +
add [eax] ebx +
jmp loc_4355EC  +
cmp edi ebx +
jz loc_4355EA  +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_4355EC  +
add [eax] edi +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call sub_43CD12  +
pop ecx  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF4h +
add eax 0Ch +
pop ebp  +
retn   +
***
mov eax dword_46FA7C +
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_46E080 +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 20h +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
call sub_42D0A0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
test esi esi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43CA40  +
call sub_43CA40  +
test eax eax +
jnz loc_4364A6  +
mov eax offset unk_46E18C +
retn   +
add eax 10h +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_436959  +
xor eax eax +
jmp loc_4369C6  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_436973  +
call sub_436497  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_432481  +
mov eax esi +
jmp loc_4369C6  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_43698F  +
cmp [ebp+arg_4] esi +
jb loc_43698F  +
push esi  +
push edi  +
push eax  +
call loc_42DC40  +
add esp 0Ch +
xor eax eax +
jmp loc_4369C5  +
push [ebp+arg_4]  +
push 0  +
push eax  +
call sub_42E740  +
add esp 0Ch +
test edi edi +
jnz loc_4369AA  +
call sub_436497  +
push 16h  +
jmp loc_4369B6  +
cmp [ebp+arg_4] esi +
jnb loc_4369C2  +
call sub_436497  +
push 22h  +
pop esi  +
mov [eax] esi +
call sub_432481  +
mov eax esi +
jmp loc_4369C5  +
push 16h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_436BEB  +
pop ebp  +
retn   +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
sub eax 1 +
jz loc_436C0C  +
movzx esi word ptr [edx] +
test si si +
jz loc_436C0C  +
cmp si [ecx] +
jnz loc_436C0C  +
add edx 2 +
add ecx 2 +
jmp loc_436BF2  +
movzx eax word ptr [edx] +
movzx ecx word ptr [ecx] +
sub eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
call sub_436F3C  +
add esp 0Ch +
test eax eax +
jnz loc_436FF2  +
lea eax [esi-1] +
jmp loc_436FF9  +
mov eax esi +
jg loc_436FF9  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+0Ch] +
push ebx  +
movzx eax dx +
push esi  +
push edi  +
cmp eax 5Ah +
jbe loc_437578  +
cmp eax 6Eh +
ja loc_437310  +
jz loc_437303  +
cmp eax 65h +
jbe loc_4370ED  +
sub eax 67h +
jz loc_4370AF  +
sub eax 1 +
jnz loc_43703E  +
push 62h  +
pop edx  +
push edx  +
pop eax  +
jmp loc_437015  +
***
dec eax  +
sub eax 1 +
jz loc_437084  +
sub eax 3 +
jnz loc_4372BE  +
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
lea eax [ecx+1] +
push eax  +
call sub_437A14  +
add esp 14h +
jmp loc_4379E0  +
mov eax [ebp+10h] +
mov ecx [eax+1Ch] +
cmp ecx 16Dh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 3  +
jmp loc_437073  +
***
mov ecx [ebp+10h] +
mov edx [ecx+14h] +
lea eax [edx+76Ch] +
cmp eax 270Fh +
ja loc_4372AE  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx+18h]  +
push edx  +
call sub_436FD1  +
add esp 0Ch +
add eax 76Ch +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
push edx  +
jmp loc_437077  +
***
jz loc_4372D7  +
sub eax 61h +
jz loc_4372A3  +
sub eax 1 +
jz loc_43727B  +
sub eax 1 +
jz loc_437142  +
sub eax 1 +
jnz loc_4372BE  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
lea eax [ecx-1] +
cmp eax 1Eh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push ecx  +
jmp loc_437077  +
***
mov ebx [ebp+1Ch] +
mov eax [ebp+20h] +
cmp ebx offset off_457F50 +
jnz loc_437231  +
test al al +
jnz loc_437231  +
mov edi [ebp+18h] +
xor esi esi +
push esi  +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 61h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jnz loc_43718C  +
call sub_436497  +
mov dword ptr [eax] 16h +
jmp loc_4372BE  +
push edi  +
push ebx  +
push offset asc_462658  +
call sub_437B14  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 62h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_462658  +
call sub_437B14  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 65h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_462658  +
call sub_437B14  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 54h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_462658  +
call sub_437B14  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jnz loc_4379E0  +
jmp loc_43717C  +
***
push ebx  +
push dword ptr [ebp+18h]  +
movzx eax al +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_437B45  +
add esp 18h +
test al al +
jz loc_43717C  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_462658  +
call sub_437B14  +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push dword ptr [ebp+8]  +
call sub_437B45  +
add esp 24h +
jmp loc_437224  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_4372AE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0ECh]  +
call sub_437B14  +
add esp 0Ch +
jmp loc_4379E0  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
jbe loc_4372C5  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
xor al al +
jmp loc_4379E2  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0B4h]  +
jmp loc_437296  +
***
mov eax [ebp+10h] +
mov edx [eax+0Ch] +
lea eax [edx-1] +
cmp eax 1Eh +
ja loc_4372AE  +
mov cl [ebp+20h] +
xor cl 1 +
shl cl 5 +
movsx cx cl +
movzx ecx cx +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_4370EA  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_457480  +
jmp loc_437296  +
***
cmp eax 77h +
ja loc_43746C  +
jz loc_437335  +
sub eax 70h +
jz loc_43743B  +
dec eax  +
sub eax 1 +
jz loc_43737D  +
dec eax  +
sub eax 1 +
jz loc_43736D  +
sub eax 1 +
jnz loc_4372BE  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_4372AE  +
test ecx ecx +
jnz loc_437351  +
cmp dx 75h +
jnz loc_437351  +
push 7  +
pop ecx  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 1  +
jmp loc_43713C  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_457484  +
jmp loc_437296  +
***
mov esi [ebp+1Ch] +
push dword ptr [ebp+20h]  +
push esi  +
cmp esi offset off_457F50 +
jnz loc_437420  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 49h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_46513C  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_46513C  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 53h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push edi  +
push ebx  +
push offset asc_462658  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 70h  +
jmp loc_437219  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 58h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
jmp loc_437224  +
***
mov eax [ebp+10h] +
mov eax [eax+8] +
cmp eax 17h +
ja loc_4372AE  +
cmp eax 0Bh +
mov eax [ebp+1Ch] +
jg loc_43745A  +
mov eax [eax+14Ch] +
jmp loc_437460  +
mov eax [eax+150h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push eax  +
jmp loc_437296  +
***
sub eax 78h +
jz loc_437557  +
sub eax 1 +
jz loc_437524  +
sub eax 1 +
jnz loc_4372BE  +
call sub_440DB5  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call sub_44061B  +
pop ecx  +
test eax eax +
jnz loc_4372AE  +
mov eax [ebp+10h] +
cmp [eax+20h] esi +
jz loc_4374CB  +
lea eax [ebp-8] +
mov [ebp-8] esi +
push eax  +
call sub_4405EF  +
pop ecx  +
test eax eax +
jnz loc_4372AE  +
mov ecx [ebp-4] +
add ecx [ebp-8] +
mov [ebp-4] ecx +
jmp loc_4374CE  +
mov ecx [ebp-4] +
mov eax ecx +
cdq   +
xor eax edx +
sub eax edx +
cdq   +
push 3Ch  +
pop esi  +
idiv  esi +
cdq   +
idiv  esi +
test ecx ecx +
mov ecx offset asc_4665BC +
mov edi edx +
mov esi eax +
js loc_4374F0  +
mov ecx offset asc_463E8C +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push ecx  +
call sub_437B14  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
call sub_437A14  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push edi  +
call sub_437A14  +
add esp 34h +
jmp loc_4379E0  +
mov eax [ebp+10h] +
mov eax [eax+14h] +
add eax 76Ch +
cmp eax 270Fh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movzx ecx cl +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_4370E4  +
***
push dword ptr [ebp+1Ch]  +
movzx eax byte ptr [ebp+20h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_437B45  +
add esp 18h +
jmp loc_437224  +
***
jz loc_437975  +
cmp eax 4Dh +
ja loc_4377CA  +
jz loc_4377BC  +
cmp eax 44h +
ja loc_4376B6  +
jz loc_437649  +
sub eax 25h +
jz loc_437639  +
sub eax 1Ch +
jz loc_437615  +
sub eax 1 +
jz loc_4375F1  +
sub eax 1 +
jnz loc_4372BE  +
mov eax [ebp+10h] +
mov eax [eax+14h] +
add eax 76Ch +
cmp eax 270Fh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
cdq   +
setnz cl  +
dec cl  +
and cl 30h +
movzx ecx cl +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push 64h  +
pop ecx  +
idiv  ecx +
jmp loc_437076  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
cmp ecx 0Bh +
ja loc_4372AE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+11Ch]  +
jmp loc_437296  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_4372AE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0D0h]  +
jmp loc_437296  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_46265C  +
jmp loc_437296  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
mov ebx offset asc_4665B8 +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 79h  +
jmp loc_437219  +
***
sub eax 46h +
jz loc_43774F  +
sub eax 1 +
jz loc_437715  +
sub eax 1 +
jz loc_437701  +
sub eax 1 +
jnz loc_4372BE  +
mov eax [ebp+10h] +
mov eax [eax+8] +
cmp eax 17h +
ja loc_4372AE  +
push 0Ch  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_4376ED  +
mov edx ecx +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
jmp loc_4372F6  +
***
mov eax [ebp+10h] +
mov ecx [eax+8] +
cmp ecx 17h +
jbe loc_437125  +
jmp loc_4372AE  +
***
mov ecx [ebp+10h] +
mov edx [ecx+14h] +
lea eax [edx+76Ch] +
cmp eax 270Fh +
ja loc_4372AE  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx+18h]  +
push edx  +
call sub_436FD1  +
add esp 0Ch +
add eax 76Ch +
jmp loc_437076  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
mov ebx offset asc_463E8C +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
jmp loc_437219  +
***
mov eax [ebp+10h] +
mov ecx [eax+4] +
cmp ecx 3Bh +
jmp loc_43770A  +
***
push 7  +
sub eax 52h +
pop edi  +
cmp eax edi +
ja loc_4372BE  +
jmp ds:off_4379F4[eax*4]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jz loc_43717C  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_46513C  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Dh  +
jmp loc_437219  +
***
mov eax [ebp+10h] +
mov ecx [eax] +
cmp ecx 3Ch +
jmp loc_43770A  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 1Ch +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
mov ebx offset asc_46513C +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_436FFC  +
add esp 28h +
test al al +
jz loc_43717C  +
push esi  +
push edi  +
push ebx  +
call sub_437B14  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 53h  +
jmp loc_437219  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
cmp ecx 6 +
ja loc_4372AE  +
cmp dx 57h +
jnz loc_4378C2  +
test ecx ecx +
jnz loc_4378C1  +
push 6  +
pop ecx  +
jmp loc_4378C2  +
dec ecx  +
mov eax [eax+1Ch] +
cmp eax 16Dh +
ja loc_4372AE  +
xor esi esi +
cmp eax ecx +
jl loc_4378E0  +
cdq   +
idiv  edi +
mov esi eax +
cmp edx ecx +
jl loc_4378E0  +
inc esi  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movzx eax cl +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
jmp loc_437077  +
***
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+10h] +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_436EF3  +
add esp 0Ch +
jmp loc_437076  +
***
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
jmp loc_437568  +
***
mov eax [ebp+10h] +
mov eax [eax+14h] +
lea ecx [eax+76Ch] +
cmp ecx 270Fh +
ja loc_4372AE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
movzx eax al +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
jmp loc_43713C  +
***
call sub_440DB5  +
xor esi esi +
mov [ebp-8] esi +
call sub_4405BD  +
mov ecx [ebp+10h] +
push dword ptr [ebp+8]  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
mov ecx [ecx+20h] +
neg ecx  +
push 0FFFFFFFFh  +
sbb ecx ecx +
and ecx 4 +
mov eax [eax+ecx] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp-8] +
push dword ptr [ebx]  +
push eax  +
call sub_441009  +
add esp 18h +
test eax eax +
jz loc_4379BE  +
cmp eax 16h +
jz loc_4379E7  +
cmp eax 22h +
jz loc_4379E7  +
cmp eax 50h +
jnz loc_4379CD  +
mov eax [edi] +
add eax eax +
add [ebx] eax +
mov [edi] esi +
jmp loc_4379E0  +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
sub eax ecx +
add [edi] eax +
lea eax ds:0FFFFFFFEh[ecx*2] +
add [ebx] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_4324AE  +
lea ecx [ecx+0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
push [ebp+lpNewFileName]  +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_43854E  +
call ds:GetLastError  +
push eax  +
call sub_436461  +
pop ecx  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_438701  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset stru_46FAA0 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_43E681  +
push 4  +
call sub_438951  +
pop ecx  +
retn   +
***
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call sub_43C8E9  +
mov ecx [eax+4Ch] +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_43CB4A  +
mov eax [ebp+var_4] +
pop ecx  +
pop ecx  +
mov eax [eax+4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+var_34] esi +
mov edi ebx +
mov [ebp+var_1C] ebx +
mov ecx [esi+0A8h] +
mov [ebp+var_20] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_58] esi +
mov [ebp+var_54] ebx +
test ecx ecx +
jz loc_439113  +
lea eax [esi+8] +
mov [ebp+lpMem] ebx +
cmp [eax] ebx +
jnz loc_438D62  +
push eax  +
push 1004h  +
push ecx  +
lea eax [ebp+var_58] +
push ebx  +
push eax  +
call sub_442447  +
add esp 14h +
test eax eax +
jnz loc_4390E2  +
push 4  +
push 1  +
call sub_43EB5A  +
push ebx  +
mov [ebp+lpMem] eax +
call sub_43CCD8  +
push 2  +
mov edi 180h +
push edi  +
call sub_43EB5A  +
push ebx  +
mov [ebp+var_1C] eax +
call sub_43CCD8  +
push 1  +
push edi  +
call sub_43EB5A  +
mov edi eax +
push ebx  +
mov [ebp+var_28] edi +
call sub_43CCD8  +
push 1  +
push 180h  +
call sub_43EB5A  +
push ebx  +
mov [ebp+var_20] eax +
call sub_43CCD8  +
push 1  +
push 101h  +
call sub_43EB5A  +
push ebx  +
mov [ebp+var_24] eax +
call sub_43CCD8  +
add esp 3Ch +
cmp [ebp+lpMem] ebx +
jz loc_4390E2  +
cmp [ebp+var_1C] ebx +
jz loc_4390E2  +
mov ecx [ebp+var_24] +
test ecx ecx +
jz loc_4390E2  +
test edi edi +
jz loc_4390E2  +
cmp [ebp+var_20] ebx +
jz loc_4390E2  +
mov eax ebx +
mov [eax+ecx] al +
inc eax  +
cmp eax 100h +
jl loc_438DFA  +
lea eax [ebp+CPInfo] +
push eax  +
push dword ptr [esi+8]  +
call ds:GetCPInfo  +
test eax eax +
jz loc_4390E2  +
mov eax [ebp+CPInfo.MaxCharSize] +
cmp eax 5 +
ja loc_4390E2  +
movzx eax ax +
mov [ebp+var_38] eax +
cmp eax 1 +
jbe loc_438E85  +
cmp dword ptr [esi+8] 0FDE9h +
jnz loc_438E52  +
mov eax [ebp+var_24] +
push 80h  +
sub eax 0FFFFFF80h +
push 20h  +
push eax  +
call sub_42E740  +
add esp 0Ch +
jmp loc_438E85  +
lea edx [ebp+CPInfo.LeadByte] +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_438E85  +
mov ecx [ebp+var_24] +
mov al [edx+1] +
test al al +
jz loc_438E82  +
movzx esi byte ptr [edx] +
movzx eax al +
cmp esi eax +
ja loc_438E7B  +
mov byte ptr [esi+ecx] 20h +
inc esi  +
movzx eax byte ptr [edx+1] +
cmp esi eax +
jle loc_438E6E  +
add edx 2 +
cmp [edx] bl +
jnz loc_438E5D  +
mov esi [ebp+var_34] +
mov ecx [ebp+var_24] +
lea eax [edi+81h] +
push ebx  +
push dword ptr [esi+8]  +
mov edx 0FFh +
inc ecx  +
push edx  +
push eax  +
push edx  +
push ecx  +
push 100h  +
push dword ptr [esi+0A8h]  +
mov [ebp+lpMultiByteStr] ecx +
push ebx  +
call sub_43C562  +
add esp 24h +
test eax eax +
jz loc_4390E2  +
mov eax [ebp+var_20] +
mov ecx 0FFh +
push ebx  +
push dword ptr [esi+8]  +
add eax 81h +
push ecx  +
push eax  +
push ecx  +
push [ebp+lpMultiByteStr]  +
push 200h  +
push dword ptr [esi+0A8h]  +
push ebx  +
call sub_43C562  +
add esp 24h +
test eax eax +
jz loc_4390E2  +
mov eax [ebp+var_1C] +
push ebx  +
push dword ptr [esi+8]  +
add eax 100h +
push eax  +
push 100h  +
push [ebp+var_24]  +
mov [ebp+var_44] eax +
push 1  +
push ebx  +
call sub_4425F7  +
add esp 1Ch +
test eax eax +
jz loc_4390E2  +
mov eax [ebp+var_1C] +
xor edx edx +
cmp [ebp+var_38] 1 +
lea ecx [eax+0FEh] +
mov [ecx] dx +
mov edx [ebp+var_28] +
mov [ebp+var_48] ecx +
mov ecx [ebp+var_20] +
lea edi [edx+80h] +
mov [edx+7Fh] bl +
mov [ebp+var_4C] edi +
mov [ecx+7Fh] bl +
mov [edi] bl +
lea edi [ecx+80h] +
mov [ebp+var_50] edi +
mov [edi] bl +
jbe loc_439020  +
cmp dword ptr [esi+8] 0FDE9h +
jnz loc_438FB6  +
add eax 200h +
mov edi ecx +
mov [ebp+var_28] eax +
lea ecx [edx+100h] +
push 0FFFFFF80h  +
mov esi 0FFFFFEBEh +
sub edi edx +
pop eax  +
sub esi edx +
sub eax edx +
mov [ebp+lpMultiByteStr] eax +
lea eax [esi+ecx] +
push 32h  +
pop ebx  +
cmp ebx eax +
mov ebx [ebp+var_28] +
sbb eax eax +
add [ebp+var_28] 2 +
and eax 0FFFF8000h +
add eax 8000h +
mov [ebx] ax +
mov ebx [ebp+lpMultiByteStr] +
lea eax [ecx+ebx] +
mov [ecx] al +
mov [edi+ecx] al +
inc ecx  +
lea eax [ebx+ecx] +
cmp eax 0FFh +
jle loc_438F80  +
jmp loc_43901E  +
lea edi [ebp+CPInfo.LeadByte] +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_439020  +
mov ebx [ebp+var_1C] +
mov al [edi+1] +
test al al +
jz loc_43901E  +
movzx esi byte ptr [edi] +
movzx eax al +
mov [ebp+var_3C] esi +
cmp esi eax +
ja loc_439016  +
sub ebx 0FFFFFF00h +
mov [ebp+lpMultiByteStr] edx +
lea eax [ecx+80h] +
add eax esi +
sub edx ecx +
mov ecx [ebp+var_3C] +
lea esi [ebx+esi*2] +
mov [ebp+var_40] eax +
mov ebx eax +
mov eax 8000h +
mov [esi] ax +
lea esi [esi+2] +
mov [edx+ebx] cl +
mov [ebx] cl +
inc ecx  +
movzx eax byte ptr [edi+1] +
inc ebx  +
cmp ecx eax +
jle loc_438FF3  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_20] +
mov ebx [ebp+var_1C] +
add edi 2 +
cmp byte ptr [edi] 0 +
jnz loc_438FC1  +
xor ebx ebx +
mov eax [ebp+var_1C] +
mov edi eax +
push 3Fh  +
pop ecx  +
push 1Fh  +
lea esi [eax+200h] +
mov eax [ebp+var_20] +
movs   +
pop ecx  +
push 1Fh  +
movs   +
lea esi [edx+100h] +
mov edi edx +
movs   +
pop ecx  +
movs   +
movs   +
lea esi [eax+100h] +
mov edi eax +
movs   +
movs   +
movs   +
mov esi [ebp+var_34] +
mov ecx [esi+8Ch] +
test ecx ecx +
jz loc_4390AB  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
jnz loc_4390AB  +
mov eax [esi+90h] +
sub eax 0FEh +
push eax  +
call sub_43CCD8  +
mov eax [esi+94h] +
mov edi 80h +
sub eax edi +
push eax  +
call sub_43CCD8  +
mov eax [esi+98h] +
sub eax edi +
push eax  +
call sub_43CCD8  +
push dword ptr [esi+8Ch]  +
call sub_43CCD8  +
add esp 10h +
mov eax [ebp+lpMem] +
mov dword ptr [eax] 1 +
mov [esi+8Ch] eax +
mov eax [ebp+var_44] +
mov [esi] eax +
mov eax [ebp+var_48] +
mov [esi+90h] eax +
mov eax [ebp+var_4C] +
mov [esi+94h] eax +
mov eax [ebp+var_50] +
mov [esi+98h] eax +
mov eax [ebp+var_38] +
mov [esi+4] eax +
jmp loc_439106  +
push [ebp+lpMem]  +
call sub_43CCD8  +
push [ebp+var_1C]  +
call sub_43CCD8  +
push edi  +
call sub_43CCD8  +
push [ebp+var_20]  +
call sub_43CCD8  +
xor ebx ebx +
add esp 10h +
inc ebx  +
push [ebp+var_24]  +
call sub_43CCD8  +
pop ecx  +
mov eax ebx +
jmp loc_43914F  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_439120  +
dec dword ptr [eax]  +
mov [esi+8Ch] ebx +
xor eax eax +
mov [esi+90h] ebx +
mov dword ptr [esi] offset asc_457588 +
mov dword ptr [esi+94h] offset unk_457808 +
mov dword ptr [esi+98h] offset unk_457988 +
mov dword ptr [esi+4] 1 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
leave   +
retn   +
***
jmp loc_442710  +
***
lea edx [esp+arg_8] +
mov ecx eax +
fld  st +
call sub_443AED  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx] al +
jz loc_439407  +
cmp eax [ebp+arg_4] +
jz loc_439407  +
inc eax  +
cmp byte ptr [eax+ecx] 0 +
jnz loc_4393FB  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_46F9C8 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_439494  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_439436  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_439449  +
cmp byte ptr [eax] 0 +
jz loc_439449  +
inc eax  +
cmp eax ecx +
jnz loc_43943F  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_439525  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFE0h +
add edi eax +
cmp eax 1 +
jl loc_43950B  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_4394B5  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_4394C8  +
cmp byte ptr [eax] 0 +
jz loc_4394C8  +
inc eax  +
cmp eax ecx +
jnz loc_4394BE  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_439525  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFF0h +
xorps xmm1 xmm1 +
add edi eax +
cmp eax edi +
jz loc_4394F6  +
movups xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4394F6  +
add ecx 10h +
cmp ecx edi +
jnz loc_4394E0  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_439503  +
cmp byte ptr [ecx] 0 +
jz loc_439507  +
inc ecx  +
cmp ecx eax +
jnz loc_4394FD  +
sub ecx esi +
jmp loc_439525  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_439523  +
cmp byte ptr [ecx] 0 +
jz loc_439523  +
inc ecx  +
cmp ecx eax +
jnz loc_439519  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_46F9C8 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4395F7  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_439569  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_439584  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_43959C  +
cmp [ecx] ax +
jz loc_43959C  +
add ecx 2 +
cmp ecx edi +
jnz loc_439590  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_4396D5  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
leave   +
lea ecx [esi+eax*2] +
jmp loc_4395CD  +
cmp edi ecx +
jnz near ptr word_4395BE  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_4395E9  +
xor eax eax +
cmp [edi] ax +
jz loc_4395E9  +
add edi 2 +
cmp edi ecx +
jnz loc_4395DD  +
mov ecx edi +
sub ecx esi +
sar ecx 1 +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_439562  +
xor eax eax +
cmp [ecx] ax +
jz loc_439562  +
add ecx 2 +
cmp ecx edx +
jnz loc_43961A  +
jmp loc_439562  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_439691  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_439695  +
add edi 10h +
cmp edi ecx +
jnz loc_43967F  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_4396AD  +
xor eax eax +
cmp [edi] ax +
jz loc_4396AD  +
add edi 2 +
cmp edi ecx +
jnz loc_4396A1  +
mov ecx edi +
jmp loc_439562  +
***
mov edi edi +
mov edi edi +
retn   +
***
mov edi edi +
mov eax dword_46E02C +
mov ecx eax +
xor eax dword_46FBF8 +
and ecx 1Fh +
ror eax cl +
test eax eax +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov dword_46FBF8 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_4398B5  +
pop ecx  +
mov dword_46FBF8 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_46FE0C +
mov eax dword_46FE10 +
cmp dword_46FE0C 0 +
cmp dword_46FE10 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi dword_46FE0C +
test edi edi +
jz loc_43A063  +
mov eax [edi] +
test eax eax +
jz loc_43A058  +
xor ebx ebx +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
push ebx  +
call sub_43DE18  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jz loc_43A063  +
push 2  +
push ebx  +
call sub_43EB5A  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_43A05C  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
xor ebx ebx +
push ebx  +
push ebx  +
call sub_43DE18  +
add esp 18h +
test eax eax +
jz loc_43A05C  +
push ebx  +
push esi  +
call sub_4452A4  +
push ebx  +
call sub_43CCD8  +
add edi 4 +
add esp 0Ch +
mov eax [edi] +
test eax eax +
jnz loc_43A004  +
xor eax eax +
jmp loc_43A066  +
push esi  +
call sub_43CCD8  +
pop ecx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_43A089  +
mov ecx [ebp+8] +
push esi  +
call ds:off_4522C0  +
call dword ptr [ebp+8]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_43A078  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_46FE18 +
jz loc_43A0B9  +
push eax  +
call sub_439F3B  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax dword_46FE14 +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_43A3CA  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_43A3C9  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz locret_43A3D9  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
leave   +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_43A47B  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
push 16h  +
pop eax  +
pop ebp  +
retn   +
mov eax dword_470258 +
nop   +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
***
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
push 16h  +
pop eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi eax +
and eax 3Fh +
sar edi 6 +
imul edx eax +
mov esi dword_46FE80[edi*4] +
mov al [esi+edx+28h] +
mov bl [esi+edx+29h] +
movzx ecx al +
and ecx 80h +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_4] +
cmp ecx 4000h +
jz loc_43A551  +
cmp ecx 8000h +
jz loc_43A549  +
cmp ecx 10000h +
jz loc_43A535  +
cmp ecx 20000h +
jz loc_43A535  +
cmp ecx 40000h +
jnz loc_43A563  +
or al 80h +
mov [esi+edx+28h] al +
mov eax dword_46FE80[edi*4] +
mov byte ptr [eax+edx+29h] 1 +
jmp loc_43A563  +
or al 80h +
mov [esi+edx+28h] al +
mov eax dword_46FE80[edi*4] +
mov byte ptr [eax+edx+29h] 2 +
jmp loc_43A563  +
and al 7Fh +
mov [esi+edx+28h] al +
jmp loc_43A563  +
or al 80h +
mov [esi+edx+28h] al +
mov ecx dword_46FE80[edi*4] +
mov byte ptr [ecx+edx+29h] 0 +
cmp [ebp+var_4] 0 +
jnz loc_43A570  +
mov eax 8000h +
jmp loc_43A58E  +
test bl bl +
jnz loc_43A57B  +
mov eax 4000h +
jmp loc_43A58E  +
xor eax eax +
cmp bl 1 +
setnz al  +
dec eax  +
and eax 30000h +
add eax 10000h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call ds:GetCommandLineA  +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
cmp byte ptr [ecx+0Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov ecx offset dword_46FE40 +
inc eax  +
xchg eax [ecx] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_46FE44 +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_43BD41  +
cmp eax 1 +
jz loc_43BD41  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
mov ecx offset dword_46FE44 +
xchg eax [ecx] +
pop ebp  +
retn   +
***
mov eax offset dword_46FE48 +
retn   +
***
mov edi edi +
call sub_42D0A0  +
pop ecx  +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_46FE68 offset off_46E1B8 +
mov al 1 +
retn   +
***
mov [esp+4+var_4] offset unk_46FE5C +
call sub_43C0E4  +
pop ecx  +
mov al 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_47024C  +
lea ecx [ebp-1] +
call sub_43C230  +
mov al 1 +
leave   +
retn   +
***
mov edi edi +
call sub_4475AA  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
and ecx 0FFF7FFFFh +
and eax ecx +
push esi  +
mov esi [ebp+arg_0] +
test eax 0FCF0FCE0h +
jz loc_43C2E2  +
test esi esi +
jz loc_43C2CF  +
push 0  +
push 0  +
call sub_4477C8  +
pop ecx  +
pop ecx  +
mov [esi] eax +
call sub_436497  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_432481  +
mov eax esi +
jmp loc_43C2FC  +
push ecx  +
push [ebp+arg_4]  +
test esi esi +
jz loc_43C2F3  +
call sub_4477C8  +
mov [esi] eax +
jmp loc_43C2F8  +
call sub_4477C8  +
pop ecx  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_43C366  +
inc edx  +
sub ebx 1 +
jbe loc_43C366  +
test dl 3 +
jnz loc_43C320  +
lea eax [ecx+edx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_43C320  +
mov eax [ecx+edx] +
cmp eax [edx] +
jnz loc_43C320  +
sub ebx 4 +
jbe loc_43C366  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_43C337  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_46E1B0 +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
mov eax dword_46E1B0 +
cmp eax 0FFFFFFFFh +
jz loc_43CA73  +
push eax  +
call sub_43E34F  +
mov edi eax +
test edi edi +
jz loc_43CA6E  +
cmp edi 0FFFFFFFFh +
jnz loc_43CAE0  +
xor ebx ebx +
mov edi ebx +
jmp loc_43CAE2  +
mov eax dword_46E1B0 +
push 0FFFFFFFFh  +
push eax  +
call sub_43E38E  +
test eax eax +
jz loc_43CA68  +
push 364h  +
push 1  +
call sub_43EB5A  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_43CAAA  +
xor ebx ebx +
push ebx  +
push dword_46E1B0  +
call sub_43E38E  +
push ebx  +
call sub_43CCD8  +
pop ecx  +
jmp loc_43CA6A  +
push edi  +
push dword_46E1B0  +
call sub_43E38E  +
test eax eax +
jnz loc_43CACB  +
xor ebx ebx +
push ebx  +
push dword_46E1B0  +
call sub_43E38E  +
push edi  +
jmp loc_43CAA2  +
push offset dword_46FE68  +
push edi  +
call sub_43C717  +
push 0  +
call sub_43CCD8  +
add esp 0Ch +
mov ebx edi +
push esi  +
call ds:SetLastError  +
neg edi  +
sbb edi edi +
and edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov dword_46E1B0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_43CB17  +
xor al al +
retn   +
call sub_43CA40  +
test eax eax +
jnz loc_43CB29  +
push eax  +
call sub_43CB30  +
pop ecx  +
jmp loc_43CB14  +
mov al 1 +
retn   +
***
mov eax dword_46E1B0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_46E02C +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_43DB0A  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
nop   +
shr eax 9 +
test al 1 +
jz loc_43DB08  +
push esi  +
call sub_43EE3F  +
pop ecx  +
mov eax 0FFFFFD7Fh +
and [edi] eax +
xor eax eax +
mov [esi+18h] eax +
mov [esi+4] eax +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_43DBB2  +
cmp ecx 0FFFFFFFEh +
jz loc_43DBB2  +
mov dl [edi+ebx+4] +
test dl 1 +
jz loc_43DBB2  +
test dl 8 +
jnz loc_43DB8C  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_43DBAF  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_46FE80[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [edi+ebx+4] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_43DB67  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_46FE80[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_43DBEF  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_43DBEF  +
or byte ptr [esi+28h] 80h +
jmp loc_43DC68  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_43DC0A  +
sub eax 1 +
jz loc_43DC06  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_43DC0C  +
push 0FFFFFFF5h  +
jmp loc_43DC0C  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_43DC28  +
test ebx ebx +
jz loc_43DC28  +
push ebx  +
call ds:GetFileType  +
jmp loc_43DC2A  +
xor eax eax +
test eax eax +
jz loc_43DC4A  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_43DC3F  +
or byte ptr [esi+28h] 40h +
jmp loc_43DC68  +
cmp eax 3 +
jnz loc_43DC68  +
or byte ptr [esi+28h] 8 +
jmp loc_43DC68  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_46FA80 +
test eax eax +
jz loc_43DC68  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_43DBC9  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+CodePage] +
mov ecx 0C435h +
cmp eax ecx +
ja loc_43DE51  +
jz loc_43DE90  +
cmp eax 2Ah +
jz loc_43DE90  +
cmp eax 0C42Bh +
jbe loc_43DE4C  +
cmp eax 0C42Eh +
jbe loc_43DE90  +
cmp eax 0C431h +
jz loc_43DE90  +
cmp eax 0C433h +
jz loc_43DE90  +
mov ecx [ebp+arg_4] +
jmp loc_43DE7A  +
cmp eax 0D698h +
jz loc_43DE74  +
cmp eax 0DEA9h +
jbe loc_43DE4C  +
cmp eax 0DEB3h +
jbe loc_43DE90  +
cmp eax 0FDE8h +
jz loc_43DE90  +
cmp eax 0FDE9h +
jnz loc_43DE4C  +
mov ecx [ebp+arg_4] +
and ecx 8 +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push ecx  +
push eax  +
call ds:MultiByteToWideChar  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_43DE7A  +
***
mov edi edi +
call sub_42D0A0  +
mov ecx [ebp+10h] +
push dword ptr [ecx]  +
call sub_4389A1  +
pop ecx  +
retn   +
***
push offset aArefileapisans  +
push offset aComparestringe  +
push offset aEnumsystemloca  +
push offset aGetdateformate  +
push offset aGetlocaleinfoe  +
push offset aGettimeformate  +
push 0Eh  +
call sub_43E13E  +
add esp 10h +
retn   +
***
push offset aGetuserdefault  +
push offset aIsvalidlocalen  +
push offset aLcidtolocalena  +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43DF72  +
call sub_43DF58  +
call sub_43DF72  +
call sub_43DF8C  +
call sub_43DFA6  +
call sub_43DFC0  +
call sub_43DFDA  +
call sub_43DFF5  +
call sub_43E00F  +
call sub_43E043  +
call sub_43E029  +
jmp sub_43E05D  +
***
mov ecx offset dword_470160 +
mov eax offset unk_4700D8 +
xor edx edx +
cmp ecx eax +
push esi  +
mov esi dword_46E02C +
sbb ecx ecx +
and ecx 0FFFFFFDEh +
add ecx 22h +
inc edx  +
mov [eax] esi +
lea eax [eax+4] +
cmp edx ecx +
jnz loc_43E6DD  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 38h  +
push 40h  +
call sub_43EB5A  +
mov esi eax +
xor ebx ebx +
mov [ebp+var_8] esi +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_43E749  +
mov esi ebx +
jmp loc_43E794  +
lea eax [esi+0E00h] +
cmp esi eax +
jz loc_43E794  +
push edi  +
lea edi [esi+20h] +
mov esi eax +
push ebx  +
push 0FA0h  +
lea eax [edi-20h] +
push eax  +
call sub_43E526  +
or dword ptr [edi-8] 0FFFFFFFFh +
mov [edi] ebx +
lea edi [edi+38h] +
mov [edi-34h] ebx +
lea eax [edi-20h] +
mov dword ptr [edi-30h] 0A0A0000h +
mov byte ptr [edi-2Ch] 0Ah +
and byte ptr [edi-2Bh] 0F8h +
mov [edi-2Ah] ebx +
mov [edi-26h] bl +
cmp eax esi +
jnz loc_43E759  +
mov esi [ebp+var_8] +
pop edi  +
push ebx  +
call sub_43CCD8  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43EB73  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  esi +
cmp eax [ebp+arg_4] +
jb loc_43EBA7  +
imul esi [ebp+arg_4] +
test esi esi +
jnz loc_43EB92  +
inc esi  +
jmp loc_43EB92  +
call sub_43BD14  +
test eax eax +
jz loc_43EBA7  +
push esi  +
call sub_43BD5F  +
pop ecx  +
test eax eax +
jz loc_43EBA7  +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_43EB7E  +
jmp loc_43EBB4  +
call sub_436497  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_46FA80 +
mov eax [eax+esi*4] +
test eax eax +
jz loc_43EC37  +
mov eax [eax+0Ch] +
nop   +
shr eax 0Dh +
test al 1 +
jz loc_43EC0E  +
mov eax dword_46FA80 +
push dword ptr [eax+esi*4]  +
call sub_436121  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_43EC0E  +
inc dword ptr [ebp-1Ch]  +
mov eax dword_46FA80 +
mov eax [eax+esi*4] +
add eax 20h +
push eax  +
call ds:DeleteCriticalSection  +
mov eax dword_46FA80 +
push dword ptr [eax+esi*4]  +
call sub_43CCD8  +
pop ecx  +
mov eax dword_46FA80 +
and dword ptr [eax+esi*4] 0 +
inc esi  +
jmp loc_43EBD6  +
***
pop ecx  +
call sub_42D0A0  +
mov eax [ebp+10h] +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_43A0DB  +
mov edi eax +
test edi edi +
jz loc_43EF95  +
cmp [ebp+arg_0] 0 +
jz loc_43EF95  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_43EF54  +
sub esi ecx +
jmp loc_43EF8F  +
mov edx ecx +
lea eax [edx+1] +
mov [ebp+var_4] eax +
mov al [edx] +
inc edx  +
test al al +
jnz loc_43EF67  +
sub edx [ebp+var_4] +
cmp edx esi +
jbe loc_43EF8C  +
cmp byte ptr [ecx+esi] 3Dh +
jnz loc_43EF8C  +
push esi  +
push [ebp+arg_0]  +
push ecx  +
call sub_44A24C  +
add esp 0Ch +
test eax eax +
jz loc_43EF9B  +
add edi 4 +
mov ecx [edi] +
test ecx ecx +
jnz loc_43EF5F  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_43EF97  +
***
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test eax 200h +
jnz loc_43F5DB  +
xor al al +
pop ebp  +
retn   +
or eax 400h +
mov [ecx] eax +
mov al 1 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_43F5E6  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx dword_46FA7C +
push esi  +
push edi  +
mov edi dword_46FA80 +
add edi 0Ch +
add ebx 0FFFFFFFDh +
lea ebx [edi+ebx*4] +
mov [ebp+var_4] ebx +
jmp loc_440283  +
mov esi [edi] +
test esi esi +
jz loc_440299  +
mov eax [esi+0Ch] +
nop   +
shr eax 0Dh +
test al 1 +
jnz loc_440280  +
push esi  +
call sub_435A8C  +
pop ecx  +
lea edx [esi+0Ch] +
mov ebx 2000h +
mov eax [edx] +
mov ecx eax +
or ecx ebx +
cmpxchg [edx] ecx +
jnz loc_440263  +
mov ebx [ebp+var_4] +
shr eax 0Dh +
not al  +
test al 1 +
jnz loc_440292  +
push esi  +
call sub_435AA0  +
pop ecx  +
add edi 4 +
cmp edi ebx +
jnz loc_440241  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [ebp+arg_0] +
mov [eax] esi +
jmp loc_44028D  +
push 38h  +
push 1  +
call sub_43EB5A  +
push 0  +
mov [edi] eax +
call sub_43CCD8  +
mov eax [edi] +
add esp 0Ch +
test eax eax +
jz loc_440287  +
or dword ptr [eax+10h] 0FFFFFFFFh +
mov eax [edi] +
push 0  +
push 0FA0h  +
add eax 20h +
push eax  +
call sub_43E526  +
mov esi [edi] +
mov ecx 2000h +
lea eax [esi+0Ch] +
or [eax] ecx +
push esi  +
call sub_435A8C  +
pop ecx  +
jmp loc_440292  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4402E0  +
***
jmp loc_4403C3  +
and ebx 3 +
jz loc_4403D6  +
mov al [esi] +
add esi 1 +
mov [edi] al +
add edi 1 +
test al al +
jz loc_440408  +
sub ebx 1 +
jnz loc_4403C3  +
mov eax [esp+10h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [edi] al +
add edi 1 +
sub ebx 1 +
jnz loc_440403  +
pop ebx  +
pop esi  +
mov eax [esp+8] +
pop edi  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov cx word ptr [ebp+arg_0+6] +
mov edx 7FF0h +
mov ax cx +
and ax dx +
cmp ax dx +
jnz loc_44051E  +
fld  qword ptr [ebp+8] +
push ecx  +
push ecx  +
fstp  [esp+8+var_8] +
call sub_43FFF8  +
pop ecx  +
pop ecx  +
sub eax 1 +
jz loc_440517  +
sub eax 1 +
jz loc_440512  +
sub eax 1 +
jz loc_44050E  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_440514  +
push 4  +
pop eax  +
pop ebp  +
retn   +
mov eax 200h +
pop ebp  +
retn   +
movzx ecx cx +
and ecx 8000h +
test ax ax +
jnz loc_44054A  +
test dword ptr [ebp+0Ch] 0FFFFFh +
jnz loc_44053B  +
cmp dword ptr [ebp+arg_0] 0 +
jz loc_44054A  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF90h +
lea eax [ecx+80h] +
pop ebp  +
retn   +
fld  [ebp+arg_0] +
fldz   +
fucompp   +
fnstsw  ax +
test ah 44h +
jp loc_440564  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFE0h +
lea eax [ecx+40h] +
pop ebp  +
retn   +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF08h +
lea eax [ecx+100h] +
pop ebp  +
retn   +
***
mov dword_470164 7080h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
call sub_42D0A0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
cmp ebx 0FFFFFFFEh +
jnz loc_44174B  +
call sub_436484  +
and dword ptr [eax] 0 +
call sub_436497  +
mov dword ptr [eax] 9 +
jmp loc_441ACA  +
test ebx ebx +
js loc_441AB2  +
cmp ebx dword_470080 +
jnb loc_441AB2  +
mov eax ebx +
mov ecx ebx +
sar ecx 6 +
and eax 3Fh +
imul edi eax +
mov [ebp+var_8] ecx +
mov eax dword_46FE80[ecx*4] +
xor ecx ecx +
inc ecx  +
mov [ebp+var_10] edi +
mov [ebp+var_20] ecx +
mov dl [eax+edi+28h] +
test dl cl +
jz loc_441AB2  +
mov ecx [ebp+arg_8] +
cmp ecx 7FFFFFFFh +
jbe loc_4417AE  +
call sub_436484  +
and dword ptr [eax] 0 +
call sub_436497  +
mov dword ptr [eax] 16h +
jmp loc_441AC5  +
test ecx ecx +
jz loc_441AAE  +
test dl 2 +
jnz loc_441AAE  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_441796  +
mov edx [eax+edi+18h] +
mov [ebp+hFile] edx +
mov dl [eax+edi+29h] +
mov [ebp+var_1] dl +
push esi  +
movsx edx dl +
xor esi esi +
sub edx 1 +
jz loc_44182D  +
sub edx 1 +
jz loc_4417F1  +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
jmp loc_4418B1  +
mov eax ecx +
not eax  +
test al 1 +
jnz loc_441815  +
call sub_436484  +
and [eax] esi +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
jmp loc_4419E5  +
mov edi [ebp+var_8] +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
mov eax dword_46FE80[edi*4] +
jmp loc_4418B1  +
mov eax ecx +
not eax  +
test al 1 +
jz loc_4417F9  +
push 4  +
pop eax  +
shr ecx 1 +
mov [ebp+nNumberOfBytesToRead] eax +
cmp ecx eax +
jb loc_441846  +
mov eax ecx +
mov [ebp+nNumberOfBytesToRead] ecx +
push eax  +
call sub_43CD12  +
push 0  +
mov esi eax +
call sub_43CCD8  +
push 0  +
call sub_43CCD8  +
add esp 0Ch +
mov [ebp+lpBuffer] esi +
test esi esi +
jnz loc_441881  +
call sub_436497  +
mov dword ptr [eax] 0Ch +
call sub_436484  +
mov dword ptr [eax] 8 +
jmp loc_4419E5  +
push 1  +
push 0  +
push 0  +
push ebx  +
call sub_441FD9  +
mov ecx [ebp+var_8] +
add esp 10h +
mov ecx dword_46FE80[ecx*4] +
mov [edi+ecx+20h] eax +
mov eax [ebp+var_8] +
mov [edi+ecx+24h] edx +
mov edx esi +
mov ecx [ebp+nNumberOfBytesToRead] +
mov eax dword_46FE80[eax*4] +
mov ebx [ebp+var_10] +
xor edi edi +
mov [ebp+var_24] edx +
test byte ptr [ebx+eax+28h] 48h +
mov ebx [ebp+arg_0] +
jz loc_441986  +
mov ebx [ebp+var_10] +
mov al [ebx+eax+2Ah] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_441986  +
test ecx ecx +
jz loc_441986  +
mov ebx [ebp+var_10] +
inc edi  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 0 +
mov [ebp+lpBuffer] edx +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_46FE80[eax*4] +
mov byte ptr [ebx+eax+2Ah] 0Ah +
mov ebx [ebp+arg_0] +
jz loc_441986  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_46FE80[eax*4] +
mov al [ebx+eax+2Bh] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_441986  +
test ecx ecx +
jz loc_441986  +
mov ebx [ebp+var_10] +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 1 +
push 2  +
mov [ebp+lpBuffer] edx +
mov eax dword_46FE80[eax*4] +
pop edi  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov byte ptr [ebx+eax+2Bh] 0Ah +
mov ebx [ebp+arg_0] +
jnz loc_441986  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_46FE80[eax*4] +
mov al [ebx+eax+2Ch] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_441986  +
test ecx ecx +
jz loc_441986  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov ecx [ebp+var_10] +
push 3  +
mov eax dword_46FE80[eax*4] +
mov [ebp+lpBuffer] edx +
pop edi  +
mov byte ptr [ecx+eax+2Ch] 0Ah +
push ebx  +
call sub_449437  +
pop ecx  +
test eax eax +
jz loc_441A02  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_10] +
mov eax dword_46FE80[eax*4] +
cmp byte ptr [ecx+eax+28h] 0 +
jge loc_441A02  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hFile]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_441A02  +
cmp [ebp+var_1] 2 +
jnz loc_441A06  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
shr eax 1 +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadConsoleW  +
test eax eax +
jnz loc_4419F7  +
call ds:GetLastError  +
push eax  +
call sub_436461  +
pop ecx  +
or edi 0FFFFFFFFh +
push esi  +
call sub_43CCD8  +
pop ecx  +
mov eax edi +
pop esi  +
jmp loc_441ACD  +
mov eax [ebp+NumberOfBytesRead] +
mov ecx [ebp+arg_8] +
lea edi [edi+eax*2] +
jmp loc_441A2B  +
mov byte ptr [ebp+var_20] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_441A7A  +
mov ecx [ebp+arg_8] +
cmp [ebp+NumberOfBytesRead] ecx +
ja loc_441A7A  +
add edi [ebp+NumberOfBytesRead] +
mov eax [ebp+var_8] +
mov edx [ebp+var_10] +
mov eax dword_46FE80[eax*4] +
cmp byte ptr [edx+eax+28h] 0 +
jge loc_4419E8  +
cmp [ebp+var_1] 2 +
jz loc_441A5C  +
shr ecx 1 +
push ecx  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_44143B  +
add esp 14h +
mov edi eax +
jmp loc_4419E8  +
shr edi 1 +
cmp byte ptr [ebp+var_20] 0 +
push edi  +
push [ebp+var_24]  +
push ebx  +
jz loc_441A73  +
call sub_441592  +
add esp 0Ch +
jmp loc_441A58  +
call sub_44126A  +
jmp loc_441A6E  +
call ds:GetLastError  +
push 5  +
pop edi  +
cmp eax edi +
jnz loc_441A9E  +
call sub_436497  +
mov dword ptr [eax] 9 +
call sub_436484  +
mov [eax] edi +
jmp loc_4419E5  +
cmp eax 6Dh +
jnz loc_4419DE  +
xor edi edi +
jmp loc_4419E8  +
xor eax eax +
jmp loc_441ACD  +
call sub_436484  +
and dword ptr [eax] 0 +
call sub_436497  +
mov dword ptr [eax] 9 +
call sub_432481  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jnz loc_441AF6  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
jmp loc_441C58  +
mov eax [eax+0Ch] +
push ebx  +
nop   +
xor ebx ebx +
shr eax 0Dh +
inc ebx  +
test al bl +
jz loc_441C54  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 0Ch +
test al bl +
jnz loc_441C54  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 1 +
test al bl +
mov eax [ebp+arg_0] +
jz loc_441B39  +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
jmp loc_441C54  +
add eax 0Ch +
or [eax] ebx +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
test eax 4C0h +
jnz loc_441B56  +
push [ebp+arg_0]  +
call sub_44B49B  +
pop ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov [eax] ecx +
mov esi [ebp+arg_0] +
push dword ptr [esi+18h]  +
push dword ptr [esi+4]  +
push esi  +
call sub_43D9BA  +
pop ecx  +
push eax  +
call sub_44160D  +
mov [esi+8] eax +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov edx [eax+8] +
test edx edx +
jz loc_441C39  +
cmp edx 0FFFFFFFFh +
jz loc_441C39  +
mov eax [eax+0Ch] +
nop   +
test al 6 +
jnz loc_441BF8  +
push [ebp+arg_0]  +
call sub_43D9BA  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_441BDE  +
push [ebp+arg_0]  +
call sub_43D9BA  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_441BDE  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
call sub_43D9BA  +
mov edi eax +
push esi  +
sar edi 6 +
call sub_43D9BA  +
pop ecx  +
and eax 3Fh +
pop ecx  +
imul ecx eax +
mov eax dword_46FE80[edi*4] +
pop edi  +
add eax ecx +
jmp loc_441BE3  +
mov eax offset unk_46E280 +
mov al [eax+28h] +
and al 82h +
cmp al 82h +
jnz loc_441BF8  +
mov eax [ebp+arg_0] +
push 20h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+18h] 200h +
jnz loc_441C2A  +
mov eax [eax+0Ch] +
nop   +
shr eax 6 +
test al bl +
jz loc_441C27  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 8 +
test al bl +
jnz loc_441C27  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] 1000h +
mov eax [ebp+arg_0] +
dec dword ptr [eax+8]  +
mov ecx [eax] +
mov dl [ecx] +
inc ecx  +
mov [eax] ecx +
movzx eax dl +
jmp loc_441C57  +
xor ecx ecx +
test edx edx +
setnz cl  +
add eax 0Ch +
lea ecx ds:8[ecx*8] +
or [eax] ecx +
mov ecx [ebp+arg_0] +
and dword ptr [ecx+8] 0 +
or eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC12  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea ecx [ebp+var_1C] +
call sub_430F9E  +
mov ebx [ebp+arg_14] +
test ebx ebx +
jnz loc_442624  +
mov eax [ebp+var_18] +
mov ebx [eax+8] +
xor eax eax +
xor edi edi +
cmp [ebp+arg_18] eax +
push edi  +
push edi  +
push [ebp+cchMultiByte]  +
setnz al  +
push [ebp+lpMultiByteStr]  +
lea eax ds:1[eax*8] +
push eax  +
push ebx  +
call sub_43DE18  +
add esp 18h +
mov [ebp+cchWideChar] eax +
test eax eax +
jz loc_4426D6  +
lea edx [eax+eax] +
lea ecx [edx+8] +
mov [ebp+var_8] edx +
cmp edx ecx +
sbb eax eax +
and eax ecx +
jz loc_442698  +
cmp eax 400h +
ja loc_44267D  +
call sub_42CD30  +
mov esi esp +
test esi esi +
jz loc_442693  +
mov dword ptr [esi] 0CCCCh +
jmp loc_442690  +
push eax  +
call sub_43CD12  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_442693  +
mov dword ptr [esi] 0DDDDh +
add esi 8 +
mov edx [ebp+var_8] +
jmp loc_44269A  +
mov esi edi +
test esi esi +
jz loc_4426CF  +
push edx  +
push edi  +
push esi  +
call sub_42E740  +
push [ebp+cchWideChar]  +
push esi  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push 1  +
push ebx  +
call sub_43DE18  +
add esp 24h +
test eax eax +
jz loc_4426CF  +
push [ebp+lpCharType]  +
push eax  +
push esi  +
push [ebp+dwInfoType]  +
call ds:GetStringTypeW  +
mov edi eax +
push esi  +
call sub_42BCF0  +
pop ecx  +
cmp [ebp+var_10] 0 +
jz loc_4426E6  +
mov eax [ebp+var_1C] +
and dword ptr [eax+350h] 0FFFFFFFDh +
mov eax edi +
lea esp [ebp-28h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_42C3AF  +
leave   +
retn   +
***
mov dword_470764 eax +
xor eax eax +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_458CF0 +
movlpd xmm2 oword ptr ds:oword_458D00 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_45AB68[eax*4] +
movlpd xmm5 oword ptr ds:oword_45AB68[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_45AF80[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_442A77  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_458D40+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_458CF0 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_45B790[eax*4] +
mulsd xmm5 ds:qword_45B790[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_45BBA0[eax*4] +
orpd xmm4 oword ptr ds:oword_458D00 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_458D40+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_458D50 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_45C3B0[eax*4] +
mulsd xmm2 ds:qword_45C3B0[eax*4] +
addpd xmm6 oword ptr ds:oword_45CBC0[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_458D40+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_442DE8  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_4431AA  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_458D40+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_45DBD0 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_45DBE0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_442F2E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_458CE0 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_458CE0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_45DBF0[eax] +
movapd xmm6 oword ptr ds:oword_458D20 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_458D40 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_458D30 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_458D10 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_442B80  +
or eax ecx +
cmp eax 0 +
jz loc_442EA5  +
cmp edx 0 +
jge loc_442BBF  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_442CA8  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_442DA1  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_458D10 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_458D70 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_442BC4  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_458CF0 +
movlpd xmm2 oword ptr ds:oword_458D00 +
jmp loc_4427A6  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_442E1D  +
ja loc_442D8F  +
cmp edx 0 +
ja loc_442D8F  +
jmp loc_442E1D  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_458CF0 +
movlpd xmm2 oword ptr ds:oword_458D00 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_442C4A  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_458D10 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_45AB68[eax*4] +
movlpd xmm5 oword ptr ds:oword_45AB68[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_45AF80[eax*4] +
mov edx 43E7Fh +
jmp loc_4427A6  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_442BF8  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_442C97  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_458D00 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_442EFE  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_442D49  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_458CF0 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_442D8F  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_442D73  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_442D57  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_458D10 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_442D57  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_442D50  +
fld  qword ptr ds:oword_458D70 +
retn   +
fld  ds:dbl_458D68 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_442E8F  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_442E8F  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_442EFE  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_442C4A  +
movlpd xmm1 oword ptr ds:oword_458D50+8 +
movlpd xmm0 oword ptr ds:oword_458D90 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_442EFE  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_442E1D  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_442EFB  +
cmp edx 0BFF00000h +
jnz loc_442E1D  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_458CF0 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_442E96  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_442EFB  +
cmp eax 0 +
jz loc_442E7B  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_442E8F  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_442E8F  +
fldz   +
retn   +
fld  ds:dbl_458D60 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_442EFE  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_458D00 +
mov edx 1Ah +
cmp eax 0 +
jz loc_442EFE  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_442EFE  +
jb loc_442EEA  +
cmp ecx 0 +
ja loc_442EFE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_44B5F2  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_442F5B  +
cmp eax 40000h +
jnb loc_44317A  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_442F81  +
cmp eax 0FFFC0200h +
jle loc_443157  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_458CE0 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_458CE0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_45DBF0[eax] +
movapd xmm6 oword ptr ds:oword_458D20 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_458D40 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_458D30 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_44310D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_442EFE  +
mov edx 19h +
cmp eax 0 +
jz loc_442EFE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_442EFE  +
mov edx 19h +
cmp eax 0 +
jz loc_442EFE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_458D80+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_442EFE  +
mov edx 18h +
cmp ecx 0 +
jz loc_443199  +
movlpd xmm0 oword ptr ds:oword_458D70+8 +
mulsd xmm0 qword ptr ds:oword_458D80 +
jmp loc_442EFE  +
movlpd xmm0 oword ptr ds:oword_458D80 +
mulsd xmm0 xmm0 +
jmp loc_442EFE  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_4428F8  +
cmp eax 80000000h +
jb loc_4431FE  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_443157  +
jmp loc_44317A  +
***
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_443285  +
fxch  st(1) +
fyl2x   +
jmp loc_44325D  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_44338D  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_443273  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_44327A  +
fscale   +
or ch ch +
jz loc_443280  +
fchs   +
jmp loc_443554  +
***
call sub_4433D0  +
or eax eax +
jz loc_4432A2  +
xor ch ch +
cmp eax 2 +
jz loc_443297  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_44323D  +
***
jmp loc_44358D  +
***
jmp loc_443650  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_458DA0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_4432A2  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_458DAA +
retn   +
***
or cl cl +
jnz loc_44333A  +
retn   +
***
fldlg2   +
jmp loc_4432EE  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_4432A2  +
fyl2x   +
retn   +
***
jmp loc_44358D  +
***
call sub_4433D0  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_443317  +
fldz   +
cmp eax 1 +
jnz locret_443316  +
or ch ch +
jz locret_443316  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_458DA0 +
cmp eax 1 +
jnz locret_443316  +
or ch ch +
jz locret_443316  +
fchs   +
jmp locret_443316  +
***
fstp  st +
***
jmp loc_44357A  +
***
fstp  st +
jmp loc_443652  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_443362  +
fstp  st +
fld  ds:tbyte_458DA0 +
or ch ch +
jz locret_443361  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_44357A  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_4433F6  +
fld  st +
fmul  ds:dbl_458DD2 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_4433FD  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_4433F5  +
mov eax 2 +
jmp locret_4433F5  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_4438F4  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_443435  +
jmp sub_443663  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_443457  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_44345B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_458E2E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_4522C0  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4434CC  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4434D0  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_458E2E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_4522C0  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_443663  +
***
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_443663  +
jmp loc_443560  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_44358C  +
fchs   +
retn   +
***
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4435BD  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_458E1E +
retn   +
***
jmp loc_4435D0  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4435FE  +
mov byte ptr [ebp-90h] 0 +
jmp loc_443605  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_443645  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_443645  +
mov byte ptr [ebp-90h] 0 +
jmp loc_44364C  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_458E14 +
or ch ch +
jz loc_443680  +
fchs   +
or cl cl +
jz locret_44368C  +
fld  ds:dbl_458E26 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_443693  +
fchs   +
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_44B7E6  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_4436F1  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_443799  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp word ptr [esp+0] 27Fh +
jz loc_4437A9  +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
mov ax [esp-6+arg_0] +
cmp ax 27Fh +
jz loc_4437D3  +
and ax 20h +
jz loc_4437D0  +
fstsw  ax +
and ax 20h +
jz loc_4437D0  +
mov eax 8 +
call sub_4436B7  +
pop edx  +
retn   +
fldcw  [esp-6+arg_0] +
pop edx  +
retn   +
***
sub esp 8 +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push 3  +
pop eax  +
mov [ebp+var_8] eax +
lea ecx [ebp-1] +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_443A1F  +
leave   +
retn   +
***
call sub_43C8E9  +
call sub_42D0A0  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_443CDF  +
push 3  +
call sub_4389A1  +
pop ecx  +
mov edx [ebp-20h] +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_443E03  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapSize  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_443E32  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
retn   +
***
mov eax esi +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
call sub_4393A9  +
***
cmp byte_470254 0 +
push eax  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_444B7D  +
xor edi edi +
jmp loc_444BB4  +
push ebx  +
push esi  +
call sub_444AAE  +
mov ebx eax +
sub ebx esi +
and ebx 0FFFFFFFEh +
push ebx  +
call sub_43CD12  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_444BA4  +
push ebx  +
push esi  +
push edi  +
call loc_42DC40  +
add esp 0Ch +
push 0  +
call sub_43CCD8  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
mov edi edi +
mov edi edi +
mov eax dword_46FE0C +
mov eax dword_46FE10 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4453DB  +
mov eax [esi+0Ch] +
cmp eax off_46E13C +
jz loc_445303  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+10h] +
cmp eax off_46E140 +
jz loc_445315  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+14h] +
cmp eax off_46E144 +
jz loc_445327  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+18h] +
cmp eax off_46E148 +
jz loc_445339  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+1Ch] +
cmp eax off_46E14C +
jz loc_44534B  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+20h] +
cmp eax off_46E150 +
jz loc_44535D  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+24h] +
cmp eax off_46E154 +
jz loc_44536F  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+38h] +
cmp eax off_46E168 +
jz loc_445381  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+3Ch] +
cmp eax off_46E16C +
jz loc_445393  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+40h] +
cmp eax off_46E170 +
jz loc_4453A5  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+44h] +
cmp eax off_46E174 +
jz loc_4453B7  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+48h] +
cmp eax off_46E178 +
jz loc_4453C9  +
push eax  +
call sub_43CCD8  +
pop ecx  +
mov eax [esi+4Ch] +
cmp eax off_46E17C +
jz loc_4453DB  +
push eax  +
call sub_43CCD8  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_445DA4  +
push 7  +
push esi  +
call sub_445A0F  +
lea eax [esi+1Ch] +
push 7  +
push eax  +
call sub_445A0F  +
lea eax [esi+38h] +
push 0Ch  +
push eax  +
call sub_445A0F  +
lea eax [esi+68h] +
push 0Ch  +
push eax  +
call sub_445A0F  +
lea eax [esi+98h] +
push 2  +
push eax  +
call sub_445A0F  +
push dword ptr [esi+0A0h]  +
call sub_43CCD8  +
push dword ptr [esi+0A4h]  +
call sub_43CCD8  +
push dword ptr [esi+0A8h]  +
call sub_43CCD8  +
lea eax [esi+0B4h] +
push 7  +
push eax  +
call sub_445A0F  +
lea eax [esi+0D0h] +
push 7  +
push eax  +
call sub_445A0F  +
add esp 44h +
lea eax [esi+0ECh] +
push 0Ch  +
push eax  +
call sub_445A0F  +
lea eax [esi+11Ch] +
push 0Ch  +
push eax  +
call sub_445A0F  +
lea eax [esi+14Ch] +
push 2  +
push eax  +
call sub_445A0F  +
push dword ptr [esi+154h]  +
call sub_43CCD8  +
push dword ptr [esi+158h]  +
call sub_43CCD8  +
push dword ptr [esi+15Ch]  +
call sub_43CCD8  +
push dword ptr [esi+160h]  +
call sub_43CCD8  +
add esp 28h +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
cmp [ebx+0B4h] edi +
jnz loc_445DCC  +
mov esi offset off_457F50 +
jmp loc_445E12  +
push 164h  +
push 1  +
call sub_43EB5A  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_445DF6  +
push ebx  +
push esi  +
call sub_445A47  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_445E01  +
push esi  +
call sub_445CC3  +
pop ecx  +
mov edi esi +
push edi  +
call sub_43CCD8  +
xor eax eax +
inc eax  +
jmp loc_445E25  +
push edi  +
mov dword ptr [esi+0B0h] 1 +
call sub_43CCD8  +
pop ecx  +
push dword ptr [ebx+9Ch]  +
call sub_446195  +
mov [ebx+9Ch] esi +
xor eax eax +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
test ecx ecx +
jnz loc_44649B  +
xor eax eax +
pop ebp  +
retn   +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_4464AD  +
cmp ax 5Ah +
jbe loc_4464B6  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_4464B9  +
inc edx  +
jmp loc_44649B  +
mov eax edx +
pop ebp  +
retn   +
***
and [esi+58h] eax +
inc eax  +
jmp loc_446783  +
and [esi+58h] ebx +
jmp loc_44662C  +
mov [esi+58h] ebx +
xor eax eax +
inc eax  +
jmp loc_446782  +
test byte ptr [esi+58h] 1 +
jnz loc_4465F0  +
push edi  +
call sub_446955  +
pop ecx  +
test eax eax +
jz loc_4465F0  +
or dword ptr [esi+58h] 1 +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_44664E  +
jmp loc_4465CE  +
***
mov eax [esi+58h] +
shr eax 2 +
not eax  +
and eax 1 +
pop ebx  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
leave   +
retn 0Ch  +
***
and [esi+58h] eax +
inc eax  +
jmp loc_446844  +
or dword ptr [esi+58h] 4 +
pop ebx  +
mov eax [esi+58h] +
shr eax 2 +
not eax  +
and eax 1 +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_42C3AF  +
leave   +
retn 0Ch  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
push edi  +
inc edx  +
xor edi edi +
test esi esi +
js loc_446A04  +
push ebx  +
test edx edx +
jz loc_446A03  +
lea eax [edi+esi] +
cdq   +
sub eax edx +
mov ebx eax +
mov eax [ebp+arg_0] +
sar ebx 1 +
imul ecx ebx +
mov [ebp+var_4] ecx +
push dword ptr [ecx+eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax]  +
call sub_436ADC  +
mov edx eax +
pop ecx  +
pop ecx  +
test edx edx +
jnz loc_4469F5  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add eax 4 +
add ecx eax +
mov eax [ebp+arg_8] +
mov [eax] ecx +
jmp loc_4469FF  +
jns loc_4469FC  +
lea esi [ebx-1] +
jmp loc_4469FF  +
lea edi [ebx+1] +
cmp edi esi +
jle loc_4469B7  +
pop ebx  +
xor eax eax +
test edx edx +
pop edi  +
setz al  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
call sub_43C8E9  +
xor ecx ecx +
xor edx edx +
mov [ebp-8] edx +
lea esi [eax+50h] +
lea eax [esi+250h] +
mov [esi+8] edx +
mov [eax] cx +
lea edi [esi+4] +
mov [ebp-4] eax +
mov ecx ebx +
lea eax [ebx+80h] +
mov [esi] ebx +
mov [edi] eax +
cmp [eax] dx +
jz loc_446A62  +
push edi  +
push 16h  +
push offset off_4591B0  +
call sub_4469A2  +
mov ecx [esi] +
add esp 0Ch +
xor edx edx +
push esi  +
cmp [ecx] dx +
jz loc_446AAF  +
mov eax [edi] +
cmp [eax] dx +
jz loc_446A76  +
call sub_446397  +
jmp loc_446A7B  +
call sub_446430  +
xor eax eax +
pop ecx  +
cmp [esi+8] eax +
jnz loc_446AB5  +
push esi  +
push 40h  +
push offset off_458EA0  +
call sub_4469A2  +
add esp 0Ch +
test eax eax +
jz loc_446AB5  +
mov eax [edi] +
xor ecx ecx +
push esi  +
cmp [eax] cx +
jz loc_446AA8  +
call sub_446397  +
jmp loc_446AB4  +
call sub_446430  +
jmp loc_446AB4  +
call sub_446310  +
pop ecx  +
xor edi edi +
cmp [esi+8] edi +
jz loc_446BF6  +
lea eax [ebx+100h] +
cmp [ebx] di +
jnz loc_446AD8  +
cmp [eax] di +
jnz loc_446AD8  +
call ds:GetACP  +
jmp loc_446AE1  +
push esi  +
push eax  +
call sub_44685F  +
pop ecx  +
pop ecx  +
mov esi eax +
test esi esi +
jz loc_446BF6  +
cmp esi 0FDE8h +
jz loc_446BF6  +
movzx eax si +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_446BF6  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_446B12  +
mov [eax] esi +
mov edi [ebp+10h] +
test edi edi +
jz loc_446BF1  +
mov ecx [ebp-4] +
lea ebx [edi+120h] +
xor eax eax +
mov [ebx] ax +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-8] +
jnz loc_446B2E  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+1] +
push eax  +
push dword ptr [ebp-4]  +
push 55h  +
push ebx  +
call sub_436A94  +
add esp 10h +
test eax eax +
jnz loc_446BFD  +
push 40h  +
push edi  +
push 1001h  +
push ebx  +
call sub_43E427  +
test eax eax +
jz loc_446BF6  +
push 40h  +
lea ebx [edi+80h] +
push ebx  +
push 1002h  +
lea eax [edi+120h] +
push eax  +
call sub_43E427  +
test eax eax +
jz loc_446BF6  +
push 5Fh  +
push ebx  +
call sub_44D7BB  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_446BA8  +
push 2Eh  +
push ebx  +
call sub_44D7BB  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_446BBD  +
push 40h  +
push ebx  +
push 7  +
lea eax [edi+120h] +
push eax  +
call sub_43E427  +
test eax eax +
jz loc_446BF6  +
add edi 100h +
cmp esi 0FDE9h +
jnz loc_446BE3  +
push 5  +
push offset aUtf8_0  +
push 10h  +
push edi  +
call sub_436A94  +
add esp 10h +
test eax eax +
jnz loc_446BFD  +
jmp loc_446BF1  +
push 0Ah  +
push 10h  +
push edi  +
push esi  +
call sub_4384F2  +
add esp 10h +
xor eax eax +
inc eax  +
jmp loc_446BF8  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_4324AE  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_446E18  +
cmp ax 5Ah +
jbe loc_446E21  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_446E24  +
inc edx  +
jmp loc_446E06  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FCh +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
call sub_43C8E9  +
mov ebx eax +
call sub_43C8E9  +
push esi  +
mov edi [eax+34Ch] +
call sub_447165  +
pop ecx  +
mov ecx [ebx+64h] +
mov esi eax +
neg ecx  +
lea eax [ebp+LCData] +
push 78h  +
sbb ecx ecx +
and ecx 0FFFFF005h +
push eax  +
add ecx 1002h +
push ecx  +
push esi  +
call ds:GetLocaleInfoW  +
and [ebp+var_F8] 0 +
test eax eax +
jz loc_44706D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+54h]  +
call sub_436ADC  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_446F67  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_44706D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_436ADC  +
pop ecx  +
pop ecx  +
mov ecx [edi] +
test eax eax +
jnz loc_446F00  +
or ecx 304h +
mov [edi+4] esi +
mov [edi] ecx +
jmp loc_446F64  +
test cl 2 +
jnz loc_446F67  +
cmp dword ptr [ebx+5Ch] 0 +
jz loc_446F4D  +
push dword ptr [ebx+5Ch]  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_435C0C  +
add esp 0Ch +
test eax eax +
jnz loc_446F4D  +
or dword ptr [edi] 2 +
mov [edi+8] esi +
mov ecx [ebx+50h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_446F30  +
sub ecx edx +
sar ecx 1 +
cmp ecx [ebx+5Ch] +
jnz loc_446F67  +
mov [edi+4] esi +
jmp loc_446F67  +
mov edx [edi] +
test dl 1 +
jnz loc_446F67  +
push esi  +
call sub_447297  +
pop ecx  +
test eax eax +
jz loc_446F67  +
or edx 1 +
mov [edi] edx +
mov [edi+8] esi +
mov eax [edi] +
mov ecx 300h +
and eax ecx +
cmp eax ecx +
jz loc_447061  +
push 78h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+60h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_44706D  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_436ADC  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_447021  +
mov ecx [edi] +
or ecx 200h +
mov [edi] ecx +
cmp [ebx+60h] eax +
jz loc_446FD6  +
or ecx 100h +
mov [edi] ecx +
cmp [edi+4] eax +
jmp loc_44705C  +
cmp [ebx+5Ch] eax +
jz loc_446FC6  +
mov edx [ebx+50h] +
lea eax [edx+2] +
mov [ebp+var_FC] eax +
mov ax [edx] +
add edx 2 +
cmp ax word ptr [ebp+var_F8] +
jnz loc_446FE7  +
sub edx [ebp+var_FC] +
sar edx 1 +
cmp edx [ebx+5Ch] +
jnz loc_44701D  +
push edi  +
push 1  +
push esi  +
call sub_4472BC  +
add esp 0Ch +
test eax eax +
jz loc_447061  +
or dword ptr [edi] 100h +
xor eax eax +
jmp loc_446FCE  +
xor eax eax +
jmp loc_446FC6  +
xor eax eax +
cmp [ebx+60h] eax +
jnz loc_447061  +
cmp [ebx+5Ch] eax +
jz loc_447061  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+50h]  +
call sub_436ADC  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_447061  +
push edi  +
xor ebx ebx +
push ebx  +
push esi  +
call sub_4472BC  +
add esp 0Ch +
test eax eax +
jz loc_447061  +
or dword ptr [edi] 100h +
cmp [edi+4] ebx +
jnz loc_447061  +
mov [edi+4] esi +
mov eax [edi] +
shr eax 2 +
not eax  +
and eax 1 +
jmp loc_447072  +
xor eax eax +
mov [edi] eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
leave   +
retn 4  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea ecx [ebp+var_10] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
call sub_430F9E  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_44A299  +
xor esi esi +
jmp loc_44A326  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_44A2A7  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_44A2BE  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
mov esi 7FFFFFFFh +
jmp loc_44A326  +
mov esi 7FFFFFFFh +
cmp eax esi +
jbe loc_44A2D9  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
jmp loc_44A326  +
mov edi [ebp+var_C] +
mov ebx [edi+0A4h] +
test ebx ebx +
jnz loc_44A2F9  +
lea esi [ebp+var_C] +
push esi  +
push eax  +
push edx  +
push ecx  +
call sub_44A3AA  +
add esp 10h +
mov esi eax +
jmp loc_44A326  +
push dword ptr [edi+10h]  +
push eax  +
push edx  +
push eax  +
push ecx  +
push 1001h  +
lea eax [ebp+var_C] +
push ebx  +
push eax  +
call sub_44C62F  +
add esp 20h +
test eax eax +
jnz loc_44A323  +
call sub_436497  +
mov dword ptr [eax] 16h +
jmp loc_44A326  +
lea esi [eax-2] +
cmp [ebp+var_4] 0 +
jz loc_44A336  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
call sub_42D0A0  +
pop ecx  +
call sub_42D0A0  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
frndint   +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_44B946  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_44B945  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_44B930  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_46E02C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_44B9AF  +
test ecx ecx +
jz loc_44B9AF  +
call sub_436497  +
mov dword ptr [eax] 16h +
call sub_432481  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_42C3AF  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_44B98E  +
test ebx ebx +
jz loc_44B98E  +
mov [ebp+var_10C] 0 +
cmp ecx 2 +
jb loc_44B99E  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_FC] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
lea edi [eax+1] +
cmp edi 8 +
ja loc_44BAC2  +
mov edi [ebp+var_100] +
cmp ecx esi +
jbe loc_44BA95  +
lea edx [edi+esi] +
mov [ebp+var_114] edx +
lea ecx [ecx+0] +
mov eax esi +
mov esi edx +
mov [ebp+var_F8] eax +
cmp esi ecx +
ja loc_44BA3F  +
mov edi edi +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_44BA2D  +
mov eax esi +
mov [ebp+var_F8] eax +
jmp loc_44BA33  +
mov eax [ebp+var_F8] +
mov ecx [ebp+var_FC] +
add esi edi +
cmp esi ecx +
jbe loc_44BA10  +
mov edx ecx +
cmp eax ecx +
jz loc_44BA79  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_F8] eax +
nop   +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_F8] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_44BA50  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_114] +
mov [ebp+var_FC] ecx +
cmp ecx esi +
ja loc_44BA00  +
mov ecx [ebp+var_10C] +
mov eax ecx +
dec ecx  +
mov [ebp+var_10C] ecx +
test eax eax +
jle loc_44B99E  +
mov esi [ebp+ecx*4+var_7C] +
mov ecx [ebp+ecx*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_44B9CC  +
mov esi [ebp+var_100] +
mov ecx ebx +
mov eax [ebp+var_104] +
shr edi 1 +
imul edi esi +
add edi eax +
push edi  +
push eax  +
call ds:off_4522C0  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_44BAF8  +
push esi  +
push edi  +
push [ebp+var_104]  +
call sub_44B910  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push [ebp+var_104]  +
call ds:off_4522C0  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_44BB2A  +
push esi  +
push [ebp+var_FC]  +
push [ebp+var_104]  +
call sub_44B910  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push edi  +
call ds:off_4522C0  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_44BB52  +
push esi  +
push [ebp+var_FC]  +
push edi  +
call sub_44B910  +
add esp 0Ch +
mov eax [ebp+var_FC] +
mov ebx eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_100] +
mov [ebp+var_F8] eax +
lea esp [esp+0] +
cmp edi esi +
jbe loc_44BBAB  +
add esi edx +
mov [ebp+var_110] esi +
cmp esi edi +
jnb loc_44BBA5  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_4522C0  +
call [ebp+var_108]  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
jle loc_44BB74  +
cmp edi esi +
ja loc_44BBE2  +
mov eax [ebp+var_FC] +
mov ebx [ebp+var_108] +
add esi edx +
cmp esi eax +
ja loc_44BBD6  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_FC] +
jle loc_44BBB1  +
mov ebx [ebp+var_F8] +
mov [ebp+var_110] esi +
mov esi [ebp+var_108] +
jmp loc_44BBF0  +
mov edx [ebp+var_100] +
mov eax ebx +
sub ebx edx +
mov [ebp+var_F8] eax +
cmp ebx edi +
jbe loc_44BC23  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_4522C0  +
call esi  +
add esp 8 +
test eax eax +
jg loc_44BBF0  +
mov edx [ebp+var_100] +
mov eax [ebp+var_F8] +
mov esi [ebp+var_110] +
mov [ebp+var_F8] ebx +
cmp ebx esi +
jb loc_44BC8C  +
mov [ebp+var_11C] edx +
mov [ebp+var_118] ebx +
jz loc_44BC77  +
sub esi ebx +
mov edx ebx +
mov ebx [ebp+var_11C] +
jmp loc_44BC50  +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_44BC50  +
mov esi [ebp+var_110] +
mov ebx [ebp+var_F8] +
mov edx [ebp+var_100] +
mov eax [ebp+var_FC] +
cmp edi ebx +
jnz loc_44BB70  +
mov edi esi +
jmp loc_44BB70  +
cmp edi eax +
jnb loc_44BCC5  +
mov ebx [ebp+var_108] +
sub eax edx +
mov [ebp+var_F8] eax +
cmp eax edi +
jbe loc_44BCC5  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_44BC96  +
cmp edi eax +
jb loc_44BD00  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
sub eax esi +
mov [ebp+var_F8] eax +
cmp eax [ebp+var_104] +
jbe loc_44BCFA  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_4522C0  +
call ebx  +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_44BCD1  +
mov esi [ebp+var_110] +
mov edx [ebp+var_FC] +
mov ecx edx +
mov edi [ebp+var_104] +
sub ecx esi +
sub eax edi +
cmp eax ecx +
jl loc_44BD57  +
mov eax [ebp+var_F8] +
cmp edi eax +
jnb loc_44BD38  +
mov ecx [ebp+var_10C] +
mov [ebp+ecx*4+var_7C] edi +
mov [ebp+ecx*4+var_F4] eax +
inc ecx  +
mov [ebp+var_10C] ecx +
mov ecx [ebp+var_FC] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_44BA95  +
mov [ebp+var_104] esi +
jmp loc_44B9D2  +
cmp esi edx +
jnb loc_44BD73  +
mov eax [ebp+var_10C] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_10C] eax +
mov eax [ebp+var_F8] +
mov esi [ebp+var_104] +
mov edi [ebp+var_100] +
cmp esi eax +
jnb loc_44BA95  +
mov ecx eax +
jmp loc_44B9CC  +
***
add edx 1 +
bts [esp] eax +
jmp loc_44BDB4  +
***
call sub_444860  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_470764 0 +
jz loc_44C11B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_44C110  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_44C11B  +
jmp sub_44C940  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_443788  +
call sub_44C138  +
add esp 0Ch +
retn   +
***
jz loc_44C18B  +
cmp dword_470764 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_430F9E  +
push [ebp+CodePage]  +
lea eax [ebp+var_C] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+dwCmpFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_44C3A4  +
add esp 20h +
cmp [ebp+var_4] 0 +
jz locret_44C673  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
leave   +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
movzx ecx dx +
push edi  +
test esi esi +
jnz loc_44C8B9  +
mov esi offset unk_470270 +
cmp dword ptr [esi] 0 +
lea eax [ecx+2400h] +
movzx eax ax +
jnz loc_44C903  +
mov edi 3FFh +
cmp ax di +
ja loc_44C8DA  +
push esi  +
call sub_447D92  +
pop ecx  +
jmp loc_44C934  +
lea eax [edx+2800h] +
cmp ax di +
ja loc_44C8F7  +
and ecx 0FFFF27FFh +
add ecx 40h +
shl ecx 0Ah +
xor eax eax +
mov [esi] ecx +
jmp loc_44C934  +
push esi  +
push ecx  +
push [ebp+arg_0]  +
call sub_447DB1  +
jmp loc_44C931  +
mov ecx 3FFh +
cmp ax cx +
ja loc_44C8D1  +
lea eax [ebp+var_8] +
xor edi edi +
push eax  +
movzx eax dx +
and eax 0FFFF23FFh +
mov [ebp+var_8] edi +
add eax [esi] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
call sub_447DB1  +
mov [esi] edi +
mov [esi+4] edi +
add esp 0Ch +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_44C95E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_45E450 +
movapd xmm2 oword ptr ds:oword_45E460 +
movapd xmm3 oword ptr ds:oword_45E4C0 +
movapd xmm4 oword ptr ds:oword_45E470 +
movapd xmm6 oword ptr ds:oword_45E480 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_45E970[eax] +
movapd xmm7 oword ptr ds:oword_45E560[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_44CAB6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_45E510 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_45E520 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_45E530 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_45E490 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_45E4A0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_45E540 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_45E4D0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_44CB1B  +
cmp ecx 0FFFFFFFFh +
jz loc_44CB36  +
cmp ecx 7FEh +
ja loc_44CB4C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_45E450 +
movapd xmm2 oword ptr ds:oword_45E4C0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_44CB14  +
fld  ds:dbl_45E4F8 +
retn   +
mov edx 3E9h +
jmp loc_44CB6A  +
movlpd xmm2 oword ptr ds:oword_45E4C0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_45E4F0 +
mov edx 8 +
jmp loc_44CB6A  +
movlpd xmm1 oword ptr ds:oword_45E4E0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_44C963  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_44CB97  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_44B5F2  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_44CB5D  +
mov edx 3E9h +
jmp loc_44CB6A  +
***
lea esp [esp+0] +
jmp loc_44CBD0  +
***
xor eax eax +
mov ecx hObject +
cmp ecx 0FFFFFFFEh +
jnz loc_44CCBA  +
call sub_44CC85  +
mov ecx hObject +
xor eax eax +
cmp ecx 0FFFFFFFFh +
setnz al  +
retn   +
***
mov eax hObject +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_44CD8C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_44CD84  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_44CD8E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_44CD74  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_46CC08  +
push offset sub_42F950  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E02C +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_44CE60  +
add esp 4 +
test eax eax +
jz loc_44CE3F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_44CD50  +
add esp 8 +
test eax eax +
jz loc_44CE3F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jnz loc_44CE8F  +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_44CE8F  +
mov ecx 10Bh +
cmp [eax+18h] cx +
jnz loc_44CE8F  +
mov eax 1 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_44CED1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_44CF18  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_44CEDF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_44CF0D  +
cmp edx [esp+arg_4] +
ja loc_44CF0D  +
jb loc_44CF16  +
cmp eax [esp+arg_0] +
jbe loc_44CF16  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_44CF61  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_44CF7D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_44CF99  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_44CFDA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_44CFA7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_44CFD5  +
cmp edx [esp+arg_4] +
ja loc_44CFD5  +
jb loc_44CFD6  +
cmp eax [esp+arg_0] +
jbe loc_44CFD6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_44CFE4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_44D014  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_44D030  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_44D05C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_44D0A3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_44D06A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_44D098  +
cmp edx [esp+arg_4] +
ja loc_44D098  +
jb loc_44D0A1  +
cmp eax [esp+arg_0] +
jbe loc_44D0A1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_44D0B5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_44D0C9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_44D0F0  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_44D10B  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_44D12A  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_44D176  +
jmp loc_44D17D  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_44D138  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_44D163  +
cmp edx [esp+arg_4] +
ja loc_44D163  +
jb loc_44D16B  +
cmp eax [esp+arg_0] +
jbe loc_44D16B  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_44D17D  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
cmp cl 40h +
jnb loc_44D20A  +
cmp cl 20h +
jnb loc_44D200  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_44D22A  +
cmp cl 20h +
jnb loc_44D220  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
or eax eax +
jnz loc_44D251  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_44D2A1  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_44D25F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_44D28A  +
cmp edx [esp+arg_4] +
ja loc_44D28A  +
jb loc_44D292  +
cmp eax [esp+arg_0] +
jbe loc_44D292  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
cmp dword_46F9C8 2 +
jl loc_44D2C1  +
sub esp 4 +
fisttp  dword ptr [esp] +
pop eax  +
retn   +
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  [esp+14h+var_14] +
mov eax dword ptr [esp+14h+var_14+4] +
movzx ecx word ptr [esp+14h+var_14+8] +
btr ecx 0Fh +
sbb edx edx +
cmp cx 3FFFh +
jb loc_44D304  +
test eax eax +
jns loc_44D31F  +
cmp cx 401Eh +
jnb loc_44D30C  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
xor eax edx +
sub eax edx +
leave   +
retn   +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
ja loc_44D31F  +
test edx edx +
jns loc_44D31F  +
cmp eax 80000000h +
jnz loc_44D31F  +
frndint   +
fstp  st +
leave   +
retn   +
fcomp  ds:flt_45ED88 +
leave   +
mov eax 80000000h +
retn   +
***
cmp dword_46F9C8 2 +
jl loc_44D377  +
fldz   +
fucomip st st(1) +
jp loc_44D36B  +
ja loc_44D35C  +
fld  ds:flt_45ED80 +
fucomip st st(1) +
jbe loc_44D36B  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_44D36B  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_45ED88 +
mov eax 0FFFFFFFFh +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_44D3B6  +
cmp cx 3FFFh +
jb loc_44D3BD  +
test eax eax +
jns loc_44D3C5  +
cmp cx 401Fh +
jnb loc_44D3C5  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_44D3C5  +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
***
fcomp  ds:flt_45ED88 +
leave   +
mov eax 0FFFFFFFFh +
retn   +
***
cmp dword_46F9C8 2 +
jl loc_44D3FE  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
cmp cx 3FFFh +
jb loc_44D459  +
test edx edx +
jns loc_44D47C  +
cmp cx 403Eh +
jnb loc_44D463  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_44D443  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
cmp word ptr [esp+8] 0 +
jge locret_44D457  +
neg eax  +
adc edx 0 +
neg edx  +
leave   +
retn   +
***
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
lea ecx ds:0[edx*2] +
ja loc_44D47C  +
or ecx eax +
jnz loc_44D47C  +
cmp word ptr [esp+8] 0 +
jge loc_44D47C  +
fstp  st +
leave   +
retn   +
***
fcomp  ds:flt_45ED88 +
leave   +
mov edx 80000000h +
xor eax eax +
retn   +
***
jmp loc_44D490  +
cmp dword_46F9C8 2 +
jl loc_44D4DC  +
fldz   +
fucomip st st(1) +
jp loc_44D4CF  +
ja loc_44D4C0  +
fld  ds:flt_45ED84 +
fucomip st st(1) +
jbe loc_44D4DC  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_44D4CF  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_45ED88 +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_44D52A  +
cmp cx 3FFFh +
jb loc_44D531  +
test edx edx +
jns loc_44D53B  +
cmp cx 403Fh +
jnb loc_44D53B  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_44D523  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_44D53B  +
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
fcomp  ds:flt_45ED88 +
leave   +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_46F9C8 1 +
jb loc_44D65E  +
mov edi [ebp+8] +
ja loc_44D5DD  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_44D5BD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_44D58D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_44D61E  +
xor eax eax +
test edi 0Fh +
jz loc_44D604  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_44D61B  +
inc edi  +
test edi 0Fh +
jnz loc_44D5EF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_44D657  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_44D643  +
bsf edx edi +
add eax edx +
jmp loc_44D61B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_44D681  +
xor eax eax +
jmp loc_44D683  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_46F9C8 1 +
push ecx  +
push ecx  +
cmp dword_46F9C8 1 +
jl loc_44D8F5  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_44D8A1  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_44D8F5  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_44D8EE  +
test eax 204h +
jnz loc_44D8BD  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_44D8EE  +
test eax 408h +
jnz loc_44D8D2  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_44D8E0  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_44D8F5  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
cmc   +
sbb eax eax +
retn   +
***
cvttps2pi mm1 ds:qword_467E30 +
cmc   +
sbb eax eax +
cdq   +
retn   +
***
or eax offset qword_467E30 +
mov edx 80000000h +
xor eax eax +
retn   +
***
or eax (offset qword_467E30+4) +
shrd eax edx +
bts eax 1Fh +
retn   +
***
cmp edx 3FF00000h +
jnb loc_44DA8D  +
cvttsd2si eax xmm0 +
xor eax eax +
retn   +
***
cvttss2si ecx dword ptr ds:qword_467E30 +
xor eax eax +
dec eax  +
retn   +
***
cmp dword_46F9C8 6 +
jl loc_44DAB7  +
retn 0C301h  +
***
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
movsd qword ptr [esp] xmm0 +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
btr edx 1Fh +
jb loc_44DB1D  +
cmp edx 41E00000h +
jnb loc_44DAE2  +
cvttsd2si eax xmm0 +
xor edx edx +
retn   +
***
mov ecx edx +
bts edx 14h +
shr ecx 14h +
and edx 1FFFFFh +
sub ecx 433h +
jge loc_44DB12  +
neg ecx  +
push ebx  +
xor ebx ebx +
shrd ebx eax +
jz loc_44DB0B  +
cvttss2si ebx dword ptr ds:qword_467E30+4 +
pop ebx  +
shrd eax edx +
shr edx cl +
retn   +
***
cmp ecx 0Ch +
jnb loc_44DB2E  +
shld edx eax +
shl eax cl +
retn   +
***
cmp edx 3FF00000h +
jnb loc_44DB2E  +
cvttsd2si eax xmm0 +
xor eax eax +
xor edx edx +
retn   +
***
cvttss2si ecx dword ptr ds:qword_467E30 +
xor eax eax +
dec eax  +
cdq   +
retn   +
***
pop ebx  +
shrd eax edx +
shr edx cl +
retn   +
***
shld edx eax +
shl eax cl +
retn   +
***
mov edx 80000000h +
xor eax eax +
retn   +
***
cmp dword_46F9C8 6 +
jl loc_44DC0A  +
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
addsd xmm0 ds:qword_467E38[ecx*8] +
test edx edx +
jz locret_44DC40  +
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
shr edx 1Fh +
addsd xmm1 ds:qword_467E38[edx*8] +
mulsd xmm1 qword ptr ds:oword_467E40 +
addsd xmm0 xmm1 +
retn   +
***
mulps xmm1 oword ptr ds:oword_467E40 +
addsd xmm0 ds:qword_467E38[ecx*8] +
addsd xmm0 xmm1 +
retn   +
***
sub esp 10h +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_44E7CB  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
jnz loc_44E7CB  +
movlpd oword ptr [esp] xmm0 +
movlpd oword ptr [esp+8] xmm1 +
movlpd xmm7 oword ptr ds:oword_467E60 +
movlpd xmm2 oword ptr ds:oword_467E70 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_45AB68[eax*4] +
movlpd xmm5 oword ptr ds:oword_45AB68[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_45AF80[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_44E017  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_467EB0+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_467E60 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_45B790[eax*4] +
mulsd xmm5 ds:qword_45B790[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_45BBA0[eax*4] +
orpd xmm4 oword ptr ds:oword_467E70 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_467EB0+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_467EC0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_45C3B0[eax*4] +
mulsd xmm2 ds:qword_45C3B0[eax*4] +
addpd xmm6 oword ptr ds:oword_45CBC0[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_467EB0+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_44E398  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_44E754  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_467EB0+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_45DBD0 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_45DBE0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_44E4F2  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_467E50 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_467E50 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_45DBF0[eax] +
movapd xmm6 oword ptr ds:oword_467E90 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_467EB0 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_467EA0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
movlpd xmm3 oword ptr ds:oword_467E80 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_44E11E  +
or eax ecx +
cmp eax 0 +
jz loc_44E46B  +
cmp edx 0 +
jge loc_44E15A  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_44E247  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44E352  +
movlpd xmm1 oword ptr [esp+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_467E80 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:unk_467EE0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_44E15F  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_467E60 +
movlpd xmm2 oword ptr ds:oword_467E70 +
jmp loc_44DD53  +
***
movlpd xmm7 oword ptr [esp] +
movapd xmm4 xmm7 +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_44E3D5  +
ja loc_44E340  +
cmp edx 0 +
ja loc_44E340  +
jmp loc_44E3D5  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_467E60 +
movlpd xmm2 oword ptr ds:oword_467E70 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_44E1E5  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_467E80 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_45AB68[eax*4] +
movlpd xmm5 oword ptr ds:oword_45AB68[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_45AF80[eax*4] +
mov edx 43E7Fh +
jmp loc_44DD53  +
***
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_44E193  +
mov edx [esp+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_44E231  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_467E70 +
movlpd xmm2 oword ptr [esp] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_44E4C0  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_44E2E6  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm3 oword ptr ds:oword_467E60 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_44E340  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_44E31F  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44E2FE  +
movlpd xmm1 oword ptr [esp+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_467E80 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_44E2FE  +
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44E2F2  +
movlpd xmm0 oword ptr ds:unk_467EE0 +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_467ED0+8 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44E450  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_44E450  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_44E4C0  +
movlpd xmm2 oword ptr [esp] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_44E1E5  +
movlpd xmm1 oword ptr ds:oword_467EC0+8 +
movlpd xmm0 oword ptr ds:oword_467EF8+8 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_44E4C0  +
movlpd xmm4 oword ptr [esp] +
movlpd xmm2 oword ptr [esp+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_44E3D5  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_44E4B4  +
cmp edx 0BFF00000h +
jnz loc_44E3D5  +
movlpd xmm0 oword ptr ds:oword_467E70 +
add esp 10h +
retn   +
***
movlpd xmm3 oword ptr ds:oword_467E60 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_44E45C  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_44E4B4  +
cmp eax 0 +
jz loc_44E437  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_44E450  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_44E450  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_467ED0 +
add esp 10h +
retn   +
***
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_44E4C0  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_467E70 +
mov edx 1Ah +
cmp eax 0 +
jz loc_44E4C0  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_44E4C0  +
jb loc_44E4B0  +
cmp ecx 0 +
ja loc_44E4C0  +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_45AB68 +
add esp 10h +
retn   +
***
sub esp 18h +
movlpd oword ptr [esp+10h] xmm0 +
mov [esp+0Ch] edx +
mov edx esp +
add edx 10h +
mov [esp+8] edx +
add edx 10h +
mov [esp+4] edx +
sub edx 8 +
mov [esp] edx +
call sub_44B5F2  +
movlpd xmm0 oword ptr [esp+10h] +
add esp 28h +
retn   +
***
cmp eax 0 +
jle loc_44E51F  +
cmp eax 40000h +
jnb loc_44E724  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_44E545  +
cmp eax 0FFFC0200h +
jle loc_44E701  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_467E50 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_467E50 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_45DBF0[eax] +
movapd xmm6 oword ptr ds:oword_467E90 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_467EB0 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+10h] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_467EA0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_44E6C4  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_44E4C0  +
mov edx 19h +
cmp eax 0 +
jz loc_44E4C0  +
add esp 10h +
retn   +
***
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_44E4C0  +
mov edx 19h +
cmp eax 0 +
jz loc_44E4C0  +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_467EF8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_44E4C0  +
***
mov edx 18h +
cmp ecx 0 +
jz loc_44E743  +
movlpd xmm0 oword ptr ds:oword_467EE8 +
mulsd xmm0 qword ptr ds:oword_467EE8+8 +
jmp loc_44E4C0  +
***
movlpd xmm0 oword ptr ds:oword_467EE8+8 +
mulsd xmm0 xmm0 +
jmp loc_44E4C0  +
***
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_44DEA5  +
cmp eax 80000000h +
jb loc_44E79B  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
add esp 10h +
retn   +
***
movlpd xmm4 oword ptr [esp] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_44E701  +
jmp loc_44E724  +
***
movq qword ptr [esp] xmm0 +
movq qword ptr [esp+8] xmm1 +
call sub_4391B4  +
fstp  qword ptr [esp] +
movq xmm0 qword ptr [esp] +
add esp 10h +
retn   +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_4696A0 +
jmp loc_42D66E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_4696F8 +
jmp loc_42D66E  +
***
inc ebx  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-248h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469780 +
jmp loc_42D66E  +
***
lea ecx [ebp-1Ch] +
jmp loc_406120  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_4697AC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_4697F0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469858 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_4698D8 +
jmp loc_42D66E  +
***
mov eax [ebp-34h] +
and eax 1 +
jz locret_44EAE8  +
and dword ptr [ebp-34h] 0FFFFFFFEh +
lea ecx [ebp-20h] +
jmp loc_405D00  +
retn   +
***
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
pushf   +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469960 +
jmp loc_42D66E  +
***
lea ecx [ebp-210h] +
jmp loc_404080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-22Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469998 +
jmp loc_42D66E  +
***
lea ecx [ebp-128h] +
jmp loc_404080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-128h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469A00 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469A2C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469A60 +
jmp loc_42D66E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469A8C +
jmp loc_42D66E  +
***
lea ecx [ebp-20h] +
jmp loc_407D00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469AB8 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dl ah +
idiv  edi +
push dword ptr [ebx]  +
enter 0FFFFB5E8h 0D6h +
std   +
dec dword ptr [ebx-37CC03B6h]  +
call sub_42C3AF  +
mov eax offset unk_469AFC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469B30 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
pushf   +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469B70 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469F40 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469F7C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_469FD4 +
jmp loc_42D66E  +
***
mov ecx [ebp-10h] +
jmp sub_42AC0F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A008 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A064 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A088 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A0B4 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A0E0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A10C +
jmp loc_42D66E  +
***
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A19C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A1C8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-124h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A238 +
jmp loc_42D66E  +
***
mov eax [ebp-0E8h] +
lea ecx [ebp-0C8h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-0E0h] +
jmp sub_40B7F0  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dl [eax+33FFFFFEh] +
enter 0FFFFADE8h 0CEh +
std   +
dec dword ptr [ebx-37CC07B6h]  +
call sub_42C3AF  +
mov eax offset unk_46A348 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A3E8 +
jmp loc_42D66E  +
***
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C8h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A440 +
jmp loc_42D66E  +
***
lea ecx [ebp-18h] +
jmp loc_408600  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A4D8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A558 +
jmp loc_42D66E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
lea ecx [ebp-48h] +
lea ecx [ebp-2Ch] +
push eax  +
lea ecx [ebp-1Ch] +
jmp loc_4107F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A5C8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A0E0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A660 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A694 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A0E0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A6C0 +
jmp loc_42D66E  +
***
lea ecx [ebp-3Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A6EC +
jmp loc_42D66E  +
***
mov ecx [ebp-14h] +
jmp sub_40F750  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A720 +
jmp loc_42D66E  +
***
lea ecx [ebp-50h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A74C +
jmp loc_42D66E  +
***
lea ecx [ebp-60h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A790 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A064 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A0B4 +
jmp loc_42D66E  +
***
lea ecx [ebp-18h] +
jmp sub_40E7A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A7D4 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A810 +
jmp loc_42D66E  +
***
lea ecx [ebp-24h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A868 +
jmp loc_42D66E  +
***
lea ecx [ebp-20h] +
push eax  +
lea ecx [ebp-18h] +
jmp loc_4107F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A89C +
jmp loc_42D66E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A8D8 +
jmp loc_42D66E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp sub_40E7A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A904 +
jmp loc_42D66E  +
***
lea ecx [ebp-1Ch] +
push eax  +
mov eax [ebp-20h] +
mov ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4107F0  +
***
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46A9D8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AA04 +
jmp loc_42D66E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AA6C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AAC0 +
jmp loc_42D66E  +
***
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AAFC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AB28 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-100h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AB78 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
movs   +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46ACD8 +
jmp loc_42D66E  +
***
popa   +
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dh [ebp+edi*8-1] +
push dword ptr [ebx]  +
enter 0FFFFD4E8h 0C3h +
std   +
dec dword ptr [ebx-37CC03B6h]  +
call sub_42C3AF  +
mov eax offset unk_46AD90 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46ADDC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AE30 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AE64 +
jmp loc_42D66E  +
***
push eax  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AE90 +
jmp loc_42D66E  +
***
lea ecx [ebp+0Ch] +
jmp sub_410C60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AEBC +
jmp loc_42D66E  +
***
lea ecx [ebp+14h] +
lea ecx [ebp+10h] +
jmp sub_410C60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AEE8 +
jmp loc_42D66E  +
***
lea ecx [ebp+8] +
jmp sub_410C60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AF1C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AF48 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46AFC0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B040 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B0C0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B138 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B1B8 +
jmp loc_42D66E  +
***
or esp edi +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
pushf   +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B1F8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B298 +
jmp loc_42D66E  +
***
cld   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
pushf   +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-10h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B310 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B3B8 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B428 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B4A0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B508 +
jmp loc_42D66E  +
***
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B5B4 +
jmp loc_42D66E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 20h +
jmp loc_4195B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B5E0 +
jmp loc_42D66E  +
***
lea ecx [ebp-3Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B634 +
jmp loc_42D66E  +
***
lea ecx [ebp-50h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B668 +
jmp loc_42D66E  +
***
lea ecx [ebp-5Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B6AC +
jmp loc_42D66E  +
***
lea ecx [ebp-18h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B6F0 +
jmp loc_42D66E  +
***
lea ecx [ebp-1Ch] +
push eax  +
lea ecx [ebp-18h] +
jmp loc_4107F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B71C +
jmp loc_42D66E  +
***
lea ecx [ebp-30h] +
push eax  +
mov eax [ebp-20h] +
mov ecx [ebp-24h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp loc_4107F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-128h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B758 +
jmp loc_42D66E  +
***
lea ecx [ebp-20h] +
push eax  +
lea ecx [ebp-18h] +
jmp loc_4107F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A0h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B7B4 +
jmp loc_42D66E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-34h] +
lea ecx [ebp-1Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B7F0 +
jmp loc_42D66E  +
***
lea ecx [ebp-28h] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B868 +
jmp loc_42D66E  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B8C8 +
jmp loc_42D66E  +
***
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov bl [eax+33FFFFAFh] +
enter 0FFFFAEE8h 0BAh +
std   +
dec dword ptr [ebx-37CC07B6h]  +
call sub_42C3AF  +
mov eax offset unk_46B940 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B99C +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dl [ecx+edi*8-37CC0001h] +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46B9D0 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov bh ds:0C833FFFFh[edi*8] +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BA04 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-118h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BA60 +
jmp loc_42D66E  +
***
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov cl [edi+edi*8-1] +
push dword ptr [ebx]  +
enter 0FFFFC2E8h 0B8h +
std   +
dec dword ptr [ebx-37CC03B6h]  +
call sub_42C3AF  +
mov eax offset unk_46BAD0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BB24 +
jmp loc_42D66E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BB8C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BBB8 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov bl [ebp+edi*8-37CC0001h] +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BBF4 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BC28 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-384h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BC58 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dl [edi+ebx*8-37CC0001h] +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BD00 +
jmp loc_42D66E  +
***
lea ecx [ebp-280h] +
lea ecx [ebp-230h] +
lea ecx [ebp-224h] +
jmp loc_406120  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5F8h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BD38 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-27Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BE18 +
jmp loc_42D66E  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
jmp sub_4091A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BEC8 +
jmp loc_42D66E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BF40 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov bl [eax+33FFFFFDh] +
enter 0FFFFB9E8h 0B3h +
std   +
dec dword ptr [ebx-37CC07B6h]  +
call sub_42C3AF  +
mov eax offset unk_46BF6C +
jmp loc_42D66E  +
***
push ecx  +
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov ch [ebp+edi*8-37CC0001h] +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BFC0 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46BFEC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C020 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C05C +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C0A8 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov ch [ebx+edi*8-1] +
push dword ptr [ebx]  +
enter 0FFFFEDE8h 0B1h +
std   +
dec dword ptr [ebx-37CC03B6h]  +
call sub_42C3AF  +
mov eax offset unk_46C0DC +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C128 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C198 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A0h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C1D4 +
jmp loc_42D66E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C218 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30Ch] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C258 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-274h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C300 +
jmp loc_42D66E  +
***
sti   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov cl [eax+33FFFFFEh] +
enter 0FFFFC1E8h 0AEh +
std   +
dec dword ptr [ebx-37CC07B6h]  +
call sub_42C3AF  +
mov eax offset unk_46C348 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-8] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C3B8 +
jmp loc_42D66E  +
***
lea ecx [ebp-10h] +
jmp sub_42AC0F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C464 +
jmp loc_42D66E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46C5E4 +
jmp loc_42D66E  +
***
lea ecx [ebp-3Ch] +
jmp loc_431021  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_42C3AF  +
mov ecx [edx-4] +
xor ecx eax +
call sub_42C3AF  +
mov eax offset unk_46CAC4 +
jmp loc_42D66E  +
***
mov eax dword_4706F8 +
mov ecx offset dword_4706F8 +
push dword ptr [eax+4]  +
push offset dword_4706F8  +
call loc_407220  +
push 2Ch  +
push dword_4706F8  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
mov eax dword_470714 +
mov ecx offset dword_470714 +
push dword ptr [eax+4]  +
push offset dword_470714  +
call loc_407220  +
push 2Ch  +
push dword_470714  +
call sub_42CA5C  +
add esp 8 +
retn   +
***
push ecx  +
push esi  +
call sub_42CA5C  +
add esp 8 +
mov dword_470704 0 +
mov dword_470708 0 +
mov dword_47070C 0 +
pop esi  +
retn   +
***
push offset dword_470298  +
mov ecx offset dword_470298 +
call loc_4087E0  +
retn   +
***
mov edx dword_46E9B4 +
cmp edx 8 +
jb loc_4516F0  +
mov ecx dword_46E9A0 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4516E6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46E9B0 0 +
mov dword_46E9B4 7 +
mov word ptr dword_46E9A0 ax +
retn   +
***
push (offset dword_4086AC+4)  +
push 14h  +
push 34h  +
push offset unk_4702A0  +
call sub_42CAA3  +
retn   +
***
mov edx dword_46E9CC +
cmp edx 8 +
jb loc_451780  +
mov ecx dword_46E9B8 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451776  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46E9C8 0 +
mov dword_46E9CC 7 +
mov word ptr dword_46E9B8 ax +
retn   +
***
push offset dword_470724  +
mov ecx offset dword_470724 +
call loc_4087E0  +
retn   +
***
mov edx dword_46EA44 +
cmp edx 8 +
jb loc_4517F0  +
mov ecx dword_46EA30 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4517E6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA40 0 +
mov dword_46EA44 7 +
mov word ptr dword_46EA30 ax +
retn   +
***
mov edx dword_46E9E4 +
cmp edx 8 +
jb loc_451850  +
mov ecx dword_46E9D0 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451846  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46E9E0 0 +
mov dword_46E9E4 7 +
mov word ptr dword_46E9D0 ax +
retn   +
***
mov edx dword_46EA2C +
cmp edx 8 +
jb loc_4518B0  +
mov ecx dword_46EA18 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4518A6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA28 0 +
mov dword_46EA2C 7 +
mov word ptr dword_46EA18 ax +
retn   +
***
mov edx dword_46E9FC +
cmp edx 8 +
jb loc_451910  +
mov ecx dword_46E9E8 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451906  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46E9F8 0 +
mov dword_46E9FC 7 +
mov word ptr dword_46E9E8 ax +
retn   +
***
mov edx dword_46EA14 +
cmp edx 8 +
jb loc_451970  +
mov ecx dword_46EA00 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451966  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA10 0 +
mov dword_46EA14 7 +
mov word ptr dword_46EA00 ax +
retn   +
***
mov ecx [eax] +
push eax  +
mov dword_4706BC ecx +
call sub_42C3AA  +
mov eax dword_4706BC +
add esp 4 +
test eax eax +
jnz loc_4519A0  +
retn   +
***
mov edx dword_46EA5C +
cmp edx 8 +
jb loc_451A00  +
mov ecx dword_46EA48 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_4519F6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA58 0 +
mov dword_46EA5C 7 +
mov word ptr dword_46EA48 ax +
retn   +
***
mov edx dword_46EA74 +
cmp edx 8 +
jb loc_451A60  +
mov ecx dword_46EA60 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451A56  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA70 0 +
mov dword_46EA74 7 +
mov word ptr dword_46EA60 ax +
retn   +
***
mov edx dword_46EA8C +
cmp edx 8 +
jb loc_451AC0  +
mov ecx dword_46EA78 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451AB6  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EA88 0 +
mov dword_46EA8C 7 +
mov word ptr dword_46EA78 ax +
retn   +
***
jmp loc_41FBE0  +
***
mov edx dword_46EAA4 +
cmp edx 8 +
jb loc_451B30  +
mov ecx dword_46EA90 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451B26  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EAA0 0 +
mov dword_46EAA4 7 +
mov word ptr dword_46EA90 ax +
retn   +
***
mov edx dword_46EABC +
cmp edx 8 +
jb loc_451B90  +
mov ecx dword_46EAA8 +
lea edx ds:2[edx*2] +
mov eax ecx +
cmp edx 1000h +
jb loc_451B86  +
mov ecx [ecx-4] +
add edx 23h +
sub eax ecx +
add eax 0FFFFFFFCh +
cmp eax 1Fh +
ja sub_432491  +
push edx  +
push ecx  +
call sub_42CA5C  +
add esp 8 +
xor eax eax +
mov dword_46EAB8 0 +
mov dword_46EABC 7 +
mov word ptr dword_46EAA8 ax +
retn   +
***
mov ecx offset unk_46F46C +
jmp loc_42ACB8  +
***
mov ecx offset unk_46F464 +
jmp sub_4091A0  +
***
mov ecx offset unk_46F57D +
jmp loc_42BA89  +
***
mov ecx offset unk_46F60C +
jmp loc_42BEF1  +
***
push offset unk_46E010  +
call ds:VariantClear  +
retn   +
***
