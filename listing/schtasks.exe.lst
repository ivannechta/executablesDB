retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C0h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi offset aChange +
lea edi [ebp+var_90] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aRu +
lea edi [ebp+var_24] +
movs   +
movs   +
mov esi offset aRp +
lea edi [ebp+var_34] +
movs   +
movs   +
mov esi offset aTn +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aTr +
lea edi [ebp+var_2C] +
movs   +
movs   +
mov esi offset aSt +
lea edi [ebp+var_5C] +
movs   +
movs   +
mov esi offset aEt +
lea edi [ebp+var_44] +
movs   +
movs   +
mov esi offset aSd +
lea edi [ebp+var_C] +
movs   +
movs   +
mov esi offset aEd +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aDu +
lea edi [ebp+var_54] +
movs   +
movs   +
mov esi offset aIt +
lea edi [ebp+var_3C] +
movs   +
movs   +
mov esi offset aEnable +
lea edi [ebp+var_80] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+arg_4] +
mov esi offset aDisable +
lea edi [ebp+var_A0] +
movs   +
movs   +
mov ebx [ebp+arg_8] +
movs   +
movs   +
mov esi offset aRi +
lea edi [ebp+var_4C] +
movs   +
movs   +
mov esi offset aRl +
lea edi [ebp+var_64] +
movs   +
mov [ebp+var_B4] eax +
mov eax [ebp+arg_C] +
movs   +
mov [ebp+var_A4] eax +
mov [ebp+var_A8] 3Fh +
mov [ebp+var_BC] 73h +
mov [ebp+var_AC] 75h +
mov [ebp+var_B0] 70h +
mov [ebp+var_B8] 6Bh +
mov [ebp+var_C0] 7Ah +
mov esi offset aDelay +
lea edi [ebp+var_70] +
movs   +
movs   +
movs   +
push 8  +
mov edi offset aParser2 +
push edi  +
push ebx  +
call sub_1018B9C  +
and dword ptr [ebx+10h] 0 +
and dword ptr [ebx+14h] 0 +
lea eax [ebp+var_90] +
mov [ebx+20h] eax +
mov eax [ebp+var_A4] +
add eax 13E0h +
push 8  +
mov [ebx+2Ch] eax +
xor esi esi +
push edi  +
lea eax [ebx+50h] +
inc esi  +
push eax  +
mov dword ptr [ebx+8] 0Ah +
mov [ebx+18h] esi +
call sub_1018B9C  +
and dword ptr [ebx+64h] 0 +
lea eax [ebp+var_A8] +
mov [ebx+70h] eax +
mov eax [ebp+var_A4] +
add eax 13E4h +
push 8  +
mov [ebx+7Ch] eax +
push edi  +
lea eax [ebx+0A0h] +
push eax  +
mov dword ptr [ebx+58h] 0Ah +
mov [ebx+68h] esi +
mov dword ptr [ebx+60h] 20000h +
call sub_1018B9C  +
and dword ptr [ebx+0B4h] 0 +
lea eax [ebp+var_BC] +
push 8  +
mov [ebx+0C0h] eax +
push edi  +
lea eax [ebx+0F0h] +
push eax  +
mov [ebx+0A8h] esi +
mov [ebx+0B8h] esi +
mov dword ptr [ebx+0B0h] 100C0h +
call sub_1018B9C  +
and dword ptr [ebx+104h] 0 +
lea eax [ebp+var_AC] +
push 8  +
mov [ebx+110h] eax +
push edi  +
lea eax [ebx+140h] +
push eax  +
mov [ebx+0F8h] esi +
mov [ebx+108h] esi +
mov dword ptr [ebx+100h] 100C0h +
call sub_1018B9C  +
and dword ptr [ebx+15Ch] 0 +
and dword ptr [ebx+154h] 0 +
lea eax [ebp+var_B0] +
push 8  +
mov [ebx+160h] eax +
push edi  +
lea eax [ebx+190h] +
push eax  +
mov [ebx+148h] esi +
mov [ebx+158h] esi +
mov dword ptr [ebx+150h] 10010h +
call sub_1018B9C  +
and dword ptr [ebx+1A4h] 0 +
lea eax [ebp+var_24] +
push 8  +
mov [ebx+198h] esi +
mov [ebx+1B0h] eax +
mov [ebx+1A8h] esi +
mov dword ptr [ebx+1A0h] 10040h +
push edi  +
lea eax [ebx+1E0h] +
push eax  +
call sub_1018B9C  +
and dword ptr [ebx+1F4h] 0 +
lea eax [ebp+var_34] +
push 8  +
mov [ebx+200h] eax +
push edi  +
lea eax [ebx+2D0h] +
push eax  +
mov [ebx+1E8h] esi +
mov [ebx+1F8h] esi +
mov dword ptr [ebx+1F0h] 10010h +
call sub_1018B9C  +
and dword ptr [ebx+2E4h] 0 +
lea eax [ebp+var_5C] +
mov [ebx+2F0h] eax +
mov eax [ebp+var_A4] +
add eax 1F4h +
push 8  +
mov [ebx+2FCh] eax +
push edi  +
lea eax [ebx+320h] +
push eax  +
mov [ebx+2D8h] esi +
mov [ebx+2E8h] esi +
mov dword ptr [ebx+2E0h] 0C0h +
mov dword ptr [ebx+300h] 0FEh +
call sub_1018B9C  +
and dword ptr [ebx+334h] 0 +
lea eax [ebp+var_C] +
mov [ebx+340h] eax +
mov eax [ebp+var_A4] +
add eax 5ECh +
push 8  +
mov [ebx+34Ch] eax +
push edi  +
lea eax [ebx+370h] +
push eax  +
mov [ebx+328h] esi +
mov [ebx+338h] esi +
mov dword ptr [ebx+330h] 0C0h +
mov dword ptr [ebx+350h] 0FEh +
call sub_1018B9C  +
and dword ptr [ebx+384h] 0 +
lea eax [ebp+var_14] +
mov [ebx+390h] eax +
mov eax [ebp+var_A4] +
add eax 7E8h +
push 8  +
mov [ebx+39Ch] eax +
push edi  +
lea eax [ebx+410h] +
push eax  +
mov [ebx+378h] esi +
mov [ebx+388h] esi +
mov dword ptr [ebx+380h] 0C0h +
mov dword ptr [ebx+3A0h] 0FEh +
call sub_1018B9C  +
and dword ptr [ebx+424h] 0 +
lea eax [ebp+var_44] +
mov [ebx+430h] eax +
mov eax [ebp+var_A4] +
add eax 3F0h +
push 8  +
mov [ebx+43Ch] eax +
push edi  +
lea eax [ebx+460h] +
push eax  +
mov [ebx+418h] esi +
mov [ebx+428h] esi +
mov dword ptr [ebx+420h] 0C0h +
mov dword ptr [ebx+440h] 0FEh +
call sub_1018B9C  +
lea eax [ebp+var_B8] +
mov [ebx+480h] eax +
mov eax [ebp+var_A4] +
add eax 13ECh +
mov dword ptr [ebx+468h] 0Ah +
mov [ebx+478h] esi +
mov [ebx+48Ch] eax +
push 8  +
push edi  +
lea eax [ebx+4B0h] +
push eax  +
call sub_1018B9C  +
and dword ptr [ebx+4C4h] 0 +
lea eax [ebp+var_54] +
mov [ebx+4D0h] eax +
mov eax [ebp+var_A4] +
add eax 0BF0h +
push 8  +
mov [ebx+4DCh] eax +
push edi  +
lea eax [ebx+230h] +
push eax  +
mov [ebx+4B8h] esi +
mov [ebx+4C8h] esi +
mov dword ptr [ebx+4C0h] 0C0h +
mov dword ptr [ebx+4E0h] 0FEh +
call sub_1018B9C  +
and dword ptr [ebx+244h] 0 +
lea eax [ebp+var_1C] +
mov [ebx+250h] eax +
mov eax [ebp+var_A4] +
add eax 18h +
push 8  +
mov [ebx+25Ch] eax +
push edi  +
lea eax [ebx+280h] +
push eax  +
mov [ebx+238h] esi +
mov [ebx+248h] esi +
mov dword ptr [ebx+240h] 80000h +
mov dword ptr [ebx+260h] 0EEh +
call sub_1018B9C  +
and dword ptr [ebx+294h] 0 +
lea eax [ebp+var_2C] +
mov [ebx+2A0h] eax +
mov eax [ebp+var_A4] +
add eax 9E4h +
push 8  +
mov [ebx+2ACh] eax +
push edi  +
lea eax [ebx+3C0h] +
push eax  +
mov [ebx+288h] esi +
mov [ebx+298h] esi +
mov dword ptr [ebx+290h] 0C0h +
mov dword ptr [ebx+2B0h] 106h +
call sub_1018B9C  +
and dword ptr [ebx+3D0h] 0 +
and dword ptr [ebx+3D4h] 0 +
lea eax [ebp+var_3C] +
mov [ebx+3E0h] eax +
mov eax [ebp+var_A4] +
add eax 13E8h +
push 8  +
mov [ebx+3ECh] eax +
push edi  +
lea eax [ebx+500h] +
push eax  +
mov dword ptr [ebx+3C8h] 0Ah +
mov [ebx+3D8h] esi +
call sub_1018B9C  +
lea eax [ebp+var_80] +
mov [ebx+520h] eax +
mov eax [ebp+var_A4] +
add eax 13F0h +
push 8  +
mov [ebx+52Ch] eax +
push edi  +
lea eax [ebx+550h] +
push eax  +
mov dword ptr [ebx+508h] 0Ah +
mov [ebx+518h] esi +
call sub_1018B9C  +
lea eax [ebp+var_A0] +
mov [ebx+570h] eax +
mov eax [ebp+var_A4] +
mov dword ptr [ebx+558h] 0Ah +
mov [ebx+568h] esi +
add eax 13F4h +
push 8  +
mov [ebx+57Ch] eax +
push edi  +
lea eax [ebx+5A0h] +
push eax  +
call sub_1018B9C  +
lea eax [ebp+var_C0] +
mov [ebx+5C0h] eax +
mov eax [ebp+var_A4] +
add eax 13F8h +
push 8  +
mov [ebx+5CCh] eax +
push edi  +
lea eax [ebx+5F0h] +
push eax  +
mov dword ptr [ebx+5A8h] 0Ah +
mov [ebx+5B8h] esi +
call sub_1018B9C  +
mov [ebx+5F8h] esi +
lea eax [ebp+var_4C] +
mov [ebx+610h] eax +
mov eax [ebp+var_A4] +
mov [ebx+608h] esi +
mov dword ptr [ebx+600h] 0C0h +
and dword ptr [ebx+604h] 0 +
add eax 0DECh +
push 8  +
mov [ebx+61Ch] eax +
push edi  +
lea eax [ebx+640h] +
push eax  +
mov dword ptr [ebx+620h] 0FEh +
call sub_1018B9C  +
mov [ebx+648h] esi +
lea eax [ebp+var_64] +
mov [ebx+660h] eax +
mov eax [ebp+var_A4] +
mov [ebx+658h] esi +
and dword ptr [ebx+65Ch] 0 +
mov dword ptr [ebx+650h] 0C0h +
and dword ptr [ebx+654h] 0 +
add eax 11E4h +
push 8  +
mov [ebx+66Ch] eax +
push edi  +
lea eax [ebx+690h] +
push eax  +
mov dword ptr [ebx+670h] 0FEh +
call sub_1018B9C  +
mov edi [ebp+var_A4] +
mov [ebx+698h] esi +
lea eax [ebp+var_70] +
mov [ebx+6B0h] eax +
xor eax eax +
push eax  +
push ebx  +
push 16h  +
push eax  +
push [ebp+var_B4]  +
mov [ebx+6A8h] esi +
push [ebp+arg_0]  +
mov dword ptr [ebx+6A0h] 0C0h +
mov [ebx+6A4h] eax +
lea ecx [edi+0FE8h] +
mov [ebx+6BCh] ecx +
mov dword ptr [ebx+6C0h] 0FEh +
call sub_101AF46  +
test eax eax +
jnz loc_100389D  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax esi +
jmp loc_10038A6  +
and dword ptr [edi+13FCh] 0 +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
xor eax eax +
inc edi  +
mov [ebp+var_1C] eax +
cmp [esi+4] eax +
jz loc_1003960  +
mov ebx 1FCh +
cmp [esi+10h] eax +
jnz loc_10038FF  +
push ebx  +
call sub_1018520  +
mov [esi+10h] eax +
test eax eax +
jnz loc_10038FF  +
call sub_1018081  +
xor eax eax +
inc eax  +
jmp loc_1003A9F  +
add esi 14h +
cmp dword ptr [esi] 0 +
jnz loc_1003925  +
mov eax [ebp+arg_4] +
push ebx  +
mov [eax+4] edi +
call sub_1018520  +
mov [esi] eax +
test eax eax +
jnz loc_1003925  +
call sub_1018081  +
mov eax edi +
jmp loc_1003A9F  +
mov eax [ebp+arg_8] +
xor ecx ecx +
cmp [eax+15Ch] ecx +
jz loc_1003957  +
cmp [eax+16Ch] ecx +
jz loc_1003957  +
push ecx  +
push edi  +
push offset String2  +
push dword ptr [esi]  +
call sub_1018387  +
test eax eax +
jnz loc_100395D  +
push ebx  +
push esi  +
call sub_1018894  +
test eax eax +
jz loc_1003919  +
mov eax [ebp+arg_4] +
mov [eax+4] edi +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_8] +
cmp [eax+33Ch] edi +
jnz loc_1003983  +
lea eax [ebp+var_1C] +
push eax  +
push edi  +
push [ebp+arg_C]  +
lea eax [esi+5ECh] +
push eax  +
call sub_100C267  +
cmp eax edi +
jz loc_100391E  +
mov eax [ebp+arg_8] +
cmp [eax+38Ch] edi +
jnz loc_10039A6  +
push edi  +
push [ebp+arg_C]  +
lea eax [esi+7E8h] +
push eax  +
call sub_100C2F6  +
cmp eax edi +
jz loc_100391E  +
mov ecx [ebp+arg_8] +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
cmp [ecx+38Ch] eax +
jz loc_10039E5  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [esi+7E8h] +
push eax  +
call sub_100B8E4  +
cmp eax edi +
jz loc_100391E  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+33Ch] 0 +
jz loc_1003A2B  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [esi+5ECh] +
push eax  +
call sub_100B8E4  +
cmp eax edi +
jnz loc_1003A2B  +
push 0B1h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100391E  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+38Ch] 0 +
jz loc_1003A5C  +
mov ecx [ebp+var_C] +
cmp word ptr [ebp+var_8] cx +
jnz loc_1003A53  +
mov ecx [ebp+var_10] +
cmp word ptr [ebp+var_4] cx +
jb loc_1003A55  +
jnz loc_1003A5C  +
mov cx word ptr [ebp+var_14] +
cmp word ptr [ebp+var_18] cx +
jnb loc_1003A5C  +
push 9Eh  +
jmp loc_1003A12  +
cmp [eax+2ECh] edi +
jnz loc_1003A78  +
lea eax [esi+1F4h] +
push eax  +
call sub_100BA3C  +
cmp eax edi +
jnz loc_1003A78  +
push 6Fh  +
jmp loc_1003A12  +
mov eax [ebp+arg_8] +
cmp [eax+42Ch] edi +
jnz loc_1003A9D  +
add esi 3F0h +
push esi  +
call sub_100BA3C  +
cmp eax edi +
jnz loc_1003A9D  +
push 0ACh  +
jmp loc_1003A12  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jz loc_1003B2B  +
push ebx  +
lea ebx [esi+0Ch] +
mov eax [ebx] +
push edi  +
test eax eax +
jz loc_1003ADD  +
cmp word ptr [eax] 0 +
jz loc_1003ADD  +
push eax  +
call sub_10185C9  +
mov ecx [ebx] +
test eax eax +
jz loc_1003ADD  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1003AD6  +
lea edi [esi+14h] +
mov eax [edi] +
test eax eax +
jz loc_1003AFF  +
cmp word ptr [eax] 0 +
jz loc_1003AFF  +
push eax  +
call sub_10185C9  +
mov ecx [edi] +
test eax eax +
jz loc_1003AFF  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1003AF8  +
lea eax [esi+4] +
push eax  +
call sub_1018819  +
lea eax [esi+10h] +
push eax  +
call sub_1018819  +
push edi  +
call sub_1018819  +
lea eax [esi+8] +
push eax  +
call sub_1018819  +
push ebx  +
call sub_1018819  +
and dword ptr [esi] 0 +
pop edi  +
pop ebx  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jge loc_1003B49  +
pop ebp  +
jmp sub_10172E7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1003B64  +
push eax  +
call ds:SysFreeString  +
mov esi [esi+4] +
test esi esi +
jz loc_1003B72  +
push esi  +
call sub_10172D7  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysAllocString  +
test eax eax +
jnz loc_1003B9F  +
cmp [ebp+arg_0] eax +
jz loc_1003B9F  +
push 8007000Eh  +
call sub_10172E7  +
jmp loc_1003BA8  +
push 8  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
adc eax offset VariantClear +
push eax  +
call sub_1003B38  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ebp+8] eax +
push offset dword_1021100  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1003BF9  +
xor eax eax +
jmp loc_1003C18  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1003C07  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi] +
test eax eax +
jz loc_1003C13  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call ds:SysFreeString  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
xor ecx ecx +
cmp [edi+13E4h] ecx +
jz loc_1003C73  +
cmp [ebp+arg_0] 3 +
jbe loc_1003C6A  +
push 105h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
jmp loc_1003F8D  +
jnz loc_1003C73  +
xor eax eax +
jmp loc_1003F8D  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_4] +
inc ebx  +
cmp [esi+0BCh] ebx +
jnz loc_1003C8A  +
or [edi+1404h] bx +
cmp [esi+10Ch] ebx +
jnz loc_1003C9A  +
or word ptr [edi+1404h] 2 +
cmp [esi+1ACh] ebx +
jnz loc_1003CAA  +
or word ptr [edi+1404h] 8 +
cmp [esi+15Ch] ebx +
jnz loc_1003CBA  +
or word ptr [edi+1404h] 4 +
cmp [esi+1FCh] ebx +
jnz loc_1003CCA  +
or word ptr [edi+1404h] 10h +
cmp [esi+1ACh] ecx +
jnz loc_1003CEE  +
cmp [edi+8] ecx +
jnz loc_1003CEE  +
push 1FCh  +
call sub_1018520  +
mov [edi+8] eax +
test eax eax +
jz loc_1003D82  +
xor ecx ecx +
cmp [esi+1FCh] ecx +
jnz loc_1003D02  +
mov eax [ebp+arg_C] +
mov [eax] ebx +
cmp [edi+0Ch] ecx +
jnz loc_1003D4E  +
jmp loc_1003D0F  +
cmp [esi+20Ch] ecx +
jnz loc_1003D22  +
mov eax [ebp+arg_C] +
mov [eax] ebx +
push 1FCh  +
call sub_1018520  +
mov [edi+0Ch] eax +
test eax eax +
jnz loc_1003D4C  +
jmp loc_1003D82  +
push ecx  +
push ebx  +
push offset String2  +
push dword ptr [edi+0Ch]  +
call sub_10182D1  +
test eax eax +
jnz loc_1003D4C  +
push 1FCh  +
lea eax [edi+0Ch] +
push eax  +
call sub_1018894  +
test eax eax +
jz loc_1003D82  +
mov eax [ebp+arg_C] +
mov [eax] ebx +
xor ecx ecx +
cmp [esi+15Ch] ecx +
jnz loc_1003D63  +
mov eax [ebp+arg_C] +
mov [eax+4] ebx +
cmp [edi+14h] ecx +
jnz loc_1003DA7  +
jmp loc_1003D71  +
cmp [esi+16Ch] ecx +
jnz loc_1003D8C  +
mov eax [ebp+arg_C] +
mov [eax+4] ebx +
push 1FCh  +
call sub_1018520  +
mov [edi+14h] eax +
test eax eax +
jnz loc_1003DA5  +
call sub_1018081  +
jmp loc_1003F74  +
push ecx  +
push ebx  +
push offset String2  +
push dword ptr [edi+14h]  +
call sub_10182D1  +
test eax eax +
jnz loc_1003DA5  +
mov eax [ebp+arg_C] +
mov [eax+4] ebx +
xor ecx ecx +
xor eax eax +
cmp [esi+1ACh] ebx +
jz loc_1003E09  +
cmp [esi+1FCh] ebx +
jz loc_1003E09  +
cmp [esi+29Ch] ebx +
jz loc_1003E09  +
cmp [esi+2ECh] ebx +
jz loc_1003E09  +
cmp [esi+33Ch] ebx +
jz loc_1003E09  +
cmp [esi+38Ch] ebx +
jz loc_1003E09  +
cmp [esi+3DCh] ebx +
jz loc_1003E09  +
cmp [esi+42Ch] ebx +
jz loc_1003E09  +
cmp [esi+47Ch] ebx +
jz loc_1003E09  +
cmp [esi+4CCh] ebx +
jz loc_1003E09  +
cmp [esi+5BCh] ebx +
jz loc_1003E09  +
cmp [esi+60Ch] ebx +
jnz loc_1003E0B  +
mov eax ebx +
cmp [edi+13FCh] ecx +
jnz loc_1003E25  +
cmp [esi+6ACh] ebx +
jz loc_1003E23  +
cmp [esi+65Ch] ebx +
jnz loc_1003E25  +
mov eax ebx +
cmp eax ecx +
jnz loc_1003E49  +
cmp [esi+51Ch] ecx +
jnz loc_1003E43  +
cmp [esi+56Ch] ecx +
jnz loc_1003E43  +
push 83h  +
jmp loc_1003F60  +
mov eax [ebp+arg_C] +
mov [eax+8] ebx +
mov eax [esi+10Ch] +
cmp eax ecx +
jnz loc_1003E65  +
cmp [esi+15Ch] ebx +
jnz loc_1003E65  +
push 206h  +
jmp loc_1003F60  +
cmp [esi+0BCh] ecx +
jnz loc_1003E71  +
cmp eax ebx +
jz loc_1003EAA  +
cmp [esi+1ACh] ebx +
jnz loc_1003E9A  +
push dword ptr [edi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_1003E98  +
cmp dword ptr [edi+13E8h] 0 +
jz loc_1003E98  +
push 0AEh  +
jmp loc_1003F60  +
xor ecx ecx +
cmp [esi+0BCh] ecx +
jnz loc_1003EB4  +
cmp [esi+10Ch] ebx +
jnz loc_1003EB4  +
push 81h  +
jmp loc_1003F60  +
mov eax [esi+4CCh] +
cmp eax ebx +
jnz loc_1003ED0  +
cmp [esi+42Ch] ebx +
jnz loc_1003ED0  +
push 0B5h  +
jmp loc_1003F60  +
cmp [esi+47Ch] ebx +
jnz loc_1003EEB  +
cmp eax ecx +
jnz loc_1003EEB  +
cmp [esi+42Ch] ecx +
jnz loc_1003EEB  +
push 9CCh  +
jmp loc_1003F60  +
cmp [edi+13F0h] ecx +
jz loc_1003F02  +
cmp [edi+13F4h] ecx +
jz loc_1003F02  +
push 9CDh  +
jmp loc_1003F60  +
cmp [edi+13FCh] ecx +
jnz loc_1003F7A  +
cmp [esi+65Ch] ebx +
jnz loc_1003F30  +
push dword ptr [esi+66Ch]  +
call sub_1005D7B  +
mov [edi+1400h] eax +
test eax eax +
jnz loc_1003F2E  +
push 10Ah  +
jmp loc_1003F60  +
xor ecx ecx +
cmp [esi+6ACh] ebx +
jnz loc_1003F7A  +
lea eax [edi+0FE8h] +
cmp [eax] cx +
jz loc_1003F7A  +
push ecx  +
push eax  +
call sub_10182B0  +
cmp eax 7 +
jnz loc_1003F5B  +
push 3Ah  +
pop eax  +
cmp ax [edi+0FF0h] +
jz loc_1003F78  +
push 108h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax ebx +
jmp loc_1003F8B  +
xor ecx ecx +
push ecx  +
push esi  +
push [ebp+arg_C]  +
push edi  +
call sub_10038BC  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1003FAD  +
cmp ecx 7FFFFFFFh +
jbe loc_1003FB2  +
mov eax 80070057h +
test eax eax +
jl loc_1003FEF  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1003FDF  +
cmp eax esi +
ja loc_1003FDF  +
jnz loc_1003FEA  +
jmp loc_1003FE4  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
cmp [ebp+arg_0] eax +
jz loc_100402E  +
push eax  +
call ds:SysFreeString  +
cmp [ebp+arg_0] 0 +
jz loc_100402B  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_100402E  +
push 8007000Eh  +
call loc_1003BC9  +
and dword ptr [esi] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
xor esi esi +
mov [ebp+8] esi +
mov dword ptr [ebp-4] 1 +
lea eax [ebp+8] +
push eax  +
push esi  +
call ds:GetErrorInfo  +
cmp eax esi +
jl loc_10040BE  +
cmp [ebp+8] esi +
jz loc_10040BE  +
mov [ebp-10h] esi +
mov byte ptr [ebp-4] 2 +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax esi +
jl loc_10040B1  +
mov eax [ebp-10h] +
cmp [eax] si +
jz loc_10040B1  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_100637A  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
xor eax eax +
mov dword ptr [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_28] ecx +
mov [ebp+var_1C] esi +
mov [ebp+NumberOfCharsRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
cmp ecx esi +
jnz loc_1004123  +
push 57h  +
call ds:SetLastError  +
call sub_1018081  +
xor eax eax +
jmp loc_100429C  +
mov edi ds:GetStdHandle +
push ebx  +
push 0FFFFFFF6h  +
call edi  +
mov ebx eax +
mov [ebp+hConsoleHandle] ebx +
cmp ebx esi +
jz loc_1004265  +
lea eax [ebp+dwMode] +
push eax  +
push ebx  +
call ds:GetConsoleMode  +
push 1  +
push ebx  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1004265  +
mov eax [ebp+var_28] +
mov esi ds:WriteConsoleW +
mov [ebp+lpBuffer] eax +
mov ebx offset aC +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1004259  +
mov ax word ptr [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1004269  +
cmp ax 8 +
jnz loc_1004217  +
cmp [ebp+var_1C] 0 +
jz loc_1004168  +
push 8  +
push ebx  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call esi  +
push 0  +
push ebx  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call esi  +
push 8  +
push ebx  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call esi  +
dec [ebp+var_1C]  +
sub [ebp+lpBuffer] 2 +
jmp loc_1004168  +
mov ecx [ebp+arg_4] +
dec ecx  +
push 0  +
cmp [ebp+var_1C] ecx +
jnz loc_1004239  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
push offset Buffer  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call esi  +
jmp loc_1004168  +
mov ecx [ebp+lpBuffer] +
mov [ecx] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push ecx  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call esi  +
inc [ebp+var_1C]  +
add [ebp+lpBuffer] 2 +
jmp loc_1004168  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_100429B  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_1C] +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_28] +
cmp eax ecx +
jb loc_1004292  +
xor eax eax +
mov [edx+ecx*2-2] ax +
jmp loc_1004298  +
xor ecx ecx +
mov [edx+eax*2] cx +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 858h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi 1FCh +
mov ecx edi +
lea eax [ebp+String] +
xor ebx ebx +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10042D7  +
mov ecx edi +
lea eax [ebp+var_858] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10042E5  +
push 32h  +
pop ecx  +
lea eax [ebp+var_68] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10042F1  +
lea eax [ebp+var_68] +
push eax  +
call sub_100B18A  +
test eax eax +
jz loc_1004309  +
xor eax eax +
inc eax  +
jmp loc_1004369  +
push esi  +
mov esi offset dword_1024000 +
cmp dword_1024000 ebx +
jz loc_1004366  +
mov eax [esi] +
mov ecx eax +
sub ecx 59Bh +
jz loc_100432F  +
dec ecx  +
dec ecx  +
jz loc_100432F  +
push eax  +
call sub_1019FBD  +
jmp loc_1004350  +
lea ecx [ebp+var_68] +
push ecx  +
push eax  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
add esi 4 +
cmp [esi] ebx +
jnz loc_1004317  +
xor eax eax +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_10043A8  +
mov ecx [eax] +
push esi  +
push offset dword_1001508  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_10043E7  +
mov ecx [eax] +
push esi  +
push offset dword_1001518  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_1004426  +
mov ecx [eax] +
push esi  +
push offset dword_1001528  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
cmp eax [ebp+arg_0] +
jz loc_100444E  +
push [ebp+arg_0]  +
push ecx  +
call sub_1003BE8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1003B52  +
test [ebp+arg_0] 1 +
jz loc_1004471  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
xor ebx ebx +
xor edi edi +
mov [ebp-10h] ebx +
mov [ebp-4] ebx +
mov eax [ebp+8] +
add eax 0FE8h +
mov [ebp+8] eax +
cmp [eax] bx +
jz loc_1004562  +
mov esi [ebp+0Ch] +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_1004562  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_101437B  +
mov edi eax +
cmp edi ebx +
jl loc_1004562  +
mov eax [ebp-14h] +
sub eax ebx +
jz loc_100453B  +
sub eax 8 +
jz loc_1004512  +
dec eax  +
jz loc_10044E9  +
xor edi edi +
jmp loc_1004562  +
push dword ptr [esi]  +
lea ecx [ebp+8] +
call sub_10043FA  +
mov byte ptr [ebp-4] 3 +
mov eax [ebp+8] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov edi eax +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call sub_1006A4C  +
jmp loc_1004562  +
push dword ptr [esi]  +
lea ecx [ebp+8] +
call sub_10043BB  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp+8] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov edi eax +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call sub_1006A4C  +
jmp loc_1004562  +
push dword ptr [esi]  +
lea ecx [ebp+8] +
call sub_100437C  +
mov byte ptr [ebp-4] 1 +
mov eax [ebp+8] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
mov edi eax +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call sub_1006A4C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] 1 +
cmp [esi+13E8h] edi +
jz loc_10045B3  +
push edi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_10045BF  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+1ACh] 1 +
jnz loc_10045E8  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_10045D8  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_10045E8  +
mov ecx [ebp+arg_14] +
xor eax eax +
inc eax  +
mov [ecx] eax +
mov [ebp+var_C] eax +
jmp loc_10046A3  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+1ACh] 1 +
jnz loc_1004601  +
push dword ptr [esi+8]  +
call sub_10060BA  +
mov ecx [ebp+arg_14] +
mov [ecx] eax +
mov eax [ebp+arg_14] +
cmp [eax] edi +
jnz loc_10046A3  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1004620  +
mov eax [esi+8] +
mov [ebx] eax +
jmp loc_1004640  +
mov eax [ebp+arg_8] +
cmp [eax+1ACh] edi +
jnz loc_100463B  +
mov eax [ebp+lpString] +
mov [ebx] eax +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 1 +
jmp loc_1004640  +
mov eax [ebp+arg_10] +
mov [eax] edi +
mov eax [ebp+arg_4] +
cmp [eax] edi +
jnz loc_1004658  +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_1C] +
mov [ecx] eax +
mov [ebp+var_4] 1 +
jmp loc_10046A3  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+1FCh] 1 +
mov eax [ebp+arg_14] +
jnz loc_100469C  +
cmp [eax] edi +
jnz loc_1004693  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_1004693  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_10046A3  +
mov eax [ebp+arg_4] +
cmp [eax] edi +
jz loc_10046A3  +
jmp loc_10046A0  +
cmp [eax] edi +
jnz loc_10046A3  +
mov [ebp+var_4] edi +
mov eax [ebp+arg_10] +
mov eax [eax] +
cmp eax edi +
jz loc_10046CD  +
cmp [ebp+var_4] edi +
jnz loc_10046C0  +
push dword ptr [ebx]  +
call sub_10060BA  +
test eax eax +
jz loc_100482E  +
mov eax [ebp+arg_10] +
mov eax [eax] +
cmp eax edi +
jnz loc_10048AC  +
cmp [ebp+var_4] edi +
jz loc_1004789  +
cmp [ebp+var_C] edi +
jz loc_100477F  +
mov eax [ebp+arg_14] +
cmp [eax] edi +
jnz loc_100477F  +
push 1AAh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [esi+8]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+8]  +
call sub_10040D7  +
test eax eax +
jnz loc_1004738  +
push 75h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
jmp loc_10048BB  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
cmp eax 0FEh +
jbe loc_100474F  +
push 200h  +
jmp loc_100471C  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_1004769  +
mov eax [ebp+arg_14] +
mov dword ptr [eax] 1 +
jmp loc_10048A4  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_10048A4  +
mov eax [esi+8] +
jmp loc_1004782  +
mov eax [ebp+lpString] +
mov [ebx] eax +
jmp loc_10048A4  +
cmp eax edi +
jnz loc_10048AC  +
cmp [ebp+var_C] edi +
jz loc_100480E  +
mov eax [ebp+arg_14] +
cmp [eax] edi +
jnz loc_100480E  +
push 1AAh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [esi+8]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+8]  +
call sub_10040D7  +
test eax eax +
jz loc_100471A  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
cmp eax 0FEh +
ja loc_1004748  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_10047FC  +
mov eax [ebp+arg_14] +
mov dword ptr [eax] 1 +
jmp loc_1004813  +
push edi  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1004813  +
mov eax [esi+8] +
jmp loc_1004811  +
mov eax [ebp+lpString] +
mov [ebx] eax +
push edi  +
push dword ptr [ebx]  +
call sub_10182B0  +
test eax eax +
jz loc_10048AC  +
push dword ptr [ebx]  +
call sub_10060BA  +
test eax eax +
jnz loc_10048AC  +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [ebx]  +
call sub_10063A4  +
cmp eax 1 +
jz loc_1004730  +
cmp [ebp+var_8] edi +
jnz loc_10048AC  +
push dword ptr [ebx]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push edi  +
add eax 40h +
push 1  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [esi+0Ch]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_1018ECA  +
test eax eax +
jz loc_1004730  +
mov eax [esi+0Ch] +
cmp [eax] di +
jnz loc_10048A4  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov ecx [ebp+arg_1C] +
mov eax [esi+0Ch] +
mov [ecx] eax +
mov eax [ebp+arg_1C] +
cmp [eax] edi +
jnz loc_10048B9  +
mov dword ptr [eax] offset dword_1001448 +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
call __EH_prolog3  +
xor edi edi +
mov [ebp-14h] edi +
xor ecx ecx +
inc ecx  +
mov [ebp-4] ecx +
mov [ebp-1Ch] edi +
mov byte ptr [ebp-4] 3 +
mov [ebp-48h] edi +
mov [ebp-4Ch] edi +
mov [ebp-50h] edi +
mov [ebp-54h] edi +
mov [ebp-18h] edi +
mov byte ptr [ebp-4] 4 +
mov [ebp-10h] edi +
mov byte ptr [ebp-4] 5 +
mov eax [ebp+10h] +
mov eax [eax] +
lea esi [ebp-14h] +
push esi  +
push ecx  +
mov [ebp-24h] edi +
mov [ebp-38h] edi +
mov [ebp-3Ch] edi +
mov [ebp-44h] edi +
mov [ebp-40h] edi +
mov [ebp-58h] edi +
mov [ebp-20h] edi +
mov [ebp-28h] edi +
mov [ebp-2Ch] edi +
mov [ebp-34h] edi +
mov [ebp-30h] edi +
mov [ebp-5Ch] edi +
mov edx [eax] +
push eax  +
call dword ptr [edx+20h]  +
mov ebx eax +
cmp ebx edi +
jge loc_1004973  +
mov byte ptr [ebp-4] 4 +
mov esi ds:SysFreeString +
push dword ptr [ebp-10h]  +
call esi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-18h]  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100637A  +
mov eax ebx +
call __EH_epilog3  +
retn 0Ch  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1004939  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ebx eax +
cmp ebx edi +
jl loc_1004939  +
lea eax [ebp-50h] +
push eax  +
push dword ptr [ebp-18h]  +
call sub_10134E6  +
mov ebx eax +
cmp ebx edi +
jl loc_1004939  +
push dword ptr [ebp-18h]  +
mov esi ds:SysFreeString +
call esi  +
mov eax [ebp-1Ch] +
lea edx [ebp-18h] +
push edx  +
mov [ebp-18h] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov ebx eax +
cmp ebx edi +
jge loc_10049D5  +
mov byte ptr [ebp-4] 4 +
jmp loc_1004943  +
lea eax [ebp-54h] +
push eax  +
push dword ptr [ebp-18h]  +
call sub_10134E6  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_100447D  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
mov eax [ebp-50h] +
cmp eax edi +
jz loc_1004A03  +
mov [ebp-48h] eax +
mov eax [ebp-54h] +
cmp eax edi +
jz loc_1004A0D  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
push edi  +
push dword ptr [ebp-10h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1004A57  +
lea eax [ebp-58h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp-10h]  +
call sub_10133FF  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
push edi  +
push dword ptr [ebp-10h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1004AA5  +
lea eax [ebp-5Ch] +
push eax  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-10h]  +
call sub_10133FF  +
mov ebx eax +
cmp ebx edi +
jl loc_10049CC  +
mov ebx [ebp+8] +
cmp dword ptr [ebx+2ECh] 1 +
jz loc_1004ABE  +
cmp dword ptr [ebx+33Ch] 1 +
jnz loc_1004B64  +
cmp dword ptr [ebx+33Ch] 1 +
jnz loc_1004AE1  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
mov eax [ebp+0Ch] +
add eax 5ECh +
push eax  +
call sub_100B8E4  +
cmp dword ptr [ebx+2ECh] 1 +
jnz loc_1004B00  +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-44h] +
push eax  +
mov eax [ebp+0Ch] +
add eax 1F4h +
push eax  +
call sub_100A834  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-24h]  +
call sub_101428B  +
cmp eax edi +
mov [ebp+10h] eax +
jge loc_1004B51  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-10h]  +
call esi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-18h]  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100637A  +
mov eax [ebp+10h] +
jmp loc_100496B  +
mov eax [ebp-14h] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax edi +
mov [ebp+10h] eax +
jl loc_1004B1F  +
cmp dword ptr [ebx+38Ch] 1 +
jz loc_1004B7A  +
cmp dword ptr [ebx+42Ch] 1 +
jnz loc_1004C8B  +
cmp dword ptr [ebx+42Ch] 1 +
jnz loc_1004B99  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-34h] +
push eax  +
mov eax [ebp+0Ch] +
add eax 3F0h +
push eax  +
call sub_100A834  +
cmp dword ptr [ebx+38Ch] 1 +
jnz loc_1004BBC  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
mov eax [ebp+0Ch] +
add eax 7E8h +
push eax  +
call sub_100B8E4  +
xor eax eax +
cmp ax [ebp-20h] +
jnz loc_1004C03  +
mov [ebp-74h] ax +
mov [ebp-72h] ax +
mov [ebp-70h] ax +
mov [ebp-6Eh] ax +
mov [ebp-6Ch] ax +
mov [ebp-6Ah] ax +
mov [ebp-68h] ax +
mov [ebp-66h] ax +
lea eax [ebp-74h] +
push eax  +
call ds:GetLocalTime  +
movzx eax word ptr [ebp-74h] +
mov [ebp-20h] eax +
movzx eax word ptr [ebp-72h] +
mov [ebp-28h] eax +
movzx eax word ptr [ebp-6Eh] +
mov [ebp-2Ch] eax +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-20h]  +
call sub_101428B  +
cmp eax edi +
mov [ebp+10h] eax +
jl loc_1004B1F  +
mov eax [ebp-14h] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
cmp eax edi +
jge loc_1004C69  +
mov edi eax +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-10h]  +
call esi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-18h]  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100637A  +
mov eax edi +
jmp loc_100496B  +
cmp dword ptr [ebx+42Ch] 1 +
jnz loc_1004C8B  +
mov ebx [ebp+0Ch] +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebx+3F0h] +
push eax  +
call sub_100A834  +
jmp loc_1004C8E  +
mov ebx [ebp+0Ch] +
xor eax eax +
cmp ax [ebp-24h] +
jz loc_1004CED  +
cmp ax [ebp-20h] +
jz loc_1004CED  +
movzx eax word ptr [ebp-24h] +
movzx ecx word ptr [ebp-38h] +
imul eax eax +
add eax ecx +
movzx ecx word ptr [ebp-3Ch] +
imul eax eax +
movzx edx word ptr [ebp-28h] +
add eax ecx +
movzx ecx word ptr [ebp-20h] +
imul ecx ecx +
add ecx edx +
movzx edx word ptr [ebp-2Ch] +
imul ecx ecx +
add ecx edx +
cmp ecx eax +
jge loc_1004CED  +
push 9Eh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
or edi 0FFFFFFFFh +
jmp loc_1004C38  +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp-64h] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
lea eax [ebp-48h] +
push eax  +
push dword ptr [ebp-30h]  +
lea eax [ebx+3F0h] +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-44h]  +
push eax  +
lea eax [ebx+0BF0h] +
push eax  +
lea eax [ebx+0DECh] +
push eax  +
call sub_100C054  +
cmp eax edi +
jnz loc_1004CE5  +
cmp [ebp-48h] edi +
jz loc_1004D73  +
mov [ebp+0Ch] edi +
mov byte ptr [ebp-4] 6 +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp-48h]  +
call sub_10144B7  +
cmp eax edi +
mov [ebp+10h] eax +
jge loc_1004D57  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp+0Ch]  +
call esi  +
mov edi [ebp+10h] +
jmp loc_1004C38  +
mov eax [ebp-1Ch] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax edi +
mov [ebp+10h] eax +
jl loc_1004D46  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp+0Ch]  +
call esi  +
cmp [ebp-4Ch] edi +
jz loc_1004DB7  +
mov [ebp+8] edi +
mov byte ptr [ebp-4] 7 +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-4Ch]  +
call sub_10144B7  +
cmp eax edi +
mov [ebp+10h] eax +
jge loc_1004D9B  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp+8]  +
jmp loc_1004D4D  +
mov eax [ebp-1Ch] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax edi +
mov [ebp+10h] eax +
jl loc_1004D92  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp+8]  +
call esi  +
cmp [ebx+13ECh] edi +
jz loc_1004C38  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+30h]  +
cmp eax edi +
jl loc_1004C36  +
jmp loc_1004C38  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_1004E03  +
test esi esi +
jz loc_1004E03  +
push 1  +
mov ecx esi +
call sub_1004457  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_1004E20  +
call sub_1004DE0  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov esi [ebp+0Ch] +
xor ebx ebx +
push 3B4h  +
mov [ebp-0BF4h] eax +
mov [ebp-0BFCh] ebx +
lea eax [ebp-3C4h] +
push ebx  +
push eax  +
mov [ebp-0C0Ch] esi +
mov [ebp-0C00h] ebx +
mov [ebp-0C10h] ebx +
mov [ebp-0C14h] ebx +
mov [ebp-3C8h] ebx +
call memset  +
xor edi edi +
inc edi  +
mov [ebp-0C04h] edi +
mov [ebp-0C1Ch] ebx +
mov [ebp-0C18h] ebx +
mov [ebp-0BD8h] ebx +
mov [ebp-4] edi +
mov [ebp-0BD0h] ebx +
mov byte ptr [ebp-4] 3 +
mov [ebp-0BC8h] ebx +
mov byte ptr [ebp-4] 5 +
mov [ebp-0BC0h] ebx +
mov byte ptr [ebp-4] 7 +
mov [ebp-0BCCh] ebx +
mov byte ptr [ebp-4] 9 +
mov [ebp-0BD4h] ebx +
mov byte ptr [ebp-4] 0Bh +
mov [ebp-0BDCh] ebx +
mov byte ptr [ebp-4] 0Dh +
mov [ebp-0BC4h] ebx +
mov byte ptr [ebp-4] 0Fh +
mov [ebp-0BF8h] ebx +
mov byte ptr [ebp-4] 10h +
push 1F8h  +
lea eax [ebp-5C0h] +
push ebx  +
push eax  +
mov [ebp-5C4h] ebx +
call memset  +
add esp 18h +
mov ecx 100h +
lea eax [ebp-0BBCh] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004F18  +
call sub_101B2CE  +
mov [ebp-0C14h] eax +
cmp eax ebx +
jnz loc_1004FD1  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov byte ptr [ebp-4] 0Fh +
push ebx  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-0BC4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-0BDCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0BD4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-0BCCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0BC0h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0BC8h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0BD0h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0BD8h] +
call sub_100637A  +
mov eax edi +
call sub_10177AC  +
retn 0Ch  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-0BD8h] +
call sub_1004439  +
mov eax [ebp-0BD8h] +
cmp eax ebx +
jz loc_1004F44  +
mov [ebp-0BF0h] ebx +
mov byte ptr [ebp-4] 11h +
mov ecx [eax] +
lea edx [ebp-0BD0h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov byte ptr [ebp-4] 10h +
cmp eax ebx +
jge loc_1005025  +
push esi  +
push eax  +
call sub_100403A  +
jmp loc_1004F44  +
push ebx  +
lea eax [esi+18h] +
push eax  +
push dword ptr [ebp-0BD0h]  +
mov [ebp-0BF0h] eax +
lea eax [ebp-0C14h] +
push eax  +
call sub_100C69C  +
cmp eax ebx +
jnz loc_1005082  +
push dword ptr [ebp-0BF0h]  +
push 7Ah  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-3C8h] +
push 1DCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-3C8h] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1004F44  +
mov eax [ebp-0BD0h] +
mov ecx [eax] +
lea edx [ebp-0BC8h] +
push edx  +
push dword ptr [ebp-0BF0h]  +
push eax  +
call dword ptr [ecx+34h]  +
cmp eax ebx +
jl loc_1005019  +
mov eax [ebp+10h] +
cmp [eax+8] ebx +
mov eax [ebp-0BC8h] +
mov ecx [eax] +
jz loc_10052BA  +
lea edx [ebp-0BE8h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
jl loc_1005019  +
cmp [esi+13F0h] ebx +
jz loc_100519C  +
cmp [ebp-0BE8h] bx +
jz loc_10050EF  +
push dword ptr [ebp-0BF0h]  +
push 9C4h  +
jmp loc_10051BC  +
push 0FFFFFFFFh  +
mov eax [ebp-0BC8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
jge loc_10051EB  +
push dword ptr [ebp-0C0Ch]  +
push eax  +
call sub_100403A  +
mov byte ptr [ebp-4] 0Fh +
push ebx  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-0BC4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-0BDCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0BD4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-0BCCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0BC0h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0BC8h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0BD0h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0BD8h] +
call sub_100637A  +
xor eax eax +
inc eax  +
jmp loc_1004FC9  +
cmp [esi+13F4h] ebx +
jz loc_10051EB  +
cmp [ebp-0BE8h] bx +
jnz loc_10052B4  +
push dword ptr [ebp-0BF0h]  +
push 9C5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-3C8h] +
push 1DCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-3C8h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [ebp-0BF0h]  +
push 12Fh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-3C8h] +
push 1DCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-3C8h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-0BF8h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-0BC4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-0BDCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0BD4h] +
call sub_100637A  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-0BCCh] +
call sub_100637A  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0BC0h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0BC8h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0BD0h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0BD8h] +
call sub_100637A  +
xor eax eax +
jmp loc_1004FC9  +
push ebx  +
jmp loc_10050F1  +
lea edx [ebp-0BC0h] +
push edx  +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax ebx +
jl loc_1005019  +
xor eax eax +
mov [ebp-5C4h] ax +
mov eax [ebp-0BF4h] +
cmp [eax+1ACh] edi +
jnz loc_10052F5  +
mov eax [esi+8] +
mov [ebp-0C00h] eax +
mov [ebp-0C04h] edi +
jmp loc_1005314  +
push 0FEh  +
lea eax [ebp-5C4h] +
push eax  +
push dword ptr [ebp-0BC0h]  +
call sub_1010F4C  +
cmp eax ebx +
jl loc_1005019  +
push ebx  +
lea eax [ebp-5C4h] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_100534A  +
cmp [esi+13E8h] ebx +
jz loc_100534A  +
mov eax [ebp-0BF4h] +
cmp [eax+1ACh] ebx +
jnz loc_100534A  +
push 0BAh  +
call sub_1019FBD  +
jmp loc_100506E  +
mov eax [ebp-0BF4h] +
cmp [eax+29Ch] edi +
jnz loc_100548F  +
push 1F8h  +
lea eax [ebp-7BCh] +
push ebx  +
push eax  +
mov [ebp-7C0h] ebx +
call memset  +
add esp 0Ch +
mov [ebp-0BE4h] ebx +
mov byte ptr [ebp-4] 13h +
mov [ebp-0BE0h] ebx +
mov byte ptr [ebp-4] 15h +
lea eax [ebp-7C0h] +
push eax  +
lea eax [ebp-0BBCh] +
push eax  +
lea eax [esi+9E4h] +
push eax  +
call sub_100654D  +
cmp eax edi +
jnz loc_10053CC  +
mov byte ptr [ebp-4] 13h +
lea ecx [ebp-0BE0h] +
call sub_100637A  +
mov byte ptr [ebp-4] 10h +
lea ecx [ebp-0BE4h] +
call sub_100637A  +
jmp loc_1004F44  +
mov eax [ebp-0BC0h] +
mov ecx [eax] +
lea edx [ebp-0BE4h] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
cmp eax ebx +
jge loc_10053EC  +
push esi  +
push eax  +
call sub_100403A  +
jmp loc_10053A9  +
mov eax [ebp-0BE4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
cmp eax ebx +
jl loc_10053E3  +
mov eax [ebp-0BE4h] +
mov ecx [eax] +
lea edx [ebp-0BE0h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+30h]  +
cmp eax ebx +
jl loc_10053E3  +
mov eax [ebp-0BE0h] +
mov ecx [eax] +
lea edx [ebp-0BBCh] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
jl loc_10053E3  +
lea eax [ebp-0BBCh] +
push 5Ch  +
push eax  +
call ds:__imp_wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_1005456  +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp-0BE0h] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+3Ch]  +
cmp eax ebx +
jl loc_10053E3  +
mov eax [ebp-0BE0h] +
mov ecx [eax] +
lea edx [ebp-7C0h] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
cmp eax ebx +
jl loc_10053E3  +
mov byte ptr [ebp-4] 13h +
lea ecx [ebp-0BE0h] +
call sub_100637A  +
mov byte ptr [ebp-4] 10h +
lea ecx [ebp-0BE4h] +
call sub_100637A  +
mov eax [ebp-0BC0h] +
mov ecx [eax] +
lea edx [ebp-0BCCh] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
jl loc_1005019  +
mov eax [ebp-0BCCh] +
mov ecx [eax] +
lea edx [ebp-0BE8h] +
push edx  +
push eax  +
call dword ptr [ecx+74h]  +
cmp eax ebx +
jl loc_1005019  +
cmp [esi+13F0h] ebx +
jz loc_1005621  +
cmp [ebp-0BE8h] bx +
jz loc_10054EA  +
push dword ptr [ebp-0BF0h]  +
push 9C4h  +
jmp loc_1005641  +
push 0FFFFFFFFh  +
mov eax [ebp-0BCCh] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+78h]  +
cmp eax ebx +
jl loc_1005019  +
cmp [esi+13F8h] ebx +
jz loc_1005524  +
mov eax [ebp-0BCCh] +
mov ecx [eax] +
push offset aPt1s  +
push eax  +
call dword ptr [ecx+80h]  +
cmp eax ebx +
jl loc_1005019  +
mov eax [ebp-0BC0h] +
mov ecx [eax] +
lea edx [ebp-0BD4h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
jl loc_1005019  +
mov eax [ebp-0BD4h] +
mov ecx [eax] +
lea edx [ebp-0C18h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax ebx +
jl loc_1005019  +
cmp [ebp-0C18h] ebx +
jle loc_1005586  +
lea eax [ebp-0BD4h] +
push eax  +
push esi  +
push dword ptr [ebp-0BF4h]  +
call sub_10048C7  +
cmp eax 0FFFFFFFFh +
jz loc_1004F44  +
cmp eax ebx +
jl loc_1005019  +
lea eax [ebp-0C10h] +
push eax  +
lea eax [ebp-0C00h] +
push eax  +
lea eax [ebp-0C1Ch] +
push eax  +
lea eax [ebp-0C04h] +
push eax  +
lea eax [ebp-5C4h] +
push eax  +
push dword ptr [ebp-0BF4h]  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_100457E  +
test eax eax +
jnz loc_1004F44  +
mov eax [ebp-0BC0h] +
mov ecx [eax] +
lea edx [ebp-0BC4h] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jl loc_1005019  +
mov eax [ebp-0BC4h] +
mov ecx [eax] +
lea edx [ebp-0BECh] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
cmp eax ebx +
jl loc_1005019  +
test byte ptr [esi+1404h] 10h +
jz loc_1005605  +
mov [ebp-0BECh] edi +
cmp [esi+13E8h] ebx +
jz loc_1005685  +
cmp [ebp-0BECh] edi +
jnz loc_100567B  +
mov dword ptr [ebp-0BECh] 6 +
jmp loc_1005698  +
cmp [esi+13F4h] ebx +
jz loc_1005500  +
cmp [ebp-0BE8h] bx +
jnz loc_1005675  +
push dword ptr [ebp-0BF0h]  +
push 9C5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-3C8h] +
push 1DCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-3C8h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
jmp loc_1005500  +
push ebx  +
jmp loc_10054EC  +
mov dword ptr [ebp-0BECh] 3 +
cmp dword ptr [ebp-0BECh] 4 +
jnz loc_1005698  +
mov dword ptr [ebp-0BECh] 3 +
push 1FCh  +
lea eax [ebp-9BCh] +
push ebx  +
push eax  +
mov [ebp-0C08h] ebx +
call memset  +
add esp 0Ch +
cmp [ebp-0C00h] ebx +
jz loc_1005736  +
push dword ptr [ebp-0C00h]  +
call sub_10060BA  +
test eax eax +
jz loc_10056F3  +
push 0FEh  +
lea eax [ebp-9BCh] +
push eax  +
push dword ptr [ebp-0C00h]  +
push dword ptr [esi+13FCh]  +
call sub_10060D6  +
mov dword ptr [ebp-0BECh] 5 +
jmp loc_1005724  +
lea eax [ebp-0C08h] +
push eax  +
push dword ptr [ebp-0C00h]  +
call sub_10063A4  +
cmp eax edi +
jz loc_1004F44  +
push 0FEh  +
push dword ptr [ebp-0C00h]  +
lea eax [ebp-9BCh] +
push eax  +
call sub_1018BDF  +
lea eax [ebp-9BCh] +
push eax  +
lea ecx [ebp-0BF8h] +
call sub_1003FF6  +
cmp [esi+13E8h] ebx +
jz loc_1005766  +
mov eax [ebp-0BC4h] +
mov ecx [eax] +
push 3  +
push eax  +
call dword ptr [ecx+38h]  +
cmp eax ebx +
jge loc_1005766  +
push esi  +
push eax  +
call sub_100403A  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-0BF8h]  +
jmp loc_1004F49  +
mov eax [esi+1400h] +
cmp eax ebx +
jz loc_1005782  +
mov ecx [ebp-0BC4h] +
mov edx [ecx] +
dec eax  +
push eax  +
push ecx  +
call dword ptr [edx+48h]  +
cmp eax ebx +
jl loc_1005750  +
cmp [ebp-0C08h] ebx +
jz loc_10057F4  +
mov eax [ebp-0BC4h] +
mov [ebp-0C20h] ebx +
mov byte ptr [ebp-4] 16h +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp-0BF4h] eax +
mov byte ptr [ebp-4] 10h +
push ebx  +
call ds:SysFreeString  +
cmp [ebp-0BF4h] ebx +
jl loc_10057D6  +
mov eax [ebp-0BC4h] +
push dword ptr [ebp-0BF8h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
cmp eax ebx +
mov [ebp-0BF4h] eax +
jge loc_10057E2  +
push esi  +
push dword ptr [ebp-0BF4h]  +
jmp loc_1005752  +
cmp [ebp-0C08h] ebx +
jz loc_10057F4  +
mov dword ptr [ebp-0BECh] 4 +
push ebx  +
push dword ptr [ebp-0C10h]  +
call sub_10182B0  +
mov esi ds:VariantInit +
test eax eax +
jbe loc_100582D  +
push dword ptr [ebp-0C10h]  +
lea ecx [ebp-0C70h] +
call sub_1003B79  +
mov [ebp-0C04h] eax +
mov byte ptr [ebp-4] 17h +
mov [ebp-0BFCh] edi +
jmp loc_1005853  +
lea eax [ebp-0C30h] +
push eax  +
call esi  +
lea eax [ebp-0C30h] +
mov [ebp-0C04h] eax +
mov dword ptr [ebp-4] 18h +
mov dword ptr [ebp-0BFCh] 2 +
lea eax [ebp-0C40h] +
push eax  +
call esi  +
mov dword ptr [ebp-4] 19h +
lea esi [ebp-0C40h] +
lea edi [ebp-0C80h] +
movs   +
movs   +
push dword ptr [ebp-0BF8h]  +
movs   +
movs   +
mov esi [ebp-0C04h] +
lea edi [ebp-0C60h] +
movs   +
movs   +
movs   +
lea ecx [ebp-0C50h] +
movs   +
call sub_1003B79  +
mov byte ptr [ebp-4] 1Ah +
lea esi [ebp-0BDCh] +
push esi  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp-0BECh]  +
lea esi [ebp-0C80h] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
mov ecx [ebp-0BD0h] +
lea esi [ebp-0C60h] +
movs   +
movs   +
mov edx [ecx] +
movs   +
sub esp 10h +
movs   +
mov edi esp +
mov esi eax +
movs   +
movs   +
push 4  +
push dword ptr [ebp-0BC0h]  +
movs   +
push dword ptr [ebp-0BF0h]  +
movs   +
push ecx  +
call dword ptr [edx+44h]  +
mov edi eax +
mov byte ptr [ebp-4] 19h +
mov esi ds:VariantClear +
lea eax [ebp-0C50h] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 18h +
lea eax [ebp-0C40h] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov dword ptr [ebp-4] 17h +
test byte ptr [ebp-0BFCh] 2 +
jz loc_100593C  +
and dword ptr [ebp-0BFCh] 0FFFFFFFDh +
lea eax [ebp-0C30h] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov dword ptr [ebp-4] 10h +
test byte ptr [ebp-0BFCh] 1 +
jz loc_1005962  +
and dword ptr [ebp-0BFCh] 0FFFFFFFEh +
lea eax [ebp-0C70h] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
cmp edi ebx +
jge loc_10051EB  +
push dword ptr [ebp-0C0Ch]  +
push edi  +
call sub_100403A  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-0BF8h]  +
jmp loc_1005116  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1B00h +
call __alloca_probe  +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+var_1B00] eax +
xor ebx ebx +
xor eax eax +
mov byte ptr [ebp+var_6E4] bl +
lea edi [ebp+var_6E4+1] +
stos   +
stos   +
push 6D8h  +
stos   +
lea eax [ebp+var_6DC] +
push ebx  +
push eax  +
mov [ebp+var_1AF0] ebx +
call memset  +
push 1404h  +
lea eax [ebp+var_1AE8] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
mov [ebp+var_1AFC] ebx +
lea edi [ebp+var_1AF8] +
stos   +
add esp 18h +
stos   +
lea eax [ebp+var_1AFC] +
push eax  +
lea eax [ebp+var_1AEC] +
push eax  +
lea eax [ebp+var_6E4] +
push eax  +
push esi  +
push [ebp+arg_0]  +
mov [ebp+var_1AEC] 1408h +
call sub_1003165  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_1005B51  +
mov eax [ebp+var_618] +
mov [ebp+var_1AE8] eax +
mov eax [ebp+var_5C8] +
mov [ebp+lpString1] eax +
mov eax [ebp+var_578] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_528] +
mov [ebp+var_1AE4] eax +
mov eax [ebp+var_4D8] +
mov [ebp+var_1AE0] eax +
lea eax [ebp+var_1AFC] +
push eax  +
lea eax [ebp+var_1AEC] +
push eax  +
lea eax [ebp+var_6E4] +
push eax  +
push [ebp+arg_0]  +
call sub_1003C30  +
cmp eax esi +
jz loc_1005B51  +
cmp [ebp+var_708] ebx +
jz loc_1005AAB  +
call sub_10042B1  +
xor esi esi +
jmp loc_1005B51  +
push ebx  +
push [ebp+lpString1]  +
call sub_10182B0  +
test eax eax +
jz loc_1005B35  +
push [ebp+lpString1]  +
call sub_10060BA  +
test eax eax +
jnz loc_1005B35  +
cmp [ebp+var_1AF8] ebx +
jz loc_1005B35  +
lea eax [ebp+var_1AF0] +
push eax  +
push [ebp+lpString1]  +
call sub_10063A4  +
cmp eax esi +
jz loc_1005B73  +
cmp [ebp+var_1AF0] ebx +
jnz loc_1005B35  +
push [ebp+lpString1]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push esi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1018ECA  +
test eax eax +
jz loc_1005B51  +
lea eax [ebp+var_1AFC] +
push eax  +
lea eax [ebp+var_1AEC] +
push eax  +
lea eax [ebp+var_6E4] +
push eax  +
call sub_1004E31  +
mov esi eax +
mov ecx [ebp+var_1B00] +
cmp ecx ebx +
jz loc_1005B67  +
lea eax [ebp+var_1AEC] +
push eax  +
call sub_1016C75  +
lea eax [ebp+var_1AEC] +
push eax  +
call sub_1003AAB  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 1AEh  +
call sub_1019FBD  +
mov ebx [ebp+lpString1] +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005BBC  +
mov eax esi +
jmp loc_1005D6F  +
push edi  +
push esi  +
push 1AFh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005BDB  +
push 2  +
pop eax  +
jmp loc_1005D6F  +
push edi  +
push esi  +
push 1B0h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005BF6  +
push 3  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B1h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005C11  +
push 4  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B2h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005C2C  +
push 5  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B3h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005C47  +
push 6  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B4h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005C65  +
push 7  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B5h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005C83  +
push 8  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 1B6h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005CA1  +
push 9  +
jmp loc_1005BD5  +
push edi  +
push esi  +
push 9D8h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005CBF  +
push 0Ah  +
jmp loc_1005BD5  +
mov [ebp+var_5C] offset aMinute +
mov [ebp+var_58] esi +
mov [ebp+var_54] offset aHourly +
mov [ebp+var_50] 2 +
mov [ebp+var_4C] offset aDaily +
mov [ebp+var_48] 3 +
mov [ebp+var_44] offset aWeekly +
mov [ebp+var_40] 4 +
mov [ebp+var_3C] offset aMonthly +
mov [ebp+var_38] 5 +
mov [ebp+var_34] offset aOnce +
mov [ebp+var_30] 6 +
mov [ebp+var_2C] offset aOnstart +
mov [ebp+var_28] 7 +
mov [ebp+var_24] offset aOnlogon +
mov [ebp+var_20] 8 +
mov [ebp+var_1C] offset aOnidle +
mov [ebp+var_18] 9 +
mov [ebp+var_14] offset aOnevent +
mov [ebp+var_10] 0Ah +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
lea ebx [ebp+var_5C] +
push edi  +
push esi  +
push dword ptr [ebx]  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_1005D6C  +
add ebx 8 +
cmp [ebx+4] edi +
jnz loc_1005D50  +
mov eax edi +
jmp loc_1005D6F  +
mov eax [ebx+4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi offset aLimited +
lea edi [ebp+String2] +
movs   +
movs   +
movs   +
movs   +
mov ebx [ebp+arg_0] +
mov esi offset aHighest +
lea edi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 20Dh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jz loc_1005E05  +
push edi  +
push esi  +
push 20Eh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jnz loc_1005DE3  +
push 2  +
pop esi  +
jmp loc_1005E05  +
push edi  +
push esi  +
lea eax [ebp+String2] +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jz loc_1005E05  +
push edi  +
push esi  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
call sub_10182D1  +
test eax eax +
jz loc_1005DDE  +
mov esi edi +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp [eax] cx +
jz loc_1005E4E  +
push 27h  +
pop edx  +
cmp dx [eax] +
jnz loc_1005E44  +
test ecx ecx +
jz loc_1005E3E  +
cmp word ptr [ecx] 5Ch +
jz loc_1005E44  +
push 22h  +
pop ecx  +
mov [eax] cx +
mov ecx eax +
inc eax  +
inc eax  +
cmp word ptr [eax] 0 +
jnz loc_1005E2C  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jz loc_1005F83  +
push dword ptr [esi+4]  +
call sub_10187DE  +
mov ecx [esi+4] +
test eax eax +
jz loc_1005E7F  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005E78  +
push dword ptr [esi+10h]  +
call sub_10187DE  +
mov ecx [esi+10h] +
test eax eax +
jz loc_1005E95  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005E8E  +
push dword ptr [esi+14h]  +
call sub_10187DE  +
mov ecx [esi+14h] +
test eax eax +
jz loc_1005EAB  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005EA4  +
push dword ptr [esi+8]  +
call sub_10187DE  +
mov ecx [esi+8] +
test eax eax +
jz loc_1005EC1  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005EBA  +
push dword ptr [esi+0Ch]  +
call sub_10187DE  +
mov ecx [esi+0Ch] +
test eax eax +
jz loc_1005ED7  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005ED0  +
push dword ptr [esi+18h]  +
call sub_10187DE  +
mov ecx [esi+18h] +
test eax eax +
jz loc_1005EED  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005EE6  +
push dword ptr [esi+20h]  +
call sub_10187DE  +
mov ecx [esi+20h] +
test eax eax +
jz loc_1005F03  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005EFC  +
push ebx  +
push edi  +
lea ebx [esi+1Ch] +
push dword ptr [ebx]  +
call sub_10187DE  +
mov ecx [ebx] +
test eax eax +
jz loc_1005F1C  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005F15  +
lea edi [esi+24h] +
push dword ptr [edi]  +
call sub_10187DE  +
mov ecx [edi] +
test eax eax +
jz loc_1005F33  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1005F2C  +
lea eax [esi+4] +
push eax  +
call sub_1018819  +
lea eax [esi+10h] +
push eax  +
call sub_1018819  +
lea eax [esi+14h] +
push eax  +
call sub_1018819  +
lea eax [esi+8] +
push eax  +
call sub_1018819  +
lea eax [esi+0Ch] +
push eax  +
call sub_1018819  +
lea eax [esi+18h] +
push eax  +
call sub_1018819  +
lea eax [esi+20h] +
push eax  +
call sub_1018819  +
push ebx  +
call sub_1018819  +
push edi  +
call sub_1018819  +
and dword ptr [esi] 0 +
pop edi  +
pop ebx  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push edi  +
mov edi [ebp+lpString1] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_10060AC  +
xor eax eax +
cmp ax [edi] +
jz loc_1005FC9  +
push ebx  +
push 1  +
push 0C0h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_1005FD5  +
mov [ebp+var_4] 0BFh +
jmp loc_10060AC  +
push esi  +
push ebx  +
push 1  +
mov esi 0BFh +
push esi  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_1005FF7  +
mov [ebp+var_4] esi +
jmp loc_10060AB  +
push ebx  +
push 1  +
mov ebx 0C3h +
push ebx  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_1006018  +
mov [ebp+var_4] ebx +
jmp loc_10060AB  +
push 0  +
push 1  +
mov edi 0C4h +
push edi  +
call sub_1019FBD  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_1006039  +
mov [ebp+var_4] edi +
jmp loc_10060AB  +
mov [ebp+var_28] edi +
mov [ebp+var_10] edi +
xor edi edi +
mov [ebp+var_40] esi +
mov [ebp+var_38] esi +
mov [ebp+var_20] esi +
mov [ebp+var_44] offset aSystem +
mov [ebp+var_3C] offset aNtAuthoritySys +
mov [ebp+var_34] offset aNtAuthorityLoc +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] offset aNtAuthorityNet +
mov [ebp+var_24] offset aS1518 +
mov [ebp+var_1C] offset aS1519 +
mov [ebp+var_18] ebx +
mov [ebp+var_14] offset aS1520 +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
lea esi [ebp+var_44] +
push edi  +
push 1  +
push dword ptr [esi]  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_10060A5  +
add esi 8 +
cmp [esi+4] edi +
jnz loc_100608A  +
jmp loc_10060AB  +
mov eax [esi+4] +
mov [ebp+var_4] eax +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString1]  +
call sub_1005F90  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hMem] 0 +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_18] 0Ch +
jz loc_1006110  +
push [ebp+arg_C]  +
push offset aNtAuthoritySys  +
push esi  +
call sub_1018BDF  +
jmp loc_100615E  +
push eax  +
call sub_1005F90  +
sub eax 0C3h +
jz loc_1006128  +
dec eax  +
jz loc_1006124  +
push 16h  +
jmp loc_100612A  +
push 18h  +
jmp loc_100612A  +
push 17h  +
pop eax  +
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_10] +
push ecx  +
push 0  +
push eax  +
call ds:CreateWellKnownSid  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call ConvertSidToStringSidW  +
push [ebp+arg_C]  +
push [ebp+hMem]  +
push esi  +
call sub_1018BDF  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_10061B5  +
cmp [ebp+arg_0] eax +
jz loc_10061B5  +
push 8007000Eh  +
call sub_10172E7  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_10061CF  +
mov edx ecx +
mov eax dword ptr [ebp+vt] +
cmp ecx edx +
jnz loc_10061DB  +
cmp ax [ecx] +
jz loc_10061EC  +
push eax  +
push 0  +
push edx  +
push ecx  +
call ds:VariantChangeType  +
push eax  +
call sub_1003B38  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call ds:free  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1006245  +
cmp eax 0Ch +
jz loc_100623E  +
cmp eax 16h +
jz loc_1006237  +
cmp eax 22h +
jz loc_1006237  +
cmp eax 50h +
jz loc_1006245  +
push 80004005h  +
call loc_1003BC9  +
push 80070057h  +
jmp loc_1006232  +
push 8007000Eh  +
jmp loc_1006232  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memcpy_s  +
add esp 10h +
push eax  +
call sub_100620D  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysStringLen  +
test eax eax +
jz loc_10062B3  +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call OLEAUT32_313  +
mov edi eax +
test edi edi +
jl loc_10062B0  +
push dword ptr [esi]  +
call ds:SysFreeString  +
mov eax [ebp+var_4] +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
cmp [ebp+arg_0] esi +
jz loc_100634D  +
mov eax [edi] +
cmp eax esi +
jz loc_10062DA  +
cmp [ebp+arg_4] esi +
jz loc_100634D  +
push eax  +
call ds:SysStringLen  +
mov ecx [ebp+arg_4] +
lea ebx [eax+ecx] +
cmp ebx eax +
mov [ebp+var_4] eax +
jge loc_10062F5  +
mov eax 8007000Eh +
jmp loc_100634F  +
push ebx  +
push esi  +
call ds:SysAllocStringLen  +
mov esi eax +
test esi esi +
jz loc_10062EE  +
push dword ptr [edi]  +
call ds:SysStringLen  +
test eax eax +
jbe loc_1006324  +
mov eax [ebp+var_4] +
add eax eax +
push eax  +
push dword ptr [edi]  +
lea eax [ebx+ebx] +
push eax  +
push esi  +
call sub_100624E  +
add esp 10h +
mov eax [ebp+arg_4] +
add eax eax +
push eax  +
push [ebp+arg_0]  +
push eax  +
mov eax [ebp+var_4] +
lea eax [esi+eax*2] +
push eax  +
call sub_100624E  +
xor eax eax +
add esp 10h +
mov [esi+ebx*2] ax +
push dword ptr [edi]  +
call ds:SysFreeString  +
mov [edi] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
jmp loc_100636E  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
mov [esi] ecx +
call sub_10061F5  +
cmp dword ptr [esi] 0 +
jnz loc_1006362  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
test eax eax +
jz loc_1006399  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi LookupAccountNameLocalW +
push edi  +
lea eax [ebp+var_8] +
push eax  +
xor edi edi +
lea eax [ebp+var_C] +
push eax  +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push [ebp+arg_0]  +
mov [ebp+var_8] 8 +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+dwBytes] edi +
mov [ebp+var_C] edi +
call esi  +
test eax eax +
jz loc_10063E8  +
xor eax eax +
inc eax  +
jmp loc_10064D3  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jz loc_100641D  +
cmp eax edi +
jle loc_1006401  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_10063E0  +
push [ebp+dwBytes]  +
call sub_1018520  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_1006430  +
push 0Eh  +
jmp loc_1006402  +
mov eax [ebp+var_C] +
add eax eax +
push eax  +
call sub_1018520  +
mov [ebp+var_14] eax +
cmp eax edi +
jnz loc_100646B  +
push 0Eh  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
jmp loc_10063E0  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call esi  +
test eax eax +
jnz loc_10064A5  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
lea eax [ebp+var_14] +
jmp loc_1006460  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
lea eax [ebp+var_14] +
push eax  +
call sub_1018819  +
cmp [ebp+var_8] 2 +
jz loc_10064C9  +
cmp [ebp+var_8] 4 +
jz loc_10064C9  +
cmp [ebp+var_8] 5 +
jnz loc_10064CC  +
xor edi edi +
inc edi  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10064F4  +
cmp ecx 7FFFFFFFh +
jbe loc_10064F9  +
mov eax 80070057h +
test eax eax +
jl loc_1006544  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1006534  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_100652F  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_100652F  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1006517  +
pop edi  +
test esi esi +
jnz loc_100653B  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 604h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_604] eax +
mov eax [ebp+arg_8] +
mov esi 1F8h +
xor edi edi +
push esi  +
mov [ebp+var_600] eax +
lea eax [ebp+var_1FC] +
push edi  +
push eax  +
mov [ebp+String] edi +
call memset  +
push esi  +
lea eax [ebp+var_5F4] +
push edi  +
push eax  +
mov [ebp+var_5F8] edi +
call memset  +
push esi  +
lea eax [ebp+var_3F8] +
push edi  +
push eax  +
mov [ebp+var_3FC] edi +
call memset  +
add esp 24h +
cmp ebx edi +
jz loc_1006766  +
push edi  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_1006766  +
mov edi 0FEh +
push edi  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push 3  +
mov esi offset asc_10016CC +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10192AE  +
push 27h  +
pop eax  +
cmp ax word ptr [ebp+String] +
jz loc_1006683  +
push 22h  +
pop eax  +
cmp ax word ptr [ebp+String] +
jz loc_1006683  +
push 0  +
push 20h  +
lea eax [ebp+String] +
push eax  +
call sub_1018B42  +
mov ebx eax +
test ebx ebx +
jz loc_100666A  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+String] +
push eax  +
push edi  +
lea eax [ebp+var_5F8] +
push eax  +
call sub_10064DE  +
add ebx 2 +
push ebx  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10064DE  +
push 3  +
push esi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10192AE  +
jmp loc_1006730  +
lea eax [ebp+String] +
push eax  +
push edi  +
lea eax [ebp+var_5F8] +
push eax  +
call sub_10064DE  +
jmp loc_100673C  +
cmp word ptr [ebp+String+2] 0 +
push 22h  +
pop eax  +
push 2  +
mov word ptr [ebp+var_5F8] ax +
lea esi [ebp+String+2] +
lea eax [ebp+var_5F8+2] +
mov [ebp+var_5FC] 1 +
pop ebx  +
jz loc_10066E1  +
movzx ecx word ptr [ebp+String+2] +
cmp cx word ptr [ebp+String] +
jz loc_10066ED  +
cmp [ebp+var_5FC] 0FDh +
jge loc_10066E1  +
add esi ebx +
mov [eax] cx +
movzx ecx word ptr [esi] +
add eax ebx +
inc [ebp+var_5FC]  +
test cx cx +
jnz loc_10066B7  +
mov cx word ptr [ebp+String] +
cmp [esi] cx +
jnz loc_1006766  +
push 22h  +
pop ecx  +
mov [eax] cx +
xor ecx ecx +
add esi ebx +
mov [eax+2] cx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100673C  +
movzx eax ax +
push eax  +
call ds:isspace  +
pop ecx  +
test eax eax +
jz loc_100671C  +
add esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1006703  +
cmp word ptr [esi] 0 +
jz loc_100673C  +
push esi  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10064DE  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1005E1D  +
push edi  +
lea eax [ebp+var_5F8] +
push eax  +
push [ebp+var_604]  +
call sub_1018BDF  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
push [ebp+var_600]  +
call sub_1018BDF  +
xor eax eax +
jmp loc_1006769  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 460h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx 1FCh +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100679F  +
push 32h  +
pop ecx  +
lea eax [ebp+var_68] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10067AC  +
lea eax [ebp+var_68] +
push eax  +
call sub_100B18A  +
test eax eax +
jz loc_10067C5  +
xor eax eax +
inc eax  +
jmp loc_100682C  +
cmp dword_1024110 0 +
push esi  +
mov esi offset dword_1024110 +
jz loc_1006829  +
mov eax [esi] +
mov ecx eax +
sub ecx 817h +
jz loc_10067ED  +
sub ecx 4 +
jz loc_10067ED  +
push eax  +
call sub_1019FBD  +
jmp loc_1006812  +
lea ecx [ebp+var_68] +
push ecx  +
push eax  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_10067D4  +
xor eax eax +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1017692  +
leave   +
retn   +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call sub_1017299  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_100688D  +
push dword ptr [ebp+8]  +
call sub_1006184  +
jmp loc_100688F  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
test eax eax +
jnz loc_10068A3  +
push 8007000Eh  +
call sub_10172E7  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jz loc_10068C6  +
mov eax [eax] +
test eax eax +
jz loc_10068C6  +
push eax  +
call ds:SysStringLen  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push esi  +
call ds:VariantClear  +
push eax  +
call sub_1003B38  +
cmp [ebp+arg_0] 0 +
jnz loc_10068F5  +
and dword ptr [esi+8] 0 +
push 8  +
pop eax  +
mov [esi] ax +
jmp loc_1006917  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
test eax eax +
jnz loc_100690E  +
push 8007000Eh  +
call sub_10172E7  +
jmp loc_1006917  +
push 8  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
xor edi edi +
cmp [ebp+8] edi +
jz loc_1006994  +
cmp [ebp+0Ch] edi +
jz loc_1006994  +
mov [ebp-10h] edi +
mov [ebp-4] edi +
mov esi ds:MultiByteToWideChar +
push edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push edi  +
push 3  +
call esi  +
cmp dword ptr [ebp+0Ch] 0FFFFFFFFh +
mov ebx eax +
jnz loc_100695F  +
lea eax [ebx-1] +
push eax  +
push edi  +
call ds:SysAllocStringLen  +
mov [ebp-14h] eax +
cmp eax edi +
jz loc_100699E  +
push ebx  +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push edi  +
push 3  +
call esi  +
cmp eax ebx +
jz loc_100699E  +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100635B  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100635B  +
mov eax [ebp-14h] +
jmp loc_1006996  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push esi  +
mov esi ecx +
jnz loc_10069CC  +
and dword ptr [esi] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+8]  +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_10069C5  +
push 8007000Eh  +
call loc_1003BC9  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpString]  +
mov esi ecx +
call ds:lstrlenW  +
push eax  +
push [ebp+lpString]  +
mov ecx esi +
call sub_10062BD  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:SysFreeString  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
call sub_1006923  +
mov [esi] eax +
test eax eax +
jnz loc_1006A40  +
cmp [ebp+arg_0] eax +
jz loc_1006A40  +
push 8007000Eh  +
call loc_1003BC9  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_100637A  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
and dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+8] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jl loc_1006B18  +
and dword ptr [ebp+8] 0 +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jl loc_1006B0C  +
push dword ptr [ebp+14h]  +
mov eax [ebp+0Ch] +
push dword ptr [ebp+10h]  +
add eax 11E4h +
push eax  +
call sub_100654D  +
cmp eax 1 +
jnz loc_1006AEC  +
push 0A5h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1006B0C  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jl loc_1006B0C  +
mov eax [ebp+8] +
push dword ptr [ebp+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100637A  +
mov eax esi +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
xor esi esi +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+8] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
cmp edi esi +
jl loc_1006C2E  +
mov ebx [ebp+0Ch] +
cmp [ebx+1BF8h] esi +
jz loc_1006B8A  +
mov eax [ebp-10h] +
mov ecx [eax] +
push offset aPt1s  +
push eax  +
call dword ptr [ecx+80h]  +
mov edi eax +
cmp edi esi +
jl loc_1006C2E  +
push esi  +
add ebx 61Ch +
push ebx  +
call sub_10182B0  +
test eax eax +
jbe loc_1006C15  +
mov [ebp-14h] esi +
mov byte ptr [ebp-4] 3 +
mov [ebp+8] esi +
mov byte ptr [ebp-4] 4 +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+9Ch]  +
mov edi eax +
cmp edi esi +
jge loc_1006BDA  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp+8]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-14h] +
call sub_100637A  +
jmp loc_1006C2E  +
lea eax [ebp+8] +
push eax  +
push ebx  +
call sub_1014458  +
mov edi eax +
cmp edi esi +
jl loc_1006BBF  +
mov eax [ebp-14h] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_1006BBF  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp+8]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-14h] +
call sub_100637A  +
mov eax [ebp+0Ch] +
cmp [eax+1C08h] esi +
jz loc_1006C2E  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+90h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100637A  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
and dword ptr [ebp-114h] 0 +
mov dword ptr [ebp-4] 1 +
xor eax eax +
mov [ebp-124h] ax +
lea edi [ebp-122h] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp-124h] +
push eax  +
call ds:GetLocalTime  +
lea eax [ebp-128h] +
push eax  +
lea eax [ebp-110h] +
mov edi 80h +
push eax  +
mov [ebp-128h] edi +
call GetUserNameW  +
test eax eax +
jz loc_1006D39  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-114h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jl loc_1006D41  +
mov eax [ebp-114h] +
mov ecx [eax] +
lea edx [ebp-110h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jl loc_1006D41  +
movzx eax word ptr [ebp-118h] +
push eax  +
movzx eax word ptr [ebp-11Ah] +
push eax  +
movzx eax word ptr [ebp-11Ch] +
push eax  +
movzx eax word ptr [ebp-11Eh] +
push eax  +
movzx eax word ptr [ebp-122h] +
push eax  +
movzx eax word ptr [ebp-124h] +
push eax  +
push offset aD02d02dt02d02d  +
lea eax [ebp-110h] +
push edi  +
push eax  +
call sub_1003F97  +
mov eax [ebp-114h] +
mov ecx [eax] +
add esp 24h +
lea edx [ebp-110h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
jmp loc_1006D3F  +
call ds:__imp_GetLastError  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-114h] +
call sub_100637A  +
mov eax esi +
call sub_10177AC  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1234h +
call __alloca_probe  +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi offset aCreate +
lea edi [ebp+var_B0] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aRu +
lea edi [ebp+var_3C] +
movs   +
movs   +
mov esi offset aRp +
lea edi [ebp+var_74] +
movs   +
movs   +
mov esi offset aSc +
lea edi [ebp+var_4C] +
movs   +
movs   +
mov esi offset aMo +
lea edi [ebp+var_8C] +
movs   +
movs   +
mov esi offset aTn +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aTr +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aSt +
lea edi [ebp+var_24] +
movs   +
movs   +
mov esi offset aEt +
lea edi [ebp+var_6C] +
movs   +
movs   +
mov esi offset aSd +
lea edi [ebp+var_5C] +
movs   +
movs   +
mov eax [ebp+arg_4] +
mov esi offset aEd +
lea edi [ebp+var_64] +
movs   +
movs   +
mov ebx [ebp+arg_8] +
mov esi offset aIt +
lea edi [ebp+var_2C] +
movs   +
movs   +
mov esi offset aDu +
lea edi [ebp+var_34] +
movs   +
movs   +
mov esi offset aRi +
lea edi [ebp+var_44] +
movs   +
mov [ebp+var_121C] eax +
mov eax [ebp+arg_C] +
movs   +
mov [ebp+var_1204] eax +
mov eax [ebp+arg_10] +
mov esi offset aV1 +
lea edi [ebp+var_54] +
mov [ebp+var_1224] eax +
mov [ebp+var_120C] 3Fh +
mov [ebp+var_1228] 73h +
mov [ebp+var_1208] 75h +
mov [ebp+var_1220] 70h +
mov [ebp+var_122C] 64h +
mov [ebp+var_1234] 6Dh +
mov [ebp+var_1210] 69h +
mov [ebp+var_1230] 6Bh +
mov [ebp+var_1218] 7Ah +
mov [ebp+var_1214] 66h +
movs   +
movs   +
mov eax ds:dword_1001740 +
mov esi offset aEc +
lea edi [ebp+var_84] +
movs   +
movs   +
mov esi offset aRl +
lea edi [ebp+var_94] +
movs   +
movs   +
mov esi offset aDelay +
lea edi [ebp+var_A0] +
movs   +
movs   +
movs   +
mov esi offset aNp +
lea edi [ebp+var_7C] +
mov [ebp+var_C] eax +
mov eax ds:dword_1001744 +
movs   +
mov [ebp+var_8] eax +
movs   +
mov ecx 960h +
lea eax [ebp+dwErrCode] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1006EFA  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_1018B9C  +
and [ebp+var_11F0] 0 +
and [ebp+var_11EC] 0 +
lea eax [ebp+var_B0] +
mov [ebp+var_11E0] eax +
lea eax [ebx+1BE0h] +
push 8  +
mov [ebp+var_11D4] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_11B0] +
inc esi  +
push eax  +
mov [ebp+var_11F8] 0Ah +
mov [ebp+var_11E8] esi +
call sub_1018B9C  +
and [ebp+var_119C] 0 +
lea eax [ebp+var_120C] +
mov [ebp+var_1190] eax +
lea eax [ebx+1BE4h] +
push 8  +
mov [ebp+var_1184] eax +
push edi  +
lea eax [ebp+var_1160] +
push eax  +
mov [ebp+var_11A8] 0Ah +
mov [ebp+var_1198] esi +
mov [ebp+var_11A0] 20000h +
call sub_1018B9C  +
and [ebp+var_114C] 0 +
lea eax [ebp+var_1228] +
push 8  +
mov [ebp+var_1140] eax +
push edi  +
lea eax [ebp+var_1110] +
push eax  +
mov [ebp+var_1158] esi +
mov [ebp+var_1148] esi +
mov [ebp+var_1150] 100C0h +
call sub_1018B9C  +
and [ebp+var_10FC] 0 +
lea eax [ebp+var_1208] +
push 8  +
mov [ebp+var_10F0] eax +
push edi  +
lea eax [ebp+var_10C0] +
push eax  +
mov [ebp+var_1108] esi +
mov [ebp+var_10F8] esi +
mov [ebp+var_1100] 100C0h +
call sub_1018B9C  +
and [ebp+var_10A4] 0 +
and [ebp+var_10AC] 0 +
lea eax [ebp+var_1220] +
push 8  +
mov [ebp+var_10A0] eax +
push edi  +
lea eax [ebp+var_1070] +
push eax  +
mov [ebp+var_10B8] esi +
mov [ebp+var_10A8] esi +
mov [ebp+var_10B0] 10010h +
call sub_1018B9C  +
and [ebp+var_105C] 0 +
lea eax [ebp+var_3C] +
push 8  +
mov [ebp+var_1050] eax +
push edi  +
lea eax [ebp+var_1020] +
push eax  +
mov [ebp+var_1068] esi +
mov [ebp+var_1058] esi +
mov [ebp+var_1060] 10040h +
call sub_1018B9C  +
mov [ebp+var_1018] esi +
lea eax [ebp+var_74] +
and [ebp+var_1004] 0 +
and [ebp+var_100C] 0 +
push 8  +
mov [ebp+var_1000] eax +
push edi  +
lea eax [ebp+var_FD0] +
push eax  +
mov [ebp+var_1008] esi +
mov [ebp+var_1010] 10010h +
call sub_1018B9C  +
and [ebp+var_FBC] 0 +
lea eax [ebp+var_4C] +
mov [ebp+var_FB0] eax +
lea eax [ebx+28h] +
push 8  +
mov [ebp+var_FA4] eax +
push edi  +
lea eax [ebp+var_F80] +
push eax  +
mov [ebp+var_FC8] esi +
mov [ebp+var_FB8] esi +
mov [ebp+var_FC0] 0C0h +
mov [ebp+var_FA0] 0FEh +
call sub_1018B9C  +
and [ebp+var_F6C] 0 +
lea eax [ebp+var_8C] +
mov [ebp+var_F60] eax +
mov eax [ebx+24h] +
push 8  +
mov [ebp+var_F54] eax +
push edi  +
lea eax [ebp+var_F30] +
push eax  +
mov [ebp+var_F78] esi +
mov [ebp+var_F68] esi +
mov [ebp+var_F70] 100C0h +
call sub_1018B9C  +
and [ebp+var_F1C] 0 +
lea eax [ebp+var_122C] +
mov [ebp+var_F10] eax +
lea eax [ebx+224h] +
push 8  +
mov [ebp+var_F04] eax +
push edi  +
lea eax [ebp+var_EE0] +
push eax  +
mov [ebp+var_F28] esi +
mov [ebp+var_F18] esi +
mov [ebp+var_F20] 0C0h +
mov [ebp+var_F00] 0FEh +
call sub_1018B9C  +
and [ebp+var_ECC] 0 +
lea eax [ebp+var_1234] +
mov [ebp+var_EC0] eax +
lea eax [ebx+420h] +
push 8  +
mov [ebp+var_EB4] eax +
push edi  +
lea eax [ebp+var_E90] +
push eax  +
mov [ebp+var_ED8] esi +
mov [ebp+var_EC8] esi +
mov [ebp+var_ED0] 0C0h +
mov [ebp+var_EB0] 0FEh +
call sub_1018B9C  +
and [ebp+var_E7C] 0 +
lea eax [ebp+var_1210] +
mov [ebp+var_E70] eax +
lea eax [ebx+61Ch] +
push 8  +
mov [ebp+var_E64] eax +
push edi  +
lea eax [ebp+var_E40] +
push eax  +
mov [ebp+var_E88] esi +
mov [ebp+var_E78] esi +
mov [ebp+var_E80] 0C0h +
mov [ebp+var_E60] 0FEh +
call sub_1018B9C  +
mov [ebp+var_E38] esi +
lea eax [ebp+var_14] +
mov [ebp+var_E20] eax +
lea eax [ebx+818h] +
push 8  +
mov [ebp+var_E14] eax +
push edi  +
lea eax [ebp+var_DF0] +
push eax  +
mov [ebp+var_E28] esi +
mov [ebp+var_E10] 0EEh +
call sub_1018B9C  +
and [ebp+var_DDC] 0 +
lea eax [ebp+var_1C] +
mov [ebp+var_DD0] eax +
lea eax [ebx+11E4h] +
push 8  +
mov [ebp+var_DC4] eax +
push edi  +
lea eax [ebp+var_DA0] +
push eax  +
mov [ebp+var_DE8] esi +
mov [ebp+var_DD8] esi +
mov [ebp+var_DE0] 0C0h +
mov [ebp+var_DC0] 106h +
call sub_1018B9C  +
and [ebp+var_D8C] 0 +
lea eax [ebp+var_24] +
mov [ebp+var_D80] eax +
lea eax [ebx+9F4h] +
push 8  +
mov [ebp+var_D74] eax +
push edi  +
lea eax [ebp+var_D50] +
push eax  +
mov [ebp+var_D98] esi +
mov [ebp+var_D88] esi +
mov [ebp+var_D90] 0C0h +
mov [ebp+var_D70] 0FEh +
call sub_1018B9C  +
and [ebp+var_D3C] 0 +
lea eax [ebp+var_5C] +
mov [ebp+var_D30] eax +
lea eax [ebx+0DECh] +
push 8  +
mov [ebp+var_D24] eax +
push edi  +
lea eax [ebp+var_D00] +
push eax  +
mov [ebp+var_D48] esi +
mov [ebp+var_D38] esi +
mov [ebp+var_D40] 0C0h +
mov [ebp+var_D20] 0FEh +
call sub_1018B9C  +
and [ebp+var_CEC] 0 +
lea eax [ebp+var_64] +
mov [ebp+var_CE0] eax +
lea eax [ebx+0FE8h] +
push 8  +
mov [ebp+var_CD4] eax +
push edi  +
lea eax [ebp+var_C60] +
push eax  +
mov [ebp+var_CF8] esi +
mov [ebp+var_CE8] esi +
mov [ebp+var_CF0] 0C0h +
mov [ebp+var_CD0] 0FEh +
call sub_1018B9C  +
and [ebp+var_C4C] 0 +
lea eax [ebp+var_6C] +
mov [ebp+var_C40] eax +
lea eax [ebx+0BF0h] +
push 8  +
mov [ebp+var_C34] eax +
push edi  +
lea eax [ebp+var_CB0] +
push eax  +
mov [ebp+var_C58] esi +
mov [ebp+var_C48] esi +
mov [ebp+var_C50] 0C0h +
mov [ebp+var_C30] 0FEh +
call sub_1018B9C  +
mov [ebp+var_CA8] 0Ah +
lea eax [ebp+var_2C] +
mov [ebp+var_C90] eax +
lea eax [ebx+1BF0h] +
push 8  +
mov [ebp+var_C84] eax +
push edi  +
lea eax [ebp+var_C10] +
push eax  +
mov [ebp+var_C98] esi +
call sub_1018B9C  +
lea eax [ebp+var_1230] +
mov [ebp+var_BF0] eax +
lea eax [ebx+1BF4h] +
push 8  +
mov [ebp+var_BE4] eax +
push edi  +
lea eax [ebp+var_BC0] +
push eax  +
mov [ebp+var_C08] 0Ah +
mov [ebp+var_BF8] esi +
call sub_1018B9C  +
and [ebp+var_BAC] 0 +
lea eax [ebp+var_34] +
mov [ebp+var_BA0] eax +
lea eax [ebx+13F0h] +
push 8  +
mov [ebp+var_B94] eax +
push edi  +
lea eax [ebp+var_B70] +
push eax  +
mov [ebp+var_BB8] esi +
mov [ebp+var_BA8] esi +
mov [ebp+var_BB0] 0C0h +
mov [ebp+var_B90] 0FEh +
call sub_1018B9C  +
and [ebp+var_B5C] 0 +
lea eax [ebp+var_44] +
mov [ebp+var_B50] eax +
lea eax [ebx+15ECh] +
push 8  +
mov [ebp+var_B44] eax +
push edi  +
lea eax [ebp+var_B20] +
push eax  +
mov [ebp+var_B68] esi +
mov [ebp+var_B58] esi +
mov [ebp+var_B60] 0C0h +
mov [ebp+var_B40] 0FEh +
call sub_1018B9C  +
lea eax [ebp+var_1218] +
mov [ebp+var_B00] eax +
lea eax [ebx+1BF8h] +
push 8  +
mov [ebp+var_AF4] eax +
push edi  +
lea eax [ebp+var_AD0] +
push eax  +
mov [ebp+var_B18] 0Ah +
mov [ebp+var_B08] esi +
call sub_1018B9C  +
lea eax [ebp+var_1214] +
mov [ebp+var_AB0] eax +
lea eax [ebx+1BFCh] +
push 8  +
mov [ebp+var_AA4] eax +
push edi  +
lea eax [ebp+var_A80] +
push eax  +
mov [ebp+var_AC8] 0Ah +
mov [ebp+var_AB8] esi +
call sub_1018B9C  +
lea eax [ebp+var_54] +
mov [ebp+var_A60] eax +
lea eax [ebx+1C08h] +
push 8  +
mov [ebp+var_A54] eax +
push edi  +
lea eax [ebp+var_A30] +
mov [ebp+var_A78] 0Ah +
mov [ebp+var_A68] esi +
push eax  +
call sub_1018B9C  +
and [ebp+var_A14] 0 +
and [ebp+var_A1C] 0 +
lea eax [ebp+var_C] +
push 8  +
mov [ebp+var_A10] eax +
push edi  +
lea eax [ebp+var_9E0] +
push eax  +
mov [ebp+var_A28] esi +
mov [ebp+var_A18] esi +
mov [ebp+var_A20] 10080h +
call sub_1018B9C  +
and [ebp+var_9C4] 0 +
and [ebp+var_9CC] 0 +
lea eax [ebp+var_84] +
push 8  +
mov [ebp+var_9C0] eax +
push edi  +
lea eax [ebp+var_990] +
push eax  +
mov [ebp+var_9D8] esi +
mov [ebp+var_9C8] esi +
mov [ebp+var_9D0] 10080h +
call sub_1018B9C  +
and [ebp+var_974] 0 +
and [ebp+var_97C] 0 +
lea eax [ebp+var_94] +
mov [ebp+var_970] eax +
lea eax [ebx+19E4h] +
push 8  +
mov [ebp+var_964] eax +
push edi  +
lea eax [ebp+var_940] +
push eax  +
mov [ebp+var_988] esi +
mov [ebp+var_978] esi +
mov [ebp+var_980] 0C0h +
mov [ebp+var_960] 0FEh +
call sub_1018B9C  +
and [ebp+var_92C] 0 +
lea eax [ebp+var_A0] +
mov [ebp+var_920] eax +
lea eax [ebx+17E8h] +
push 8  +
mov [ebp+var_914] eax +
push edi  +
lea eax [ebp+var_8F0] +
push eax  +
mov [ebp+var_938] esi +
mov [ebp+var_928] esi +
mov [ebp+var_930] 0C0h +
mov [ebp+var_910] 0FEh +
call sub_1018B9C  +
lea eax [ebp+var_7C] +
mov [ebp+var_8D0] eax +
push 0  +
lea eax [ebx+1C10h] +
mov [ebp+var_8C4] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 1Eh  +
push 0  +
push [ebp+var_121C]  +
mov [ebp+var_8E8] 0Ah +
push [ebp+arg_0]  +
mov [ebp+var_8D8] esi +
call sub_101AF46  +
test eax eax +
jnz loc_1007708  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax esi +
jmp loc_1007C2D  +
xor edi edi +
cmp [ebx+1BE4h] edi +
jz loc_100773A  +
cmp [ebp+arg_0] 3 +
jbe loc_1007733  +
push 100h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1007701  +
call sub_100677F  +
jmp loc_1007701  +
mov eax [ebp+var_1134] +
mov [ebx+4] eax +
mov eax [ebp+var_10E4] +
mov [ebx+10h] eax +
mov eax [ebp+var_1094] +
mov [ebx+14h] eax +
mov eax [ebp+var_1044] +
mov [ebx+8] eax +
mov eax [ebp+var_FF4] +
mov [ebx+0Ch] eax +
mov eax [ebp+var_F54] +
mov [ebx+24h] eax +
mov eax [ebp+var_A04] +
mov [ebx+18h] eax +
mov eax [ebp+var_9B4] +
mov [ebx+20h] eax +
cmp [ebp+var_974] esi +
jnz loc_10077A9  +
push [ebp+var_964]  +
call sub_1005D7B  +
mov [ebx+1BECh] eax +
cmp eax edi +
jnz loc_10077A9  +
push 10Ah  +
jmp loc_100771D  +
cmp [ebp+var_1144] esi +
jnz loc_10077B8  +
or [ebx+1BE8h] si +
cmp [ebp+var_10F4] esi +
jnz loc_10077C8  +
or word ptr [ebx+1BE8h] 2 +
cmp [ebp+var_1054] esi +
jnz loc_10077D8  +
or word ptr [ebx+1BE8h] 8 +
cmp [ebp+var_10A4] esi +
jnz loc_10077E8  +
or word ptr [ebx+1BE8h] 4 +
cmp [ebp+var_1004] esi +
jnz loc_10077F8  +
or word ptr [ebx+1BE8h] 10h +
cmp [ebp+var_F64] esi +
jnz loc_1007808  +
or word ptr [ebx+1BE8h] 20h +
mov eax [ebx+18h] +
cmp eax edi +
jz loc_100781E  +
push edi  +
push eax  +
call sub_10182B0  +
test eax eax +
jbe loc_100781E  +
mov eax esi +
jmp loc_1007820  +
xor eax eax +
mov [ebx+1C0Ch] eax +
cmp [ebp+var_1144] edi +
jnz loc_1007840  +
cmp [ebp+var_10F4] esi +
jnz loc_1007840  +
push 81h  +
jmp loc_100771D  +
and dword ptr [ebp+var_4A8] edi +
mov edi 3F4h +
push edi  +
lea eax [ebp+var_4A4] +
push 0  +
push eax  +
call memset  +
and dword ptr [ebp+var_8A0] 0 +
push edi  +
lea eax [ebp+var_89C] +
push 0  +
push eax  +
call memset  +
add esp 18h +
cmp [ebp+var_E24] 0 +
jnz loc_10078D3  +
push offset aCreate_0  +
push 15EDh  +
call sub_1019FBD  +
push eax  +
mov edi 1FCh +
lea eax [ebp+var_8A0] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_8A0] +
push eax  +
push offset aTn  +
push 15E4h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_4A8] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 14h +
lea eax [ebp+var_4A8] +
jmp loc_1007722  +
xor eax eax +
cmp [ebp+var_A14] eax +
jnz loc_100795A  +
cmp [ebp+var_FB4] eax +
jnz loc_1007918  +
push offset aCreate_0  +
push 15EDh  +
call sub_1019FBD  +
push eax  +
mov edi 1FCh +
lea eax [ebp+var_8A0] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_8A0] +
push eax  +
push offset aSc  +
jmp loc_10078AD  +
cmp [ebp+var_DD4] eax +
jnz loc_1007A2E  +
push offset aCreate_0  +
push 15EDh  +
call sub_1019FBD  +
push eax  +
mov edi 1FCh +
lea eax [ebp+var_8A0] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_8A0] +
push eax  +
push offset aTr  +
jmp loc_10078AD  +
cmp [ebp+var_A14] esi +
jnz loc_1007A2E  +
cmp [ebp+var_E74] esi +
jz loc_1007A24  +
cmp [ebp+var_F64] esi +
jz loc_1007A24  +
cmp [ebp+var_F14] esi +
jz loc_1007A24  +
cmp [ebp+var_EC4] esi +
jz loc_1007A24  +
cmp [ebp+var_D84] esi +
jz loc_1007A24  +
cmp [ebp+var_D34] esi +
jz loc_1007A24  +
cmp [ebp+var_CE4] esi +
jz loc_1007A24  +
cmp [ebp+var_C44] esi +
jz loc_1007A24  +
cmp [ebp+var_BF4] esi +
jz loc_1007A24  +
cmp [ebp+var_BA4] esi +
jz loc_1007A24  +
cmp [ebp+var_B54] esi +
jz loc_1007A24  +
cmp [ebp+var_B04] esi +
jz loc_1007A24  +
cmp [ebp+var_9C4] esi +
jz loc_1007A24  +
cmp [ebp+var_A64] esi +
jz loc_1007A24  +
cmp [ebp+var_FB4] esi +
jz loc_1007A24  +
cmp [ebp+var_974] esi +
jz loc_1007A24  +
cmp [ebp+var_DD4] esi +
jz loc_1007A24  +
push [ebp+var_1204]  +
lea eax [ebp+dwErrCode] +
push ebx  +
push eax  +
call sub_100A263  +
cmp eax esi +
jz loc_10076EE  +
xor eax eax +
jmp loc_1007C2D  +
push 0BEh  +
jmp loc_100771D  +
lea eax [ebx+28h] +
push eax  +
call sub_1005B8B  +
mov edi eax +
test edi edi +
jnz loc_1007A47  +
push 80h  +
jmp loc_100771D  +
cmp edi esi +
jz loc_1007A50  +
cmp edi 2 +
jnz loc_1007A62  +
cmp [ebp+var_B54] esi +
jnz loc_1007A62  +
push 9C6h  +
jmp loc_100771D  +
cmp edi 7 +
jb loc_1007AAE  +
cmp edi 0Ah +
ja loc_1007AAE  +
cmp [ebp+var_B54] esi +
jz loc_1007AA4  +
cmp [ebp+var_D84] esi +
jz loc_1007AA4  +
cmp [ebp+var_D34] esi +
jz loc_1007AA4  +
cmp [ebp+var_C44] esi +
jz loc_1007AA4  +
cmp [ebp+var_CE4] esi +
jz loc_1007AA4  +
cmp [ebp+var_BA4] esi +
jz loc_1007AA4  +
cmp [ebp+var_BF4] esi +
jnz loc_1007AAE  +
push 9C7h  +
jmp loc_100771D  +
cmp edi 6 +
jnz loc_1007AC5  +
cmp [ebp+var_CE4] esi +
jnz loc_1007ACE  +
push 9CEh  +
jmp loc_100771D  +
cmp edi esi +
jz loc_1007AF2  +
cmp edi 2 +
jz loc_1007AF2  +
cmp [ebp+var_C44] 0 +
jnz loc_1007AF2  +
cmp [ebp+var_BA4] 0 +
jnz loc_1007AF2  +
cmp [ebp+var_BF4] esi +
jnz loc_1007B0C  +
push 0B0h  +
jmp loc_100771D  +
cmp [ebp+var_BA4] esi +
jnz loc_1007B0C  +
cmp [ebp+var_C44] esi +
jnz loc_1007B0C  +
push 0B5h  +
jmp loc_100771D  +
cmp [ebp+var_C94] esi +
jnz loc_1007B26  +
cmp [ebp+var_8D4] esi +
jnz loc_1007B26  +
push 1FAh  +
jmp loc_100771D  +
mov eax [ebp+var_1224] +
mov [eax] edi +
cmp [ebp+var_924] esi +
jnz loc_1007B97  +
cmp edi 7 +
jb loc_1007B8D  +
cmp edi 8 +
jbe loc_1007B45  +
cmp edi 0Ah +
jnz loc_1007B8D  +
lea eax [ebx+17E8h] +
cmp word ptr [eax] 0 +
jz loc_1007B97  +
push 0  +
push eax  +
call sub_10182B0  +
cmp eax 7 +
jnz loc_1007B6A  +
push 3Ah  +
pop eax  +
cmp ax [ebx+17F0h] +
jz loc_1007B97  +
push 108h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax 80004005h +
jmp loc_1007C2D  +
push 109h  +
jmp loc_100771D  +
cmp [ebp+var_BA4] esi +
jz loc_1007BA7  +
cmp [ebp+var_C44] esi +
jnz loc_1007BDC  +
cmp [ebp+var_B54] 0 +
jnz loc_1007BDC  +
test edi edi +
jbe loc_1007BC3  +
cmp edi 2 +
jbe loc_1007C13  +
cmp edi 6 +
jbe loc_1007BC3  +
cmp edi 0Ah +
jbe loc_1007C13  +
push [ebp+var_B40]  +
mov [ebp+var_B54] esi +
push offset a10  +
push [ebp+var_B44]  +
jmp loc_1007C0E  +
cmp [ebp+var_B54] esi +
jnz loc_1007C13  +
cmp [ebp+var_BA4] 0 +
jnz loc_1007C13  +
cmp edi 7 +
jb loc_1007BF7  +
cmp edi 0Ah +
jbe loc_1007C13  +
push [ebp+var_B90]  +
mov [ebp+var_BA4] esi +
push offset a000100  +
push [ebp+var_B94]  +
call sub_1018BDF  +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
push [ebp+var_1204]  +
push ebx  +
call sub_100C391  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 628h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor ecx ecx +
push ebx  +
push esi  +
mov [ebp+var_628] eax +
push edi  +
xor eax eax +
mov word ptr [ebp+String] ax +
lea edi [ebp-0Eh] +
stos   +
mov esi 0FEh +
mov [ebp+NumberOfBytesWritten] ecx +
mov [ebp+dwMode] ecx +
mov byte ptr [ebp+var_605] cl +
stos   +
mov [ebp+Buffer] ecx +
mov [ebp+var_618] ecx +
mov [ebp+NumberOfCharsWritten] ecx +
mov [ebp+var_610] ecx +
mov ecx esi +
lea eax [ebp+var_20C] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1007CA8  +
mov ecx esi +
lea eax [ebp+var_605+1] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1007CB7  +
mov ecx esi +
lea eax [ebp+String1] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1007CC6  +
mov edi ds:GetStdHandle +
push 0FFFFFFF6h  +
call edi  +
mov ebx eax +
mov [ebp+hConsoleHandle] ebx +
cmp ebx 0FFFFFFFFh +
jnz loc_1007CF1  +
call sub_1018081  +
xor eax eax +
inc eax  +
jmp loc_1008063  +
push 30h  +
call ds:MessageBeep  +
cmp ebx 0Fh +
jz loc_1007D07  +
cmp ebx 3 +
jnz loc_1007E88  +
lea eax [ebp+dwMode] +
push eax  +
push ebx  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_1007CE4  +
push 1  +
push ebx  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1007CE4  +
mov ebx offset aC +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1007FA3  +
cmp [ebp+NumberOfBytesWritten] 0 +
jz loc_1007D2B  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1007FC7  +
movzx ecx ax +
mov [ebp+var_618] ecx +
cmp ax 8 +
jz loc_1007DB0  +
movzx eax ax +
push eax  +
push ebx  +
lea eax [ebp+var_605+1] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp+var_605+1] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1018C22  +
cmp word ptr [ebp+var_618] 8 +
jnz loc_1007F73  +
cmp [ebp+var_610] 0 +
jz loc_1007D2B  +
push 8  +
push ebx  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_1007CE4  +
push 0  +
push ebx  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_1007CE4  +
push 8  +
push ebx  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_1007CE4  +
push 0  +
lea eax [ebp+String1] +
push eax  +
call sub_10182B0  +
xor ecx ecx +
dec [ebp+var_610]  +
mov [ebp+eax*2+var_40A] cx +
jmp loc_1007D2B  +
mov ebx offset aC +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_605] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1007CE4  +
cmp [ebp+NumberOfBytesWritten] 0 +
jz loc_1007FC7  +
cmp word ptr [ebp+Buffer] 0Dh +
jz loc_1007FC7  +
cmp word ptr [ebp+Buffer] 0Ah +
jz loc_1007FC7  +
cmp word ptr [ebp+Buffer] 9 +
jz loc_1007FC7  +
mov al byte ptr [ebp+var_605] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesWritten] esi +
call sub_10183F6  +
movzx eax [ebp+var_20C] +
push 0  +
mov [ebp+Buffer] eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call ds:WriteFile  +
test eax eax +
jz loc_1007CE4  +
movzx eax word ptr [ebp+Buffer] +
mov [ebp+var_618] eax +
movzx eax word ptr [ebp+Buffer] +
push eax  +
push ebx  +
lea eax [ebp+String1] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
inc [ebp+var_610]  +
jmp loc_1007E8D  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_618] +
push eax  +
push 0FFFFFFF5h  +
call edi  +
push eax  +
call ds:WriteFile  +
test eax eax +
jz loc_1007CE4  +
inc [ebp+var_610]  +
jmp loc_1007D2B  +
call sub_1018081  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
test eax eax +
jnz loc_1007CE9  +
jmp loc_1007CE4  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1018C65  +
xor esi esi +
inc esi  +
cmp [ebp+var_610] esi +
jnz loc_1008048  +
push 0  +
push esi  +
push 0BBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_10182D1  +
test eax eax +
jnz loc_1008007  +
xor eax eax +
jmp loc_1008063  +
push 0  +
push esi  +
push 0BCh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_10182D1  +
test eax eax +
jnz loc_1008048  +
mov eax [ebp+var_628] +
push 226h  +
mov [eax] esi +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
jmp loc_1008003  +
push 227h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_10080A5  +
mov ecx [eax] +
push esi  +
push offset dword_1001770  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_10080E4  +
mov ecx [eax] +
push esi  +
push offset dword_1001780  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_1008123  +
mov ecx [eax] +
push esi  +
push offset dword_1001790  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_1008162  +
mov ecx [eax] +
push esi  +
push offset dword_10017A0  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov [ebp-18h] ecx +
xor esi esi +
cmp [ebp+8] esi +
jnz loc_100818F  +
xor eax eax +
jmp loc_10081E8  +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_1006A11  +
mov [ebp-4] esi +
jmp loc_10081B5  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10081B3 +
retn   +
xor esi esi +
cmp [ebp-14h] esi +
jnz loc_10081CC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
call ds:SysFreeString  +
mov eax 8007000Eh +
jmp loc_10081E8  +
push dword ptr [ebp-14h]  +
mov ecx [ebp-18h] +
call sub_1006274  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_GS  +
mov ecx [ebp+14h] +
mov eax [ebp+8] +
mov esi [ebp+0Ch] +
mov [ebp-434h] ecx +
mov ecx [ebp+18h] +
mov [ebp-430h] ecx +
mov ecx [ebp+1Ch] +
xor ebx ebx +
mov [ebp-40Ch] ecx +
mov [ebp-41Ch] ebx +
mov dword ptr [ebp-4] 1 +
mov [ebp-410h] ebx +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-41Ch] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jge loc_1008283  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-410h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-41Ch] +
call sub_100637A  +
mov eax [ebp-414h] +
call sub_10177AC  +
retn 18h  +
mov [ebp-420h] ebx +
mov byte ptr [ebp-4] 4 +
mov eax [ebp+10h] +
mov edi ds:SysFreeString +
dec eax  +
cmp eax 9 +
ja loc_10083DB  +
jmp ds:off_1008E91[eax*4]  +
lea eax [ebp-418h] +
push eax  +
push dword ptr [ebp-40Ch]  +
call ds:SystemTimeToFileTime  +
mov [ebp-40Ch] eax +
lea eax [ebp-428h] +
push eax  +
push dword ptr [ebp-434h]  +
call ds:SystemTimeToFileTime  +
cmp [ebp-40Ch] ebx +
jz loc_1008310  +
cmp eax ebx +
jz loc_1008310  +
lea eax [ebp-428h] +
push eax  +
lea eax [ebp-418h] +
push eax  +
call ds:CompareFileTime  +
test eax eax +
jle loc_1008310  +
push 228h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1008B85  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-420h]  +
call ds:SysFreeString  +
jmp loc_1008257  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 6 +
push ebx  +
push dword ptr [esi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_10083CC  +
lea eax [ebp-420h] +
push eax  +
push dword ptr [esi+24h]  +
call sub_1014458  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10083CC  +
mov eax [ebp-410h] +
mov ecx [eax] +
lea edx [ebp-40Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10083CC  +
mov eax [ebp-40Ch] +
push dword ptr [ebp-420h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
cmp [ebp-414h] ebx +
jmp loc_100832D  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 8 +
push ebx  +
push dword ptr [esi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_10083CC  +
lea eax [ebp-420h] +
push eax  +
push dword ptr [esi+24h]  +
call sub_10143F9  +
jmp loc_100838D  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 2  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-40Ch] +
call sub_1008079  +
mov byte ptr [ebp-4] 9 +
push ebx  +
push dword ptr [esi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_10084AF  +
mov eax [ebp-40Ch] +
mov [ebp-424h] eax +
mov eax [eax] +
push 0Ah  +
push dword ptr [esi+24h]  +
add eax 54h +
mov [ebp-414h] eax +
call sub_101985B  +
push eax  +
push dword ptr [ebp-424h]  +
mov eax [ebp-414h] +
call dword ptr [eax]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_1006A4C  +
jmp loc_10083DB  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 3  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-40Ch] +
call sub_10080B8  +
mov byte ptr [ebp-4] 0Ah +
push ebx  +
push dword ptr [esi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1008534  +
mov eax [ebp-40Ch] +
mov ebx [eax] +
push 0Ah  +
push dword ptr [esi+24h]  +
mov [ebp-424h] eax +
add ebx 5Ch +
call sub_101985B  +
push eax  +
push dword ptr [ebp-424h]  +
call dword ptr [ebx]  +
mov [ebp-414h] eax +
xor ebx ebx +
cmp [ebp-414h] ebx +
jl loc_1008577  +
mov eax [ebp-40Ch] +
mov [ebp-424h] eax +
mov eax [eax] +
add eax 54h +
mov [ebp-414h] eax +
lea eax [esi+224h] +
push eax  +
call sub_100A900  +
movzx eax ax +
push eax  +
push dword ptr [ebp-424h]  +
mov eax [ebp-414h] +
call dword ptr [eax]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_1006A4C  +
jmp loc_10083DB  +
push ebx  +
push dword ptr [esi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1008796  +
push ebx  +
push 1  +
push 1D7h  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086CA  +
push ebx  +
push 1  +
push offset aFirst  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086CA  +
push ebx  +
push 1  +
push 1D8h  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086BE  +
push ebx  +
push 1  +
push offset aSecond_1  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086BE  +
push ebx  +
push 1  +
push 1D9h  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086B2  +
push ebx  +
push 1  +
push offset aThird  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086B2  +
push ebx  +
push 1  +
push 1DAh  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086A6  +
push ebx  +
push 1  +
push offset aFourth  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10086A6  +
push ebx  +
push 1  +
push 1DBh  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_100869A  +
push ebx  +
push 1  +
push offset aLast  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jnz loc_1008796  +
mov dword ptr [ebp-424h] 20h +
jmp loc_10086D4  +
mov dword ptr [ebp-424h] 8 +
jmp loc_10086D4  +
mov dword ptr [ebp-424h] 4 +
jmp loc_10086D4  +
mov dword ptr [ebp-424h] 2 +
jmp loc_10086D4  +
mov dword ptr [ebp-424h] 1 +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 5  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-40Ch] +
call sub_10080F7  +
mov byte ptr [ebp-4] 0Bh +
cmp word ptr [ebp-424h] 20h +
mov eax [ebp-40Ch] +
mov ecx [eax] +
jnz loc_1008726  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+6Ch]  +
jmp loc_1008730  +
push dword ptr [ebp-424h]  +
push eax  +
call dword ptr [ecx+5Ch]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008782  +
lea eax [esi+224h] +
push eax  +
call sub_100A900  +
mov ecx [ebp-40Ch] +
mov edx [ecx] +
movzx eax ax +
push eax  +
push ecx  +
call dword ptr [edx+54h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008782  +
lea eax [esi+420h] +
push eax  +
call sub_100ABD8  +
mov ecx [ebp-40Ch] +
mov edx [ecx] +
movzx eax ax +
push eax  +
push ecx  +
call dword ptr [edx+64h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_1006A4C  +
jmp loc_10083DB  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 4  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008333  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-424h] +
call sub_1008136  +
mov byte ptr [ebp-4] 0Ch +
lea eax [esi+420h] +
push eax  +
call sub_100ABD8  +
mov ecx [ebp-424h] +
mov edx [ecx] +
movzx eax ax +
push eax  +
push ecx  +
call dword ptr [edx+5Ch]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10088F8  +
test byte ptr [esi+1BE8h] 20h +
jz loc_1008872  +
push dword ptr [esi+24h]  +
call ds:_wtol  +
pop ecx  +
lea ecx [eax-1] +
cmp ecx 0Bh +
ja loc_100882B  +
push eax  +
call sub_100AF1B  +
mov ecx [ebp-424h] +
mov edx [ecx] +
movzx eax ax +
push eax  +
push ecx  +
call dword ptr [edx+5Ch]  +
jmp loc_100886C  +
cmp [esi+24h] ebx +
jz loc_1008872  +
push ebx  +
push 1  +
push 1F2h  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_100885E  +
push ebx  +
push 1  +
push offset aLastday  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jnz loc_1008872  +
mov eax [ebp-424h] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+64h]  +
mov [ebp-414h] eax +
cmp [ebp-414h] ebx +
jl loc_10088F8  +
lea eax [esi+224h] +
push eax  +
call ds:_wtol  +
movzx eax ax +
pop ecx  +
cmp ax 1 +
jbe loc_10088AD  +
mov ecx [ebp-424h] +
mov edx [ecx] +
lea ecx [eax-1] +
xor eax eax +
inc eax  +
shl eax cl +
push eax  +
push dword ptr [ebp-424h]  +
call dword ptr [edx+54h]  +
jmp loc_10088F2  +
test byte ptr [esi+1BE8h] 20h +
jz loc_10088E4  +
push ebx  +
push 1  +
push 1F2h  +
call sub_1019FBD  +
push eax  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10088F8  +
push ebx  +
push 1  +
push offset aLastday  +
push dword ptr [esi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_10088F8  +
mov eax [ebp-424h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+54h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-424h] +
call sub_1006A4C  +
jmp loc_10083DB  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 8  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10089AF  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-424h] +
call sub_10043BB  +
mov byte ptr [ebp-4] 0Dh +
lea eax [esi+17E8h] +
cmp [eax] bx +
jz loc_1008994  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 0Eh +
lea ecx [ebp-40Ch] +
push ecx  +
push eax  +
call sub_101437B  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008988  +
mov eax [ebp-424h] +
push dword ptr [ebp-40Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 0Dh +
push dword ptr [ebp-40Ch]  +
call edi  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-424h] +
call sub_1006A4C  +
cmp [ebp-414h] ebx +
jge loc_1008B85  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-420h]  +
call edi  +
jmp loc_1008257  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 9  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10089AF  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-424h] +
call sub_10043FA  +
mov byte ptr [ebp-4] 0Fh +
lea eax [esi+17E8h] +
cmp [eax] bx +
jz loc_1008A3E  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 10h +
lea ecx [ebp-40Ch] +
push ecx  +
push eax  +
call sub_101437B  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008A32  +
mov eax [ebp-424h] +
push dword ptr [ebp-40Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-40Ch]  +
call edi  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-424h] +
call sub_1006A4C  +
jmp loc_10089A3  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_10089AF  +
push dword ptr [ebp-410h]  +
lea ecx [ebp-424h] +
call sub_100437C  +
mov byte ptr [ebp-4] 11h +
push dword ptr [esi+24h]  +
lea eax [ebp-408h] +
push dword ptr [esi+20h]  +
push offset aQuerylistQuery  +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 14h +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008B51  +
mov eax [ebp-424h] +
mov [ebp-40Ch] eax +
lea eax [ebp-408h] +
push eax  +
lea ecx [ebp-438h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 12h +
mov eax [eax] +
mov ecx [ebp-40Ch] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+54h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 11h +
push dword ptr [ebp-438h]  +
call edi  +
cmp [ebp-414h] ebx +
jl loc_1008B51  +
lea eax [esi+17E8h] +
cmp [eax] bx +
jz loc_1008B51  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 13h +
lea ecx [ebp-40Ch] +
push ecx  +
push eax  +
call sub_101437B  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008B45  +
mov eax [ebp-424h] +
push dword ptr [ebp-40Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 11h +
push dword ptr [ebp-40Ch]  +
call edi  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-424h] +
call sub_1006A4C  +
jmp loc_10089A3  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push 6  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp-414h] eax +
jmp loc_10083DB  +
cmp [esi+1BF4h] ebx +
jz loc_1008BF7  +
cmp [ebp-410h] ebx +
jz loc_1008BF7  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-410h] +
mov ecx [eax] +
lea edx [ebp-40Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008BD4  +
mov eax [ebp-40Ch] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+30h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jge loc_1008BE8  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
jmp loc_10089AF  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
mov [ebp-42Ch] ebx +
mov byte ptr [ebp-4] 16h +
lea eax [ebp-42Ch] +
push eax  +
mov eax [ebp-434h] +
movzx ecx word ptr [eax+0Ah] +
push ecx  +
movzx ecx word ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
call sub_101428B  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008C51  +
mov eax [ebp-410h] +
push dword ptr [ebp-42Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
mov [ebp-414h] eax +
jge loc_1008C62  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-42Ch]  +
call edi  +
jmp loc_10089AF  +
push ebx  +
lea eax [esi+0FE8h] +
push eax  +
call sub_10182B0  +
test eax eax +
ja loc_1008C84  +
push ebx  +
lea eax [esi+0BF0h] +
push eax  +
call sub_10182B0  +
test eax eax +
jbe loc_1008CFB  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 17h +
lea eax [ebp-40Ch] +
push eax  +
mov eax [ebp-430h] +
movzx ecx word ptr [eax+0Ah] +
push ecx  +
movzx ecx word ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
call sub_101428B  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008CDE  +
mov eax [ebp-410h] +
push dword ptr [ebp-40Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jge loc_1008CEF  +
mov byte ptr [ebp-4] 16h +
push dword ptr [ebp-40Ch]  +
call edi  +
jmp loc_1008C51  +
mov byte ptr [ebp-4] 16h +
push dword ptr [ebp-40Ch]  +
call edi  +
lea eax [esi+13F0h] +
push ebx  +
push eax  +
call sub_10182B0  +
test eax eax +
jbe loc_1008DAD  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 19h +
mov eax [ebp-410h] +
mov ecx [eax] +
lea edx [ebp-40Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008D8A  +
mov [ebp-424h] ebx +
mov byte ptr [ebp-4] 1Ah +
lea eax [ebp-424h] +
push eax  +
lea eax [esi+13F0h] +
push eax  +
call sub_10142FD  +
cmp eax ebx +
mov [ebp-414h] eax +
jl loc_1008D76  +
mov eax [ebp-40Ch] +
push dword ptr [ebp-424h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 19h +
push dword ptr [ebp-424h]  +
call edi  +
cmp [ebp-414h] ebx +
jge loc_1008D9E  +
mov byte ptr [ebp-4] 16h +
lea ecx [ebp-40Ch] +
call sub_100637A  +
jmp loc_1008C51  +
mov byte ptr [ebp-4] 16h +
lea ecx [ebp-40Ch] +
call sub_100637A  +
add esi 15ECh +
push ebx  +
push esi  +
mov [ebp-430h] esi +
call sub_10182B0  +
test eax eax +
jbe loc_1008E8C  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 1Ch +
mov eax [ebp-410h] +
mov ecx [eax] +
lea edx [ebp-40Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_1008E31  +
mov [ebp-424h] ebx +
mov byte ptr [ebp-4] 1Dh +
lea eax [ebp-424h] +
push eax  +
push dword ptr [ebp-430h]  +
call sub_1014458  +
mov esi eax +
cmp esi ebx +
jl loc_1008E21  +
mov eax [ebp-40Ch] +
push dword ptr [ebp-424h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
mov byte ptr [ebp-4] 1Ch +
push dword ptr [ebp-424h]  +
call edi  +
cmp esi ebx +
jge loc_1008E7D  +
mov byte ptr [ebp-4] 16h +
lea ecx [ebp-40Ch] +
call sub_100637A  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-42Ch]  +
call edi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-420h]  +
call edi  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-410h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-41Ch] +
call sub_100637A  +
mov eax esi +
jmp loc_100827B  +
mov byte ptr [ebp-4] 16h +
lea ecx [ebp-40Ch] +
call sub_100637A  +
xor esi esi +
jmp loc_1008E40  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+var_14] ebx +
lea edi [ebp+var_10] +
stos   +
lea eax [ebp+var_14] +
push eax  +
push [ebp+hFile]  +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_1008F01  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_100905A  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100905A  +
cmp [ebp+var_10] ebx +
jz loc_1008F10  +
mov eax 8007000Eh +
jmp loc_100905A  +
cmp [ebp+var_14] ebx +
jnz loc_1008F1F  +
mov eax 80070057h +
jmp loc_100905A  +
push esi  +
xor esi esi +
inc esi  +
test byte ptr [ebp+var_14] 1 +
mov [ebp+NumberOfBytesRead] ebx +
jz loc_1008F2E  +
xor esi esi +
mov edi ds:ReadFile +
push ebx  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hFile]  +
mov [ebp+Buffer] ebx +
call edi  +
test eax eax +
jz loc_1008FDD  +
cmp [ebp+NumberOfBytesRead] 2 +
jnz loc_1008F60  +
mov eax 0FEFFh +
cmp word ptr [ebp+Buffer] ax +
jz loc_1008F62  +
xor esi esi +
cmp esi ebx +
jz loc_1008FCC  +
mov esi [ebp+var_14] +
shr esi 1 +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_10172C7  +
pop ecx  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_1008FF8  +
push 0  +
lea ecx [ebp+NumberOfBytesRead] +
push ecx  +
lea ebx [esi+esi] +
push ebx  +
push eax  +
push [ebp+hFile]  +
call edi  +
test eax eax +
jnz loc_1008FA2  +
push [ebp+lpString]  +
jmp loc_1009011  +
lea eax [esi+esi-2] +
cmp [ebp+NumberOfBytesRead] eax +
jz loc_1008FB3  +
push [ebp+lpString]  +
jmp loc_1009035  +
mov esi [ebp+lpString] +
mov ecx [ebp+arg_4] +
xor eax eax +
push esi  +
mov [ebx+esi-2] ax +
call sub_10069EB  +
push esi  +
jmp loc_100904F  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hFile]  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jnz loc_1008FE7  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jmp loc_100901F  +
mov esi [ebp+var_14] +
inc esi  +
push esi  +
call sub_10172C7  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1008FFF  +
mov eax 8007000Eh +
jmp loc_1009059  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push esi  +
push ebx  +
push [ebp+hFile]  +
call edi  +
push ebx  +
test eax eax +
jnz loc_100902D  +
call sub_10172D7  +
pop ecx  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_1009059  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1009059  +
lea eax [esi-1] +
cmp [ebp+NumberOfBytesRead] eax +
jz loc_1009041  +
call sub_10172D7  +
mov eax 80004005h +
jmp loc_1009058  +
mov ecx [ebp+arg_4] +
mov byte ptr [ebx+esi-1] 0 +
call sub_1008175  +
push ebx  +
mov edi eax +
call sub_10172D7  +
mov eax edi +
pop ecx  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
call sub_1004E0D  +
push 0Ch  +
call sub_1017299  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1009096  +
push dword ptr [ebp+8]  +
call sub_1006184  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
and dword ptr [esi] 0 +
cmp word ptr [edi] 8 +
jnz loc_10090CF  +
push dword ptr [edi+8]  +
call sub_1009065  +
jmp loc_1009106  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push edi  +
push 8  +
lea ecx [ebp-1Ch] +
call sub_10061C1  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_1009065  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1003B38  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-4] ebx +
cmp dword ptr [ebp+10h] 3 +
jz loc_1009209  +
mov eax [ebp+0Ch] +
cmp [eax+0Ch] ebx +
jz loc_1009209  +
lea ecx [ebp+14h] +
call sub_10068B2  +
test eax eax +
jz loc_1009209  +
mov eax [ebp+14h] +
cmp eax ebx +
jz loc_1009157  +
mov eax [eax] +
jmp loc_1009159  +
xor eax eax +
push eax  +
call sub_10060BA  +
test eax eax +
jnz loc_1009209  +
mov eax [ebp+14h] +
cmp eax ebx +
jz loc_1009172  +
mov eax [eax] +
jmp loc_1009174  +
xor eax eax +
push eax  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push 1  +
push eax  +
call sub_1019E6A  +
mov edi [ebp+8] +
add esp 14h +
push 1FCh  +
lea esi [edi+0Ch] +
push esi  +
call sub_1018894  +
test eax eax +
jnz loc_10091C6  +
call sub_1018081  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_10091C1  +
call sub_1004DE0  +
mov [ebp+14h] ebx +
xor eax eax +
inc eax  +
jmp loc_100921E  +
push dword ptr [esi]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi]  +
call sub_1018ECA  +
test eax eax +
jz loc_10091A9  +
test byte ptr [edi+1BE8h] 10h +
jz loc_1009209  +
push ebx  +
push dword ptr [esi]  +
call sub_10182B0  +
test eax eax +
jnz loc_1009209  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_100921C  +
call sub_1004DE0  +
mov [ebp+14h] ebx +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov ebx [ebp+0Ch] +
xor edi edi +
mov [ebp-61Ch] eax +
mov [ebp-618h] edi +
mov [ebp-4] edi +
push edi  +
push 8000080h  +
push 3  +
push edi  +
push 5  +
push 80000000h  +
push dword ptr [ebx+18h]  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1009298  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
or [ebp-4] esi +
push edi  +
call ds:SysFreeString  +
xor eax eax +
call sub_10177AC  +
retn 0Ch  +
lea eax [ebp-618h] +
push eax  +
push esi  +
call sub_1008EBE  +
cmp eax edi +
mov [ebp-60Ch] eax +
jge loc_10092E9  +
push 9DAh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push esi  +
call ds:CloseHandle  +
mov ebx [ebp-60Ch] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-618h]  +
call ds:SysFreeString  +
mov eax ebx +
jmp loc_1009290  +
push esi  +
call ds:CloseHandle  +
mov esi ds:VariantInit +
lea eax [ebp-62Ch] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-63Ch] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 2 +
mov [ebp-608h] edi +
cmp [ebx+1C10h] edi +
jz loc_100932A  +
mov dword ptr [ebp-608h] 2 +
jmp loc_1009360  +
push edi  +
push dword ptr [ebx+0Ch]  +
call sub_10182B0  +
test eax eax +
jbe loc_1009341  +
mov dword ptr [ebp-608h] 1 +
cmp [ebx+1BF0h] edi +
jz loc_1009360  +
mov eax [ebp-608h] +
dec eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 6 +
mov [ebp-608h] eax +
xor eax eax +
push 1FAh  +
mov [ebp-20Ch] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
call memset  +
mov eax [ebx+8] +
add esp 0Ch +
cmp eax edi +
jz loc_10093B5  +
push eax  +
call sub_10060BA  +
test eax eax +
jz loc_10093B5  +
push 0FEh  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebx+8]  +
push dword ptr [ebx+1C08h]  +
call sub_10060D6  +
mov dword ptr [ebp-608h] 5 +
jmp loc_10093C9  +
push 0FEh  +
push dword ptr [ebx+8]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
lea eax [ebp-20Ch] +
push eax  +
lea ecx [ebp-62Ch] +
call sub_10068CE  +
push ecx  +
lea eax [ebp-62Ch] +
mov ecx esp +
mov [ebp-60Ch] esp +
push eax  +
call sub_10090AB  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-608h]  +
push dword ptr [ebp+10h]  +
push ebx  +
mov byte ptr [ebp-4] 2 +
call sub_1009115  +
cmp eax 1 +
jnz loc_1009441  +
mov [ebp-4] al +
mov esi ds:VariantClear +
lea eax [ebp-63Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 0 +
lea eax [ebp-62Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov ebx 80004005h +
jmp loc_10092D5  +
mov [ebp-610h] edi +
mov byte ptr [ebp-4] 5 +
lea eax [ebx+818h] +
push eax  +
lea ecx [ebp-614h] +
mov [ebp-60Ch] eax +
call loc_10069B4  +
mov byte ptr [ebp-4] 6 +
push edi  +
push dword ptr [ebx+0Ch]  +
call sub_10182B0  +
test eax eax +
jbe loc_1009482  +
push dword ptr [ebx+0Ch]  +
lea ecx [ebp-63Ch] +
call sub_10068CE  +
lea eax [ebp-64Ch] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 7 +
lea edx [ebp-610h] +
push edx  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp-608h]  +
lea esi [ebp-64Ch] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp-63Ch] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp-62Ch] +
movs   +
movs   +
mov eax [ebp-61Ch] +
mov eax [eax] +
mov ecx [eax] +
movs   +
movs   +
xor edx edx +
xor edi edi +
cmp [ebx+1BFCh] edi +
setnz dl  +
lea edx ds:2[edx*4] +
push edx  +
push dword ptr [ebp-618h]  +
push dword ptr [ebp-614h]  +
push eax  +
call dword ptr [ecx+40h]  +
mov ebx eax +
mov byte ptr [ebp-4] 6 +
mov esi ds:VariantClear +
lea eax [ebp-64Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
cmp ebx edi +
jge loc_10095FD  +
push ebx  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp-608h] edi +
mov byte ptr [ebp-4] 9 +
lea eax [ebp-608h] +
push eax  +
push edi  +
call ds:GetErrorInfo  +
cmp eax edi +
jl loc_10095A4  +
cmp [ebp-608h] edi +
jz loc_10095A4  +
mov [ebp-60Ch] edi +
mov byte ptr [ebp-4] 0Ah +
mov eax [ebp-608h] +
mov ecx [eax] +
lea edx [ebp-60Ch] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax edi +
jl loc_1009594  +
mov eax [ebp-60Ch] +
cmp [eax] di +
jz loc_1009594  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-60Ch]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-608h] +
call sub_100637A  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-614h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-610h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-63Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 0 +
lea eax [ebp-62Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
jmp loc_10092D5  +
jz loc_100961B  +
push ebx  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10004h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_10095B3  +
push dword ptr [ebp-60Ch]  +
push 12Eh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-604h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-604h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-614h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-610h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-63Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 0 +
lea eax [ebp-62Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
xor ebx ebx +
jmp loc_10092D5  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
mov [ebp-0E08h] eax +
xor eax eax +
mov edi 1FAh +
push edi  +
mov [ebp-408h] ax +
xor ebx ebx +
lea eax [ebp-406h] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
push edi  +
mov [ebp-604h] ax +
lea eax [ebp-602h] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
mov [ebp-0E0Ch] ebx +
mov dword ptr [ebp-4] 1 +
mov [ebp-0E10h] ebx +
mov byte ptr [ebp-4] 3 +
mov [ebp-0E00h] ebx +
mov byte ptr [ebp-4] 5 +
mov [ebp-0E14h] ebx +
mov byte ptr [ebp-4] 7 +
mov edi ds:VariantInit +
lea eax [ebp-0E4Ch] +
push eax  +
call edi  +
mov byte ptr [ebp-4] 8 +
lea eax [ebp-0E5Ch] +
push eax  +
call edi  +
mov byte ptr [ebp-4] 9 +
cmp [esi+1C0Ch] ebx +
jnz loc_10099C2  +
lea eax [ebp-0E6Ch] +
push eax  +
call ds:GetLocalTime  +
xor eax eax +
lea edi [ebp-0E28h] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp-0E38h] +
stos   +
stos   +
stos   +
stos   +
push ebx  +
lea edi [esi+0DECh] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_10097A6  +
lea eax [ebp-0E28h] +
push eax  +
lea eax [ebp-0E26h] +
push eax  +
lea eax [ebp-0E22h] +
push eax  +
push edi  +
call sub_100B8E4  +
cmp eax 1 +
jz loc_10097B1  +
xor eax eax +
cmp ax [ebp-0E28h] +
jnz loc_10097DB  +
mov ax [ebp-0E66h] +
mov [ebp-0E22h] ax +
mov ax [ebp-0E6Ah] +
mov [ebp-0E26h] ax +
mov ax [ebp-0E6Ch] +
mov [ebp-0E28h] ax +
push ebx  +
lea edi [esi+9F4h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1009808  +
lea eax [ebp-0E1Eh] +
push eax  +
lea eax [ebp-0E20h] +
push eax  +
push edi  +
call sub_100A834  +
mov [ebp-0DF8h] eax +
jmp loc_1009812  +
mov dword ptr [ebp-0DF8h] 1 +
cmp dword ptr [ebp-0DF8h] 1 +
jnz loc_1009837  +
mov ax [ebp-0E64h] +
mov [ebp-0E20h] ax +
mov ax [ebp-0E62h] +
mov [ebp-0E1Eh] ax +
push ebx  +
lea edi [esi+0FE8h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1009869  +
lea eax [ebp-0E38h] +
push eax  +
lea eax [ebp-0E36h] +
push eax  +
lea eax [ebp-0E32h] +
push eax  +
push edi  +
call sub_100B8E4  +
mov [ebp-0DF8h] eax +
push ebx  +
lea edi [esi+0BF0h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1009894  +
lea eax [ebp-0E2Eh] +
push eax  +
lea eax [ebp-0E30h] +
push eax  +
push edi  +
call sub_100A834  +
mov [ebp-0DF8h] eax +
cmp dword ptr [ebp-0DF8h] 1 +
jz loc_10098B4  +
mov eax [ebp-0E38h] +
or eax [ebp-0E36h] +
or eax [ebp-0E32h] +
test ax ax +
jnz loc_10098DE  +
mov ax [ebp-0E22h] +
mov [ebp-0E32h] ax +
mov ax [ebp-0E26h] +
mov [ebp-0E36h] ax +
mov ax [ebp-0E28h] +
mov [ebp-0E38h] ax +
cmp [ebp+10h] ebx +
jbe loc_10098EE  +
cmp dword ptr [ebp+10h] 2 +
ja loc_10098EE  +
mov eax [esi+24h] +
jmp loc_10098F4  +
lea eax [esi+15ECh] +
lea ecx [ebp-0E18h] +
push ecx  +
lea ecx [ebp-0DFCh] +
push ecx  +
lea ecx [ebp-0DF8h] +
push ecx  +
lea ecx [ebp-0E04h] +
push ecx  +
push dword ptr [ebp-0E2Eh]  +
lea ecx [esi+13F0h] +
push dword ptr [ebp-0E30h]  +
mov [ebp-0DFCh] ebx +
push dword ptr [ebp-0E1Eh]  +
mov [ebp-0E18h] ebx +
push dword ptr [ebp-0E20h]  +
mov [ebp-0E04h] ebx +
push edi  +
push ecx  +
push eax  +
mov [ebp-0DF8h] ebx +
call sub_100C054  +
cmp eax ebx +
jz loc_10099C2  +
mov byte ptr [ebp-4] 8 +
mov esi ds:VariantClear +
lea eax [ebp-0E5Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 7 +
lea eax [ebp-0E4Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0E14h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0E00h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0E10h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E0Ch] +
call sub_100637A  +
xor eax eax +
inc eax  +
jmp loc_1009A9C  +
push ebx  +
push dword ptr [esi+10h]  +
xor edi edi +
inc edi  +
call sub_10182B0  +
test eax eax +
jz loc_1009AA4  +
push dword ptr [esi+10h]  +
call sub_10060BA  +
test eax eax +
jnz loc_1009AA4  +
mov eax [ebp-0E08h] +
cmp [eax+8] ebx +
jz loc_1009AA4  +
push dword ptr [esi+10h]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [esi+14h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+14h]  +
call sub_1018ECA  +
test eax eax +
jnz loc_1009AA4  +
call sub_1018081  +
mov byte ptr [ebp-4] 8 +
mov esi ds:VariantClear +
lea eax [ebp-0E5Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 7 +
lea eax [ebp-0E4Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0E14h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0E00h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0E10h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E0Ch] +
call sub_100637A  +
mov eax edi +
call sub_10177AC  +
retn 0Ch  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-0E0Ch] +
call sub_1004439  +
mov eax [ebp-0E0Ch] +
cmp eax ebx +
jz loc_1009A32  +
mov ecx [eax] +
lea edx [ebp-0E10h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax ebx +
jl loc_1009BF7  +
cmp [esi+1C0Ch] ebx +
jz loc_1009B76  +
push dword ptr [ebp-0E08h]  +
lea eax [ebp-0E10h] +
push esi  +
push eax  +
call sub_100922B  +
cmp eax ebx +
jge loc_1009B07  +
mov ebx edi +
mov byte ptr [ebp-4] 8 +
mov esi ds:VariantClear +
lea eax [ebp-0E5Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 7 +
lea eax [ebp-0E4Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0E14h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0E00h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0E10h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E0Ch] +
call sub_100637A  +
mov eax ebx +
jmp loc_1009A9C  +
mov eax [ebp-0E0Ch] +
mov ecx [eax] +
lea edx [ebp-0E00h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
jl loc_1009BF7  +
lea eax [ebp-604h] +
push eax  +
lea eax [ebp-408h] +
push eax  +
push esi  +
lea eax [ebp-0E00h] +
push eax  +
call sub_1006A6F  +
cmp eax ebx +
jl loc_1009BF7  +
lea eax [ebp-0E6Ch] +
push eax  +
lea eax [ebp-0E38h] +
push eax  +
lea eax [ebp-0E28h] +
push eax  +
push dword ptr [ebp+10h]  +
lea eax [ebp-0E00h] +
push esi  +
push eax  +
call sub_10081F5  +
cmp eax ebx +
jl loc_1009BF7  +
push esi  +
lea eax [ebp-0E00h] +
push eax  +
call sub_1006B33  +
cmp eax ebx +
jl loc_1009BF7  +
lea eax [ebp-0E00h] +
push eax  +
call sub_1006C49  +
cmp eax ebx +
jge loc_1009C16  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_1009B05  +
test byte ptr [esi+1BE8h] 10h +
mov dword ptr [ebp-0E04h] 3 +
jz loc_1009C2F  +
mov [ebp-0E04h] edi +
cmp [esi+1BF0h] ebx +
jz loc_1009C50  +
mov eax [ebp-0E04h] +
dec eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 6 +
mov [ebp-0E04h] eax +
jmp loc_1009C62  +
cmp [esi+1C10h] ebx +
jz loc_1009C62  +
mov dword ptr [ebp-0E04h] 2 +
xor eax eax +
push 1FAh  +
mov [ebp-20Ch] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
mov [ebp-0DF8h] ebx +
call memset  +
mov eax [esi+8] +
add esp 0Ch +
cmp eax ebx +
jz loc_1009D02  +
push eax  +
call sub_10060BA  +
test eax eax +
jz loc_1009CBD  +
push 0FEh  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+1C08h]  +
call sub_10060D6  +
mov dword ptr [ebp-0E04h] 5 +
jmp loc_1009CE8  +
lea eax [ebp-0DF8h] +
push eax  +
push dword ptr [esi+8]  +
call sub_10063A4  +
cmp eax edi +
jz loc_1009B05  +
push 0FEh  +
push dword ptr [esi+8]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
lea eax [ebp-20Ch] +
push eax  +
lea ecx [ebp-0E4Ch] +
call sub_10068CE  +
cmp [ebp-0DF8h] ebx +
jnz loc_1009D54  +
push ecx  +
lea eax [ebp-0E4Ch] +
mov ecx esp +
mov [ebp-0E3Ch] esp +
push eax  +
call sub_10090AB  +
mov byte ptr [ebp-4] 0Ah +
push dword ptr [ebp-0E04h]  +
push dword ptr [ebp-0E08h]  +
push esi  +
mov byte ptr [ebp-4] 9 +
call sub_1009115  +
cmp eax edi +
jz loc_1009B05  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jbe loc_1009D54  +
push dword ptr [esi+0Ch]  +
lea ecx [ebp-0E5Ch] +
call sub_10068CE  +
cmp [esi+1BECh] ebx +
jnz loc_1009D68  +
cmp [ebp-0DF8h] ebx +
jz loc_1009E0F  +
mov [ebp-0E08h] ebx +
mov byte ptr [ebp-4] 0Ch +
mov eax [ebp-0E00h] +
mov ecx [eax] +
lea edx [ebp-0E08h] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jl loc_1009DC0  +
mov ecx [esi+1BECh] +
cmp ecx ebx +
jz loc_1009DA1  +
mov eax [ebp-0E08h] +
mov edx [eax] +
dec ecx  +
push ecx  +
push eax  +
call dword ptr [edx+48h]  +
cmp eax ebx +
jl loc_1009DC0  +
cmp [ebp-0DF8h] ebx +
jz loc_1009DBC  +
mov eax [ebp-0E08h] +
push dword ptr [esi+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
cmp eax ebx +
jge loc_1009DEE  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0E08h] +
call sub_100637A  +
jmp loc_1009B05  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0E08h] +
call sub_100637A  +
cmp [ebp-0DF8h] ebx +
jz loc_1009E0F  +
mov dword ptr [ebp-0E04h] 4 +
mov eax [esi+1BFCh] +
add esi 818h +
mov [ebp-0DFCh] eax +
mov [ebp-0E18h] esi +
push dword ptr [ebp-0E18h]  +
lea ecx [ebp-0DF8h] +
call sub_1006860  +
mov byte ptr [ebp-4] 0Dh +
lea eax [ebp-0E7Ch] +
push eax  +
call ds:VariantInit  +
mov byte ptr [ebp-4] 0Eh +
mov eax [ebp-0DF8h] +
cmp eax ebx +
jz loc_1009E5B  +
mov ecx [eax] +
jmp loc_1009E5D  +
xor ecx ecx +
mov eax [ebp-0E10h] +
lea esi [ebp-0E14h] +
push esi  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp-0E04h]  +
mov edx [eax] +
lea esi [ebp-0E7Ch] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp-0E5Ch] +
movs   +
movs   +
movs   +
sub esp 10h +
xor edx edx +
cmp [ebp-0DFCh] ebx +
movs   +
mov edi esp +
setnz dl  +
lea esi [ebp-0E4Ch] +
movs   +
movs   +
lea edx ds:2[edx*4] +
push edx  +
push dword ptr [ebp-0E00h]  +
mov edx [eax] +
movs   +
push ecx  +
push eax  +
movs   +
call dword ptr [edx+44h]  +
mov esi eax +
mov byte ptr [ebp-4] 0Dh +
lea eax [ebp-0E7Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1003B38  +
cmp esi 800700B7h +
jnz loc_1009F99  +
cmp [ebp-0DFCh] ebx +
jnz loc_1009F99  +
push dword ptr [ebp-0E18h]  +
mov [ebp-0DFCh] ebx +
push 8Ah  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-0DF4h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-0DF4h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
lea eax [ebp-0DFCh] +
push eax  +
call sub_1007C43  +
cmp eax ebx +
jnz loc_1009F78  +
cmp [ebp-0DFCh] ebx +
jnz loc_1009F78  +
mov dword ptr [ebp-0DFCh] 1 +
mov byte ptr [ebp-4] 9 +
cmp [ebp-0DF8h] ebx +
jz loc_1009E27  +
mov ecx [ebp-0DF8h] +
call sub_1004DE0  +
mov [ebp-0DF8h] ebx +
jmp loc_1009E27  +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-0DF8h] +
cmp ecx ebx +
jz loc_1009F91  +
call sub_1004DE0  +
mov [ebp-0DF8h] ebx +
xor ebx ebx +
inc ebx  +
jmp loc_1009B07  +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-0DF8h] +
cmp ecx ebx +
jz loc_1009FB2  +
call sub_1004DE0  +
mov [ebp-0DF8h] ebx +
cmp esi ebx +
jge loc_100A057  +
push esi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp-0DF8h] ebx +
mov byte ptr [ebp-4] 10h +
lea eax [ebp-0DF8h] +
push eax  +
push ebx  +
call ds:GetErrorInfo  +
cmp eax ebx +
jl loc_100A043  +
cmp [ebp-0DF8h] ebx +
jz loc_100A043  +
mov [ebp-0DFCh] ebx +
mov byte ptr [ebp-4] 11h +
mov eax [ebp-0DF8h] +
mov ecx [eax] +
lea edx [ebp-0DFCh] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax ebx +
jl loc_100A033  +
mov eax [ebp-0DFCh] +
cmp [eax] bx +
jz loc_100A033  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 10h +
push dword ptr [ebp-0DFCh]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0DF8h] +
call sub_100637A  +
jmp loc_1009F91  +
jz loc_100A078  +
push esi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10004h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_1009B07  +
mov esi 1FCh +
push esi  +
lea eax [ebp-9FCh] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [ebp-0E18h]  +
push 12Eh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-9FCh] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-9FCh] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 8 +
mov esi ds:VariantClear +
lea eax [ebp-0E5Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 7 +
lea eax [ebp-0E4Ch] +
push eax  +
call esi  +
push eax  +
call sub_1003B38  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0E14h] +
call sub_100637A  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0E00h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-0E10h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E0Ch] +
call sub_100637A  +
xor eax eax +
jmp loc_1009A9C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1C30h +
call __alloca_probe  +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and [ebp+var_1C1C] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov esi 1C14h +
push esi  +
mov [ebp+var_1C20] eax +
lea eax [ebp+var_1C18] +
push 0  +
push eax  +
call memset  +
xor eax eax +
lea edi [ebp+var_1C30] +
stos   +
stos   +
stos   +
add esp 0Ch +
stos   +
lea eax [ebp+var_1C1C] +
push eax  +
lea eax [ebp+var_1C30] +
push eax  +
lea eax [ebp+var_1C18] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_1C18] esi +
call sub_1006D5F  +
cmp eax 1 +
jnz loc_100A1C8  +
mov esi [ebp+var_34] +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
jmp loc_100A1F0  +
cmp [ebp+var_10] 0 +
push [ebp+var_1C1C]  +
lea eax [ebp+var_1C30] +
push eax  +
lea eax [ebp+var_1C18] +
push eax  +
jz loc_100A1E9  +
call sub_1015CDA  +
jmp loc_100A1EE  +
call sub_10096A6  +
mov esi eax +
mov ecx [ebp+var_1C20] +
test ecx ecx +
jz loc_100A206  +
lea eax [ebp+var_1C18] +
push eax  +
call sub_1016A15  +
lea eax [ebp+var_1C18] +
push eax  +
call sub_1005E57  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx 190h +
div  ecx +
test edx edx +
jz loc_100A257  +
test byte ptr [ebp+arg_0] 3 +
jnz loc_100A253  +
mov eax [ebp+arg_0] +
push 64h  +
xor edx edx +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_100A257  +
xor eax eax +
jmp loc_100A25A  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
inc edi  +
cmp [eax+1ACh] ebx +
jnz loc_100A282  +
cmp [eax+1FCh] edi +
jz loc_100A292  +
cmp [eax+10Ch] ebx +
jnz loc_100A2B2  +
cmp [eax+15Ch] edi +
jnz loc_100A2B2  +
push 201h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax edi +
jmp loc_100A3C5  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
mov [esi+8] ebx +
push dword ptr [eax+4]  +
call sub_101C4A4  +
test eax eax +
jz loc_100A2CB  +
mov [esi+8] ebx +
mov eax [ebp+arg_4] +
mov esi 1FCh +
cmp [eax+4] ebx +
jz loc_100A357  +
cmp [eax+10h] ebx +
jnz loc_100A2F1  +
push esi  +
call sub_1018520  +
mov ecx [ebp+arg_4] +
mov [ecx+10h] eax +
cmp eax ebx +
jz loc_100A3B3  +
mov ebx [ebp+arg_4] +
add ebx 14h +
cmp dword ptr [ebx] 0 +
jnz loc_100A312  +
mov eax [ebp+arg_8] +
push esi  +
mov [eax+8] edi +
call sub_1018520  +
mov [ebx] eax +
test eax eax +
jz loc_100A3B3  +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp [eax+15Ch] ecx +
jz loc_100A351  +
cmp [eax+16Ch] ecx +
jz loc_100A351  +
push ecx  +
push edi  +
push offset String2  +
push dword ptr [ebx]  +
call sub_1018387  +
test eax eax +
jz loc_100A346  +
push 0  +
push dword ptr [ebx]  +
call sub_10182B0  +
test eax eax +
jnz loc_100A357  +
push esi  +
push ebx  +
call sub_1018894  +
test eax eax +
jz loc_100A3B3  +
mov eax [ebp+arg_8] +
mov [eax+8] edi +
mov ebx [ebp+arg_4] +
add ebx 0Ch +
cmp dword ptr [ebx] 0 +
jnz loc_100A374  +
mov eax [ebp+arg_8] +
push esi  +
mov [eax+0Ch] edi +
call sub_1018520  +
mov [ebx] eax +
test eax eax +
jz loc_100A3B3  +
mov eax [ebp+arg_0] +
cmp [eax+1FCh] edi +
jnz loc_100A3C2  +
cmp dword ptr [eax+20Ch] 0 +
jz loc_100A3BC  +
push 0  +
push edi  +
push offset String2  +
push dword ptr [ebx]  +
call sub_1018387  +
test eax eax +
jz loc_100A3A8  +
push 0  +
push dword ptr [ebx]  +
call sub_10182B0  +
test eax eax +
jnz loc_100A3C2  +
push esi  +
push ebx  +
call sub_1018894  +
test eax eax +
jnz loc_100A3BC  +
call sub_1018081  +
mov eax edi +
jmp loc_100A3C4  +
mov eax [ebp+arg_8] +
mov [eax+0Ch] edi +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
xor ebx ebx +
push 1F8h  +
mov [ebp+lpString] eax +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov [ebp+var_200] ebx +
call memset  +
add esp 0Ch +
mov esi 0FEh +
push esi  +
push 1D7h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018BDF  +
push esi  +
push offset aFirst_0  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1D8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aSecond  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1D9h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aThird_0  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1DAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aFourth_0  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1DBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aLast_0  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
mov eax [ebp+arg_4] +
dec eax  +
mov [edi] ebx +
cmp eax 9 +
ja loc_100A6F9  +
jmp ds:off_100A710[eax*4]  +
cmp [ebp+arg_8] ebx +
jbe loc_100A53A  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jbe loc_100A53A  +
cmp [ebp+lpString] ebx +
jz loc_100A626  +
push [ebp+lpString]  +
call ds:_wtol  +
dec eax  +
cmp eax 59Eh +
pop ecx  +
ja loc_100A626  +
jmp loc_100A540  +
mov dword ptr [edi] 1 +
xor eax eax +
jmp loc_100A6FC  +
cmp [ebp+arg_8] ebx +
jbe loc_100A53A  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jbe loc_100A53A  +
cmp [ebp+lpString] ebx +
jz loc_100A626  +
push [ebp+lpString]  +
call ds:_wtol  +
dec eax  +
cmp eax 16h +
jmp loc_100A531  +
cmp [ebp+arg_C] ebx +
jbe loc_100A58B  +
mov [edi] ebx +
push 88h  +
jmp loc_100A6E5  +
cmp [ebp+arg_10] ebx +
jbe loc_100A599  +
mov [edi] ebx +
push 6Ah  +
jmp loc_100A6E5  +
cmp [ebp+arg_8] ebx +
jbe loc_100A53A  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jbe loc_100A53A  +
cmp [ebp+lpString] ebx +
jz loc_100A626  +
push [ebp+lpString]  +
call ds:_wtol  +
dec eax  +
pop ecx  +
cmp eax 16Ch +
jbe loc_100A540  +
push 67h  +
jmp loc_100A6E5  +
cmp [ebp+arg_8] ebx +
jbe loc_100A53A  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jbe loc_100A53A  +
cmp [ebp+lpString] ebx +
jz loc_100A626  +
push [ebp+lpString]  +
call ds:_wtol  +
dec eax  +
cmp eax 33h +
jmp loc_100A531  +
mov esi [ebp+lpString] +
cmp [ebp+arg_8] ebx +
jbe loc_100A62A  +
push ebx  +
push esi  +
call sub_10182B0  +
test eax eax +
jnz loc_100A62A  +
mov [edi] ebx +
jmp loc_100A5CF  +
cmp esi ebx +
jz loc_100A660  +
push ebx  +
push 1  +
push 1F2h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100A540  +
push ebx  +
push 1  +
push offset aLastday  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100A540  +
push 1  +
lea eax [ebp+var_200] +
push eax  +
push esi  +
call sub_1019C24  +
test eax eax +
jnz loc_100A540  +
cmp [ebp+arg_8] ebx +
jbe loc_100A53A  +
push ebx  +
push esi  +
call sub_10182B0  +
test eax eax +
jbe loc_100A53A  +
cmp esi ebx +
jz loc_100A626  +
push esi  +
call ds:_wtol  +
cmp [ebp+arg_8] 1 +
pop ecx  +
jnz loc_100A540  +
cmp eax 1 +
jb loc_100A5CF  +
cmp eax 0Ch +
jmp loc_100A5C9  +
cmp [ebp+arg_8] ebx +
jbe loc_100A540  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jnz loc_100A540  +
jmp loc_100A626  +
mov [edi] ebx +
cmp [ebp+arg_8] ebx +
jbe loc_100A540  +
push 66h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jbe loc_100A758  +
cmp eax 8 +
jbe loc_100A7A1  +
cmp eax 9 +
jz loc_100A775  +
cmp eax 0Ah +
jz loc_100A7A1  +
push 72h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
cmp [ebp+arg_8] 0 +
jnz loc_100A782  +
push 0A6h  +
jmp loc_100A75A  +
cmp [ebp+arg_0] 0 +
jz loc_100A79D  +
push [ebp+arg_0]  +
call ds:_wtol  +
pop ecx  +
test eax eax +
jle loc_100A758  +
cmp eax 3E7h +
jg loc_100A758  +
xor eax eax +
jmp loc_100A771  +
cmp [ebp+arg_8] 0 +
jbe loc_100A79D  +
push 93h  +
jmp loc_100A75A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
lea eax [ecx-6D9h] +
cmp eax 2036h +
ja loc_100A80E  +
mov eax [ebp+arg_4] +
dec eax  +
cmp eax 0Bh +
ja loc_100A80E  +
movzx eax ds:byte_100A823[eax] +
jmp ds:off_100A817[eax*4]  +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 1Eh +
ja loc_100A80E  +
xor eax eax +
jmp loc_100A811  +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 1Dh +
jmp loc_100A7E6  +
push ecx  +
call sub_100A22A  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_100A808  +
dec eax  +
cmp eax 1Ch +
jmp loc_100A7E6  +
dec eax  +
cmp eax 1Bh +
jmp loc_100A7E6  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+lpString] +
xor ebx ebx +
push ebx  +
push edi  +
call sub_10182B0  +
movzx eax ax +
cmp eax 5 +
jz loc_100A862  +
cmp eax 8 +
jnz loc_100A85D  +
push 3Ah  +
pop eax  +
cmp ax [edi+0Ah] +
jz loc_100A862  +
xor eax eax +
inc eax  +
jmp loc_100A8D4  +
push 3Ah  +
pop eax  +
cmp ax [edi+4] +
jnz loc_100A85D  +
push esi  +
mov esi edi +
cmp [edi] bx +
jz loc_100A89B  +
movzx eax word ptr [esi] +
push eax  +
call ds:iswdigit  +
pop ecx  +
test eax eax +
jz loc_100A883  +
inc ebx  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_100A873  +
push 4  +
pop eax  +
cmp ax bx +
jz loc_100A8A0  +
push 6  +
pop eax  +
cmp ax bx +
jz loc_100A8A0  +
xor eax eax +
inc eax  +
jmp loc_100A8D3  +
mov esi ds:_wtoi +
push edi  +
call esi  +
add edi 6 +
push edi  +
movzx ebx ax +
call esi  +
movzx eax ax +
add edi 6 +
push edi  +
mov [ebp+lpString] eax +
call esi  +
mov eax [ebp+arg_4] +
mov cx word ptr [ebp+lpString] +
mov [eax] bx +
mov eax [ebp+arg_8] +
add esp 0Ch +
mov [eax] cx +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 18h +
jnb loc_100A8F4  +
cmp [ebp+arg_4] 3Ch +
jnb loc_100A8F4  +
xor eax eax +
jmp loc_100A8F7  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 1F8h  +
lea eax [ebp+var_1FC] +
push edi  +
push eax  +
mov dword ptr [ebp+String] edi +
call memset  +
xor eax eax +
add esp 0Ch +
push edi  +
push esi  +
mov [ebp+var_204] edi +
mov [ebp+SystemTime.wYear] ax +
mov [ebp+SystemTime.wMonth] ax +
mov [ebp+SystemTime.wDayOfWeek] ax +
mov [ebp+SystemTime.wDay] ax +
mov [ebp+SystemTime.wHour] ax +
mov [ebp+SystemTime.wMinute] ax +
mov [ebp+SystemTime.wSecond] ax +
mov [ebp+SystemTime.wMilliseconds] ax +
call sub_10182B0  +
test eax eax +
jz loc_100A994  +
push 0FEh  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
test eax eax +
ja loc_100A9F3  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wDayOfWeek] +
sub eax edi +
jz loc_100A9EB  +
dec eax  +
jz loc_100A9E3  +
dec eax  +
jz loc_100A9DF  +
dec eax  +
jz loc_100A9DB  +
dec eax  +
jz loc_100A9D7  +
dec eax  +
jz loc_100A9D3  +
dec eax  +
jnz loc_100A9F3  +
push 40h  +
jmp loc_100A9E5  +
push 20h  +
jmp loc_100A9E5  +
push 10h  +
jmp loc_100A9E5  +
push 8  +
jmp loc_100A9E5  +
push 4  +
jmp loc_100A9E5  +
push 2  +
pop eax  +
jmp loc_100ABA9  +
xor eax eax +
inc eax  +
jmp loc_100ABA9  +
push ebx  +
lea eax [ebp+String] +
push offset asc_10243A4  +
push eax  +
call ds:wcstok  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jz loc_100ABA1  +
xor ebx ebx +
inc ebx  +
push edi  +
push ebx  +
push 1EBh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB83  +
push edi  +
push ebx  +
push offset aSun_0  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB83  +
push edi  +
push ebx  +
push 1ECh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB7A  +
push edi  +
push ebx  +
push offset aMon  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB7A  +
push edi  +
push ebx  +
push 1EDh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB71  +
push edi  +
push ebx  +
push offset aTue  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB71  +
push edi  +
push ebx  +
push 1EEh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB68  +
push edi  +
push ebx  +
push offset aWed  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB68  +
push edi  +
push ebx  +
push 1EFh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB5F  +
push edi  +
push ebx  +
push offset aThu  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB5F  +
push edi  +
push ebx  +
push 1F0h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB56  +
push edi  +
push ebx  +
push offset aFri  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB56  +
push edi  +
push ebx  +
push 1F1h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AB4D  +
push edi  +
push ebx  +
push offset aSat_0  +
push esi  +
call sub_10182D1  +
test eax eax +
jnz loc_100ABB9  +
or [ebp+var_204] 40h +
jmp loc_100AB89  +
or [ebp+var_204] 20h +
jmp loc_100AB89  +
or [ebp+var_204] 10h +
jmp loc_100AB89  +
or [ebp+var_204] 8 +
jmp loc_100AB89  +
or [ebp+var_204] 4 +
jmp loc_100AB89  +
or [ebp+var_204] 2 +
jmp loc_100AB89  +
or [ebp+var_204] ebx +
push offset asc_10243A4  +
push edi  +
call ds:wcstok  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jnz loc_100AA15  +
mov ax word ptr [ebp+var_204] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 4  +
push edi  +
push ebx  +
push offset String2  +
push esi  +
call sub_10182D1  +
test eax eax +
jnz loc_100ABCF  +
push 7Fh  +
pop eax  +
jmp loc_100ABA8  +
xor eax eax +
jmp loc_100ABA8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 74h  +
lea eax [ebp+var_78] +
push edi  +
push eax  +
mov [ebp+var_80] edi +
mov dword ptr [ebp+var_7C] edi +
call memset  +
add esp 0Ch +
push edi  +
push esi  +
call sub_10182B0  +
test eax eax +
ja loc_100AC1E  +
mov eax 0FFFh +
jmp loc_100AEFB  +
push ebx  +
push 3Ch  +
push esi  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1018BDF  +
lea eax [ebp+var_7C] +
push offset asc_10243A4  +
push eax  +
call ds:wcstok  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jz loc_100AEF6  +
xor ebx ebx +
inc ebx  +
push edi  +
push ebx  +
push offset String2  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AF0B  +
push edi  +
push ebx  +
push 1DFh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEDB  +
push edi  +
push ebx  +
push offset aJan  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEDB  +
push edi  +
push ebx  +
push 1E0h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AED5  +
push edi  +
push ebx  +
push offset aFeb  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AED5  +
push edi  +
push ebx  +
push 1E1h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AECF  +
push edi  +
push ebx  +
push offset aMar  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AECF  +
push edi  +
push ebx  +
push 1E2h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEC9  +
push edi  +
push ebx  +
push offset aApr  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEC9  +
push edi  +
push ebx  +
push 1E3h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEC3  +
push edi  +
push ebx  +
push offset aMay  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEC3  +
push edi  +
push ebx  +
push 1E4h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEBD  +
push edi  +
push ebx  +
push offset aJun  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEBD  +
push edi  +
push ebx  +
push 1E5h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEB7  +
push edi  +
push ebx  +
push offset aJul  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEB7  +
push edi  +
push ebx  +
push 1E6h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEAE  +
push edi  +
push ebx  +
push offset aAug  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEAE  +
push edi  +
push ebx  +
push 1E7h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEA5  +
push edi  +
push ebx  +
push offset aSep_0  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AEA5  +
push edi  +
push ebx  +
push 1E8h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AE9C  +
push edi  +
push ebx  +
push offset aOct  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AE9C  +
push edi  +
push ebx  +
push 1E9h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AE93  +
push edi  +
push ebx  +
push offset aNov  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AE93  +
push edi  +
push ebx  +
push 1EAh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
test eax eax +
jz loc_100AE8A  +
push edi  +
push ebx  +
push offset aDec  +
push esi  +
call sub_10182D1  +
test eax eax +
jnz loc_100AF12  +
or [ebp+var_80] 800h +
jmp loc_100AEDE  +
or [ebp+var_80] 400h +
jmp loc_100AEDE  +
or [ebp+var_80] 200h +
jmp loc_100AEDE  +
or [ebp+var_80] 100h +
jmp loc_100AEDE  +
or [ebp+var_80] 80h +
jmp loc_100AEDE  +
or [ebp+var_80] 40h +
jmp loc_100AEDE  +
or [ebp+var_80] 20h +
jmp loc_100AEDE  +
or [ebp+var_80] 10h +
jmp loc_100AEDE  +
or [ebp+var_80] 8 +
jmp loc_100AEDE  +
or [ebp+var_80] 4 +
jmp loc_100AEDE  +
or [ebp+var_80] 2 +
jmp loc_100AEDE  +
or [ebp+var_80] ebx +
push offset asc_10243A4  +
push edi  +
call ds:wcstok  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jnz loc_100AC49  +
mov ax word ptr [ebp+var_80] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 4  +
mov eax 0FFFh +
jmp loc_100AEFA  +
xor eax eax +
jmp loc_100AEFA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov edx [ebp+arg_0] +
mov [ebp+var_30] 1 +
mov [ebp+var_2C] 2 +
mov [ebp+var_28] 4 +
mov [ebp+var_24] 8 +
mov [ebp+var_20] 10h +
mov [ebp+var_1C] 20h +
mov [ebp+var_18] 40h +
mov [ebp+var_14] 80h +
mov [ebp+var_10] 100h +
mov [ebp+var_C] 200h +
mov [ebp+var_8] 400h +
mov [ebp+var_4] 800h +
xor eax eax +
lea ecx [edx-1] +
jmp loc_100AF87  +
or eax [ebp+ecx*4+var_30] +
add ecx edx +
cmp ecx 0Ch +
jb loc_100AF81  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
push 1Fh  +
pop esi  +
xor ebx ebx +
push ebx  +
push edi  +
call sub_10182B0  +
test eax eax +
jz loc_100B0B4  +
push ebx  +
push 1  +
push offset String2  +
push edi  +
call sub_10182D1  +
test eax eax +
jz loc_100B0B4  +
push 74h  +
lea eax [ebp+var_78] +
push ebx  +
push eax  +
mov [ebp+var_7C] ebx +
call memset  +
add esp 0Ch +
push 3Ch  +
push edi  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1018BDF  +
push offset asc_10243A4  +
lea eax [ebp+var_7C] +
push eax  +
jmp loc_100B099  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push 1E0h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_100B034  +
movzx eax [ebp+arg_4] +
push eax  +
call sub_100A22A  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
add esi 1Ch +
jmp loc_100B093  +
push ebx  +
push esi  +
push 1E2h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jz loc_100B090  +
push ebx  +
push esi  +
push 1E4h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jz loc_100B090  +
push ebx  +
push esi  +
push 1E7h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jz loc_100B090  +
push ebx  +
push esi  +
push 1E9h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_100B0AD  +
push 1Eh  +
pop esi  +
push offset asc_10243A4  +
push ebx  +
call ds:wcstok  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jnz loc_100B003  +
jmp loc_100B0B0  +
push 1Fh  +
pop esi  +
mov eax esi +
jmp loc_100B0B7  +
push 1Fh  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi offset asc_100197C +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
movs   +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
pop edi  +
xor ecx ebp +
inc eax  +
pop esi  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 104h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 80h  +
lea eax [ebp+LCData] +
push eax  +
push 21h  +
push 400h  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_100B174  +
movzx eax [ebp+LCData] +
sub eax 30h +
jz loc_100B16F  +
dec eax  +
jz loc_100B16A  +
dec eax  +
jz loc_100B165  +
xor eax eax +
inc eax  +
jmp loc_100B176  +
push 2  +
pop eax  +
jmp loc_100B171  +
xor eax eax +
inc eax  +
jmp loc_100B171  +
xor eax eax +
mov [esi] ax +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_100B118  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_100B1E3  +
cmp word ptr [ebp+var_4] 0 +
jnz loc_100B1B4  +
push 32h  +
push 19Ch  +
jmp loc_100B1D1  +
cmp word ptr [ebp+var_4] cx +
jnz loc_100B1C3  +
push 32h  +
push 19Dh  +
jmp loc_100B1D1  +
cmp word ptr [ebp+var_4] 2 +
jnz loc_100B1E3  +
push 32h  +
push 19Eh  +
call sub_1019FBD  +
push eax  +
push [ebp+arg_0]  +
call sub_1018BDF  +
xor eax eax +
jmp locret_100B1E5  +
mov eax ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+lpString]  +
call sub_1013359  +
test eax eax +
jl locret_100B221  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
imul eax eax +
add eax [ebp+var_8] +
mov [ecx] eax +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 474h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 1F8h +
xor ebx ebx +
push esi  +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+lpString] ebx +
call memset  +
push esi  +
lea eax [ebp+var_470] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_474] ebx +
call memset  +
push 74h  +
lea eax [ebp+var_274] +
push ebx  +
push eax  +
mov [ebp+var_278] ebx +
call memset  +
add esp 24h +
cmp edi ebx +
jnz loc_100B298  +
xor eax eax +
inc eax  +
jmp loc_100B5E3  +
cmp word ptr [edi] 2Ch +
jz loc_100B290  +
push ebx  +
push edi  +
call sub_10182B0  +
lea eax [edi+eax*2] +
cmp edi eax +
lea ecx [eax-2] +
sbb eax eax +
and eax ecx +
jz loc_100B2B9  +
cmp word ptr [eax] 2Ch +
jz loc_100B290  +
mov esi 0FEh +
push esi  +
push 1DFh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018BDF  +
push esi  +
push offset aJan_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E0h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aFeb_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E1h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aMar_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E2h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aApr_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E3h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aMay_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E4h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aJun_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aJul_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E6h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aAug_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E7h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aSep  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aOct_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1E9h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aNov_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1EAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aDec_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push edi  +
call sub_1019C24  +
mov ebx offset String2 +
test eax eax +
jz loc_100B4DF  +
push 1  +
push ebx  +
push edi  +
call sub_1019C24  +
test eax eax +
jnz loc_100B290  +
push 1  +
push ebx  +
push edi  +
call sub_1019C24  +
test eax eax +
jnz loc_100B5E1  +
push eax  +
mov ebx edi +
push edi  +
jmp loc_100B528  +
cmp word ptr [ebx] 2Ch +
jnz loc_100B523  +
inc ebx  +
inc ebx  +
jz loc_100B525  +
movzx eax word ptr [ebx] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_100B513  +
inc ebx  +
inc ebx  +
jnz loc_100B500  +
test ebx ebx +
jz loc_100B525  +
cmp word ptr [ebx] 2Ch +
jz loc_100B290  +
jmp loc_100B525  +
inc ebx  +
inc ebx  +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jnz loc_100B4F6  +
push esi  +
push edi  +
lea eax [ebp+var_474] +
push eax  +
call sub_1018BDF  +
mov esi ds:wcstok +
mov edi offset asc_10243A4 +
lea eax [ebp+var_474] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov ebx eax +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
call sub_1019C24  +
test eax eax +
jz loc_100B290  +
test ebx ebx +
jz loc_100B5E1  +
push 3Ch  +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
call sub_1018BDF  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100B5E1  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
call sub_1019C24  +
test eax eax +
jz loc_100B290  +
push 1  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
call sub_1019C24  +
test eax eax +
jnz loc_100B290  +
push 3Ch  +
push offset asc_100198C  +
lea eax [ebp+var_278] +
push eax  +
call sub_1018C22  +
push 3Ch  +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
call sub_1018C22  +
jmp loc_100B582  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 474h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 1F8h +
xor ebx ebx +
push esi  +
lea eax [ebp+var_274] +
push ebx  +
push eax  +
mov dword ptr [ebp+lpString] ebx +
call memset  +
push esi  +
lea eax [ebp+var_470] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 18h +
mov esi 0FEh +
push esi  +
push 1EBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018BDF  +
push esi  +
push offset aSun  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1ECh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aMon_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1EDh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aTue_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1EEh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aWed_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1EFh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aThu_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1F0h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aFri_0  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push 1F1h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aSat  +
lea eax [ebp+lpString] +
push eax  +
call sub_1018C22  +
cmp edi ebx +
jz loc_100B806  +
cmp word ptr [edi] 2Ch +
jz loc_100B806  +
push ebx  +
push edi  +
call sub_10182B0  +
lea eax [edi+eax*2] +
cmp edi eax +
lea ecx [eax-2] +
sbb eax eax +
and eax ecx +
jz loc_100B7AD  +
movzx eax word ptr [eax] +
cmp ax 2Ch +
jz loc_100B806  +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jnz loc_100B806  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push edi  +
call sub_1019C24  +
test eax eax +
jnz loc_100B8D8  +
push 1  +
push offset String2  +
push edi  +
call sub_1019C24  +
test eax eax +
jnz loc_100B8D8  +
push eax  +
mov ebx edi +
push edi  +
jmp loc_100B81F  +
cmp word ptr [ebx] 2Ch +
jnz loc_100B81A  +
inc ebx  +
inc ebx  +
jz loc_100B81C  +
movzx eax word ptr [ebx] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_100B7FC  +
inc ebx  +
inc ebx  +
jnz loc_100B7E9  +
test ebx ebx +
jz loc_100B81C  +
cmp word ptr [ebx] 2Ch +
jnz loc_100B81C  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
inc ebx  +
inc ebx  +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jnz loc_100B7DF  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
xor esi esi +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
test eax eax +
jbe loc_100B806  +
push 74h  +
lea eax [ebp+var_78] +
push esi  +
push eax  +
mov [ebp+var_7C] esi +
call memset  +
mov edi ds:wcstok +
mov ebx offset asc_10243A4 +
lea eax [ebp+String] +
push ebx  +
push eax  +
call edi  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_100B8D8  +
push 3Ch  +
push esi  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1018BDF  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push esi  +
call sub_1019C24  +
test eax eax +
jz loc_100B806  +
push ebx  +
push 0  +
call edi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_100B8D8  +
push 1  +
lea eax [ebp+var_7C] +
push eax  +
push esi  +
call sub_1019C24  +
test eax eax +
jnz loc_100B806  +
push 3Ch  +
push offset asc_100198C  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1018C22  +
push 3Ch  +
push esi  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1018C22  +
jmp loc_100B882  +
xor eax eax +
jmp loc_100B809  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lpString] +
push ebx  +
push esi  +
mov [ebp+var_10] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
call sub_10182B0  +
cmp eax 0Ah +
jz loc_100B910  +
xor eax eax +
inc eax  +
jmp loc_100B94A  +
lea eax [ebp+var_10] +
push eax  +
call sub_100B118  +
cmp eax 1 +
jz loc_100B90B  +
movzx eax word ptr [ebp+var_10] +
push edi  +
mov edi ds:iswpunct +
cmp eax 1 +
ja loc_100B950  +
movzx eax word ptr [esi+4] +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100B946  +
movzx eax word ptr [esi+0Ah] +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_100B962  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
movzx eax word ptr [esi+8] +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100B946  +
movzx eax word ptr [esi+0Eh] +
jmp loc_100B93E  +
mov [ebp+lpString] ebx +
mov edi esi +
cmp [esi] bx +
jz loc_100B946  +
mov ebx ds:iswdigit +
movzx eax word ptr [edi] +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_100B980  +
inc [ebp+lpString]  +
inc edi  +
inc edi  +
cmp word ptr [edi] 0 +
jnz loc_100B972  +
cmp [ebp+lpString] 8 +
jnz loc_100B946  +
mov [ebp+lpString] 1 +
xor edi edi +
jmp loc_100B9A8  +
imul edi edi +
add di [esi] +
sub di 30h +
inc esi  +
movzx edi di +
inc esi  +
movzx eax word ptr [esi] +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jnz loc_100B999  +
mov eax [ebp+lpString] +
dec eax  +
jz loc_100B9CF  +
dec eax  +
jz loc_100B9C7  +
dec eax  +
jnz loc_100B9D5  +
movzx eax di +
mov [ebp+var_C] eax +
jmp loc_100B9D5  +
movzx eax di +
mov [ebp+var_8] eax +
jmp loc_100B9D5  +
movzx eax di +
mov [ebp+var_4] eax +
cmp word ptr [esi] 0 +
jz loc_100B9DD  +
inc esi  +
inc esi  +
inc [ebp+lpString]  +
cmp [ebp+lpString] 3 +
jle loc_100B995  +
movzx eax word ptr [ebp+var_10] +
sub eax 0 +
mov cx word ptr [ebp+var_4] +
jz loc_100BA16  +
dec eax  +
jz loc_100BA0B  +
mov eax [ebp+arg_C] +
mov [eax] cx +
mov eax [ebp+arg_8] +
mov cx word ptr [ebp+var_8] +
mov [eax] cx +
mov eax [ebp+arg_4] +
jmp loc_100BA29  +
mov eax [ebp+arg_4] +
mov [eax] cx +
mov eax [ebp+arg_8] +
jmp loc_100BA1F  +
mov eax [ebp+arg_8] +
mov [eax] cx +
mov eax [ebp+arg_4] +
mov cx word ptr [ebp+var_8] +
mov [eax] cx +
mov eax [ebp+arg_C] +
mov cx word ptr [ebp+var_C] +
mov [eax] cx +
xor eax eax +
jmp loc_100B949  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
xor eax eax +
push eax  +
push [ebp+lpString]  +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
call sub_10182B0  +
test eax eax +
ja loc_100BA5D  +
xor eax eax +
inc eax  +
jmp locret_100BA86  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpString]  +
call sub_100A834  +
test eax eax +
jnz loc_100BA58  +
movzx eax word ptr [ebp+var_4] +
push eax  +
movzx eax word ptr [ebp+var_8] +
push eax  +
call sub_100A8DF  +
neg eax  +
sbb eax eax +
neg eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+lpString] eax +
mov eax [ebp+arg_18] +
xor edi edi +
push 1F8h  +
mov dword ptr [ebp+lpString1] eax +
lea eax [ebp+var_1FC] +
push edi  +
push eax  +
mov [ebp+var_200] edi +
call memset  +
add esp 0Ch +
mov esi 0FEh +
push esi  +
push 1D7h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018BDF  +
push esi  +
push offset aFirst_1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1D8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aSecond_0  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1D9h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aThird_1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1DAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aFourth_1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push 1DBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
push offset aLast_1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
mov eax [ebp+arg_8] +
cmp eax edi +
jbe loc_100BBE2  +
cmp eax 2 +
jbe loc_100BE48  +
cmp eax 3 +
jz loc_100BE32  +
cmp eax 4 +
jz loc_100BE0E  +
cmp eax 5 +
jz loc_100BBF5  +
jbe loc_100BBE2  +
cmp eax 0Ah +
jbe loc_100BE48  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 1Ch  +
cmp [ebp+arg_10] edi +
jbe loc_100BC28  +
push edi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jnz loc_100BC28  +
push 107h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100BE40  +
xor esi esi +
inc esi  +
cmp dword ptr [ebp+lpString1] edi +
jz loc_100BC4F  +
push edi  +
push esi  +
push 1F2h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_100BC65  +
push edi  +
push esi  +
push offset aLastday  +
push dword ptr [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100BCD1  +
cmp [ebp+arg_C] edi +
jbe loc_100BC8A  +
push 88h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax esi +
jmp loc_100BBE4  +
push edi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_100BCCA  +
push [ebp+lpString]  +
call sub_100B22A  +
test eax eax +
jz loc_100BBE2  +
push esi  +
push offset String2  +
push [ebp+lpString]  +
call sub_1019C24  +
test eax eax +
jnz loc_100BBE2  +
push 69h  +
jmp loc_100BC6F  +
push 95h  +
jmp loc_100BC6F  +
push esi  +
push offset String2  +
push ebx  +
call sub_1019C24  +
test eax eax +
jz loc_100BCE5  +
push 68h  +
jmp loc_100BC6F  +
push edi  +
push ebx  +
call sub_10182B0  +
test eax eax +
jnz loc_100BD11  +
push esi  +
lea eax [ebp+var_200] +
push eax  +
push dword ptr [ebp+lpString1]  +
call sub_1019C24  +
test eax eax +
jz loc_100BD11  +
push 94h  +
jmp loc_100BC6F  +
cmp [ebp+arg_C] edi +
mov edi ds:_wtol +
jz loc_100BD5F  +
push dword ptr [ebp+lpString1]  +
call edi  +
mov [esp+21Ch+var_21C] offset asc_1001A74 +
push ebx  +
mov [ebp+var_20C] eax +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100BCE1  +
push ebx  +
call sub_100B5F9  +
test eax eax +
jnz loc_100BDAC  +
push esi  +
lea eax [ebp+var_200] +
push eax  +
push dword ptr [ebp+lpString1]  +
call sub_1019C24  +
test eax eax +
jz loc_100BCE1  +
xor ebx ebx +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_100BBE2  +
cmp [ebp+arg_14] ebx +
jz loc_100BC9A  +
push ebx  +
push dword ptr [ebp+lpString1]  +
call sub_10182B0  +
test eax eax +
jz loc_100BC9A  +
push dword ptr [ebp+lpString1]  +
call edi  +
dec eax  +
pop ecx  +
cmp eax 0Bh +
ja loc_100BC9A  +
push 6Ah  +
jmp loc_100BC6F  +
push ebx  +
call edi  +
dec eax  +
pop ecx  +
cmp eax 1Eh +
ja loc_100BCE1  +
cmp [ebp+arg_14] esi +
jnz loc_100BDD7  +
cmp [ebp+var_20C] esi +
jb loc_100BDD0  +
cmp [ebp+var_20C] 0Ch +
jbe loc_100BDD7  +
push 67h  +
jmp loc_100BC6F  +
push esi  +
lea eax [ebp+var_200] +
push eax  +
push dword ptr [ebp+lpString1]  +
call sub_1019C24  +
test eax eax +
jnz loc_100BCE1  +
cmp [ebp+arg_10] eax +
jz loc_100BD5F  +
cmp [ebp+arg_14] eax +
jz loc_100BD5F  +
push 107h  +
jmp loc_100BC6F  +
cmp [ebp+arg_10] edi +
ja loc_100BE4D  +
cmp [ebp+arg_C] edi +
jbe loc_100BBE2  +
push ebx  +
call sub_100B5F9  +
xor esi esi +
inc esi  +
cmp eax esi +
jnz loc_100BBE2  +
jmp loc_100BCE1  +
cmp [ebp+arg_C] edi +
ja loc_100BE40  +
cmp [ebp+arg_10] edi +
jbe loc_100BBE2  +
xor eax eax +
inc eax  +
jmp loc_100BBE4  +
cmp [ebp+arg_10] edi +
jbe loc_100BE54  +
push 6Ah  +
jmp loc_100BC0F  +
cmp [ebp+arg_C] edi +
jbe loc_100BBE2  +
push 88h  +
jmp loc_100BC0F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
and dword ptr [eax] 0 +
test ecx ecx +
jbe loc_100BEAB  +
cmp ecx 5 +
jbe loc_100BECD  +
cmp ecx 6 +
jz loc_100BEB2  +
jbe loc_100BEAB  +
cmp ecx 0Ah +
ja loc_100BEAB  +
cmp [ebp+arg_8] 0 +
jbe loc_100BED9  +
push 71h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
push [ebp+lpString]  +
call sub_100BA3C  +
cmp [ebp+arg_8] 0 +
ja loc_100BEC4  +
push 70h  +
jmp loc_100BE97  +
cmp eax 1 +
jnz loc_100BED9  +
push 6Fh  +
jmp loc_100BE97  +
cmp [ebp+arg_8] 0 +
ja loc_100BEDD  +
mov dword ptr [eax] 1 +
xor eax eax +
jmp loc_100BEAE  +
push [ebp+lpString]  +
call sub_100BA3C  +
jmp loc_100BEC4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jbe loc_100BF22  +
cmp [ebp+arg_4] 6 +
jbe loc_100BF29  +
cmp [ebp+arg_4] 0Ah +
ja loc_100BF22  +
cmp [ebp+arg_8] 0 +
jbe loc_100BF43  +
push 0ADh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
push [ebp+lpString]  +
call sub_100BA3C  +
cmp [ebp+arg_8] 0 +
jbe loc_100BF43  +
cmp eax 1 +
jnz loc_100BF43  +
push 0ACh  +
jmp loc_100BF0E  +
xor eax eax +
jmp loc_100BF25  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
push 60h  +
lea eax [ebp+var_64] +
push esi  +
push eax  +
mov [ebp+var_70] esi +
mov [ebp+var_6C] esi +
mov [ebp+var_74] esi +
mov [ebp+var_68] esi +
call memset  +
add esp 0Ch +
push esi  +
push edi  +
call sub_10182B0  +
test eax eax +
ja loc_100BFBB  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_4] ebx +
jnz loc_100BF9B  +
push 0B3h  +
jmp loc_100BFA0  +
push 0B6h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax ebx +
jmp loc_100C03E  +
lea eax [ebp+var_68] +
push eax  +
call sub_100B18A  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jz loc_100BFB4  +
lea eax [ebp+var_74] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
lea eax [ebp+var_70] +
push eax  +
push edi  +
call sub_100B8E4  +
test eax eax +
jz loc_100C00B  +
lea eax [ebp+var_68] +
push eax  +
cmp [ebp+arg_4] esi +
jz loc_100BFEE  +
push 6Bh  +
jmp loc_100BFF0  +
push 6Dh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push esi  +
add eax 40h +
push ebx  +
push eax  +
call sub_1019E6A  +
add esp 14h +
jmp loc_100BFB4  +
movzx eax word ptr [ebp+var_74] +
push eax  +
movzx eax word ptr [ebp+var_6C] +
push eax  +
movzx eax word ptr [ebp+var_70] +
push eax  +
call sub_100A7B3  +
test eax eax +
jz loc_100C03C  +
cmp [ebp+arg_4] ebx +
jnz loc_100C032  +
push 0B1h  +
jmp loc_100BFA0  +
push 0B2h  +
jmp loc_100BFA0  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+lpString] +
push ebx  +
mov ebx [ebp+arg_24] +
push esi  +
mov esi [ebp+arg_1C] +
push edi  +
mov edi [ebp+arg_20] +
mov [ebp+var_108] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_114] ecx +
mov ecx [ebp+arg_28] +
push 0  +
push eax  +
mov [ebp+var_118] eax +
mov [ebp+var_10C] ebx +
mov [ebp+var_110] ecx +
call sub_10182B0  +
test eax eax +
jbe loc_100C0E9  +
push [ebp+var_118]  +
call ds:_wtol  +
pop ecx  +
mov [esi] eax +
cmp eax 1 +
jb loc_100C0C6  +
cmp eax 92784h +
jbe loc_100C0E9  +
push 9C8h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax 80004005h +
jmp loc_100C251  +
mov eax [esi] +
cmp eax 270Fh +
jbe loc_100C12B  +
push 3Ch  +
xor edx edx +
pop ecx  +
div  ecx +
test edx edx +
jz loc_100C12B  +
push 9CBh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov ecx [esi] +
push 3Ch  +
mov eax ecx +
xor edx edx +
pop ebx  +
div  ebx +
mov ebx [ebp+var_10C] +
sub ecx edx +
mov [esi] ecx +
push 0  +
push [ebp+var_114]  +
call sub_10182B0  +
test eax eax +
jbe loc_100C1B9  +
movzx eax [ebp+arg_C] +
movzx ecx [ebp+arg_10] +
imul eax eax +
add eax ecx +
imul eax eax +
push 3Ch  +
xor edx edx +
pop ecx  +
div  ecx +
movzx ecx [ebp+arg_18] +
push 3Ch  +
xor edx edx +
mov [ebx] eax +
movzx eax [ebp+arg_14] +
imul eax eax +
add eax ecx +
imul eax eax +
pop ecx  +
div  ecx +
mov ecx [ebp+var_110] +
mov [ecx] eax +
mov ebx [ebx] +
cmp eax ebx +
jb loc_100C17E  +
sub eax ebx +
jmp loc_100C185  +
sub eax ebx +
add eax 5A0h +
mov [edi] eax +
mov ecx [esi] +
cmp eax ecx +
ja loc_100C204  +
push ecx  +
push eax  +
push 0AFh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 80h  +
push eax  +
call sub_1003F97  +
add esp 14h +
lea eax [ebp+String] +
jmp loc_100C0D0  +
push 0  +
push [ebp+var_108]  +
call sub_10182B0  +
test eax eax +
jbe loc_100C204  +
push edi  +
push [ebp+var_108]  +
call sub_100B1EE  +
test eax eax +
jz loc_100C1F3  +
cmp eax 18h +
jz loc_100C1E9  +
push 0FFh  +
jmp loc_100C0CB  +
push 0B7h  +
jmp loc_100C0CB  +
mov eax [edi] +
mov ecx [esi] +
cmp eax ecx +
ja loc_100C204  +
push ecx  +
push eax  +
push 0B9h  +
jmp loc_100C194  +
mov esi [esi] +
test esi esi +
jz loc_100C24F  +
mov edi [edi] +
test edi edi +
jz loc_100C24F  +
cmp edi esi +
ja loc_100C24F  +
push esi  +
push edi  +
push 0B9h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 80h  +
push eax  +
call sub_1003F97  +
add esp 14h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
jmp loc_100C251  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 2Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
xor eax eax +
push 60h  +
push eax  +
mov [esi] eax +
mov [ebp+var_68] eax +
lea eax [ebp+var_64] +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_68] +
push eax  +
call sub_100B18A  +
xor edi edi +
inc edi  +
cmp eax edi +
jnz loc_100C2AC  +
mov eax edi +
jmp loc_100C2E0  +
mov eax [ebp+arg_4] +
test eax eax +
jbe loc_100C2D0  +
cmp eax 5 +
jbe loc_100C2C4  +
cmp eax 6 +
jz loc_100C2C4  +
jbe loc_100C2D0  +
cmp eax 0Ah +
ja loc_100C2D0  +
cmp [ebp+arg_8] 0 +
ja loc_100C2D0  +
mov [esi] edi +
xor eax eax +
jmp loc_100C2E0  +
push edi  +
push ebx  +
call sub_100BF4C  +
xor ecx ecx +
cmp eax edi +
setz cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
push 60h  +
lea eax [ebp+var_64] +
push esi  +
push eax  +
mov [ebp+var_68] esi +
call memset  +
add esp 0Ch +
lea eax [ebp+var_68] +
push eax  +
call sub_100B18A  +
cmp eax 1 +
jnz loc_100C334  +
xor eax eax +
inc eax  +
jmp loc_100C37C  +
cmp [ebp+arg_4] esi +
jbe loc_100C36B  +
cmp [ebp+arg_4] 5 +
jbe loc_100C362  +
cmp [ebp+arg_4] 0Ah +
ja loc_100C36B  +
cmp [ebp+arg_8] esi +
jbe loc_100C367  +
push 6Eh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100C32F  +
cmp [ebp+arg_8] esi +
ja loc_100C36B  +
xor eax eax +
jmp loc_100C37C  +
push esi  +
push edi  +
call sub_100BF4C  +
xor ecx ecx +
cmp eax 1 +
setz cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
mov edi [ebp+arg_0] +
xor eax eax +
push edi  +
push esi  +
mov [ebp+var_4] eax +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
call sub_100A263  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jnz loc_100C3D8  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax ebx +
jmp loc_100C623  +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [esi+33Ch]  +
push dword ptr [esi+2ECh]  +
push dword ptr [esi+29Ch]  +
push [ebp+arg_C]  +
push dword ptr [edi+24h]  +
call sub_100A3D0  +
cmp eax ebx +
jz loc_100C3D1  +
cmp [ebp+var_8] 0 +
jz loc_100C439  +
cmp dword ptr [edi+24h] 0 +
jnz loc_100C421  +
push 1FCh  +
call sub_1018520  +
mov [edi+24h] eax +
test eax eax +
jnz loc_100C421  +
call sub_1018081  +
jmp loc_100C3D1  +
push dword ptr [edi+24h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset a1  +
push dword ptr [edi+24h]  +
call sub_1018BDF  +
push dword ptr [edi+24h]  +
lea eax [edi+420h] +
push dword ptr [esi+29Ch]  +
push dword ptr [esi+33Ch]  +
push dword ptr [esi+2ECh]  +
push [ebp+arg_C]  +
push eax  +
lea eax [edi+224h] +
push eax  +
call sub_100BA8F  +
cmp eax ebx +
jz loc_100C3D1  +
lea ecx [ebp+var_4] +
push ecx  +
push dword ptr [esi+4CCh]  +
lea eax [edi+0DECh] +
push [ebp+arg_C]  +
push eax  +
call sub_100C267  +
cmp eax ebx +
jz loc_100C3D1  +
cmp [ebp+var_4] 0 +
jz loc_100C498  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
push dword ptr [esi+51Ch]  +
lea eax [edi+0FE8h] +
push [ebp+arg_C]  +
push eax  +
call sub_100C2F6  +
cmp eax ebx +
jz loc_100C3D1  +
xor eax eax +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
mov [ebp+arg_8] eax +
mov [ebp+arg_0] eax +
cmp [esi+51Ch] eax +
jz loc_100C4F3  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [edi+0FE8h] +
push eax  +
call sub_100B8E4  +
cmp eax ebx +
jz loc_100C3D1  +
xor eax eax +
cmp [ebp+var_4] eax +
jz loc_100C53B  +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
mov [ebp+SystemTime.wMonth] ax +
mov [ebp+SystemTime.wDayOfWeek] ax +
mov [ebp+SystemTime.wDay] ax +
mov [ebp+SystemTime.wHour] ax +
mov [ebp+SystemTime.wMinute] ax +
mov [ebp+SystemTime.wSecond] ax +
mov [ebp+SystemTime.wMilliseconds] ax +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wDay] +
mov [ebp+var_8] eax +
movzx eax [ebp+SystemTime.wMonth] +
mov [ebp+arg_8] eax +
movzx eax [ebp+SystemTime.wYear] +
mov [ebp+arg_0] eax +
jmp loc_100C563  +
cmp [esi+4CCh] eax +
jz loc_100C565  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [edi+0DECh] +
push eax  +
call sub_100B8E4  +
cmp eax ebx +
jz loc_100C3D1  +
xor eax eax +
cmp [esi+51Ch] eax +
jz loc_100C5BB  +
movzx eax word ptr [ebp+arg_0] +
movzx ecx word ptr [ebp+arg_8] +
imul eax eax +
add eax ecx +
movzx ecx word ptr [ebp+var_8] +
imul eax eax +
movzx edx word ptr [ebp+var_10] +
add eax ecx +
movzx ecx word ptr [ebp+var_C] +
imul ecx ecx +
add ecx edx +
movzx edx word ptr [ebp+var_14] +
imul ecx ecx +
add ecx edx +
cmp ecx eax +
jge loc_100C5BB  +
push 9Eh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100C3D1  +
lea eax [ebp+var_18] +
push eax  +
push dword ptr [esi+47Ch]  +
lea eax [edi+9F4h] +
push [ebp+arg_C]  +
push eax  +
call sub_100BE6C  +
cmp eax ebx +
jz loc_100C3D1  +
cmp [ebp+var_18] 0 +
jz loc_100C5E8  +
mov eax [ebp+arg_4] +
mov [eax+4] ebx +
push dword ptr [esi+5BCh]  +
lea eax [edi+0BF0h] +
push [ebp+arg_C]  +
push eax  +
call sub_100BEEC  +
cmp eax ebx +
jz loc_100C3D1  +
push dword ptr [esi+38Ch]  +
add edi 61Ch +
push [ebp+arg_C]  +
push edi  +
call sub_100A73D  +
xor ecx ecx +
cmp eax ebx +
setz cl  +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_100C656  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
push dword ptr [ebp+8]  +
call sub_100C63F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 4  +
***
call ds:VariantClear  +
retn   +
***
call __EH_prolog3_GS  +
mov ebx [ebp+0Ch] +
mov ecx [ebp+8] +
mov eax [ebp+10h] +
xor esi esi +
mov [ebp-34h] ecx +
mov [ebp-2Ch] eax +
cmp ebx esi +
jz loc_100C79B  +
cmp eax esi +
jz loc_100C79B  +
cmp ecx esi +
jz loc_100C79B  +
push esi  +
xor edi edi +
inc edi  +
push edi  +
push offset String2  +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_100C76F  +
mov [ebp-24h] esi +
mov [ebp-4] edi +
push dword ptr [ebp-2Ch]  +
lea ecx [ebp-20h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 2 +
mov eax [eax] +
mov ecx [ebx] +
lea edx [ebp-24h] +
push edx  +
push eax  +
push ebx  +
call dword ptr [ecx+34h]  +
mov ebx eax +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-20h]  +
call ds:SysFreeString  +
cmp [ebp+14h] esi +
jz loc_100C739  +
push ebx  +
call sub_101DEBE  +
test al al +
jnz loc_100C756  +
cmp ebx 80041321h +
jz loc_100C756  +
cmp ebx 80041313h +
jz loc_100C756  +
cmp ebx esi +
jge loc_100C756  +
push ebx  +
call ds:SetLastError  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100637A  +
mov eax edi +
jmp loc_100C79D  +
push esi  +
push dword ptr [ebp-2Ch]  +
call sub_10182B0  +
push eax  +
push dword ptr [ebp-2Ch]  +
mov eax [ebp-34h] +
push dword ptr [eax]  +
call sub_101B5F0  +
jmp loc_100C746  +
mov [ebp-18h] esi +
mov dword ptr [ebp-4] 4 +
mov eax [ebx] +
lea ecx [ebp-18h] +
push ecx  +
push edi  +
push ebx  +
call dword ptr [eax+38h]  +
cmp eax esi +
jge loc_100C7A5  +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100637A  +
xor eax eax +
call sub_10177AC  +
retn 10h  +
mov eax [ebp-18h] +
lea edx [ebp-38h] +
push edx  +
mov [ebp-38h] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax esi +
jl loc_100C788  +
cmp [ebp-38h] edi +
mov [ebp-20h] edi +
jl loc_100C870  +
mov [ebp-28h] esi +
mov byte ptr [ebp-4] 6 +
push 3  +
pop eax  +
mov [ebp-48h] ax +
mov eax [ebp-20h] +
mov [ebp-40h] eax +
mov byte ptr [ebp-4] 7 +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-28h] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-48h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov [ebp-24h] eax +
mov byte ptr [ebp-4] 6 +
lea eax [ebp-48h] +
push eax  +
call ds:VariantClear  +
cmp dword ptr [ebp-24h] 0 +
jl loc_100C84D  +
and dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 8 +
mov eax [ebp-28h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp-24h] eax +
test eax eax +
jl loc_100C840  +
push dword ptr [ebp-14h]  +
call ds:SysStringLen  +
push eax  +
push dword ptr [ebp-14h]  +
mov eax [ebp-34h] +
push dword ptr [eax]  +
call sub_101B5F0  +
mov byte ptr [ebp-4] 6 +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-28h] +
call sub_100637A  +
inc dword ptr [ebp-20h]  +
mov eax [ebp-20h] +
xor esi esi +
cmp eax [ebp-38h] +
jle loc_100C7C5  +
mov eax [ebp-24h] +
xor edi edi +
inc edi  +
cmp eax esi +
jl loc_100C788  +
mov [ebp-1Ch] esi +
mov byte ptr [ebp-4] 0Ah +
mov eax [ebx] +
lea ecx [ebp-1Ch] +
push ecx  +
push edi  +
push ebx  +
call dword ptr [eax+28h]  +
cmp eax esi +
jge loc_100C8A6  +
push eax  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
jmp loc_100C78F  +
mov eax [ebp-1Ch] +
lea edx [ebp-30h] +
push edx  +
mov [ebp-30h] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax esi +
jge loc_100C8E0  +
push eax  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100637A  +
mov eax esi +
jmp loc_100C79D  +
cmp [ebp-30h] esi +
jnz loc_100C8E9  +
mov esi edi +
jmp loc_100C8C1  +
cmp [ebp-30h] edi +
mov ebx edi +
jge loc_100C90F  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-1Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100637A  +
jmp loc_100C752  +
xor esi esi +
mov [ebp-14h] esi +
mov byte ptr [ebp-4] 0Ch +
push 3  +
pop eax  +
mov [ebp-48h] ax +
mov [ebp-40h] ebx +
mov byte ptr [ebp-4] 0Dh +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-48h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
mov byte ptr [ebp-4] 0Ch +
lea eax [ebp-48h] +
push eax  +
call ds:VariantClear  +
test esi esi +
jl loc_100C985  +
cmp dword ptr [ebp-14h] 0 +
jz loc_100C985  +
push 0  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-34h]  +
call sub_100C69C  +
test eax eax +
jz loc_100C98C  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-14h] +
call sub_100637A  +
inc ebx  +
cmp ebx [ebp-30h] +
jle loc_100C90D  +
xor edi edi +
inc edi  +
jmp loc_100C8F0  +
push esi  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-14h] +
call sub_100637A  +
xor esi esi +
jmp loc_100C8C1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A28h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
xor ecx ecx +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov [ebp+var_A28] eax +
push edi  +
xor eax eax +
mov word ptr [ebp+String] ax +
lea edi [ebp-0Eh] +
stos   +
mov esi 0FEh +
stos   +
mov dword ptr [ebp+lpString1] ebx +
mov [ebp+NumberOfBytesWritten] ecx +
mov [ebp+dwMode] ecx +
mov [ebp+var_A24] ecx +
mov byte ptr [ebp+Buffer] cl +
mov [ebp+var_A04] ecx +
mov [ebp+var_A14] ecx +
mov [ebp+NumberOfCharsWritten] ecx +
mov [ebp+var_A0C] ecx +
mov edx esi +
lea eax [ebp+var_20C] +
mov [eax] cl +
inc eax  +
dec edx  +
jnz loc_100CA18  +
mov edx esi +
lea eax [ebp+var_604] +
mov [eax] cl +
inc eax  +
dec edx  +
jnz loc_100CA26  +
mov edx esi +
lea eax [ebp+String1] +
mov [eax] cl +
inc eax  +
dec edx  +
jnz loc_100CA34  +
mov edx 1FCh +
lea eax [ebp+Buffer+1] +
mov [eax] cl +
inc eax  +
dec edx  +
jnz loc_100CA45  +
cmp ebx ecx +
jnz loc_100CA57  +
xor eax eax +
inc eax  +
jmp loc_100CE86  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi 0FFFFFFFFh +
jz loc_100CDA9  +
push 30h  +
call ds:MessageBeep  +
cmp edi 0Fh +
jz loc_100CA90  +
cmp edi 3 +
jz loc_100CA90  +
mov [ebp+var_A24] 1 +
jmp loc_100CAB7  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_100CDA9  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_100CDA9  +
push 0  +
push 1  +
push offset String2  +
push dword ptr [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100CADB  +
push 0FDh  +
call sub_1019FBD  +
jmp loc_100CB02  +
push dword ptr [ebp+lpString1]  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+Buffer+1] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+Buffer+1] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
cmp [ebp+var_A24] 1 +
mov edi offset aC +
jnz loc_100CC09  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_100CDA9  +
cmp [ebp+NumberOfBytesWritten] 0 +
jz loc_100CDC6  +
cmp word ptr [ebp+var_A04] 0Dh +
jz loc_100CDC6  +
cmp word ptr [ebp+var_A04] 0Ah +
jz loc_100CDC6  +
cmp word ptr [ebp+var_A04] 9 +
jz loc_100CDC6  +
mov al byte ptr [ebp+Buffer] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesWritten] esi +
call sub_10183F6  +
movzx eax [ebp+var_20C] +
push 0  +
mov [ebp+var_A04] eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_A04] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call ds:WriteFile  +
test eax eax +
jz loc_100CDA9  +
movzx eax word ptr [ebp+var_A04] +
mov [ebp+var_A14] eax +
movzx eax word ptr [ebp+var_A04] +
push eax  +
push edi  +
lea eax [ebp+String1] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
inc [ebp+var_A0C]  +
jmp loc_100CB23  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_A04] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_100CD8E  +
cmp [ebp+NumberOfBytesWritten] 0 +
jz loc_100CC09  +
mov eax [ebp+var_A04] +
cmp ax 0Dh +
jz loc_100CDC6  +
movzx ecx ax +
mov [ebp+var_A14] ecx +
cmp ax 8 +
jz loc_100CC8E  +
movzx eax ax +
push eax  +
push edi  +
lea eax [ebp+var_604] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp+var_604] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1018C22  +
cmp word ptr [ebp+var_A14] 8 +
jnz loc_100CD62  +
cmp [ebp+var_A0C] 0 +
jz loc_100CC09  +
push 8  +
push edi  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_100CDA9  +
push 0  +
push edi  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_100CDA9  +
push 8  +
push edi  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_100CDA9  +
push 0  +
lea eax [ebp+String1] +
push eax  +
call sub_10182B0  +
xor ecx ecx +
dec [ebp+var_A0C]  +
mov [ebp+eax*2+var_40A] cx +
jmp loc_100CC09  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_A14] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call ds:WriteFile  +
test eax eax +
jz loc_100CDA9  +
inc [ebp+var_A0C]  +
jmp loc_100CC09  +
call sub_1018081  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
test eax eax +
jnz loc_100CDAE  +
call sub_1018081  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_100CA4F  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1018C65  +
xor esi esi +
inc esi  +
cmp [ebp+var_A0C] esi +
jnz loc_100CE51  +
push 0  +
push esi  +
push 0BBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_10182D1  +
test eax eax +
jnz loc_100CE18  +
xor esi esi +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
jmp loc_100CE84  +
push 0  +
push esi  +
push 0BCh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_10182D1  +
test eax eax +
jnz loc_100CE51  +
push 226h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
jmp loc_100CE04  +
push 92h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
mov eax [ebp+var_A28] +
mov [eax] esi +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
xor ebx ebx +
push 3F4h  +
lea eax [ebp-404h] +
push ebx  +
push eax  +
mov [ebp-5F4h] ebx +
mov [ebp-5F0h] ebx +
mov [ebp-408h] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+10h] ebx +
jz loc_100CF63  +
mov eax [esi+4] +
cmp eax ebx +
jz loc_100CEF4  +
push eax  +
call sub_1013556  +
test eax eax +
jz loc_100CF63  +
cmp edi ebx +
jz loc_100CF63  +
xor eax eax +
cmp ax [edi] +
jz loc_100CF63  +
push ebx  +
lea eax [ebp-5F8h] +
push eax  +
push dword ptr [esi+4]  +
mov [ebp-5F8h] ebx +
call sub_100E2F9  +
test eax eax +
jz loc_100CF63  +
push edi  +
call sub_101DB81  +
test eax eax +
jl loc_100CFF4  +
push edi  +
push 12Dh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
xor eax eax +
jmp loc_100CFF7  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-5E8h] +
call sub_100C662  +
mov [ebp-4] ebx +
cmp [ebp-5E8h] ebx +
jz loc_100CFE5  +
mov [ebp-5ECh] ebx +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-5E8h] +
mov [ebp-5F8h] ebx +
mov byte ptr [ebp-4] 3 +
mov ecx [eax] +
lea edx [ebp-5ECh] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov byte ptr [ebp-4] 2 +
cmp eax ebx +
jge loc_100CFFF  +
push eax  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp-4] bl +
lea ecx [ebp-5ECh] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-5E8h] +
call sub_100637A  +
xor eax eax +
inc eax  +
call sub_10177AC  +
retn 0Ch  +
call sub_101B2CE  +
mov [ebp-5F0h] eax +
cmp eax ebx +
jnz loc_100D048  +
push 77h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor esi esi +
inc esi  +
mov [ebp-4] bl +
lea ecx [ebp-5ECh] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-5E8h] +
call sub_100637A  +
mov eax esi +
jmp loc_100CFF7  +
push dword ptr [ebp+10h]  +
lea eax [ebp-5F0h] +
push edi  +
push dword ptr [ebp-5ECh]  +
push eax  +
call sub_100C69C  +
xor esi esi +
inc esi  +
cmp eax ebx +
jnz loc_100D0CA  +
push ebx  +
push esi  +
push offset String2  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_100D093  +
push 0CCh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
xor esi esi +
jmp loc_100D027  +
push edi  +
push 7Ah  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100D027  +
cmp [ebp+10h] ebx +
jnz loc_100D0ED  +
lea eax [ebp-5F4h] +
push eax  +
push edi  +
call sub_100C9A4  +
cmp eax esi +
jnz loc_100D0ED  +
cmp [ebp-5F4h] esi +
jnz loc_100D08F  +
jmp loc_100D027  +
push dword ptr [ebp-5F0h]  +
xor edi edi +
call sub_101B36E  +
test eax eax +
jbe loc_100D19D  +
push 0EEh  +
push edi  +
push dword ptr [ebp-5F0h]  +
call sub_101B983  +
push eax  +
lea eax [ebp-5E4h] +
push eax  +
call sub_1018BDF  +
mov eax [ebp-5ECh] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-5E4h] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax 8007000Eh +
jz loc_100D1EA  +
cmp eax 80070057h +
jz loc_100D1DE  +
cmp eax ebx +
jnz loc_100D1BF  +
lea eax [ebp-5E4h] +
push eax  +
push 12Dh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [ebp-5F0h]  +
inc edi  +
call sub_101B36E  +
cmp edi eax +
jb loc_100D102  +
mov [ebp-4] bl +
lea ecx [ebp-5ECh] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-5E8h] +
call sub_100637A  +
jmp loc_100CF5C  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_100D027  +
push 76h  +
call sub_1019FBD  +
jmp loc_100D0B6  +
push 77h  +
jmp loc_100D1E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 468h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_454] eax +
mov eax [ebp+arg_8] +
xor esi esi +
push 1D8h  +
mov [ebp+var_464] eax +
xor ebx ebx +
lea eax [ebp+var_1F4] +
push esi  +
inc ebx  +
push eax  +
mov [ebp+var_430] esi +
mov [ebp+var_448] esi +
mov [ebp+var_460] esi +
mov [ebp+var_444] ebx +
mov dword ptr [ebp+String1] esi +
call memset  +
mov [ebp+var_42C] esi +
mov esi offset aDelete +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aTn +
lea edi [ebp+var_C] +
movs   +
movs   +
push 230h  +
xor esi esi +
lea eax [ebp+dwErrCode] +
push esi  +
push eax  +
mov [ebp+var_45C] 3Fh +
mov [ebp+var_450] 73h +
mov [ebp+var_458] 75h +
mov [ebp+var_44C] 70h +
mov [ebp+var_468] 66h +
call memset  +
xor eax eax +
lea edi [ebp+var_440] +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_440] 10h +
call sub_1018B9C  +
lea eax [ebp+var_1C] +
mov [ebp+var_408] eax +
lea eax [ebp+var_460] +
push 8  +
mov [ebp+var_3FC] eax +
push edi  +
lea eax [ebp+var_3D8] +
push eax  +
mov [ebp+var_420] 0Ah +
mov [ebp+var_410] ebx +
mov [ebp+var_418] esi +
mov [ebp+var_414] esi +
call sub_1018B9C  +
lea eax [ebp+var_45C] +
mov [ebp+var_3B8] eax +
lea eax [ebp+var_430] +
push 8  +
mov [ebp+var_3AC] eax +
push edi  +
lea eax [ebp+var_388] +
mov [ebp+var_3D0] 0Ah +
mov [ebp+var_3C0] ebx +
mov [ebp+var_3C8] 20000h +
mov [ebp+var_3C4] esi +
push eax  +
call sub_1018B9C  +
lea eax [ebp+var_450] +
push 8  +
mov [ebp+var_368] eax +
push edi  +
lea eax [ebp+var_338] +
push eax  +
mov [ebp+var_380] ebx +
mov [ebp+var_370] ebx +
mov [ebp+var_378] 100C0h +
mov [ebp+var_374] esi +
call sub_1018B9C  +
lea eax [ebp+var_458] +
push 8  +
mov [ebp+var_318] eax +
push edi  +
lea eax [ebp+var_2E8] +
push eax  +
mov [ebp+var_330] ebx +
mov [ebp+var_320] ebx +
mov [ebp+var_328] 100C0h +
mov [ebp+var_324] esi +
call sub_1018B9C  +
lea eax [ebp+var_44C] +
push 8  +
mov [ebp+var_2C8] eax +
push edi  +
lea eax [ebp+var_298] +
push eax  +
mov [ebp+var_2E0] ebx +
mov [ebp+var_2D0] ebx +
mov [ebp+var_2CC] esi +
mov [ebp+var_2D8] 10010h +
mov [ebp+var_2D4] esi +
call sub_1018B9C  +
lea eax [ebp+var_C] +
mov [ebp+var_278] eax +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_26C] eax +
push edi  +
lea eax [ebp+var_248] +
push eax  +
mov [ebp+var_290] ebx +
mov [ebp+var_280] ebx +
mov [ebp+var_288] 80000h +
mov [ebp+var_284] esi +
mov [ebp+var_268] 0EEh +
call sub_1018B9C  +
lea eax [ebp+var_468] +
mov [ebp+var_228] eax +
push esi  +
lea eax [ebp+var_448] +
mov [ebp+var_21C] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 7  +
push esi  +
push [ebp+var_454]  +
mov [ebp+var_240] 0Ah +
push [ebp+arg_0]  +
mov [ebp+var_230] ebx +
call sub_101AF46  +
test eax eax +
jz loc_100D64C  +
cmp [ebp+arg_0] 3 +
mov eax [ebp+var_35C] +
mov [ebp+var_43C] eax +
mov eax [ebp+var_30C] +
mov [ebp+lpString] eax +
mov eax [ebp+var_2BC] +
mov [ebp+lpMem] eax +
jbe loc_100D4E1  +
cmp [ebp+var_430] esi +
jz loc_100D4F9  +
push 101h  +
jmp loc_100D540  +
cmp [ebp+var_430] esi +
jz loc_100D4F9  +
call sub_100C62F  +
mov [ebp+var_444] esi +
jmp loc_100D680  +
cmp [ebp+var_36C] esi +
jnz loc_100D510  +
cmp [ebp+var_31C] ebx +
jnz loc_100D510  +
push 81h  +
jmp loc_100D540  +
cmp [ebp+var_31C] esi +
jnz loc_100D527  +
cmp [ebp+var_2CC] ebx +
jnz loc_100D527  +
push 203h  +
jmp loc_100D540  +
push esi  +
lea eax [ebp+String1] +
push eax  +
call sub_10182B0  +
cmp eax 0EEh +
jbe loc_100D54A  +
push 8Eh  +
call sub_1019FBD  +
jmp loc_100D5D9  +
cmp [ebp+var_43C] esi +
jz loc_100D5F3  +
mov edi 1FCh +
cmp [ebp+lpString] esi +
jnz loc_100D57D  +
push edi  +
call sub_1018520  +
mov [ebp+lpString] eax +
cmp eax esi +
jnz loc_100D57D  +
call sub_1018081  +
jmp loc_100D680  +
mov eax [ebp+lpMem] +
cmp eax esi +
jnz loc_100D59D  +
push edi  +
mov [ebp+var_42C] ebx +
call sub_1018520  +
mov [ebp+lpMem] eax +
cmp eax esi +
jz loc_100D5CF  +
cmp [ebp+var_2CC] esi +
jz loc_100D5ED  +
cmp [ebp+var_2BC] esi +
jz loc_100D5ED  +
push esi  +
push ebx  +
push offset String2  +
push eax  +
call sub_1018387  +
test eax eax +
jnz loc_100D5F3  +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1018894  +
test eax eax +
jnz loc_100D5ED  +
call sub_1018081  +
call sub_1017FEE  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100D680  +
mov [ebp+var_42C] ebx +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_100D661  +
cmp [ebp+var_42C] esi +
jz loc_100D661  +
push [ebp+lpString]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push esi  +
add eax 20h +
push ebx  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1018ECA  +
test eax eax +
jnz loc_100D661  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_100D680  +
push [ebp+var_448]  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+var_440] +
push eax  +
call sub_100CE9C  +
mov [ebp+var_444] eax +
mov ecx [ebp+var_464] +
pop edi  +
cmp ecx esi +
pop esi  +
pop ebx  +
jz loc_100D6AC  +
push [ebp+var_448]  +
lea eax [ebp+String1] +
push [ebp+var_430]  +
push eax  +
lea eax [ebp+var_440] +
push eax  +
call sub_1016E94  +
lea eax [ebp+var_440] +
push eax  +
call sub_1012947  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_444] +
xor ecx ebp +
call sub_1017692  +
leave   +
retn 0Ch  +
***
retn   +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov ebx [ebp+0Ch] +
xor edi edi +
push 3F4h  +
lea eax [ebp-404h] +
push edi  +
push eax  +
mov [ebp-408h] edi +
call memset  +
add esp 0Ch +
mov [ebp-40Ch] edi +
mov dword ptr [ebp-4] 1 +
mov [ebp-410h] edi +
mov byte ptr [ebp-4] 3 +
mov [ebp-414h] edi +
mov byte ptr [ebp-4] 5 +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-40Ch] +
call sub_1004439  +
mov eax [ebp-40Ch] +
cmp eax edi +
jz loc_100D797  +
mov [ebp-418h] edi +
mov byte ptr [ebp-4] 6 +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov byte ptr [ebp-4] 5 +
cmp eax edi +
jge loc_100D7CF  +
push eax  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-414h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-410h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-40Ch] +
call sub_100637A  +
xor eax eax +
inc eax  +
call sub_10177AC  +
retn 8  +
mov esi [ebp-410h] +
push ebx  +
lea ecx [ebp-418h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 7 +
mov eax [eax] +
mov ecx [esi] +
lea edx [ebp-414h] +
push edx  +
push eax  +
push esi  +
call dword ptr [ecx+34h]  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-418h]  +
call ds:SysFreeString  +
cmp esi edi +
jge loc_100D811  +
push esi  +
jmp loc_100D779  +
mov eax [ebp-414h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+5Ch]  +
cmp eax edi +
jl loc_100D778  +
push ebx  +
push 131h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-414h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-410h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-40Ch] +
call sub_100637A  +
xor eax eax +
jmp loc_100D7C7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 408h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_408] eax +
mov eax [ebp+arg_8] +
xor esi esi +
push 1D8h  +
mov [ebp+var_404] eax +
lea eax [ebp+var_1EC] +
push esi  +
push eax  +
mov [ebp+var_400] esi +
mov [ebp+var_3D8] esi +
mov dword ptr [ebp+String] esi +
call memset  +
mov eax ds:dword_1001AE4 +
mov [ebp+var_3D4] esi +
mov esi offset aTn +
lea edi [ebp+var_14] +
movs   +
mov [ebp+var_C] eax +
mov eax ds:dword_1001AE8 +
movs   +
push 1E0h  +
mov [ebp+var_8] eax +
xor esi esi +
xor ebx ebx +
lea eax [ebp+dwErrCode] +
push esi  +
inc ebx  +
push eax  +
mov [ebp+var_3EC] ebx +
mov [ebp+var_3FC] 3Fh +
mov [ebp+var_3F4] 73h +
mov [ebp+var_3F8] 75h +
mov [ebp+var_3F0] 70h +
call memset  +
xor eax eax +
lea edi [ebp+var_3E8] +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_3E8] 10h +
call sub_1018B9C  +
lea eax [ebp+var_C] +
mov [ebp+var_3B0] eax +
lea eax [ebp+var_400] +
push 8  +
mov [ebp+var_3A4] eax +
push edi  +
lea eax [ebp+var_380] +
push eax  +
mov [ebp+var_3C8] 0Ah +
mov [ebp+var_3B8] ebx +
mov [ebp+var_3C0] esi +
mov [ebp+var_3BC] esi +
call sub_1018B9C  +
lea eax [ebp+var_3FC] +
mov [ebp+var_360] eax +
lea eax [ebp+var_3D8] +
push 8  +
mov [ebp+var_354] eax +
push edi  +
lea eax [ebp+var_330] +
push eax  +
mov [ebp+var_378] 0Ah +
mov [ebp+var_368] ebx +
mov [ebp+var_370] 20000h +
mov [ebp+var_36C] esi +
call sub_1018B9C  +
lea eax [ebp+var_3F4] +
mov [ebp+var_328] ebx +
mov [ebp+var_310] eax +
push 8  +
push edi  +
lea eax [ebp+var_2E0] +
push eax  +
mov [ebp+var_318] ebx +
mov [ebp+var_320] 100C0h +
mov [ebp+var_31C] esi +
call sub_1018B9C  +
lea eax [ebp+var_3F8] +
push 8  +
mov [ebp+var_2C0] eax +
push edi  +
lea eax [ebp+var_290] +
push eax  +
mov [ebp+var_2D8] ebx +
mov [ebp+var_2C8] ebx +
mov [ebp+var_2D0] 100C0h +
mov [ebp+var_2CC] esi +
call sub_1018B9C  +
lea eax [ebp+var_3F0] +
push 8  +
mov [ebp+var_270] eax +
push edi  +
lea eax [ebp+var_240] +
push eax  +
mov [ebp+var_288] ebx +
mov [ebp+var_278] ebx +
mov [ebp+var_274] esi +
mov [ebp+var_280] 10010h +
mov [ebp+var_27C] esi +
call sub_1018B9C  +
lea eax [ebp+var_14] +
mov [ebp+var_220] eax +
push esi  +
lea eax [ebp+String] +
mov [ebp+var_214] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push esi  +
push [ebp+var_408]  +
mov edi 0EEh +
push [ebp+arg_0]  +
mov [ebp+var_238] ebx +
mov [ebp+var_228] ebx +
mov [ebp+var_230] 80000h +
mov [ebp+var_22C] esi +
mov [ebp+var_210] edi +
call sub_101AF46  +
test eax eax +
jz loc_100DC9D  +
cmp [ebp+arg_0] 3 +
mov eax [ebp+var_304] +
mov [ebp+var_3E4] eax +
mov eax [ebp+var_2B4] +
mov [ebp+lpString] eax +
mov eax [ebp+var_264] +
mov [ebp+lpMem] eax +
jbe loc_100DB3F  +
cmp [ebp+var_3D8] esi +
jz loc_100DB57  +
push 103h  +
jmp loc_100DB9B  +
cmp [ebp+var_3D8] esi +
jz loc_100DB57  +
call sub_100D6D1  +
mov [ebp+var_3EC] esi +
jmp loc_100DCCB  +
cmp [ebp+var_314] esi +
jnz loc_100DB6E  +
cmp [ebp+var_2C4] ebx +
jnz loc_100DB6E  +
push 81h  +
jmp loc_100DB9B  +
cmp [ebp+var_2C4] esi +
jnz loc_100DB85  +
cmp [ebp+var_274] ebx +
jnz loc_100DB85  +
push 205h  +
jmp loc_100DB9B  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
cmp eax edi +
jbe loc_100DBA5  +
push 8Eh  +
call sub_1019FBD  +
jmp loc_100DC2A  +
cmp [ebp+var_3E4] esi +
jz loc_100DC44  +
mov edi 1FCh +
cmp [ebp+lpString] esi +
jnz loc_100DBCE  +
push edi  +
call sub_1018520  +
mov [ebp+lpString] eax +
cmp eax esi +
jz loc_100DC20  +
mov eax [ebp+lpMem] +
cmp eax esi +
jnz loc_100DBEE  +
push edi  +
mov [ebp+var_3D4] ebx +
call sub_1018520  +
mov [ebp+lpMem] eax +
cmp eax esi +
jz loc_100DC20  +
cmp [ebp+var_274] esi +
jz loc_100DC3E  +
cmp [ebp+var_264] esi +
jz loc_100DC3E  +
push esi  +
push ebx  +
push offset String2  +
push eax  +
call sub_1018387  +
test eax eax +
jnz loc_100DC44  +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1018894  +
test eax eax +
jnz loc_100DC3E  +
call sub_1018081  +
call sub_1017FEE  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100DCCB  +
mov [ebp+var_3D4] ebx +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_100DCB2  +
cmp [ebp+var_3D4] esi +
jz loc_100DCB2  +
push [ebp+lpString]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push esi  +
add eax 20h +
push ebx  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1018ECA  +
test eax eax +
jnz loc_100DCB2  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_100DCCB  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_3E8] +
push eax  +
call sub_100D6E1  +
mov [ebp+var_3EC] eax +
mov ecx [ebp+var_404] +
pop edi  +
cmp ecx esi +
pop esi  +
pop ebx  +
jz loc_100DCEA  +
push [ebp+var_3D8]  +
lea eax [ebp+var_3E8] +
push eax  +
call sub_1017032  +
call sub_1018A9F  +
lea eax [ebp+var_3E8] +
push eax  +
call sub_1012947  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3EC] +
xor ecx ebp +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_4] 0 +
lea eax [ebp+var_28] +
push eax  +
mov [ebp+var_28] 6A5h +
mov [ebp+var_24] 6A6h +
mov [ebp+var_20] 6A7h +
mov [ebp+var_1C] 6A8h +
mov [ebp+var_18] 6A9h +
mov [ebp+var_14] 6AAh +
mov [ebp+var_10] 6ABh +
mov [ebp+var_C] 6ACh +
mov [ebp+var_8] 6ADh +
call sub_101329F  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 634h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 3F4h  +
lea eax [ebp+var_618] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
xor eax eax +
push 1DAh  +
mov word ptr [ebp+var_224] ax +
lea eax [ebp+var_224+2] +
push ebx  +
push eax  +
mov [ebp+var_628] 44h +
mov [ebp+var_624] ebx +
mov dword ptr [ebp+hMem] ebx +
call memset  +
add esp 18h +
push [ebp+arg_0]  +
lea esi [ebp+var_224] +
push 0EEh  +
mov eax esi +
push eax  +
call sub_10064DE  +
mov eax [ebp+arg_4] +
cmp eax 2 +
jb loc_100DE2B  +
cmp word ptr [ebp+var_224] 22h +
jz loc_100DE07  +
cmp word ptr [ebp+var_224] 5Ch +
jnz loc_100DE0D  +
lea esi [ebp+var_224+2] +
cmp word ptr [ebp+var_224+2] 5Ch +
jnz loc_100DE19  +
inc esi  +
inc esi  +
lea eax [ebp+eax*2-226h] +
cmp word ptr [eax] 22h +
jnz loc_100DE2B  +
xor ecx ecx +
mov [eax] cx +
mov eax esi +
xor edx edx +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100DE32  +
sub eax edi +
sar eax 1 +
jz loc_100DE68  +
cmp word ptr [esi+edx*2] 5Ch +
jnz loc_100DE50  +
push 2Dh  +
pop eax  +
mov [esi+edx*2] ax +
mov eax esi +
inc edx  +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100DE56  +
sub eax edi +
sar eax 1 +
cmp edx eax +
jb loc_100DE42  +
push esi  +
lea eax [ebp+var_634] +
push eax  +
call ds:RtlInitUnicodeString  +
lea eax [ebp+var_628] +
push eax  +
lea eax [ebp+var_48] +
push eax  +
push 57h  +
lea eax [ebp+var_634] +
push eax  +
call ds:RtlCreateVirtualAccountSid  +
cmp eax ebx +
jge loc_100DEA4  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
jmp loc_100DEB8  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+var_48] +
push eax  +
call ConvertSidToStringSidW  +
test eax eax +
jnz loc_100DED7  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp+var_624] 1 +
jmp loc_100DF12  +
push esi  +
push dword ptr [ebp+hMem]  +
push 132h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 14h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_624] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2FCh +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 1D8h  +
mov [ebp+var_2F4] eax +
lea eax [ebp+var_1F4] +
push esi  +
push eax  +
mov [ebp+var_2FC] esi +
mov [ebp+var_2EC] esi +
mov dword ptr [ebp+String] esi +
call memset  +
xor eax eax +
mov byte ptr [ebp+dwErrCode] 0 +
lea edi [ebp+dwErrCode+1] +
stos   +
stos   +
push 0E8h  +
stos   +
xor ebx ebx +
lea eax [ebp+var_2E0] +
push esi  +
inc ebx  +
push eax  +
mov [ebp+var_2F0] ebx +
call memset  +
mov esi offset aShowsid +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
mov esi offset aTn +
lea edi [ebp+var_C] +
movs   +
add esp 18h +
movs   +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_2F8] 3Fh +
call sub_1018B9C  +
lea eax [ebp+var_1C] +
mov [ebp+var_2C8] eax +
lea eax [ebp+var_2FC] +
push 8  +
mov [ebp+var_2BC] eax +
push esi  +
lea eax [ebp+var_298] +
xor edi edi +
push eax  +
mov [ebp+var_2E0] 0Ah +
mov [ebp+var_2D0] ebx +
mov [ebp+var_2D8] edi +
mov [ebp+var_2D4] edi +
call sub_1018B9C  +
lea eax [ebp+var_2F8] +
mov [ebp+var_278] eax +
lea eax [ebp+var_2EC] +
push 8  +
mov [ebp+var_26C] eax +
push esi  +
lea eax [ebp+var_248] +
push eax  +
mov [ebp+var_290] 0Ah +
mov [ebp+var_280] ebx +
mov [ebp+var_288] 20000h +
mov [ebp+var_284] edi +
call sub_1018B9C  +
lea eax [ebp+var_C] +
mov [ebp+var_228] eax +
lea eax [ebp+String] +
mov [ebp+var_240] ebx +
mov [ebp+var_230] ebx +
mov [ebp+var_238] 80000h +
mov [ebp+var_234] edi +
mov [ebp+var_21C] eax +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
push 3  +
push edi  +
push [ebp+var_2F4]  +
mov [ebp+var_218] 0EEh +
push [ebp+arg_0]  +
call sub_101AF46  +
test eax eax +
jnz loc_100E0E0  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_100E165  +
cmp [ebp+arg_0] 3 +
jbe loc_100E0F5  +
cmp [ebp+var_2EC] edi +
jz loc_100E0FD  +
push 106h  +
jmp loc_100E144  +
cmp [ebp+var_2EC] edi +
jnz loc_100E15A  +
lea eax [ebp+String] +
push 2Dh  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E15A  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
lea ecx [eax-1] +
cmp ecx 0EDh +
ja loc_100E13F  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100DD6F  +
mov [ebp+var_2F0] eax +
jmp loc_100E165  +
push 8Eh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_100E165  +
call sub_100DD14  +
mov [ebp+var_2F0] edi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_2F0] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1029968 +
or eax 0FFFFFFFFh +
mov edx offset dword_1029968 +
jmp loc_100E1A0  +
cmp ecx [ebp+arg_0] +
jz loc_100E1A6  +
add edx 10h +
mov ecx [edx] +
test ecx ecx +
jnz loc_100E196  +
jmp loc_100E1A9  +
mov eax [edx+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_102996C +
or eax 0FFFFFFFFh +
mov edx offset dword_1029968 +
jmp loc_100E1D2  +
cmp ecx [ebp+arg_0] +
jz loc_100E1D8  +
mov ecx [edx+14h] +
add edx 10h +
test ecx ecx +
jnz loc_100E1C7  +
jmp loc_100E1DB  +
mov eax [edx+0Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push edi  +
xor ebx ebx +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push 1DDh  +
call sub_1019FBD  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100E213  +
mov eax edi +
jmp loc_100E29F  +
push ebx  +
push edi  +
push 1DEh  +
call sub_1019FBD  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100E230  +
push 3  +
jmp loc_100E24B  +
push ebx  +
push edi  +
push 1DCh  +
call sub_1019FBD  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100E24E  +
push 2  +
pop eax  +
jmp loc_100E29F  +
mov eax offset aList +
push esi  +
mov [ebp+var_24] eax +
mov [ebp+var_20] edi +
mov [ebp+var_1C] offset aTable +
mov [ebp+var_18] 2 +
mov [ebp+var_14] offset aCsv +
mov [ebp+var_10] 3 +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
lea esi [ebp+var_24] +
push ebx  +
push edi  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_100E29B  +
add esi 8 +
mov eax [esi] +
cmp eax ebx +
jnz loc_100E27F  +
mov eax ebx +
jmp loc_100E29E  +
mov eax [esi+4] +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString1] esi +
jnz loc_100E2BC  +
xor eax eax +
inc eax  +
jmp loc_100E2EF  +
push esi  +
push 1  +
push 215h  +
call sub_1019FBD  +
push eax  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_100E2EA  +
push esi  +
push 1  +
push offset aOne  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_100E2ED  +
push 2  +
pop esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 420h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
push 3F6h  +
push eax  +
mov [ebp+hSCObject] eax +
mov [ebp+var_404] eax +
lea eax [ebp-3FAh] +
xor ecx ecx +
push eax  +
mov [ebp+MachineName] cx +
call memset  +
add esp 0Ch +
push edi  +
call sub_101C4A4  +
test eax eax +
jnz loc_100E3BD  +
mov ebx 1FCh +
push ebx  +
push offset asc_1001B78  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1018BDF  +
test edi edi +
jz loc_100E3BD  +
movzx eax word ptr [edi] +
mov ecx edi +
test ax ax +
jz loc_100E3AF  +
movzx eax ax +
cmp ax 5Ch +
jnz loc_100E38B  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
inc [ebp+hSCObject]  +
test ax ax +
jnz loc_100E375  +
cmp word ptr [ebp+hSCObject] 2 +
jnz loc_100E3A5  +
push ebx  +
push edi  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1018BDF  +
jmp loc_100E3BD  +
cmp word ptr [ebp+hSCObject] 0 +
jnz loc_100E3BD  +
push ebx  +
push edi  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1018C22  +
xor edi edi +
inc edi  +
push edi  +
push 0  +
lea eax [ebp+MachineName] +
push eax  +
call OpenSCManagerW  +
mov [ebp+hSCObject] eax +
test eax eax +
jnz loc_100E3E3  +
mov [esi] edi +
xor eax eax +
jmp loc_100E4C1  +
push 14h  +
push offset ServiceName  +
push eax  +
call OpenServiceW  +
mov ebx eax +
test ebx ebx +
jnz loc_100E407  +
push [ebp+hSCObject]  +
mov [esi] edi +
call CloseServiceHandle  +
jmp loc_100E3DC  +
lea eax [ebp+ServiceStatus] +
push eax  +
push ebx  +
call QueryServiceStatus  +
test eax eax +
jnz loc_100E42E  +
mov [esi] edi +
push [ebp+hSCObject]  +
mov esi CloseServiceHandle +
call esi  +
push ebx  +
call esi  +
jmp loc_100E3DC  +
cmp [ebp+ServiceStatus.dwCurrentState] 4 +
jz loc_100E4AC  +
cmp [ebp+arg_8] 0 +
jz loc_100E4AE  +
push 0CEh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
lea eax [ebp+var_404] +
push eax  +
call sub_1007C43  +
cmp eax edi +
jnz loc_100E46E  +
mov dword ptr [esi] 2 +
jmp loc_100E41B  +
xor eax eax +
cmp [ebp+var_404] eax +
jz loc_100E480  +
mov dword ptr [esi] 3 +
jmp loc_100E41B  +
push eax  +
push eax  +
push ebx  +
call StartServiceW  +
test eax eax +
jz loc_100E419  +
lea eax [ebp+ServiceStatus] +
push eax  +
push ebx  +
call QueryServiceStatus  +
test eax eax +
jz loc_100E4AA  +
cmp [ebp+ServiceStatus.dwCurrentState] 4 +
jnz loc_100E48D  +
jmp loc_100E4AE  +
mov [esi] edi +
xor edi edi +
push [ebp+hSCObject]  +
mov esi CloseServiceHandle +
call esi  +
push ebx  +
call esi  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jz loc_100E536  +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
test eax eax +
jz loc_100E508  +
cmp word ptr [eax] 0 +
jz loc_100E508  +
push eax  +
call sub_10187DE  +
mov ecx [edi] +
test eax eax +
jz loc_100E508  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_100E501  +
lea eax [esi+4] +
push eax  +
call sub_1018819  +
lea eax [esi+8] +
push eax  +
call sub_1018819  +
push edi  +
call sub_1018819  +
lea eax [esi+10h] +
push eax  +
call sub_1018819  +
lea eax [esi+14h] +
push eax  +
call sub_1018819  +
and dword ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push dword ptr [eax]  +
mov esi ecx +
call sub_1006274  +
test eax eax +
jge loc_100E56C  +
push eax  +
call loc_1003BC9  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword_1029968 0 +
push ebx  +
push esi  +
push edi  +
jz loc_100E5D5  +
mov edi ds:_wtol +
mov esi offset dword_102996C +
push dword ptr [esi-4]  +
call sub_1019FBD  +
mov ebx eax +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_100E5FD  +
push ebx  +
call edi  +
pop ecx  +
push dword ptr [esi]  +
mov [esi+4] eax +
call sub_1019FBD  +
mov ebx eax +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_100E5FD  +
push ebx  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E604  +
mov [esi+8] eax +
add esi 10h +
cmp dword ptr [esi-4] 0 +
jnz loc_100E58F  +
or ecx 0FFFFFFFFh +
cmp dword_1029968 0 +
mov eax offset dword_1029968 +
jz loc_100E5F7  +
mov edx ecx +
mov ecx [eax+8] +
cmp edx ecx +
jge loc_100E604  +
add eax 10h +
cmp dword ptr [eax] 0 +
jnz loc_100E5E6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax 80070018h +
jmp loc_100E5F9  +
mov eax 8007000Dh +
jmp loc_100E5F9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+dwMessageId] 2 +
push ebx  +
push esi  +
push edi  +
mov edi 0FEh +
jz loc_100E629  +
cmp [ebp+dwMessageId] 3 +
jnz loc_100E67C  +
mov [ebp+dwMessageId] 160h +
mov esi offset unk_1028E80 +
push [ebp+dwMessageId]  +
call sub_1019FBD  +
mov ebx eax +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_100E6D4  +
push edi  +
push ebx  +
lea eax [esi-200h] +
push eax  +
call sub_1018BDF  +
push dword ptr [esi]  +
call sub_100E1B2  +
test eax eax +
jz loc_100E6DB  +
mov [esi] eax +
add esi 294h +
inc [ebp+dwMessageId]  +
cmp [ebp+dwMessageId] 164h +
jbe loc_100E635  +
mov [ebp+dwMessageId] 15Fh +
mov esi offset unk_1024648 +
push [ebp+dwMessageId]  +
call sub_1019FBD  +
mov ebx eax +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_100E6D4  +
push edi  +
push ebx  +
lea eax [esi-200h] +
push eax  +
call sub_1018BDF  +
push dword ptr [esi]  +
call sub_100E1B2  +
test eax eax +
jz loc_100E6DB  +
mov [esi] eax +
add esi 294h +
inc [ebp+dwMessageId]  +
cmp [ebp+dwMessageId] 17Ah +
jbe loc_100E688  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov eax 80070018h +
jmp loc_100E6CD  +
mov eax 8007000Dh +
jmp loc_100E6CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx 320h +
mov eax esi +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100E6F9  +
push 8  +
mov ebx offset aParser2 +
push ebx  +
push esi  +
call sub_1018B9C  +
mov eax [ebp+arg_4] +
and dword ptr [esi+10h] 0 +
and dword ptr [esi+14h] 0 +
push 8  +
mov [esi+2Ch] eax +
xor edi edi +
push ebx  +
lea eax [esi+50h] +
inc edi  +
push eax  +
mov dword ptr [esi+8] 0Ah +
mov dword ptr [esi+20h] offset aQuery +
mov [esi+18h] edi +
call sub_1018B9C  +
mov eax [ebp+arg_8] +
and dword ptr [esi+64h] 0 +
push 8  +
mov [esi+7Ch] eax +
push ebx  +
lea eax [esi+0A0h] +
push eax  +
mov dword ptr [esi+58h] 0Ah +
mov dword ptr [esi+70h] offset a? +
mov [esi+68h] edi +
mov dword ptr [esi+60h] 20000h +
call sub_1018B9C  +
and dword ptr [esi+0B4h] 0 +
push 8  +
push ebx  +
lea eax [esi+0F0h] +
push eax  +
mov [esi+0A8h] edi +
mov dword ptr [esi+0C0h] offset aS +
mov [esi+0B8h] edi +
mov dword ptr [esi+0B0h] 100C0h +
call sub_1018B9C  +
and dword ptr [esi+104h] 0 +
push 8  +
push ebx  +
lea eax [esi+140h] +
push eax  +
mov [esi+0F8h] edi +
mov dword ptr [esi+110h] offset aU +
mov [esi+108h] edi +
mov dword ptr [esi+100h] 100C0h +
call sub_1018B9C  +
and dword ptr [esi+15Ch] 0 +
and dword ptr [esi+154h] 0 +
push 8  +
push ebx  +
lea eax [esi+280h] +
push eax  +
mov [esi+148h] edi +
mov dword ptr [esi+160h] offset aP +
mov [esi+158h] edi +
mov dword ptr [esi+150h] 10010h +
call sub_1018B9C  +
and dword ptr [esi+294h] 0 +
push 8  +
push ebx  +
lea eax [esi+2D0h] +
push eax  +
mov [esi+288h] edi +
mov dword ptr [esi+2A0h] offset aTn_0 +
mov [esi+298h] edi +
mov dword ptr [esi+290h] 100C0h +
call sub_1018B9C  +
and dword ptr [esi+2ECh] 0 +
and dword ptr [esi+2E4h] 0 +
push 8  +
mov [esi+2D8h] edi +
mov dword ptr [esi+2F0h] offset aXml +
mov [esi+2E8h] edi +
mov dword ptr [esi+2E0h] 10010h +
push ebx  +
lea eax [esi+190h] +
push eax  +
call sub_1018B9C  +
mov eax [ebp+arg_C] +
and dword ptr [esi+1A4h] 0 +
push 8  +
mov [esi+1BCh] eax +
push ebx  +
lea eax [esi+1E0h] +
push eax  +
mov [esi+198h] edi +
mov dword ptr [esi+1B0h] offset aFo +
mov [esi+1A8h] edi +
mov dword ptr [esi+1A0h] 0C0h +
mov dword ptr [esi+1C0h] 0FEh +
call sub_1018B9C  +
mov eax [ebp+arg_10] +
and dword ptr [esi+1F0h] 0 +
and dword ptr [esi+1F4h] 0 +
push 8  +
mov [esi+20Ch] eax +
push ebx  +
lea eax [esi+230h] +
push eax  +
mov dword ptr [esi+1E8h] 0Ah +
mov dword ptr [esi+200h] offset aNh +
mov [esi+1F8h] edi +
call sub_1018B9C  +
and dword ptr [esi+240h] 0 +
mov eax [ebp+arg_14] +
and dword ptr [esi+244h] 0 +
mov [esi+248h] edi +
pop edi  +
mov dword ptr [esi+238h] 0Ah +
mov dword ptr [esi+250h] offset aV +
mov [esi+25Ch] eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_10205B1  +
mov eax large fs:0 +
push eax  +
mov eax 1374h +
call __alloca_probe  +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_C] +
mov [ebp+var_1378] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_1370] eax +
mov eax [ebp+arg_8] +
mov edi 1F8h +
xor ebx ebx +
push edi  +
mov [ebp+var_1374] eax +
lea eax [ebp+var_404] +
push ebx  +
push eax  +
mov [ebp+var_408] ebx +
call memset  +
push edi  +
lea eax [ebp+var_208] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
xor eax eax +
inc eax  +
add esp 18h +
mov [ebp+var_1380] ebx +
mov edi 0FEh +
cmp ax [ebp+arg_18] +
jz loc_100E9F1  +
cmp [ebp+arg_14] 2 +
jz loc_100ED09  +
mov eax [ebp+var_1378] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_1380] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
test eax eax +
jl loc_100EA25  +
push [ebp+var_1380]  +
push 291h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BDA2  +
mov eax [ebp+var_1370] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1010E47  +
test eax eax +
jge loc_100EA57  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
cmp [ebp+String] bx +
jnz loc_100EA78  +
push edi  +
push 1FBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 292h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1370] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1011AC6  +
test eax eax +
jge loc_100EAC7  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
cmp [ebp+String] bx +
jnz loc_100EAE8  +
push edi  +
push 1FBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 294h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1370] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1011D96  +
test eax eax +
jge loc_100EB37  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
cmp [ebp+String] bx +
jnz loc_100EB58  +
push edi  +
push 1FBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 295h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1370] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1010DB1  +
test eax eax +
jge loc_100EBA7  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
cmp [ebp+String] bx +
jnz loc_100EBC8  +
push edi  +
push 1FBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 296h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1378] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1010988  +
cmp eax ebx +
jge loc_100EC17  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 297h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov [ebp+var_137C] ebx +
mov [ebp+var_4] ebx +
mov eax [ebp+var_1374] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_137C] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
cmp eax ebx +
push edi  +
jge loc_100EC64  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
jmp loc_100EC6A  +
push [ebp+var_137C]  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 29Fh  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1374] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_101163C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 2ABh  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov eax [ebp+var_1374] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1010AA7  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 2ACh  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
or [ebp+var_4] 0FFFFFFFFh +
push [ebp+var_137C]  +
call ds:SysFreeString  +
push ebx  +
push 0C1h  +
call sub_1019FBD  +
push eax  +
push 293h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
mov ecx 0F64h +
lea eax [ebp+var_136C] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100ED35  +
mov eax [ebp+var_1370] +
mov eax [eax] +
mov ecx [ebp+var_1378] +
mov ecx [ecx] +
lea edx [ebp+var_408] +
push edx  +
push dword ptr [ebp+arg_18]  +
lea edx [ebp+var_136C] +
push edx  +
push eax  +
push ecx  +
call sub_1011F6E  +
test eax eax +
jge loc_100EE45  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_136C] +
push eax  +
call sub_1018BDF  +
push 40h  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_B7C] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_1170] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_F74] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_D78] +
push eax  +
call sub_1018BDF  +
push 40h  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_A7C] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_9FC] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_800] +
push eax  +
call sub_1018BDF  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_604] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+var_136C] +
push eax  +
push 298h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_B7C] +
push eax  +
push 299h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_AFC] +
push eax  +
push 29Ah  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_1170] +
push eax  +
push 29Bh  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_F74] +
push eax  +
push 29Ch  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_D78] +
push eax  +
push 29Dh  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_A7C] +
push eax  +
push 2A1h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_9FC] +
push eax  +
push 2A2h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_800] +
push eax  +
push 2A3h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp+var_604] +
push eax  +
push 2A4h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
xor eax eax +
mov [ebp+String] ax +
mov eax [ebp+var_1374] +
mov eax [eax] +
push edi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call sub_1011962  +
test eax eax +
jge loc_100EFA2  +
push edi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push 2A0h  +
call sub_100E181  +
push eax  +
push [ebp+arg_10]  +
push dword ptr [esi]  +
call sub_101BD65  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_1017692  +
leave   +
retn 1Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100EFEF  +
pop esi  +
retn   +
push eax  +
call ds:SysStringByteLen  +
push eax  +
push dword ptr [esi]  +
call ds:SysAllocStringByteLen  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpString]  +
mov esi ecx +
call sub_10069EB  +
test eax eax +
jge loc_100F020  +
push eax  +
call loc_1003BC9  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_100F054  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
call sub_1006923  +
mov [esi] eax +
test eax eax +
jnz loc_100F057  +
push 8007000Eh  +
call loc_1003BC9  +
and dword ptr [esi] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov esi [ebp+14h] +
mov [ebp-914h] eax +
mov eax [ebp+10h] +
mov [ebp-93Ch] eax +
mov eax [ebp+18h] +
xor ebx ebx +
push 1F8h  +
mov [ebp-940h] eax +
lea eax [ebp-700h] +
push ebx  +
push eax  +
mov [ebp-704h] ebx +
call memset  +
push 7Ch  +
lea eax [ebp-10Ch] +
push ebx  +
push eax  +
mov [ebp-110h] ebx +
call memset  +
push 7Ch  +
lea eax [ebp-8Ch] +
push ebx  +
push eax  +
mov [ebp-90h] ebx +
call memset  +
push 1F8h  +
lea eax [ebp-308h] +
push ebx  +
push eax  +
mov [ebp-30Ch] ebx +
call memset  +
push 1F8h  +
lea eax [ebp-8FCh] +
push ebx  +
push eax  +
mov [ebp-900h] ebx +
call memset  +
add esp 3Ch +
mov [ebp-930h] ebx +
mov [ebp-934h] ebx +
mov [ebp-910h] ebx +
mov [ebp-4] ebx +
mov [ebp-924h] ebx +
mov [ebp-91Ch] ebx +
mov [ebp-920h] ebx +
mov [ebp-90Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-918h] ebx +
mov byte ptr [ebp-4] 4 +
cmp [ebp+1Ch] ebx +
jnz loc_100F160  +
cmp dword ptr [ebp+20h] 2 +
jz loc_100F156  +
cmp dword ptr [ebp+20h] 3 +
jnz loc_100F160  +
mov dword ptr [ebp-91Ch] 1 +
mov eax [ebp-914h] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-910h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax ebx +
mov [ebp-908h] eax +
jl loc_100F1C2  +
cmp dword ptr [ebp+20h] 2 +
jnz loc_100F1AB  +
push 5Ch  +
push dword ptr [ebp-910h]  +
call ds:__imp_wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_100F19D  +
inc eax  +
inc eax  +
jmp loc_100F1A3  +
mov eax [ebp-910h] +
push 0FEh  +
push eax  +
jmp loc_100F1B6  +
push 0FEh  +
push dword ptr [ebp-910h]  +
lea eax [ebp-704h] +
push eax  +
call sub_1018BDF  +
cmp [ebp+1Ch] ebx +
jnz loc_100F1E2  +
cmp dword ptr [ebp+20h] 2 +
jnz loc_100F1E2  +
mov [ebp-924h] ebx +
mov dword ptr [ebp-920h] 1 +
jmp loc_100F2C5  +
mov eax [ebp-914h] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-90Ch] +
push edx  +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax ebx +
mov [ebp-908h] eax +
jge loc_100F212  +
push eax  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_100F7D6  +
mov eax [ebp-90Ch] +
mov ecx [eax] +
lea edx [ebp-918h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
mov [ebp-908h] eax +
jl loc_100F201  +
mov [ebp-904h] ebx +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-90Ch] +
mov ecx [eax] +
lea edx [ebp-904h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
mov [ebp-908h] eax +
jge loc_100F276  +
push eax  +
call ds:SetLastError  +
call sub_1018081  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-904h] +
call sub_100637A  +
jmp loc_100F7D6  +
mov eax [ebp-904h] +
mov ecx [eax] +
lea edx [ebp-920h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax ebx +
mov [ebp-908h] eax +
jl loc_100F256  +
xor eax eax +
inc eax  +
cmp [ebp-920h] eax +
jle loc_100F2A4  +
mov [ebp-924h] eax +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-904h] +
call sub_100637A  +
cmp [ebp-920h] ebx +
jnz loc_100F2C5  +
mov dword ptr [ebp-930h] 1 +
mov dword ptr [ebp-904h] 1 +
cmp [ebp-930h] ebx +
jnz loc_100F2EA  +
movzx eax word ptr [ebp-904h] +
cmp eax [ebp-920h] +
jg loc_100F7CC  +
mov eax [ebp-93Ch] +
push dword ptr [eax]  +
push dword ptr [edi]  +
call sub_101B7BB  +
xor eax eax +
inc eax  +
cmp ax [ebp-904h] +
jz loc_100F30F  +
cmp dword ptr [ebp+20h] 2 +
jz loc_100F781  +
cmp [ebp+1Ch] ebx +
jnz loc_100F31A  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_100F363  +
mov eax [ebp-940h] +
cmp eax ebx +
jz loc_100F329  +
cmp [eax] bx +
jnz loc_100F34D  +
lea eax [ebp-934h] +
push eax  +
lea eax [ebp-900h] +
push eax  +
mov dword ptr [ebp-934h] 0FEh +
call ds:GetComputerNameW  +
lea eax [ebp-900h] +
push ebx  +
push eax  +
push 28Bh  +
call sub_100E181  +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
push ebx  +
lea eax [ebp-704h] +
push eax  +
push 28Ch  +
call sub_100E181  +
sub eax [ebp-91Ch] +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
push dword ptr [ebp-904h]  +
mov eax [ebp-914h] +
mov eax [eax] +
push ebx  +
lea ecx [ebp-90h] +
push ecx  +
lea ecx [ebp-110h] +
push ecx  +
push eax  +
call sub_1010B47  +
push 0FEh  +
test eax eax +
jge loc_100F3CA  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
jmp loc_100F40B  +
lea eax [ebp-90h] +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push 0FEh  +
push offset asc_10016CC  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018C22  +
push 0FEh  +
lea eax [ebp-110h] +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018C22  +
mov eax [ebp-914h] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp-92Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_100F449  +
cmp [ebp-92Ch] bx +
jnz loc_100F449  +
push 0FEh  +
push 194h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp-30Ch] +
push eax  +
push 28Dh  +
call sub_100E181  +
sub eax [ebp-91Ch] +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
mov eax [ebp-914h] +
mov eax [eax] +
lea ecx [ebp-30Ch] +
push ecx  +
push eax  +
call sub_10108E6  +
test eax eax +
jge loc_100F4A0  +
push 0FEh  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp-30Ch] +
push eax  +
push 28Eh  +
call sub_100E181  +
sub eax [ebp-91Ch] +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
cmp [ebp+1Ch] ebx +
jnz loc_100F4D1  +
cmp dword ptr [ebp+20h] 2 +
jz loc_100F63D  +
push 1F8h  +
lea eax [ebp-504h] +
push ebx  +
push eax  +
mov [ebp-508h] ebx +
call memset  +
add esp 0Ch +
push 0FEh  +
lea eax [ebp-30Ch] +
push eax  +
push dword ptr [ebp-90Ch]  +
call sub_1010F4C  +
cmp eax ebx +
jge loc_100F523  +
push 0FEh  +
push 197h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
cmp [ebp-30Ch] bx +
jnz loc_100F569  +
push 0FEh  +
push 0BFh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push 0FEh  +
push 182h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-508h] +
push eax  +
call sub_1018BDF  +
jmp loc_100F5FA  +
mov [ebp-928h] ebx +
mov byte ptr [ebp-4] 8 +
mov eax [ebp-90Ch] +
lea edx [ebp-928h] +
push edx  +
mov [ebp-938h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jl loc_100F5A7  +
mov eax [ebp-928h] +
mov ecx [eax] +
lea edx [ebp-938h] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
cmp eax ebx +
jge loc_100F5BF  +
push 0FEh  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-30Ch] +
jmp loc_100F5E5  +
cmp dword ptr [ebp-938h] 3 +
push 0FEh  +
jnz loc_100F5D4  +
push 181h  +
jmp loc_100F5D9  +
push 183h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-508h] +
push eax  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-928h] +
call sub_100637A  +
push ebx  +
lea eax [ebp-508h] +
push eax  +
push 28Fh  +
call sub_100E181  +
sub eax [ebp-91Ch] +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
cmp [ebp+1Ch] ebx +
jz loc_100F63D  +
push ebx  +
lea eax [ebp-30Ch] +
push eax  +
push 29Eh  +
call sub_100E181  +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
push dword ptr [ebp-904h]  +
mov eax [ebp-914h] +
mov eax [eax] +
push 1  +
lea ecx [ebp-90h] +
push ecx  +
lea ecx [ebp-110h] +
push ecx  +
push eax  +
call sub_1010B47  +
test eax eax +
jge loc_100F679  +
push 0FEh  +
push 1B8h  +
call sub_1019FBD  +
jmp loc_100F74C  +
push ebx  +
push 1  +
push 1A2h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_100F741  +
push ebx  +
push 1  +
push 1A3h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_100F741  +
push ebx  +
push 1  +
push 1A4h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_100F741  +
push ebx  +
push 1  +
push 1A5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_100F741  +
push 0FEh  +
lea eax [ebp-90h] +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push 0FEh  +
push offset asc_10016CC  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018C22  +
push 0FEh  +
lea eax [ebp-110h] +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018C22  +
jmp loc_100F759  +
push 0FEh  +
lea eax [ebp-90h] +
push eax  +
lea eax [ebp-30Ch] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp-30Ch] +
push eax  +
push 290h  +
call sub_100E181  +
sub eax [ebp-91Ch] +
push eax  +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_101BD65  +
mov [ebp-908h] ebx +
cmp [ebp+1Ch] ebx +
jz loc_100F7B1  +
push dword ptr [ebp-904h]  +
lea eax [ebp-918h] +
push dword ptr [ebp+20h]  +
push dword ptr [esi]  +
push edi  +
push eax  +
lea eax [ebp-90Ch] +
push eax  +
push dword ptr [ebp-914h]  +
call sub_100E94F  +
mov [ebp-908h] eax +
cmp [ebp-924h] ebx +
jz loc_100F7BB  +
inc dword ptr [esi]  +
inc dword ptr [ebp-904h]  +
mov [ebp-930h] ebx +
jmp loc_100F2CF  +
cmp [ebp-924h] ebx +
jnz loc_100F7D6  +
inc dword ptr [esi]  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-918h] +
call sub_100637A  +
mov [ebp-4] bl +
lea ecx [ebp-90Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-910h]  +
call ds:SysFreeString  +
mov eax [ebp-908h] +
call sub_10177AC  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov eax [edi] +
cmp eax [esi] +
jz loc_100F84B  +
push eax  +
call ds:SysFreeString  +
mov ecx esi +
call sub_100EFE2  +
mov [edi] eax +
cmp dword ptr [esi] 0 +
jz loc_100F84B  +
test eax eax +
jnz loc_100F84B  +
push 8007000Eh  +
call loc_1003BC9  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
xor esi esi +
mov [ebp-454h] eax +
mov eax [ebp+10h] +
mov [ebp-450h] edi +
mov [ebp-430h] eax +
mov [ebp-42Ch] esi +
mov [ebp-448h] esi +
mov [ebp-468h] esi +
mov [ebp-438h] esi +
mov [ebp-44Ch] esi +
mov [ebp-434h] esi +
mov [ebp-444h] esi +
mov [ebp-4] esi +
push offset asc_1001BA8  +
lea ecx [ebp-464h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 1 +
push offset asc_1001B9C  +
lea ecx [ebp-460h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 2 +
mov [ebp-43Ch] esi +
mov byte ptr [ebp-4] 4 +
mov [ebp-440h] esi +
mov byte ptr [ebp-4] 6 +
cmp [ebp+20h] esi +
jnz loc_100F971  +
call sub_101B2CE  +
mov [ebp-42Ch] eax +
cmp eax esi +
jnz loc_100F95B  +
call ds:__imp_GetLastError  +
mov esi eax +
mov ebx ds:SysFreeString +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-440h] +
call sub_100637A  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-43Ch] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-460h]  +
call ebx  +
mov byte ptr [ebp-4] 0 +
push dword ptr [ebp-464h]  +
call ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-444h]  +
call ebx  +
mov eax esi +
call sub_10177AC  +
retn 20h  +
push eax  +
mov dword ptr [ebp-448h] 1Ch +
call sub_101B36E  +
mov [ebp-468h] eax +
mov eax [edi] +
lea ecx [ebp-444h] +
push ecx  +
push edi  +
call dword ptr [eax+20h]  +
mov eax [edi] +
lea ecx [ebp-43Ch] +
push ecx  +
push 1  +
push edi  +
call dword ptr [eax+28h]  +
mov ebx eax +
cmp ebx esi +
jge loc_100F9B8  +
and eax 0FFFFh +
cmp eax 32h +
jnz loc_100F9A5  +
mov [ebp-434h] esi +
jmp loc_100F9D1  +
push ebx  +
call ds:SetLastError  +
call sub_1018081  +
mov esi ebx +
jmp loc_100F909  +
mov eax [ebp-43Ch] +
mov ecx [eax] +
lea edx [ebp-434h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_100F9A5  +
mov eax [edi] +
lea ecx [ebp-440h] +
push ecx  +
push 1  +
push edi  +
call dword ptr [eax+38h]  +
mov ebx eax +
cmp ebx esi +
jl loc_100F9A5  +
mov eax [ebp-440h] +
mov ecx [eax] +
lea edx [ebp-438h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ebx eax +
cmp ebx esi +
mov [ebp-420h] ebx +
jl loc_100F9A5  +
cmp [ebp-438h] esi +
jnz loc_100FA43  +
cmp [ebp-430h] esi +
jz loc_100FA37  +
push esi  +
push dword ptr [ebp-430h]  +
call sub_10182B0  +
test eax eax +
jbe loc_100FA2F  +
mov esi 80070003h +
jmp loc_100F909  +
cmp [ebp-438h] esi +
jnz loc_100FA43  +
cmp [ebp-434h] esi +
jz loc_100F909  +
mov ebx ds:SysFreeString +
xor eax eax +
inc eax  +
cmp [ebp-438h] eax +
mov [ebp-41Ch] eax +
jl loc_100FE78  +
cmp [ebp-44Ch] esi +
jnz loc_100FE78  +
mov [ebp-418h] esi +
mov byte ptr [ebp-4] 8 +
mov [ebp-424h] esi +
mov byte ptr [ebp-4] 9 +
cmp [ebp-430h] esi +
jz loc_100FB72  +
push esi  +
push dword ptr [ebp-430h]  +
call sub_10182B0  +
test eax eax +
jbe loc_100FB72  +
push dword ptr [ebp-430h]  +
lea ecx [ebp-470h] +
mov dword ptr [ebp-44Ch] 1 +
call loc_10069B4  +
mov byte ptr [ebp-4] 0Ah +
mov eax [eax] +
mov ecx [edi] +
lea edx [ebp-418h] +
push edx  +
push eax  +
push edi  +
call dword ptr [ecx+34h]  +
mov [ebp-420h] eax +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-470h]  +
call ebx  +
cmp [ebp-420h] esi +
jl loc_100FF56  +
cmp [ebp-418h] esi +
jz loc_100FF56  +
cmp [ebp+20h] esi +
jz loc_100FD75  +
mov [ebp-41Ch] esi +
mov byte ptr [ebp-4] 0Bh +
mov [ebp-46Ch] esi +
mov byte ptr [ebp-4] 0Ch +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-41Ch] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jge loc_100FF0F  +
push edi  +
call ds:SetLastError  +
call sub_1018081  +
mov byte ptr [ebp-4] 0Bh +
push esi  +
call ebx  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-41Ch]  +
call ebx  +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-424h]  +
call ebx  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-418h] +
call sub_100637A  +
mov esi edi +
jmp loc_100F90F  +
push 3  +
pop eax  +
mov [ebp-480h] ax +
mov eax [ebp-41Ch] +
mov [ebp-478h] eax +
mov byte ptr [ebp-4] 0Dh +
mov eax [ebp-440h] +
mov ecx [eax] +
lea edx [ebp-418h] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-480h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
mov byte ptr [ebp-4] 9 +
lea eax [ebp-480h] +
push eax  +
call ds:VariantClear  +
test esi esi +
jl loc_100FFAC  +
cmp dword ptr [ebp-418h] 0 +
jz loc_100FFAC  +
cmp dword ptr [ebp+20h] 0 +
jz loc_100FD6D  +
xor edi edi +
mov [ebp-428h] edi +
mov byte ptr [ebp-4] 0Eh +
mov [ebp-414h] edi +
mov byte ptr [ebp-4] 0Fh +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_100FF8D  +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-428h] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
cmp esi edi +
mov [ebp-420h] esi +
jl loc_100FF8D  +
lea eax [ebp-464h] +
push eax  +
lea ecx [ebp-414h] +
call sub_100F816  +
lea eax [ebp-424h] +
push eax  +
lea ecx [ebp-414h] +
call sub_100E550  +
lea eax [ebp-460h] +
push eax  +
lea ecx [ebp-414h] +
call sub_100E550  +
push offset asc_1001B98  +
lea ecx [ebp-458h] +
call sub_100F02C  +
mov byte ptr [ebp-4] 10h +
lea eax [ebp-458h] +
push eax  +
lea ecx [ebp-428h] +
call sub_100E550  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-458h]  +
call ebx  +
cmp dword ptr [ebp+24h] 2 +
jnz loc_100FD07  +
mov esi ds:StrStrIW +
push offset Srch  +
push dword ptr [ebp-428h]  +
call esi  +
push offset a?_0  +
push dword ptr [ebp-428h]  +
mov [ebp-46Ch] eax +
call esi  +
cmp [ebp-46Ch] edi +
jz loc_100FD07  +
cmp eax edi +
jz loc_100FD07  +
add eax 4 +
push eax  +
lea ecx [ebp-45Ch] +
call loc_10069B4  +
mov byte ptr [ebp-4] 11h +
lea eax [ebp-45Ch] +
push eax  +
lea ecx [ebp-428h] +
call sub_100F816  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [ebp-45Ch]  +
call ebx  +
lea eax [ebp-428h] +
push eax  +
lea ecx [ebp-414h] +
call sub_100E550  +
mov eax ds:_iob +
push dword ptr [ebp-414h]  +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 0Eh +
push dword ptr [ebp-414h]  +
call ebx  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-428h]  +
call ebx  +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-424h]  +
call ebx  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-418h] +
call sub_100637A  +
mov edi [ebp-450h] +
xor esi esi +
jmp loc_100FE60  +
mov edi [ebp-450h] +
xor esi esi +
mov eax [ebp-418h] +
mov eax [eax] +
lea ecx [ebp-424h] +
push ecx  +
push dword ptr [ebp-418h]  +
call dword ptr [eax+1Ch]  +
cmp eax esi +
mov [ebp-420h] eax +
jl loc_100FE45  +
push esi  +
push dword ptr [ebp-424h]  +
call sub_10182B0  +
test eax eax +
jbe loc_100FE45  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-468h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-454h]  +
push eax  +
lea eax [ebp-448h] +
push eax  +
lea eax [ebp-42Ch] +
push eax  +
lea eax [ebp-418h] +
push eax  +
call sub_100F063  +
cmp eax esi +
mov [ebp-420h] eax +
jge loc_100FE45  +
push dword ptr [ebp-424h]  +
push 0C5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-410h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [ebp-420h]  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp-420h] esi +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-424h]  +
call ebx  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-418h] +
call sub_100637A  +
inc dword ptr [ebp-41Ch]  +
mov eax [ebp-41Ch] +
cmp eax [ebp-438h] +
jle loc_100FA5E  +
cmp [ebp+20h] esi +
jnz loc_1010069  +
mov edi [ebp+1Ch] +
cmp edi 3 +
jz loc_100FEF5  +
push offset asc_1001B80  +
lea ecx [ebp-414h] +
call sub_100F02C  +
mov byte ptr [ebp-4] 12h +
push 184h  +
call sub_1019FBD  +
push eax  +
lea ecx [ebp-414h] +
call sub_100F006  +
lea eax [ebp-444h] +
push eax  +
lea ecx [ebp-414h] +
call sub_100E550  +
push offset String  +
lea ecx [ebp-414h] +
call sub_100F006  +
mov eax ds:_iob +
push dword ptr [ebp-414h]  +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 6 +
push dword ptr [ebp-414h]  +
call ebx  +
cmp [ebp+18h] esi +
jnz loc_100FFBD  +
xor eax eax +
cmp edi 1 +
setz al  +
lea eax [eax+eax+3] +
jmp loc_100FFC3  +
mov eax ds:_iob +
push dword ptr [ebp-41Ch]  +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 0Bh +
push esi  +
call ebx  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-41Ch]  +
call ebx  +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-424h]  +
call ebx  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-418h] +
call sub_100637A  +
jmp loc_100F90F  +
push dword ptr [ebp-420h]  +
call ds:SetLastError  +
call sub_1018081  +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-424h]  +
call ebx  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-418h] +
call sub_100637A  +
mov esi [ebp-420h] +
jmp loc_100F90F  +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
mov byte ptr [ebp-4] 0Eh +
push edi  +
call ebx  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-428h]  +
jmp loc_100FF34  +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_100FF36  +
mov eax [ebp-448h] +
cmp [ebp+14h] esi +
jz loc_100FFFE  +
cmp [ebp+18h] esi +
jnz loc_100FFED  +
cmp edi 2 +
jz loc_100FFD7  +
cmp edi 3 +
jnz loc_100FFED  +
push dword ptr [ebp-42Ch]  +
mov ecx edi +
or ecx 1000h +
push ecx  +
push offset unk_1028C80  +
jmp loc_1010022  +
push dword ptr [ebp-42Ch]  +
mov ecx edi +
or ecx 1000h +
push ecx  +
jmp loc_101001D  +
cmp [ebp+18h] esi +
jnz loc_1010016  +
cmp edi 2 +
jz loc_101000D  +
cmp edi 3 +
jnz loc_1010016  +
push dword ptr [ebp-42Ch]  +
push edi  +
jmp loc_100FFE6  +
push dword ptr [ebp-42Ch]  +
push edi  +
push offset unk_1024448  +
push eax  +
call sub_101D95D  +
push dword ptr [ebp-42Ch]  +
call sub_101B36E  +
test eax eax +
jnz loc_1010055  +
cmp edi 3 +
jz loc_1010055  +
push 0CCh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
cmp [ebp-42Ch] esi +
jz loc_1010069  +
lea eax [ebp-42Ch] +
push eax  +
call sub_101B343  +
cmp [ebp-44Ch] esi +
jnz loc_100F90F  +
cmp [ebp-434h] esi +
jle loc_1010161  +
xor eax eax +
inc eax  +
cmp [ebp-434h] eax +
mov [ebp-41Ch] eax +
jl loc_1010161  +
cmp [ebp-420h] esi +
jl loc_101016D  +
mov [ebp-414h] esi +
mov byte ptr [ebp-4] 14h +
push 3  +
pop eax  +
mov [ebp-480h] ax +
mov eax [ebp-41Ch] +
mov [ebp-478h] eax +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-43Ch] +
mov ecx [eax] +
lea edx [ebp-414h] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-480h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
mov byte ptr [ebp-4] 14h +
lea eax [ebp-480h] +
push eax  +
call ds:VariantClear  +
test esi esi +
jl loc_1010184  +
cmp dword ptr [ebp-414h] 0 +
jz loc_1010184  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-430h]  +
push dword ptr [ebp-454h]  +
push dword ptr [ebp-414h]  +
call sub_100F858  +
mov [ebp-420h] eax +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-414h] +
call sub_100637A  +
inc dword ptr [ebp-41Ch]  +
mov eax [ebp-41Ch] +
xor esi esi +
cmp eax [ebp-434h] +
jle loc_1010096  +
cmp [ebp-420h] esi +
jge loc_100F90F  +
mov esi [ebp-420h] +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_100F90F  +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-414h] +
call sub_100637A  +
jmp loc_100F90F  +
***
call __EH_prolog3_GS  +
mov eax [ebp+10h] +
mov esi [ebp+0Ch] +
xor ebx ebx +
push 1F8h  +
mov [ebp-780h] eax +
lea eax [ebp-414h] +
push ebx  +
push eax  +
mov [ebp-77Ch] ebx +
mov [ebp-768h] ebx +
mov [ebp-748h] ebx +
mov [ebp-76Ch] ebx +
mov [ebp-73Ch] ebx +
mov [ebp-418h] ebx +
call memset  +
xor eax eax +
inc eax  +
add esp 0Ch +
mov [ebp-744h] ebx +
mov dword ptr [ebp-740h] 2 +
mov [ebp-778h] eax +
mov [ebp-74Ch] eax +
mov [ebp-774h] ebx +
mov [ebp-4] eax +
mov [ebp-770h] ebx +
mov byte ptr [ebp-4] 3 +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp-764h] +
stos   +
lea eax [ebp-76Ch] +
push eax  +
lea eax [ebp-748h] +
push eax  +
lea eax [ebp-418h] +
push eax  +
lea eax [ebp-768h] +
push eax  +
lea eax [ebp-77Ch] +
push eax  +
lea eax [ebp-738h] +
push eax  +
mov dword ptr [ebp-764h] 18h +
call sub_100E6E7  +
push ebx  +
lea eax [ebp-738h] +
push eax  +
push 0Ah  +
push ebx  +
push esi  +
push dword ptr [ebp+8]  +
call sub_101AF46  +
cmp eax ebx +
jnz loc_10102B1  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov dword ptr [ebp-74Ch] 1 +
jmp loc_101072B  +
cmp dword ptr [ebp+8] 5 +
mov esi [ebp-48Ch] +
mov eax [ebp-66Ch] +
mov edx [ebp-61Ch] +
mov ecx [ebp-5CCh] +
mov [ebp-754h] esi +
mov esi [ebp-43Ch] +
mov [ebp-760h] eax +
mov [ebp-75Ch] edx +
mov [ebp-758h] ecx +
mov [ebp-750h] esi +
jbe loc_1010319  +
cmp [ebp-768h] ebx +
jz loc_1010331  +
push 104h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1010532  +
cmp [ebp-768h] ebx +
jz loc_1010331  +
call sub_100E540  +
mov [ebp-74Ch] ebx +
jmp loc_1010532  +
xor edi edi +
inc edi  +
cmp [ebp-62Ch] ebx +
jnz loc_101034B  +
cmp [ebp-5DCh] edi +
jnz loc_101034B  +
push 202h  +
jmp loc_1010300  +
cmp [ebp-67Ch] ebx +
jnz loc_1010362  +
cmp [ebp-62Ch] edi +
jnz loc_1010362  +
push 81h  +
jmp loc_1010300  +
cmp eax ebx +
jz loc_10103F4  +
mov esi 1FCh +
cmp edx ebx +
jz loc_1010397  +
cmp ecx ebx +
jnz loc_1010397  +
push esi  +
mov [ebp-744h] edi +
call sub_1018520  +
mov [ebp-758h] eax +
cmp eax ebx +
jnz loc_1010397  +
call sub_1018081  +
jmp loc_1010532  +
cmp [ebp-5DCh] ebx +
jz loc_10103F4  +
cmp [ebp-5CCh] ebx +
jnz loc_10103C7  +
push dword ptr [ebp-758h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset String2  +
push dword ptr [ebp-758h]  +
call sub_1018BDF  +
jmp loc_10103F4  +
push ebx  +
push edi  +
push offset String2  +
push dword ptr [ebp-758h]  +
call sub_1018387  +
test eax eax +
jnz loc_10103F4  +
push esi  +
lea eax [ebp-758h] +
push eax  +
call sub_1018894  +
test eax eax +
jz loc_101038D  +
mov [ebp-744h] edi +
cmp [ebp-44Ch] ebx +
jbe loc_1010421  +
push dword ptr [ebp-750h]  +
call sub_100E2AA  +
mov [ebp-778h] eax +
cmp eax ebx +
jnz loc_101041B  +
push 0A3h  +
jmp loc_1010300  +
mov [ebp-73Ch] edi +
cmp [ebp-58Ch] ebx +
jbe loc_1010441  +
lea eax [ebp-418h] +
push eax  +
call sub_100E1E4  +
mov [ebp-740h] eax +
cmp eax ebx +
jnz loc_101044B  +
jmp loc_1010411  +
mov dword ptr [ebp-740h] 2 +
cmp dword ptr [ebp-740h] 2 +
jz loc_1010466  +
cmp [ebp-748h] ebx +
jz loc_1010466  +
push 91h  +
jmp loc_1010300  +
cmp [ebp-73Ch] ebx +
jz loc_1010490  +
cmp [ebp-748h] ebx +
jnz loc_1010486  +
cmp [ebp-76Ch] ebx +
jnz loc_1010486  +
cmp [ebp-58Ch] ebx +
jbe loc_1010490  +
push 20Ch  +
jmp loc_1010300  +
cmp [ebp-744h] ebx +
jz loc_10104EE  +
push dword ptr [ebp-75Ch]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [ebp-758h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [ebp-758h]  +
call sub_1018ECA  +
test eax eax +
jnz loc_10104EE  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_1010532  +
call sub_100E578  +
mov esi eax +
cmp esi ebx +
jl loc_1010512  +
cmp [ebp-73Ch] ebx +
jnz loc_1010542  +
push dword ptr [ebp-740h]  +
call sub_100E610  +
mov esi eax +
cmp esi ebx +
jge loc_1010542  +
push 0C8h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push esi  +
call ds:SetLastError  +
push dword ptr [ebp-760h]  +
call sub_101C6C0  +
jmp loc_101072B  +
push dword ptr [ebp-758h]  +
push dword ptr [ebp-75Ch]  +
push dword ptr [ebp-760h]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-770h] +
call sub_1004439  +
push dword ptr [ebp-758h]  +
call sub_10187DE  +
mov ecx [ebp-758h] +
cmp eax ebx +
jz loc_1010580  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_101057A  +
lea eax [ebp-758h] +
push eax  +
call sub_1018819  +
cmp [ebp-770h] ebx +
jz loc_101072B  +
xor eax eax +
push 208h  +
mov [ebp-21Ch] ax +
lea eax [ebp-21Ah] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-754h] +
add esp 0Ch +
cmp eax ebx +
jz loc_101060E  +
cmp [eax] bx +
jz loc_101060E  +
push 105h  +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
call sub_1018BDF  +
push 5Ch  +
push ebx  +
lea eax [ebp-21Ch] +
push eax  +
call ds:StrRChrIW  +
cmp eax ebx +
jz loc_1010605  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
push 200h  +
inc eax  +
push eax  +
push dword ptr [ebp-754h]  +
call sub_1018BDF  +
jmp loc_101060E  +
xor eax eax +
mov [ebp-21Ch] ax +
mov esi [ebp-770h] +
lea eax [ebp-21Ch] +
push eax  +
lea ecx [ebp-744h] +
call loc_10069B4  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
mov ecx [esi] +
lea edx [ebp-774h] +
push edx  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-744h]  +
call ds:SysFreeString  +
cmp esi ebx +
jge loc_1010674  +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_101072B  +
cmp [ebp-73Ch] ebx +
jz loc_101069E  +
mov eax [ebp-754h] +
cmp eax ebx +
jz loc_101068B  +
cmp [eax] bx +
jnz loc_101069E  +
mov eax ds:_iob +
push offset aTasks  +
add eax 20h +
push eax  +
call sub_1018C65  +
push dword ptr [ebp-778h]  +
push dword ptr [ebp-73Ch]  +
push dword ptr [ebp-740h]  +
push dword ptr [ebp-76Ch]  +
push dword ptr [ebp-748h]  +
push dword ptr [ebp-754h]  +
push dword ptr [ebp-760h]  +
push dword ptr [ebp-774h]  +
call sub_100F858  +
mov esi eax +
cmp [ebp-73Ch] ebx +
jz loc_10106FF  +
mov eax [ebp-754h] +
cmp eax ebx +
jz loc_10106EC  +
cmp [eax] bx +
jnz loc_10106FF  +
mov eax ds:_iob +
push offset aTasks_0  +
add eax 20h +
push eax  +
call sub_1018C65  +
cmp esi ebx +
jge loc_1010725  +
push esi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp-74Ch] edi +
jmp loc_101072B  +
mov [ebp-74Ch] ebx +
mov ecx [ebp-780h] +
cmp ecx ebx +
jz loc_101075F  +
push dword ptr [ebp-76Ch]  +
lea eax [ebp-764h] +
push dword ptr [ebp-748h]  +
push dword ptr [ebp-740h]  +
push dword ptr [ebp-73Ch]  +
push dword ptr [ebp-768h]  +
push eax  +
call sub_1016F4E  +
lea eax [ebp-764h] +
push eax  +
call sub_100E4D7  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-770h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-774h] +
call sub_100637A  +
mov eax [ebp-74Ch] +
call sub_10177AC  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
cmp esi edi +
jnz loc_10107C8  +
xor eax eax +
jmp loc_10108DA  +
cmp [esi] di +
jz loc_10107E3  +
movzx eax word ptr [esi] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_10107E3  +
inc esi  +
inc esi  +
cmp [esi] bx +
jnz loc_10107CD  +
movzx eax word ptr [esi] +
push 50h  +
pop ecx  +
cmp cx ax +
jz loc_10107FA  +
push 70h  +
pop ecx  +
cmp cx ax +
jnz loc_10108D8  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1010876  +
mov ebx ds:iswdigit +
xor edi edi +
jmp loc_101081A  +
imul edi edi +
inc esi  +
inc esi  +
lea edi [edi+eax-30h] +
movzx eax word ptr [esi] +
push eax  +
call ebx  +
test eax eax +
movzx eax word ptr [esi] +
pop ecx  +
jnz loc_101080E  +
cmp eax 64h +
jg loc_1010851  +
jz loc_101084C  +
sub eax 44h +
jz loc_101084C  +
sub eax 4 +
jz loc_1010866  +
sub eax 5 +
jz loc_101085B  +
sub eax 6 +
jz loc_1010856  +
dec eax  +
jnz loc_1010869  +
mov [ebp+var_C] 1 +
jmp loc_1010869  +
mov [ebp+var_10] edi +
jmp loc_1010869  +
sub eax 68h +
jmp loc_1010834  +
mov [ebp+var_14] edi +
jmp loc_1010869  +
cmp [ebp+var_C] 0 +
jz loc_1010869  +
mov [ebp+var_4] edi +
jmp loc_1010869  +
mov [ebp+var_8] edi +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_101080A  +
mov ebx [ebp+var_10] +
mov eax [ebp+var_14] +
cdq   +
push 3Ch  +
pop ecx  +
idiv  ecx +
push 18h  +
pop edi  +
add [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esi edx +
cdq   +
idiv  ecx +
add [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov ecx edx +
cdq   +
idiv  edi +
add ebx eax +
mov eax edx +
mov edx [ebp+arg_4] +
test edx edx +
jz loc_10108A7  +
mov [edx] ebx +
jmp loc_10108AC  +
imul ebx ebx +
add eax ebx +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_10108B7  +
mov [edx] eax +
jmp loc_10108BC  +
imul eax eax +
add ecx eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10108C7  +
mov [eax] ecx +
jmp loc_10108CC  +
imul ecx ecx +
add esi ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10108D5  +
mov [eax] esi +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
xor edi edi +
push esi  +
mov [ebp+var_4] edi +
mov [ebp+var_8] 1 +
call dword ptr [eax+24h]  +
cmp eax edi +
jl loc_101097D  +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebx] ax +
mov eax [ebp+var_8] +
dec eax  +
jz loc_1010959  +
dec eax  +
dec eax  +
jz loc_1010936  +
dec eax  +
push 0FEh  +
push ebx  +
jz loc_101092F  +
push 191h  +
jmp loc_1010973  +
push 1A6h  +
jmp loc_1010973  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+40h]  +
cmp [ebp+var_4] edi +
push 0FEh  +
push ebx  +
jge loc_1010952  +
push 1FDh  +
jmp loc_1010973  +
push 1A7h  +
jmp loc_1010973  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+40h]  +
cmp [ebp+var_4] edi +
push 0FEh  +
push ebx  +
jl loc_101094B  +
push 1A8h  +
push edi  +
call ds:LoadStringW  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_4] 0 +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl locret_10109C6  +
cmp word ptr [ebp+var_4] 0 +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
jnz loc_10109B7  +
push 194h  +
jmp loc_10109BC  +
push 196h  +
push 0  +
call ds:LoadStringW  +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx 0FEh +
push ebx  +
mov esi 1B8h +
push esi  +
call sub_1019FBD  +
mov edi [ebp+arg_0] +
push eax  +
lea eax [edi+1FCh] +
push eax  +
call sub_1018BDF  +
push ebx  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+3F8h] +
push eax  +
call sub_1018BDF  +
push ebx  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+5F4h] +
push eax  +
call sub_1018BDF  +
push 40h  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+7F0h] +
push eax  +
call sub_1018BDF  +
push 40h  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+870h] +
push eax  +
call sub_1018BDF  +
push 40h  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+8F0h] +
push eax  +
call sub_1018BDF  +
push ebx  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+970h] +
push eax  +
call sub_1018BDF  +
push ebx  +
push esi  +
call sub_1019FBD  +
push eax  +
lea eax [edi+0B6Ch] +
push eax  +
call sub_1018BDF  +
push ebx  +
push esi  +
call sub_1019FBD  +
push eax  +
add edi 0D68h +
push edi  +
call sub_1018BDF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
lea ecx [ebp+arg_4] +
push ecx  +
mov [edi] ax +
mov eax [esi] +
push esi  +
call dword ptr [eax+3Ch]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_1010B39  +
mov eax [esi] +
push ebx  +
xor ebx ebx +
cmp word ptr [ebp+arg_4] bx +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
setnz bl  +
call dword ptr [eax+44h]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_1010B38  +
xor eax eax +
cmp word ptr [ebp+arg_4] ax +
setnz al  +
mov esi eax +
test ebx ebx +
jz loc_1010B20  +
push [ebp+arg_8]  +
push 180h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_1018BDF  +
test esi esi +
jz loc_1010B38  +
push [ebp+arg_8]  +
push 0C2h  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_1018C22  +
test esi esi +
jz loc_1010B38  +
push [ebp+arg_8]  +
push 17Fh  +
call sub_1019FBD  +
push eax  +
push edi  +
call sub_1018C22  +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 124h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_114] eax +
mov eax [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_110] eax +
lea eax [ebp+var_100] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push 7Ch  +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov dword ptr [ebp+DateStr] ebx +
call memset  +
fldz   +
xor eax eax +
fstp  [ebp+var_10C] +
mov [ebp+Time.wYear] ax +
lea edi [ebp+Time.wMonth] +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
cmp esi ebx +
jnz loc_1010BC8  +
xor eax eax +
inc eax  +
jmp loc_1010CBC  +
mov eax [ebp+arg_C] +
sub eax ebx +
jz loc_1010BD5  +
dec eax  +
jz loc_1010C03  +
dec eax  +
jnz loc_1010BC0  +
mov eax [esi] +
lea ecx [ebp+var_10C] +
push ecx  +
push esi  +
call dword ptr [eax+48h]  +
cmp eax ebx +
jl loc_1010CBC  +
fldz   +
fcomp  [ebp+var_10C] +
fnstsw  ax +
test ah 44h +
jp loc_1010C12  +
mov eax 800700E8h +
jmp loc_1010CBC  +
mov eax [esi] +
lea ecx [ebp+var_10C] +
push ecx  +
push esi  +
call dword ptr [eax+3Ch]  +
jmp loc_1010BE2  +
fld  [ebp+var_10C] +
lea eax [ebp+Time] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+144h+var_144] +
call ds:VariantTimeToSystemTime  +
push 40h  +
pop edi  +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
test eax eax +
jz loc_1010BC0  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
push esi  +
call ds:GetTimeFormatW  +
test eax eax +
jz loc_1010BC0  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
test eax eax +
jz loc_1010C96  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_114]  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
call sub_10182B0  +
test eax eax +
jz loc_1010CBA  +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push [ebp+var_110]  +
call sub_1018BDF  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
xor edi edi +
push eax  +
push [ebp+arg_0]  +
mov dword ptr [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_10] edi +
mov dword ptr [ebp+var_4] edi +
call sub_101079C  +
mov ebx eax +
cmp ebx edi +
jz loc_1010DA4  +
push esi  +
mov esi offset aD +
cmp [ebp+arg_4] edi +
jz loc_1010D33  +
cmp [ebp+arg_8] edi +
jz loc_1010D33  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1003F97  +
mov ecx [ebp+var_C] +
add esp 10h +
jmp loc_1010D3E  +
mov eax dword ptr [ebp+var_8] +
mov ecx [ebp+var_C] +
imul eax eax +
add ecx eax +
cmp [ebp+arg_C] edi +
jz loc_1010D5D  +
cmp [ebp+arg_10] edi +
jz loc_1010D5D  +
push ecx  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_1003F97  +
mov eax [ebp+var_10] +
add esp 10h +
jmp loc_1010D65  +
mov eax [ebp+var_10] +
imul ecx ecx +
add eax ecx +
cmp [ebp+arg_14] edi +
jz loc_1010D81  +
cmp [ebp+arg_18] edi +
jz loc_1010D81  +
push eax  +
push esi  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
call sub_1003F97  +
add esp 10h +
jmp loc_1010D87  +
imul eax eax +
add dword ptr [ebp+var_4] eax +
cmp [ebp+arg_1C] edi +
jz loc_1010DA3  +
cmp [ebp+arg_20] edi +
jz loc_1010DA3  +
push dword ptr [ebp+var_4]  +
push esi  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
call sub_1003F97  +
add esp 10h +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 24h  +
***
call __EH_prolog3  +
and dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_1010DF1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100637A  +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
and dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jge loc_1010E1B  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
jmp loc_1010DDB  +
push dword ptr [ebp-14h]  +
call ds:SysStringLen  +
test eax eax +
jnz loc_1010E30  +
mov ecx [ebp+0Ch] +
mov [ecx] ax +
jmp loc_1010E3E  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+0Ch]  +
call sub_1018BDF  +
xor esi esi +
jmp loc_1010E0C  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov ebx [ebp+0Ch] +
xor edi edi +
push 1F8h  +
lea eax [ebp-208h] +
push edi  +
push eax  +
mov [ebp-20Ch] edi +
call memset  +
add esp 0Ch +
mov [ebp-214h] edi +
mov dword ptr [ebp-4] 1 +
mov [ebp-210h] edi +
mov byte ptr [ebp-4] 2 +
mov eax [esi] +
lea ecx [ebp-214h] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_1010ECC  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-210h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-214h] +
call sub_100637A  +
mov eax esi +
call sub_10177AC  +
retn 0Ch  +
mov eax [ebp-214h] +
mov ecx [eax] +
lea edx [ebp-210h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax edi +
jge loc_1010F08  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-210h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-214h] +
call sub_100637A  +
mov eax edi +
jmp loc_1010EC4  +
push 0FEh  +
push dword ptr [ebp-210h]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1010F35  +
mov [ebx] ax +
jmp loc_1010EE5  +
push dword ptr [ebp+10h]  +
lea eax [ebp-20Ch] +
push eax  +
push ebx  +
call sub_1018BDF  +
jmp loc_1010EE5  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov ebx [ebp+0Ch] +
xor edi edi +
push 1F8h  +
lea eax [ebp-208h] +
push edi  +
push eax  +
mov [ebp-20Ch] edi +
call memset  +
add esp 0Ch +
mov [ebp-210h] edi +
mov dword ptr [ebp-4] 1 +
mov eax [esi] +
lea ecx [ebp-210h] +
push ecx  +
push esi  +
call dword ptr [eax+3Ch]  +
mov esi eax +
cmp esi edi +
jge loc_1010FB7  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-210h] +
call sub_100637A  +
mov eax esi +
call sub_10177AC  +
retn 0Ch  +
mov eax [ebp-210h] +
mov ecx [eax] +
lea edx [ebp-218h] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
cmp esi edi +
jl loc_1010F9E  +
mov [ebp-214h] edi +
mov byte ptr [ebp-4] 2 +
cmp dword ptr [ebp-218h] 4 +
mov eax [ebp-210h] +
mov ecx [eax] +
lea edx [ebp-214h] +
push edx  +
push eax  +
jnz loc_101100E  +
call dword ptr [ecx+3Ch]  +
mov esi eax +
cmp esi edi +
jge loc_101103D  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-214h]  +
call ds:SysFreeString  +
jmp loc_1010F9E  +
call dword ptr [ecx+2Ch]  +
cmp eax edi +
jge loc_101103D  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-214h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-210h] +
call sub_100637A  +
mov eax edi +
jmp loc_1010FAF  +
push 0FEh  +
push dword ptr [ebp-214h]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
call sub_10182B0  +
push dword ptr [ebp+10h]  +
test eax eax +
jnz loc_101106F  +
push offset dword_1001BE4  +
jmp loc_1011076  +
lea eax [ebp-20Ch] +
push eax  +
push ebx  +
call sub_1018BDF  +
jmp loc_1011017  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov [ebp-134h] eax +
mov eax [ebp+10h] +
xor esi esi +
push 7Ch  +
mov [ebp-138h] eax +
lea eax [ebp-10Ch] +
push esi  +
push eax  +
mov [ebp-110h] esi +
call memset  +
push 7Ch  +
lea eax [ebp-8Ch] +
push esi  +
push eax  +
mov [ebp-90h] esi +
call memset  +
xor eax eax +
mov [ebp-130h] ax +
lea edi [ebp-12Eh] +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
mov [ebp-120h] esi +
xor edi edi +
inc edi  +
mov [ebp-4] edi +
mov [ebp-11Ch] esi +
mov byte ptr [ebp-4] 3 +
mov [ebp-118h] esi +
mov byte ptr [ebp-4] 5 +
mov [ebp-114h] esi +
mov byte ptr [ebp-4] 6 +
cmp ebx esi +
jnz loc_1011161  +
mov esi edi +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-114h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-118h] +
call sub_100637A  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-11Ch] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-120h] +
call sub_100637A  +
mov eax esi +
call sub_10177AC  +
retn 14h  +
mov eax [ebx] +
lea ecx [ebp-120h] +
push ecx  +
push ebx  +
call dword ptr [eax+4Ch]  +
cmp eax esi +
jge loc_1011176  +
mov esi eax +
jmp loc_101111A  +
mov eax [ebp-120h] +
mov ecx [eax] +
lea edx [ebp-11Ch] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax esi +
jl loc_1011172  +
mov eax [ebp-11Ch] +
mov ecx [eax] +
lea edx [ebp-118h] +
push edx  +
movzx edx word ptr [ebp+18h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax esi +
jl loc_1011172  +
mov eax [ebp+14h] +
dec eax  +
jz loc_10111CB  +
dec eax  +
jnz loc_1011118  +
mov eax [ebp-118h] +
mov ecx [eax] +
lea edx [ebp-114h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
jmp loc_10111DE  +
mov eax [ebp-118h] +
mov ecx [eax] +
lea edx [ebp-114h] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
cmp eax esi +
jl loc_1011172  +
lea eax [ebp-124h] +
push eax  +
lea eax [ebp-126h] +
push eax  +
lea eax [ebp-128h] +
push eax  +
lea eax [ebp-12Ah] +
push eax  +
lea eax [ebp-12Eh] +
push eax  +
lea eax [ebp-130h] +
push eax  +
push dword ptr [ebp-114h]  +
call sub_10133FF  +
cmp eax esi +
jl loc_1011172  +
push 40h  +
pop edi  +
push edi  +
lea eax [ebp-90h] +
push eax  +
push esi  +
lea eax [ebp-130h] +
push eax  +
push esi  +
mov ebx 400h +
push ebx  +
call ds:GetDateFormatW  +
cmp eax esi +
jnz loc_101124B  +
xor esi esi +
inc esi  +
jmp loc_101111A  +
push edi  +
lea eax [ebp-110h] +
push eax  +
push esi  +
lea eax [ebp-130h] +
push eax  +
push esi  +
push ebx  +
call ds:GetTimeFormatW  +
cmp eax esi +
jz loc_1011243  +
push esi  +
lea eax [ebp-110h] +
push eax  +
call sub_10182B0  +
test eax eax +
jz loc_101128B  +
push edi  +
lea eax [ebp-110h] +
push eax  +
push dword ptr [ebp-134h]  +
call sub_1018BDF  +
push esi  +
lea eax [ebp-90h] +
push eax  +
call sub_10182B0  +
test eax eax +
jz loc_101111A  +
push edi  +
lea eax [ebp-90h] +
push eax  +
push dword ptr [ebp-138h]  +
call sub_1018BDF  +
jmp loc_101111A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
cmp word ptr [ebp+arg_0] 7Fh +
mov [ebp+var_4] ebx +
jnz loc_10112EB  +
push 1F7h  +
call sub_1019FBD  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_1003FF6  +
push 7  +
pop eax  +
jmp loc_1011389  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
inc edi  +
mov eax edi +
and eax [ebp+arg_0] +
test ax ax +
jz loc_1011377  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnb loc_1011317  +
push 1F8h  +
call sub_1019FBD  +
push eax  +
mov ecx esi +
call sub_100F006  +
movzx eax di +
dec eax  +
jz loc_1011362  +
dec eax  +
jz loc_101135B  +
dec eax  +
dec eax  +
jz loc_1011354  +
sub eax 4 +
jz loc_101134D  +
sub eax 8 +
jz loc_1011346  +
sub eax 10h +
jz loc_101133F  +
sub eax 20h +
jnz loc_101138E  +
push 1F1h  +
jmp loc_1011367  +
push 1F0h  +
jmp loc_1011367  +
push 1EFh  +
jmp loc_1011367  +
push 1EEh  +
jmp loc_1011367  +
push 1EDh  +
jmp loc_1011367  +
push 1ECh  +
jmp loc_1011367  +
push 1EBh  +
call sub_1019FBD  +
push eax  +
mov ecx esi +
call sub_100F006  +
inc [ebp+var_4]  +
add edi edi +
inc ebx  +
cmp ebx 7 +
jl loc_10112F3  +
mov ax word ptr [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_1011387  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov eax 0FFFh +
mov [ebp+var_4] ebx +
cmp word ptr [ebp+arg_0] ax +
jnz loc_10113C9  +
push 212h  +
call sub_1019FBD  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_1003FF6  +
push 0Ch  +
pop eax  +
jmp loc_10114B7  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
inc edi  +
mov eax edi +
and eax [ebp+arg_0] +
test ax ax +
jz loc_10114A5  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnb loc_10113F9  +
push 1F8h  +
call sub_1019FBD  +
push eax  +
mov ecx esi +
call sub_100F006  +
movzx eax di +
cmp eax 40h +
jg loc_1011451  +
jz loc_101144A  +
dec eax  +
jz loc_1011443  +
dec eax  +
jz loc_101143C  +
dec eax  +
dec eax  +
jz loc_1011435  +
sub eax 4 +
jz loc_101142E  +
sub eax 8 +
jz loc_1011427  +
sub eax 10h +
jnz loc_10114BC  +
push 1E4h  +
jmp loc_1011495  +
push 1E3h  +
jmp loc_1011495  +
push 1E2h  +
jmp loc_1011495  +
push 1E1h  +
jmp loc_1011495  +
push 1E0h  +
jmp loc_1011495  +
push 1DFh  +
jmp loc_1011495  +
push 1E5h  +
jmp loc_1011495  +
cmp eax 80h +
jz loc_1011490  +
cmp eax 100h +
jz loc_1011489  +
cmp eax 200h +
jz loc_1011482  +
cmp eax 400h +
jz loc_101147B  +
cmp eax 800h +
jnz loc_10114BC  +
push 1EAh  +
jmp loc_1011495  +
push 1E9h  +
jmp loc_1011495  +
push 1E8h  +
jmp loc_1011495  +
push 1E7h  +
jmp loc_1011495  +
push 1E6h  +
call sub_1019FBD  +
push eax  +
mov ecx esi +
call sub_100F006  +
inc [ebp+var_4]  +
add edi edi +
inc ebx  +
cmp ebx 0Ch +
jl loc_10113D1  +
mov ax word ptr [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_10114B5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
cmp word ptr [ebp+arg_0] 1Fh +
mov [ebp+var_4] ebx +
jnz loc_10114F3  +
push 211h  +
call sub_1019FBD  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_1003FF6  +
push 5  +
pop eax  +
jmp loc_1011575  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
inc esi  +
mov eax esi +
and eax [ebp+arg_0] +
test ax ax +
jz loc_1011567  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnb loc_101151F  +
push 1F8h  +
call sub_1019FBD  +
push eax  +
mov ecx edi +
call sub_100F006  +
movzx eax si +
dec eax  +
jz loc_1011552  +
dec eax  +
jz loc_101154B  +
dec eax  +
dec eax  +
jz loc_1011544  +
sub eax 4 +
jz loc_101153D  +
sub eax 8 +
jnz loc_101157A  +
push 1DBh  +
jmp loc_1011557  +
push 1DAh  +
jmp loc_1011557  +
push 1D9h  +
jmp loc_1011557  +
push 1D8h  +
jmp loc_1011557  +
push 1D7h  +
call sub_1019FBD  +
push eax  +
mov ecx edi +
call sub_100F006  +
inc [ebp+var_4]  +
add esi esi +
inc ebx  +
cmp ebx 5 +
jl loc_10114FB  +
mov ax word ptr [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_1011573  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_10] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
cmp [ebp+arg_0] 7FFFFFFFh +
push edi  +
lea edi [ebp-0Ah] +
mov [ebp+String] ax +
stos   +
jnz loc_10115C8  +
push 210h  +
call sub_1019FBD  +
push eax  +
mov ecx ebx +
call sub_1003FF6  +
push 1Fh  +
pop eax  +
jmp loc_1011627  +
push esi  +
xor esi esi +
inc esi  +
mov edi esi +
mov [ebp+var_14] 20h +
mov eax [ebp+arg_0] +
test edi eax +
jz loc_101161A  +
xor eax eax +
cmp ax word ptr [ebp+var_10] +
jnb loc_10115F6  +
push 1F8h  +
call sub_1019FBD  +
push eax  +
mov ecx ebx +
call sub_100F006  +
push 0Ah  +
mov eax esi +
cdq   +
pop ecx  +
idiv  ecx +
mov ecx ebx +
add eax 30h +
mov [ebp+String] ax +
lea eax [ebp+String] +
add edx 30h +
push eax  +
mov [ebp-0Ah] dx +
call sub_100F006  +
inc [ebp+var_10]  +
add edi edi +
inc esi  +
dec [ebp+var_14]  +
jnz loc_10115D5  +
mov ax word ptr [ebp+var_10] +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov esi 1F8h +
xor ebx ebx +
push esi  +
mov [ebp-820h] eax +
lea eax [ebp-814h] +
push ebx  +
push eax  +
mov [ebp-818h] ebx +
call memset  +
push esi  +
lea eax [ebp-618h] +
push ebx  +
push eax  +
mov [ebp-61Ch] ebx +
call memset  +
push esi  +
lea eax [ebp-41Ch] +
push ebx  +
push eax  +
mov [ebp-420h] ebx +
call memset  +
push esi  +
lea eax [ebp-220h] +
push ebx  +
push eax  +
mov [ebp-224h] ebx +
call memset  +
add esp 30h +
mov esi 0FEh +
push esi  +
push 194h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-818h] +
push eax  +
call sub_1018BDF  +
push esi  +
push 194h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-61Ch] +
push eax  +
call sub_1018BDF  +
mov [ebp-81Ch] ebx +
mov dword ptr [ebp-4] 1 +
mov eax [edi] +
lea ecx [ebp-830h] +
push ecx  +
push edi  +
mov [ebp-830h] ebx +
call dword ptr [eax+0A4h]  +
test eax eax +
jge loc_101173D  +
push esi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-818h] +
push eax  +
call sub_1018BDF  +
push esi  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-61Ch] +
push eax  +
call sub_1018BDF  +
mov eax [edi] +
lea ecx [ebp-81Ch] +
push ecx  +
push edi  +
call dword ptr [eax+9Ch]  +
cmp eax ebx +
jge loc_101179C  +
push dword ptr [ebp+10h]  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-820h]  +
call sub_1018BDF  +
push dword ptr [ebp+10h]  +
push 194h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-820h]  +
call sub_1018BDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-81Ch] +
call sub_100637A  +
xor eax eax +
call sub_10177AC  +
retn 0Ch  +
cmp [ebp-830h] bx +
jz loc_101176A  +
mov [ebp-824h] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-828h] ebx +
mov byte ptr [ebp-4] 3 +
xor eax eax +
mov [ebp-28h] ax +
lea edi [ebp-26h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp-81Ch] +
mov ecx [eax] +
lea edx [ebp-824h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax ebx +
jl loc_10117F7  +
mov eax [ebp-81Ch] +
mov ecx [eax] +
lea edx [ebp-828h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
jge loc_1011815  +
push dword ptr [ebp+10h]  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-820h]  +
call sub_1018BDF  +
jmp loc_10118C1  +
push ebx  +
push ebx  +
push 0Ch  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-824h]  +
call sub_1010CD2  +
lea eax [ebp-28h] +
push eax  +
push 17Ch  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-420h] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp-420h] +
push eax  +
lea eax [ebp-224h] +
push eax  +
call sub_1018BDF  +
push esi  +
push 0C2h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-224h] +
push eax  +
call sub_1018C22  +
push ebx  +
push ebx  +
push 0Ch  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-828h]  +
call sub_1010CD2  +
lea eax [ebp-28h] +
push eax  +
push 17Dh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-420h] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp-420h] +
push eax  +
lea eax [ebp-224h] +
push eax  +
call sub_1018C22  +
mov eax [ebp-81Ch] +
mov ecx [eax] +
lea edx [ebp-82Ch] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
jge loc_10118F1  +
push dword ptr [ebp+10h]  +
push 1B8h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-820h]  +
call sub_1018BDF  +
cmp word ptr [ebp-82Ch] 0FFFFh +
jnz loc_1011925  +
push esi  +
push offset asc_10016CC  +
lea eax [ebp-224h] +
push eax  +
call sub_1018C22  +
push esi  +
push 17Eh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-224h] +
push eax  +
call sub_1018C22  +
push dword ptr [ebp+10h]  +
lea eax [ebp-224h] +
push eax  +
push dword ptr [ebp-820h]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 2 +
push dword ptr [ebp-828h]  +
mov esi ds:SysFreeString +
call esi  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-824h]  +
call esi  +
jmp loc_1011783  +
***
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
mov ecx [ebp+8] +
xor ebx ebx +
mov [ebp-60h] esi +
mov [ebp-5Ch] ebx +
mov [ebp-4] ebx +
xor eax eax +
mov [ebp-28h] ax +
lea edi [ebp-26h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp-58h] ax +
lea edi [ebp-56h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp-40h] ax +
lea edi [ebp-3Eh] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea edx [ebp-5Ch] +
push edx  +
stos   +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+6Ch]  +
cmp eax ebx +
jge loc_10119D6  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-5Ch]  +
call ds:SysFreeString  +
mov eax esi +
call sub_10177AC  +
retn 0Ch  +
push 0Ch  +
lea eax [ebp-40h] +
push eax  +
push 0Ch  +
lea eax [ebp-58h] +
push eax  +
push 0Ch  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push ebx  +
push dword ptr [ebp-5Ch]  +
call sub_1010CD2  +
cmp eax ebx +
jz loc_1011A67  +
push ebx  +
push dword ptr [ebp-5Ch]  +
call sub_10182B0  +
test eax eax +
jbe loc_1011A67  +
mov esi ds:_wtoi +
lea eax [ebp-28h] +
push eax  +
call esi  +
mov di ax +
lea eax [ebp-58h] +
push eax  +
call esi  +
mov bx ax +
lea eax [ebp-40h] +
push eax  +
call esi  +
add esp 0Ch +
test di di +
jnz loc_1011A46  +
test bx bx +
jnz loc_1011A46  +
test ax ax +
jnz loc_1011A46  +
push dword ptr [ebp+10h]  +
push 194h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-60h]  +
jmp loc_1011A76  +
movzx eax ax +
push eax  +
movzx eax bx +
push eax  +
movzx eax di +
push eax  +
push offset a02d02d02d  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-60h]  +
call sub_1003F97  +
add esp 18h +
jmp loc_1011A7B  +
push dword ptr [ebp+10h]  +
push 194h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_1018BDF  +
xor esi esi +
jmp loc_10119BF  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100683D  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
test eax eax +
jz loc_1011AB3  +
mov ecx [eax] +
push esi  +
push offset dword_1001C10  +
push eax  +
call dword ptr [ecx]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov esi 1F8h +
xor ebx ebx +
push esi  +
mov [ebp-420h] eax +
lea eax [ebp-208h] +
push ebx  +
push eax  +
mov [ebp-20Ch] ebx +
call memset  +
push esi  +
lea eax [ebp-404h] +
push ebx  +
push eax  +
mov [ebp-408h] ebx +
call memset  +
add esp 18h +
mov [ebp-418h] ebx +
xor esi esi +
inc esi  +
mov [ebp-4] esi +
mov eax [edi] +
lea ecx [ebp-418h] +
push ecx  +
push edi  +
call dword ptr [eax+44h]  +
mov edi eax +
cmp edi ebx +
jge loc_1011B4B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-418h] +
call sub_100637A  +
mov eax edi +
call sub_10177AC  +
retn 0Ch  +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax ebx +
jge loc_1011B77  +
mov ebx eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-418h] +
call sub_100637A  +
mov eax ebx +
jmp loc_1011B43  +
cmp [ebp-424h] ebx +
jz loc_1011B64  +
cmp [ebp-424h] esi +
jle loc_1011BA2  +
push dword ptr [ebp+10h]  +
push 9D5h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-420h]  +
call sub_1018BDF  +
jmp loc_1011B64  +
mov [ebp-40Ch] ebx +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-40Ch] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_1011BD9  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
mov ebx esi +
jmp loc_1011B64  +
mov eax [ebp-40Ch] +
mov ecx [eax] +
lea edx [ebp-428h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1011BC6  +
mov eax [ebp-428h] +
sub eax ebx +
jz loc_1011C30  +
sub eax 5 +
jz loc_1011C12  +
dec eax  +
jnz loc_1011D7D  +
push dword ptr [ebp+10h]  +
push 9D6h  +
jmp loc_1011C1A  +
push dword ptr [ebp+10h]  +
push 9D7h  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-420h]  +
call sub_1018BDF  +
jmp loc_1011D7D  +
push dword ptr [ebp-40Ch]  +
lea ecx [ebp-414h] +
call sub_1011A87  +
mov byte ptr [ebp-4] 4 +
mov [ebp-410h] ebx +
mov byte ptr [ebp-4] 5 +
mov [ebp-41Ch] ebx +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-414h] +
mov ecx [eax] +
lea edx [ebp-410h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
cmp edi ebx +
jge loc_1011CB5  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-41Ch]  +
mov esi ds:SysFreeString +
call esi  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-410h]  +
call esi  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-414h] +
call sub_1006A4C  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
mov ebx edi +
jmp loc_1011B64  +
mov esi 0FEh +
push esi  +
push dword ptr [ebp-410h]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
mov eax [ebp-414h] +
mov ecx [eax] +
lea edx [ebp-41Ch] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
cmp edi ebx +
jl loc_1011C72  +
push esi  +
push dword ptr [ebp-41Ch]  +
lea eax [ebp-408h] +
push eax  +
call sub_1018BDF  +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1011D15  +
mov ecx [ebp-420h] +
mov [ecx] ax +
jmp loc_1011D50  +
push esi  +
push offset asc_10016CC  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018C22  +
push esi  +
lea eax [ebp-408h] +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018C22  +
push dword ptr [ebp+10h]  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-420h]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-41Ch]  +
mov esi ds:SysFreeString +
call esi  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-410h]  +
call esi  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-414h] +
call sub_1006A4C  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40Ch] +
call sub_100637A  +
jmp loc_1011B64  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
xor edi edi +
push 1F8h  +
mov [ebp-224h] eax +
lea eax [ebp-208h] +
push edi  +
push eax  +
mov [ebp-20Ch] edi +
call memset  +
add esp 0Ch +
mov [ebp-214h] edi +
mov dword ptr [ebp-4] 1 +
mov eax [esi] +
lea ecx [ebp-214h] +
push ecx  +
push esi  +
call dword ptr [eax+44h]  +
mov esi eax +
cmp esi edi +
jge loc_1011E07  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-214h] +
call sub_100637A  +
mov eax esi +
call sub_10177AC  +
retn 0Ch  +
mov eax [ebp-214h] +
mov ecx [eax] +
lea edx [ebp-220h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax edi +
jge loc_1011E22  +
mov esi eax +
jmp loc_1011DEE  +
cmp [ebp-220h] edi +
jnz loc_1011E2E  +
xor esi esi +
jmp loc_1011DEE  +
cmp dword ptr [ebp-220h] 1 +
jg loc_1011E2A  +
mov [ebp-210h] edi +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-214h] +
mov ecx [eax] +
lea edx [ebp-210h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_1011E6D  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-210h] +
call sub_100637A  +
jmp loc_1011DEE  +
mov eax [ebp-210h] +
mov ecx [eax] +
lea edx [ebp-228h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jl loc_1011E5C  +
cmp [ebp-228h] edi +
jnz loc_1011F24  +
push dword ptr [ebp-210h]  +
lea ecx [ebp-21Ch] +
call sub_1011A87  +
mov byte ptr [ebp-4] 4 +
mov [ebp-218h] edi +
mov byte ptr [ebp-4] 5 +
mov eax [ebp-21Ch] +
mov ecx [eax] +
lea edx [ebp-218h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
cmp esi edi +
jge loc_1011EEE  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-218h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-21Ch] +
call sub_1006A4C  +
jmp loc_1011E5C  +
push 0FDh  +
push dword ptr [ebp-218h]  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp-218h]  +
call ds:SysFreeString  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-21Ch] +
call sub_1006A4C  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1011F40  +
mov ecx [ebp-224h] +
mov [ecx] ax +
jmp loc_1011F55  +
push dword ptr [ebp+10h]  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-224h]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-210h] +
call sub_100637A  +
jmp loc_1011E2A  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
mov ebx [ebp+10h] +
mov [ebp-460h] eax +
mov eax [ebp+18h] +
xor edi edi +
push 7Ch  +
mov [ebp-44Ch] eax +
lea eax [ebp-13Ch] +
push edi  +
push eax  +
mov [ebp-448h] esi +
mov [ebp-140h] edi +
call memset  +
push 7Ch  +
lea eax [ebp-0BCh] +
push edi  +
push eax  +
mov [ebp-0C0h] edi +
call memset  +
push 1F8h  +
lea eax [ebp-438h] +
push edi  +
push eax  +
mov [ebp-43Ch] edi +
call memset  +
add esp 24h +
mov [ebp-458h] edi +
mov [ebp-444h] edi +
mov [ebp-454h] edi +
mov [ebp-464h] edi +
cmp esi edi +
jnz loc_1012006  +
xor eax eax +
inc eax  +
jmp loc_10128F7  +
push edi  +
push dword ptr [ebp-44Ch]  +
call sub_10182B0  +
mov esi 0FEh +
test eax eax +
jz loc_101202E  +
push esi  +
push dword ptr [ebp-44Ch]  +
lea eax [ebp-43Ch] +
push eax  +
call sub_1018BDF  +
mov eax [ebp-460h] +
mov ecx [eax] +
lea edx [ebp-464h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax edi +
mov [ebp-440h] eax +
jl loc_10128D1  +
mov eax [ebp-464h] +
mov ecx [eax] +
lea edx [ebp-454h] +
push edx  +
movzx edx word ptr [ebp+14h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax edi +
mov [ebp-440h] eax +
jge loc_10120A1  +
xor eax eax +
inc eax  +
cmp ax [ebp+14h] +
jnz loc_10128D1  +
push esi  +
push 20Fh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
push ebx  +
call sub_10109CF  +
mov [ebp-440h] edi +
jmp loc_10128D1  +
push 40h  +
mov edi 194h +
push edi  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+8F0h] +
push eax  +
call sub_1018BDF  +
push esi  +
push edi  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+970h] +
push eax  +
call sub_1018BDF  +
push esi  +
push edi  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+0B6Ch] +
push eax  +
call sub_1018BDF  +
push esi  +
push edi  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+0D68h] +
push eax  +
call sub_1018BDF  +
push esi  +
lea eax [ebx+5F4h] +
add edi 24h +
push edi  +
mov [ebp-460h] eax +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-460h]  +
call sub_1018BDF  +
push esi  +
lea eax [ebx+3F8h] +
push edi  +
mov [ebp-45Ch] eax +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
push dword ptr [ebp+14h]  +
lea eax [ebp-0C0h] +
push 2  +
push eax  +
lea eax [ebp-140h] +
push eax  +
push dword ptr [ebp-448h]  +
call sub_1011083  +
push 40h  +
test eax eax +
jge loc_1012179  +
push edi  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+7F0h] +
push eax  +
call sub_1018BDF  +
push 40h  +
push edi  +
call sub_1019FBD  +
jmp loc_1012194  +
lea eax [ebp-140h] +
push eax  +
lea eax [ebx+7F0h] +
push eax  +
call sub_1018BDF  +
push 40h  +
lea eax [ebp-0C0h] +
push eax  +
lea eax [ebx+870h] +
push eax  +
call sub_1018BDF  +
push dword ptr [ebp+14h]  +
lea eax [ebp-0C0h] +
push 1  +
push eax  +
lea eax [ebp-140h] +
push eax  +
push dword ptr [ebp-448h]  +
call sub_1011083  +
push esi  +
test eax eax +
jge loc_10121CC  +
push edi  +
call sub_1019FBD  +
jmp loc_10121D2  +
lea eax [ebp-0C0h] +
push eax  +
lea eax [ebx+1FCh] +
push eax  +
call sub_1018BDF  +
mov eax [ebp-454h] +
mov ecx [eax] +
lea edx [ebp-468h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp-440h] eax +
test eax eax +
jl loc_10128CF  +
mov eax [ebp-468h] +
lea ecx [eax-1] +
cmp ecx 4 +
ja loc_10123A6  +
and dword ptr [ebp-448h] 0 +
mov dword ptr [ebp-4] 1 +
and dword ptr [ebp-450h] 0 +
mov byte ptr [ebp-4] 2 +
xor eax eax +
mov [ebp-40h] ax +
lea edi [ebp-3Eh] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp-28h] ax +
lea edi [ebp-26h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp-454h] +
mov ecx [eax] +
lea edx [ebp-448h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
xor edi edi +
cmp eax edi +
mov [ebp-440h] eax +
jge loc_101228E  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-450h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-448h] +
call sub_100637A  +
jmp loc_10128CF  +
mov eax [ebp-448h] +
mov ecx [eax] +
lea edx [ebp-450h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp [ebp-450h] edi +
jz loc_101231F  +
push edi  +
push edi  +
push 0Ch  +
lea eax [ebp-28h] +
push eax  +
push 0Ch  +
lea eax [ebp-40h] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp-450h]  +
call sub_1010CD2  +
cmp eax edi +
jz loc_1012307  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
push 1F5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+8F0h] +
push 40h  +
push eax  +
call sub_1003F97  +
add esp 14h +
push edi  +
lea eax [ebp-444h] +
push eax  +
lea eax [ebp-458h] +
push eax  +
push edi  +
push dword ptr [ebp-450h]  +
call sub_101079C  +
push esi  +
push 195h  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+970h] +
push eax  +
call sub_1018BDF  +
mov eax [ebp-448h] +
mov ecx [eax] +
lea edx [ebp-450h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp [ebp-450h] edi +
jz loc_101237C  +
push edi  +
push edi  +
push 0Ch  +
lea eax [ebp-28h] +
push eax  +
push 0Ch  +
lea eax [ebp-40h] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp-450h]  +
call sub_1010CD2  +
cmp eax edi +
jz loc_101237C  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
push 1F5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebx+0B6Ch] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 14h +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp-450h]  +
call ds:SysFreeString  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-448h] +
call sub_100637A  +
mov eax [ebp-468h] +
mov edi 1B8h +
cmp eax 0Bh +
ja loc_10128B0  +
jmp ds:off_1012902[eax*4]  +
push esi  +
push edi  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-460h]  +
call sub_1018BDF  +
push esi  +
push edi  +
call sub_1019FBD  +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
push esi  +
push 1B9h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
xor eax eax +
cmp [ebp-458h] eax +
jle loc_1012414  +
cmp [ebp-444h] eax +
jnz loc_101241A  +
push esi  +
push offset asc_1001C20  +
push ebx  +
call sub_1018C22  +
push esi  +
push 1BCh  +
jmp loc_1012432  +
cmp [ebp-444h] eax +
jle loc_10128C8  +
push esi  +
push offset asc_1001C20  +
push ebx  +
call sub_1018C22  +
push esi  +
push 1BDh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018C22  +
jmp loc_10128C8  +
push esi  +
push 1BBh  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
push dword ptr [ebp-454h]  +
and dword ptr [ebp-458h] 0 +
lea ecx [ebp-444h] +
call sub_1008079  +
mov dword ptr [ebp-4] 3 +
mov eax [ebp-444h] +
mov ecx [eax] +
lea edx [ebp-458h] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jl loc_10124C5  +
movsx eax word ptr [ebp-458h] +
push eax  +
push 214h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-240h] +
push 80h  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp-240h] +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-444h] +
call sub_1006A4C  +
jmp loc_10128C8  +
push esi  +
push 1C0h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
and dword ptr [ebp-440h] 0 +
mov dword ptr [ebp-4] 4 +
push dword ptr [ebp-454h]  +
and dword ptr [ebp-444h] 0 +
lea ecx [ebp-44Ch] +
call sub_10080B8  +
mov byte ptr [ebp-4] 5 +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jl loc_1012550  +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_10112BD  +
push esi  +
push dword ptr [ebp-440h]  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
test eax eax +
jl loc_10125A1  +
movsx eax word ptr [ebp-444h] +
push eax  +
push 213h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-240h] +
push 80h  +
push eax  +
call sub_1003F97  +
add esp 10h +
push esi  +
lea eax [ebp-240h] +
push eax  +
push dword ptr [ebp-460h]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-44Ch] +
call sub_1006A4C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-440h]  +
call ds:SysFreeString  +
jmp loc_10128C8  +
push esi  +
push 1C1h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
xor ebx ebx +
mov [ebp-440h] ebx +
mov dword ptr [ebp-4] 6 +
mov [ebp-448h] ebx +
mov byte ptr [ebp-4] 7 +
push dword ptr [ebp-454h]  +
lea ecx [ebp-44Ch] +
mov [ebp-458h] ebx +
mov [ebp-444h] ebx +
call sub_1008136  +
mov byte ptr [ebp-4] 8 +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-458h] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
test eax eax +
jl loc_101264C  +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-458h]  +
call sub_1011397  +
push esi  +
push dword ptr [ebp-440h]  +
push dword ptr [ebp-460h]  +
call sub_1018BDF  +
push dword ptr [ebp-440h]  +
mov edi ds:SysFreeString +
call edi  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
push eax  +
mov [ebp-440h] ebx +
call dword ptr [ecx+50h]  +
cmp eax ebx +
jl loc_10126C7  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-450h] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
cmp eax ebx +
jl loc_10126C7  +
xor eax eax +
cmp ax [ebp-450h] +
jz loc_10126A3  +
or dword ptr [ebp-444h] 80000000h +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_1011583  +
push esi  +
push dword ptr [ebp-440h]  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-44Ch] +
call sub_1006A4C  +
mov byte ptr [ebp-4] 6 +
push ebx  +
call edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-440h]  +
call edi  +
jmp loc_10128C8  +
push esi  +
push 1C1h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
xor edi edi +
mov [ebp-440h] edi +
mov dword ptr [ebp-4] 9 +
mov [ebp-444h] edi +
mov byte ptr [ebp-4] 0Ah +
push dword ptr [ebp-454h]  +
lea ecx [ebp-44Ch] +
mov [ebp-448h] edi +
call sub_10080F7  +
mov byte ptr [ebp-4] 0Bh +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-448h] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
test eax eax +
jl loc_101276F  +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-448h]  +
call sub_1011397  +
push esi  +
push dword ptr [ebp-440h]  +
push dword ptr [ebp-460h]  +
call sub_1018BDF  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-448h] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
cmp eax edi +
jl loc_1012849  +
push dword ptr [ebp-440h]  +
call ds:SysFreeString  +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-448h]  +
mov [ebp-440h] edi +
call sub_10112BD  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-448h] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
cmp eax edi +
jl loc_1012849  +
mov eax [ebp-44Ch] +
mov ecx [eax] +
lea edx [ebp-450h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
cmp eax edi +
jl loc_1012849  +
xor eax eax +
cmp ax [ebp-450h] +
jz loc_10127F2  +
or dword ptr [ebp-448h] 10h +
lea eax [ebp-444h] +
push eax  +
push dword ptr [ebp-448h]  +
call sub_10114C5  +
movzx eax ax +
cmp ax di +
jz loc_1012837  +
push offset asc_10016CC  +
lea ecx [ebp-444h] +
call sub_100F006  +
lea eax [ebp-440h] +
push eax  +
lea ecx [ebp-444h] +
call sub_100E550  +
push esi  +
push dword ptr [ebp-444h]  +
jmp loc_101283E  +
push esi  +
push dword ptr [ebp-440h]  +
push dword ptr [ebp-45Ch]  +
call sub_1018BDF  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-44Ch] +
call sub_1006A4C  +
mov byte ptr [ebp-4] 9 +
push dword ptr [ebp-444h]  +
mov esi ds:SysFreeString +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-440h]  +
call esi  +
jmp loc_10128C8  +
push ebx  +
call sub_10109CF  +
push esi  +
push 1A2h  +
jmp loc_10128BC  +
push ebx  +
call sub_10109CF  +
push esi  +
push 1A3h  +
jmp loc_10128BC  +
push ebx  +
call sub_10109CF  +
push esi  +
push 1A4h  +
jmp loc_10128BC  +
push ebx  +
call sub_10109CF  +
push esi  +
push 1ACh  +
jmp loc_10128BC  +
push ebx  +
call sub_10109CF  +
push esi  +
push 1C3h  +
call sub_1019FBD  +
push eax  +
push ebx  +
call sub_1018BDF  +
and dword ptr [ebp-440h] 0 +
xor edi edi +
mov eax [ebp-454h] +
cmp eax edi +
jz loc_10128E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-464h] +
cmp eax edi +
jz loc_10128F1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-440h] +
call sub_10177AC  +
retn 14h  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
jz loc_1012994  +
push esi  +
lea esi [edi+0Ch] +
mov eax [esi] +
test eax eax +
jz loc_1012978  +
cmp word ptr [eax] 0 +
jz loc_1012978  +
push eax  +
call sub_10187DE  +
mov ecx [esi] +
test eax eax +
jz loc_1012978  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1012971  +
lea eax [edi+4] +
push eax  +
call sub_1018819  +
lea eax [edi+8] +
push eax  +
call sub_1018819  +
push esi  +
call sub_1018819  +
and dword ptr [edi] 0 +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
xor ebx ebx +
push 3F4h  +
mov [ebp-420h] eax +
lea eax [ebp-404h] +
push ebx  +
push eax  +
mov [ebp-408h] ebx +
call memset  +
add esp 0Ch +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push dword ptr [edi+4]  +
call sub_1013E7D  +
push eax  +
lea ecx [ebp-40Ch] +
call sub_100C662  +
mov [ebp-4] ebx +
cmp [ebp-40Ch] ebx +
jz loc_1012A89  +
mov [ebp-414h] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-410h] ebx +
mov byte ptr [ebp-4] 4 +
mov [ebp-418h] ebx +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-40Ch] +
mov [ebp-41Ch] ebx +
mov byte ptr [ebp-4] 7 +
mov ecx [eax] +
lea edx [ebp-414h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov byte ptr [ebp-4] 6 +
cmp eax ebx +
jge loc_1012AA3  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-418h] +
call sub_100637A  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-410h] +
call sub_100637A  +
mov [ebp-4] bl +
lea ecx [ebp-414h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-40Ch] +
call sub_100637A  +
xor eax eax +
inc eax  +
call sub_10177AC  +
retn 8  +
push dword ptr [ebp-420h]  +
mov esi [ebp-414h] +
lea ecx [ebp-41Ch] +
call loc_10069B4  +
mov byte ptr [ebp-4] 8 +
mov eax [eax] +
mov ecx [esi] +
lea edx [ebp-410h] +
push edx  +
push eax  +
push esi  +
call dword ptr [ecx+34h]  +
mov esi eax +
mov byte ptr [ebp-4] 6 +
push dword ptr [ebp-41Ch]  +
call ds:SysFreeString  +
cmp esi ebx +
jge loc_1012AEA  +
push esi  +
jmp loc_1012A44  +
mov eax [ebp-410h] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
jl loc_1012B9B  +
cmp eax 80004001h +
jz loc_1012B9B  +
cmp dword ptr [ebp-424h] 1 +
jnz loc_1012B58  +
push dword ptr [ebp-420h]  +
push 9C5h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1012A5D  +
cmp dword ptr [ebp-424h] 4 +
jnz loc_1012B9B  +
push dword ptr [ebp-420h]  +
push 0C9h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov [ebp-41Ch] ebx +
cmp [edi+10h] ebx +
jz loc_1012BB0  +
mov dword ptr [ebp-41Ch] 2 +
lea eax [ebp-438h] +
push eax  +
call ds:VariantInit  +
mov byte ptr [ebp-4] 9 +
mov eax [ebp-410h] +
lea esi [ebp-438h] +
lea edi [ebp-448h] +
movs   +
movs   +
movs   +
movs   +
mov [ebp-428h] ebx +
mov byte ptr [ebp-4] 0Ah +
mov ecx [eax] +
lea edx [ebp-418h] +
push edx  +
push ebx  +
push ebx  +
push dword ptr [ebp-41Ch]  +
lea esi [ebp-448h] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
mov esi eax +
mov byte ptr [ebp-4] 6 +
lea eax [ebp-438h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1003B38  +
cmp esi ebx +
jl loc_1012AE4  +
push dword ptr [ebp-420h]  +
push 130h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp-408h] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp-408h] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-418h] +
call sub_100637A  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-410h] +
call sub_100637A  +
mov [ebp-4] bl +
lea ecx [ebp-414h] +
call sub_100637A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-40Ch] +
call sub_100637A  +
xor eax eax +
jmp loc_1012A9B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 460h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_44C] eax +
mov eax [ebp+arg_8] +
xor esi esi +
push 1D8h  +
mov [ebp+var_45C] eax +
xor ebx ebx +
lea eax [ebp+var_1EC] +
push esi  +
inc ebx  +
push eax  +
mov [ebp+var_458] esi +
mov [ebp+var_428] esi +
mov [ebp+var_42C] ebx +
mov dword ptr [ebp+String] esi +
call memset  +
mov eax ds:dword_1001C28 +
mov [ebp+var_424] esi +
mov esi offset aTn +
lea edi [ebp+var_14] +
movs   +
mov [ebp+var_C] eax +
mov eax ds:dword_1001C2C +
movs   +
push 230h  +
mov [ebp+var_8] eax +
xor esi esi +
lea eax [ebp+dwErrCode] +
push esi  +
push eax  +
mov [ebp+var_454] 3Fh +
mov [ebp+var_448] 73h +
mov [ebp+var_450] 75h +
mov [ebp+var_444] 70h +
mov [ebp+var_460] 69h +
call memset  +
xor eax eax +
lea edi [ebp+var_440] +
stos   +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_440] 14h +
call sub_1018B9C  +
lea eax [ebp+var_C] +
mov [ebp+var_400] eax +
lea eax [ebp+var_458] +
push 8  +
mov [ebp+var_3F4] eax +
push edi  +
lea eax [ebp+var_3D0] +
push eax  +
mov [ebp+var_418] 0Ah +
mov [ebp+var_408] ebx +
mov [ebp+var_410] esi +
mov [ebp+var_40C] esi +
call sub_1018B9C  +
lea eax [ebp+var_454] +
mov [ebp+var_3B0] eax +
lea eax [ebp+var_428] +
push 8  +
mov [ebp+var_3A4] eax +
push edi  +
lea eax [ebp+var_380] +
push eax  +
mov [ebp+var_3C8] 0Ah +
mov [ebp+var_3B8] ebx +
mov [ebp+var_3C0] 20000h +
mov [ebp+var_3BC] esi +
call sub_1018B9C  +
mov [ebp+var_378] ebx +
lea eax [ebp+var_448] +
push 8  +
mov [ebp+var_360] eax +
push edi  +
lea eax [ebp+var_330] +
push eax  +
mov [ebp+var_368] ebx +
mov [ebp+var_370] 100C0h +
mov [ebp+var_36C] esi +
call sub_1018B9C  +
lea eax [ebp+var_450] +
push 8  +
mov [ebp+var_310] eax +
push edi  +
lea eax [ebp+var_2E0] +
push eax  +
mov [ebp+var_328] ebx +
mov [ebp+var_318] ebx +
mov [ebp+var_320] 100C0h +
mov [ebp+var_31C] esi +
call sub_1018B9C  +
lea eax [ebp+var_444] +
push 8  +
mov [ebp+var_2C0] eax +
push edi  +
lea eax [ebp+var_290] +
push eax  +
mov [ebp+var_2D8] ebx +
mov [ebp+var_2C8] ebx +
mov [ebp+var_2D0] 10010h +
mov [ebp+var_2CC] esi +
call sub_1018B9C  +
lea eax [ebp+var_460] +
mov [ebp+var_270] eax +
lea eax [ebp+var_430] +
push 8  +
mov [ebp+var_264] eax +
push edi  +
lea eax [ebp+var_240] +
push eax  +
mov [ebp+var_288] 0Ah +
mov [ebp+var_278] ebx +
mov [ebp+var_280] esi +
mov [ebp+var_27C] esi +
call sub_1018B9C  +
lea eax [ebp+var_14] +
mov [ebp+var_220] eax +
push esi  +
lea eax [ebp+String] +
mov [ebp+var_214] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 7  +
push esi  +
push [ebp+var_44C]  +
mov edi 0EEh +
push [ebp+arg_0]  +
mov [ebp+var_238] ebx +
mov [ebp+var_228] ebx +
mov [ebp+var_230] 80000h +
mov [ebp+var_22C] esi +
mov [ebp+var_210] edi +
call sub_101AF46  +
test eax eax +
jz loc_10130EF  +
cmp [ebp+arg_0] 3 +
mov eax [ebp+var_354] +
mov [ebp+var_43C] eax +
mov eax [ebp+var_304] +
mov [ebp+lpString] eax +
mov eax [ebp+var_2B4] +
mov [ebp+lpMem] eax +
jbe loc_1012F9D  +
cmp [ebp+var_428] esi +
jz loc_1012FB5  +
push 102h  +
jmp loc_1012FF9  +
cmp [ebp+var_428] esi +
jz loc_1012FB5  +
call sub_1012937  +
mov [ebp+var_42C] esi +
jmp loc_101311D  +
cmp [ebp+var_364] esi +
jnz loc_1012FCC  +
cmp [ebp+var_314] ebx +
jnz loc_1012FCC  +
push 81h  +
jmp loc_1012FF9  +
cmp [ebp+var_314] esi +
jnz loc_1012FE3  +
cmp [ebp+var_2C4] ebx +
jnz loc_1012FE3  +
push 204h  +
jmp loc_1012FF9  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
cmp eax edi +
jbe loc_1013012  +
push 8Eh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_101311D  +
cmp [ebp+var_43C] esi +
jz loc_1013096  +
mov edi 1FCh +
cmp [ebp+lpString] esi +
jnz loc_1013037  +
push edi  +
call sub_1018520  +
mov [ebp+lpString] eax +
cmp eax esi +
jz loc_1013089  +
mov eax [ebp+lpMem] +
cmp eax esi +
jnz loc_1013057  +
push edi  +
mov [ebp+var_424] ebx +
call sub_1018520  +
mov [ebp+lpMem] eax +
cmp eax esi +
jz loc_1013089  +
cmp [ebp+var_2C4] esi +
jz loc_1013090  +
cmp [ebp+var_2B4] esi +
jz loc_1013090  +
push esi  +
push ebx  +
push offset String2  +
push eax  +
call sub_1018387  +
test eax eax +
jnz loc_1013096  +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1018894  +
test eax eax +
jnz loc_1013090  +
call sub_1018081  +
jmp loc_10130EF  +
mov [ebp+var_424] ebx +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_1013104  +
cmp [ebp+var_424] esi +
jz loc_1013104  +
push [ebp+lpString]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push esi  +
add eax 20h +
push ebx  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1018ECA  +
test eax eax +
jnz loc_1013104  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_101311D  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_440] +
push eax  +
call sub_101299E  +
mov [ebp+var_42C] eax +
mov ecx [ebp+var_45C] +
pop edi  +
cmp ecx esi +
pop esi  +
pop ebx  +
jz loc_101313C  +
push [ebp+var_428]  +
lea eax [ebp+var_440] +
push eax  +
call sub_10170B0  +
lea eax [ebp+var_440] +
push eax  +
call sub_1012947  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_42C] +
xor ecx ebp +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] 8 +
call sub_101DAF0  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 2  +
xor esi esi +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jl loc_10131D1  +
push edi  +
push esi  +
push esi  +
push esi  +
push 3  +
push 1  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
mov edi eax +
cmp edi esi +
jl loc_10131C8  +
push [ebp+ppv]  +
push offset riid  +
push 17h  +
push esi  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jge loc_10131CE  +
call ds:CoUninitialize  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 2  +
xor esi esi +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jl loc_101322E  +
push edi  +
push esi  +
push esi  +
push esi  +
push 3  +
push 1  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
mov edi eax +
cmp edi esi +
jl loc_1013225  +
push [ebp+ppv]  +
push offset stru_10013F8  +
push 17h  +
push esi  +
push offset stru_1001418  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jge loc_101322B  +
call ds:CoUninitialize  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101324A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
test esi esi +
jnz loc_101326B  +
push 57h  +
pop eax  +
jmp loc_1013295  +
push edi  +
push 0  +
push esi  +
call sub_10182B0  +
lea edi [esi+eax*2-8] +
cmp edi esi +
jbe loc_1013292  +
push 4  +
push 1  +
push offset a_job  +
push edi  +
call sub_10182D1  +
test eax eax +
jnz loc_1013292  +
mov [edi] ax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_10132C7  +
push dword ptr [esi]  +
call sub_1019FBD  +
test eax eax +
jz loc_10132D3  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_10132AA  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
push 57h  +
pop eax  +
jmp loc_10132CE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ds:RegQueryValueExW +
push edi  +
xor edi edi +
lea eax [ebp+cbData] +
push eax  +
push edi  +
push edi  +
push edi  +
push [ebp+lpValueName]  +
mov [ebp+cbData] edi +
push [ebp+hKey]  +
mov [ebp+var_8] edi +
mov [ebp+Type] edi +
call esi  +
mov eax [ebp+cbData] +
add eax 0Ah +
push eax  +
call sub_1018520  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_1013326  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101334E  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call esi  +
mov eax [ebp+var_8] +
mov eax [eax] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
lea eax [ebp+var_8] +
push eax  +
call sub_1018819  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
xor ebx ebx +
push edi  +
mov [eax] ebx +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+var_4] ebx +
mov [eax] ebx +
call sub_10182B0  +
add eax 0FFFFFFFDh +
cmp eax 4 +
ja loc_10133EE  +
mov [ebp+lpString] ebx +
jmp loc_10133DE  +
xor edi edi +
jmp loc_1013395  +
imul edi edi +
inc esi  +
lea edi [edi+eax-30h] +
inc esi  +
movzx eax word ptr [esi] +
push eax  +
call ds:iswdigit  +
test eax eax +
movzx eax word ptr [esi] +
pop ecx  +
jnz loc_101338C  +
cmp ax bx +
jz loc_10133C2  +
push 3Ah  +
pop ecx  +
cmp cx ax +
jnz loc_10133E7  +
cmp [ebp+var_4] ebx +
jnz loc_10133E7  +
inc esi  +
mov [ebp+var_4] 1 +
inc esi  +
mov eax [ebp+lpString] +
sub eax ebx +
jz loc_10133D6  +
dec eax  +
jnz loc_10133E7  +
cmp edi 3Bh +
ja loc_10133E7  +
mov eax [ebp+arg_8] +
jmp loc_10133D9  +
mov eax [ebp+arg_4] +
inc [ebp+lpString]  +
mov [eax] edi +
cmp [esi] bx +
jnz loc_1013388  +
xor eax eax +
jmp loc_10133F3  +
mov eax 8007000Dh +
jmp loc_10133F3  +
mov eax 80070018h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ecx] ax +
mov ecx [ebp+arg_8] +
mov [ecx] ax +
mov ecx [ebp+arg_C] +
mov [ecx] ax +
mov ecx [ebp+arg_10] +
push esi  +
mov [ecx] ax +
mov ecx [ebp+arg_14] +
push edi  +
mov edi [ebp+lpString] +
mov [ecx] ax +
mov ecx [ebp+arg_18] +
xor esi esi +
push esi  +
push edi  +
mov [ecx] ax +
call sub_10182B0  +
cmp eax 0Dh +
jnb loc_1013447  +
mov eax 80070057h +
jmp loc_10134DB  +
push ebx  +
mov [ebp+lpString] esi +
cmp [edi] si +
jz loc_10134B7  +
mov ebx ds:iswdigit +
xor esi esi +
jmp loc_1013466  +
movzx eax word ptr [edi] +
imul esi esi +
inc edi  +
lea esi [esi+eax-30h] +
inc edi  +
movzx eax word ptr [edi] +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jnz loc_101345A  +
mov eax [ebp+lpString] +
xor ecx ecx +
sub eax ecx +
jz loc_10134A2  +
dec eax  +
jz loc_101349D  +
dec eax  +
jz loc_1013498  +
dec eax  +
jz loc_1013493  +
dec eax  +
jz loc_101348E  +
dec eax  +
jnz loc_10134D1  +
mov eax [ebp+arg_18] +
jmp loc_10134A5  +
mov eax [ebp+arg_14] +
jmp loc_10134A5  +
mov eax [ebp+arg_10] +
jmp loc_10134A5  +
mov eax [ebp+arg_C] +
jmp loc_10134A5  +
mov eax [ebp+arg_8] +
jmp loc_10134A5  +
mov eax [ebp+arg_4] +
mov [eax] si +
cmp [edi] cx +
jz loc_10134AF  +
inc edi  +
inc edi  +
inc [ebp+lpString]  +
cmp [edi] cx +
jnz loc_1013456  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp ax [ecx] +
jz loc_10134D1  +
mov ecx [ebp+arg_8] +
cmp ax [ecx] +
jz loc_10134D1  +
mov ecx [ebp+arg_C] +
cmp ax [ecx] +
jnz loc_10134D8  +
mov eax 80070057h +
jmp loc_10134DA  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_1013544  +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
cmp eax 4 +
jnb loc_1013512  +
mov eax 80070057h +
jmp loc_101354C  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push esi  +
push [ebp+lpString]  +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
call sub_101079C  +
test eax eax +
jz loc_1013544  +
cmp [ebp+var_8] 1Eh +
jl loc_1013537  +
inc [ebp+var_4]  +
movzx eax word ptr [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
jmp loc_101354C  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_1013563  +
inc esi  +
inc esi  +
push 5Ch  +
pop eax  +
cmp ax [esi] +
jz loc_1013561  +
push esi  +
call sub_101C4A4  +
test eax eax +
jnz loc_10135A3  +
push eax  +
push 1  +
push offset aLocalhost  +
push esi  +
call sub_10182D1  +
neg eax  +
sbb eax eax +
inc eax  +
jnz loc_10135A3  +
push eax  +
push 1  +
push 870h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_10182D1  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 360h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi offset aCreate +
lea edi [ebp+var_30] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+arg_4] +
mov esi offset aDelete +
lea edi [ebp+var_40] +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_34C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_344] eax +
mov eax [ebp+arg_C] +
mov esi offset aQuery_0 +
lea edi [ebp+var_20] +
movs   +
movs   +
movs   +
mov [ebp+var_338] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_340] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_354] eax +
mov eax [ebp+arg_18] +
mov esi offset aChange +
lea edi [ebp+var_50] +
movs   +
movs   +
mov [ebp+var_358] eax +
mov eax [ebp+arg_1C] +
and [ebp+var_334] 0 +
movs   +
mov [ebp+var_350] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_33C] eax +
mov eax [ebp+arg_24] +
movs   +
mov [ebp+var_348] eax +
mov eax [ebp+arg_28] +
mov esi offset aShowsid +
lea edi [ebp+var_60] +
movs   +
mov [ebp+var_35C] eax +
mov eax ds:dword_1001C28 +
mov [ebp+var_C] eax +
mov eax ds:dword_1001C2C +
movs   +
mov [ebp+var_8] eax +
mov eax ds:dword_1001AE4 +
movs   +
mov [ebp+var_14] eax +
mov eax ds:dword_1001AE8 +
mov [ebp+var_10] eax +
movs   +
mov [ebp+var_360] 3Fh +
call sub_101B2CE  +
mov [ebp+var_334] eax +
test eax eax +
jnz loc_10136E4  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
xor eax eax +
jmp loc_1013A86  +
mov ecx 2D0h +
lea eax [ebp+dwErrCode] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10136EF  +
push ebx  +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_1018B9C  +
and [ebp+var_31C] 0 +
push 0Ah  +
pop ebx  +
lea eax [ebp+var_360] +
mov [ebp+var_310] eax +
mov eax [ebp+var_344] +
push 8  +
mov [ebp+var_304] eax +
xor edi edi +
push esi  +
lea eax [ebp+var_2E0] +
inc edi  +
push eax  +
mov [ebp+var_328] ebx +
mov [ebp+var_318] edi +
mov [ebp+var_320] 20000h +
call sub_1018B9C  +
lea eax [ebp+var_30] +
mov [ebp+var_2C0] eax +
mov eax [ebp+var_338] +
push 8  +
mov [ebp+var_2B4] eax +
push esi  +
lea eax [ebp+var_290] +
push eax  +
mov [ebp+var_2D8] ebx +
mov [ebp+var_2C8] edi +
call sub_1018B9C  +
and [ebp+var_274] 0 +
lea eax [ebp+var_40] +
mov [ebp+var_270] eax +
mov eax [ebp+var_354] +
push 8  +
mov [ebp+var_264] eax +
push esi  +
lea eax [ebp+var_240] +
push eax  +
mov [ebp+var_288] ebx +
mov [ebp+var_278] edi +
call sub_1018B9C  +
lea eax [ebp+var_20] +
mov [ebp+var_220] eax +
mov eax [ebp+var_340] +
push 8  +
mov [ebp+var_214] eax +
push esi  +
lea eax [ebp+var_1F0] +
push eax  +
mov [ebp+var_238] ebx +
mov [ebp+var_228] edi +
call sub_1018B9C  +
lea eax [ebp+var_50] +
mov [ebp+var_1D0] eax +
mov eax [ebp+var_358] +
push 8  +
mov [ebp+var_1C4] eax +
push esi  +
lea eax [ebp+var_1A0] +
push eax  +
mov [ebp+var_1E8] ebx +
mov [ebp+var_1D8] edi +
call sub_1018B9C  +
lea eax [ebp+var_C] +
mov [ebp+var_180] eax +
mov eax [ebp+var_350] +
push 8  +
mov [ebp+var_174] eax +
push esi  +
lea eax [ebp+var_150] +
push eax  +
mov [ebp+var_198] ebx +
mov [ebp+var_188] edi +
call sub_1018B9C  +
mov [ebp+var_148] ebx +
lea eax [ebp+var_14] +
mov [ebp+var_130] eax +
mov eax [ebp+var_33C] +
push 8  +
mov [ebp+var_124] eax +
push esi  +
lea eax [ebp+var_100] +
push eax  +
mov [ebp+var_138] edi +
call sub_1018B9C  +
lea eax [ebp+var_60] +
push 8  +
mov [ebp+var_E0] eax +
mov [ebp+var_F8] ebx +
mov ebx [ebp+var_348] +
push esi  +
lea eax [ebp+var_B0] +
push eax  +
mov [ebp+var_E8] edi +
mov [ebp+var_D4] ebx +
call sub_1018B9C  +
lea eax [ebp+var_334] +
xor esi esi +
push esi  +
mov [ebp+var_84] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 9  +
push 0FFFFFFFFh  +
push [ebp+var_34C]  +
mov [ebp+var_A8] edi +
push [ebp+arg_0]  +
mov [ebp+var_A0] 40001h +
mov [ebp+var_9C] esi +
call sub_101AF46  +
test eax eax +
jnz loc_101391E  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
cmp [ebp+var_334] esi +
jz loc_1013A77  +
lea eax [ebp+var_334] +
push eax  +
call sub_101B343  +
jmp loc_1013A77  +
cmp [ebp+var_334] esi +
jz loc_1013938  +
lea eax [ebp+var_334] +
push eax  +
call sub_101B343  +
mov [ebp+var_334] esi +
mov eax [ebp+var_340] +
mov ecx [eax] +
mov eax [ebp+var_338] +
mov eax [eax] +
mov [ebp+var_348] ecx +
mov [ebp+var_34C] eax +
add eax ecx +
mov ecx [ebx] +
mov [ebp+var_338] ecx +
mov ecx [ebp+var_33C] +
mov ecx [ecx] +
mov [ebp+var_33C] ecx +
mov ecx [ebp+var_350] +
mov esi [ecx] +
mov ecx [ebp+var_358] +
mov edx [ecx] +
mov ecx [ebp+var_354] +
mov ecx [ecx] +
lea ebx [ecx+edx] +
add ebx esi +
add ebx [ebp+var_33C] +
mov [ebp+var_340] esi +
add ebx [ebp+var_338] +
lea esi [ebx+eax] +
test esi esi +
jnz loc_10139B6  +
mov ebx [ebp+var_344] +
cmp [ebx] esi +
jz loc_10139B6  +
cmp [ebp+arg_0] 2 +
ja loc_1013A5E  +
cmp esi edi +
jg loc_10139E0  +
mov esi [ebp+var_344] +
mov esi [esi] +
add esi ecx +
add esi edx +
add esi [ebp+var_340] +
add esi [ebp+var_33C] +
add esi [ebp+var_338] +
add esi eax +
jnz loc_1013A83  +
mov esi [ebp+var_344] +
mov esi [esi] +
add esi ecx +
add esi edx +
add esi [ebp+var_340] +
add esi [ebp+var_33C] +
add esi [ebp+var_338] +
add esi eax +
cmp esi edi +
jg loc_1013A5E  +
xor eax eax +
cmp [ebp+var_34C] eax +
jz loc_1013A12  +
push 7Fh  +
jmp loc_1013A63  +
cmp [ebp+var_348] eax +
jz loc_1013A21  +
push 9Ch  +
jmp loc_1013A63  +
cmp ecx eax +
jz loc_1013A29  +
push 7Bh  +
jmp loc_1013A63  +
cmp edx eax +
jz loc_1013A31  +
push 7Ch  +
jmp loc_1013A63  +
cmp [ebp+var_340] eax +
jz loc_1013A3D  +
push 7Dh  +
jmp loc_1013A63  +
cmp [ebp+var_33C] eax +
jz loc_1013A49  +
push 7Eh  +
jmp loc_1013A63  +
cmp [ebp+var_338] eax +
jz loc_1013A58  +
push 0D1h  +
jmp loc_1013A63  +
cmp [ebp+arg_0] 3 +
jbe loc_1013A7B  +
push 9Bh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
jmp loc_1013A85  +
mov eax [ebp+var_35C] +
mov [eax] edi +
mov eax edi +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 2Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 400h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+ppv] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi offset asc_1001B78 +
lea edi [ebp+var_3FC] +
movs   +
push 3F2h  +
lea eax [ebp+var_3F6] +
push 0  +
push eax  +
movs   +
call memset  +
add esp 0Ch +
lea eax [ebp+ppv] +
push eax  +
xor esi esi +
call sub_10131DB  +
test eax eax +
jge loc_1013B14  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
xor eax eax +
jmp loc_1013BB1  +
push ebx  +
call sub_101C4A4  +
test eax eax +
jnz loc_1013B95  +
test ebx ebx +
jz loc_1013B58  +
movzx eax word ptr [ebx] +
mov ecx ebx +
test ax ax +
jz loc_1013B66  +
movzx eax ax +
cmp ax 5Ch +
jnz loc_1013B40  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
inc esi  +
test ax ax +
jnz loc_1013B2F  +
cmp si 2 +
jnz loc_1013B61  +
push 1FCh  +
push ebx  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1018BDF  +
lea edx [ebp+var_3FC] +
push edx  +
jmp loc_1013B97  +
test si si +
jnz loc_1013B7A  +
push 1FCh  +
push ebx  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_1018C22  +
jmp loc_1013B58  +
push 74h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1013B0D  +
push 0  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1013AF3  +
mov eax [ebp+ppv] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
push esi  +
call ds:VariantClear  +
mov edi [ebp+arg_0] +
push 8  +
pop eax  +
mov ecx edi +
mov [esi] ax +
call sub_100EFE2  +
mov [esi+8] eax +
test eax eax +
jnz loc_1013C06  +
cmp [edi] eax +
jz loc_1013C06  +
push 0Ah  +
pop eax  +
mov [esi] ax +
mov eax 8007000Eh +
push eax  +
mov [esi+8] eax +
call loc_1003BC9  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push esi  +
call ds:VariantClear  +
push 8  +
pop eax  +
push [ebp+arg_0]  +
mov [esi] ax +
call ds:SysAllocString  +
mov [esi+8] eax +
test eax eax +
jnz loc_1013C51  +
cmp [ebp+arg_0] eax +
jz loc_1013C51  +
push 0Ah  +
pop eax  +
mov [esi] ax +
mov eax 8007000Eh +
push eax  +
mov [esi+8] eax +
call loc_1003BC9  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:HeapSetInformation  +
lea ecx [ebp+var_2C] +
xor edi edi +
mov [ebp+var_18] esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_10] esi +
mov [ebp+var_14] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_20] esi +
mov [ebp+var_24] esi +
call sub_1013161  +
xor ebx ebx +
call j_WinSqmIsOptedIn  +
test eax eax +
jz loc_1013CA8  +
lea ebx [ebp+var_2C] +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10135CB  +
test eax eax +
jnz loc_1013CE3  +
xor edi edi +
inc edi  +
jmp loc_1013D96  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_20] +
cmp [ebp+var_18] esi +
jz loc_1013D0E  +
lea edx [ecx+eax] +
add edx [ebp+var_14] +
add edx [ebp+var_10] +
add edx [ebp+var_C] +
add edx [ebp+var_8] +
add edx [ebp+var_4] +
jnz loc_1013D0E  +
call sub_10135AD  +
xor edi edi +
jmp loc_1013D96  +
cmp [ebp+var_4] esi +
jz loc_1013D21  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A138  +
jmp loc_1013D94  +
cmp [ebp+var_8] esi +
jnz loc_1013D88  +
cmp [ebp+var_C] esi +
jz loc_1013D39  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100D1F3  +
jmp loc_1013D94  +
cmp [ebp+var_10] esi +
jz loc_1013D4C  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100598A  +
jmp loc_1013D94  +
cmp [ebp+var_14] esi +
jz loc_1013D5F  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1012CAA  +
jmp loc_1013D94  +
cmp eax esi +
jz loc_1013D71  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100D894  +
jmp loc_1013D94  +
cmp ecx esi +
jz loc_1013D83  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100DF3A  +
jmp loc_1013D94  +
cmp [ebp+var_24] esi +
jz loc_1013D96  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10101A9  +
mov edi eax +
cmp ebx esi +
jz loc_1013DA2  +
push edi  +
mov ecx ebx +
call sub_1017142  +
call sub_1018A9F  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov eax [ebp+0Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1013DC5  +
sub eax edx +
sar eax 1 +
lea edi [eax+1] +
xor ecx ecx +
push 2  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_10172C7  +
mov esi eax +
pop ecx  +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jnz loc_1013E27  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1013E0C  +
push 8  +
call ds:SetLastError  +
call sub_1018081  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push 0  +
call sub_10172D7  +
pop ecx  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
push dword ptr [ebp+0Ch]  +
push edi  +
push esi  +
call sub_10064DE  +
test eax eax +
jge loc_1013E46  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax edi +
jmp loc_1013E1F  +
push 5Ch  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013E6A  +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+10h] +
inc eax  +
inc eax  +
push eax  +
call sub_1003FF6  +
mov ecx [ebp+14h] +
jmp loc_1013E6D  +
mov ecx [ebp+10h] +
push esi  +
call sub_1003FF6  +
xor edi edi +
inc edi  +
jmp loc_1013E37  +
***
call __EH_prolog3  +
lea eax [ebp-14h] +
xor ebx ebx +
push eax  +
mov [ebp-14h] ebx +
call sub_101317E  +
cmp eax ebx +
jge loc_1013EBF  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov edi [ebp+0Ch] +
cmp edi ebx +
jz loc_1013EF2  +
cmp [edi] bx +
jz loc_1013EF2  +
push dword ptr [ebp+8]  +
call sub_1013556  +
test eax eax +
jz loc_1013EF2  +
push 86Fh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1013EB5  +
mov esi ds:VariantInit +
lea eax [ebp-54h] +
push eax  +
call esi  +
mov [ebp-4] ebx +
lea eax [ebp-34h] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-44h] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 3 +
mov [ebp-10h] ebx +
mov byte ptr [ebp-4] 4 +
mov [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 5 +
mov eax [ebp+10h] +
cmp eax ebx +
jz loc_1013F42  +
cmp [eax] bx +
jz loc_1013F42  +
push eax  +
lea ecx [ebp-44h] +
call sub_1013C13  +
push dword ptr [ebp+8]  +
lea ecx [ebp-54h] +
call sub_1013C13  +
cmp edi ebx +
jz loc_1014018  +
cmp [edi] bx +
jz loc_1014018  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push dword ptr [ebp+8]  +
call sub_1013DB3  +
test eax eax +
jnz loc_1013FE6  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
push 75h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp+0Ch]  +
mov esi ds:SysFreeString +
call esi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-10h]  +
call esi  +
mov byte ptr [ebp-4] 2 +
mov esi ds:VariantClear +
lea eax [ebp-44h] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push eax  +
call esi  +
mov [ebp-4] bl +
lea eax [ebp-34h] +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-54h] +
push eax  +
call esi  +
jmp loc_1013EB5  +
mov esi ds:VariantChangeType +
push 8  +
push ebx  +
lea eax [ebp-34h] +
push eax  +
push eax  +
call esi  +
push 8  +
push ebx  +
lea eax [ebp-24h] +
push eax  +
push eax  +
call esi  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1013BC7  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-24h] +
call sub_1013BC7  +
sub esp 10h +
mov edi esp +
lea esi [ebp-44h] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp-24h] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
mov eax [ebp-14h] +
lea esi [ebp-34h] +
movs   +
movs   +
mov ecx [eax] +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp-54h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
mov esi ds:VariantClear +
mov edi eax +
lea eax [ebp-44h] +
push eax  +
call esi  +
cmp edi ebx +
jge loc_10140C7  +
push edi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov [ebp+8] ebx +
mov byte ptr [ebp-4] 4 +
push dword ptr [ebp+0Ch]  +
mov edi ds:SysFreeString +
call edi  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-10h]  +
call edi  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-44h] +
push eax  +
call esi  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push eax  +
call esi  +
mov [ebp-4] bl +
lea eax [ebp-34h] +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-54h] +
push eax  +
call esi  +
mov eax [ebp+8] +
jmp loc_1013EB7  +
mov eax [ebp-14h] +
mov [ebp+8] eax +
jmp loc_1014080  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 408h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi 0FEh +
mov [ebp+var_400] eax +
mov [ebp+pSid] ebx +
mov ecx esi +
lea eax [ebp+var_3FC] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_101410A  +
mov ecx esi +
lea eax [ebp+var_200] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1014119  +
push esi  +
push offset aS1  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018BDF  +
push ebx  +
call ds:GetSidIdentifierAuthority  +
test eax eax +
jnz loc_1014149  +
call sub_1018081  +
xor eax eax +
jmp loc_101426D  +
mov cl [eax] +
test cl cl +
jnz loc_101418B  +
cmp [eax+1] cl +
jnz loc_101418B  +
movzx ecx byte ptr [eax+2] +
movzx edx byte ptr [eax+3] +
shl ecx 8 +
add ecx edx +
movzx edx byte ptr [eax+4] +
movzx eax byte ptr [eax+5] +
shl ecx 8 +
add ecx edx +
shl ecx 8 +
add ecx eax +
push ecx  +
push offset aLu  +
lea eax [ebp+var_3FC] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 10h +
jmp loc_10141BD  +
movzx edx byte ptr [eax+5] +
push edx  +
movzx edx byte ptr [eax+4] +
push edx  +
movzx edx byte ptr [eax+3] +
push edx  +
movzx edx byte ptr [eax+2] +
movzx eax byte ptr [eax+1] +
push edx  +
push eax  +
movzx eax cl +
push eax  +
push offset a0x02hx02hx02hx  +
lea eax [ebp+var_3FC] +
push esi  +
push eax  +
call sub_1003F97  +
add esp 24h +
push edi  +
push esi  +
mov edi offset asc_1001C5C +
push edi  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
lea eax [ebp+var_3FC] +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push ebx  +
call ds:GetSidSubAuthorityCount  +
mov [ebp+var_404] eax +
test eax eax +
jz loc_101427D  +
xor bl bl +
cmp [eax] bl +
jbe loc_1014256  +
movzx eax bl +
push eax  +
push [ebp+pSid]  +
call ds:GetSidSubAuthority  +
test eax eax +
jz loc_101427D  +
push 0Ah  +
lea ecx [ebp+var_3FC] +
push ecx  +
push dword ptr [eax]  +
call ds:_ultow  +
add esp 0Ch +
push esi  +
push edi  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
push esi  +
lea eax [ebp+var_3FC] +
push eax  +
lea eax [ebp+var_200] +
push eax  +
call sub_1018C22  +
mov eax [ebp+var_404] +
inc bl  +
cmp bl [eax] +
jb loc_1014200  +
push esi  +
lea eax [ebp+var_200] +
push eax  +
push [ebp+var_400]  +
call sub_1018BDF  +
xor eax eax +
inc eax  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 8  +
call sub_1018081  +
xor eax eax +
jmp loc_101426C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_14] +
push dword ptr [esi]  +
call ds:SysFreeString  +
movzx eax [ebp+arg_10] +
push eax  +
movzx eax [ebp+arg_C] +
and dword ptr [esi] 0 +
push eax  +
movzx eax [ebp+arg_8] +
push eax  +
movzx eax [ebp+arg_4] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
push offset a04u02u02dt02u0  +
lea eax [ebp+var_44] +
push 20h  +
push eax  +
call sub_1003F97  +
add esp 20h +
test eax eax +
jl loc_10142E9  +
lea eax [ebp+var_44] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and dword ptr [ebp+var_28] 0 +
and [ebp+var_2C] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi]  +
mov edi [ebp+arg_0] +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push edi  +
call sub_1013359  +
test eax eax +
jl loc_1014366  +
push [ebp+var_2C]  +
lea eax [ebp+var_24] +
push dword ptr [ebp+var_28]  +
push offset aPtLuhLum  +
push 10h  +
push eax  +
call sub_1003F97  +
add esp 14h +
test eax eax +
jl loc_1014366  +
lea eax [ebp+var_24] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and dword ptr [ebp+var_28] 0 +
and [ebp+var_2C] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi]  +
mov edi [ebp+arg_0] +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push edi  +
call sub_1013359  +
test eax eax +
jl loc_10143E4  +
push [ebp+var_2C]  +
lea eax [ebp+var_24] +
push dword ptr [ebp+var_28]  +
push offset aPtLumLus  +
push 10h  +
push eax  +
call sub_1003F97  +
add esp 14h +
test eax eax +
jl loc_10143E4  +
lea eax [ebp+var_24] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi]  +
mov edi [ebp+arg_0] +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
push edi  +
push offset aPtSh  +
lea eax [ebp+var_24] +
push 10h  +
push eax  +
call sub_1003F97  +
add esp 10h +
test eax eax +
jl loc_1014443  +
lea eax [ebp+var_24] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi]  +
mov edi [ebp+arg_0] +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
push edi  +
push offset aPtSm  +
lea eax [ebp+var_24] +
push 10h  +
push eax  +
call sub_1003F97  +
add esp 10h +
test eax eax +
jl loc_10144A2  +
lea eax [ebp+var_24] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push dword ptr [esi]  +
call ds:SysFreeString  +
push dword ptr [ebp+arg_0]  +
and dword ptr [esi] 0 +
push offset aPtLum  +
lea eax [ebp+var_24] +
push 10h  +
push eax  +
call sub_1003F97  +
add esp 10h +
test eax eax +
jl loc_10144FF  +
lea eax [ebp+var_24] +
push eax  +
mov ecx esi +
call sub_1003FF6  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C34h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov [ebp+lpString] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [ebp+lpValueName] eax +
mov eax [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_C34] eax +
xor eax eax +
xor ebx ebx +
mov esi 1FCh +
push esi  +
mov word ptr [ebp+MachineName] ax +
mov [ebp+SubKey] ax +
push offset asc_1001B78  +
lea eax [ebp+MachineName] +
push eax  +
mov [ebp+var_C0C] ebx +
mov [ebp+hKey] ebx +
mov [ebp+var_C18] ebx +
mov [ebp+phkResult] ebx +
mov [ebp+ReferencedDomainName] ebx +
mov [ebp+var_C20] ebx +
call sub_1018BDF  +
push ebx  +
push edi  +
call sub_10182B0  +
test eax eax +
jz loc_10149C4  +
push edi  +
call sub_1013556  +
test eax eax +
jnz loc_10149C4  +
cmp edi ebx +
jz loc_101460B  +
movzx eax word ptr [edi] +
mov ecx edi +
cmp ax bx +
jz loc_10145FD  +
movzx eax ax +
cmp ax 5Ch +
jnz loc_10145DA  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
inc [ebp+ReferencedDomainName]  +
cmp ax bx +
jnz loc_10145C4  +
cmp word ptr [ebp+ReferencedDomainName] 2 +
jnz loc_10145F4  +
push esi  +
push edi  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1018BDF  +
jmp loc_101460B  +
cmp word ptr [ebp+ReferencedDomainName] bx +
jnz loc_101460B  +
push esi  +
push edi  +
lea eax [ebp+MachineName] +
push eax  +
call sub_1018C22  +
mov eax 103h +
mov [ebp+nSize] eax +
mov ecx eax +
mov [ebp+dwBytes] ebx +
mov [ebp+cbReferencedDomainName] ebx +
mov [ebp+ReferencedDomainName] ebx +
mov [ebp+Sid] ebx +
lea eax [ebp+Buffer] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1014636  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jnz loc_101468A  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call GetUserNameW  +
test eax eax +
jnz loc_101467E  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
xor eax eax +
jmp loc_1014A95  +
lea eax [ebp+Buffer] +
mov [ebp+lpString] eax +
push 5Ch  +
push ebx  +
push [ebp+lpString]  +
call ds:StrRChrIW  +
cmp eax ebx +
jz loc_10146A6  +
add eax 2 +
mov [ebp+lpString] eax +
mov esi LookupAccountNameW +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
push [ebp+ReferencedDomainName]  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+Sid]  +
push [ebp+lpString]  +
push edi  +
call esi  +
cmp [ebp+dwBytes] ebx +
jz loc_1014664  +
push [ebp+dwBytes]  +
call sub_1018520  +
mov [ebp+Sid] eax +
cmp eax ebx +
jnz loc_1014700  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_1014664  +
mov eax [ebp+cbReferencedDomainName] +
add eax eax +
push eax  +
call sub_1018520  +
mov [ebp+ReferencedDomainName] eax +
cmp eax ebx +
jnz loc_1014744  +
push 0Eh  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
lea eax [ebp+Sid] +
push eax  +
call sub_1018819  +
jmp loc_1014677  +
lea ecx [ebp+peUse] +
push ecx  +
lea ecx [ebp+cbReferencedDomainName] +
push ecx  +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+Sid]  +
push [ebp+lpString]  +
push edi  +
call esi  +
test eax eax +
jnz loc_1014794  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
lea eax [ebp+Sid] +
push eax  +
call sub_1018819  +
lea eax [ebp+ReferencedDomainName] +
jmp loc_1014739  +
lea eax [ebp+var_BFC] +
push eax  +
push [ebp+Sid]  +
call sub_10140D4  +
test eax eax +
jz loc_101476D  +
lea eax [ebp+Sid] +
push eax  +
call sub_1018819  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_1018819  +
mov esi 0FEh +
push esi  +
lea eax [ebp+var_BFC] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1018BDF  +
push esi  +
push offset asc_10013E4  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1018C22  +
push esi  +
mov edi offset SubKey +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1018C22  +
mov esi RegConnectRegistryW +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
lea eax [ebp+MachineName] +
push eax  +
call esi  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_101486B  +
lea eax [ebp+MachineName] +
push eax  +
push 9DCh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 100h  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push [ebp+lpString]  +
jmp loc_10146F5  +
lea eax [ebp+var_C18] +
push eax  +
push 80000003h  +
lea eax [ebp+MachineName] +
push eax  +
call esi  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_1014825  +
cmp [ebp+hKey] ebx +
jz loc_10148E7  +
lea eax [ebp+phkResult] +
push eax  +
mov esi 20019h +
push esi  +
push ebx  +
push edi  +
push [ebp+hKey]  +
mov edi ds:RegOpenKeyExW +
call edi  +
mov [ebp+lpString] eax +
cmp [ebp+phkResult] ebx +
jnz loc_10148F3  +
cmp [ebp+var_C18] ebx +
jz loc_1014993  +
lea eax [ebp+phkResult] +
push eax  +
push esi  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+var_C18]  +
call edi  +
mov [ebp+lpString] eax +
cmp [ebp+phkResult] ebx +
jz loc_1014993  +
lea eax [ebp+var_C20] +
push eax  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call sub_10132DD  +
test eax eax +
jnz loc_1014979  +
push [ebp+lpString]  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov esi ds:RegCloseKey +
cmp [ebp+phkResult] ebx +
jz loc_101494A  +
push [ebp+phkResult]  +
call esi  +
mov [ebp+phkResult] ebx +
cmp [ebp+hKey] ebx +
jz loc_1014960  +
push [ebp+hKey]  +
call esi  +
mov [ebp+hKey] ebx +
cmp [ebp+var_C18] ebx +
jz loc_1014677  +
push [ebp+var_C18]  +
call esi  +
jmp loc_1014677  +
cmp [ebp+phkResult] ebx +
jz loc_1014993  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov [ebp+phkResult] ebx +
cmp [ebp+hKey] ebx +
jz loc_10149AD  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
cmp [ebp+var_C18] ebx +
jz loc_1014A84  +
push [ebp+var_C18]  +
jmp loc_1014A7E  +
lea eax [ebp+var_C0C] +
push eax  +
mov esi 20019h +
push esi  +
push ebx  +
mov edi offset SubKey +
push edi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_1014A10  +
cmp [ebp+var_C0C] ebx +
jnz loc_1014A18  +
lea eax [ebp+var_C0C] +
push eax  +
push esi  +
push ebx  +
push edi  +
push 80000001h  +
call ds:RegOpenKeyExW  +
mov [ebp+lpString] eax +
cmp [ebp+var_C0C] ebx +
jz loc_1014A84  +
lea eax [ebp+var_C20] +
push eax  +
push [ebp+lpValueName]  +
push [ebp+var_C0C]  +
call sub_10132DD  +
test eax eax +
jnz loc_1014A70  +
push [ebp+lpString]  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
cmp [ebp+var_C0C] ebx +
jz loc_1014677  +
push [ebp+var_C0C]  +
call ds:RegCloseKey  +
jmp loc_1014677  +
cmp [ebp+var_C0C] ebx +
jz loc_1014A84  +
push [ebp+var_C0C]  +
call ds:RegCloseKey  +
mov eax [ebp+var_C20] +
mov ecx [ebp+var_C34] +
mov [ecx] eax +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
xor ecx ecx +
push ebx  +
mov ebx [ebp+arg_C] +
xor eax eax +
cmp [ebp+arg_10] 9 +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_248] eax +
mov [ebp+SystemTime.wYear] cx +
mov [ebp+SystemTime.wMonth] cx +
mov [ebp+SystemTime.wDayOfWeek] cx +
mov [ebp+SystemTime.wDay] cx +
mov [ebp+SystemTime.wHour] cx +
mov [ebp+SystemTime.wMinute] cx +
mov [ebp+SystemTime.wSecond] cx +
mov [ebp+SystemTime.wMilliseconds] cx +
mov [ebp+var_24C] eax +
mov [ebp+var_234] eax +
jnz loc_1014B42  +
mov eax [ebx] +
push 10h  +
push ebx  +
call dword ptr [eax+70h]  +
push 0Ah  +
lea eax [edi+61Ch] +
push eax  +
call sub_101985B  +
mov ecx [ebx] +
movzx eax ax +
push 0  +
push eax  +
push ebx  +
call dword ptr [ecx+28h]  +
cmp [ebp+arg_20] 0 +
mov eax [ebx] +
lea ecx [ebp+var_234] +
push ecx  +
jz loc_1014BE9  +
push [ebp+var_24C]  +
push ebx  +
call dword ptr [eax+18h]  +
mov [ebp+var_22C] eax +
test eax eax +
jge loc_1014B8E  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax [ebp+var_22C] +
jmp loc_10151BC  +
xor eax eax +
push 222h  +
push eax  +
mov [ebp+Buffer] ax +
lea eax [ebp-226h] +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] 112h +
call GetUserNameW  +
test eax eax +
jz loc_1014B70  +
mov eax [ebx] +
lea ecx [ebp+Buffer] +
push ecx  +
push ebx  +
call dword ptr [eax+50h]  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+var_22C] eax +
jge loc_1014C1D  +
jmp loc_1014B69  +
lea ecx [ebp+var_24C] +
push ecx  +
push ebx  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
test ebx ebx +
jge loc_1014C1B  +
push ebx  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax ebx +
jmp loc_10151BC  +
xor ebx ebx +
mov [ebp+var_22C] ebx +
cmp [edi+1BF4h] ebx +
jz loc_1014C32  +
mov dword ptr [esi+1Ch] 2 +
lea eax [edi+0BF0h] +
push ebx  +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1014C6D  +
push ebx  +
lea eax [edi+13F0h] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1014C6D  +
push ebx  +
lea eax [edi+15ECh] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1014C6D  +
mov [esi+18h] ebx +
mov [esi+14h] ebx +
jmp loc_1014C81  +
mov eax [ebp+arg_14] +
cmp eax ebx +
jz loc_1014C77  +
mov [esi+18h] eax +
mov eax [ebp+arg_18] +
cmp eax ebx +
jz loc_1014C81  +
mov [esi+14h] eax +
mov eax [ebp+arg_10] +
dec eax  +
cmp eax 8 +
ja loc_1015196  +
xor ebx ebx +
inc ebx  +
jmp ds:off_10151CF[eax*4]  +
mov eax ebx +
push 0  +
mov [esi+20h] ebx +
mov [esi+24h] ax +
push dword ptr [edi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1014CBC  +
push 0Ah  +
push dword ptr [edi+24h]  +
call sub_101985B  +
mov [esi+18h] eax +
push 0  +
lea eax [edi+0BF0h] +
push eax  +
call sub_10182B0  +
test eax eax +
ja loc_1014CEC  +
push 0  +
lea eax [edi+13F0h] +
push eax  +
call sub_10182B0  +
test eax eax +
ja loc_1014CEC  +
mov dword ptr [esi+14h] 5A0h +
jmp loc_10150BC  +
mov eax [ebp+arg_18] +
mov [esi+14h] eax +
jmp loc_10150BC  +
mov eax ebx +
push 0  +
mov [esi+20h] ebx +
mov [esi+24h] ax +
push dword ptr [edi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1014CBC  +
push 0Ah  +
push dword ptr [edi+24h]  +
call sub_101985B  +
imul eax eax +
jmp loc_1014CB9  +
push 0  +
mov [esi+20h] ebx +
push dword ptr [edi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1014D3A  +
push 0Ah  +
push dword ptr [edi+24h]  +
call sub_101985B  +
jmp loc_1014D4C  +
lea eax [edi+224h] +
push eax  +
call sub_100A900  +
mov [esi+26h] ax +
mov eax ebx +
mov [esi+24h] ax +
jmp loc_10150BC  +
mov eax ebx +
push 0  +
mov dword ptr [esi+20h] 2 +
mov [esi+24h] ax +
push dword ptr [edi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1014D7E  +
push 0Ah  +
push dword ptr [edi+24h]  +
call sub_101985B  +
mov [esi+24h] ax +
lea eax [edi+224h] +
push eax  +
call sub_100A900  +
mov [esi+26h] ax +
jmp loc_10150BC  +
push 0  +
push dword ptr [edi+24h]  +
call sub_10182B0  +
test eax eax +
jbe loc_1014FC0  +
push 0Ah  +
push dword ptr [edi+24h]  +
call sub_101985B  +
mov [ebp+nSize] eax +
dec eax  +
cmp eax 0Bh +
ja loc_1014E00  +
lea eax [edi+224h] +
push 0  +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1014DD1  +
mov eax ebx +
jmp loc_1014DE2  +
push 0Ah  +
lea eax [edi+224h] +
push eax  +
call sub_101985B  +
movzx eax ax +
push [ebp+nSize]  +
lea ecx [eax-1] +
mov eax ebx +
shl eax cl +
mov dword ptr [esi+20h] 3 +
mov [esi+24h] eax +
call sub_100AF1B  +
jmp loc_1014E60  +
cmp dword ptr [edi+24h] 0 +
jz loc_1014E69  +
push 0  +
push ebx  +
push 1F2h  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014E34  +
push 0  +
push ebx  +
push offset aLastday  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jnz loc_1014E69  +
push dword ptr [ebp+arg_24]  +
lea eax [edi+420h] +
push eax  +
mov dword ptr [esi+20h] 3 +
call sub_100AF95  +
mov ecx eax +
dec ecx  +
mov eax ebx +
shl eax cl +
mov [esi+24h] eax +
lea eax [edi+420h] +
push eax  +
call sub_100ABD8  +
mov [esi+28h] ax +
jmp loc_10150BC  +
push 0  +
push ebx  +
push 1D7h  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F93  +
push 0  +
push ebx  +
push offset aFirst  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F93  +
push 0  +
push ebx  +
push 1D8h  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F87  +
push 0  +
push ebx  +
push offset aSecond_1  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F87  +
push 0  +
push ebx  +
push 1D9h  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F7B  +
push 0  +
push ebx  +
push offset aThird  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F7B  +
push 0  +
push ebx  +
push 1DAh  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F6F  +
push 0  +
push ebx  +
push offset aFourth  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F6F  +
push 0  +
push ebx  +
push 1DBh  +
call sub_1019FBD  +
push eax  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jz loc_1014F63  +
push 0  +
push ebx  +
push offset aLast  +
push dword ptr [edi+24h]  +
call sub_10182D1  +
test eax eax +
jnz loc_1014F99  +
mov [ebp+var_22C] 5 +
jmp loc_1014F99  +
mov [ebp+var_22C] 4 +
jmp loc_1014F99  +
mov [ebp+var_22C] 3 +
jmp loc_1014F99  +
mov [ebp+var_22C] 2 +
jmp loc_1014F99  +
mov [ebp+var_22C] ebx +
mov ax word ptr [ebp+var_22C] +
mov [esi+24h] ax +
lea eax [edi+224h] +
push eax  +
mov dword ptr [esi+20h] 4 +
call sub_100A900  +
mov [esi+26h] ax +
jmp loc_1014E54  +
lea eax [edi+420h] +
push eax  +
mov dword ptr [esi+20h] 3 +
call sub_100ABD8  +
mov [esi+28h] ax +
push 0Ah  +
lea eax [edi+224h] +
push eax  +
call sub_101985B  +
movzx eax ax +
cmp eax ebx +
jbe loc_1014FFB  +
lea ecx [eax-1] +
mov eax ebx +
shl eax cl +
mov [esi+24h] eax +
jmp loc_10150BC  +
mov [esi+24h] ebx +
jmp loc_10150BC  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_1015057  +
movzx eax [ebp+SystemTime.wYear] +
movzx ecx [ebp+SystemTime.wMonth] +
imul eax eax +
add eax ecx +
movzx ecx [ebp+SystemTime.wDay] +
imul eax eax +
movzx edx [ebp+arg_28] +
add eax ecx +
movzx ecx [ebp+arg_24] +
imul ecx ecx +
add ecx edx +
movzx edx [ebp+arg_2C] +
imul ecx ecx +
add ecx edx +
cmp ecx eax +
jge loc_101509D  +
mov [ebp+var_248] ebx +
movzx eax [ebp+SystemTime.wHour] +
movzx ecx [ebp+SystemTime.wMinute] +
imul eax eax +
movzx edx [ebp+arg_34] +
add eax ecx +
movzx ecx [ebp+arg_30] +
imul ecx ecx +
add ecx edx +
cmp ecx eax +
jb loc_1015084  +
cmp [ebp+var_248] 0 +
jz loc_101509D  +
push 228h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
and dword ptr [esi+20h] 0 +
jmp loc_10150BC  +
mov dword ptr [esi+20h] 6 +
jmp loc_10150BC  +
mov dword ptr [esi+20h] 7 +
jmp loc_10150BC  +
mov dword ptr [esi+20h] 5 +
mov ax [ebp+arg_34] +
mov [esi+12h] ax +
mov ax [ebp+arg_30] +
mov [esi+10h] ax +
mov ax [ebp+arg_2C] +
mov [esi+8] ax +
mov ax [ebp+arg_28] +
mov [esi+6] ax +
mov ax [ebp+arg_24] +
mov [esi+4] ax +
push 0  +
lea eax [edi+0FE8h] +
push eax  +
call sub_10182B0  +
test eax eax +
ja loc_1015108  +
push 0  +
lea eax [edi+0BF0h] +
push eax  +
call sub_10182B0  +
test eax eax +
jbe loc_1015123  +
mov ax [ebp+arg_40] +
or [esi+1Ch] ebx +
mov [esi+0Eh] ax +
mov ax [ebp+arg_3C] +
mov [esi+0Ch] ax +
mov ax [ebp+arg_38] +
mov [esi+0Ah] ax +
add edi 818h +
cmp word ptr [edi] 0 +
jz loc_1015143  +
push edi  +
call sub_1013259  +
mov [ebp+var_22C] eax +
test eax eax +
jnz loc_1014B69  +
mov eax [ebp+var_234] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jz loc_1015192  +
push esi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
push edi  +
push 89h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 40h +
push ebx  +
push eax  +
call sub_1019E6A  +
add esp 14h +
jmp loc_10151BA  +
xor eax eax +
jmp loc_10151BC  +
mov esi 80004005h +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 50h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 614h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_600] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_608] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_18] +
mov [ebp+var_604] eax +
mov eax [ebp+arg_14] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+nSize] eax +
mov eax [ebp+arg_1C] +
push edi  +
mov edi [ebp+arg_4] +
push dword ptr [esi+4]  +
mov [ebp+var_5FC] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_60C] edi +
mov [ebp+var_610] eax +
call sub_101C4A4  +
test eax eax +
jz loc_101540D  +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_101540D  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jnz loc_101540D  +
push dword ptr [edi+8]  +
push dword ptr [esi+14h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_101C898  +
test eax eax +
jnz loc_1015306  +
push dword ptr [esi+4]  +
push 9DDh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 0FEh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax 80004005h +
jmp loc_1015A5A  +
call ds:__imp_GetLastError  +
cmp eax 4C3h +
jz loc_10153FF  +
xor edi edi +
inc edi  +
cmp eax 50010001h +
jz loc_1015336  +
cmp eax 0A0010001h +
jz loc_10153FF  +
mov eax [ebp+var_600] +
mov [eax] edi +
jmp loc_101533F  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1015A58  +
mov eax [esi+8] +
mov [ebx] eax +
mov eax [ebp+var_608] +
mov [eax] edi +
mov eax [ebp+var_60C] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_10153EF  +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_1015A58  +
push 30h  +
call ds:MessageBeep  +
push dword ptr [ebx]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
mov esi [ebp+var_610] +
add esp 14h +
push 0FEh  +
push esi  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
push 0  +
push esi  +
call sub_10182B0  +
test eax eax +
jnz loc_10153E2  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_5FC] +
mov [eax] esi +
jmp loc_1015A50  +
mov eax [esi+0Ch] +
mov ecx [ebp+var_5FC] +
mov [ecx] eax +
jmp loc_1015A50  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
jmp loc_10152E9  +
push dword ptr [esi+4]  +
call sub_101C4A4  +
xor edi edi +
inc edi  +
test eax eax +
jnz loc_1015663  +
cmp [esi+1BE8h] di +
jnz loc_1015663  +
mov eax [ebp+var_60C] +
push dword ptr [eax+8]  +
push dword ptr [esi+14h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_101C898  +
test eax eax +
jz loc_10152B2  +
call ds:__imp_GetLastError  +
cmp eax 4C3h +
jz loc_10153FF  +
cmp eax 50010001h +
jz loc_1015487  +
cmp eax 0A0010001h +
jz loc_10153FF  +
mov eax [ebp+var_600] +
mov [eax] edi +
jmp loc_1015490  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
push 0  +
push dword ptr [esi+10h]  +
call sub_10182B0  +
test eax eax +
jnz loc_10155A3  +
lea eax [ebp+nSize] +
push eax  +
push dword ptr [esi+10h]  +
mov [ebp+nSize] 0FEh +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_10154DF  +
push 90h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_10152FC  +
mov eax [ebp+var_608] +
mov [eax] edi +
mov eax [esi+10h] +
push 30h  +
mov [ebx] eax +
call ds:MessageBeep  +
push dword ptr [ebx]  +
push 1ADh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_10155A3  +
push dword ptr [ebx]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [esi+0Ch]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_101558E  +
push 0  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_101558E  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [esi+0Ch] +
mov ecx [ebp+var_5FC] +
mov [ecx] eax +
mov eax [ebp+var_604] +
mov [eax] edi +
jmp loc_10155A9  +
mov ecx [ebp+var_5FC] +
mov eax [esi+10h] +
mov [ebx] eax +
test byte ptr [esi+1BE8h] 10h +
jz loc_1015650  +
mov ecx [ebp+var_60C] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_1015A48  +
push eax  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push 1FCh  +
add esi 0Ch +
push esi  +
call sub_1018894  +
test eax eax +
jnz loc_1015607  +
call sub_1018081  +
jmp loc_10152E9  +
push dword ptr [esi]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi]  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
push 0  +
push dword ptr [esi]  +
call sub_10182B0  +
test eax eax +
jnz loc_1015646  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [esi] +
mov ecx [ebp+var_5FC] +
jmp loc_101565C  +
cmp dword ptr [ecx] 0 +
jnz loc_1015A48  +
mov eax [esi+14h] +
mov [ecx] eax +
jmp loc_1015A48  +
cmp word ptr [esi+1BE8h] 2 +
jnz loc_101584F  +
mov eax [ebp+var_60C] +
push dword ptr [eax+8]  +
push dword ptr [esi+14h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_101C898  +
test eax eax +
jz loc_10152B2  +
call ds:__imp_GetLastError  +
cmp eax 4C3h +
jz loc_1015823  +
cmp eax 50010001h +
jz loc_10156D3  +
cmp eax 0A0010001h +
jz loc_1015823  +
mov eax [ebp+var_600] +
mov [eax] edi +
jmp loc_10156DC  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
mov eax [esi+10h] +
mov [ebx] eax +
test byte ptr [esi+1BE8h] 10h +
jz loc_101577A  +
mov ecx [ebp+var_60C] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_1015805  +
push eax  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push 1FCh  +
add esi 0Ch +
push esi  +
call sub_1018894  +
test eax eax +
jz loc_10155FD  +
push dword ptr [esi]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi]  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
push 0  +
push dword ptr [esi]  +
call sub_10182B0  +
test eax eax +
jnz loc_1015773  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [esi] +
jmp loc_1015808  +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_1015818  +
push 0  +
push dword ptr [esi+14h]  +
call sub_10182B0  +
test eax eax +
jz loc_10157A2  +
mov eax [esi+14h] +
mov ecx [ebp+var_5FC] +
mov [ecx] eax +
jmp loc_1015818  +
push dword ptr [ebx]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [esi+0Ch]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
push 0  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_1015805  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [esi+0Ch] +
mov ecx [ebp+var_5FC] +
mov [ecx] eax +
mov eax [ebp+var_604] +
mov [eax] edi +
mov eax [ebp+var_608] +
jmp loc_1015A56  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
push 1FCh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
call sub_1017FEE  +
jmp loc_10154CB  +
push 0  +
push dword ptr [esi+4]  +
call sub_10182B0  +
test eax eax +
jz loc_1015A58  +
test byte ptr [esi+1BE8h] 8 +
jz loc_1015A58  +
mov eax [ebp+var_60C] +
push dword ptr [eax+8]  +
push dword ptr [esi+14h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_101C898  +
test eax eax +
jz loc_10152B2  +
call ds:__imp_GetLastError  +
cmp eax 4C3h +
jz loc_1015823  +
cmp eax 50010001h +
jz loc_10158D0  +
cmp eax 0A0010001h +
jz loc_1015823  +
mov eax [ebp+var_600] +
mov [eax] edi +
jmp loc_10158D9  +
mov eax [ebp+var_600] +
and dword ptr [eax] 0 +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_1015971  +
mov eax [esi+8] +
mov [ebx] eax +
lea eax [esi+818h] +
push eax  +
push 0CAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
test byte ptr [esi+1BE8h] 10h +
jz loc_1015959  +
push 0  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jz loc_1015959  +
push 0FCh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_608] +
mov [eax] edi +
mov eax [ebp+var_604] +
mov [eax] edi +
mov eax [ebp+nSize] +
jmp loc_101598A  +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_101598C  +
mov eax [esi+8] +
mov [ebx] eax +
mov eax [ebp+var_608] +
mov [eax] edi +
push 0  +
push edi  +
push dword ptr [esi+10h]  +
push dword ptr [esi+8]  +
call sub_10182D1  +
test eax eax +
jz loc_1015A92  +
test byte ptr [esi+1BE8h] 10h +
jz loc_1015A6B  +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1015AB9  +
mov eax [ebp+var_60C] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_1015AB9  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jnz loc_1015AB9  +
push dword ptr [ebx]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push 0  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
mov esi [ebp+var_610] +
add esp 14h +
push 0FEh  +
push esi  +
call sub_1018ECA  +
test eax eax +
jz loc_10152FC  +
push 0  +
push esi  +
call sub_10182B0  +
test eax eax +
jnz loc_1015A40  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_5FC] +
mov [eax] esi +
mov eax [ebp+var_608] +
mov [eax] edi +
mov eax [ebp+var_604] +
mov [eax] edi +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 24h  +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_1015A48  +
mov eax [ebp+nSize] +
cmp dword ptr [eax] 0 +
jnz loc_1015A48  +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1015A48  +
jmp loc_10159E1  +
test byte ptr [esi+1BE8h] 10h +
push 0  +
jz loc_1015AC1  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1015AB9  +
mov eax [ebp+var_60C] +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_10159E1  +
mov eax [esi+0Ch] +
jmp loc_1015648  +
push dword ptr [esi+14h]  +
call sub_10182B0  +
test eax eax +
jz loc_1015AD5  +
mov eax [esi+14h] +
jmp loc_1015648  +
cmp dword ptr [esi+1BF0h] 0 +
jnz loc_1015A48  +
push 0  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_1015A48  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jnz loc_1015A48  +
jmp loc_10159E1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 410h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi] +
push edi  +
mov edi [ebp+arg_4] +
push eax  +
mov [ebp+var_410] ecx +
mov ecx [ebp+arg_10] +
mov ebx offset dword_10013E8 +
push ebx  +
mov [ebp+var_408] ecx +
lea ecx [edi+818h] +
push offset dword_1001408  +
push ecx  +
push esi  +
mov [ebp+var_404] eax +
mov dword ptr [ebp+var_400] ecx +
call dword ptr [edx+20h]  +
mov [ebp+var_40C] eax +
cmp eax 80070005h +
jnz loc_1015B96  +
push 0BDh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax 80070005h +
jmp loc_1015C9E  +
cmp eax 80070050h +
jnz loc_1015CAF  +
mov eax [ebp+var_408] +
mov dword ptr [eax] 1 +
cmp dword ptr [edi+1BFCh] 0 +
jnz loc_1015C14  +
push dword ptr [ebp+var_400]  +
push 8Ah  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+String] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov edi [ebp+var_410] +
push edi  +
call sub_1007C43  +
cmp eax 1 +
jnz loc_1015C0B  +
mov eax 80004005h +
jmp loc_1015C9E  +
cmp dword ptr [edi] 0 +
jnz loc_1015C9C  +
mov eax [ebp+var_404] +
and dword ptr [eax] 0 +
mov ecx [esi] +
push eax  +
push ebx  +
push dword ptr [ebp+var_400]  +
push esi  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi 8007000Dh +
jz loc_1015C45  +
cmp edi 80041313h +
jz loc_1015C45  +
cmp edi 80070057h +
jnz loc_1015C98  +
mov eax [ebp+var_408] +
push dword ptr [ebp+var_400]  +
and dword ptr [eax] 0 +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
mov edi eax +
test edi edi +
jge loc_1015C7E  +
push edi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax edi +
jmp loc_1015C9E  +
push [ebp+var_404]  +
mov eax [esi] +
push ebx  +
push offset dword_1001408  +
push dword ptr [ebp+var_400]  +
push esi  +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jl loc_1015C60  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 14h  +
test eax eax +
jge loc_1015C9C  +
push eax  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax [ebp+var_40C] +
jmp loc_1015C9E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CA0h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_C10] eax +
xor eax eax +
push 30h  +
mov [ebp+SystemTime.wYear] ax +
mov [ebp+SystemTime.wMonth] ax +
mov [ebp+SystemTime.wDayOfWeek] ax +
mov [ebp+SystemTime.wDay] ax +
mov [ebp+SystemTime.wHour] ax +
mov [ebp+SystemTime.wMinute] ax +
mov [ebp+SystemTime.wSecond] ax +
mov [ebp+SystemTime.wMilliseconds] ax +
mov [ebp+var_7F8] ax +
mov [ebp+String] ax +
mov [ebp+var_5F8] ax +
mov [ebp+var_C24] ebx +
mov [ebp+var_C18] ebx +
mov [ebp+var_C20] ebx +
mov dword ptr [ebp+var_C14] ebx +
mov dword ptr [ebp+var_C1C] ebx +
mov dword ptr [ebp+var_C3C] ebx +
mov dword ptr [ebp+var_C40] ebx +
mov [ebp+var_C44] ebx +
mov [ebp+var_C34] ebx +
mov [ebp+var_C2C] ebx +
mov [ebp+var_C00] ebx +
mov [ebp+var_C08] ebx +
mov [ebp+var_C28] ebx +
mov [ebp+var_BF8] ebx +
mov [ebp+var_C60] ebx +
mov [ebp+var_BF4] ebx +
mov [ebp+var_BFC] 1 +
mov [ebp+nSize] 0FEh +
mov [ebp+var_C04] ebx +
mov [ebp+var_C58] ebx +
mov [ebp+var_C70] ebx +
mov [ebp+var_C38] ebx +
mov [ebp+var_C30] ebx +
mov [ebp+var_C68] ebx +
mov [ebp+var_C64] ebx +
mov [ebp+var_C5C] ebx +
pop ecx  +
lea eax [ebp+var_CA0] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1015DFC  +
push 30h  +
pop eax  +
mov word ptr [ebp+var_CA0] ax +
xor eax eax +
lea edi [esi+818h] +
push edi  +
mov word ptr [ebp+var_CA0+2] ax +
mov [ebp+var_C74] ax +
call sub_100B0CD  +
test eax eax +
jnz loc_1015E6E  +
push 0A5h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push 0CDh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push ebx  +
call sub_1013238  +
mov eax 80004005h +
jmp loc_10169FF  +
push ebx  +
push edi  +
call sub_10182B0  +
cmp eax 0EEh +
jbe loc_1015E83  +
push 8Eh  +
jmp loc_1015E4A  +
lea eax [esi+11E4h] +
push ebx  +
push eax  +
call sub_10182B0  +
cmp eax 106h +
jbe loc_1015E9E  +
push 96h  +
jmp loc_1015E4A  +
cmp [esi+1BF0h] ebx +
jz loc_1015EC2  +
test byte ptr [esi+1BE8h] 8 +
jz loc_1015EC2  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_1015EC2  +
push 0AEh  +
jmp loc_1015E4A  +
test byte ptr [esi+1BE8h] 10h +
jz loc_1015EFD  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_1015EFD  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jnz loc_1015EFD  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
cmp [ebp+arg_8] 0Ah +
jnz loc_1015F0D  +
push 0C6h  +
jmp loc_1015E4A  +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_1015F44  +
cmp [eax] bx +
jz loc_1015F44  +
push 0C7h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov esi 80004005h +
push ebx  +
call sub_1013238  +
mov eax esi +
jmp loc_10169FF  +
mov eax [ebp+var_C10] +
cmp [eax] ebx +
jz loc_1015F84  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wDay] +
mov [ebp+var_C24] eax +
movzx eax [ebp+SystemTime.wMonth] +
mov [ebp+var_C18] eax +
movzx eax [ebp+SystemTime.wYear] +
mov [ebp+var_C20] eax +
jmp loc_1015FB0  +
push ebx  +
lea edi [esi+0DECh] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1015FB0  +
lea eax [ebp+var_C20] +
push eax  +
lea eax [ebp+var_C18] +
push eax  +
lea eax [ebp+var_C24] +
push eax  +
push edi  +
call sub_100B8E4  +
push ebx  +
lea edi [esi+0FE8h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1015FDE  +
lea eax [ebp+var_C34] +
push eax  +
lea eax [ebp+var_C2C] +
push eax  +
lea eax [ebp+var_C44] +
push eax  +
push edi  +
call sub_100B8E4  +
jmp loc_1016005  +
movzx eax word ptr [ebp+var_C24] +
mov [ebp+var_C44] eax +
movzx eax word ptr [ebp+var_C18] +
mov [ebp+var_C2C] eax +
movzx eax word ptr [ebp+var_C20] +
mov [ebp+var_C34] eax +
mov eax [ebp+var_C10] +
cmp [eax+4] ebx +
jz loc_101603F  +
cmp [ebp+arg_8] 9 +
jz loc_101603F  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wHour] +
mov dword ptr [ebp+var_C14] eax +
movzx eax [ebp+SystemTime.wMinute] +
mov dword ptr [ebp+var_C1C] eax +
jmp loc_1016064  +
push ebx  +
lea edi [esi+9F4h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1016064  +
lea eax [ebp+var_C1C] +
push eax  +
lea eax [ebp+var_C14] +
push eax  +
push edi  +
call sub_100A834  +
push ebx  +
lea edi [esi+0BF0h] +
push edi  +
call sub_10182B0  +
test eax eax +
jbe loc_1016089  +
lea eax [ebp+var_C40] +
push eax  +
lea eax [ebp+var_C3C] +
push eax  +
push edi  +
call sub_100A834  +
cmp [ebp+arg_8] 1 +
mov [ebp+var_C30] 0Ah +
mov [ebp+var_C38] 3Ch +
jz loc_10160A9  +
cmp [ebp+arg_8] 2 +
jnz loc_10160AE  +
mov eax [esi+24h] +
jmp loc_10160B4  +
lea eax [esi+15ECh] +
lea ecx [ebp+var_C70] +
push ecx  +
lea ecx [ebp+var_C58] +
push ecx  +
lea ecx [ebp+var_C38] +
push ecx  +
lea ecx [ebp+var_C30] +
push ecx  +
push dword ptr [ebp+var_C40]  +
lea ecx [esi+13F0h] +
push dword ptr [ebp+var_C3C]  +
push dword ptr [ebp+var_C1C]  +
push dword ptr [ebp+var_C14]  +
push edi  +
push ecx  +
push eax  +
call sub_100C054  +
test eax eax +
jz loc_1016102  +
xor esi esi +
inc esi  +
jmp loc_1015F37  +
lea eax [ebp+var_C5C] +
push eax  +
push offset aTaskCreation  +
push dword ptr [esi+10h]  +
push dword ptr [esi+4]  +
call sub_1014513  +
test eax eax +
jz loc_10160FA  +
cmp [ebp+var_C5C] ebx +
jbe loc_1016145  +
push 9D0h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
xor esi esi +
jmp loc_1015F37  +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_101617D  +
cmp [eax] bx +
jz loc_101617D  +
push dword ptr [esi+4]  +
call sub_1013556  +
test eax eax +
jz loc_101617D  +
push 86Fh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
jmp loc_10169FF  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_C08] +
push eax  +
lea eax [ebp+var_C00] +
push eax  +
lea eax [ebp+var_C04] +
push eax  +
lea eax [ebp+var_C60] +
push eax  +
lea eax [ebp+var_BF4] +
push eax  +
lea eax [ebp+var_BFC] +
push eax  +
push [ebp+var_C10]  +
push esi  +
call sub_10151F8  +
mov edi eax +
cmp edi ebx +
jz loc_10161D7  +
cmp [ebp+var_BFC] ebx +
jz loc_10161D0  +
push dword ptr [esi+4]  +
call sub_101C6C0  +
mov esi edi +
jmp loc_1015F37  +
mov edi 1FCh +
cmp [ebp+var_C04] ebx +
jnz loc_10162C6  +
cmp word ptr [esi+1BE8h] 8 +
jnz loc_1016247  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_1016247  +
test byte ptr [esi+1BE8h] 10h +
jz loc_1016214  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_1016247  +
lea eax [esi+818h] +
push eax  +
push 0CAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 20h +
jmp loc_10162AC  +
movzx eax word ptr [esi+1BE8h] +
test al 8 +
jz loc_10162C6  +
test al 10h +
jz loc_10162C6  +
push dword ptr [esi+8]  +
call sub_10060BA  +
test eax eax +
jz loc_10162C6  +
lea eax [esi+818h] +
push eax  +
push 0CAh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push edi  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
push 0FCh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
mov [ebp+var_BF4] eax +
mov [ebp+var_C04] eax +
jmp loc_10163C4  +
test byte ptr [esi+1BE8h] 0Bh +
jnz loc_10162EE  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_10162EE  +
movzx eax word ptr [esi+1BE8h] +
shr eax 4 +
and eax 1 +
jmp loc_10163C4  +
push ebx  +
push dword ptr [esi+4]  +
call sub_10182B0  +
test eax eax +
jnz loc_10163BE  +
push ebx  +
push dword ptr [esi+8]  +
call sub_10182B0  +
test eax eax +
jz loc_10163BE  +
mov eax [esi+8] +
push ebx  +
push dword ptr [esi+0Ch]  +
xor edi edi +
inc edi  +
mov [ebp+var_C00] eax +
mov [ebp+var_BF4] edi +
call sub_10182B0  +
test eax eax +
jnz loc_1016336  +
mov eax edi +
jmp loc_10163C4  +
mov eax [ebp+var_C10] +
cmp [eax+0Ch] ebx +
jz loc_10163B0  +
push [ebp+var_C00]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push edi  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push 0FEh  +
lea eax [ebp+String] +
push eax  +
call sub_1018ECA  +
test eax eax +
jz loc_1015F32  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_10163A8  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
lea eax [ebp+String] +
jmp loc_10163B3  +
mov eax [esi+0Ch] +
mov [ebp+var_C08] eax +
jmp loc_101632F  +
mov eax [ebp+var_C60] +
test byte ptr [esi+1BE8h] 8 +
jz loc_1016448  +
cmp [ebp+var_BF4] ebx +
jz loc_1016448  +
cmp eax ebx +
jnz loc_1016448  +
push [ebp+var_C00]  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push 1  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push dword ptr [esi+0Ch]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_1018ECA  +
test eax eax +
jz loc_1015F32  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10182B0  +
test eax eax +
jnz loc_101643F  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [esi+0Ch] +
mov [ebp+var_C08] eax +
mov [ebp+var_C0C] ebx +
cmp [ebp+var_BF4] ebx +
jnz loc_101652C  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+NameBuffer] +
push eax  +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_101647D  +
push 90h  +
jmp loc_1015F1E  +
lea eax [ebp+NameBuffer] +
push 30h  +
mov [ebp+var_C00] eax +
call ds:MessageBeep  +
lea eax [ebp+NameBuffer] +
push eax  +
push 1ADh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push 1  +
push eax  +
call sub_1019E6A  +
add esp 14h +
lea eax [ebp+NameBuffer] +
push eax  +
push 1ABh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
push ebx  +
add eax 20h +
push 1  +
push eax  +
call sub_1019E6A  +
add esp 14h +
push 0FEh  +
lea eax [ebp+String] +
push eax  +
call sub_1018ECA  +
test eax eax +
jz loc_1015F32  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_10182B0  +
test eax eax +
jnz loc_1016520  +
push 20Ah  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
lea eax [ebp+String] +
mov [ebp+var_C08] eax +
push dword ptr [esi+4]  +
call sub_1013A9B  +
mov edi eax +
mov [ebp+var_BF4] edi +
cmp edi ebx +
jnz loc_1016556  +
cmp [ebp+var_BFC] ebx +
jz loc_1016550  +
push dword ptr [esi+4]  +
call sub_101C6C0  +
push edi  +
jmp loc_1015E5F  +
push 1  +
lea eax [ebp+var_C0C] +
push eax  +
push dword ptr [esi+4]  +
call sub_100E2F9  +
test eax eax +
jnz loc_10165EF  +
cmp [ebp+var_C0C] ebx +
jz loc_10165EF  +
call ds:__imp_GetLastError  +
cmp eax 5 +
jz loc_10165EF  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
cmp [ebp+var_BFC] ebx +
jz loc_10165A5  +
push dword ptr [esi+4]  +
call sub_101C6C0  +
push edi  +
call sub_1013238  +
cmp [ebp+var_C0C] 1 +
jnz loc_10165D5  +
push 0CFh  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
xor eax eax +
inc eax  +
jmp loc_10169FF  +
cmp [ebp+var_C0C] 2 +
jz loc_1015E64  +
cmp [ebp+var_C0C] 3 +
jz loc_1016176  +
lea eax [ebp+var_C64] +
push eax  +
lea eax [ebp+var_C68] +
push eax  +
lea eax [ebp+var_BF8] +
push eax  +
push esi  +
push edi  +
call sub_1015B0E  +
mov edi eax +
cmp edi ebx +
jnz loc_10169E2  +
cmp [ebp+var_C68] ebx +
jnz loc_10169E2  +
push 1F8h  +
lea eax [ebp+var_9F0] +
push ebx  +
push eax  +
mov [ebp+var_9F4] ebx +
call memset  +
mov eax [ebp+var_BF8] +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_C28] +
push edx  +
push offset dword_100209C  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jl loc_101672A  +
lea eax [ebp+var_9F4] +
push eax  +
lea eax [ebp+var_7F8] +
push eax  +
lea eax [esi+11E4h] +
push eax  +
call sub_100654D  +
cmp eax 1 +
jz loc_10169C2  +
mov eax [ebp+var_BF8] +
mov ecx [eax] +
lea edx [ebp+var_7F8] +
push edx  +
push eax  +
call dword ptr [ecx+80h]  +
mov edi eax +
cmp edi ebx +
jl loc_101672A  +
lea eax [ebp+var_7F8] +
push 5Ch  +
push eax  +
call ds:__imp_wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_10166BA  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_BF8] +
mov ecx [eax] +
lea edx [ebp+var_7F8] +
push edx  +
push eax  +
call dword ptr [ecx+90h]  +
mov edi eax +
cmp edi ebx +
jl loc_101672A  +
mov eax [ebp+var_BF8] +
mov ecx [eax] +
lea edx [ebp+var_9F4] +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov edi eax +
cmp edi ebx +
jl loc_101672A  +
cmp [ebp+var_C04] ebx +
jnz loc_1016707  +
mov ecx 20C0h +
cmp [esi+1BF0h] ebx +
jnz loc_101670C  +
mov ecx 0C0h +
cmp [esi+1BF8h] ebx +
jz loc_1016717  +
or ecx 2 +
mov eax [ebp+var_BF8] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+70h]  +
mov edi eax +
cmp edi ebx +
jge loc_1016749  +
push edi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
jmp loc_10169C2  +
mov eax [ebp+var_BF8] +
mov ecx [eax] +
cmp [ebp+var_C04] ebx +
jz loc_1016761  +
push ebx  +
push offset dword_1001DB4  +
jmp loc_101676D  +
push [ebp+var_C08]  +
push [ebp+var_C00]  +
push eax  +
call dword ptr [ecx+78h]  +
mov edi eax +
cmp edi ebx +
jge loc_10167BB  +
cmp edi 80041312h +
jz loc_10167BB  +
push edi  +
call ds:SetLastError  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1018C65  +
push 198h  +
call sub_1019FBD  +
jmp loc_10169B3  +
push ebx  +
push dword ptr [ebp+var_C40]  +
lea eax [ebp+var_CA0] +
push dword ptr [ebp+var_C3C]  +
push [ebp+var_C44]  +
push [ebp+var_C2C]  +
push [ebp+var_C34]  +
push dword ptr [ebp+var_C1C]  +
push dword ptr [ebp+var_C14]  +
push [ebp+var_C24]  +
push [ebp+var_C18]  +
push [ebp+var_C20]  +
push [ebp+var_C64]  +
push [ebp+var_C58]  +
push [ebp+var_C38]  +
push [ebp+var_C30]  +
push [ebp+arg_8]  +
push [ebp+var_BF8]  +
push eax  +
push [ebp+var_C10]  +
push esi  +
call sub_1014AAB  +
mov edi eax +
cmp edi ebx +
jnz loc_10169C2  +
mov eax [ebp+var_C28] +
mov ecx [eax] +
push 1  +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jge loc_1016987  +
push edi  +
call ds:SetLastError  +
call sub_1018081  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1019FD5  +
cmp edi 80041315h +
jnz loc_101689E  +
lea eax [esi+818h] +
push eax  +
push 207h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
jmp loc_10168CF  +
cmp edi 800706B5h +
jnz loc_10168E6  +
push dword ptr [esi+4]  +
lea eax [esi+818h] +
push eax  +
push 208h  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 14h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
jmp loc_1016947  +
lea edi [esi+818h] +
push edi  +
push 0FBh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
push 0D0h  +
call sub_1019FBD  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_BF4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+var_C28] +
cmp eax ebx +
jz loc_1016957  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_BF8] +
cmp eax ebx +
jz loc_1016967  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_BFC] ebx +
jz loc_1016977  +
push dword ptr [esi+4]  +
call sub_101C6C0  +
push [ebp+var_BF4]  +
call sub_1013238  +
jmp loc_1016176  +
lea eax [esi+818h] +
push eax  +
push 12Eh  +
call sub_1019FBD  +
push eax  +
lea eax [ebp+var_5F8] +
push 1FCh  +
push eax  +
call sub_1003F97  +
add esp 10h +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1018C65  +
mov eax [ebp+var_C28] +
cmp eax ebx +
jz loc_10169D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_BF8] +
cmp eax ebx +
jz loc_10169E2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_BFC] ebx +
jz loc_10169F2  +
push dword ptr [esi+4]  +
call sub_101C6C0  +
push [ebp+var_BF4]  +
call sub_1013238  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
mov edi ecx +
mov [edi] ebx +
test byte ptr [esi+1BE8h] 1 +
jz loc_1016A3A  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1BE8h] 2 +
jz loc_1016A4E  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1BE8h] 4 +
jz loc_1016A62  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1BE8h] 8 +
jz loc_1016A76  +
push 8  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1BE8h] 10h +
jz loc_1016A8A  +
push 10h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+9F4h] +
cmp eax ebx +
jz loc_1016AA9  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016AA9  +
push 80h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0BF0h] +
cmp eax ebx +
jz loc_1016AC8  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016AC8  +
push 200h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0DECh] +
cmp eax ebx +
jz loc_1016AE7  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016AE7  +
push 1000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0FE8h] +
cmp eax ebx +
jz loc_1016B06  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B06  +
push 2000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+11E4h] +
cmp eax ebx +
jz loc_1016B22  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B22  +
push 40h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+13F0h] +
cmp eax ebx +
jz loc_1016B41  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B41  +
push 400h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+15ECh] +
cmp eax ebx +
jz loc_1016B60  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B60  +
push 100h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+17E8h] +
cmp eax ebx +
jz loc_1016B7F  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B7F  +
push 200000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+19E4h] +
cmp eax ebx +
jz loc_1016B9E  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016B9E  +
push 100000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1BE4h] ebx +
jz loc_1016BB4  +
push 10000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1BF0h] ebx +
jz loc_1016BCA  +
push 4000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1BF4h] ebx +
jz loc_1016BE0  +
push 800h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1BF8h] ebx +
jz loc_1016BF6  +
push 10000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1C08h] ebx +
jz loc_1016C0C  +
push 40000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+28h] +
cmp eax ebx +
jz loc_1016C25  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016C25  +
push 20h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1C10h] ebx +
jz loc_1016C3B  +
push 8000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1BFCh] ebx +
jz loc_1016C51  +
push 80000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+1C0Ch] ebx +
jz loc_1016C67  +
push 20000h  +
add edi 4 +
push edi  +
call sub_101DB06  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 3 +
test byte ptr [esi+1404h] 1 +
jz loc_1016C9C  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1404h] 2 +
jz loc_1016CB0  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1404h] 4 +
jz loc_1016CC4  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1404h] 8 +
jz loc_1016CD8  +
push 8  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
test byte ptr [esi+1404h] 10h +
jz loc_1016CEC  +
push 10h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+1F4h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1016D0D  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016D0D  +
push 80h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+3F0h] +
cmp eax ebx +
jz loc_1016D2C  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016D2C  +
push 200h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+5ECh] +
cmp eax ebx +
jz loc_1016D4B  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016D4B  +
push 1000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+7E8h] +
cmp eax ebx +
jz loc_1016D6A  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016D6A  +
push 2000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+9E4h] +
cmp eax ebx +
jz loc_1016D86  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016D86  +
push 40h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0BF0h] +
cmp eax ebx +
jz loc_1016DA5  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016DA5  +
push 400h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0DECh] +
cmp eax ebx +
jz loc_1016DC4  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016DC4  +
push 100h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+0FE8h] +
cmp eax ebx +
jz loc_1016DE3  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016DE3  +
push 200000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
lea eax [esi+11E4h] +
cmp eax ebx +
jz loc_1016E02  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016E02  +
push 100000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13E4h] ebx +
jz loc_1016E18  +
push 10000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13E8h] ebx +
jz loc_1016E2E  +
push 4000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13ECh] ebx +
jz loc_1016E44  +
push 800h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13F0h] ebx +
jz loc_1016E5A  +
push 2000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13F4h] ebx +
jz loc_1016E70  +
push 4000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [esi+13F8h] ebx +
jz loc_1016E86  +
push 10000h  +
add edi 4 +
push edi  +
call sub_101DB06  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpString1] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_1016EC4  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016EC4  +
push ecx  +
push 1  +
push offset String2  +
push eax  +
call sub_10182D1  +
test eax eax +
jz loc_1016EC4  +
mov dword ptr [edi] 1 +
jmp loc_1016ECA  +
mov dword ptr [edi] 7 +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
test eax eax +
jz loc_1016EE7  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016EE7  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov eax [esi+8] +
test eax eax +
jz loc_1016F00  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016F00  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_1016F19  +
xor eax eax +
cmp ax [esi] +
jz loc_1016F19  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_8] 0 +
pop esi  +
jz loc_1016F2E  +
push 10000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_C] 0 +
jz loc_1016F42  +
push 80000h  +
add edi 4 +
push edi  +
call sub_101DB06  +
xor eax eax +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_1016F70  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016F70  +
mov dword ptr [edi] 2 +
jmp loc_1016F76  +
mov dword ptr [edi] 4 +
mov eax [esi+4] +
test eax eax +
jz loc_1016F8F  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016F8F  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov eax [esi+8] +
test eax eax +
jz loc_1016FA8  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016FA8  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_1016FC1  +
xor eax eax +
cmp ax [esi] +
jz loc_1016FC1  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_4] 0 +
jz loc_1016FD5  +
push 10000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_8] 0 +
jz loc_1016FE9  +
push 20000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_C] 0 +
jz loc_1016FFD  +
push 400000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_10] 0 +
jz loc_1017011  +
push 800000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_14] 0 +
jz loc_1017025  +
push offset __ImageBase  +
add edi 4 +
push edi  +
call sub_101DB06  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 5 +
mov eax [esi+4] +
test eax eax +
jz loc_101705D  +
xor ecx ecx +
cmp cx [eax] +
jz loc_101705D  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov eax [esi+8] +
test eax eax +
jz loc_1017076  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1017076  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_101708F  +
xor eax eax +
cmp ax [esi] +
jz loc_101708F  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_4] 0 +
jz loc_10170A3  +
push 10000000h  +
add edi 4 +
push edi  +
call sub_101DB06  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 6 +
mov eax [esi+4] +
test eax eax +
jz loc_10170DB  +
xor ecx ecx +
cmp cx [eax] +
jz loc_10170DB  +
push 1  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov eax [esi+8] +
test eax eax +
jz loc_10170F4  +
xor ecx ecx +
cmp cx [eax] +
jz loc_10170F4  +
push 2  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_101710D  +
xor ecx ecx +
cmp cx [eax] +
jz loc_101710D  +
push 4  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp dword ptr [esi+10h] 0 +
jz loc_1017121  +
push 8000000h  +
lea eax [edi+4] +
push eax  +
call sub_101DB06  +
cmp [ebp+arg_4] 0 +
jz loc_1017135  +
push 10000000h  +
add edi 4 +
push edi  +
call sub_101DB06  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ecx+4] +
push eax  +
push dword ptr [ecx]  +
push 1  +
call sub_101DB1C  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_10171B4  +
movzx eax cx +
mov [ebp-8] eax +
test edx edx +
jnz loc_1017233  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_1017211  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_1017206  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_1001DE8 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jz loc_1017233  +
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_1017233  +
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_1017233  +
call GetLastError  +
cmp eax 7Eh +
jz loc_1017222  +
cmp eax 0C1h +
jnz loc_1017275  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_1017239  +
mov [ebp+8] eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_1017242  +
mov dword ptr [ebp-4] 1 +
jmp loc_1017275  +
cmp dword ptr [ebp+8] 0 +
jz loc_1017275  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_101726A  +
call GetLastError  +
cmp eax 7Fh +
jz loc_101726A  +
cmp eax 0B6h +
jnz loc_1017271  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jnz loc_1017280  +
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp dword ptr [ebp-4] 0 +
jz loc_101728B  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
jmp loc_10172AE  +
push [ebp+arg_0]  +
call _callnewh  +
pop ecx  +
test eax eax +
jz loc_10172BD  +
push [ebp+arg_0]  +
call malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10172A1  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1017299  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp _free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call loc_1017366  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+0Ch] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_1001DEC +
mov [esi+8] eax +
test eax eax +
jz loc_101732D  +
cmp [ebp+arg_8] 0 +
jz loc_101732D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_1001DEC +
test eax eax +
jz loc_1017351  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_101735F  +
push esi  +
call ds:LocalFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
push dword ptr [ebp+8]  +
call sub_10172FF  +
push offset dword_1021E28  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001DEC +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov eax [eax+8] +
and dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
test eax eax +
jz loc_10173BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1017339  +
test byte ptr [ebp+8] 1 +
jz loc_10173E3  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101740B  +
test eax eax +
jnz loc_1017410  +
mov ecx [esi] +
test ecx ecx +
jz loc_1017408  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10173FC  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1029E90 +
push offset dword_1029E80  +
push dword_1029E8C  +
mov dword_1029E80 eax +
push offset dword_1029E70  +
push offset dword_1029E74  +
push offset dword_1029E6C  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1029E7C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1017498  +
cmp eax esi +
jnz loc_101748B  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101749B  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1017472  +
xor esi esi +
inc esi  +
mov eax dword_102A36C +
cmp eax esi +
jnz loc_10174AE  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10174E9  +
mov eax dword_102A36C +
test eax eax +
jnz loc_10174E3  +
mov dword_102A36C esi +
push offset dword_1001354  +
push offset dword_1001348  +
call sub_10173EF  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10174E9  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10175B3  +
mov dword_1029E88 esi +
mov eax dword_102A36C +
cmp eax esi +
jnz loc_101750D  +
push offset dword_1001344  +
push offset dword_1001310  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_102A36C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_101751A  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_102A374 ebx +
jz loc_101753B  +
push offset dword_102A374  +
call sub_1017979  +
pop ecx  +
test eax eax +
jz loc_101753B  +
push ebx  +
push 2  +
push ebx  +
call dword_102A374  +
push dword_1029E70  +
push dword_1029E74  +
push dword_1029E6C  +
call sub_1013C5D  +
add esp 0Ch +
mov dword_1029E84 eax +
cmp dword_1029E78 ebx +
jnz loc_1017599  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1029E84 eax +
xor ebx ebx +
cmp dword_1029E78 ebx +
jnz loc_1017599  +
push eax  +
call ds:_exit  +
cmp dword_1029E88 ebx +
jnz loc_10175A7  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1029E84 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jz loc_10175D0  +
xor eax eax +
jmp loc_101761D  +
mov eax ds:dword_100003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jnz loc_10175CC  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101760A  +
cmp ecx 20Bh +
jnz loc_10175CC  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10175CC  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1017618  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10175CC  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1029E78 eax +
call sub_1017BB0  +
push eax  +
call ds:__set_app_type  +
or dword_102A364 0FFFFFFFFh +
or dword_102A368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1029E98 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1029E94 +
mov [eax] ecx +
call sub_101DCE4  +
cmp dword_1029C98 0 +
jnz loc_1017676  +
push offset sub_101DCE4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1017A8C  +
xor eax eax +
retn   +
***
call sub_1017BEF  +
jmp sub_1017450  +
***
cmp ecx dword_1029C7C +
jnz loc_101769D  +
retn 0  +
jmp loc_1017C85  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_10176CE  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1029C7C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1029C7C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1029C7C +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1017692  +
jmp __EH_epilog3  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
jmp ds:free  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10178BE  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10178BE  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10178B8  +
cmp eax 19930521h +
jz loc_10178B8  +
cmp eax 19930522h +
jz loc_10178B8  +
cmp eax 1994000h +
jnz loc_10178BE  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1017880+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1017906  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1017902  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101796D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1017965  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101796F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1017955  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_10178F0  +
pop ecx  +
test eax eax +
jz loc_10179D6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1017930  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10179D6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10179DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1017692  +
push offset dword_1029C7C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_1017AA4  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1017BA3  +
cmp ecx 0FFFFFFFFh +
jz loc_1017BA3  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1017B9C  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1017B9C  +
cmp edx 10000000h +
jnb loc_1017B9C  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1017B9C  +
jmp loc_1017B97  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1017BE5  +
push eax  +
call sub_1017B4A  +
test eax eax +
jz loc_1017BE5  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1017BDA  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1017BE5  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1029C7C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1017C21  +
test eax ebx +
jz loc_1017C21  +
not eax  +
mov dword_1029C80 eax +
jmp loc_1017C7C  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1017C68  +
test dword_1029C7C ebx +
jnz loc_1017C6D  +
mov esi 0BB40E64Fh +
mov dword_1029C7C esi +
not esi  +
mov dword_1029C80 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1029FA0 eax +
mov dword_1029F9C ecx +
mov dword_1029F98 edx +
mov dword_1029F94 ebx +
mov dword_1029F90 esi +
mov dword_1029F8C edi +
mov word_1029FB8 ss +
mov word_1029FAC cs +
mov word_1029F88 ds +
mov word_1029F84 es +
mov word_1029F80 fs +
mov word_1029F7C gs +
pushf   +
pop dword_1029FB0  +
mov eax [ebp+0] +
mov dword_1029FA4 eax +
mov eax [ebp+4] +
mov dword_1029FA8 eax +
lea eax [ebp+8] +
mov dword_1029FB4 eax +
mov eax [ebp-320h] +
mov dword_1029EF0 10001h +
mov eax dword_1029FA8 +
mov dword_1029EAC eax +
mov dword_1029EA0 0C0000409h +
mov dword_1029EA4 1 +
mov eax dword_1029C7C +
mov [ebp-328h] eax +
mov eax dword_1029C80 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
jmp eax  +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_102A1D0 edi +
jnz loc_1017EE0  +
push dword_102A1D8  +
call sub_101B2AD  +
test eax eax +
jnz loc_1017EDC  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1017F74  +
push 42Bh  +
jmp loc_1017F6E  +
mov eax edi +
pop edi  +
retn   +
cmp dword_102A1D8 0 +
jnz loc_1017EC4  +
call sub_101B2CE  +
push eax  +
mov dword_102A1D8 eax +
call sub_101B2AD  +
test eax eax +
jz loc_1017F62  +
push 0  +
push offset dword_1001ED4  +
push dword_102A1D8  +
call sub_101B5F0  +
test eax eax +
jnz loc_1017F62  +
push 3  +
push dword_102A1D8  +
call sub_101B7BB  +
cmp eax edi +
jnz loc_1017F62  +
push 3  +
push dword_102A1D8  +
call sub_101B7BB  +
cmp eax 2 +
jnz loc_1017F62  +
push 3  +
push dword_102A1D8  +
call sub_101B7BB  +
cmp eax 3 +
jnz loc_1017F62  +
push 0  +
mov dword_102A1D0 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1017F74  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_102A1D0 0 +
push esi  +
jz loc_1017FE2  +
push 3  +
push dword_102A1D8  +
call sub_101B916  +
cmp eax [ebp+arg_0] +
jbe loc_1017FE2  +
push [ebp+arg_0]  +
push 3  +
push dword_102A1D8  +
call sub_101BE38  +
test eax eax +
jz loc_1017FE2  +
push [ebp+arg_0]  +
push 3  +
push dword_102A1D8  +
call sub_101BACE  +
mov esi eax +
test esi esi +
jz loc_1017FE2  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1017FE2  +
mov eax [esi+0Ch] +
jmp loc_1017FE4  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_102A1D8 +
test eax eax +
jz loc_101800F  +
push eax  +
call sub_101B2AD  +
test eax eax +
jz loc_101800F  +
push 0  +
push dword_102A1D8  +
call sub_101B983  +
retn   +
mov eax offset dword_1001ED4 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:__imp_GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1018043  +
call esi  +
test eax eax +
jnz loc_101803F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1018076  +
call sub_1017EA7  +
test eax eax +
jz loc_101803F  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_102A1D8  +
call sub_101BBBE  +
test eax eax +
jnz loc_101806C  +
call esi  +
test eax eax +
jnz loc_101803F  +
push 8  +
jmp loc_1018039  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1017EA7  +
test eax eax +
jz loc_1018100  +
push ebx  +
push esi  +
mov esi ds:__imp_GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_10180DA  +
cmp [ebp+hMem] edi +
jz loc_10180F2  +
push [ebp+hMem]  +
call sub_101801A  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_10180FE  +
cmp [ebp+hMem] edi +
jz loc_10180F2  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_10180F2  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_10180FC  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1018081  +
test eax eax +
jz loc_101812A  +
call sub_1017FEE  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1029C9C +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1029CA0 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_102A1DC +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1018208  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018204  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1018285  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1018279  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1018279  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1018281  +
sub edi 0 +
jz loc_1018255  +
dec edi  +
jz loc_1018251  +
dec edi  +
jnz loc_1018281  +
push 0FFFFFFF4h  +
jmp loc_1018257  +
push 0FFFFFFF5h  +
jmp loc_1018257  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1018281  +
cmp eax 0FFFFFFFFh +
jz loc_1018281  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1018283  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_101829E  +
xor eax eax +
jmp loc_10182A7  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_10182BF  +
xor eax eax +
jmp loc_10182C8  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_101830F  +
cmp [ebp+lpString2] 0 +
jz loc_101830F  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10182F5  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1018323  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018321  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_101836A  +
cmp [ebp+lpString2] 0 +
jz loc_101836A  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1018350  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_101837E  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101837C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_10183D9  +
cmp [ebp+lpString2] 0 +
jz loc_10183D9  +
mov eax [ebp+arg_C] +
xor edx edx +
cmp [ebp+arg_8] 1 +
setz dl  +
test eax eax +
jnz loc_10183AB  +
or eax 0FFFFFFFFh +
cmp dword_1029C9C 5 +
push 7Fh  +
pop ecx  +
jnz loc_10183C5  +
cmp dword_1029CA0 0 +
jnz loc_10183C5  +
mov ecx 409h +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push edx  +
push ecx  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_10183ED  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10183EB  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_10184BA  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_10184BA  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1018425  +
cmp [eax] edi +
jnz loc_10184BA  +
mov eax [eax] +
cmp eax edi +
jz loc_1018433  +
cmp eax 1 +
jbe loc_10184A1  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_101844A  +
cmp esi edi +
jz loc_101844A  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1018460  +
push edi  +
push [ebp+lpString]  +
call sub_101828F  +
cmp eax esi +
jle loc_1018460  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_10184B3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018488  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_10184CC  +
cmp esi edi +
jz loc_10184CC  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_10184CC  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_10184CE  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_10184AE  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10184CC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10184F3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018515  +
push 57h  +
jmp loc_101850F  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1018515  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1018517  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1018546  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10185BA  +
push 57h  +
call ds:SetLastError  +
jmp loc_10185BA  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10185BA  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10185BC  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_10185A1  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_10185A1  +
push 570h  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_10185B3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10185B3  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10185EB  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10185E6  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_101860D  +
push [ebp+lpMem]  +
call sub_10184DA  +
test eax eax +
jz loc_10185E6  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10185E6  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1018646  +
cmp [ebp+arg_4] eax +
jz loc_1018642  +
mov dl [ebx] +
test dl dl +
jz loc_1018642  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101862A  +
test esi esi +
jnz loc_101864D  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1018659  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1018680  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10186C3  +
push 57h  +
jmp loc_10186BD  +
push 0  +
push esi  +
call sub_10182B0  +
test eax eax +
jz loc_10186B8  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10186B8  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10186A8  +
call ds:StrChrIW  +
jmp loc_10186AE  +
call ds:StrChrW  +
test eax eax +
jz loc_10186B8  +
sub eax esi +
sar eax 1 +
jmp loc_10186C6  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_1018735  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_1018735  +
push esi  +
push edi  +
call sub_10182B0  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_101872E  +
push esi  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_101872E  +
push esi  +
push ebx  +
call sub_10182B0  +
cmp [ebp+arg_C] eax +
jnb loc_101872E  +
cmp [ebp+arg_0] esi +
jbe loc_101872E  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1018665  +
cmp eax 0FFFFFFFFh +
jnz loc_101874A  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1018712  +
push 490h  +
jmp loc_1018741  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018747  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_10187BD  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_10187BD  +
push 0  +
push edi  +
call sub_10182B0  +
push 0  +
push ebx  +
mov esi eax +
call sub_10182B0  +
test eax eax +
jz loc_10187B0  +
test esi esi +
jz loc_10187B0  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_10187B0  +
sub esi ecx +
cmp esi eax +
jb loc_10187B0  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_10187A6  +
call ds:StrStrIW  +
jmp loc_10187AC  +
call ds:StrStrW  +
test eax eax +
jnz loc_10187B7  +
push 490h  +
jmp loc_10187C9  +
sub eax edi +
sar eax 1 +
jmp loc_10187D2  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10187CF  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_101880D  +
push esi  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_101880D  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_101880F  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_101883C  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018838  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101888A  +
cmp dword ptr [esi] 0 +
jnz loc_1018846  +
xor eax eax +
inc eax  +
jmp loc_101888A  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_101886A  +
push dword ptr [esi]  +
call sub_10185C9  +
cmp eax 0FFFFFFFFh +
jnz loc_101886E  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1018889  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_1018959  +
mov eax [esi] +
cmp eax edi +
jz loc_1018959  +
cmp [ebp+dwBytes] edi +
jnz loc_10188C7  +
push esi  +
call sub_1018819  +
jmp loc_101896D  +
push eax  +
call sub_10184DA  +
test eax eax +
jnz loc_10188D8  +
mov [esi] edi +
jmp loc_101896B  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_101896B  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1018916  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101890D  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101896B  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_101896D  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_10188FB  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_10188FB  +
push 570h  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_101890D  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101896B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1018990  +
cmp edx 7FFFFFFFh +
jbe loc_1018995  +
mov eax 80070057h +
test eax eax +
jl loc_10189AB  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1018616  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10189CA  +
cmp edx 7FFFFFFFh +
jbe loc_10189CF  +
mov eax 80070057h +
test eax eax +
jl loc_10189E5  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_101DE07  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1018A07  +
cmp edx ebx +
jbe loc_1018A0C  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_1018A43  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_1018A30  +
cmp [eax] cx +
jz loc_1018A2C  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1018A22  +
cmp esi ecx +
jnz loc_1018A39  +
mov [ebp+arg_4] 80070057h +
jmp loc_1018A3D  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_1018A45  +
xor ecx ecx +
test eax eax +
jl loc_1018A59  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_101DE07  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1018A79  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1018A7E  +
mov eax 80070057h +
test eax eax +
jl loc_1018A98  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_101F9D0  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_102A1D8  +
call sub_101B2AD  +
cmp eax 1 +
jnz loc_1018B29  +
push edi  +
push 3  +
push dword_102A1D8  +
call sub_101B916  +
mov edi eax +
test edi edi +
jz loc_1018B1E  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_102A1D8  +
call sub_101BE38  +
cmp eax 10000h +
jnz loc_1018B17  +
push esi  +
push 3  +
push dword_102A1D8  +
call sub_101BACE  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1018B17  +
add eax 0Ch +
push eax  +
call sub_1018819  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
push esi  +
push 3  +
push dword_102A1D8  +
call sub_101B8DF  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1018ACD  +
pop esi  +
push offset dword_102A1D8  +
call sub_101B343  +
pop edi  +
cmp dword_102A1D4 1 +
jnz loc_1018B38  +
call WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push 1  +
push dword ptr [ebp+wMatch]  +
push esi  +
call sub_1018665  +
cmp eax 0FFFFFFFFh +
jnz loc_1018B62  +
xor eax eax +
jmp loc_1018B65  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1018756  +
cmp eax 0FFFFFFFFh +
jnz loc_1018B8F  +
xor eax eax +
jmp loc_1018B92  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1018BCF  +
cmp [ebp+arg_4] 0 +
jz loc_1018BCF  +
cmp [ebp+arg_8] 0 +
jle loc_1018BCF  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_101897A  +
test eax eax +
jge loc_1018BD5  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1018BD1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1018C12  +
cmp [ebp+arg_4] 0 +
jz loc_1018C12  +
cmp [ebp+arg_8] 0 +
jle loc_1018C12  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10189B4  +
test eax eax +
jge loc_1018C18  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1018C14  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1018C55  +
cmp [ebp+arg_4] 0 +
jz loc_1018C55  +
cmp [ebp+arg_8] 0 +
jle loc_1018C55  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10189EE  +
test eax eax +
jge loc_1018C5B  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1018C57  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1018EAA  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1018EAA  +
push [ebp+hConsoleOutput]  +
call sub_10181E1  +
cmp eax 1 +
jnz loc_1018D97  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1018CAE  +
push 0FFFFFFF5h  +
jmp loc_1018CBE  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1018D7F  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_10182B0  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1018CF2  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1018D57  +
call ds:__imp_GetLastError  +
cmp eax 8 +
jnz loc_1018D7B  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_10182B0  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1018D57  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1018D29  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1018D5F  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1018D5F  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_1018D19  +
xor eax eax +
inc eax  +
jmp loc_1018EBE  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1018108  +
call sub_1018A9F  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1018D65  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018EBC  +
push 42Bh  +
jmp loc_1018EB6  +
push edi  +
push ebx  +
call sub_10182B0  +
push 100h  +
push edi  +
mov esi offset unk_102A1E8 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1018D57  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1018DD7  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1018E34  +
cmp eax ebx +
jbe loc_1018E42  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1018E14  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1018E17  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1018DE0  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018E34  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1018D68  +
cmp eax [ebp+cchWideChar] +
jnb loc_1018E4A  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1018E34  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_0  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1018DC2  +
jmp loc_1018D57  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018EBC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_1018F29  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1018F22  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1019124  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_10190E1  +
cmp edi 0Fh +
jz loc_1018F59  +
cmp edi 3 +
jz loc_1018F59  +
cmp edi 0FFFFFFFFh +
jz loc_1018F59  +
mov [ebp+var_40] 1 +
jmp loc_1018F75  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_10190E1  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_1018FE7  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_10190E1  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_10190E5  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_10183F6  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_1018FFF  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_10190D5  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_10190E5  +
cmp ax 8 +
jnz loc_101908D  +
cmp [ebp+var_28] 0 +
jz loc_1018F93  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1018A64  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1018A64  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1018A64  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_1018F93  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_10190A5  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset Buffer  +
jmp loc_10190C9  +
cmp ax 0Ah +
jz loc_1018F93  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_1018F93  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1019123  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001EE4  +
lea eax [ebp+var_18] +
push eax  +
call sub_1018BDF  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1019151  +
cmp [ebp+arg_8] 0 +
jnz loc_1019151  +
xor eax eax +
jmp loc_10192A5  +
call sub_1017EA7  +
test eax eax +
jz loc_101914A  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_102A1D8  +
call sub_101B916  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_101919E  +
push esi  +
push dword_102A1D8  +
call sub_101B94A  +
test eax eax +
jz loc_1019269  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_101B836  +
cmp eax 0FFFFFFFFh +
jz loc_1019269  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BE38  +
mov edi offset aBuffer +
test eax eax +
jz loc_10191EC  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BACE  +
mov esi eax +
test esi esi +
jz loc_1019269  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1019269  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_101922B  +
mov edi [ebp+arg_8] +
jmp loc_1019236  +
push 10h  +
call sub_1018520  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1019269  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_1018B9C  +
push esi  +
push ebx  +
push 3  +
push dword_102A1D8  +
call sub_101BD2B  +
test eax eax +
jnz loc_10191CB  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1018819  +
jmp loc_1019269  +
push 0  +
push ebx  +
call sub_10182B0  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_101924C  +
cmp edi 100h +
jbe loc_1019263  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1019263  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_101926D  +
call sub_1018520  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1019269  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1019278  +
xor eax eax +
jmp loc_10192A2  +
lea eax [esi+0Ch] +
push eax  +
call sub_1018894  +
jmp loc_101925C  +
test ebx ebx +
jz loc_1019288  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_1018BDF  +
jmp loc_101929F  +
cmp [ebp+arg_C] 1 +
jnz loc_101929F  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1001EEC +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_10193AB  +
push eax  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_10193AB  +
cmp [ebp+lpStart] 0 +
jz loc_101930A  +
push 0  +
push [ebp+lpStart]  +
call sub_10182B0  +
test eax eax +
jnz loc_1019310  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_101931F  +
cmp edi 1 +
jnz loc_1019341  +
cmp word ptr [ebx] 0 +
jz loc_101933E  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_101933E  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1019325  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_101934B  +
cmp edi 2 +
jnz loc_101938D  +
cmp edi 2 +
jnz loc_1019352  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_101938D  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1019373  +
cmp [ebp+var_14] 0 +
jnz loc_1019377  +
mov [ebp+var_14] esi +
jmp loc_1019377  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_101935A  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_101938D  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_10193A7  +
push 0  +
push [ebp+var_18]  +
call sub_10182B0  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_1018BDF  +
mov eax ebx +
jmp loc_10193B0  +
mov eax offset dword_1001ED4 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1019408  +
cmp [ebp+arg_4] edi +
jz loc_1019408  +
push [ebp+arg_C]  +
push offset dword_1001ED4  +
push esi  +
call sub_1018BDF  +
cmp [ebp+arg_8] edi +
jbe loc_1019404  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_1018C22  +
test eax eax +
jz loc_1019404  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_10193EE  +
mov eax esi +
jmp loc_101941F  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101941A  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_101944D  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019449  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10194B4  +
cmp [ebp+arg_0] esi +
jnz loc_101945F  +
push [ebp+arg_4]  +
call sub_101801A  +
xor eax eax +
inc eax  +
jmp loc_10194B4  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1019139  +
mov edi eax +
test edi edi +
jz loc_101949F  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_101FABB  +
cmp eax 8007007Ah +
jz loc_1019460  +
test eax eax +
jge loc_10194AD  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10194B3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101949B  +
push 8  +
jmp loc_1019495  +
push edi  +
call sub_101801A  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1019139  +
mov ebx eax +
test ebx ebx +
jnz loc_10194E4  +
push 8  +
pop eax  +
jmp loc_1019526  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1019139  +
mov esi eax +
test esi esi +
jz loc_10194DF  +
push esi  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_1019526  +
push ebx  +
call sub_101801A  +
test eax eax +
jz loc_10194DF  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_101955C  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019552  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
jmp loc_1019669  +
call sub_1017EA7  +
test eax eax +
jz loc_1019552  +
push esi  +
push 1  +
push dword_102A1D8  +
call sub_101B916  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_10195B9  +
push 1  +
push dword_102A1D8  +
call sub_101B94A  +
cmp eax ebx +
jz loc_101959D  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_101B836  +
cmp eax 0FFFFFFFFh +
jnz loc_10195B9  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_10195AF  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
jmp loc_1019668  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1019139  +
mov edi eax +
cmp edi ebx +
jz loc_101962D  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1019610  +
call ds:__imp_GetLastError  +
cmp eax 716h +
jnz loc_101963F  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_101963F  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_10195BF  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_102A1D8  +
call sub_101BD65  +
test eax eax +
jnz loc_1019646  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101963F  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
jmp loc_1019667  +
cmp [ebp+lpString] ebx +
jz loc_1019657  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_102A1D8  +
call sub_101BB05  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1019818  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
test eax eax +
jz loc_1019818  +
call sub_1017EA7  +
test eax eax +
jz loc_101982A  +
call sub_1017EA7  +
test eax eax +
jz loc_10197D2  +
push 3  +
pop esi  +
push esi  +
push dword_102A1D8  +
call sub_101B916  +
mov edi eax +
cmp edi ebx +
ja loc_10196F5  +
push esi  +
push dword_102A1D8  +
call sub_101B94A  +
cmp eax ebx +
jz loc_10197D2  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_101B836  +
cmp eax 0FFFFFFFFh +
jz loc_10197D2  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BE38  +
mov edi offset aBuffer +
test eax eax +
jz loc_101976D  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BACE  +
mov esi eax +
cmp esi ebx +
jz loc_10197D2  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10197D2  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1019759  +
cmp edi 100h +
jbe loc_10197BA  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10197BA  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10197AA  +
call sub_1018520  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10197B5  +
push 10h  +
call sub_1018520  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10197D2  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1018B9C  +
push esi  +
push ebx  +
push 3  +
push dword_102A1D8  +
call sub_101BD2B  +
test eax eax +
jnz loc_1019722  +
lea eax [ebp+var_8] +
push eax  +
call sub_1018819  +
jmp loc_10197D2  +
lea eax [esi+0Ch] +
push eax  +
call sub_1018894  +
test eax eax +
jz loc_10197D2  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10197D2  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1018BDF  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10197E0  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101982A  +
push 8  +
jmp loc_1019824  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1019818  +
cmp [ebp+var_4] ebx +
jz loc_1019813  +
push ebx  +
push [ebp+var_4]  +
call sub_10182B0  +
test eax eax +
jnz loc_1019818  +
fld  qword ptr [ebp-0Ch] +
jmp loc_101982C  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101982A  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1019673  +
fstp  st +
call ds:__imp_GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1019A21  +
cmp [ebp+lpString] ebx +
jz loc_1019A21  +
call sub_1017EA7  +
test eax eax +
jz loc_1019A33  +
call sub_1017EA7  +
test eax eax +
jz loc_10199B7  +
push 3  +
pop esi  +
push esi  +
push dword_102A1D8  +
call sub_101B916  +
mov edi eax +
cmp edi ebx +
ja loc_10198DA  +
push esi  +
push dword_102A1D8  +
call sub_101B94A  +
cmp eax ebx +
jz loc_10199B7  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_101B836  +
cmp eax 0FFFFFFFFh +
jz loc_10199B7  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BE38  +
mov edi offset aBuffer +
test eax eax +
jz loc_1019952  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BACE  +
mov esi eax +
cmp esi ebx +
jz loc_10199B7  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10199B7  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_101993E  +
cmp edi 100h +
jbe loc_101999F  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_101999F  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_101998F  +
call sub_1018520  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_101999A  +
push 10h  +
call sub_1018520  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10199B7  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1018B9C  +
push esi  +
push ebx  +
push 3  +
push dword_102A1D8  +
call sub_101BD2B  +
test eax eax +
jnz loc_1019907  +
lea eax [ebp+var_8] +
push eax  +
call sub_1018819  +
jmp loc_10199B7  +
lea eax [esi+0Ch] +
push eax  +
call sub_1018894  +
test eax eax +
jz loc_10199B7  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10199B7  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1018BDF  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10199C5  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019A33  +
push 8  +
jmp loc_1019A2D  +
push 3  +
push ebx  +
push esi  +
call sub_10192AE  +
push ebx  +
push esi  +
call sub_10182B0  +
test eax eax +
jz loc_1019A21  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10199F9  +
call ds:wcstol  +
jmp loc_10199FF  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1019A21  +
cmp [ebp+var_4] ebx +
jz loc_1019A1D  +
push ebx  +
push [ebp+var_4]  +
call sub_10182B0  +
test eax eax +
jnz loc_1019A21  +
mov eax esi +
jmp loc_1019A35  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019A33  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_1019C04  +
cmp [ebp+lpString] ebx +
jz loc_1019C04  +
call sub_1017EA7  +
test eax eax +
jz loc_1019B90  +
push 3  +
pop esi  +
push esi  +
push dword_102A1D8  +
call sub_101B916  +
mov edi eax +
cmp edi ebx +
ja loc_1019AB3  +
push esi  +
push dword_102A1D8  +
call sub_101B94A  +
cmp eax ebx +
jz loc_1019B90  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_101B836  +
cmp eax 0FFFFFFFFh +
jz loc_1019B90  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BE38  +
mov edi offset aBuffer +
test eax eax +
jz loc_1019B2B  +
push ebx  +
push esi  +
push dword_102A1D8  +
call sub_101BACE  +
mov esi eax +
cmp esi ebx +
jz loc_1019B90  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1019B90  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1019B17  +
cmp edi 100h +
jbe loc_1019B78  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1019B78  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1019B68  +
call sub_1018520  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1019B73  +
push 10h  +
call sub_1018520  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1019B90  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1018B9C  +
push esi  +
push ebx  +
push 3  +
push dword_102A1D8  +
call sub_101BD2B  +
test eax eax +
jnz loc_1019AE0  +
lea eax [ebp+var_8] +
push eax  +
call sub_1018819  +
jmp loc_1019B90  +
lea eax [esi+0Ch] +
push eax  +
call sub_1018894  +
test eax eax +
jz loc_1019B90  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1019B90  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1018BDF  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1019B9E  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019C16  +
push 8  +
jmp loc_1019C10  +
push 3  +
push ebx  +
push esi  +
call sub_10192AE  +
push ebx  +
push esi  +
call sub_10182B0  +
test eax eax +
jz loc_1019C16  +
cmp [ebp+arg_8] ebx +
jnz loc_1019BBD  +
cmp word ptr [esi] 2Dh +
jz loc_1019C16  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_1019BDD  +
call ds:wcstol  +
jmp loc_1019BE3  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1019C16  +
cmp [ebp+var_4] ebx +
jz loc_1019BFF  +
push ebx  +
push [ebp+var_4]  +
call sub_10182B0  +
test eax eax +
jnz loc_1019C16  +
xor eax eax +
inc eax  +
jmp loc_1019C18  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019C16  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_1019CE2  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_1019CE2  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10182B0  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1019139  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1019C73  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019CF4  +
push 8  +
jmp loc_1019CEE  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_10182B0  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1019139  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1019C61  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_1 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1018A64  +
add esp 10h +
test eax eax +
jge loc_1019CB2  +
movzx eax ax +
push eax  +
jmp loc_1019CEE  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1018A64  +
add esp 10h +
test eax eax +
jl loc_1019CAC  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1018756  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_1019CF6  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019CF4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_1019D48  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019D3E  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
jmp loc_1019E55  +
push ecx  +
call sub_10187DE  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_1019D59  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_1019139  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_1019D87  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_1019DE2  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_1019139  +
mov esi eax +
test esi esi +
jnz loc_1019DA3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019D99  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001ED4 +
jmp loc_1019E54  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset asc_10016CC  +
push esi  +
call sub_10193C6  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_1019DCB  +
push esi  +
push [ebp+var_10]  +
call sub_1018BDF  +
push edi  +
push [ebp+var_18]  +
jmp loc_1019DD8  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_1018BDF  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_1018C22  +
jmp loc_1019E41  +
xor ebx ebx +
cmp eax esi +
jbe loc_1019E41  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
lea eax [ebp+String] +
push eax  +
call sub_10187DE  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_1019E26  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_1018C22  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_1019DEE  +
cmp ebx [ebp+arg_4] +
jnb loc_1019E41  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset asc_10016CC  +
push [ebp+var_10]  +
call sub_1018C22  +
dec esi  +
jnz loc_1019E30  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_1018BDF  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1017692  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1019F71  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1019F71  +
cmp [ebp+arg_4] ebx +
jnz loc_1019E9C  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
jmp loc_1019F85  +
cmp [ebp+arg_8] ebx +
jnz loc_1019F31  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1019139  +
mov edi eax +
test edi edi +
jz loc_1019F1E  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1019F0E  +
call ds:__imp_GetLastError  +
test eax eax +
jz loc_1019F2C  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_1019F83  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1019EA9  +
push edi  +
jmp loc_1019E8F  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019F83  +
push 8  +
jmp loc_1019F7D  +
xor eax eax +
inc eax  +
jmp loc_1019F85  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1019139  +
mov edi eax +
test edi edi +
jz loc_1019F1E  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_101FABB  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1019F31  +
test eax eax +
jge loc_1019F18  +
movzx eax ax +
push eax  +
jmp loc_1019F7D  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_1019F83  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_102A1E4  +
mov eax dword_102A1E4 +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_101952F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1019F8E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_101A051  +
test [ebp+arg_4] 0F0000h +
jz loc_101A051  +
test [ebp+arg_4] 10000h +
jz loc_1019FF9  +
call sub_1018081  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_101A00B  +
push 1389h  +
jmp loc_101A02A  +
test al 4 +
jz loc_101A016  +
push 138Ah  +
jmp loc_101A02A  +
test al 2 +
jz loc_101A021  +
push 138Ch  +
jmp loc_101A02A  +
test al 8 +
jz loc_101A040  +
push 138Bh  +
call sub_1019FBD  +
push eax  +
push offset aS_2  +
push ebx  +
push ebx  +
push esi  +
call sub_1019E6A  +
add esp 14h +
call sub_1017FEE  +
push eax  +
push esi  +
call sub_1018C65  +
mov eax ebx +
pop ebx  +
jmp loc_101A065  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A063  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_101A09D  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A095  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_101A095  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001F08  +
call sub_1018665  +
cmp eax 0FFFFFFFFh +
jz loc_101A095  +
xor eax eax +
inc eax  +
jmp loc_101A097  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_101A0EB  +
movzx eax ds:byte_101A0FA[eax] +
jmp ds:off_101A0F2[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_101A0ED  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_101A18E  +
cmp [ebp+arg_4] ebx +
jnz loc_101A18E  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1018665  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_101A148  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_10182B0  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1019139  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_101A16B  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A19C  +
push 8  +
jmp loc_101A19A  +
lea ecx [esi+1] +
push ecx  +
push offset asc_10013E0  +
push eax  +
call sub_1018BDF  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1018C22  +
mov eax [ebp+arg_4] +
jmp loc_101A19E  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A19C  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_101A1E3  +
cmp ecx edi +
jnz loc_101A1E3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A1DC  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_101A446  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_101A1CE  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_101A442  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_101A44C  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_101832C  +
test eax eax +
jnz loc_101A2FE  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_101A2FE  +
cmp [edi+4] ebx +
jnz loc_101A2FE  +
cmp [edi+8] ebx +
jnz loc_101A2FE  +
cmp [edi+0Ch] ebx +
jnz loc_101A2FE  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_101A279  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_101A2FE  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_101A2FE  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_101A28E  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_101A2FE  +
mov edx eax +
or edx ecx +
jz loc_101A29F  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_101A2FE  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_101A2B4  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_101A2FE  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_101A2C0  +
xor eax eax +
or ebx eax +
jnz loc_101A2FE  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_101A2FE  +
jmp ds:off_101A46E[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_101A317  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_101A2FE  +
cmp [edi-10h] ecx +
jnz loc_101A2FE  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_101A336  +
cmp eax 2 +
jnb loc_101A336  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A310  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101A445  +
mov eax [edi-10h] +
test eax eax +
jz loc_101A2FE  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_101A336  +
push dword ptr [eax]  +
call sub_101B2AD  +
test eax eax +
jz loc_101A2FE  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_101A346  +
cmp [edi-14h] ecx +
jz loc_101A2FE  +
xor eax eax +
or ebx eax +
jnz loc_101A42C  +
cmp dword ptr [edi-24h] 1 +
jnz loc_101A2FE  +
and esi 20h +
or esi eax +
jnz loc_101A2FE  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_101A42C  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_101A2FE  +
jmp loc_101A42C  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_101A464  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_101A2FE  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_101A2FE  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_101A2FE  +
mov edx [edi-10h] +
test edx edx +
jz loc_101A2FE  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_101A3D4  +
push dword ptr [edx]  +
call sub_101B2AD  +
test eax eax +
jz loc_101A2FE  +
jmp loc_101A42C  +
cmp dword ptr [edi-24h] 1 +
ja loc_101A2FE  +
and esi 20h +
xor eax eax +
jmp loc_101A424  +
cmp dword ptr [edi-8] 0 +
jz loc_101A2FE  +
cmp dword ptr [edi-4] 0 +
jnz loc_101A42C  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_101A42C  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_101A2FE  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_101A2FE  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_101A2FE  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_101A1FD  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A310  +
push 42Bh  +
jmp loc_101A30A  +
push 78h  +
jmp loc_101A30A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_101A4E1  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A4D5  +
push 57h  +
call ebx  +
call sub_1018081  +
xor eax eax +
jmp loc_101AA45  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_101AA2F  +
cmp eax edi +
jz loc_101AA2F  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_101A580  +
cmp [ebp+lpString2] 0 +
jnz loc_101A580  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_101A580  +
cmp dword ptr [ebp+lpString] edx +
jz loc_101A55E  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101A55E  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1019FBD  +
push eax  +
push 2  +
call sub_101942A  +
add esp 10h +
jmp loc_101A574  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101A56F  +
push 42Bh  +
call ebx  +
call sub_1018081  +
push 800401E4h  +
call ebx  +
jmp loc_101AA42  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_101A598  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_101A5A3  +
jmp loc_101AA2F  +
cmp dword ptr [esi+24h] 0 +
jz loc_101A5A9  +
cmp ecx 9 +
jz loc_101A5A9  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_101AA2F  +
jmp ds:off_101AA4B[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_101A617  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_101A617  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1019139  +
test eax eax +
jnz loc_101A5F7  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AA3D  +
push 8  +
call ds:SetLastError  +
jmp loc_101AA3D  +
push 3  +
push offset asc_1001EEC  +
push eax  +
call sub_10192AE  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AA3D  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_101A692  +
test ebx ebx +
jz loc_101AA2A  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_1019C24  +
test eax eax +
jnz loc_101A692  +
cmp dword ptr [ebp+lpString] eax +
jz loc_101A669  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101A669  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1019FBD  +
push eax  +
push 3  +
call sub_101942A  +
add esp 14h +
jmp loc_101A682  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1019FBD  +
push eax  +
push 2  +
call sub_101942A  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_101AA42  +
test ebx ebx +
jz loc_101AA2A  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_101A6EB  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_101A6EB  +
cmp dword ptr [ebp+lpString] eax +
jz loc_101A6D1  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_101A6D1  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_101A672  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1019FBD  +
push eax  +
push 1  +
call sub_101942A  +
add esp 0Ch +
jmp loc_101A682  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_101A73B  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_101A71E  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_101BEFB  +
cmp eax 0FFFFFFFFh +
jnz loc_101AA2A  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_101B5F0  +
cmp eax 0FFFFFFFFh +
jnz loc_101AA2A  +
jmp loc_101A5DC  +
cmp [ebp+var_C] ecx +
jz loc_101A77A  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_101A77A  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_101A76B  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_101A76B  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_101A672  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_101A6D9  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_101A7A4  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1018520  +
test eax eax +
jz loc_101A5DC  +
mov [esi+2Ch] eax +
jmp loc_101A7AA  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_1018BDF  +
jmp loc_101AA2A  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_101AA2A  +
push 0  +
push ebx  +
call sub_10182B0  +
test eax eax +
jz loc_101A883  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1019A41  +
test eax eax +
jz loc_101A883  +
push 0Ah  +
push ebx  +
call sub_101985B  +
cmp [ebp+var_C] 1 +
jnz loc_101A805  +
mov dword ptr [ebp+String2] eax +
jmp loc_101A808  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_101A86D  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_101A846  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_101A833  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_101BE6F  +
jmp loc_101A83D  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_101BE92  +
cmp eax 0FFFFFFFFh +
jnz loc_101AA2A  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_101A85E  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_101B667  +
jmp loc_101A72D  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_101B6BC  +
jmp loc_101A72D  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_101A87C  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_101AA2A  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_101A895  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_101A8E9  +
cmp dword ptr [ebp+lpString] eax +
jz loc_101A8B7  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101A8B7  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_101A672  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_101A6D9  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_101AA2A  +
push ebx  +
call sub_1019838  +
test eax eax +
jnz loc_101A922  +
and edi 10h +
or edi eax +
jz loc_101A8F3  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_101A8F3  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_101AA44  +
cmp dword ptr [ebp+lpString] eax +
jz loc_101A915  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101A915  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_101A672  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_101A6D9  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_101A933  +
call sub_1019673  +
fstp  [ebp+var_18] +
jmp loc_101A93B  +
call sub_1019673  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_101A9B1  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_101A982  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_101A96B  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_101BEB5  +
jmp loc_101A979  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_101BED8  +
cmp eax 0FFFFFFFFh +
jnz loc_101AA2A  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_101A99E  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_101B711  +
jmp loc_101A72D  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_101B766  +
jmp loc_101A72D  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_101A9C1  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_101AA2A  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_101AA2A  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_101AA44  +
cmp [ebp+lpString2] 0 +
jz loc_101AA21  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_101AA02  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101AA02  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_101A672  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AA17  +
push 42Bh  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_101A682  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_101AA44  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AA3D  +
push 57h  +
call ebx  +
call sub_1018081  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_101AB39  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_101AB39  +
cmp [ebp+arg_8] edi +
jz loc_101AB39  +
push [ebp+arg_8]  +
call sub_101A06F  +
test eax eax +
jnz loc_101AABE  +
push 490h  +
jmp loc_101AB45  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_101AAB4  +
add esi 20h +
jmp loc_101AACD  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_101AB1A  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_101AAE5  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_101AB0A  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_101AB0A  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_1019C24  +
cmp eax 1 +
jz loc_101AB34  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_101AACB  +
jmp loc_101AAB4  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AB2B  +
push 42Bh  +
call ebx  +
call sub_1018081  +
xor eax eax +
jmp loc_101AB4A  +
mov eax [ebp+arg_4] +
jmp loc_101AB4A  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AB47  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_101AC2E  +
cmp [ebp+arg_4] edi +
jz loc_101AC2E  +
cmp [ebp+lpString] edi +
jz loc_101AC2E  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_101AC2E  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1018665  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_101AC3F  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1019139  +
mov [esi] eax +
test eax eax +
jnz loc_101ABE5  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AC3C  +
push 8  +
call ds:SetLastError  +
jmp loc_101AC3C  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1019139  +
mov [esi+4] eax +
test eax eax +
jz loc_101ABD1  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1018BDF  +
test edi edi +
jz loc_101AC1F  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_1018BDF  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101AA78  +
jmp loc_101AC3F  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AC3C  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_101ACCA  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_101ACCA  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1017FEE  +
test eax eax +
jnz loc_101AC7B  +
push 7  +
call sub_1017F7D  +
jmp loc_101AC87  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1019139  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_101ACCA  +
test ebx ebx +
jbe loc_101ACB4  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_101ACAE  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_101ACAE  +
push esi  +
call sub_1018819  +
add esi 50h +
dec ebx  +
jnz loc_101AC95  +
push [ebp+arg_0]  +
call sub_101801A  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_101ACCC  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1019139  +
mov ebx eax +
cmp ebx edi +
jz loc_101AD5B  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_101AD6D  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_101AD04  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_101AD74  +
mov esi ds:__imp_GetLastError +
call esi  +
test eax eax +
jnz loc_101AD6D  +
call esi  +
test eax eax +
jnz loc_101AD6D  +
push 57h  +
jmp loc_101AD67  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AD6D  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101AF3A  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1018520  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_101AD6D  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_101ADA1  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1018819  +
jmp loc_101AD6D  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_101AD96  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1019139  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_101AD96  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1018A64  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_101AE18  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_101ADD6  +
cmp dword ptr [ebp+lpString] edi +
jz loc_101AD96  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_10182B0  +
cmp eax 4 +
ja loc_101AE50  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1018819  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AD6D  +
push 42Bh  +
jmp loc_101AD67  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1018756  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_101AE8A  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001ED0 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_101AEDA  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1019139  +
mov esi eax +
cmp esi edi +
jnz loc_101AEC1  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1018819  +
jmp loc_101AD5B  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_1018A64  +
add esp 14h +
jmp loc_101AEFA  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_101AEE8  +
push 7  +
call sub_1017F7D  +
jmp loc_101AEF4  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1019139  +
mov esi eax +
cmp esi edi +
jz loc_101AEB3  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1019139  +
mov esi eax +
cmp esi edi +
jz loc_101AEB3  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1019FBD  +
push eax  +
push 50h  +
push esi  +
call sub_1018A64  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1018819  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_101AFBC  +
cmp [ebp+arg_4] ebx +
jz loc_101AFBC  +
cmp [ebp+arg_C] ebx +
jz loc_101AFBC  +
cmp [ebp+dwErrCode] ebx +
jz loc_101AFBC  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_101AFBC  +
call sub_1018133  +
test eax eax +
jnz loc_101AF9C  +
push 157Fh  +
call sub_1019FBD  +
push eax  +
call sub_101801A  +
push 47Eh  +
call edi  +
jmp loc_101AFC5  +
call sub_1017EA7  +
test eax eax +
jz loc_101AFC0  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_101AFE4  +
cmp eax [ebp+arg_C] +
jl loc_101AFCE  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AFC0  +
push 57h  +
call edi  +
call sub_1018081  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_101A109  +
mov esi eax +
cmp esi ebx +
jz loc_101AFC0  +
push esi  +
call sub_101ACD7  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_101AFC0  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_101A1AA  +
test eax eax +
jz loc_101AFC0  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_101B146  +
jmp loc_101B01B  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_101B034  +
mov edi [ecx+4] +
jmp loc_101B036  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AA78  +
cmp eax 0FFFFFFFFh +
jnz loc_101B07B  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AB56  +
cmp eax 0FFFFFFFFh +
jnz loc_101B06E  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_101B183  +
mov edi ebx +
xor ebx ebx +
jmp loc_101B074  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_101B1B6  +
test edi edi +
jz loc_101B0D6  +
cmp [ebp+arg_8] 2 +
jnz loc_101B0D6  +
push dword ptr [esi+8]  +
call sub_101A0CA  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_101B0D1  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AA78  +
cmp eax 0FFFFFFFFh +
jnz loc_101B0C8  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AB56  +
cmp eax 0FFFFFFFFh +
jz loc_101B0D6  +
mov [ebp+arg_8] 1 +
jmp loc_101B0D4  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_101A49B  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_101B22F  +
mov eax [esi+18h] +
test eax eax +
jz loc_101B111  +
cmp eax [esi+1Ch] +
jz loc_101B1D4  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_101B12A  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_101B018  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_101B178  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_101B178  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_101B219  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_101B16F  +
cmp [ecx+1Ch] ebx +
jz loc_101B23F  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_101B150  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_101AFC7  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_101942A  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AC4B  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_101AFC5  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101AFC0  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_101AFC0  +
test ebx ebx +
jz loc_101B201  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_101B201  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1019FBD  +
push eax  +
push 3  +
call sub_101942A  +
add esp 14h +
jmp loc_101B19B  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1019FBD  +
push eax  +
push 2  +
jmp loc_101B193  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101B22A  +
push 42Bh  +
call edi  +
call sub_1018081  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_101AC4B  +
jmp loc_101AFC5  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_101B259  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_101B219  +
mov edi [ecx+24h] +
jmp loc_101B271  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_101B26F  +
push ebx  +
push eax  +
call sub_101A109  +
mov edi eax +
test edi edi +
jnz loc_101B275  +
jmp loc_101B22A  +
mov edi ecx +
test edi edi +
jz loc_101B28B  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_101B28B  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_101B20C  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1019FBD  +
push eax  +
push 1  +
call sub_101942A  +
add esp 0Ch +
jmp loc_101B19B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101B2C3  +
cmp dword ptr [eax] 9 +
jnz loc_101B2C3  +
xor eax eax +
inc eax  +
jmp loc_101B2C5  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_101B2DE  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_101B2AD  +
test eax eax +
jz loc_101B339  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_101B32D  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_101B43A  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1018819  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_101B311  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_101B2AD  +
test eax eax +
jz loc_101B364  +
push ecx  +
call sub_101B2F3  +
push esi  +
call sub_1018819  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_101B2AD  +
test eax eax +
jz loc_101B383  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_101B2AD  +
test eax eax +
jnz loc_101B3A2  +
xor eax eax +
jmp loc_101B3C7  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_101B39E  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_101B3BD  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_101B3B5  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_101B3C6  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_101B2AD  +
test eax eax +
jnz loc_101B3E8  +
or eax 0FFFFFFFFh +
jmp loc_101B430  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_101B3E3  +
push 14h  +
call sub_1018520  +
test eax eax +
jz loc_101B3E3  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_101B423  +
mov [esi+8] eax +
jmp loc_101B429  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_101B4AE  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_101B479  +
jz loc_101B495  +
cmp eax 20000h +
jz loc_101B495  +
cmp eax 30000h +
jz loc_101B495  +
cmp eax 40000h +
jz loc_101B495  +
cmp eax 50000h +
jz loc_101B495  +
cmp eax 60000h +
jz loc_101B495  +
jmp loc_101B4AE  +
cmp eax 80000h +
jz loc_101B4A0  +
cmp eax 90000h +
jz loc_101B495  +
cmp eax 0A0000h +
jz loc_101B495  +
cmp eax 0B0000h +
jnz loc_101B4AE  +
add edx 0Ch +
push edx  +
call sub_1018819  +
jmp loc_101B4AE  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_101B343  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_101B2AD  +
test eax eax +
jnz loc_101B4D2  +
or eax 0FFFFFFFFh +
jmp loc_101B5E1  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_101B5DC  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_101B5CC  +
mov ecx 70000h +
cmp eax ecx +
ja loc_101B560  +
jz loc_101B54E  +
cmp eax 20000h +
jz loc_101B532  +
cmp eax 30000h +
jz loc_101B5C3  +
cmp eax 40000h +
jz loc_101B5C3  +
cmp eax 60000h +
jnz loc_101B5CC  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_101B555  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_10182D1  +
test eax eax +
jz loc_101B5E6  +
mov edx [ebp+arg_0] +
jmp loc_101B5CC  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_101B5CC  +
mov eax edx +
jmp loc_101B5DF  +
cmp eax 90000h +
jz loc_101B5C3  +
cmp eax 0A0000h +
jz loc_101B586  +
cmp eax 0B0000h +
jnz loc_101B5CC  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_101B5CC  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_101B5CA  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_101B5CC  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_101B5CC  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_101B5CC  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_101B5CC  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_101B5CC  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_101B5CA  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_101B55C  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_101B4E8  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_101B5DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_101B2AD  +
test eax eax +
jnz loc_101B60B  +
or eax 0FFFFFFFFh +
jmp locret_101B65E  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_101B61E  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1018520  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B659  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1018BDF  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz loc_101B65C  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_101B2AD  +
test eax eax +
jz loc_101B6B0  +
push 4  +
call sub_1018520  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B6B0  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz locret_101B6B3  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_101B2AD  +
test eax eax +
jz loc_101B705  +
push 4  +
call sub_1018520  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B705  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz locret_101B708  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_101B2AD  +
test eax eax +
jz loc_101B75A  +
push 4  +
call sub_1018520  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B75A  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz locret_101B75D  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_101B2AD  +
test eax eax +
jz loc_101B7AF  +
push 8  +
call sub_1018520  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B7AF  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz locret_101B7B2  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_101B2AD  +
test eax eax +
jz loc_101B829  +
call sub_101B2CE  +
push eax  +
mov [ebp+var_4] eax +
call sub_101B2AD  +
test eax eax +
jz loc_101B829  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_101B803  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jz loc_101B803  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_101B7ED  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_101B820  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jnz loc_101B82C  +
lea eax [ebp+var_4] +
push eax  +
call sub_101B343  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_101B2AD  +
test eax eax +
jnz loc_101B84C  +
or eax 0FFFFFFFFh +
jmp loc_101B870  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_101B86D  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_101B3D0  +
cmp eax 0FFFFFFFFh +
jz loc_101B86D  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_101B854  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_101B38C  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_101B8D5  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_101B8B2  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_101B8B8  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_101B8C0  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_101B43A  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018819  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101B90B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101B90B  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101B879  +
jmp loc_101B90D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101B93F  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101B93F  +
push dword ptr [eax+0Ch]  +
call sub_101B36E  +
jmp loc_101B941  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jnz loc_101B964  +
xor eax eax +
jmp loc_101B97A  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_101B977  +
cmp ecx 80000h +
jnz loc_101B960  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jnz loc_101B99D  +
xor eax eax +
jmp loc_101B9A9  +
cmp dword ptr [eax+4] 20000h +
jnz loc_101B999  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jnz loc_101B9CC  +
xor eax eax +
jmp loc_101B9E4  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_101B9DF  +
cmp ecx 30000h +
jnz loc_101B9C8  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jnz loc_101BA0B  +
fld  ds:flt_1001FB0 +
jmp loc_101BA19  +
cmp dword ptr [eax+4] 60000h +
jnz loc_101BA03  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jnz loc_101BA40  +
fld  ds:dbl_1001FB8 +
jmp loc_101BA4E  +
cmp dword ptr [eax+4] 70000h +
jnz loc_101BA38  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_101B38C  +
test eax eax +
jz loc_101BAC1  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_101BA9B  +
cmp edx 0B0000h +
jnz loc_101BAC1  +
cmp edx ecx +
jnz loc_101BAA8  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_101BAC1  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BAFA  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BAFA  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101B94A  +
jmp loc_101BAFC  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BB31  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BB31  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101B983  +
jmp loc_101BB33  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BB68  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BB68  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101B9B2  +
jmp loc_101BB6A  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_101BB84  +
xor eax eax +
jmp loc_101BBB4  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BB80  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_101BBA7  +
test ecx ecx +
jz loc_101BBAB  +
jmp loc_101BB80  +
test ecx ecx +
jnz loc_101BBAE  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
mov esi eax +
cmp esi edi +
jnz loc_101BBDD  +
xor eax eax +
jmp loc_101BC5C  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_101BBEE  +
cmp eax edi +
jnz loc_101BC43  +
cmp [ebp+arg_C] edi +
jnz loc_101BBFF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_101BC23  +
lea edi [eax+eax] +
push edi  +
call sub_1018520  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_101BC43  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_101BC4A  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_101BC4A  +
lea edi [esi+0Ch] +
push edi  +
call sub_1018819  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1018520  +
mov [edi] eax +
test eax eax +
jnz loc_101BC47  +
xor eax eax +
jmp loc_101BC5B  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1018BDF  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
mov esi eax +
test esi esi +
jnz loc_101BC84  +
xor eax eax +
jmp loc_101BCBF  +
mov eax [esi+4] +
cmp eax 30000h +
jz loc_101BC94  +
test eax eax +
jz loc_101BC98  +
jmp loc_101BC80  +
test eax eax +
jnz loc_101BCB4  +
push 4  +
call sub_1018520  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_101BC80  +
mov dword ptr [esi+4] 30000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
mov esi eax +
test esi esi +
jnz loc_101BCE6  +
xor eax eax +
jmp loc_101BD21  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_101BCF6  +
test eax eax +
jz loc_101BCFA  +
jmp loc_101BCE2  +
test eax eax +
jnz loc_101BD16  +
push 4  +
call sub_1018520  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_101BCE2  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BD5A  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BD5A  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101BB73  +
jmp loc_101BD5C  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BD97  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BD97  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101BBBE  +
jmp loc_101BD99  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BDD1  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BDD1  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101BC67  +
jmp loc_101BDD3  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BE0B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BE0B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101BCC9  +
jmp loc_101BE0D  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BE2F  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101B38C  +
test eax eax +
jz loc_101BE64  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101BE64  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101BE16  +
jmp loc_101BE66  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_101B4B7  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_101B4B7  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_101B4B7  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_101B4B7  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_101B4B7  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_101BF68  +
xor eax eax +
jmp loc_101C01C  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_101B38C  +
mov esi eax +
test esi esi +
jz loc_101BF61  +
push ebx  +
push offset dword_1001BE4  +
push edi  +
call sub_1018BDF  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_101C00B  +
cmp eax 30000h +
jz loc_101BFFF  +
cmp eax 40000h +
jz loc_101BFDF  +
cmp eax 60000h +
jz loc_101BFD8  +
cmp eax 70000h +
jnz loc_101C015  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1018A64  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_101C00F  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_101BFB0  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1018A64  +
add esp 10h +
jmp loc_101BFCE  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_101BFE9  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_1018BDF  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_101C053  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C04F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101C078  +
push 0  +
push [ebp+lpString1]  +
call sub_10182B0  +
cmp eax 2 +
jbe loc_101C04F  +
push 2  +
push 1  +
push offset asc_1001B78  +
push [ebp+lpString1]  +
call sub_10182D1  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_101C112  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C112  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1019139  +
cmp eax esi +
jnz loc_101C0C1  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C11D  +
push 8  +
jmp loc_101C117  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_101C112  +
push 0  +
push 0Ah  +
push ebx  +
call sub_1019A41  +
test eax eax +
jz loc_101C11D  +
push 0Ah  +
push ebx  +
call sub_101985B  +
cmp eax 0FFh +
ja loc_101C11D  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_101C0D8  +
cmp [ebp+var_4] 4 +
jnz loc_101C112  +
inc eax  +
jmp loc_101C11F  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_101C2AF  +
cmp ebx esi +
jz loc_101C2AF  +
mov eax [ebx] +
cmp eax esi +
jz loc_101C1A8  +
cmp eax 2 +
jb loc_101C2AF  +
cmp edx esi +
jz loc_101C2AF  +
cmp dword_102A1D4 esi +
jnz loc_101C1DC  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call WSAStartup  +
test eax eax +
jz loc_101C1D2  +
call WSAGetLastError  +
push eax  +
jmp loc_101C2BB  +
mov dword_102A1D4 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call GetAddrInfoW  +
test eax eax +
jnz loc_101C2C1  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_101C249  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call GetNameInfoW  +
cmp eax edi +
jz loc_101C24F  +
cmp eax 2AFCh +
jnz loc_101C246  +
cmp [ebp+var_848] di +
jnz loc_101C24F  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_101C209  +
jmp loc_101C29B  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_101C26C  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_10182B0  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_101C288  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_101C29B  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_1018BDF  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_101C2C3  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C2C1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_101C32D  +
push esi  +
push edi  +
call sub_10182B0  +
test eax eax +
jz loc_101C32D  +
push edi  +
call sub_101C032  +
push edi  +
test eax eax +
jnz loc_101C335  +
push offset aS_3  +
push 1  +
call sub_101942A  +
add esp 0Ch +
test eax eax +
jnz loc_101C33C  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C328  +
push 8  +
call ds:SetLastError  +
call sub_1018081  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_101801A  +
jmp loc_101C312  +
call sub_1017FEE  +
cmp eax esi +
jnz loc_101C34E  +
push 0Dh  +
call sub_1017F7D  +
jmp loc_101C358  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1019139  +
cmp eax esi +
jz loc_101C316  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_101C32D  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_101C387  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_101C32F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_101C496  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C496  +
push esi  +
call sub_101C032  +
cmp eax 1 +
jnz loc_101C3CC  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_101C407  +
push offset aIpc  +
push esi  +
push offset aSS_0  +
push 2  +
call sub_101942A  +
add esp 10h +
test eax eax +
jnz loc_101C434  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C3FF  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_101C498  +
test bl 20h +
jz loc_101C413  +
push offset aAdmin  +
jmp loc_101C3D9  +
test bl 40h +
jz loc_101C422  +
cmp [ebp+arg_4] edi +
jz loc_101C422  +
push [ebp+arg_4]  +
jmp loc_101C3D9  +
push esi  +
push offset aS_3  +
push 1  +
call sub_101942A  +
add esp 0Ch +
jmp loc_101C3E9  +
call sub_1017FEE  +
cmp eax edi +
jnz loc_101C446  +
push 12h  +
call sub_1017F7D  +
jmp loc_101C450  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1019139  +
cmp eax edi +
jz loc_101C3ED  +
test ebx 10000000h +
jz loc_101C463  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_101C489  +
cmp esi 4B8h +
jz loc_101C482  +
call sub_1018081  +
jmp loc_101C492  +
call sub_10194BC  +
jmp loc_101C492  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_101C498  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_101C5FC  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C5FC  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:__imp_GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_101C4F9  +
xor eax eax +
jmp loc_101C5FF  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1019139  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_101C51D  +
call ebx  +
test eax eax +
jnz loc_101C4F2  +
push 8  +
call ds:SetLastError  +
jmp loc_101C4F2  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_101C4F2  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jz loc_101C5FC  +
push [ebp+lpString]  +
call sub_101C081  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_101C5B8  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_101C12B  +
test eax eax +
jz loc_101C4F2  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1019139  +
mov esi eax +
cmp esi edi +
jz loc_101C4F2  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_101C12B  +
test eax eax +
jz loc_101C4F2  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_10182D1  +
test eax eax +
jnz loc_101C5A4  +
mov eax ebx +
jmp loc_101C5FF  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_10182D1  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_101C5FF  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_101C4F2  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1019139  +
mov ebx eax +
cmp ebx edi +
jz loc_101C4F2  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_101C4F2  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_101C5AC  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_101C6A7  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C6A7  +
push ebx  +
call sub_101C081  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_101C689  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_101C12B  +
test eax eax +
jnz loc_101C665  +
xor eax eax +
jmp loc_101C6AA  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1019139  +
cmp eax esi +
jz loc_101C661  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_101C12B  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_101C6AA  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_10186D0  +
cmp eax 0FFFFFFFFh +
jz loc_101C6A3  +
push 35h  +
call ds:SetLastError  +
jmp loc_101C661  +
mov eax edi +
jmp loc_101C6AA  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_101C396  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_101C838  +
push esi  +
call sub_101C4A4  +
cmp eax 1 +
jz loc_101C838  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_101C032  +
cmp eax 1 +
jnz loc_101C717  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_101C60B  +
test eax eax +
jnz loc_101C733  +
call sub_1018081  +
call ds:__imp_GetLastError  +
jmp loc_101C86C  +
cmp [ebp+lpString] ebx +
jz loc_101C75C  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C75C  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_0  +
push 2  +
call sub_101942A  +
add esp 10h +
jmp loc_101C76E  +
push dword ptr [ebp+arg_0]  +
push offset aS_3  +
push 1  +
call sub_101942A  +
add esp 0Ch +
test eax eax +
jnz loc_101C791  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C784  +
push 8  +
call ds:SetLastError  +
call sub_1018081  +
push 8  +
pop eax  +
jmp loc_101C86C  +
call sub_1017FEE  +
cmp eax ebx +
jnz loc_101C7A3  +
push 12h  +
call sub_1017F7D  +
jmp loc_101C7AD  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1019139  +
mov edx eax +
cmp edx ebx +
jz loc_101C772  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_101C7FE  +
cmp esi 4B8h +
jz loc_101C7F7  +
push esi  +
call ds:SetLastError  +
call sub_1018081  +
jmp loc_101C866  +
call sub_10194BC  +
jmp loc_101C866  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_101C2D9  +
push eax  +
call sub_10181C9  +
test eax eax +
jnz loc_101C866  +
push dword ptr [ebp+arg_0]  +
call sub_101C6C0  +
push 1580h  +
call sub_1019FBD  +
push eax  +
call sub_101801A  +
mov esi 4B8h +
jmp loc_101C866  +
cmp [ebp+lpUserName] ebx +
jz loc_101C86A  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C86A  +
push 157Eh  +
call sub_1019FBD  +
push eax  +
call sub_101801A  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_101C86C  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_101C6DD  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_101CA22  +
push 0  +
push edi  +
call sub_10182B0  +
test eax eax +
jz loc_101CA22  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_101C901  +
cmp [ebp+lpUserName] 0 +
jz loc_101C8E7  +
cmp [ebp+nSize] 2 +
jb loc_101C8E7  +
cmp [ebp+lpPassword] 0 +
jz loc_101C8E7  +
cmp [ebp+arg_10] 2 +
jnb loc_101C901  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101C8F5  +
push 57h  +
call ebx  +
call sub_1018081  +
xor eax eax +
jmp loc_101CA25  +
push edi  +
mov [ebp+var_4] edi +
call sub_101C032  +
cmp eax esi +
jnz loc_101C914  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_101C945  +
cmp [ebp+lpPassword] 0 +
jz loc_101C945  +
push 0  +
push esi  +
push offset String2  +
push [ebp+lpPassword]  +
call sub_10182D1  +
test eax eax +
jnz loc_101C945  +
push [ebp+var_4]  +
call sub_101C60B  +
test eax eax +
jnz loc_101CA39  +
jmp loc_101C8F5  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_101C60B  +
test eax eax +
jz loc_101C8F5  +
cmp [ebp+lpUserName] 0 +
jz loc_101C98A  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101C98A  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_101C877  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_101C999  +
mov [ebp+var_8] esi +
jmp loc_101C999  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_101C877  +
mov edi eax +
cmp edi 55h +
jnz loc_101C9A9  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_101CA25  +
test edi edi +
jnz loc_101C9B5  +
cmp [ebp+var_8] esi +
jz loc_101C99E  +
push edi  +
jmp loc_101C9A3  +
mov eax 4C3h +
cmp edi eax +
ja loc_101C9E2  +
jz loc_101C9DF  +
cmp edi 34h +
jz loc_101CAD1  +
cmp edi 56h +
jz loc_101CA2C  +
cmp edi 4BEh +
jz loc_101CAD1  +
jmp loc_101C8F5  +
push eax  +
jmp loc_101C9A3  +
cmp edi 4CFh +
jb loc_101C8F5  +
cmp edi 4D1h +
jbe loc_101CAD1  +
cmp edi 52Eh +
jz loc_101CA2C  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_101C8F5  +
push 157Eh  +
call sub_1019FBD  +
push eax  +
call sub_101801A  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_101C8FA  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_101CA5C  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_101C8F5  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_1019FBD  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1019E6A  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_1018ECA  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_101C877  +
mov edi eax +
test edi edi +
jz loc_101C9A5  +
cmp edi 34h +
jz loc_101CAD1  +
cmp edi 4BEh +
jz loc_101CAD1  +
mov eax 4C3h +
cmp edi eax +
jz loc_101C9DF  +
cmp edi 4CEh +
jbe loc_101C8F5  +
cmp edi 4D1h +
ja loc_101CA02  +
push 4C6h  +
call ebx  +
call sub_1018081  +
push edi  +
call ebx  +
jmp loc_101C8FA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_101CC4A  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_101CC49  +
cmp [ebp+hConsoleOutput] edi +
jz loc_101CC49  +
push ebx  +
call sub_10187DE  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_101CB25  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_1019139  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_101CB67  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101CB4F  +
push 8  +
call ds:SetLastError  +
call sub_1018081  +
push ebx  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001BE4  +
jmp loc_101CC43  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_101CB7A  +
push [ebp+arg_8]  +
call sub_10187DE  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_101CC10  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_1018B6F  +
cmp eax edi +
jz loc_101CC10  +
push eax  +
call sub_10187DE  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_10187DE  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_101CBB1  +
mov esi eax +
xor edi edi +
jmp loc_101CB7C  +
test esi esi +
jz loc_101CBBA  +
cmp eax [ebp+arg_C] +
jnz loc_101CBBD  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_101CBC8  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_1018BDF  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_1019D02  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push edi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_1018BDF  +
push ebx  +
call sub_10187DE  +
cmp eax esi +
push ebx  +
jle loc_101CC36  +
call sub_10185C9  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_101CC43  +
cmp esi edi +
jz loc_101CBBA  +
push ebx  +
call sub_10187DE  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_101CBBA  +
push ebx  +
call sub_10187DE  +
cmp eax [ebp+arg_C] +
jg loc_101CBBD  +
push ebx  +
call sub_10187DE  +
mov esi eax +
jmp loc_101CBBD  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001DB4  +
push ebx  +
call sub_1018BDF  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_1017F7D  +
mov edi eax +
test edi edi +
jz loc_101CD3B  +
cmp [ebp+arg_8] 0 +
jz loc_101CD3B  +
push ebx  +
push esi  +
push edi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001BE4  +
push edi  +
call sub_1018BDF  +
push [ebp+arg_0]  +
call sub_101B36E  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_1019139  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_1019139  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_101CD39  +
cmp eax esi +
jz loc_101CD39  +
push [ebp+lpString]  +
call sub_10187DE  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_101CD39  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_101BF1F  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_1018A64  +
add esp 10h +
push edi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_1018C22  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_101CD39  +
cmp ebx [ebp+var_C] +
jb loc_101CD39  +
push edi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_1018C22  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_101CCD8  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS_4 +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_1017F7D  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_101CEC5  +
test esi esi +
jz loc_101CEC5  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_10185C9  +
shr eax 1 +
push eax  +
mov edi offset dword_1001BE4 +
push edi  +
push esi  +
call sub_1018BDF  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_101CF84  +
sub eax edx +
jz loc_101CF46  +
sub eax edx +
jz loc_101CF00  +
sub eax edx +
jz loc_101CED6  +
sub eax 20h +
jz loc_101CE39  +
sub eax 20h +
jz loc_101CE13  +
push esi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_1018BDF  +
jmp loc_101CE94  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_101CEC5  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_101CE2D  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_101CE94  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_101BA57  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_101CE91  +
call sub_1018081  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
call sub_1017FEE  +
push eax  +
push [ebp+lpMem]  +
call sub_1018BDF  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_101CEC5  +
test dword ptr [ebx+204h] 100000h +
jz loc_101CEC5  +
push esi  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_1019FBD  +
push eax  +
push esi  +
call sub_1018BDF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_101CEE7  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_101CFA3  +
call sub_101BA22  +
jmp loc_101CF28  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_101CF11  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_101CFA3  +
call sub_101B9ED  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1018A64  +
add esp 14h +
jmp loc_101CE94  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_101CF57  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_101CFA3  +
call sub_101B9B2  +
push eax  +
push edi  +
push esi  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1018A64  +
add esp 10h +
jmp loc_101CE94  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_101CF95  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_101CFC5  +
call sub_101B94A  +
test eax eax +
jz loc_101CEC5  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_101CC55  +
jmp loc_101CE94  +
call sub_101B983  +
test eax eax +
jz loc_101CEC5  +
jmp loc_101CF6A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_101D43B  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_101D43B  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_1019139  +
mov [ebp+lpMem] eax +
call sub_101B2CE  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_101D42D  +
cmp [ebp+lpMem] edi +
jz loc_101D42D  +
test [ebp+arg_C] ebx +
jnz loc_101D12D  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_101D0BF  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_101D0B4  +
xor edi edi +
test eax 10000h +
jnz loc_101D06B  +
and eax 0FF0h +
cmp eax 20h +
jz loc_101D06B  +
cmp eax 30h +
jz loc_101D06B  +
cmp eax 40h +
jnz loc_101D06E  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_101D080  +
push offset asc_10016CC  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_1018BDF  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_1019D02  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_101D048  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_101D120  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_101D117  +
cmp eax 1 +
jnz loc_101D0F5  +
push offset asc_10016CC  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_100204C  +
push [ebp+lpMem]  +
call sub_10193C6  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_101D0DE  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+arg_10]  +
call sub_101B36E  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_101D422  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001BE4  +
push [ebp+lpMem]  +
call sub_1018BDF  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_101B94A  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_101D413  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_101D2A8  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_101D293  +
test eax 88000h +
jz loc_101D1B8  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_10185C9  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_1001C20 +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_101CD45  +
xor ecx ecx +
test ebx ebx +
jnz loc_101D202  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_101D1F4  +
and eax 0FF0h +
cmp eax 20h +
jz loc_101D1F4  +
cmp eax 30h +
jz loc_101D1F4  +
cmp eax 40h +
jnz loc_101D1F7  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_1019D02  +
cmp ebx 1 +
jnz loc_101D20C  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_101D21F  +
push offset asc_10016CC  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
test dword ptr [esi+4] 8000h +
jz loc_101D281  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_101CAEA  +
push [ebp+lpMem]  +
call sub_10187DE  +
test eax eax +
jz loc_101D28C  +
push 3  +
push [ebp+var_8]  +
call sub_101B7BB  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_101D28C  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_101BDDC  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_101BD65  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_101BD65  +
jmp loc_101D28C  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_101D18C  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+var_8]  +
call sub_101B36E  +
mov [ebp+var_10] eax +
jmp loc_101D40B  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_101D3FB  +
jmp loc_101D2DD  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_101BB3C  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_101D354  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_101D34B  +
cmp [ebp+var_C] 1 +
jnz loc_101D325  +
push offset asc_10016CC  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_10016CC  +
push [ebp+lpMem]  +
call sub_10193C6  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_101D309  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_101D36A  +
push offset asc_10016CC  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_101BB05  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_101BB05  +
mov ebx eax +
test edi edi +
jz loc_101D3EC  +
test ebx ebx +
jz loc_101D3EC  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_1018BDF  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_101CAEA  +
push edi  +
call sub_10187DE  +
test eax eax +
jnz loc_101D3DC  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_101B879  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_101D3EC  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_101BD65  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_101D2DA  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_101D2C5  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_101D144  +
lea eax [ebp+var_8] +
push eax  +
call sub_101B343  +
jmp loc_101D452  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D44D  +
push 8  +
jmp loc_101D447  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D44D  +
push 57h  +
call ds:SetLastError  +
call sub_1018081  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_101D6F4  +
cmp edi ebx +
jz loc_101D6F4  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_1019139  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_101D4E8  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D706  +
push 8  +
jmp loc_101D700  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_101D513  +
push edi  +
call sub_10187DE  +
cmp [ebp+var_90] eax +
jnb loc_101D50A  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_101D4F6  +
push [ebp+var_9C]  +
call sub_101B36E  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_101D70B  +
mov edi offset String +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_101B94A  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_101D6DA  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_101D6BF  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001BE4  +
push ebx  +
call sub_1018BDF  +
test dword ptr [esi+4] 1000h +
jnz loc_101D6A4  +
lea eax [esi-200h] +
push eax  +
push offset aS_5  +
push ebx  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1018A64  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_1019D02  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_10185C9  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_101CD45  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_101D692  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_101D692  +
push [ebp+lpMem]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset asc_10016CC  +
lea eax [ebp+String] +
push eax  +
call sub_1018BDF  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1019D02  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
jmp loc_101D619  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_101D574  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_101D6DA  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_101D538  +
jmp loc_101D70B  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D706  +
push 57h  +
call ds:SetLastError  +
call sub_1018081  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_101D8D5  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_101D8D5  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_1019139  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_101D770  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D8E7  +
push 8  +
jmp loc_101D8E1  +
test [ebp+arg_C] edi +
jnz loc_101D7D8  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_101D7CB  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_101D7C0  +
cmp eax 1 +
jnz loc_101D79B  +
push offset asc_1001A74  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push esi  +
push offset aS_6  +
push ebx  +
call sub_10185C9  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1018A64  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_101D781  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+arg_10]  +
call sub_101B36E  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_101D8EC  +
mov ebx offset asc_1002058 +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_101B94A  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_101D8C4  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_101D8B7  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_10185C9  +
shr eax 1 +
push eax  +
push offset dword_1001BE4  +
push [ebp+lpString]  +
call sub_1018BDF  +
test [esi+4] edi +
jnz loc_101D8A2  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_10185C9  +
push offset asc_1001A74  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_101CD45  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_101D87D  +
push offset asc_1001A74  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_101D824  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_1018C65  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_101D7F4  +
jmp loc_101D8EC  +
call ds:__imp_GetLastError  +
test eax eax +
jnz loc_101D8E7  +
push 57h  +
call ds:SetLastError  +
call sub_1018081  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_101D953  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_101D953  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_101D93D  +
dec eax  +
jz loc_101D92D  +
dec eax  +
jnz loc_101D94B  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_101D721  +
jmp loc_101D94B  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_101CFD9  +
jmp loc_101D94B  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_101D45E  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_101D8F8  +
pop ebp  +
retn 10h  +
***
rcl byte ptr [edi+595AFFFFh] cl +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
stos   +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
or [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
call WinSqmIsOptedIn  +
test eax eax +
jz locret_101DB78  +
push esi  +
push edi  +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_4] eax +
lea eax [ebp+var_20] +
push eax  +
push 4  +
xor esi esi +
inc esi  +
push 0FF2h  +
push 0  +
mov [ebp+var_20] esi +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
call WinSqmAddToStream  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
call __EH_prolog3_catch  +
mov ecx [ebp-18h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-1Ch] +
mov eax [eax+4] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-14h] eax +
mov eax offset loc_101DBB3 +
retn   +
***
add ecx 14h +
call sub_101EDC0  +
test eax eax +
jz loc_101DC7A  +
jle locret_101DC7C  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
or dword ptr [eax+0Ch] 0FFFFFFFFh +
or dword ptr [eax+10h] 0FFFFFFFFh +
or dword ptr [eax+18h] 0FFFFFFFFh +
mov byte ptr [eax+4] 0 +
mov dword ptr [eax] offset off_1002418 +
mov [eax+8] ecx +
mov dword ptr [eax+1Ch] offset byte_1001EDF +
pop ebp  +
retn 4  +
***
mov eax [ecx+0Ch] +
retn   +
***
mov eax [ecx+10h] +
retn   +
***
mov eax [ecx+18h] +
retn   +
***
mov eax [ecx+1Ch] +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push dword ptr [ebp+8]  +
lea ecx [ebp-20h] +
call sub_101DC8D  +
push offset dword_1021FD4  +
lea eax [ebp-20h] +
push eax  +
call _CxxThrowException  +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+8] +
mov dword ptr [eax] offset off_1002400 +
mov cl [ecx+4] +
mov [eax+4] cl +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call sub_10172D7  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_101DD6D  +
cmp eax 0FFFFFFFFh +
jz loc_101DD6D  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_101DD93  +
push eax  +
call ds:RegCloseKey  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_101DDC6  +
test esi esi +
jz loc_101DDC6  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101DDEB  +
cmp [esi] ax +
jz loc_101DDE7  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101DDDD  +
test edx edx +
jnz loc_101DDF0  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101DE01  +
test eax eax +
jl loc_101DDFE  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_101DE3C  +
cmp [ebp+arg_4] eax +
jz loc_101DE38  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101DE38  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101DE1B  +
test esi esi +
jnz loc_101DE44  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101DE52  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_101DE7C  +
mov eax [ebp+arg_0] +
jb loc_101DE73  +
cmp eax 0FFFFFFFFh +
ja loc_101DE7C  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_101DE87  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_101DEAA  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_101DEB5  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 80070490h +
jz loc_101DEE2  +
cmp [ebp+arg_0] 80070003h +
jz loc_101DEE2  +
cmp [ebp+arg_0] 80070002h +
jz loc_101DEE2  +
xor eax eax +
jmp loc_101DEE5  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_101DEFE  +
call sub_101DDA4  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
inc eax  +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [esi+0Ch] +
mov dword ptr [ebp-4] 1 +
test eax eax +
jz loc_101DF40  +
push eax  +
call ds:UnregisterWait  +
mov eax [esi+8] +
test eax eax +
jz loc_101DF4E  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+4] +
test eax eax +
jz loc_101DF5C  +
push eax  +
call ds:RegCloseKey  +
lea ecx [esi+14h] +
call sub_101ED6E  +
push dword ptr [esi+10h]  +
call ds:SysFreeString  +
push dword ptr [esi]  +
call sub_10172D7  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101DF1A  +
test [ebp+arg_0] 1 +
jz loc_101DF9A  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi 20Ah +
push edi  +
mov esi ecx +
call sub_10172C7  +
pop ecx  +
push eax  +
mov ecx esi +
call sub_101DD32  +
push edi  +
push 0  +
push dword ptr [esi]  +
call memset  +
mov esi [esi] +
add esp 0Ch +
push 105h  +
push esi  +
push offset Src  +
call ds:ExpandEnvironmentStringsW  +
pop edi  +
pop esi  +
test eax eax +
jnz loc_101DFFB  +
call ds:__imp_GetLastError  +
test eax eax +
jle locret_101DFFD  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1002400 +
mov dl [ecx+4] +
mov [eax+4] dl +
mov dword ptr [eax] offset off_1002418 +
mov edx [ecx+8] +
mov [eax+8] edx +
mov edx [ecx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov dl [ecx+14h] +
mov [eax+14h] dl +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov ecx [ecx+1Ch] +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_101E065  +
cmp edx esi +
jbe loc_101E06A  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_101E082  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101DDD0  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_101E084  +
xor ecx ecx +
test eax eax +
jl loc_101E09B  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_101DE07  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+len] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
push edi  +
mov ecx ebx +
mov dword ptr [esi+8] 1 +
call sub_10068B2  +
mov ecx [ebp+arg_4] +
mov edi eax +
call sub_10068B2  +
lea ecx [ebp+len] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call sub_101DE90  +
test eax eax +
jl loc_101E0F9  +
mov eax [ebp+len] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+len] +
push ecx  +
push edx  +
push eax  +
call sub_101DE5E  +
test eax eax +
jge loc_101E103  +
push 8007000Eh  +
call sub_10172E7  +
push [ebp+len]  +
push 0  +
call ds:SysAllocStringByteLen  +
mov [esi] eax +
test eax eax +
jnz loc_101E125  +
mov eax [ebp+var_4] +
add eax edi +
jz loc_101E16F  +
push 8007000Eh  +
call sub_10172E7  +
mov eax [ebx] +
test eax eax +
jz loc_101E12F  +
mov eax [eax] +
jmp loc_101E131  +
xor eax eax +
test eax eax +
jz loc_101E145  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_101E152  +
mov eax [eax] +
jmp loc_101E154  +
xor eax eax +
test eax eax +
jz loc_101E16F  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
mov eax [esi] +
lea eax [eax+edi*2] +
push eax  +
call memcpy  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
mov [esi] eax +
push offset aSoftwareMicros  +
lea ecx [esi+10h] +
mov [ebp-4] eax +
mov [esi+4] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
call loc_10069B4  +
lea ecx [esi+14h] +
mov byte ptr [ebp-4] 1 +
call sub_101ED48  +
call ds:GetTickCount  +
push eax  +
call srand  +
pop ecx  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 38h  +
call sub_1017299  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_101E203  +
call sub_101E187  +
jmp loc_101E205  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx eax +
mov dword_102A308 eax +
call sub_101DC61  +
test eax eax +
jl loc_101E224  +
mov ecx dword_102A308 +
call sub_101DFA6  +
call __EH_epilog3  +
retn   +
***
mov ecx dword_102A308 +
test ecx ecx +
jz locret_101E247  +
push 1  +
call sub_101DF80  +
and dword_102A308 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
xor ecx ecx +
push 2  +
mov esi 105h +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_10172C7  +
mov edi [ebp+arg_4] +
pop ecx  +
push eax  +
mov ecx edi +
call sub_101DD32  +
mov eax [edi] +
push offset a?_1  +
push esi  +
push eax  +
call sub_10064DE  +
test eax eax +
jge loc_101E297  +
mov eax 800700A1h +
jmp loc_101E2EB  +
mov eax [ebx] +
mov ecx [edi] +
push eax  +
push esi  +
push ecx  +
call sub_101E04C  +
test eax eax +
jl loc_101E290  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_101E2E9  +
movzx eax word ptr [ebx] +
test ax ax +
jz loc_101E2E9  +
cmp word ptr [ebx+2] 0 +
jnz loc_101E2C3  +
cmp ax 5Ch +
jz loc_101E2E9  +
cmp ax 5Ch +
jz loc_101E2DB  +
mov eax [edi] +
push offset asc_10013E4  +
push esi  +
push eax  +
call sub_101E04C  +
test eax eax +
jl loc_101E290  +
mov edi [edi] +
push ebx  +
push esi  +
push edi  +
call sub_101E04C  +
test eax eax +
jl loc_101E290  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-10h] 0 +
mov ecx [ebp+8] +
and dword ptr [ebp-4] 0 +
lea eax [ebp-10h] +
push eax  +
call sub_101F09C  +
push eax  +
mov ecx esi +
call sub_101E24D  +
mov esi eax +
test esi esi +
jl loc_101E34C  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-10h]  +
call sub_101EE2F  +
test eax eax +
jnz loc_101E34C  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_101E34A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push dword ptr [ebp-10h]  +
call sub_10172D7  +
mov eax esi +
pop ecx  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx esi +
call sub_100EFE2  +
mov [edi] eax +
cmp dword ptr [esi] 0 +
jz loc_101E38C  +
test eax eax +
jnz loc_101E38C  +
push 8007000Eh  +
call loc_101DCEC  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
add ecx 10h +
push ecx  +
lea ecx [ebp-10h] +
call sub_101E364  +
mov eax [ebp+8] +
xor esi esi +
dec eax  +
mov [ebp-4] esi +
jz loc_101E3E8  +
dec eax  +
jz loc_101E3E1  +
dec eax  +
jz loc_101E3DA  +
mov esi 80070057h +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
push offset aTaskcachePlain  +
jmp loc_101E3ED  +
push offset aTaskcacheLogon  +
jmp loc_101E3ED  +
push offset aTaskcacheBoot  +
lea ecx [ebp-10h] +
call sub_100F006  +
mov [ebp-14h] esi +
push dword ptr [ebp+10h]  +
lea eax [ebp-14h] +
push eax  +
push 20019h  +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 1 +
push 80000002h  +
call sub_101EE69  +
cmp eax esi +
jz loc_101E431  +
jle loc_101E425  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
lea ecx [ebp-14h] +
call sub_101DD7E  +
jmp loc_101E3C7  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-14h]  +
call sub_101EEBB  +
cmp eax esi +
jz loc_101E427  +
jg loc_101E41B  +
jmp loc_101E425  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call sub_1017299  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor edi edi +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_101E47B  +
push dword ptr [ebp+8]  +
push esi  +
call sub_101E0A6  +
mov edi eax +
mov ecx esi +
call sub_1004E0D  +
mov [esi] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea ecx [esi+18h] +
call sub_101DEEE  +
lea ecx [esi+10h] +
call sub_1004E0D  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_GS  +
mov eax ecx +
mov ecx [ebp+0Ch] +
mov esi [ebp+8] +
mov [ebp-74h] ecx +
mov ecx [ebp+10h] +
xor ebx ebx +
mov [ebp-78h] ecx +
cmp esi ebx +
jnz loc_101E4F0  +
mov eax 80070057h +
jmp loc_101E6CC  +
push 5Ch  +
pop ecx  +
cmp cx [esi] +
jnz loc_101E4FA  +
inc esi  +
inc esi  +
push dword ptr [eax+10h]  +
lea ecx [ebp-6Ch] +
call sub_1006860  +
push offset aTaskcacheTree  +
lea ecx [ebp-68h] +
mov [ebp-4] ebx +
call sub_1006860  +
lea eax [ebp-68h] +
push eax  +
lea ecx [ebp-6Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101E44C  +
mov ecx [ebp-68h] +
mov [ebp-4] bl +
cmp ecx ebx +
jz loc_101E534  +
call sub_1004DE0  +
push esi  +
lea ecx [ebp-68h] +
call sub_1006860  +
lea eax [ebp-68h] +
push eax  +
lea ecx [ebp-6Ch] +
mov byte ptr [ebp-4] 2 +
call sub_101E44C  +
mov ecx [ebp-68h] +
cmp ecx ebx +
jz loc_101E559  +
call sub_1004DE0  +
mov edi [ebp-6Ch] +
mov [ebp-64h] ebx +
cmp edi ebx +
jz loc_101E567  +
mov eax [edi] +
jmp loc_101E569  +
xor eax eax +
lea ecx [ebp-64h] +
push ecx  +
push 20019h  +
push ebx  +
push eax  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jz loc_101E5AB  +
jle loc_101E58F  +
and eax 0FFFFh +
or eax 80070000h +
lea ecx [ebp-64h] +
mov esi eax +
call sub_101DD7E  +
cmp edi ebx +
jz loc_101E5A4  +
mov ecx edi +
call sub_1004DE0  +
mov eax esi +
jmp loc_101E6CC  +
xor eax eax +
push 4Eh  +
mov [ebp-60h] ax +
lea eax [ebp-5Eh] +
push ebx  +
push eax  +
mov [ebp-70h] ebx +
call memset  +
mov esi ds:RegQueryValueExW +
add esp 0Ch +
lea eax [ebp-7Ch] +
push eax  +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp-70h] +
push eax  +
push ebx  +
push offset ValueName  +
push dword ptr [ebp-64h]  +
mov dword ptr [ebp-7Ch] 50h +
call esi  +
cmp eax ebx +
jnz loc_101E583  +
cmp dword ptr [ebp-70h] 1 +
jz loc_101E60E  +
lea ecx [ebp-64h] +
call sub_101DD7E  +
cmp edi ebx +
jz loc_101E604  +
mov ecx edi +
call sub_1004DE0  +
mov eax 80020005h +
jmp loc_101E6CC  +
push dword ptr [ebp-74h]  +
xor eax eax +
mov [ebp-12h] ax +
lea eax [ebp-60h] +
push eax  +
call ds:IIDFromString  +
mov edi eax +
cmp edi ebx +
jge loc_101E642  +
lea ecx [ebp-64h] +
call sub_101DD7E  +
mov ecx [ebp-6Ch] +
cmp ecx ebx +
jz loc_101E63B  +
call sub_1004DE0  +
mov eax edi +
jmp loc_101E6CC  +
cmp [ebp-78h] ebx +
jz loc_101E6B6  +
push 4  +
pop edi  +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-68h] +
push eax  +
lea eax [ebp-70h] +
push eax  +
push ebx  +
push offset aIndex  +
push dword ptr [ebp-64h]  +
mov [ebp-68h] ebx +
mov [ebp-74h] edi +
call esi  +
cmp eax ebx +
jz loc_101E691  +
jle loc_101E677  +
and eax 0FFFFh +
or eax 80070000h +
lea ecx [ebp-64h] +
mov esi eax +
call sub_101DD7E  +
mov ecx [ebp-6Ch] +
cmp ecx ebx +
jz loc_101E5A4  +
jmp loc_101E59F  +
cmp [ebp-70h] edi +
jz loc_101E6AE  +
lea ecx [ebp-64h] +
call sub_101DD7E  +
mov ecx [ebp-6Ch] +
cmp ecx ebx +
jz loc_101E604  +
jmp loc_101E5FF  +
mov eax [ebp-68h] +
mov ecx [ebp-78h] +
mov [ecx] eax +
lea ecx [ebp-64h] +
call sub_101DD7E  +
mov ecx [ebp-6Ch] +
cmp ecx ebx +
jz loc_101E6CA  +
call sub_1004DE0  +
xor eax eax +
call sub_10177AC  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ebx +
lea edi [ebp+var_24] +
movs   +
movs   +
movs   +
mov [ebp+var_30] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_38] ecx +
mov ecx ebx +
mov [ebp+var_2C] eax +
movs   +
call sub_101F09C  +
xor ecx ecx +
mov edx eax +
xor eax eax +
mov [ebp+var_14] ecx +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
mov [ebp+var_28] ecx +
mov [ebp+var_34] ecx +
cmp [ebp+var_2C] ecx +
jz loc_101E730  +
lea eax [ebp+var_34] +
mov [ebp+var_28] eax +
push 4  +
pop ecx  +
lea edi [ebp+var_24] +
mov esi offset dword_1002770 +
xor eax eax +
cmps   +
jz loc_101E74C  +
cmp [ebp+var_2C] eax +
jnz loc_101E74C  +
cmp [ebp+arg_8] 1 +
jnz loc_101E7B7  +
push [ebp+var_28]  +
mov ecx [ebp+var_38] +
lea eax [ebp+var_14] +
push eax  +
push edx  +
call sub_101E4C3  +
test eax eax +
jl loc_101E7D1  +
cmp [ebp+arg_8] 2 +
jnz loc_101E77F  +
push 4  +
pop ecx  +
lea edi [ebp+var_14] +
lea esi [ebp+var_24] +
xor eax eax +
cmps   +
jz loc_101E77F  +
lea esi [ebp+var_24] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
push 4  +
pop ecx  +
lea edi [ebp+var_24] +
mov esi offset dword_1002770 +
xor eax eax +
cmps   +
jnz loc_101E7E2  +
lea esi [ebp+var_14] +
lea edi [ebp+var_24] +
movs   +
movs   +
movs   +
lea eax [ebp+var_14] +
push eax  +
mov ecx ebx +
movs   +
call sub_101F09C  +
push eax  +
push offset aJobstoreGettas  +
push 0  +
push 4  +
call sub_101DCE4  +
add esp 14h +
mov edi [ebp+var_30] +
mov eax [ebp+var_2C] +
lea esi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
test eax eax +
jz loc_101E7CF  +
mov ecx [ebp+var_28] +
mov ecx [ecx] +
mov [eax] ecx +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1017692  +
leave   +
retn 10h  +
push 4  +
pop ecx  +
lea edi [ebp+var_14] +
lea esi [ebp+var_24] +
xor eax eax +
cmps   +
jz loc_101E7B7  +
mov edi [ebp+var_30] +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax 80041313h +
jmp loc_101E7D1  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov [ebp-88h] eax +
xor eax eax +
xor ebx ebx +
mov [ebp-70h] ebx +
lea edi [ebp-6Ch] +
stos   +
stos   +
mov [ebp-84h] ecx +
mov ecx [ebp+8] +
mov [ebp-94h] ecx +
mov dword ptr [ebp-8Ch] 1 +
stos   +
call sub_101F09C  +
mov edi [ebp-84h] +
mov esi eax +
lea eax [edi+10h] +
push eax  +
lea ecx [ebp-84h] +
mov [ebp-80h] ebx +
mov [ebp-74h] ebx +
mov [ebp-90h] eax +
call sub_101E364  +
push offset aTaskcacheTree  +
lea ecx [ebp-84h] +
mov [ebp-4] ebx +
call sub_100F006  +
push 5Ch  +
pop eax  +
cmp ax [esi] +
jnz loc_101E88A  +
inc esi  +
inc esi  +
push esi  +
lea ecx [ebp-84h] +
call sub_100F006  +
push 2  +
pop eax  +
cmp [ebp+10h] eax +
jnz loc_101E8A1  +
mov [ebp-80h] eax +
lea eax [ebp-74h] +
push eax  +
push dword ptr [ebp-80h]  +
lea eax [ebp-70h] +
push eax  +
push dword ptr [ebp-94h]  +
mov ecx edi +
call sub_101E6D9  +
cmp eax ebx +
jge loc_101E8D5  +
mov esi eax +
push dword ptr [ebp-84h]  +
call ds:SysFreeString  +
mov eax esi +
call sub_10177AC  +
retn 0Ch  +
push 28h  +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp-70h] +
push eax  +
call ds:StringFromGUID2  +
test eax eax +
jnz loc_101E8F0  +
mov esi 8007007Ah +
jmp loc_101E8BF  +
cmp [ebp-74h] ebx +
jz loc_101E921  +
push dword ptr [ebp-88h]  +
lea eax [ebp-60h] +
push eax  +
push dword ptr [ebp-74h]  +
mov ecx edi +
call sub_101E399  +
mov esi eax +
cmp esi ebx +
jge loc_101E91B  +
push esi  +
call sub_101DEBE  +
test al al +
jnz loc_101E921  +
jmp loc_101E8BF  +
mov [ebp-8Ch] ebx +
cmp dword ptr [ebp+10h] 2 +
jnz loc_101E9B3  +
cmp [ebp-8Ch] ebx +
jnz loc_101E938  +
cmp [ebp-74h] ebx +
jnz loc_101E9B3  +
mov dword ptr [ebp-78h] 1 +
mov eax [ebp-74h] +
cmp [ebp-78h] eax +
jz loc_101E96F  +
push dword ptr [ebp-88h]  +
lea eax [ebp-60h] +
push eax  +
push dword ptr [ebp-78h]  +
mov ecx edi +
call sub_101E399  +
mov esi eax +
cmp esi ebx +
jge loc_101E97A  +
push esi  +
call sub_101DEBE  +
test al al +
jz loc_101E8BF  +
inc dword ptr [ebp-78h]  +
cmp dword ptr [ebp-78h] 4 +
jl loc_101E93F  +
jmp loc_101E980  +
mov [ebp-8Ch] ebx +
cmp [ebp-74h] ebx +
jnz loc_101E9B3  +
push dword ptr [ebp-88h]  +
mov ecx edi +
push dword ptr [ebp-94h]  +
call sub_101E2F7  +
mov esi eax +
cmp esi ebx +
jge loc_101E9AD  +
push esi  +
call sub_101DEBE  +
test al al +
jnz loc_101E9B3  +
jmp loc_101E8BF  +
mov [ebp-8Ch] ebx +
mov [ebp-7Ch] ebx +
push dword ptr [ebp-90h]  +
lea ecx [ebp-74h] +
mov byte ptr [ebp-4] 1 +
call sub_101E364  +
push offset aTaskcacheTasks  +
lea ecx [ebp-74h] +
mov byte ptr [ebp-4] 2 +
call sub_100F006  +
push dword ptr [ebp-88h]  +
lea eax [ebp-7Ch] +
push eax  +
mov edi 20019h +
push edi  +
push dword ptr [ebp-74h]  +
mov esi 80000002h +
push esi  +
call sub_101EE69  +
cmp eax ebx +
jz loc_101EA1F  +
jle loc_101EA07  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push dword ptr [ebp-74h]  +
call ds:SysFreeString  +
lea ecx [ebp-7Ch] +
call sub_101DD7E  +
jmp loc_101E8BF  +
push dword ptr [ebp-88h]  +
lea eax [ebp-60h] +
push eax  +
push dword ptr [ebp-7Ch]  +
call sub_101EEBB  +
cmp eax ebx +
jz loc_101EA40  +
cmp eax 2 +
jz loc_101EA46  +
cmp eax ebx +
jg loc_101E9FD  +
jmp loc_101EA07  +
mov [ebp-8Ch] ebx +
cmp dword ptr [ebp+10h] 1 +
jnz loc_101EABF  +
mov [ebp-90h] ebx +
mov [ebp-80h] ebx +
push dword ptr [ebp-88h]  +
lea eax [ebp-80h] +
push eax  +
push 2  +
push dword ptr [ebp-84h]  +
mov byte ptr [ebp-4] 3 +
push esi  +
call sub_101EE69  +
cmp eax ebx +
jz loc_101EA90  +
jle loc_101EA81  +
and eax 0FFFFh +
or eax 80070000h +
lea ecx [ebp-80h] +
mov esi eax +
call sub_101DD7E  +
jmp loc_101EA09  +
push 4  +
lea eax [ebp-90h] +
push eax  +
push 4  +
push ebx  +
push offset aIndex  +
push dword ptr [ebp-80h]  +
call ds:RegSetValueExW  +
cmp eax ebx +
jz loc_101EAB2  +
jg loc_101EA77  +
jmp loc_101EA81  +
lea ecx [ebp-80h] +
call sub_101DD7E  +
jmp loc_101EB75  +
cmp [ebp+10h] ebx +
jnz loc_101EB75  +
push 5Ch  +
push dword ptr [ebp-84h]  +
call wcsrchr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_101EAF8  +
push dword ptr [ebp-74h]  +
call ds:SysFreeString  +
lea ecx [ebp-7Ch] +
call sub_101DD7E  +
mov esi 8000FFFFh +
jmp loc_101E8BF  +
xor eax eax +
mov [ebx] ax +
and [ebp-78h] eax +
inc ebx  +
inc ebx  +
push dword ptr [ebp-88h]  +
lea eax [ebp-78h] +
push eax  +
push edi  +
push dword ptr [ebp-84h]  +
mov byte ptr [ebp-4] 4 +
push esi  +
call sub_101EE69  +
xor esi esi +
cmp eax esi +
jz loc_101EB3C  +
cmp eax 2 +
jz loc_101EB42  +
jmp loc_101EB5F  +
and eax 0FFFFh +
or eax 80070000h +
lea ecx [ebp-78h] +
jmp loc_101EA84  +
mov [ebp-8Ch] esi +
cmp [ebp-78h] esi +
jz loc_101EB6B  +
push dword ptr [ebp-88h]  +
push ebx  +
push dword ptr [ebp-78h]  +
call sub_101EEBB  +
cmp eax esi +
jz loc_101EB65  +
cmp eax 2 +
jz loc_101EB6B  +
cmp eax esi +
jg loc_101EB2A  +
jmp loc_101EB34  +
mov [ebp-8Ch] esi +
lea ecx [ebp-78h] +
call sub_101DD7E  +
xor ebx ebx +
push dword ptr [ebp-74h]  +
call ds:SysFreeString  +
lea ecx [ebp-7Ch] +
call sub_101DD7E  +
cmp [ebp-8Ch] ebx +
jz loc_101EB98  +
mov esi 80070002h +
jmp loc_101E8BF  +
xor esi esi +
jmp loc_101E8BF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101E807  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
xor ebx ebx +
push ebx  +
mov [ebp-2D0h] ecx +
push ebx  +
lea ecx [ebp-2C8h] +
call sub_101F254  +
xor eax eax +
push 208h  +
mov [ebp-21Ch] ax +
lea eax [ebp-21Ah] +
push ebx  +
push eax  +
mov [ebp-4] ebx +
call memset  +
mov dword ptr [ebp-288h] offset off_1002430 +
mov [ebp-284h] bl +
mov [ebp-280h] ebx +
xor eax eax +
lea edi [ebp-27Ch] +
stos   +
stos   +
stos   +
add esp 0Ch +
stos   +
push esi  +
lea eax [ebp-21Ch] +
push eax  +
mov byte ptr [ebp-4] 1 +
mov [ebp-2CCh] ebx +
call sub_101FAF7  +
mov edi eax +
cmp edi ebx +
jl loc_101ED1C  +
push ebx  +
lea eax [ebp-21Ch] +
push eax  +
lea ecx [ebp-310h] +
call sub_101F254  +
push eax  +
lea ecx [ebp-2C8h] +
mov byte ptr [ebp-4] 2 +
call sub_101F2EB  +
lea ecx [ebp-310h] +
mov byte ptr [ebp-4] 1 +
call sub_101E493  +
lea eax [ebp-21Ch] +
push eax  +
call sub_101FA89  +
test al al +
jz loc_101EC96  +
mov edi 80070005h +
jmp loc_101ED1C  +
lea ecx [ebp-288h] +
call sub_101F7C7  +
mov edi eax +
cmp edi ebx +
jl loc_101ED1C  +
mov ecx [ebp-2D0h] +
lea eax [ebp-288h] +
push eax  +
lea eax [ebp-2C8h] +
push eax  +
call sub_101E2F7  +
mov edi eax +
push edi  +
call sub_101DEBE  +
test al al +
jz loc_101ECD8  +
mov dword ptr [ebp-2CCh] 1 +
jmp loc_101ECDC  +
cmp edi ebx +
jl loc_101ED1C  +
mov ecx [ebp-2D0h] +
lea eax [ebp-288h] +
push eax  +
lea eax [ebp-2C8h] +
push eax  +
call sub_101EBA4  +
mov edi eax +
push edi  +
call sub_101DEBE  +
test al al +
jz loc_101ED0B  +
cmp [ebp-2CCh] ebx +
jnz loc_101ED1C  +
jmp loc_101ED0F  +
cmp edi ebx +
jl loc_101ED1C  +
lea ecx [ebp-288h] +
call sub_101F89E  +
mov edi eax +
lea ecx [ebp-288h] +
mov [ebp-4] bl +
call sub_101F92F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2C8h] +
call sub_101E493  +
mov eax edi +
call sub_10177AC  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_10025F4 +
call ds:InitializeCriticalSection  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_10025F4 +
test eax eax +
jz loc_101ED89  +
push 0  +
push eax  +
call CryptReleaseContext  +
add esi 0Ch +
push esi  +
call ds:DeleteCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101ED6E  +
test byte ptr [ebp+8] 1 +
jz loc_101EDB4  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi CryptAcquireContextW +
push edi  +
mov edi 0F0000000h +
push edi  +
push 18h  +
push offset pszProvider  +
lea ebx [ecx+4] +
push 0  +
push ebx  +
mov [ebp+var_4] ecx +
call esi  +
test eax eax +
jnz loc_101EE16  +
push edi  +
push 18h  +
push offset aMicrosoftEnh_0  +
push eax  +
push ebx  +
call esi  +
test eax eax +
jnz loc_101EE16  +
call ds:__imp_GetLastError  +
mov ebx [ebx] +
mov esi eax +
test ebx ebx +
jz loc_101EE12  +
push 0  +
push ebx  +
call CryptReleaseContext  +
mov eax esi +
jmp loc_101EE25  +
mov eax [ebp+var_4] +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_101EE56  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push [ebp+lpFileName]  +
call ds:DeleteFileTransactedW  +
jmp loc_101EE5F  +
push [ebp+lpFileName]  +
call ds:DeleteFileW  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_101EE9D  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push [ebp+phkResult]  +
push [ebp+samDesired]  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call RegOpenKeyTransactedW  +
jmp loc_101EEB1  +
push [ebp+phkResult]  +
push [ebp+samDesired]  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push 0  +
test eax eax +
jz loc_101EEEE  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push 0  +
push 20006h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call RegDeleteKeyTransactedW  +
jmp loc_101EEFC  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:RegDeleteKeyExW  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_18] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_101EF40  +
cmp word ptr [edx] 0 +
jnz loc_101EF24  +
mov [ebp+arg_18] 0Eh +
jmp loc_101EF47  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101EF29  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_18] eax +
jmp loc_101EF47  +
mov [ebp+arg_18] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_101EF5D  +
cmp word ptr [edx] 0 +
jnz loc_101EF5F  +
mov edx offset aNull_0 +
jmp loc_101EF5F  +
mov edx ebx +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_101EF89  +
cmp word ptr [edi] 0 +
jnz loc_101EF70  +
push 0Eh  +
jmp loc_101EF8B  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101EF75  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_101EF8C  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_101EFA1  +
cmp word ptr [edi] 0 +
jnz loc_101EF9D  +
mov eax offset aNull_0 +
jmp loc_101EFA3  +
mov eax edi +
jmp loc_101EFA3  +
mov eax ebx +
push 0  +
push [ebp+arg_18]  +
push edx  +
push ecx  +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
add [eax] ebp +
daa   +
add [ecx] al +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002728 +
jz loc_101EFFA  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax ecx +
test esi esi +
jz loc_101F028  +
push edi  +
push 8  +
pop ecx  +
lea edi [eax+1Ch] +
movs   +
mov dword ptr [eax+3Ch] 1 +
pop edi  +
jmp loc_101F02C  +
and dword ptr [eax+3Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_101F046  +
call sub_101F482  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp dword ptr [ebp+8] 0 +
jnz loc_101F071  +
push esi  +
push edi  +
mov esi offset dword_1002770 +
mov edi ecx +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
push ecx  +
push dword ptr [ebp+8]  +
call ds:IIDFromString  +
test eax eax +
jge locret_101F06D  +
push eax  +
lea ecx [ebp-20h] +
call sub_101DC8D  +
push offset dword_1021FD4  +
lea eax [ebp-20h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push esi  +
lea esi [ecx+10h] +
mov ecx esi +
call sub_10068B2  +
test eax eax +
jnz loc_101F0AF  +
pop esi  +
retn   +
mov eax [esi] +
test eax eax +
jz loc_101F0B9  +
mov eax [eax] +
jmp loc_101F0BB  +
xor eax eax +
add eax 0Eh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101DEEE  +
mov eax [ebp+arg_0] +
mov [esi] eax +
test eax eax +
jz loc_101F0E5  +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
xor ecx ecx +
mov dword ptr [eax] offset off_1002728 +
mov [eax+4] ecx +
mov dword ptr [eax] offset off_100272C +
mov dword ptr [eax+8] 412110h +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov dword ptr [eax+18h] 15h +
mov [eax+1Ch] ecx +
mov [eax+20h] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101F4E6  +
test byte ptr [ebp+8] 1 +
jz loc_101F13E  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_101F166  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov ecx edi +
call sub_1004E0D  +
mov eax [esi] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
lea eax [edi+10h] +
push eax  +
lea ecx [esi+10h] +
call sub_101F14A  +
mov eax [edi+14h] +
pop edi  +
mov [esi+14h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov ebx ecx +
mov edi [ebp+8] +
test edi edi +
jnz loc_101F1D0  +
and [ebp+8] edi +
lea eax [ebp+8] +
push eax  +
lea ecx [ebx+10h] +
call sub_101F14A  +
and [ebx+14h] edi +
jmp loc_101F247  +
movzx eax word ptr [edi] +
cmp ax 5Ch +
jz loc_101F1E6  +
cmp ax 2Fh +
jz loc_101F1E6  +
push offset aNtTask  +
jmp loc_101F1EB  +
push offset aNtTask_0  +
lea esi [ebx+10h] +
mov ecx esi +
call sub_1009065  +
push edi  +
lea ecx [ebp+8] +
call sub_1006860  +
lea eax [ebp+8] +
xor edi edi +
push eax  +
mov ecx esi +
mov [ebp-4] edi +
call sub_101E44C  +
mov ecx [ebp+8] +
cmp ecx edi +
jz loc_101F21A  +
call sub_1004DE0  +
mov esi [esi] +
cmp esi edi +
jz loc_101F224  +
mov eax [esi] +
jmp loc_101F242  +
xor eax eax +
jmp loc_101F242  +
cmp word ptr [eax] 2Fh +
jnz loc_101F234  +
push 5Ch  +
pop ecx  +
mov [eax] cx +
cmp word ptr [eax] 5Ch +
jnz loc_101F240  +
lea ecx [eax+2] +
mov [ebx+14h] ecx +
inc eax  +
inc eax  +
cmp [eax] di +
jnz loc_101F228  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [esi+10h] 0 +
and dword ptr [ebp-4] 0 +
lea edi [esi+18h] +
and dword ptr [edi] 0 +
mov byte ptr [ebp-4] 1 +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F2A5  +
test dword ptr [eax+1Ch] 800h +
jz loc_101F2A5  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push esi  +
push offset dword_10026EC  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101EF06  +
push 28h  +
call sub_1017299  +
pop ecx  +
test eax eax +
jz loc_101F2BA  +
mov ecx eax +
call sub_101F0F1  +
jmp loc_101F2BC  +
xor eax eax +
push eax  +
mov ecx edi +
call sub_101F0C5  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_101F1A7  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call loc_101F050  +
and dword ptr [esi+3Ch] 0 +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
push ebx  +
mov [ebp+var_4] edi +
call sub_101F17E  +
mov esi ebx +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_4] +
push dword ptr [ebx+18h]  +
lea ecx [esi+18h] +
call sub_101F0C5  +
cmp dword ptr [ebx+3Ch] 0 +
jz loc_101F321  +
add ebx 1Ch +
jmp loc_101F323  +
xor ebx ebx +
push ebx  +
mov ecx esi +
call sub_101F006  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push 0Eh  +
mov esi ecx +
call sub_101DC8D  +
mov dword ptr [esi] offset off_1002418 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
jmp loc_101F36C  +
mov ecx [eax] +
mov edx [ebp+arg_C] +
mov [edx] ecx +
add [ebp+arg_C] 4 +
add eax 4 +
cmp eax [ebp+arg_8] +
jnz loc_101F35E  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
mov [eax] ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_101E003  +
mov dword ptr [esi] offset off_1002418 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101F354  +
mov eax [ebp+arg_0] +
add esp 18h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
push eax  +
mov esi ecx +
push dword ptr [esi+8]  +
add eax 4 +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F3C8  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add esp 10h +
add dword ptr [esi+8] 0FFFFFFFCh +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+10h]  +
call sub_10172D7  +
pop ecx  +
lea ecx [esi+0Ch] +
call sub_1004E0D  +
lea ecx [esi+8] +
call sub_1004E0D  +
lea ecx [esi+4] +
pop esi  +
jmp sub_1004E0D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101F430  +
test [ebp+arg_0] 1 +
jz loc_101F476  +
push esi  +
call sub_10172D7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov edi offset byte_102A314 +
mov ecx edi +
call sub_101F606  +
dec dword ptr [esi+18h]  +
mov ebx [esi+18h] +
jnz loc_101F4D3  +
mov eax dword_102A330 +
mov ecx dword_102A334 +
jmp loc_101F4B5  +
cmp [eax] esi +
jz loc_101F4BB  +
add eax 4 +
cmp eax ecx +
jnz loc_101F4AE  +
jmp loc_101F4CA  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
mov ecx offset unk_102A32C +
call sub_101F3FA  +
push 1  +
mov ecx esi +
call sub_101F45C  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100272C +
mov eax [esi+20h] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_101F50F  +
push eax  +
call sub_10172D7  +
pop ecx  +
lea ecx [esi+10h] +
call sub_101F036  +
mov dword ptr [esi] offset off_1002728 +
call __EH_epilog3  +
retn   +
***
jmp ds:_purecall  +
***
or (byte_1023BFF-1023C5Fh)[eax] ch +
and al [edx] +
add eax ebp +
popa   +
test bh bh +
inc dword ptr [ebx-0FF039Bh]  +
adc eax offset DebugBreak +
jmp loc_101F5B6  +
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
or eax 0FFFFFFFFh +
call __SEH_epilog4  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
push esi  +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_101F5FA  +
lea ecx [ebp-20h] +
call sub_101F339  +
push offset dword_1022238  +
lea eax [ebp-20h] +
push eax  +
call _CxxThrowException  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
push ecx  +
call ds:EnterCriticalSection  +
jmp loc_101F638  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101DD53  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_101F699  +
cmp word ptr [edx] 0 +
jnz loc_101F67E  +
push 0Eh  +
jmp loc_101F69B  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101F684  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101F69C  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101F6AD  +
cmp word ptr [edx] 0 +
jnz loc_101F6B2  +
mov edx offset aNull_0 +
jmp loc_101F6B2  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_101F70C  +
cmp word ptr [edx] 0 +
jnz loc_101F6F1  +
push 0Eh  +
jmp loc_101F70E  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101F6F7  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101F70F  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101F720  +
cmp word ptr [edx] 0 +
jnz loc_101F725  +
mov edx offset aNull_0 +
jmp loc_101F725  +
mov edx offset aNull +
push 0  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_101F77F  +
cmp word ptr [edx] 0 +
jnz loc_101F764  +
push 0Eh  +
jmp loc_101F781  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101F76A  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101F782  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101F793  +
cmp word ptr [edx] 0 +
jnz loc_101F798  +
mov edx offset aNull_0 +
jmp loc_101F798  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ebx [esi+0Ch] +
push ebx  +
call ds:CoCreateGuid  +
xor edi edi +
cmp eax edi +
jl loc_101F894  +
lea eax [esi+1Ch] +
push 27h  +
push eax  +
push ebx  +
mov [ebp+var_4] eax +
call ds:StringFromGUID2  +
test eax eax +
jnz loc_101F804  +
mov eax 8000FFFFh +
jmp loc_101F894  +
push [ebp+var_4]  +
add esi 8 +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call CreateTransaction  +
push eax  +
mov ecx esi +
call sub_101F64A  +
mov esi [esi] +
cmp esi edi +
jz loc_101F854  +
cmp esi 0FFFFFFFFh +
jz loc_101F854  +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F850  +
test byte ptr [eax+1Ch] 8 +
jz loc_101F850  +
push esi  +
push [ebp+var_4]  +
push offset dword_10027A0  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101F668  +
xor eax eax +
jmp loc_101F894  +
call ds:__imp_GetLastError  +
cmp eax edi +
jle loc_101F868  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F892  +
test byte ptr [eax+1Ch] 8 +
jz loc_101F892  +
push esi  +
push [ebp+var_4]  +
push offset dword_10027A0  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101F668  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
push edi  +
xor edi edi +
cmp ecx edi +
jz loc_101F8FB  +
cmp ecx 0FFFFFFFFh +
jz loc_101F8FB  +
push ecx  +
call CommitTransaction  +
test eax eax +
jnz loc_101F8D4  +
call ds:__imp_GetLastError  +
cmp eax edi +
jle loc_101F8D0  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_101F8D8  +
mov byte ptr [esi+4] 1 +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F925  +
test byte ptr [eax+1Ch] 8 +
jz loc_101F925  +
push edi  +
lea ecx [esi+1Ch] +
push ecx  +
push dword ptr [esi+8]  +
push offset dword_10027A0  +
push 0Ch  +
jmp loc_101F91A  +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F925  +
test byte ptr [eax+1Ch] 8 +
jz loc_101F925  +
push edi  +
add esi 1Ch +
push esi  +
push ecx  +
push offset dword_10027A0  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101F74E  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002430 +
and dword ptr [ebp-4] 0 +
lea edi [esi+8] +
mov ecx [edi] +
test ecx ecx +
jz loc_101F9BE  +
cmp ecx 0FFFFFFFFh +
jz loc_101F9BE  +
cmp byte ptr [esi+4] 0 +
jnz loc_101F9BE  +
mov eax off_1029CA4 +
cmp eax offset off_1029CA4 +
jz loc_101F987  +
test byte ptr [eax+1Ch] 8 +
jz loc_101F987  +
lea edx [esi+1Ch] +
push edx  +
push ecx  +
push offset dword_10027A0  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101F6DB  +
push dword ptr [edi]  +
call RollbackTransaction  +
test eax eax +
jnz loc_101F9BE  +
call ds:__imp_GetLastError  +
mov ebx eax +
push ebx  +
push offset aRollbacktransa  +
call sub_101FBD0  +
pop ecx  +
pop ecx  +
mov ecx dword_102A360 +
add esi 0Ch +
push esi  +
push 0  +
push ebx  +
push offset dword_10023D0  +
call sub_101FC70  +
mov ecx edi +
call sub_101DD53  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101F9F9  +
cmp eax esi +
ja loc_101F9F9  +
jz loc_101F9FE  +
jmp loc_101FA06  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101FA0F  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_101FA4D  +
cmp word ptr [edx] 0 +
jnz loc_101FA32  +
push 0Eh  +
jmp loc_101FA4F  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FA38  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101FA50  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101FA61  +
cmp word ptr [edx] 0 +
jnz loc_101FA66  +
mov edx offset aNull_0 +
jmp loc_101FA66  +
mov edx offset aNull +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx word ptr [eax] +
test cx cx +
jnz loc_101FA9D  +
mov al 1 +
jmp loc_101FAB2  +
cmp cx 5Ch +
jz loc_101FAA7  +
xor al al +
jmp loc_101FAB2  +
xor ecx ecx +
cmp [eax+2] cx +
setz cl  +
mov al cl +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_101FAD0  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101FAD5  +
mov eax 80070057h +
test eax eax +
jl loc_101FAEE  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_101F9D0  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
push esi  +
push edi  +
mov [ecx] ax +
test ebx ebx +
jz loc_101FBB4  +
movzx eax word ptr [ebx] +
test ax ax +
jz loc_101FBB4  +
push 5Ch  +
pop edx  +
mov esi 105h +
cmp dx ax +
jz loc_101FB3F  +
push offset asc_10013E4  +
push esi  +
push ecx  +
call sub_10064DE  +
test eax eax +
jl loc_101FBC4  +
xor ecx ecx +
xor edx edx +
movzx edi word ptr [ebx+edx*2] +
test di di +
jz loc_101FB92  +
movzx eax di +
sub eax 20h +
jz loc_101FB7F  +
sub eax 0Eh +
jz loc_101FB6C  +
dec eax  +
jz loc_101FBAD  +
sub eax 0Bh +
jz loc_101FBAD  +
sub eax 22h +
jnz loc_101FB8A  +
cmp cx 5Ch +
jmp loc_101FB88  +
cmp cx 2Eh +
jz loc_101FBAD  +
cmp cx 5Ch +
jnz loc_101FB8A  +
cmp [ebx+edx*2+2] cx +
jmp loc_101FB88  +
cmp cx 5Ch +
jz loc_101FBAD  +
test cx cx +
jz loc_101FBAD  +
inc edx  +
cmp edx esi +
movzx ecx di +
jl loc_101FB43  +
cmp edx esi +
jge loc_101FBAD  +
cmp edx 1 +
jle loc_101FBA1  +
cmp cx 5Ch +
jz loc_101FBAD  +
push ebx  +
push esi  +
push [ebp+arg_0]  +
call sub_101E04C  +
jmp loc_101FBC4  +
mov eax 8007007Bh +
jmp loc_101FBC4  +
push offset asc_10013E4  +
push 105h  +
push ecx  +
call sub_10064DE  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1004h +
call __alloca_probe  +
mov eax dword_1029C7C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax off_1029CA4 +
push esi  +
mov esi offset off_1029CA4 +
cmp eax esi +
jz loc_101FC5C  +
test byte ptr [eax+1Ch] 4 +
jz loc_101FC5C  +
xor eax eax +
push 0FFEh  +
push eax  +
mov word ptr [ebp+var_1004] ax +
lea eax [ebp+var_1004+2] +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+var_1004] +
push 800h  +
push eax  +
call sub_101FABB  +
mov eax off_1029CA4 +
cmp eax esi +
jz loc_101FC5C  +
test byte ptr [eax+1Ch] 4 +
jz loc_101FC5C  +
lea ecx [ebp+var_1004] +
push ecx  +
push offset dword_1002808  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101FA1C  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1017692  +
leave   +
retn   +
***
retn 10h  +
***
cmp cl 40h +
jnb loc_101FC9A  +
cmp cl 20h +
jnb loc_101FC90  +
shld edx eax +
shl eax cl +
retn   +
***
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
retf 0FF79h  +
***
push dword ptr [ebp-10h]  +
call sub_10172D7  +
pop ecx  +
retn   +
***
retn 0FF74h  +
***
push dword ptr [ebp-10h]  +
call sub_10172D7  +
pop ecx  +
retn   +
***
imul edi edi +
pop ecx  +
retn   +
***
retf 0FF6Bh  +
***
pop ecx  +
retn   +
***
imul edi edi +
pop ecx  +
retn   +
***
imul edi edi +
pop ecx  +
retn   +
***
push offset byte_102A314  +
call ds:DeleteCriticalSection  +
retn   +
***
mov ecx dword_102A33C +
test ecx ecx +
jz locret_1021018  +
call sub_1004DE0  +
and dword_102A33C 0 +
retn   +
***
mov ecx dword_102A340 +
test ecx ecx +
jz loc_102102D  +
call sub_101F482  +
and dword_102A340 0 +
retn   +
***
mov ecx dword_102A344 +
test ecx ecx +
jz loc_1021049  +
call sub_101F482  +
and dword_102A344 0 +
retn   +
***
mov ecx dword_102A348 +
test ecx ecx +
jz loc_1021065  +
call sub_101F482  +
and dword_102A348 0 +
retn   +
***
mov ecx dword_102A34C +
test ecx ecx +
jz loc_1021081  +
call sub_101F482  +
and dword_102A34C 0 +
retn   +
***
mov ecx dword_102A350 +
test ecx ecx +
jz loc_102109D  +
call sub_101F482  +
and dword_102A350 0 +
retn   +
***
mov ecx dword_102A354 +
test ecx ecx +
jz loc_10210B9  +
call sub_101F482  +
and dword_102A354 0 +
retn   +
***
mov ecx dword_102A358 +
test ecx ecx +
jz loc_10210D5  +
call sub_101F482  +
and dword_102A358 0 +
retn   +
***
mov ecx dword_102A35C +
test ecx ecx +
jz loc_10210F1  +
call sub_101F482  +
and dword_102A35C 0 +
retn   +
***
retn 239h  +
***
retf 4802h  +
***
