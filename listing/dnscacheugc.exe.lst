mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
cmp dword ptr [edi] 5 +
jnz loc_100327F  +
cmp dword ptr [ebp+1Ch] 1 +
jnz loc_100327F  +
cmp dword ptr [ebp+14h] 0 +
jz loc_100327A  +
cmp dword ptr [ebp+18h] 0 +
jz loc_100327A  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100327A  +
cmp dword ptr [ebp+10h] 0 +
jz loc_100327A  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10046C4  +
mov esi eax +
test esi esi +
jnz loc_100324D  +
push 0Eh  +
jmp loc_100327C  +
push esi  +
add edi 4 +
push edi  +
call sub_100428C  +
mov edi eax +
test edi edi +
jz loc_1003276  +
push edi  +
push dword ptr [ebp+14h]  +
push offset aDnscacheFailed  +
push 1  +
call sub_10053CC  +
add esp 10h +
push esi  +
call sub_100413E  +
mov eax edi +
jmp loc_1003282  +
push 57h  +
pop eax  +
jmp loc_1003282  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
cmp dword ptr [edi] 4 +
jnz loc_1003307  +
cmp dword ptr [ebp+1Ch] 1 +
jnz loc_1003307  +
cmp dword ptr [ebp+14h] 0 +
jz loc_1003302  +
cmp dword ptr [ebp+18h] 0 +
jz loc_1003302  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1003302  +
cmp dword ptr [ebp+10h] 0 +
jz loc_1003302  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10046C4  +
mov esi eax +
test esi esi +
jnz loc_10032D5  +
push 0Eh  +
jmp loc_1003304  +
push esi  +
add edi 4 +
push edi  +
call sub_100428C  +
mov edi eax +
test edi edi +
jz loc_10032FE  +
push edi  +
push dword ptr [ebp+14h]  +
push offset aDnscacheFail_0  +
push 1  +
call sub_10053CC  +
add esp 10h +
push esi  +
call sub_100413E  +
mov eax edi +
jmp loc_100330A  +
push 57h  +
pop eax  +
jmp loc_100330A  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov ebx offset aSystemCurren_0 +
cmp eax 1 +
jz loc_1003330  +
cmp eax 3 +
jnz loc_1003336  +
cmp dword ptr [ebp+1Ch] 1 +
jz loc_100333B  +
xor eax eax +
inc eax  +
jmp loc_100338C  +
xor eax eax +
cmp [ebp+14h] eax +
jz loc_1003389  +
cmp [ebp+18h] eax +
jz loc_1003389  +
cmp [ebp+0Ch] eax +
jz loc_1003389  +
cmp [ebp+10h] eax +
jz loc_1003389  +
push 9  +
push offset aDnsdomain  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_1003336  +
cmp dword ptr [esi] 3 +
jnz loc_1003371  +
mov ebx offset aSystemCurrentc +
push 1  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset aDomain  +
push dword ptr [esi+4]  +
push ebx  +
call sub_1004536  +
jmp loc_100338C  +
push 57h  +
pop eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
cmp dword ptr [edi] 3 +
jnz loc_1003403  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_1003403  +
mov esi [ebp+14h] +
test esi esi +
jz loc_10033FE  +
cmp dword ptr [ebp+18h] 4 +
jb loc_10033FE  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10033FE  +
cmp dword ptr [ebp+10h] 0 +
jz loc_10033FE  +
push 14h  +
push offset aDisabledynamic  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_1003403  +
xor eax eax +
cmp [esi] eax +
push 4  +
push dword ptr [ebp+18h]  +
setz al  +
push esi  +
push offset aRegistrationen  +
mov [esi] eax +
push dword ptr [edi+4]  +
push offset aSystemCurrentc  +
call sub_1004536  +
jmp loc_1003406  +
push 57h  +
pop eax  +
jmp loc_1003406  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 3 +
jnz loc_1003472  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_1003472  +
xor eax eax +
cmp [ebp+14h] eax +
jz loc_100346D  +
cmp [ebp+18h] eax +
jz loc_100346D  +
cmp [ebp+0Ch] eax +
jz loc_100346D  +
cmp [ebp+10h] eax +
jz loc_100346D  +
push 23h  +
push offset aEnableadapterd  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_1003472  +
push 4  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset aRegisteradapte  +
push dword ptr [esi+4]  +
push offset aSystemCurrentc  +
call sub_1004536  +
jmp loc_1003475  +
push 57h  +
pop eax  +
jmp loc_1003475  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax] 1 +
push esi  +
push edi  +
jnz loc_10034DC  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_10034DC  +
xor edi edi +
cmp [ebp+14h] edi +
jz loc_10034D7  +
cmp [ebp+18h] edi +
jz loc_10034D7  +
cmp [ebp+0Ch] edi +
jz loc_10034D7  +
cmp [ebp+10h] edi +
jz loc_10034D7  +
push 17h  +
mov esi offset aUsedomainnamed +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_10034DC  +
push 4  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push esi  +
push edi  +
push offset aSystemCurren_0  +
call sub_1004536  +
jmp loc_10034DF  +
push 57h  +
pop eax  +
jmp loc_10034DF  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov esi [ebp+hMem] +
push edi  +
lea eax [ebp+uBytes] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+8]  +
mov [ebp+var_14] edi +
mov [ebp+cbValueName] edi +
mov [ebp+cbMaxValueNameLen] edi +
mov [ebp+cbData] edi +
mov [ebp+uBytes] edi +
mov [ebp+cValues] edi +
mov [ebp+Type] edi +
call ds:RegQueryInfoKeyW  +
inc [ebp+cbMaxValueNameLen]  +
inc [ebp+uBytes]  +
mov ebx eax +
cmp ebx edi +
jz loc_1003552  +
push ebx  +
push dword ptr [esi+0Ch]  +
push offset aDnscacheErrorQ  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov eax ebx +
jmp loc_10036A7  +
mov eax [ebp+cbMaxValueNameLen] +
mov ebx ds:LocalAlloc +
add eax eax +
push eax  +
push 40h  +
call ebx  +
push [ebp+uBytes]  +
mov [ebp+hMem] eax +
push 40h  +
call ebx  +
mov [ebp+lpData] eax +
cmp [ebp+hMem] edi +
jz loc_1003683  +
cmp eax edi +
jz loc_1003683  +
mov [ebp+dwIndex] edi +
cmp [ebp+cValues] edi +
jbe loc_100368A  +
mov eax [ebp+cbMaxValueNameLen] +
mov [ebp+cbValueName] eax +
mov eax [ebp+uBytes] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
push [ebp+hMem]  +
push [ebp+dwIndex]  +
push dword ptr [esi+8]  +
call ds:RegEnumValueW  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003665  +
mov [ebp+var_C] edi +
cmp ds:off_1001180 edi +
jz loc_100363D  +
mov eax offset off_1001180 +
push [ebp+Type]  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push [ebp+cbValueName]  +
push [ebp+hMem]  +
push esi  +
call dword ptr [eax]  +
xor ecx ecx +
mov ebx eax +
inc ecx  +
cmp ebx ecx +
jnz loc_10035FD  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
lea eax off_1001180[eax*4] +
cmp [eax] edi +
jnz loc_10035D1  +
cmp ebx edi +
jz loc_100363D  +
cmp ebx ecx +
jnz loc_100361B  +
push dword ptr [esi+0Ch]  +
push [ebp+hMem]  +
push offset aDnscacheNoCons  +
push ecx  +
call sub_10053CC  +
add esp 10h +
jmp loc_1003633  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+hMem]  +
push [ebp+var_C]  +
push offset aDnscacheConsum  +
push ecx  +
call sub_10053CC  +
add esp 18h +
cmp [ebp+var_14] edi +
jnz loc_1003654  +
mov [ebp+var_14] ebx +
jmp loc_1003654  +
push dword ptr [esi+0Ch]  +
push [ebp+hMem]  +
push [ebp+var_C]  +
push offset aDnscacheCons_0  +
push edi  +
call sub_10053CC  +
add esp 14h +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cValues] +
jb loc_100358C  +
jmp loc_100368A  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cValues]  +
push [ebp+dwIndex]  +
push offset aDnscacheFail_1  +
push 1  +
call sub_10053CC  +
add esp 18h +
mov [ebp+var_14] ebx +
jmp loc_100368A  +
mov [ebp+var_14] 0Eh +
mov esi ds:LocalFree +
cmp [ebp+hMem] edi +
jz loc_100369A  +
push [ebp+hMem]  +
call esi  +
cmp [ebp+lpData] edi +
jz loc_10036A4  +
push [ebp+lpData]  +
call esi  +
mov eax [ebp+var_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0Ah  +
push offset aInterfaces  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_10036DD  +
xor eax eax +
mov dword ptr [esi] 2 +
inc eax  +
jmp loc_10036DF  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_100704C +
xor eax ebp +
mov [ebp-4] eax +
and dword ptr [ebp-24h] 0 +
and dword ptr [ebp-20h] 0 +
push edi  +
mov edi [ebp+8] +
cmp dword ptr [edi+10h] 0FFFFFFFFh +
jnz loc_1003714  +
xor eax eax +
jmp loc_10037F7  +
push ebx  +
push esi  +
mov esi ds:LocalAlloc +
push 4Eh  +
push 40h  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_10037E3  +
push 8  +
push 40h  +
call esi  +
mov esi eax +
test esi esi +
jz loc_10037D8  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [edi+10h]  +
push dword ptr [edi+0Ch]  +
call sub_10040E4  +
test eax eax +
jnz loc_10037D1  +
push esi  +
push dword ptr [ebp-20h]  +
call ConvertInterfaceNameToLuidW  +
test eax eax +
jz loc_10037A1  +
push esi  +
push dword ptr [ebp-20h]  +
call ConvertInterfaceAliasToLuid  +
test eax eax +
jz loc_10037A1  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp-20h]  +
call ConvertStringToInterfacePhysicalAddress  +
test eax eax +
jz loc_1003791  +
push dword ptr [ebp-20h]  +
push offset aDnscacheUnable  +
push 1  +
call sub_10053CC  +
add esp 0Ch +
jmp loc_10037D1  +
push esi  +
push 6  +
lea eax [ebp-0Ch] +
push eax  +
call ConvertInterfacePhysicalAddressToLuid  +
test eax eax +
jnz loc_100377D  +
lea eax [ebp-1Ch] +
push eax  +
push esi  +
call ConvertInterfaceLuidToGuid  +
test eax eax +
jnz loc_10037D1  +
push 27h  +
push ebx  +
lea eax [ebp-1Ch] +
push eax  +
call sub_100473D  +
test eax eax +
jnz loc_10037D1  +
mov [edi+4] ebx +
xor ebx ebx +
mov dword ptr [edi] 3 +
mov dword ptr [ebp-24h] 1 +
push esi  +
call ds:LocalFree  +
test ebx ebx +
jz loc_10037E3  +
push ebx  +
call ds:LocalFree  +
cmp dword ptr [ebp-20h] 0 +
pop esi  +
pop ebx  +
jz loc_10037F4  +
push dword ptr [ebp-20h]  +
call ds:LocalFree  +
mov eax [ebp-24h] +
mov ecx [ebp-4] +
xor ecx ebp +
pop edi  +
call sub_1004A3D  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_1003821  +
push eax  +
call ds:LocalFree  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 14h  +
push offset aDnsserversearc  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_1003858  +
and dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi] 4 +
inc eax  +
jmp loc_100385A  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 14h  +
push offset aDnssuffixsearc  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10040B5  +
test eax eax +
jz loc_1003892  +
and dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi] 5 +
inc eax  +
jmp loc_1003894  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_100394E  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_100394E  +
mov eax [ebp+arg_8] +
and [ebp+hMem] 0 +
and [ebp+var_18] 0 +
mov [ebp+var_14] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_C] eax +
mov eax [esi] +
mov [ebp+var_4] edi +
mov [ebp+var_8] esi +
test eax eax +
jz loc_10038EE  +
lea ecx [ebp+hMem] +
push ecx  +
call eax  +
test eax eax +
jz loc_100394E  +
push [ebp+var_10]  +
push [ebp+hMem]  +
push offset aDnscacheTransi  +
push 0  +
call sub_10053CC  +
add esp 10h +
lea eax [ebp+hMem] +
push eax  +
call sub_1003AEF  +
test eax eax +
jz loc_1003922  +
push [ebp+arg_C]  +
push offset aDnscacheErrorW  +
push 1  +
call sub_10053CC  +
add esp 0Ch +
mov esi [esi+4] +
test esi esi +
jz loc_100392F  +
lea eax [ebp+hMem] +
push eax  +
call esi  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi]  +
push [ebp+var_10]  +
push [ebp+hMem]  +
push offset aDnscacheReturn  +
push 0  +
call sub_10053CC  +
xor eax eax +
add esp 18h +
inc eax  +
jmp loc_1003950  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi [ebp+dwIndex] +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+8]  +
mov [ebp+var_8] edi +
mov [ebp+hKey] edi +
mov [ebp+cbName] edi +
mov [ebp+cbMaxSubKeyLen] edi +
mov [ebp+cSubKeys] edi +
call ds:RegQueryInfoKeyW  +
inc [ebp+cbMaxSubKeyLen]  +
mov ebx eax +
cmp ebx edi +
jz loc_10039B6  +
push dword ptr [esi+0Ch]  +
push offset aDnscacheFail_2  +
push 1  +
call sub_10053CC  +
add esp 0Ch +
mov eax ebx +
jmp loc_1003AE3  +
mov eax [ebp+cbMaxSubKeyLen] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jnz loc_10039D7  +
mov [ebp+var_8] 0Eh +
jmp loc_1003AE0  +
mov [ebp+dwIndex] edi +
cmp [ebp+cSubKeys] edi +
jbe loc_1003AD7  +
mov eax [ebp+cbMaxSubKeyLen] +
push edi  +
push edi  +
push edi  +
push edi  +
mov [ebp+cbName] eax +
lea eax [ebp+cbName] +
push eax  +
push [ebp+hMem]  +
push [ebp+dwIndex]  +
push dword ptr [esi+8]  +
call ds:RegEnumKeyExW  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003A9D  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push [ebp+hMem]  +
push dword ptr [esi+8]  +
call ds:RegOpenKeyExW  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003AB8  +
mov eax [esi+14h] +
cmp [eax+8] edi +
jz loc_1003A5A  +
push 8  +
pop ecx  +
mov ebx ecx +
push [ebp+cbName]  +
push [ebp+hMem]  +
push [ebp+hKey]  +
push dword ptr [eax+ecx]  +
push esi  +
call sub_100389E  +
test eax eax +
jnz loc_1003A7B  +
mov eax [esi+14h] +
add ebx 4 +
mov ecx ebx +
cmp [ebx+eax] edi +
jnz loc_1003A37  +
push 57h  +
pop ebx  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+hMem]  +
push offset aDnscacheUnab_0  +
push 1  +
call sub_10053CC  +
add esp 14h +
cmp [ebp+var_8] edi +
jnz loc_1003A7B  +
mov [ebp+var_8] ebx +
cmp [ebp+hKey] edi +
jz loc_1003A8C  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] edi +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cSubKeys] +
jb loc_10039E3  +
jmp loc_1003AD7  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cSubKeys]  +
push [ebp+dwIndex]  +
push offset aDnscacheFail_3  +
push 1  +
call sub_10053CC  +
add esp 18h +
jmp loc_1003AD4  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cSubKeys]  +
push [ebp+dwIndex]  +
push [ebp+hMem]  +
push offset aDnscacheFail_4  +
push 1  +
call sub_10053CC  +
add esp 1Ch +
mov [ebp+var_8] ebx +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+hMem] +
push edi  +
push esi  +
xor ebx ebx +
call sub_10034EA  +
mov edi eax +
test edi edi +
jz loc_1003B1D  +
push edi  +
push dword ptr [esi+0Ch]  +
push offset aDnscacheErrorP  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov ebx edi +
push esi  +
call sub_100395B  +
mov edi eax +
test edi edi +
jz loc_1003B42  +
push edi  +
push dword ptr [esi+0Ch]  +
push offset aDnscacheErro_0  +
push 1  +
call sub_10053CC  +
add esp 10h +
test ebx ebx +
jnz loc_1003B42  +
mov ebx edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ecx ecx +
xor eax eax +
push edi  +
cmp esi ecx +
jz loc_1003B6B  +
cmp esi 7FFFFFFFh +
jbe loc_1003B70  +
mov eax 80070057h +
cmp eax ecx +
mov edi [ebp+arg_0] +
jl loc_1003B9C  +
xor ebx ebx +
mov edx esi +
mov eax edi +
cmp esi ecx +
jz loc_1003B8F  +
cmp [eax] cx +
jz loc_1003B8B  +
inc eax  +
inc eax  +
dec edx  +
jnz loc_1003B81  +
cmp edx ecx +
jnz loc_1003B96  +
mov ebx 80070057h +
jmp loc_1003B9A  +
mov ecx esi +
sub ecx edx +
mov eax ebx +
test eax eax +
jl loc_1003BE6  +
mov edx esi +
sub edx ecx +
push 0  +
lea eax [edi+ecx*2] +
pop ebx  +
jz loc_1003BD8  +
mov edi edx +
sub edi esi +
mov esi [ebp+arg_8] +
lea edi [edi+ecx+7FFFFFFFh] +
sub esi eax +
test edi edi +
jz loc_1003BD4  +
movzx ecx word ptr [esi+eax] +
test cx cx +
jz loc_1003BD4  +
mov [eax] cx +
inc eax  +
inc eax  +
dec edx  +
dec edi  +
test edx edx +
jnz loc_1003BBC  +
test edx edx +
jnz loc_1003BDF  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+8] +
xor ecx ecx +
lea eax [ebx+4] +
push esi  +
mov esi [eax] +
mov [ebp-8] ecx +
mov [ebp-0Ch] ecx +
mov [ebp-1Ch] eax +
mov [ebp-4] ecx +
mov [ebp+8] ecx +
cmp esi ecx +
jz loc_1003EE4  +
push edi  +
mov eax [esi+4] +
mov edx [eax+4] +
mov eax edx +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1003C29  +
sub eax edi +
sar eax 1 +
mov edi eax +
jz loc_1003C65  +
lea eax [edi+1] +
push eax  +
push edx  +
call sub_1004330  +
cmp eax 2 +
jnz loc_1003C56  +
mov eax [ebp-4] +
lea eax [eax+edi+1] +
mov [ebp-4] eax +
jmp loc_1003C65  +
cmp eax 3 +
jnz loc_1003C65  +
mov eax [ebp+8] +
lea eax [eax+edi+1] +
mov [ebp+8] eax +
mov esi [esi] +
test esi esi +
jnz loc_1003C1E  +
cmp [ebp-4] esi +
mov esi ds:LocalAlloc +
jnz loc_1003C82  +
cmp dword ptr [ebp+8] 0 +
jz loc_1003EE3  +
jmp loc_1003CA2  +
inc dword ptr [ebp-4]  +
mov eax [ebp-4] +
add eax eax +
push eax  +
push 40h  +
call esi  +
mov [ebp-8] eax +
test eax eax +
jnz loc_1003C9D  +
push 0Eh  +
jmp loc_1003EB5  +
xor ecx ecx +
mov [eax] cx +
cmp dword ptr [ebp+8] 0 +
jz loc_1003CC1  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
add eax eax +
push eax  +
push 40h  +
call esi  +
mov [ebp-0Ch] eax +
test eax eax +
jz loc_1003C96  +
xor ecx ecx +
mov [eax] cx +
mov edi [ebp-1Ch] +
mov esi [edi] +
jmp loc_1003CDA  +
mov eax [esi+4] +
push 0  +
push dword ptr [eax]  +
call sub_1004173  +
test eax eax +
jnz loc_1003CFA  +
mov esi [esi] +
test esi esi +
jnz loc_1003CC8  +
push dword ptr [ebx+0Ch]  +
push offset aDnscacheSortin  +
push esi  +
call sub_10053CC  +
add esp 0Ch +
push offset loc_10041C3  +
push edi  +
call sub_1004236  +
mov eax [edi] +
and dword ptr [ebp-10h] 0 +
and dword ptr [ebp-14h] 0 +
mov [ebp-18h] eax +
test eax eax +
jz loc_1003EC7  +
mov edi 0FFFFh +
jmp loc_1003D19  +
mov eax [ebp-18h] +
mov eax [eax+4] +
mov esi [eax+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1003D24  +
sub eax edx +
sar eax 1 +
mov [ebp-20h] eax +
jz loc_1003DE7  +
inc eax  +
push eax  +
push esi  +
call sub_1004330  +
cmp eax 2 +
jnz loc_1003D98  +
mov eax [ebp-4] +
cmp [ebp-10h] eax +
ja loc_1003DE7  +
push esi  +
push eax  +
push dword ptr [ebp-8]  +
call sub_1003B50  +
test eax edi +
jnz loc_1003D76  +
push offset asc_1001E94  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
call sub_1003B50  +
test eax edi +
jz loc_1003D89  +
push eax  +
push dword ptr [ebx+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov eax [ebp-10h] +
mov ecx [ebp-20h] +
lea eax [eax+ecx+1] +
mov [ebp-10h] eax +
jmp loc_1003DE7  +
cmp eax 3 +
jnz loc_1003DE7  +
mov eax [ebp+8] +
cmp [ebp-14h] eax +
ja loc_1003DE7  +
push esi  +
push eax  +
push dword ptr [ebp-0Ch]  +
call sub_1003B50  +
test eax edi +
jnz loc_1003DC7  +
push offset asc_1001E94  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-0Ch]  +
call sub_1003B50  +
test eax edi +
jz loc_1003DDA  +
push eax  +
push dword ptr [ebx+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov eax [ebp-14h] +
mov ecx [ebp-20h] +
lea eax [eax+ecx+1] +
mov [ebp-14h] eax +
mov eax [ebp-18h] +
mov eax [eax] +
mov [ebp-18h] eax +
test eax eax +
jnz loc_1003D16  +
mov esi offset aNameserver +
cmp [ebp-10h] eax +
jz loc_1003E61  +
mov edi [ebp-8] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1003E09  +
sub eax edx +
sar eax 1 +
xor ecx ecx +
mov [edi+eax*2-2] cx +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1003E23  +
sub eax ecx +
push 1  +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
mov eax [ebx+18h] +
push edi  +
push esi  +
push dword ptr [eax+4]  +
push offset aSystemCurrentc  +
call sub_1004536  +
test eax eax +
jz loc_1003E61  +
push eax  +
push dword ptr [ebx+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
cmp dword ptr [ebp-14h] 0 +
jz loc_1003EC7  +
mov edi [ebp-0Ch] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1003E6F  +
sub eax edx +
sar eax 1 +
xor ecx ecx +
mov [edi+eax*2-2] cx +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1003E89  +
sub eax ecx +
push 1  +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
mov eax [ebx+18h] +
push edi  +
push esi  +
push dword ptr [eax+4]  +
push offset aSystemCurren_1  +
call sub_1004536  +
test eax eax +
jz loc_1003EC7  +
push eax  +
push dword ptr [ebx+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
cmp dword ptr [ebp-8] 0 +
mov esi ds:LocalFree +
jz loc_1003ED8  +
push dword ptr [ebp-8]  +
call esi  +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1003EE3  +
push dword ptr [ebp-0Ch]  +
call esi  +
pop edi  +
mov eax [ebp-1Ch] +
mov eax [eax] +
pop esi  +
pop ebx  +
test eax eax +
jz locret_1003EFB  +
push eax  +
call sub_100430C  +
mov eax [ebp-1Ch] +
and dword ptr [eax] 0 +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
add edi 4 +
mov ecx [edi] +
xor ebx ebx +
mov [ebp+var_C] edi +
test ecx ecx +
jz loc_100409B  +
push esi  +
mov eax [ecx+4] +
mov eax [eax+4] +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1003F2D  +
sub eax esi +
sar eax 1 +
jz loc_1003F46  +
lea eax [ebx+eax+1] +
mov [ebp+var_4] eax +
mov ebx eax +
mov ecx [ecx] +
test ecx ecx +
jnz loc_1003F24  +
test ebx ebx +
jz loc_100409A  +
inc ebx  +
lea eax [ebx+ebx] +
push eax  +
push 40h  +
mov [ebp+var_4] ebx +
call ds:LocalAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_1003F71  +
push 0Eh  +
jmp loc_100407A  +
mov esi [edi] +
jmp loc_1003F87  +
mov eax [esi+4] +
push 0  +
push dword ptr [eax]  +
call sub_1004173  +
test eax eax +
jnz loc_1003FAA  +
mov esi [esi] +
test esi esi +
jnz loc_1003F75  +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
push offset aDnscacheSortin  +
push esi  +
call sub_10053CC  +
add esp 0Ch +
push offset loc_10041C3  +
push edi  +
call sub_1004236  +
xor eax eax +
and [ebp+var_8] eax +
mov [ebx] ax +
mov esi [edi] +
test esi esi +
jz loc_1004049  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_4] +
jnb loc_1004033  +
mov eax [esi+4] +
mov edx [eax+4] +
mov eax edx +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1003FCF  +
sub eax edi +
sar eax 1 +
mov [ebp+var_10] eax +
jz loc_100402A  +
push edx  +
push [ebp+var_4]  +
push ebx  +
call sub_1003B50  +
mov edi 0FFFFh +
test eax edi +
jnz loc_1004007  +
push offset asc_1001E94  +
push [ebp+var_4]  +
push ebx  +
call sub_1003B50  +
test eax edi +
jz loc_100401D  +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov eax [ebp+var_8] +
mov ecx [ebp+var_10] +
lea eax [eax+ecx+1] +
mov [ebp+var_8] eax +
mov esi [esi] +
mov edi [ebp+var_C] +
test esi esi +
jnz loc_1003FBC  +
mov eax [ebp+var_8] +
test eax eax +
jbe loc_1004049  +
lea eax [ebx+eax*2-2] +
cmp word ptr [eax] 2Ch +
jnz loc_1004049  +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100404E  +
sub eax edx +
push 1  +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push ebx  +
push offset aSearchlist  +
push 0  +
push offset aSystemCurren_0  +
call sub_1004536  +
test eax eax +
jz loc_100408F  +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
push offset aDnscacheFail_5  +
push 1  +
call sub_10053CC  +
add esp 10h +
test ebx ebx +
jz loc_100409A  +
push ebx  +
call ds:LocalFree  +
pop esi  +
mov eax [edi] +
test eax eax +
jz loc_10040AA  +
push eax  +
call sub_100430C  +
and dword ptr [edi] 0 +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_C] +
jz loc_10040C6  +
xor eax eax +
jmp loc_10040DB  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
lea esi [ebx+ebx] +
lea eax [esi+2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jnz loc_1004112  +
mov [ebp+var_4] 0Eh +
jmp loc_100412F  +
push esi  +
push [ebp+arg_0]  +
push edi  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov [esi+edi] ax +
mov eax [ebp+arg_8] +
mov [eax] edi +
mov eax [ebp+arg_C] +
mov [eax] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1004169  +
mov eax [edi+4] +
push esi  +
mov esi ds:LocalFree +
test eax eax +
jz loc_100415C  +
push eax  +
call esi  +
mov eax [edi] +
test eax eax +
jz loc_1004165  +
push eax  +
call esi  +
push edi  +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call ds:wcstoul  +
mov ecx esi +
add esp 0Ch +
lea edx [ecx+2] +
mov di [ecx] +
inc ecx  +
inc ecx  +
test di di +
jnz loc_1004192  +
sub ecx edx +
sar ecx 1 +
lea ecx [esi+ecx*2] +
pop edi  +
pop esi  +
cmp ecx [ebp+arg_0] +
jz loc_10041AF  +
push 57h  +
pop eax  +
jmp loc_10041BA  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_10041B8  +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov edi [ebp+8] +
lea eax [ebp-8] +
push eax  +
push dword ptr [edi]  +
call sub_1004173  +
mov esi offset aDnscacheFail_6 +
test eax eax +
jz loc_10041F9  +
push eax  +
push dword ptr [edi]  +
push esi  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov edi [ebp+0Ch] +
lea eax [ebp-4] +
push eax  +
push dword ptr [edi]  +
call sub_1004173  +
test eax eax +
jz loc_1004219  +
push eax  +
push dword ptr [edi]  +
push esi  +
push 1  +
call sub_10053CC  +
add esp 10h +
mov eax [ebp-8] +
pop edi  +
pop esi  +
cmp eax [ebp-4] +
jnz loc_1004227  +
xor eax eax +
jmp locret_100422D  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_1004280  +
push ebx  +
push edi  +
cmp dword ptr [esi] 0 +
mov ebx esi +
mov edi esi +
jz loc_1004278  +
mov eax [edi] +
push dword ptr [eax+4]  +
push dword ptr [ebx+4]  +
call [ebp+arg_4]  +
test eax eax +
jle loc_1004261  +
mov ebx [edi] +
mov edi [edi] +
cmp dword ptr [edi] 0 +
jnz loc_1004250  +
cmp ebx esi +
jz loc_1004278  +
mov ecx [ebx+4] +
mov eax [esi+4] +
mov [esi+4] ecx +
mov [ebx+4] eax +
mov esi [esi] +
test esi esi +
jnz loc_1004247  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10042A0  +
mov eax 0A0h +
jmp loc_10042D1  +
push 8  +
push 40h  +
call ds:LocalAlloc  +
test eax eax +
jnz loc_10042B3  +
push 0Eh  +
pop eax  +
jmp loc_10042D1  +
mov ecx [ebp+arg_4] +
and dword ptr [eax] 0 +
mov [eax+4] ecx +
mov ecx [esi] +
test ecx ecx +
jnz loc_10042C8  +
mov [esi] eax +
jmp loc_10042CF  +
mov ecx [ecx] +
cmp dword ptr [ecx] 0 +
jnz loc_10042C6  +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004301  +
mov eax [ecx] +
test eax eax +
jz loc_1004301  +
mov edx [eax] +
push esi  +
mov [ecx] edx +
mov esi [eax+4] +
push eax  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
jmp loc_1004303  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
jmp loc_100431A  +
push eax  +
call ds:LocalFree  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10042DB  +
test eax eax +
jnz loc_1004313  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
push esi  +
xor esi esi +
push edi  +
xor edi edi +
mov [ebp+hMem] esi +
cmp [ebp+arg_0] esi +
jz loc_10043A0  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10040E4  +
test eax eax +
jnz loc_1004392  +
push esi  +
push esi  +
lea eax [ebp+var_214] +
push eax  +
push 9  +
push [ebp+hMem]  +
call ParseNetworkString  +
cmp eax esi +
jz loc_100438C  +
push eax  +
push [ebp+arg_0]  +
push offset aDnscacheFail_7  +
push 1  +
call sub_10053CC  +
add esp 10h +
jmp loc_1004392  +
mov edi [ebp+var_214] +
cmp [ebp+hMem] esi +
jz loc_10043A0  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+hKey] ebx +
call sub_1005219  +
push offset aDnscacheUnatte  +
push ebx  +
call sub_10053CC  +
pop ecx  +
pop ecx  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push ebx  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov edi eax +
cmp edi ebx +
jz loc_1004403  +
push edi  +
push esi  +
push offset aDnscacheFail_8  +
push 1  +
call sub_10053CC  +
add esp 10h +
jmp loc_1004445  +
mov eax [ebp+hKey] +
and [ebp+var_1C] 0 +
mov [ebp+var_8] ebx +
mov [ebp+var_18] eax +
xor ebx ebx +
lea eax [ebp+hMem] +
inc ebx  +
push eax  +
mov [ebp+var_C] offset unk_1007038 +
mov [ebp+hMem] ebx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 46h +
call sub_1003AEF  +
mov edi eax +
test edi edi +
jz loc_1004445  +
push edi  +
push offset aDnscacheEncoun  +
push ebx  +
call sub_10053CC  +
add esp 0Ch +
cmp [ebp+hKey] 0 +
jz loc_1004454  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push edi  +
push offset aDnscacheUnat_0  +
push 0  +
call sub_10053CC  +
add esp 0Ch +
call sub_100514A  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100449E  +
cmp eax esi +
ja loc_100449E  +
jz loc_10044A3  +
jmp loc_10044AB  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10044B4  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10044D7  +
cmp edx 7FFFFFFFh +
jbe loc_10044DC  +
mov eax 80070057h +
test eax eax +
jl loc_10044F2  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1005BD5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1004510  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1004515  +
mov eax 80070057h +
test eax eax +
jl loc_100452F  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1004475  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100704C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
and [ebp+hKey] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push eax  +
mov esi 104h +
mov [ebp+lpValueName] ecx +
mov ecx [ebp+arg_C] +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
mov [ebp+lpData] ecx +
call sub_10044C1  +
mov edi eax +
test edi edi +
jge loc_1004591  +
and edi 0FFFFh +
jmp loc_1004697  +
test ebx ebx +
jz loc_10045C1  +
push offset dword_100117C  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1003B50  +
mov edi eax +
test edi edi +
jl loc_1004586  +
push ebx  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1003B50  +
mov edi eax +
test edi edi +
jl loc_1004586  +
mov ebx [ebp+arg_14] +
lea eax [ebp+SubKey] +
push eax  +
cmp ebx 4 +
jnz loc_10045E5  +
mov eax [ebp+lpData] +
push dword ptr [eax]  +
push [ebp+lpValueName]  +
push offset aDnscacheUnat_1  +
jmp loc_1004609  +
cmp ebx 1 +
jnz loc_10045FD  +
push [ebp+lpData]  +
push [ebp+lpValueName]  +
push offset aDnscacheUnat_2  +
jmp loc_1004609  +
push ebx  +
push [ebp+lpValueName]  +
push offset aDnscacheUnat_3  +
push 0  +
call sub_10053CC  +
add esp 14h +
xor esi esi +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push esi  +
push 20006h  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ds:RegCreateKeyExW  +
mov edi eax +
cmp edi esi +
jz loc_1004657  +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
push offset aDnscacheFail_9  +
push 1  +
call sub_10053CC  +
add esp 10h +
jmp loc_1004697  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push ebx  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov edi eax +
cmp edi esi +
jz loc_1004697  +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+lpValueName]  +
push offset aDnscacheFai_10  +
push 1  +
call sub_10053CC  +
add esp 14h +
cmp [ebp+hKey] 0 +
jz loc_10046AC  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004A3D  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:LocalAlloc +
push edi  +
push 8  +
push 40h  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_1004716  +
xor eax eax +
mov edi ebx +
stos   +
stos   +
mov edi [ebp+arg_4] +
lea eax [edi+edi+2] +
push eax  +
push 40h  +
call esi  +
mov [ebx] eax +
test eax eax +
jz loc_1004716  +
push [ebp+arg_0]  +
inc edi  +
push edi  +
push eax  +
call sub_10044C1  +
test eax 0FFFFh +
jnz loc_1004716  +
push [ebp+uBytes]  +
push 40h  +
call esi  +
mov [ebx+4] eax +
test eax eax +
jnz loc_1004720  +
push ebx  +
call sub_100413E  +
xor eax eax +
jmp loc_1004731  +
push [ebp+uBytes]  +
push [ebp+arg_8]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08lx04x04x02x0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_10044FB  +
add esp 38h +
and eax 0FFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10047B6  +
test eax eax +
jnz loc_10047BB  +
mov ecx [esi] +
test ecx ecx +
jz loc_10047B3  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10047A7  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100709C +
push offset dword_100708C  +
push dword_1007098  +
mov dword_100708C eax +
push offset dword_100707C  +
push offset dword_1007080  +
push offset dword_1007078  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1007088 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1004843  +
cmp eax esi +
jnz loc_1004836  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1004846  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100481D  +
xor esi esi +
inc esi  +
mov eax dword_100741C +
cmp eax esi +
jnz loc_1004859  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1004894  +
mov eax dword_100741C +
test eax eax +
jnz loc_100488E  +
mov dword_100741C esi +
push offset dword_1001154  +
push offset dword_1001148  +
call sub_100479A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004894  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100495E  +
mov dword_1007094 esi +
mov eax dword_100741C +
cmp eax esi +
jnz loc_10048B8  +
push offset dword_1001144  +
push offset dword_1001138  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100741C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10048C5  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1007424 ebx +
jz loc_10048E6  +
push offset dword_1007424  +
call sub_1004B59  +
pop ecx  +
test eax eax +
jz loc_10048E6  +
push ebx  +
push 2  +
push ebx  +
call dword_1007424  +
push dword_100707C  +
push dword_1007080  +
push dword_1007078  +
call sub_10043AD  +
add esp 0Ch +
mov dword_1007090 eax +
cmp dword_1007084 ebx +
jnz loc_1004944  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1007090 eax +
xor ebx ebx +
cmp dword_1007084 ebx +
jnz loc_1004944  +
push eax  +
call ds:_exit  +
cmp dword_1007094 ebx +
jnz loc_1004952  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1007090 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100497B  +
xor eax eax +
jmp loc_10049C8  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1004977  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10049B5  +
cmp ecx 20Bh +
jnz loc_1004977  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1004977  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10049C3  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1004977  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1007084 eax +
call sub_1004D98  +
push eax  +
call ds:__set_app_type  +
or dword_1007414 0FFFFFFFFh +
or dword_1007418 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10070A4 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10070A0 +
mov [eax] ecx +
call sub_1004C84  +
cmp dword_100705C 0 +
jnz loc_1004A21  +
push offset sub_1004C84  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1004C6C  +
xor eax eax +
retn   +
***
call sub_1004DD7  +
jmp sub_10047FB  +
***
cmp ecx dword_100704C +
jnz loc_1004A48  +
retn 0  +
jmp loc_1004E6D  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1004A9A  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1004A9A  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1004A94  +
cmp eax 19930521h +
jz loc_1004A94  +
cmp eax 19930522h +
jz loc_1004A94  +
cmp eax 1994000h +
jnz loc_1004A9A  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1004A5C+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1004AE6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1004AE2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1004B4D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1004B45  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1004B4F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1004B35  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1004AD0  +
pop ecx  +
test eax eax +
jz loc_1004BB6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1004B10  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004BB6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004BBF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1004A3D  +
push offset dword_100704C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_1004C8C  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004D8B  +
cmp ecx 0FFFFFFFFh +
jz loc_1004D8B  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1004D84  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1004D84  +
cmp edx 10000000h +
jnb loc_1004D84  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1004D84  +
jmp loc_1004D7F  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1004DCD  +
push eax  +
call sub_1004D32  +
test eax eax +
jz loc_1004DCD  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1004DC2  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1004DCD  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100704C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1004E09  +
test eax ebx +
jz loc_1004E09  +
not eax  +
mov dword_1007050 eax +
jmp loc_1004E64  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1004E50  +
test dword_100704C ebx +
jnz loc_1004E55  +
mov esi 0BB40E64Fh +
mov dword_100704C esi +
not esi  +
mov dword_1007050 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10071A8 eax +
mov dword_10071A4 ecx +
mov dword_10071A0 edx +
mov dword_100719C ebx +
mov dword_1007198 esi +
mov dword_1007194 edi +
mov word_10071C0 ss +
mov word_10071B4 cs +
mov word_1007190 ds +
mov word_100718C es +
mov word_1007188 fs +
mov word_1007184 gs +
pushf   +
pop dword_10071B8  +
mov eax [ebp+0] +
mov dword_10071AC eax +
mov eax [ebp+4] +
mov dword_10071B0 eax +
lea eax [ebp+8] +
mov dword_10071BC eax +
mov eax [ebp-320h] +
mov dword_10070F8 10001h +
mov eax dword_10071B0 +
mov dword_10070B4 eax +
mov dword_10070A8 0C0000409h +
mov dword_10070AC 1 +
mov eax dword_100704C +
mov [ebp-328h] eax +
mov eax dword_1007050 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov eax hModule +
push esi  +
test eax eax +
jz loc_1005034  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call esi  +
mov dword_10073D4 eax +
test eax eax +
jz loc_1005034  +
push offset aWdssetuplogdes  +
push hModule  +
call esi  +
mov dword_10073D8 eax +
test eax eax +
jz loc_1005034  +
push offset aWdssetuplogmes  +
push hModule  +
call esi  +
mov dword_10073DC eax +
test eax eax +
jz loc_1005034  +
push offset aWdssetuplogm_0  +
push hModule  +
call esi  +
mov dword_10073E0 eax +
test eax eax +
jz loc_1005034  +
push offset aConstructparti  +
push hModule  +
call esi  +
mov dword_10073E4 eax +
test eax eax +
jz loc_1005034  +
push offset aConstructpar_0  +
push hModule  +
call esi  +
mov dword_10073E8 eax +
test eax eax +
jz loc_1005034  +
push offset aCurrentip  +
push hModule  +
call esi  +
mov dword_10073EC eax +
test eax eax +
jz loc_1005034  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx ds:GetLastError +
push edi  +
call ebx  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_1005052  +
and eax edi +
or eax esi +
test eax eax +
jge loc_1005060  +
call ebx  +
test eax eax +
jle loc_1005065  +
and eax edi +
or eax esi +
jmp loc_1005065  +
mov eax 80004005h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov ebx offset CriticalSection +
push ebx  +
call ds:EnterCriticalSection  +
inc dword_10073C4  +
xor esi esi +
cmp dword_10073C8 esi +
jnz loc_1005138  +
push edi  +
xor edi edi +
mov hModule esi +
cmp [ebp+arg_0] esi +
jnz loc_10050B9  +
push offset Src  +
call sub_1005A60  +
mov edi eax +
cmp edi esi +
jz loc_10050B9  +
push edi  +
call sub_10058AD  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov hModule eax +
cmp eax esi +
jz loc_100510C  +
call sub_1004F83  +
test eax eax +
jl loc_100510C  +
cmp [ebp+arg_0] esi +
jnz loc_10050FC  +
mov eax dword_10073D4 +
cmp eax esi +
jz loc_100510C  +
push edi  +
push 300F000h  +
push esi  +
call eax  +
xor eax eax +
inc eax  +
mov dword_10073C8 eax +
mov dword_10073CC eax +
jmp loc_100510C  +
mov dword_10073C8 1 +
mov dword_10073CC esi +
cmp dword_10073C8 esi +
jnz loc_1005124  +
mov eax hModule +
cmp eax esi +
jz loc_1005124  +
push eax  +
call ds:FreeLibrary  +
cmp edi esi +
jz loc_1005137  +
push edi  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
push ebx  +
call ds:LeaveCriticalSection  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
dec dword_10073C4  +
xor esi esi +
cmp dword_10073C8 esi +
jz loc_10051AB  +
cmp dword_10073C4 esi +
jnz loc_10051AB  +
cmp hModule esi +
jz loc_10051AB  +
cmp dword_10073CC esi +
jz loc_100518D  +
mov eax dword_10073D8 +
cmp eax esi +
jz loc_100518D  +
call eax  +
push hModule  +
call ds:FreeLibrary  +
mov hModule esi +
mov dword_10073C8 esi +
mov dword_10073CC esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10051D0  +
cmp ecx 7FFFFFFFh +
jbe loc_10051D5  +
mov eax 80070057h +
test eax eax +
jl loc_1005212  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_1005205  +
cmp eax esi +
ja loc_1005205  +
jnz loc_100520D  +
mov [esi+edi] bl +
jmp loc_100520D  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100704C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_214] esi +
mov [ebp+var_218] eax +
cmp esi edi +
jz loc_10053B7  +
cmp eax edi +
jz loc_10053B7  +
push 204h  +
lea eax [ebp+var_208] +
push edi  +
push eax  +
mov dword ptr [ebp+Filename] edi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push edi  +
mov dword ptr [ebp+var_210] offset aUnknown +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_10052C2  +
lea eax [ebp+Filename] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_10052B6  +
inc eax  +
inc eax  +
jmp loc_10052BC  +
lea eax [ebp+Filename] +
mov dword ptr [ebp+var_210] eax +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10052C7  +
sub eax edx +
sar eax 1 +
mov ecx eax +
lea eax [ebp+Filename] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
cmp si di +
jnz loc_10052E0  +
mov edi ds:GetProcessHeap +
sub eax edx +
sar eax 1 +
push ebx  +
lea esi [eax+ecx+4] +
push esi  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_10053B6  +
push [ebp+var_214]  +
push dword ptr [ebp+var_210]  +
push offset aSS  +
push esi  +
push ebx  +
call sub_10051BA  +
add esp 14h +
xor esi esi +
test eax eax +
jl loc_10053AB  +
mov eax [ebp+arg_0] +
sub eax esi +
jz loc_100534F  +
dec eax  +
jz loc_1005346  +
dec eax  +
jnz loc_1005356  +
mov [ebp+arg_0] 3000000h +
jmp loc_1005356  +
mov [ebp+arg_0] 2000000h +
jmp loc_1005356  +
mov [ebp+arg_0] 4000000h +
cmp dword_10073E0 esi +
jz loc_10053AB  +
cmp dword_10073E8 esi +
jz loc_10053AB  +
cmp dword_10073EC esi +
jz loc_10053AB  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call dword_10073EC  +
push eax  +
push offset aUnattendlogwv  +
push offset aDW7rtmBaseNtse  +
push 192h  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_218]  +
push ebx  +
push [ebp+arg_0]  +
call dword_10073E8  +
push eax  +
call dword_10073E0  +
push ebx  +
push esi  +
call edi  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1004A3D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005226  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100544C  +
mov eax [eax] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100544C  +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
and esi 4000000h +
mov edi ecx +
and edi 3000000h +
mov eax ecx +
and eax 2000000h +
push 0  +
pop edx  +
setnz dl  +
xor ebx ebx +
test edi edi +
setnz bl  +
add edx ebx +
xor ebx ebx +
test esi esi +
setnz bl  +
add edx ebx +
jz loc_1005449  +
or eax edi +
or eax esi +
lea edx [ebp+arg_C] +
push edx  +
push [ebp+arg_8]  +
mov edx eax +
not edx  +
and edx ecx +
push edx  +
push eax  +
call [ebp+arg_0]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1005467  +
mov eax 80070057h +
jmp loc_10054AF  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005ACC  +
mov [esi] eax +
test eax eax +
jz loc_100547C  +
xor eax eax +
jmp loc_10054AF  +
push ebx  +
mov ebx ds:GetLastError +
push edi  +
call ebx  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_100549A  +
and eax edi +
or eax esi +
test eax eax +
jge loc_10054A8  +
call ebx  +
test eax eax +
jle loc_10054AD  +
and eax edi +
or eax esi +
jmp loc_10054AD  +
mov eax 80004005h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
xor eax eax +
push ebx  +
mov ebx [ebp+lpFileName] +
mov [ebp+var_8] eax +
mov [ebp+dwErrCode] eax +
cmp ebx eax +
jz loc_100552A  +
xor ecx ecx +
cmp cx [ebx] +
jz loc_100552A  +
push esi  +
mov esi ds:GetFullPathNameW +
push edi  +
push eax  +
push eax  +
push eax  +
push ebx  +
call esi  +
mov edi eax +
test edi edi +
jz loc_1005511  +
lea eax [edi+edi] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_100551A  +
push [ebp+lpFilePart]  +
push eax  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_100551A  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
jmp loc_1005534  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor edi edi +
cmp ebx edi +
jnz loc_100555A  +
mov eax 80070057h +
jmp loc_1005682  +
push esi  +
push offset asc_10029DC  +
push ebx  +
call sub_1005EC3  +
test eax eax +
jz loc_1005660  +
mov esi ds:wcschr +
lea eax [ebx+4] +
push 5Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_100558E  +
mov [ebp+arg_0] 8007000Dh +
jmp loc_100567E  +
mov ecx ebx +
mov [ebp+lpMem] edi +
mov [ebp+var_8] edi +
lea edx [ecx+2] +
mov di [ecx] +
inc ecx  +
inc ecx  +
test di di +
jnz loc_1005599  +
sub ecx edx +
add eax 2 +
sar ecx 1 +
push 5Ch  +
push eax  +
mov edi ecx +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
cmp eax ecx +
jnz loc_10055BD  +
mov esi edi +
jmp loc_10055C3  +
sub eax ebx +
sar eax 1 +
mov esi eax +
cmp [ebp+arg_8] ecx +
jz loc_10055DB  +
lea eax [ebp+lpMem] +
push eax  +
push esi  +
push ecx  +
push ebx  +
call sub_1005E34  +
mov [ebp+arg_0] eax +
xor ecx ecx +
jmp loc_10055DE  +
mov [ebp+arg_0] ecx +
cmp [ebp+arg_0] ecx +
jl loc_100562B  +
cmp [ebp+arg_C] ecx +
jz loc_10055FB  +
lea eax [ebp+var_8] +
push eax  +
sub edi esi +
push edi  +
push esi  +
push ebx  +
call sub_1005E34  +
mov [ebp+arg_0] eax +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jl loc_100562B  +
mov eax [ebp+arg_8] +
cmp eax ecx +
jz loc_100560F  +
mov edx [ebp+lpMem] +
mov [eax] edx +
mov [ebp+lpMem] ecx +
mov eax [ebp+arg_C] +
cmp eax ecx +
jz loc_100561E  +
mov edx [ebp+var_8] +
mov [eax] edx +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
cmp eax ecx +
jz loc_100562B  +
mov dword ptr [eax] 1 +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
cmp [ebp+lpMem] ecx +
jz loc_100564E  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call esi  +
test eax eax +
jz loc_100564E  +
and [ebp+lpMem] 0 +
cmp [ebp+var_8] 0 +
jz loc_100567E  +
push [ebp+var_8]  +
push 0  +
call edi  +
push eax  +
call esi  +
jmp loc_100567E  +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] edi +
cmp eax edi +
jz loc_100566C  +
mov [eax] edi +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1005675  +
mov [eax] edi +
mov eax [ebp+arg_C] +
cmp eax edi +
jz loc_100567E  +
mov [eax] edi +
mov eax [ebp+arg_0] +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100553E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_100704C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi ds:dword_10029F4 +
mov dword ptr [ebp+var_C] esi +
mov esi ds:dword_10029F8 +
push edi  +
mov [ebp+var_8] esi +
mov esi offset a?Unc +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
xor edx edx +
mov [ebp+var_30] eax +
mov [ebp+var_28] ecx +
mov [ebp+var_20] edx +
movs   +
cmp eax edx +
jz loc_100588E  +
xor esi esi +
cmp si [eax] +
jz loc_100588E  +
cmp ecx edx +
jz loc_1005707  +
mov [ecx] edx +
push ebx  +
push edx  +
push eax  +
call sub_10054B9  +
mov [ebp+lpMem] eax +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jnz loc_100574F  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jle loc_1005732  +
and eax ebx +
or eax edi +
test eax eax +
jge loc_1005742  +
call esi  +
test eax eax +
jle loc_100573E  +
and eax ebx +
or eax edi +
mov esi eax +
jmp loc_1005747  +
mov esi 80004005h +
test esi esi +
jl loc_1005862  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005755  +
sub eax edx +
sar eax 1 +
cmp eax 104h +
jb loc_1005816  +
mov esi ds:_wcsnicmp +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1005816  +
push 7  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1005816  +
and [ebp+var_2C] 0 +
push 0  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+lpMem]  +
call sub_100568D  +
mov esi eax +
test esi esi +
jl loc_1005862  +
cmp [ebp+var_2C] 1 +
lea eax [ebp+var_20] +
push eax  +
jnz loc_10057ED  +
mov eax [ebp+lpMem] +
add eax 2 +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call sub_1005453  +
mov esi eax +
test esi esi +
jl loc_1005862  +
mov eax [ebp+var_28] +
test eax eax +
jz loc_1005810  +
mov ecx [ebp+var_20] +
add ecx 10h +
mov [eax] ecx +
jmp loc_1005810  +
push [ebp+lpMem]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1005453  +
mov esi eax +
test esi esi +
jl loc_1005862  +
cmp [ebp+var_28] 0 +
jz loc_1005810  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_28] +
add eax 8 +
mov [ecx] eax +
cmp [ebp+var_20] 0 +
jnz loc_1005866  +
push [ebp+var_30]  +
call sub_1005DA0  +
mov [ebp+var_20] eax +
test eax eax +
jz loc_1005829  +
xor esi esi +
jmp loc_1005854  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jle loc_100583B  +
and eax ebx +
or eax edi +
test eax eax +
jge loc_100584B  +
call esi  +
test eax eax +
jle loc_1005847  +
and eax ebx +
or eax edi +
mov esi eax +
jmp loc_1005850  +
mov esi 80004005h +
test esi esi +
jl loc_1005862  +
mov eax [ebp+var_28] +
test eax eax +
jz loc_1005866  +
mov ecx [ebp+var_20] +
mov [eax] ecx +
jmp loc_1005866  +
and [ebp+var_20] 0 +
cmp [ebp+lpMem] 0 +
pop ebx  +
jz loc_100587F  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
movzx eax si +
push eax  +
call ds:SetLastError  +
mov eax [ebp+var_20] +
jmp loc_1005898  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1004A3D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_100704C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lpFileName] +
mov [ebp+var_20] esi +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+dwErrCode] ebx +
cmp esi ebx +
jz loc_1005A41  +
xor eax eax +
cmp ax [esi] +
jz loc_1005A41  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call sub_10056AB  +
mov [ebp+lpPathName] eax +
cmp eax ebx +
jz loc_1005A2A  +
push edi  +
lea ecx [ebp+lpMem] +
push ecx  +
lea ecx [ebp+var_1C] +
push ecx  +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+var_1C] ebx +
call sub_100568D  +
cmp eax ebx +
jl loc_10059BE  +
cmp [ebp+var_1C] 1 +
jnz loc_1005989  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1005923  +
mov ecx [ebp+var_14] +
sub eax edx +
sar eax 1 +
lea esi [ecx+eax*2] +
cmp [ebp+lpMem] ebx +
jz loc_100594D  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edi ds:CreateDirectoryW +
push 5Ch  +
push esi  +
call ds:wcschr  +
pop ecx  +
mov esi eax +
pop ecx  +
push [ebp+lpPathName]  +
cmp esi ebx +
jz loc_10059FE  +
xor eax eax +
mov [esi] ax +
call sub_1005EE0  +
test eax eax +
jnz loc_100597F  +
push ebx  +
push [ebp+lpPathName]  +
call edi  +
push 5Ch  +
pop eax  +
mov [esi] ax +
inc esi  +
inc esi  +
jmp loc_1005953  +
mov esi [ebp+var_14] +
movzx eax word ptr [esi] +
cmp ax 61h +
jb loc_100599B  +
cmp ax 7Ah +
jbe loc_10059A7  +
cmp ax 41h +
jb loc_100594D  +
cmp ax 5Ah +
ja loc_100594D  +
push 3Ah  +
pop eax  +
cmp ax [esi+2] +
jnz loc_100594D  +
push 5Ch  +
pop eax  +
cmp ax [esi+4] +
jnz loc_100594D  +
add esi 8 +
jmp loc_100594D  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCreatepathUnab  +
push 3000000h  +
push offset unk_1007408  +
mov [ebp+dwErrCode] eax +
call sub_10053E7  +
add esp 14h +
push [ebp+lpPathName]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
jmp loc_1005A33  +
call sub_1005EE0  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_1005A25  +
push ebx  +
push [ebp+lpPathName]  +
call edi  +
cmp eax esi +
jz loc_1005A25  +
call ds:GetLastError  +
push eax  +
push [ebp+var_20]  +
push offset aCreatepathUn_0  +
jmp loc_10059D5  +
mov [ebp+var_18] esi +
jmp loc_10059EA  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_18] +
jmp loc_1005A4B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004A3D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:ExpandEnvironmentStringsW +
push edi  +
xor edi edi +
push edi  +
push edi  +
push [ebp+lpSrc]  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_1005ABE  +
lea eax [ebx+ebx] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1005ABE  +
push ebx  +
push edi  +
push [ebp+lpSrc]  +
call esi  +
test eax eax +
jz loc_1005AA8  +
xor eax eax +
cmp ax [edi] +
jnz loc_1005ABE  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test eax eax +
jz loc_1005ABE  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
test edi edi +
jz loc_1005BBA  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1005BBA  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005AF4  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax ebx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1005B09  +
sub eax edx +
sar eax 1 +
test ecx ecx +
jz loc_1005B3D  +
push 5Ch  +
pop edx  +
cmp dx [edi+ecx*2-2] +
push edx  +
pop edx  +
jnz loc_1005B31  +
cmp dx [ebx] +
jnz loc_1005B3D  +
inc ebx  +
inc ebx  +
dec eax  +
jmp loc_1005B3D  +
cmp dx [ebx] +
jz loc_1005B3D  +
mov [ebp+var_4] 1 +
mov edx [ebp+var_4] +
add edx eax +
mov eax large fs:18h +
mov eax [eax+30h] +
lea esi [edx+ecx+1] +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_1005BC7  +
cmp [ebp+var_4] 0 +
mov eax offset dword_100117C +
ja loc_1005B74  +
mov eax offset dword_1002C94 +
push ebx  +
push eax  +
push dword ptr [ebp+arg_0]  +
push offset aSSS  +
push esi  +
push edi  +
call sub_10044FB  +
mov esi eax +
mov eax large fs:18h +
add esp 18h +
test esi esi +
jge loc_1005BB2  +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov ecx large fs:18h +
movzx eax si +
mov [ecx+34h] eax +
jmp loc_1005BC7  +
and dword ptr [eax+34h] 0 +
mov eax edi +
jmp loc_1005BC9  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1005C0A  +
cmp [ebp+arg_4] eax +
jz loc_1005C06  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1005C06  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1005BE9  +
test esi esi +
jnz loc_1005C12  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1005C20  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1005D38  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1005D38  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005C4D  +
sub eax edx +
sar eax 1 +
mov [ebp+var_4] eax +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1005C63  +
sub eax ecx +
sar eax 1 +
cmp [ebp+arg_8] 0 +
push ebx  +
mov ebx eax +
push esi  +
mov [ebp+var_8] ebx +
jz loc_1005C8A  +
xor eax eax +
cmp [ebp+var_4] ebx +
setz al  +
mov esi eax +
jmp loc_1005C90  +
cmp [ebp+var_4] ebx +
sbb esi esi +
inc esi  +
test esi esi +
jz loc_1005D32  +
cmp [ebp+arg_C] 0 +
jz loc_1005D1D  +
push 3Fh  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005D1D  +
and [ebp+arg_4] 0 +
test ebx ebx +
jbe loc_1005D32  +
mov ebx [ebp+arg_0] +
sub ebx edi +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_4] +
jnb loc_1005D32  +
test esi esi +
jz loc_1005D32  +
movzx edx word ptr [edi] +
push 3Fh  +
pop eax  +
cmp ax dx +
jz loc_1005D0B  +
movzx eax word ptr [ebx+edi] +
cmp ax 61h +
jb loc_1005CE9  +
cmp ax 7Ah +
ja loc_1005CE9  +
movzx ecx ax +
sub ecx 20h +
jmp loc_1005CEC  +
movzx ecx ax +
cmp dx 61h +
jb loc_1005D00  +
cmp dx 7Ah +
ja loc_1005D00  +
movzx eax dx +
sub eax 20h +
jmp loc_1005D03  +
movzx eax dx +
cmp ecx eax +
jz loc_1005D0B  +
xor esi esi +
jmp loc_1005D0E  +
xor esi esi +
inc esi  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
inc edi  +
inc edi  +
cmp eax [ebp+var_8] +
jb loc_1005CBA  +
jmp loc_1005D32  +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov eax esi +
pop esi  +
pop ebx  +
jmp loc_1005D47  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_1005D6C  +
cmp edx 7FFFFFFFh +
jbe loc_1005D6E  +
mov eax ecx +
test eax eax +
jl loc_1005D97  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_1005D87  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_1005D97  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1005BD5  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1005DBC  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
jmp loc_1005E2B  +
mov eax [ebp+arg_0] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1005DC2  +
sub eax ecx +
push esi  +
sar eax 1 +
lea esi [eax+1] +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_1005E27  +
push [ebp+arg_0]  +
push esi  +
push edi  +
call sub_10044C1  +
mov esi eax +
test esi esi +
jge loc_1005E27  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov ecx large fs:18h +
movzx eax si +
xor edi edi +
mov [ecx+34h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
mov [ebp+var_4] 8007000Eh +
test eax eax +
jz loc_1005EB3  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005E4D  +
mov ebx [ebp+arg_C] +
sub eax edx +
sar eax 1 +
test ebx ebx +
jz loc_1005EB3  +
mov ecx [ebp+arg_8] +
mov edi [ebp+arg_4] +
cmp ecx edi +
jb loc_1005EB3  +
cmp edi eax +
ja loc_1005EB3  +
cmp ecx eax +
ja loc_1005EB3  +
mov eax large fs:18h +
mov eax [eax+30h] +
sub ecx edi +
push esi  +
inc ecx  +
mov esi ecx +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov [ebx] eax +
test eax eax +
jz loc_1005EAD  +
lea ecx [esi-1] +
push ecx  +
mov ecx [ebp+arg_0] +
lea ecx [ecx+edi*2] +
push ecx  +
push esi  +
push eax  +
call sub_1005D51  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_1005EB8  +
mov eax 80070057h +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005C2C  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpFileName] +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
cmp eax esi +
jz loc_1005F51  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1005F51  +
push edi  +
push esi  +
push eax  +
call sub_10056AB  +
mov edi eax +
cmp edi esi +
jz loc_1005F4C  +
push edi  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_1005F1A  +
test al 10h +
jz loc_1005F1A  +
inc ebx  +
jmp loc_1005F35  +
xor ebx ebx +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jnz loc_1005F2D  +
mov esi 10Bh +
cmp esi 2 +
jnz loc_1005F35  +
push 3  +
pop esi  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push esi  +
call ds:SetLastError  +
mov eax ebx +
pop edi  +
jmp loc_1005F5B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push offset CriticalSection  +
call ds:DeleteCriticalSection  +
retn   +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 756EAE15h  +
***
