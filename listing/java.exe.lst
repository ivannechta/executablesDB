push ecx  +
push ecx  +
push ecx  +
test eax eax +
sub esp 10h +
mov eax dword_425480 +
push ecx  +
push ecx  +
sub esp 0Ch +
call sub_4015A3  +
sub esp 110h +
push esi  +
call sub_401353  +
push esi  +
push ecx  +
sub esp 18h +
push edi  +
cmp dword_425460 edi +
sub esp 10h +
call sub_403A5E  +
lea eax [esp+arg_4] +
sub esp 28h +
sub esp 10h +
sub esp 158h +
push ecx  +
push ecx  +
sub esp 140h +
mov eax [ebp+arg_4] +
sub esp 338h +
mov edx eax +
sub esp 18h +
push ecx  +
pop ecx  +
call sub_40A22B  +
pop ecx  +
cmp byte_425490 1 +
push esi  +
push eax  +
push [esp+arg_0]  +
push [esp+4+arg_0]  +
mov esi [esp+4+lpFilename] +
push ecx  +
push ecx  +
xor eax eax +
mov edi [esp+arg_4] +
cmp byte_4254A4 0 +
push ecx  +
cmp byte_4254A4 0 +
call sub_401F8C  +
sub esp 11Ch +
sub esp 0Ch +
sub esp 0Ch +
mov esi eax +
sub esp 174h +
push [esp+arg_0]  +
mov eax dword_4254B0 +
push ecx  +
mov eax dword_4254B4 +
call sub_401E66  +
push ecx  +
sub esp 1Ch +
sub esp 34h +
sub esp 34Ch +
sub esp 108h +
push ecx  +
sub esp 108h +
push ebx  +
sub esp 110h +
sub esp 0Ch +
call sub_4039B0  +
cmp esi edi +
mov eax [esi+8] +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
push 2Ah  +
mov eax dword_425600 +
mov eax dword_425604 +
mov eax dword_425608 +
mov eax dword_425610 +
mov eax dword_425614 +
mov eax dword_425618 +
sub esp 3Ch +
movzx ecx byte ptr [eax+0Fh] +
mov eax [esp+arg_4] +
sub esp 0Ch +
sub esp 40Ch +
sub esp 38h +
mov eax [edi] +
sub esp 28h +
sub esp 18h +
mov eax lpMem +
sub esp 0Ch +
push ecx  +
sub esp 10h +
sub esp 10h +
lea eax [eax+esi-1] +
push ecx  +
push ecx  +
mov esi [esp+arg_0] +
test eax eax +
mov edx [esp+arg_0] +
mov edx [esp+arg_0] +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
mov edx [ebp+arg_0] +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax edx +
call sub_406676  +
test eax eax +
jnz loc_407AA1  +
xor ecx ecx +
cmp [edx+0Ch] ecx +
jz loc_407AA1  +
cmp [edx] ecx +
jnz loc_40695F  +
cmp [edx+4] ecx +
jnz loc_407AA1  +
mov esi [edx+1Ch] +
cmp dword ptr [esi+4] 3F3Fh +
jnz loc_406972  +
mov dword ptr [esi+4] 3F40h +
mov eax [edx+0Ch] +
mov edi [edx] +
mov ebx [esi+3Ch] +
mov [ebp+var_14] eax +
mov eax [edx+10h] +
mov edx [edx+4] +
mov [ebp+var_4] edi +
mov edi [esi+40h] +
mov [ebp+var_10] eax +
mov [ebp+var_8] edx +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] eax +
mov [ebp+var_24] ecx +
jmp loc_407A90  +
jmp ds:off_407C08[eax*4]  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_4069D6  +
mov dword ptr [esi+4] 3F40h +
jmp loc_407A90  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov ecx [ebp+var_4] +
movzx edx byte ptr [ecx] +
dec [ebp+var_8]  +
mov ecx edi +
shl edx cl +
add ebx edx +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 10h +
jb loc_4069B7  +
test al 2 +
jz loc_406A29  +
cmp ebx 8B1Fh +
jnz loc_406A29  +
cmp dword ptr [esi+28h] 0 +
jnz loc_4069F4  +
mov dword ptr [esi+28h] 0Fh +
xor edi edi +
push edi  +
push edi  +
push edi  +
call sub_4088FF  +
mov [esi+1Ch] eax +
push 2  +
lea eax [ebp+var_18] +
push eax  +
mov word ptr [ebp+var_18] 8B1Fh +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 18h +
mov [esi+1Ch] eax +
xor ebx ebx +
mov dword ptr [esi+4] 3F35h +
jmp loc_407A90  +
mov eax [esi+24h] +
and dword ptr [esi+14h] 0 +
test eax eax +
jz loc_406A38  +
or dword ptr [eax+30h] 0FFFFFFFFh +
test byte ptr [esi+0Ch] 1 +
jz loc_406AD7  +
movzx eax bl +
shl eax 8 +
mov ecx ebx +
shr ecx 8 +
add eax ecx +
push 1Fh  +
xor edx edx +
pop ecx  +
div  ecx +
test edx edx +
jnz loc_406AD7  +
mov eax ebx +
and al 0Fh +
cmp al 8 +
jz loc_406A71  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
jmp loc_407A89  +
shr ebx 4 +
mov ecx ebx +
and ecx 0Fh +
sub edi 4 +
add ecx 8 +
cmp dword ptr [esi+28h] 0 +
jnz loc_406A88  +
mov [esi+28h] ecx +
cmp ecx 0Fh +
ja loc_406AC8  +
cmp ecx [esi+28h] +
ja loc_406AC8  +
xor eax eax +
xor edi edi +
inc eax  +
shl eax cl +
push edi  +
push edi  +
push edi  +
mov [esi+18h] eax +
call sub_408672  +
mov ecx [ebp+arg_0] +
shr ebx 8 +
not ebx  +
and ebx 2 +
or ebx 3F3Dh +
mov [esi+1Ch] eax +
mov [ecx+30h] eax +
add esp 0Ch +
mov [esi+4] ebx +
xor ebx ebx +
jmp loc_407A90  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidWindowS +
jmp loc_407A89  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
jmp loc_407A89  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 10h +
jb loc_406AE6  +
mov [esi+14h] ebx +
cmp bl 8 +
jnz loc_406A62  +
test ebx 0E000h +
jz loc_406B2D  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
jmp loc_407A89  +
mov eax [esi+24h] +
test eax eax +
jz loc_406B3E  +
mov ecx ebx +
shr ecx 8 +
and ecx 1 +
mov [eax] ecx +
test dword ptr [esi+14h] 200h +
jz loc_406B6A  +
test byte ptr [esi+0Ch] 4 +
jz loc_406B6A  +
mov byte ptr [ebp+var_18] bl +
push 2  +
lea eax [ebp+var_18] +
shr ebx 8 +
push eax  +
mov byte ptr [ebp+var_18+1] bl +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 0Ch +
mov [esi+1Ch] eax +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F36h +
jmp loc_406B96  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 20h +
jb loc_406B77  +
mov eax [esi+24h] +
test eax eax +
jz loc_406BA5  +
mov [eax+4] ebx +
test dword ptr [esi+14h] 200h +
jz loc_406BE1  +
test byte ptr [esi+0Ch] 4 +
jz loc_406BE1  +
mov eax ebx +
shr eax 8 +
mov byte ptr [ebp+var_18+1] al +
mov eax ebx +
shr eax 10h +
mov byte ptr [ebp+var_18+2] al +
mov byte ptr [ebp+var_18] bl +
push 4  +
lea eax [ebp+var_18] +
shr ebx 18h +
push eax  +
mov byte ptr [ebp+var_18+3] bl +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 0Ch +
mov [esi+1Ch] eax +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F37h +
jmp loc_406C0D  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 10h +
jb loc_406BEE  +
mov eax [esi+24h] +
test eax eax +
jz loc_406C2F  +
mov ecx ebx +
and ecx 0FFh +
mov [eax+8] ecx +
mov ecx [esi+24h] +
mov eax ebx +
shr eax 8 +
mov [ecx+0Ch] eax +
test dword ptr [esi+14h] 200h +
jz loc_406C5B  +
test byte ptr [esi+0Ch] 4 +
jz loc_406C5B  +
mov byte ptr [ebp+var_18] bl +
push 2  +
lea eax [ebp+var_18] +
shr ebx 8 +
push eax  +
mov byte ptr [ebp+var_18+1] bl +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 0Ch +
mov [esi+1Ch] eax +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F38h +
test dword ptr [esi+14h] 400h +
jnz loc_406CF9  +
mov eax [esi+24h] +
test eax eax +
jz loc_406C7E  +
and dword ptr [eax+10h] 0 +
mov dword ptr [esi+4] 3F39h +
test dword ptr [esi+14h] 400h +
jz loc_406D8E  +
mov edx [esi+44h] +
mov eax [ebp+var_8] +
mov [ebp+var_C] edx +
cmp edx eax +
jbe loc_406CA2  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_406D84  +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_406D55  +
mov eax [ecx+10h] +
mov [ebp+var_28] eax +
test eax eax +
jz loc_406D55  +
mov eax [ecx+14h] +
mov ecx [ecx+18h] +
sub eax edx +
mov edx [ebp+var_C] +
add edx eax +
cmp edx ecx +
jbe loc_406D40  +
sub ecx eax +
jmp loc_406D43  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 10h +
jb loc_406CDA  +
mov eax [esi+24h] +
mov [esi+44h] ebx +
test eax eax +
jz loc_406D0B  +
mov [eax+14h] ebx +
test dword ptr [esi+14h] 200h +
jz loc_406D37  +
test byte ptr [esi+0Ch] 4 +
jz loc_406D37  +
mov byte ptr [ebp+var_18] bl +
push 2  +
lea eax [ebp+var_18] +
shr ebx 8 +
push eax  +
mov byte ptr [ebp+var_18+1] bl +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 0Ch +
mov [esi+1Ch] eax +
xor ebx ebx +
xor edi edi +
jmp loc_406C7E  +
mov ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_28] +
push [ebp+var_4]  +
add ecx eax +
push ecx  +
call loc_409380  +
add esp 0Ch +
test dword ptr [esi+14h] 200h +
jz loc_406D78  +
test byte ptr [esi+0Ch] 4 +
jz loc_406D78  +
push [ebp+var_C]  +
push [ebp+var_4]  +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
add esp 0Ch +
mov [esi+1Ch] eax +
mov eax [ebp+var_C] +
sub [ebp+var_8] eax +
add [ebp+var_4] eax +
sub [esi+44h] eax +
cmp dword ptr [esi+44h] 0 +
jnz loc_407AE5  +
and dword ptr [esi+44h] 0 +
mov dword ptr [esi+4] 3F3Ah +
test dword ptr [esi+14h] 800h +
jz loc_406E27  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
xor ecx ecx +
mov eax [ebp+var_4] +
movzx eax byte ptr [ecx+eax] +
inc ecx  +
mov [ebp+var_C] ecx +
mov ecx [esi+24h] +
mov [ebp+var_20] eax +
test ecx ecx +
jz loc_406DE2  +
mov edx [ecx+1Ch] +
mov [ebp+var_28] edx +
test edx edx +
jz loc_406DE2  +
mov edx [esi+44h] +
cmp edx [ecx+20h] +
jnb loc_406DE2  +
mov ecx [ebp+var_28] +
mov [ecx+edx] al +
inc dword ptr [esi+44h]  +
test eax eax +
jz loc_406DEE  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_8] +
jb loc_406DB2  +
test dword ptr [esi+14h] 200h +
jz loc_406E14  +
test byte ptr [esi+0Ch] 4 +
jz loc_406E14  +
push [ebp+var_C]  +
push [ebp+var_4]  +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
mov [esi+1Ch] eax +
mov eax [ebp+var_20] +
add esp 0Ch +
mov ecx [ebp+var_C] +
sub [ebp+var_8] ecx +
add [ebp+var_4] ecx +
test eax eax +
jnz loc_407AE5  +
jmp loc_406E32  +
mov eax [esi+24h] +
test eax eax +
jz loc_406E32  +
and dword ptr [eax+1Ch] 0 +
and dword ptr [esi+44h] 0 +
mov dword ptr [esi+4] 3F3Bh +
test dword ptr [esi+14h] 1000h +
jz loc_406ECF  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
and [ebp+var_C] 0 +
mov ecx [ebp+var_C] +
mov eax [ebp+var_4] +
movzx eax byte ptr [ecx+eax] +
mov ecx [esi+24h] +
inc [ebp+var_C]  +
mov [ebp+var_20] eax +
test ecx ecx +
jz loc_406E8A  +
mov edx [ecx+24h] +
mov [ebp+var_28] edx +
test edx edx +
jz loc_406E8A  +
mov edx [esi+44h] +
cmp edx [ecx+28h] +
jnb loc_406E8A  +
mov ecx [ebp+var_28] +
mov [ecx+edx] al +
inc dword ptr [esi+44h]  +
test eax eax +
jz loc_406E96  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_8] +
jb loc_406E58  +
test dword ptr [esi+14h] 200h +
jz loc_406EBC  +
test byte ptr [esi+0Ch] 4 +
jz loc_406EBC  +
push [ebp+var_C]  +
push [ebp+var_4]  +
push dword ptr [esi+1Ch]  +
call sub_4088FF  +
mov [esi+1Ch] eax +
mov eax [ebp+var_20] +
add esp 0Ch +
mov ecx [ebp+var_C] +
sub [ebp+var_8] ecx +
add [ebp+var_4] ecx +
test eax eax +
jnz loc_407AE5  +
jmp loc_406EDA  +
mov eax [esi+24h] +
test eax eax +
jz loc_406EDA  +
and dword ptr [eax+24h] 0 +
mov dword ptr [esi+4] 3F3Ch +
test dword ptr [esi+14h] 200h +
jz loc_406F31  +
jmp loc_406F0B  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 10h +
jb loc_406EEC  +
test byte ptr [esi+0Ch] 4 +
jz loc_406F2D  +
movzx eax word ptr [esi+1Ch] +
cmp ebx eax +
jz loc_406F2D  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
jmp loc_407A89  +
xor ebx ebx +
xor edi edi +
mov eax [esi+24h] +
test eax eax +
jz loc_406F4C  +
mov edx [esi+14h] +
xor ecx ecx +
inc ecx  +
sar edx 9 +
and edx ecx +
mov [eax+2Ch] edx +
mov eax [esi+24h] +
mov [eax+30h] ecx +
xor eax eax +
push eax  +
push eax  +
push eax  +
call sub_4088FF  +
mov ecx [ebp+arg_0] +
mov [esi+1Ch] eax +
add esp 0Ch +
mov [ecx+30h] eax +
jmp loc_4076C6  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 20h +
jb loc_406F67  +
mov ecx ebx +
mov edx ebx +
mov eax 0FF00h +
and ecx eax +
shl edx 10h +
add ecx edx +
mov edx ebx +
shr edx 8 +
shl ecx 8 +
and eax edx +
add eax ecx +
mov ecx [ebp+arg_0] +
shr ebx 18h +
add eax ebx +
mov [esi+1Ch] eax +
mov [ecx+30h] eax +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F3Eh +
jmp loc_406FC5  +
mov ecx [ebp+arg_0] +
cmp dword ptr [esi+10h] 0 +
jz loc_407AA9  +
xor eax eax +
push eax  +
push eax  +
push eax  +
call sub_408672  +
mov ecx [ebp+arg_0] +
mov [esi+1Ch] eax +
mov [ecx+30h] eax +
add esp 0Ch +
mov dword ptr [esi+4] 3F3Fh +
cmp [ebp+arg_4] 5 +
jz loc_407AE5  +
cmp [ebp+arg_4] 6 +
jz loc_407AE5  +
cmp dword ptr [esi+8] 0 +
jz loc_40703A  +
mov ecx edi +
and ecx 7 +
shr ebx cl +
sub edi ecx +
mov dword ptr [esi+4] 3F4Eh +
jmp loc_407A90  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 3 +
jb loc_40701B  +
mov eax ebx +
and eax 1 +
mov [esi+8] eax +
shr ebx 1 +
mov eax ebx +
and eax 3 +
sub eax 0 +
jz loc_4070AC  +
dec eax  +
jz loc_407078  +
dec eax  +
jz loc_40706F  +
dec eax  +
jnz loc_4070B3  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov dword ptr [esi+4] 3F51h +
jmp loc_4070B3  +
mov dword ptr [esi+4] 3F44h +
jmp loc_4070B3  +
cmp [ebp+arg_4] 6 +
mov dword ptr [esi+50h] offset asc_41DB18 +
mov dword ptr [esi+58h] 9 +
mov dword ptr [esi+54h] offset unk_41E318 +
mov dword ptr [esi+5Ch] 5 +
mov dword ptr [esi+4] 3F47h +
jnz loc_4070B3  +
shr ebx 2 +
sub edi 3 +
jmp loc_407AE5  +
mov dword ptr [esi+4] 3F41h +
shr ebx 2 +
sub edi 3 +
jmp loc_407A90  +
mov ecx edi +
and ecx 7 +
shr ebx cl +
sub edi ecx +
jmp loc_4070E8  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 20h +
jb loc_4070C9  +
mov ecx ebx +
mov eax ebx +
not ecx  +
and eax 0FFFFh +
shr ecx 10h +
cmp eax ecx +
jz loc_40710E  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
jmp loc_407A89  +
xor ebx ebx +
xor edi edi +
cmp [ebp+arg_4] 6 +
mov [esi+44h] eax +
mov dword ptr [esi+4] 3F42h +
jz loc_407AE5  +
mov dword ptr [esi+4] 3F43h +
mov eax [esi+44h] +
mov [ebp+var_C] eax +
test eax eax +
jz loc_4076C6  +
mov eax [ebp+var_8] +
cmp [ebp+var_C] eax +
jbe loc_407146  +
mov [ebp+var_C] eax +
mov eax [ebp+var_10] +
cmp [ebp+var_C] eax +
jbe loc_407151  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_407AE5  +
push [ebp+var_C]  +
push [ebp+var_4]  +
push [ebp+var_14]  +
call loc_409380  +
mov eax [ebp+var_C] +
sub [ebp+var_8] eax +
add [ebp+var_4] eax +
sub [ebp+var_10] eax +
add [ebp+var_14] eax +
add esp 0Ch +
sub [esi+44h] eax +
jmp loc_407A90  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 0Eh +
jb loc_407183  +
mov eax ebx +
and eax 1Fh +
add eax 101h +
mov [esi+64h] eax +
shr ebx 5 +
mov eax ebx +
and eax 1Fh +
inc eax  +
shr ebx 5 +
mov [esi+68h] eax +
mov eax ebx +
and eax 0Fh +
add eax 4 +
shr ebx 4 +
sub edi 0Eh +
cmp dword ptr [esi+64h] 11Eh +
mov [esi+60h] eax +
ja loc_4071F0  +
cmp dword ptr [esi+68h] 1Eh +
ja loc_4071F0  +
and dword ptr [esi+6Ch] 0 +
mov dword ptr [esi+4] 3F45h +
jmp loc_407241  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
jmp loc_407A89  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 3 +
jb loc_4071FF  +
mov ecx [esi+6Ch] +
movzx ecx ds:word_41E398[ecx*2] +
mov eax ebx +
and eax 7 +
mov [esi+ecx*2+74h] ax +
inc dword ptr [esi+6Ch]  +
shr ebx 3 +
sub edi 3 +
mov eax [esi+6Ch] +
cmp eax [esi+60h] +
jb loc_40721E  +
jmp loc_407260  +
mov eax [esi+6Ch] +
movzx eax ds:word_41E398[eax*2] +
xor ecx ecx +
mov [esi+eax*2+74h] cx +
inc dword ptr [esi+6Ch]  +
cmp dword ptr [esi+6Ch] 13h +
jb loc_40724B  +
lea eax [esi+534h] +
lea ecx [esi+70h] +
mov [ecx] eax +
mov [esi+50h] eax +
lea edx [esi+2F4h] +
push edx  +
lea eax [esi+58h] +
push eax  +
push ecx  +
mov dword ptr [eax] 7 +
push 13h  +
lea eax [esi+74h] +
push eax  +
push 0  +
call sub_40809D  +
add esp 18h +
mov [ebp+var_24] eax +
test eax eax +
jz loc_4072AC  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
jmp loc_407A89  +
and dword ptr [esi+6Ch] 0 +
mov dword ptr [esi+4] 3F46h +
jmp loc_40742C  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
mov ecx [esi+58h] +
xor eax eax +
inc eax  +
shl eax cl +
mov ecx [esi+50h] +
dec eax  +
and eax ebx +
mov eax [ecx+eax*4] +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
mov [ebp+var_28] eax +
cmp ecx edi +
ja loc_4072BC  +
mov edx eax +
shr edx 10h +
cmp dx 10h +
jnb loc_407320  +
shr eax 8 +
movzx ecx al +
mov eax [esi+6Ch] +
shr ebx cl +
sub edi ecx +
mov [esi+eax*2+74h] dx +
inc dword ptr [esi+6Ch]  +
jmp loc_40742C  +
jnz loc_407382  +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
jmp loc_40734E  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov ecx [ebp+var_4] +
movzx edx byte ptr [ecx] +
dec [ebp+var_8]  +
mov ecx edi +
shl edx cl +
movzx ecx ah +
add ebx edx +
inc [ebp+var_4]  +
add edi 8 +
add ecx 2 +
cmp edi ecx +
jb loc_40732C  +
movzx ecx ah +
mov eax [esi+6Ch] +
shr ebx cl +
sub edi ecx +
test eax eax +
jz loc_40743D  +
movzx eax word ptr [esi+eax*2+72h] +
mov [ebp+var_20] eax +
mov eax ebx +
and eax 3 +
add eax 3 +
shr ebx 2 +
sub edi 2 +
jmp loc_407407  +
cmp word ptr [ebp+var_28+2] 11h +
movzx edx ah +
jnz loc_4073E6  +
jmp loc_4073AD  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
lea eax [edx+3] +
cmp edi eax +
jb loc_40738E  +
mov ecx edx +
shr ebx cl +
push 0FFFFFFFDh  +
mov eax ebx +
and eax 7 +
add eax 3 +
shr ebx 3 +
jmp loc_4073FE  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
lea eax [edx+7] +
cmp edi eax +
jb loc_4073C7  +
mov ecx edx +
shr ebx cl +
push 0FFFFFFF9h  +
mov eax ebx +
and eax 7Fh +
add eax 0Bh +
shr ebx 7 +
and [ebp+var_20] 0 +
pop ecx  +
sub ecx edx +
add edi ecx +
mov edx [esi+68h] +
mov ecx [esi+6Ch] +
add edx [esi+64h] +
add ecx eax +
cmp ecx edx +
ja loc_40744C  +
test eax eax +
jz loc_40742C  +
mov ecx [esi+6Ch] +
mov dx word ptr [ebp+var_20] +
mov [esi+ecx*2+74h] dx +
inc dword ptr [esi+6Ch]  +
dec eax  +
jnz loc_40741A  +
mov eax [esi+68h] +
add eax [esi+64h] +
cmp [esi+6Ch] eax +
jb loc_4072DB  +
jmp loc_40745D  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
jmp loc_407A89  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov dword ptr [esi+4] 3F51h +
cmp dword ptr [esi+4] 3F51h +
jz loc_407A90  +
cmp word ptr [esi+274h] 0 +
jnz loc_407483  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeMis +
jmp loc_407A89  +
lea eax [esi+534h] +
lea ecx [esi+70h] +
mov [ecx] eax +
mov [esi+50h] eax +
lea edx [esi+2F4h] +
push edx  +
lea eax [esi+58h] +
push eax  +
push ecx  +
push dword ptr [esi+64h]  +
mov dword ptr [eax] 9 +
lea eax [esi+74h] +
push eax  +
push 1  +
call sub_40809D  +
add esp 18h +
mov [ebp+var_24] eax +
test eax eax +
jz loc_4074CA  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
jmp loc_407A89  +
lea ecx [esi+70h] +
mov eax [ecx] +
mov [esi+54h] eax +
lea edx [esi+2F4h] +
push edx  +
lea eax [esi+5Ch] +
push eax  +
push ecx  +
push dword ptr [esi+68h]  +
mov dword ptr [eax] 6 +
mov eax [esi+64h] +
lea eax [esi+eax*2+74h] +
push eax  +
push 2  +
call sub_40809D  +
add esp 18h +
mov [ebp+var_24] eax +
test eax eax +
jz loc_40750F  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
jmp loc_407A89  +
cmp [ebp+arg_4] 6 +
mov dword ptr [esi+4] 3F47h +
jz loc_407AE5  +
mov dword ptr [esi+4] 3F48h +
cmp [ebp+var_8] 6 +
jb loc_40759A  +
cmp [ebp+var_10] 102h +
jb loc_40759A  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
push [ebp+var_1C]  +
mov [eax+0Ch] ecx +
mov ecx [ebp+var_10] +
mov [eax+10h] ecx +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov ecx [ebp+var_8] +
mov [eax+4] ecx +
push eax  +
mov [esi+3Ch] ebx +
mov [esi+40h] edi +
call sub_407CDB  +
cmp dword ptr [esi+4] 3F3Fh +
mov eax [ebp+arg_0] +
mov ebx [esi+3Ch] +
mov edi [esi+40h] +
pop ecx  +
pop ecx  +
mov ecx [eax+0Ch] +
mov [ebp+var_14] ecx +
mov ecx [eax+10h] +
mov [ebp+var_10] ecx +
mov ecx [eax] +
mov eax [eax+4] +
mov [ebp+var_4] ecx +
mov [ebp+var_8] eax +
jnz loc_407A90  +
or dword ptr [esi+1BC8h] 0FFFFFFFFh +
jmp loc_407A90  +
mov ecx [esi+58h] +
and dword ptr [esi+1BC8h] 0 +
mov eax [esi+50h] +
xor edx edx +
inc edx  +
shl edx cl +
dec edx  +
and edx ebx +
mov eax [eax+edx*4] +
jmp loc_4075E4  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
mov ecx [esi+58h] +
add edi 8 +
add ebx eax +
inc [ebp+var_4]  +
xor eax eax +
inc eax  +
shl eax cl +
mov ecx [esi+50h] +
dec eax  +
and eax ebx +
mov eax [ecx+eax*4] +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
cmp ecx edi +
ja loc_4075B4  +
test al al +
jz loc_407691  +
test al 0F0h +
jnz loc_407691  +
mov [ebp+var_C] eax +
shr [ebp+var_C] 8 +
movzx edx byte ptr [ebp+var_C] +
mov [ebp+var_28] edx +
movzx ecx al +
add ecx edx +
xor edx edx +
inc edx  +
shl edx cl +
mov ecx [ebp+var_28] +
mov [ebp+var_20] eax +
shr eax 10h +
dec edx  +
and edx ebx +
shr edx cl +
add edx eax +
mov eax [esi+50h] +
mov eax [eax+edx*4] +
movzx edx byte ptr [ebp+var_C] +
jmp loc_407675  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
movzx edx byte ptr [ebp+var_20+1] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
movzx ecx byte ptr [ebp+var_20] +
add ebx eax +
inc [ebp+var_4]  +
xor eax eax +
add ecx edx +
inc eax  +
shl eax cl +
add edi 8 +
mov ecx edx +
dec eax  +
and eax ebx +
shr eax cl +
movzx ecx word ptr [ebp+var_20+2] +
add eax ecx +
mov ecx [esi+50h] +
mov eax [ecx+eax*4] +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
add ecx edx +
cmp ecx edi +
ja loc_407634  +
movzx ecx byte ptr [ebp+var_20+1] +
shr ebx cl +
sub edi ecx +
mov [esi+1BC8h] ecx +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
add [esi+1BC8h] ecx +
shr ebx cl +
sub edi ecx +
mov ecx eax +
shr ecx 10h +
mov [esi+44h] ecx +
test al al +
jnz loc_4076BB  +
mov dword ptr [esi+4] 3F4Dh +
jmp loc_407A90  +
test al 20h +
jz loc_4076D2  +
or dword ptr [esi+1BC8h] 0FFFFFFFFh +
mov dword ptr [esi+4] 3F3Fh +
jmp loc_407A90  +
test al 40h +
jz loc_4076E5  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiter_0 +
jmp loc_407A89  +
movzx eax al +
and eax 0Fh +
mov [esi+4Ch] eax +
mov dword ptr [esi+4] 3F49h +
mov eax [esi+4Ch] +
test eax eax +
jz loc_40773B  +
cmp edi eax +
jnb loc_407724  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov ecx [ebp+var_4] +
movzx edx byte ptr [ecx] +
dec [ebp+var_8]  +
mov ecx edi +
shl edx cl +
add edi 8 +
add ebx edx +
inc [ebp+var_4]  +
cmp edi [esi+4Ch] +
jb loc_407700  +
xor edx edx +
inc edx  +
mov ecx eax +
shl edx cl +
sub edi eax +
dec edx  +
and edx ebx +
add [esi+44h] edx +
shr ebx cl +
add [esi+1BC8h] eax +
mov eax [esi+44h] +
mov [esi+1BCCh] eax +
mov dword ptr [esi+4] 3F4Ah +
mov ecx [esi+5Ch] +
mov eax [esi+54h] +
xor edx edx +
inc edx  +
shl edx cl +
dec edx  +
and edx ebx +
mov eax [eax+edx*4] +
jmp loc_40778E  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
mov ecx [esi+5Ch] +
add edi 8 +
add ebx eax +
inc [ebp+var_4]  +
xor eax eax +
inc eax  +
shl eax cl +
mov ecx [esi+54h] +
dec eax  +
and eax ebx +
mov eax [ecx+eax*4] +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
cmp ecx edi +
ja loc_40775E  +
test al 0F0h +
jnz loc_407833  +
mov [ebp+var_C] eax +
shr [ebp+var_C] 8 +
movzx edx byte ptr [ebp+var_C] +
mov [ebp+var_28] edx +
movzx ecx al +
add ecx edx +
xor edx edx +
inc edx  +
shl edx cl +
mov ecx [ebp+var_28] +
mov [ebp+var_20] eax +
shr eax 10h +
dec edx  +
and edx ebx +
shr edx cl +
add edx eax +
mov eax [esi+54h] +
mov eax [eax+edx*4] +
movzx edx byte ptr [ebp+var_C] +
jmp loc_407817  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
movzx edx byte ptr [ebp+var_20+1] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
movzx ecx byte ptr [ebp+var_20] +
add ebx eax +
inc [ebp+var_4]  +
xor eax eax +
add ecx edx +
inc eax  +
shl eax cl +
add edi 8 +
mov ecx edx +
dec eax  +
and eax ebx +
shr eax cl +
movzx ecx word ptr [ebp+var_20+2] +
add eax ecx +
mov ecx [esi+54h] +
mov eax [ecx+eax*4] +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
add ecx edx +
cmp ecx edi +
ja loc_4077D6  +
movzx ecx byte ptr [ebp+var_20+1] +
shr ebx cl +
sub edi ecx +
add [esi+1BC8h] ecx +
mov ecx eax +
shr ecx 8 +
movzx ecx cl +
add [esi+1BC8h] ecx +
shr ebx cl +
sub edi ecx +
test al 40h +
jz loc_407858  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
jmp loc_407A89  +
mov ecx eax +
movzx eax al +
shr ecx 10h +
and eax 0Fh +
mov [esi+48h] ecx +
mov [esi+4Ch] eax +
mov dword ptr [esi+4] 3F4Bh +
mov eax [esi+4Ch] +
test eax eax +
jz loc_4078B6  +
cmp edi eax +
jnb loc_40789F  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov ecx [ebp+var_4] +
movzx edx byte ptr [ecx] +
dec [ebp+var_8]  +
mov ecx edi +
shl edx cl +
add edi 8 +
add ebx edx +
inc [ebp+var_4]  +
cmp edi [esi+4Ch] +
jb loc_40787B  +
xor edx edx +
inc edx  +
mov ecx eax +
shl edx cl +
sub edi eax +
dec edx  +
and edx ebx +
add [esi+48h] edx +
shr ebx cl +
add [esi+1BC8h] eax +
mov dword ptr [esi+4] 3F4Ch +
cmp [ebp+var_10] 0 +
jz loc_407AE5  +
mov eax [ebp+var_1C] +
sub eax [ebp+var_10] +
mov edx [esi+48h] +
cmp edx eax +
jbe loc_407918  +
sub edx eax +
cmp edx [esi+30h] +
jbe loc_4078F3  +
cmp dword ptr [esi+1BC4h] 0 +
jz loc_4078F3  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
jmp loc_407A89  +
mov ecx [esi+34h] +
mov eax [esi+38h] +
cmp edx ecx +
jbe loc_407906  +
add eax [esi+2Ch] +
sub edx ecx +
sub eax edx +
jmp loc_40790A  +
sub eax edx +
add eax ecx +
mov ecx [esi+44h] +
mov [ebp+var_28] ecx +
cmp edx ecx +
jbe loc_407923  +
mov edx ecx +
jmp loc_407923  +
mov eax [ebp+var_14] +
sub eax edx +
mov edx [esi+44h] +
mov [ebp+var_28] edx +
cmp edx [ebp+var_10] +
jbe loc_40792B  +
mov edx [ebp+var_10] +
mov ecx [ebp+var_28] +
sub [ebp+var_10] edx +
sub ecx edx +
sub eax [ebp+var_14] +
mov [esi+44h] ecx +
mov [ebp+var_28] eax +
jmp loc_407941  +
mov eax [ebp+var_28] +
mov ecx [ebp+var_14] +
mov al [eax+ecx] +
inc [ebp+var_14]  +
dec edx  +
mov [ecx] al +
jnz loc_40793E  +
cmp [esi+44h] edx +
jnz loc_407A90  +
jmp loc_407972  +
cmp [ebp+var_10] 0 +
jz loc_407AE5  +
mov ecx [ebp+var_14] +
mov al [esi+44h] +
inc [ebp+var_14]  +
dec [ebp+var_10]  +
mov [ecx] al +
mov dword ptr [esi+4] 3F48h +
jmp loc_407A90  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_407A3D  +
jmp loc_4079A9  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 20h +
jb loc_40798A  +
mov eax [ebp+var_1C] +
sub eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
add [ecx+14h] eax +
add [esi+20h] eax +
test byte ptr [esi+0Ch] 4 +
mov [ebp+var_1C] eax +
jz loc_4079F3  +
test eax eax +
jz loc_4079F3  +
push eax  +
mov eax [ebp+var_14] +
sub eax [ebp+var_1C] +
cmp dword ptr [esi+14h] 0 +
push eax  +
push dword ptr [esi+1Ch]  +
jz loc_4079E2  +
call sub_4088FF  +
jmp loc_4079E7  +
call sub_408672  +
mov ecx [ebp+arg_0] +
mov [esi+1Ch] eax +
add esp 0Ch +
mov [ecx+30h] eax +
test byte ptr [esi+0Ch] 4 +
mov eax [ebp+var_10] +
mov [ebp+var_1C] eax +
jz loc_407A39  +
cmp dword ptr [esi+14h] 0 +
mov eax ebx +
jnz loc_407A28  +
mov ecx 0FF00h +
and eax ecx +
mov edx ebx +
shl edx 10h +
add eax edx +
mov edx ebx +
shr edx 8 +
and edx ecx +
shl eax 8 +
mov ecx ebx +
add eax edx +
shr ecx 18h +
add eax ecx +
cmp eax [esi+1Ch] +
jz loc_407A39  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
jmp loc_407A89  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F4Fh +
cmp dword ptr [esi+0Ch] 0 +
jz loc_407ACE  +
cmp dword ptr [esi+14h] 0 +
jz loc_407ACE  +
jmp loc_407A75  +
cmp [ebp+var_8] 0 +
jz loc_407AE5  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
dec [ebp+var_8]  +
mov ecx edi +
shl eax cl +
add ebx eax +
inc [ebp+var_4]  +
add edi 8 +
cmp edi 20h +
jb loc_407A56  +
cmp ebx [esi+20h] +
jz loc_407ACA  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectLengt +
mov dword ptr [esi+4] 3F51h +
mov eax [esi+4] +
sub eax 3F34h +
cmp eax 1Eh +
jbe loc_40699D  +
push 0FFFFFFFEh  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [ebp+var_14] +
mov [ecx+0Ch] eax +
mov eax [ebp+var_10] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
mov [ecx] eax +
mov eax [ebp+var_8] +
mov [ecx+4] eax +
mov [esi+3Ch] ebx +
mov [esi+40h] edi +
push 2  +
jmp loc_407AA3  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi+4] 3F50h +
mov [ebp+var_24] 1 +
jmp loc_407AE5  +
mov [ebp+var_24] 0FFFFFFFDh +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax+0Ch] ecx +
mov ecx [ebp+var_10] +
mov [eax+10h] ecx +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov ecx [ebp+var_8] +
mov [eax+4] ecx +
cmp dword ptr [esi+2Ch] 0 +
mov [esi+3Ch] ebx +
mov [esi+40h] edi +
jnz loc_407B2A  +
mov ecx [ebp+var_1C] +
cmp ecx [eax+10h] +
jz loc_407B4F  +
mov eax [esi+4] +
cmp eax 3F51h +
jge loc_407B4F  +
cmp eax 3F4Eh +
jl loc_407B2A  +
cmp [ebp+arg_4] 4 +
jz loc_407B4F  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_1C] +
sub ecx [eax+10h] +
push ecx  +
mov ecx [eax+0Ch] +
call sub_406862  +
pop ecx  +
test eax eax +
jz loc_407B4F  +
mov dword ptr [esi+4] 3F52h +
push 0FFFFFFFCh  +
jmp loc_407AA3  +
mov edi [ebp+arg_0] +
mov eax [ebp+var_2C] +
sub eax [edi+4] +
mov ebx [ebp+var_1C] +
sub ebx [edi+10h] +
add [edi+8] eax +
add [edi+14h] ebx +
add [esi+20h] ebx +
test byte ptr [esi+0Ch] 4 +
mov [ebp+var_2C] eax +
jz loc_407B9C  +
test ebx ebx +
jz loc_407B9C  +
mov eax [edi+0Ch] +
push ebx  +
sub eax ebx +
cmp dword ptr [esi+14h] 0 +
push eax  +
push dword ptr [esi+1Ch]  +
jz loc_407B8B  +
call sub_4088FF  +
jmp loc_407B90  +
call sub_408672  +
mov [esi+1Ch] eax +
mov [edi+30h] eax +
mov eax [ebp+var_2C] +
add esp 0Ch +
mov ecx [esi+4] +
cmp ecx 3F3Fh +
jnz loc_407BB0  +
mov [ebp+var_2C] 80h +
jmp loc_407BB4  +
and [ebp+var_2C] 0 +
cmp ecx 3F47h +
jz loc_407BC8  +
cmp ecx 3F42h +
jz loc_407BC8  +
xor ecx ecx +
jmp loc_407BCD  +
mov ecx 100h +
mov edx [esi+8] +
neg edx  +
sbb edx edx +
and edx 40h +
add edx ecx +
add edx [ebp+var_2C] +
add edx [esi+40h] +
mov [edi+2Ch] edx +
test eax eax +
jnz loc_407BEA  +
test ebx ebx +
jz loc_407BF0  +
cmp [ebp+arg_4] 4 +
jnz loc_407BFD  +
cmp [ebp+var_24] 0 +
jnz loc_407BFD  +
mov [ebp+var_24] 0FFFFFFFBh +
mov eax [ebp+var_24] +
jmp loc_407AA4  +
***
mov eax esi +
mov eax [esp+arg_4] +
pop ecx  +
sub esp 40h +
sub esp 8Ch +
push ebx  +
push ecx  +
mov edx [esp+arg_4] +
mov edi edi +
mov edi edi +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
cmp dword ptr [ebp+10h] 0 +
jz locret_408B80  +
push 8  +
call sub_40CF43  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push 0  +
push 0  +
mov edi edi +
call sub_40DCB0  +
call sub_409BA6  +
mov eax dword_424070 +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_425664 2 +
jz loc_408DC0  +
call sub_40E074  +
push [ebp+arg_0]  +
call sub_40DEC5  +
push 0FFh  +
call sub_40892F  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov [ebp-20h] eax +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_408F22  +
push eax  +
call sub_408B9D  +
call sub_408BC2  +
***
call sub_40F82A  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov ecx [esp+arg_0] +
test ecx 3 +
jz loc_409200  +
mov al [ecx] +
add ecx 1 +
test al al +
jz loc_409233  +
test ecx 3 +
jnz loc_4091DC  +
add eax 0 +
lea esp [esp+0] +
lea esp [esp+0] +
mov eax [ecx] +
mov edx 7EFEFEFFh +
add edx eax +
xor eax 0FFFFFFFFh +
xor eax edx +
add ecx 4 +
test eax 81010100h +
jz loc_409200  +
mov eax [ecx-4] +
test al al +
jz loc_409251  +
test ah ah +
jz loc_409247  +
test eax 0FF0000h +
jz loc_40923D  +
test eax 0FF000000h +
jz loc_409233  +
jmp loc_409200  +
lea eax [ecx-1] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-2] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-3] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-4] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
***
mov edx [esp+arg_0] +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push offset sub_4101B8  +
call sub_4092E8  +
add esp 10h +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4093A0  +
cmp edi eax +
jb loc_409540  +
cmp ecx 80h +
jb loc_4093C4  +
cmp dword_426368 0 +
jz loc_4093C4  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_4093C4  +
jmp loc_4111BC  +
***
test edi 3 +
jnz loc_4093E0  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_409400  +
movs   +
jmp ds:off_4094F0[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_4093F8  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_409400+4)[eax*4]  +
***
jmp ds:dword_409500[ecx*4]  +
***
jmp ds:off_409484[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_409400  +
movs   +
jmp ds:off_4094F0[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_409400  +
movs   +
jmp ds:off_4094F0[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_409400  +
movs   +
jmp ds:off_4094F0[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_4094F0[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_40958C+4)[eax*4]  +
***
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push edi  +
xor ebx ebx +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_1C] +
mov [ebp+var_20] ebx +
stos   +
cmp [ebp+arg_4] ebx +
jnz loc_409714  +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
or eax 0FFFFFFFFh +
jmp loc_409761  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_4096FF  +
push esi  +
mov [ebp+var_18] eax +
mov [ebp+var_20] eax +
lea eax [ebp+arg_8] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
lea eax [ebp+var_20] +
push eax  +
mov [ebp+var_1C] 7FFFFFFFh +
mov [ebp+var_14] 42h +
call sub_40E212  +
add esp 10h +
dec [ebp+var_1C]  +
mov esi eax +
js loc_409752  +
mov eax [ebp+var_20] +
mov [eax] bl +
jmp loc_40975E  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
call sub_4112CF  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edx [esp+arg_8] +
mov ecx [esp+arg_0] +
test edx edx +
jz loc_4097E5  +
xor eax eax +
mov al [esp+arg_4] +
test al al +
jnz loc_40979C  +
cmp edx 80h +
jb loc_40979C  +
cmp dword_426368 0 +
jz loc_40979C  +
jmp loc_411433  +
push edi  +
mov edi ecx +
cmp edx 4 +
jb loc_4097D5  +
neg ecx  +
and ecx 3 +
jz loc_4097B7  +
sub edx ecx +
mov [edi] al +
add edi 1 +
sub ecx 1 +
jnz loc_4097AD  +
mov ecx eax +
shl eax 8 +
add eax ecx +
mov ecx eax +
shl eax 10h +
add eax ecx +
mov ecx edx +
and edx 3 +
shr ecx 2 +
jz loc_4097D5  +
stos   +
test edx edx +
jz loc_4097DF  +
mov [edi] al +
add edi 1 +
sub edx 1 +
jnz loc_4097D5  +
mov eax [esp+4+arg_0] +
pop edi  +
retn   +
mov eax [esp+arg_0] +
retn   +
***
jmp loc_409865  +
***
mov ecx [esp+arg_0] +
cmp ecx dword_424070 +
mov eax offset sub_41209D +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov eax dword_4274A0 +
call sub_40AE97  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
retn   +
***
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
mov edx [ebp+arg_4] +
lea ecx [ecx+0] +
mov al [edx] +
or al al +
jz loc_409E63  +
add edx 1 +
bts [esp+24h+var_24] eax +
jmp loc_409E54  +
mov esi [ebp+arg_0] +
or ecx 0FFFFFFFFh +
lea ecx [ecx+0] +
add ecx 1 +
mov al [esi] +
or al al +
jz loc_409E7E  +
add esi 1 +
bt [esp+24h+var_24] eax +
jb loc_409E6C  +
mov eax ecx +
add esp 20h +
pop esi  +
leave   +
retn   +
***
push esi  +
call sub_40DCB0  +
pop ecx  +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 26Ch +
mov eax dword_424070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+LocalFileTime.dwHighDateTime] esi +
mov [ebp+var_26C] ebx +
cmp esi ebx +
jnz loc_40A55F  +
call sub_40AC84  +
mov [eax] ebx +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
jmp loc_40A958  +
cmp edi ebx +
jz loc_40A543  +
push offset unk_4207B4  +
push esi  +
call sub_4147AD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40A58A  +
call sub_40AC71  +
push 2  +
pop esi  +
mov [eax] esi +
call sub_40AC84  +
mov [eax] esi +
jmp loc_40A958  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_40A5AA  +
mov al [esi] +
cmp al bl +
jz loc_40A59B  +
cmp [esi+2] bl +
jz loc_40A574  +
movsx eax al +
push eax  +
call sub_4146D5  +
pop ecx  +
sub eax 60h +
jmp loc_40A5AF  +
call sub_414561  +
push ebx  +
push ebx  +
push ebx  +
mov [ebp+var_268] eax +
lea eax [ebp+FindFileData] +
push eax  +
push ebx  +
push esi  +
call ds:FindFirstFileExA  +
mov [ebp+lpMem] eax +
cmp eax 0FFFFFFFFh +
jnz loc_40A6B6  +
push offset unk_4207B0  +
push esi  +
mov [ebp+lpMem] ebx +
call sub_4147AD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40A574  +
lea eax [ebp+lpMem] +
push eax  +
push 104h  +
lea eax [ebp+var_108] +
push esi  +
push eax  +
call sub_40A4B3  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jz loc_40A699  +
push esi  +
call sub_4091D0  +
pop ecx  +
cmp eax 3 +
jz loc_40A628  +
call sub_40A439  +
test eax eax +
jz loc_40A699  +
push esi  +
call ds:GetDriveTypeA  +
cmp eax 1 +
jbe loc_40A699  +
cmp [ebp+lpMem] ebx +
jz loc_40A648  +
push [ebp+lpMem]  +
call sub_408F41  +
pop ecx  +
push 0FFFFFFFFh  +
push ebx  +
push ebx  +
push ebx  +
push 1  +
push 1  +
push 7BCh  +
mov [ebp+FindFileData] 10h +
mov [ebp+var_23C] ebx +
mov [ebp+var_238] ebx +
mov [ebp+var_22C] bl +
call sub_4142FA  +
mov esi [ebp+LocalFileTime.dwHighDateTime] +
mov ecx edx +
add esp 1Ch +
mov [edi+20h] eax +
mov [edi+24h] edx +
mov [edi+18h] eax +
mov [edi+1Ch] ecx +
mov [edi+28h] eax +
mov [edi+2Ch] ecx +
jmp loc_40A8E9  +
cmp [ebp+lpMem] ebx +
jz loc_40A574  +
push [ebp+lpMem]  +
call sub_408F41  +
pop ecx  +
jmp loc_40A574  +
test [ebp+FindFileData] 400h +
jz loc_40A721  +
cmp [ebp+var_234] 0A000000Ch +
jnz loc_40A721  +
or [ebp+lpMem] 0FFFFFFFFh +
push ebx  +
push 40h  +
push ebx  +
lea eax [ebp+lpMem] +
push esi  +
push eax  +
call sub_4142DA  +
add esp 14h +
test eax eax +
jnz loc_40A574  +
cmp [ebp+lpMem] 0FFFFFFFFh +
jz loc_40A574  +
push edi  +
push [ebp+lpMem]  +
call sub_4136E2  +
push [ebp+lpMem]  +
mov esi eax +
call sub_412246  +
add esp 0Ch +
mov eax esi +
jmp loc_40A95B  +
cmp [ebp+FileTime.dwLowDateTime] ebx +
jnz loc_40A739  +
cmp [ebp+FileTime.dwHighDateTime] ebx +
jnz loc_40A739  +
mov [edi+20h] ebx +
mov [edi+24h] ebx +
jmp loc_40A7B1  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_40A93F  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_40A93F  +
movzx eax [ebp+SystemTime.wSecond] +
push 0FFFFFFFFh  +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
call sub_4142FA  +
add esp 1Ch +
mov [edi+20h] eax +
mov [edi+24h] edx +
cmp [ebp+var_24C] ebx +
jnz loc_40A7CF  +
cmp [ebp+var_248] ebx +
jnz loc_40A7CF  +
mov eax [edi+20h] +
mov [edi+18h] eax +
mov eax [edi+24h] +
mov [edi+1Ch] eax +
jmp loc_40A847  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+var_24C] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_40A93F  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_40A93F  +
movzx eax [ebp+SystemTime.wSecond] +
push 0FFFFFFFFh  +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
call sub_4142FA  +
add esp 1Ch +
mov [edi+18h] eax +
mov [edi+1Ch] edx +
cmp [ebp+var_254] ebx +
jnz loc_40A865  +
cmp [ebp+var_250] ebx +
jnz loc_40A865  +
mov eax [edi+20h] +
mov [edi+28h] eax +
mov eax [edi+24h] +
mov [edi+2Ch] eax +
jmp loc_40A8DD  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+var_254] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_40A93F  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_40A93F  +
movzx eax [ebp+SystemTime.wSecond] +
push 0FFFFFFFFh  +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
call sub_4142FA  +
add esp 1Ch +
mov [edi+28h] eax +
mov [edi+2Ch] edx +
push [ebp+lpMem]  +
call ds:FindClose  +
push esi  +
push [ebp+FindFileData]  +
call sub_413625  +
mov [edi+6] ax +
xor eax eax +
inc eax  +
mov [edi+8] ax +
mov eax [ebp+var_238] +
pop ecx  +
pop ecx  +
mov [edi+14h] eax +
cmp [ebp+var_23C] ebx +
jz loc_40A91D  +
or [ebp+var_26C] 0FFFFFFFFh +
mov [edi+14h] ebx +
xor eax eax +
mov [edi+4] ax +
mov [edi+0Ch] ax +
mov [edi+0Ah] ax +
mov eax [ebp+var_268] +
dec eax  +
mov [edi] eax +
mov [edi+10h] eax +
mov eax [ebp+var_26C] +
jmp loc_40A95B  +
call ds:GetLastError  +
push eax  +
call sub_40AC97  +
pop ecx  +
push [ebp+lpMem]  +
call ds:FindClose  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4098E8  +
leave   +
retn   +
***
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+arg_4] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_40A997  +
xor eax eax +
jmp loc_40A999  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_40A9C1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_40A9DD  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_40A9F9  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_40AA3A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_40AA07  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_40AA35  +
cmp edx [esp+arg_4] +
ja loc_40AA35  +
jb loc_40AA36  +
cmp eax [esp+arg_0] +
jbe loc_40AA36  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_40AA44  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov eax [esp+arg_4] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40D601  +
call sub_40D601  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
mov eax dword_426484 +
push dword ptr [eax+esi*4]  +
push esi  +
call sub_409D2C  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_40DCB0  +
pop ecx  +
pop ecx  +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov eax edi +
sub eax 0 +
jz loc_40C7A5  +
dec eax  +
jz loc_40C794  +
dec eax  +
jz loc_40C768  +
dec eax  +
jz loc_40C724  +
dec eax  +
jz loc_40C6A3  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push 20h  +
pop edx  +
jmp loc_40B74B  +
mov esi [eax] +
cmp esi [ecx] +
jz loc_40B393  +
movzx esi byte ptr [eax] +
movzx ebx byte ptr [ecx] +
sub esi ebx +
jz loc_40B33C  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1] +
movzx ebx byte ptr [ecx+1] +
sub esi ebx +
jz loc_40B35B  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+2] +
movzx ebx byte ptr [ecx+2] +
sub esi ebx +
jz loc_40B37A  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+3] +
movzx ebx byte ptr [ecx+3] +
sub esi ebx +
jz loc_40B395  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B395  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+4] +
cmp esi [ecx+4] +
jz loc_40B41B  +
movzx esi byte ptr [eax+4] +
movzx ebx byte ptr [ecx+4] +
sub esi ebx +
jz loc_40B3C4  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+5] +
movzx ebx byte ptr [ecx+5] +
sub esi ebx +
jz loc_40B3E3  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+6] +
movzx ebx byte ptr [ecx+6] +
sub esi ebx +
jz loc_40B402  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+7] +
movzx ebx byte ptr [ecx+7] +
sub esi ebx +
jz loc_40B41D  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B41D  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+8] +
cmp esi [ecx+8] +
jz loc_40B4A3  +
movzx esi byte ptr [eax+8] +
movzx ebx byte ptr [ecx+8] +
sub esi ebx +
jz loc_40B44C  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+9] +
movzx ebx byte ptr [ecx+9] +
sub esi ebx +
jz loc_40B46B  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+0Ah] +
movzx ebx byte ptr [ecx+0Ah] +
sub esi ebx +
jz loc_40B48A  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+0Bh] +
movzx ebx byte ptr [ecx+0Bh] +
sub esi ebx +
jz loc_40B4A5  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B4A5  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+0Ch] +
cmp esi [ecx+0Ch] +
jz loc_40B52B  +
movzx esi byte ptr [eax+0Ch] +
movzx ebx byte ptr [ecx+0Ch] +
sub esi ebx +
jz loc_40B4D4  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+0Dh] +
movzx ebx byte ptr [ecx+0Dh] +
sub esi ebx +
jz loc_40B4F3  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+0Eh] +
movzx ebx byte ptr [ecx+0Eh] +
sub esi ebx +
jz loc_40B512  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+0Fh] +
movzx ebx byte ptr [ecx+0Fh] +
sub esi ebx +
jz loc_40B52D  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B52D  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+10h] +
cmp esi [ecx+10h] +
jz loc_40B5B3  +
movzx ebx byte ptr [ecx+10h] +
movzx esi byte ptr [eax+10h] +
sub esi ebx +
jz loc_40B55C  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+11h] +
movzx ebx byte ptr [ecx+11h] +
sub esi ebx +
jz loc_40B57B  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+12h] +
movzx ebx byte ptr [ecx+12h] +
sub esi ebx +
jz loc_40B59A  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+13h] +
movzx ebx byte ptr [ecx+13h] +
sub esi ebx +
jz loc_40B5B5  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B5B5  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+14h] +
cmp esi [ecx+14h] +
jz loc_40B63B  +
movzx esi byte ptr [eax+14h] +
movzx ebx byte ptr [ecx+14h] +
sub esi ebx +
jz loc_40B5E4  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+15h] +
movzx ebx byte ptr [ecx+15h] +
sub esi ebx +
jz loc_40B603  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+16h] +
movzx ebx byte ptr [ecx+16h] +
sub esi ebx +
jz loc_40B622  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+17h] +
movzx ebx byte ptr [ecx+17h] +
sub esi ebx +
jz loc_40B63D  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B63D  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+18h] +
cmp esi [ecx+18h] +
jz loc_40B6C3  +
movzx esi byte ptr [eax+18h] +
movzx ebx byte ptr [ecx+18h] +
sub esi ebx +
jz loc_40B66C  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+19h] +
movzx ebx byte ptr [ecx+19h] +
sub esi ebx +
jz loc_40B68B  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1Ah] +
movzx ebx byte ptr [ecx+1Ah] +
sub esi ebx +
jz loc_40B6AA  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1Bh] +
movzx ebx byte ptr [ecx+1Bh] +
sub esi ebx +
jz loc_40B6C5  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B6C5  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov esi [eax+1Ch] +
cmp esi [ecx+1Ch] +
jz loc_40B73F  +
movzx esi byte ptr [eax+1Ch] +
movzx ebx byte ptr [ecx+1Ch] +
sub esi ebx +
jz loc_40B6F0  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1Dh] +
movzx ebx byte ptr [ecx+1Dh] +
sub esi ebx +
jz loc_40B70B  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1Eh] +
movzx ebx byte ptr [ecx+1Eh] +
sub esi ebx +
jz loc_40B726  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax+1Fh] +
movzx ebx byte ptr [ecx+1Fh] +
sub esi ebx +
jz loc_40B741  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_40B741  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
add eax edx +
add ecx edx +
sub edi edx +
cmp edi edx +
jnb loc_40B319  +
add eax edi +
add ecx edi +
cmp edi 1Fh +
ja loc_40BB04  +
jmp ds:off_40C7AD[edi*4]  +
mov eax esi +
jmp loc_40BB06  +
mov edx [eax-1Ch] +
cmp edx [ecx-1Ch] +
jz loc_40B7DF  +
movzx esi dl +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_40B790  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_40B7AB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_40B7C6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_40B7E1  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40B7E1  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-18h] +
cmp edx [ecx-18h] +
jz loc_40B862  +
movzx esi dl +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_40B80B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_40B82A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_40B849  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_40B864  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40B864  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-14h] +
cmp edx [ecx-14h] +
jz loc_40B8E9  +
movzx esi dl +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_40B892  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_40B8B1  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_40B8D0  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_40B8EB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40B8EB  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-10h] +
cmp edx [ecx-10h] +
jz loc_40B970  +
movzx esi dl +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_40B919  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_40B938  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_40B957  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_40B972  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40B972  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Ch] +
cmp edx [ecx-0Ch] +
jz loc_40B9F8  +
movzx edx byte ptr [ecx-0Ch] +
movzx esi byte ptr [eax-0Ch] +
sub esi edx +
jz loc_40B9A1  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_40B9C0  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_40B9DF  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-9] +
movzx edx byte ptr [ecx-9] +
sub esi edx +
jz loc_40B9FA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40B9FA  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-8] +
cmp edx [ecx-8] +
jz loc_40BA7F  +
movzx esi dl +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_40BA28  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-7] +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_40BA47  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_40BA66  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_40BA81  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BA81  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-4] +
cmp edx [ecx-4] +
jz loc_40BAFE  +
movzx esi dl +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_40BAAB  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_40BAE1  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_40BAC6  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_40BAE1  +
movzx esi byte ptr [eax-2] +
movzx edx byte ptr [ecx-2] +
sub esi edx +
jz loc_40BAE5  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jz loc_40BAE5  +
mov eax edx +
jmp loc_40BB00  +
movzx eax byte ptr [eax-1] +
movzx ecx byte ptr [ecx-1] +
sub eax ecx +
jz loc_40BB00  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_40BB00  +
xor eax eax +
test eax eax +
jnz loc_40BB06  +
xor eax eax +
pop ebx  +
jmp loc_40C7A7  +
mov edx [eax-1Dh] +
cmp edx [ecx-1Dh] +
jz loc_40BB89  +
movzx esi dl +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_40BB32  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_40BB51  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_40BB70  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_40BB8B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BB8B  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-19h] +
cmp edx [ecx-19h] +
jz loc_40BC10  +
movzx esi dl +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_40BBB9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_40BBD8  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_40BBF7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_40BC12  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BC12  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-15h] +
cmp edx [ecx-15h] +
jz loc_40BC97  +
movzx esi dl +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_40BC40  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_40BC5F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_40BC7E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_40BC99  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BC99  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-11h] +
cmp edx [ecx-11h] +
jz loc_40BD1E  +
movzx esi dl +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_40BCC7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_40BCE6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_40BD05  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_40BD20  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BD20  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Dh] +
cmp edx [ecx-0Dh] +
jz loc_40BDA5  +
movzx esi dl +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_40BD4E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_40BD6D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_40BD8C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_40BDA7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BDA7  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-9] +
cmp edx [ecx-9] +
jz loc_40BE2D  +
movzx edx byte ptr [ecx-9] +
movzx esi byte ptr [eax-9] +
sub esi edx +
jz loc_40BDD6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-8] +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_40BDF5  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-7] +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_40BE14  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_40BE2F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BE2F  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-5] +
cmp edx [ecx-5] +
jz loc_40BEB4  +
movzx esi dl +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_40BE5D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_40BE7C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_40BE9B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-2] +
movzx edx byte ptr [ecx-2] +
sub esi edx +
jz loc_40BEB6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BEB6  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
movzx ecx byte ptr [ecx-1] +
movzx eax byte ptr [eax-1] +
sub eax ecx +
jz loc_40BB06  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_40BB06  +
mov edx [eax-1Eh] +
cmp edx [ecx-1Eh] +
jz loc_40BF5B  +
movzx esi dl +
movzx edx byte ptr [ecx-1Eh] +
sub esi edx +
jz loc_40BF04  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Dh] +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_40BF23  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_40BF42  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_40BF5D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BF5D  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-1Ah] +
cmp edx [ecx-1Ah] +
jz loc_40BFE2  +
movzx esi dl +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_40BF8B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_40BFAA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_40BFC9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_40BFE4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40BFE4  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-16h] +
cmp edx [ecx-16h] +
jz loc_40C069  +
movzx esi dl +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_40C012  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_40C031  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_40C050  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_40C06B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C06B  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-12h] +
cmp edx [ecx-12h] +
jz loc_40C0F0  +
movzx esi dl +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_40C099  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_40C0B8  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_40C0D7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_40C0F2  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C0F2  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Eh] +
cmp edx [ecx-0Eh] +
jz loc_40C177  +
movzx esi dl +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_40C120  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_40C13F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_40C15E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_40C179  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C179  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Ah] +
cmp edx [ecx-0Ah] +
jz loc_40C1FF  +
movzx edx byte ptr [ecx-0Ah] +
movzx esi byte ptr [eax-0Ah] +
sub esi edx +
jz loc_40C1A8  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx edx byte ptr [ecx-9] +
movzx esi byte ptr [eax-9] +
sub esi edx +
jz loc_40C1C7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx edx byte ptr [ecx-8] +
movzx esi byte ptr [eax-8] +
sub esi edx +
jz loc_40C1E6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx edx byte ptr [ecx-7] +
movzx esi byte ptr [eax-7] +
sub esi edx +
jz loc_40C201  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C201  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-6] +
cmp edx [ecx-6] +
jz loc_40C286  +
movzx esi dl +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_40C22F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_40C24E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_40C26D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_40C288  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C288  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov dx [eax-2] +
cmp dx [ecx-2] +
jz loc_40BB04  +
movzx edx byte ptr [ecx-2] +
movzx esi byte ptr [eax-2] +
sub esi edx +
jz loc_40BEBE  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_40C69C  +
jmp loc_40BEBE  +
mov edx [eax-1Fh] +
cmp edx [ecx-1Fh] +
jz loc_40C344  +
movzx edx byte ptr [ecx-1Fh] +
movzx esi byte ptr [eax-1Fh] +
sub esi edx +
jz loc_40C2ED  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Eh] +
movzx edx byte ptr [ecx-1Eh] +
sub esi edx +
jz loc_40C30C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Dh] +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_40C32B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_40C346  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C346  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-1Bh] +
cmp edx [ecx-1Bh] +
jz loc_40C3CB  +
movzx esi dl +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_40C374  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_40C393  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_40C3B2  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_40C3CD  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C3CD  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-17h] +
cmp edx [ecx-17h] +
jz loc_40C452  +
movzx esi dl +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_40C3FB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_40C41A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_40C439  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_40C454  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C454  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-13h] +
cmp edx [ecx-13h] +
jz loc_40C4D9  +
movzx esi dl +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_40C482  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_40C4A1  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_40C4C0  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_40C4DB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C4DB  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Fh] +
cmp edx [ecx-0Fh] +
jz loc_40C561  +
movzx edx byte ptr [ecx-0Fh] +
movzx esi byte ptr [eax-0Fh] +
sub esi edx +
jz loc_40C50A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_40C529  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_40C548  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_40C563  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C563  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-0Bh] +
cmp edx [ecx-0Bh] +
jz loc_40C5E8  +
movzx esi dl +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_40C591  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_40C5B0  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-9] +
movzx edx byte ptr [ecx-9] +
sub esi edx +
jz loc_40C5CF  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-8] +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_40C5EA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C5EA  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
mov edx [eax-7] +
cmp edx [ecx-7] +
jz loc_40C66F  +
movzx esi dl +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_40C618  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_40C637  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_40C656  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_40C671  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_40C671  +
xor esi esi +
test esi esi +
jnz loc_40B767  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_40C29E  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jz loc_40C29E  +
mov eax edx +
jmp loc_40BB06  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_40C6C6  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+1] +
movzx edx byte ptr [esi+1] +
sub eax edx +
jz loc_40C6E5  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+2] +
movzx edx byte ptr [esi+2] +
sub eax edx +
jz loc_40C704  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+3] +
movzx ecx byte ptr [esi+3] +
sub eax ecx +
jz loc_40C7A7  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_40C7A7  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_40C743  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+1] +
movzx edx byte ptr [esi+1] +
sub eax edx +
jz loc_40C75E  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+2] +
movzx ecx byte ptr [esi+2] +
jmp loc_40C70C  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_40C787  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_40C7A7  +
movzx eax byte ptr [ecx+1] +
movzx ecx byte ptr [esi+1] +
jmp loc_40C70C  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax byte ptr [eax] +
movzx ecx byte ptr [ecx] +
jmp loc_40C70C  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_40C850  +
cmp edi eax +
jb loc_40C9F0  +
cmp ecx 80h +
jb loc_40C874  +
cmp dword_426368 0 +
jz loc_40C874  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_40C874  +
jmp loc_4111BC  +
***
test edi 3 +
jnz loc_40C890  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_40C8B0  +
movs   +
jmp ds:off_40C9A0[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_40C8A8  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_40C8B0+4)[eax*4]  +
***
jmp ds:dword_40C9B0[ecx*4]  +
***
jmp ds:off_40C934[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_40C8B0  +
movs   +
jmp ds:off_40C9A0[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_40C8B0  +
movs   +
jmp ds:off_40C9A0[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_40C8B0  +
movs   +
jmp ds:off_40C9A0[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_40C9A0[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_40CA24  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_40CA18  +
std   +
movs   +
cld   +
jmp ds:off_40CB3C[edx*4]  +
neg ecx  +
jmp ds:off_40CAEC[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_40CA3C  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_40CA3C+4)[eax*4]  +
***
jmp ds:off_40CB3C[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_40CA18  +
std   +
movs   +
cld   +
jmp ds:off_40CB3C[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_40CA18  +
std   +
movs   +
cld   +
jmp ds:off_40CB3C[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_40CA18  +
std   +
movs   +
cld   +
jmp ds:off_40CB3C[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_40CB3C[edx*4]  +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_42627C 0 +
jnz loc_40CDDD  +
mov eax [ebp+arg_0] +
mov ecx off_424E20 +
movzx eax word ptr [ecx+eax*2] +
and eax 8 +
pop ebp  +
retn   +
push 0  +
push [ebp+arg_0]  +
call sub_40CD6C  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor esi esi +
mov edi offset unk_425670 +
cmp dword_424474[esi*8] 1 +
jnz loc_40CED4  +
lea eax lpCriticalSection[esi*8] +
mov [eax] edi +
push 0FA0h  +
push dword ptr [eax]  +
add edi 18h +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jz loc_40CEE0  +
inc esi  +
cmp esi 24h +
jl loc_40CEAD  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
retn   +
and lpCriticalSection[esi*8] 0 +
xor eax eax +
jmp loc_40CEDD  +
***
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
call sub_40DCB0  +
mov dword_4257C0 eax +
mov edi edi +
mov edi edi +
retn   +
***
call sub_40DCB0  +
cmp dword ptr [ebp-1Ch] 0 +
pop ecx  +
cmp ebx 8 +
jz loc_40D285  +
cmp ebx 0Bh +
jz loc_40D285  +
cmp ebx 4 +
jnz loc_40D296  +
mov eax [ebp-2Ch] +
mov [edi+60h] eax +
cmp ebx 8 +
jnz loc_40D296  +
mov eax [ebp-30h] +
mov [edi+64h] eax +
xor eax eax +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov edi edi +
mov edi edi +
retn   +
***
call ds:TlsAlloc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_424590 +
call sub_40DCB0  +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:DecodePointer +
push edi  +
push dword_4274B4  +
call esi  +
push dword_4274B0  +
mov ebx eax +
mov [ebp+lpMem] ebx +
call esi  +
mov esi eax +
cmp esi ebx +
jb loc_40DA5B  +
mov edi esi +
sub edi ebx +
lea eax [edi+4] +
cmp eax 4 +
jb loc_40DA5B  +
push ebx  +
call sub_415482  +
mov ebx eax +
lea eax [edi+4] +
pop ecx  +
cmp ebx eax +
jnb loc_40DA3E  +
mov eax 800h +
cmp ebx eax +
jnb loc_40DA01  +
mov eax ebx +
add eax ebx +
cmp eax ebx +
jb loc_40DA16  +
push eax  +
push [ebp+lpMem]  +
call sub_40FF9A  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40DA2C  +
lea eax [ebx+10h] +
cmp eax ebx +
jb loc_40DA5B  +
push eax  +
push [ebp+lpMem]  +
call sub_40FF9A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40DA5B  +
sar edi 2 +
push eax  +
lea esi [eax+edi*4] +
call ds:EncodePointer  +
mov dword_4274B4 eax +
push [ebp+arg_0]  +
mov edi ds:EncodePointer +
call edi  +
mov [esi] eax +
add esi 4 +
push esi  +
call edi  +
mov dword_4274B0 eax +
mov eax [ebp+arg_0] +
jmp loc_40DA5D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 18h  +
pop eax  +
pop esi  +
retn   +
***
call sub_40DCB0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
xor edi edi +
push off_424598[edi]  +
call ds:EncodePointer  +
mov off_424598[edi] eax +
add edi 4 +
cmp edi 28h +
jb loc_40DB38  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_40DB76  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_40DB72  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jz loc_40DBDD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_40DBD5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_40DBDF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_40DBC5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset unk_4227C8  +
push offset loc_40DD10  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_424070 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_40DB60  +
add esp 4 +
test eax eax +
jz loc_40DC91  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_40DBA0  +
add esp 8 +
test eax eax +
jz loc_40DC91  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov ecx [eax] +
xor edx edx +
cmp dword ptr [ecx] 0C0000005h +
setz dl  +
mov eax edx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov eax [ebp-8] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_40DD80  +
cmp byte ptr [ebp-1] 0 +
jz loc_40DDDC  +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_40DDCC  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_4098E8  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call sub_4098E8  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ebp-0Ch] 0 +
jmp loc_40DDB8  +
***
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
test byte ptr [ecx+0Ch] 40h +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 280h +
mov eax dword_424070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi [ebp+arg_C] +
push [ebp+arg_8]  +
lea ecx [ebp+var_25C] +
mov [ebp+var_230] esi +
mov [ebp+var_21C] edi +
mov [ebp+var_24C] eax +
mov [ebp+var_210] eax +
mov [ebp+var_238] eax +
mov [ebp+var_218] eax +
mov [ebp+var_234] eax +
mov [ebp+var_244] eax +
mov [ebp+var_23C] eax +
call sub_40CBE0  +
call sub_40AC71  +
mov [ebp+var_26C] eax +
test esi esi +
jnz loc_40E2B3  +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
cmp [ebp+var_250] 0 +
jz loc_40E2AB  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_40EDEA  +
test byte ptr [esi+0Ch] 40h +
jnz loc_40E317  +
push esi  +
call sub_4120E8  +
pop ecx  +
mov edx offset unk_4245C8 +
cmp eax 0FFFFFFFFh +
jz loc_40E2E5  +
cmp eax 0FFFFFFFEh +
jz loc_40E2E5  +
mov ecx eax +
and ecx 1Fh +
mov esi eax +
sar esi 5 +
shl ecx 6 +
add ecx dword_426380[esi*4] +
jmp loc_40E2E7  +
mov ecx edx +
test byte ptr [ecx+24h] 7Fh +
jnz loc_40E288  +
cmp eax 0FFFFFFFFh +
jz loc_40E30B  +
cmp eax 0FFFFFFFEh +
jz loc_40E30B  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
shl eax 6 +
add eax dword_426380[ecx*4] +
jmp loc_40E30D  +
mov eax edx +
test byte ptr [eax+24h] 80h +
jnz loc_40E288  +
xor ecx ecx +
cmp ebx ecx +
jz loc_40E288  +
mov dl [ebx] +
mov [ebp+var_224] ecx +
mov [ebp+var_228] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_211] dl +
test dl dl +
jz loc_40EDD1  +
inc ebx  +
xor esi esi +
mov [ebp+var_240] ebx +
cmp [ebp+var_224] esi +
jl loc_40EDD1  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_40E36E  +
movsx eax dl +
movsx eax byte ptr ds:(aRuntimeErrorPr+2Ch)[eax] +
and eax 0Fh +
jmp loc_40E370  +
xor eax eax +
movsx eax ds:byte_421248[ecx+eax*8] +
push 7  +
sar eax 4 +
pop ecx  +
mov [ebp+var_274] eax +
cmp eax ecx +
ja loc_40EDAC  +
jmp ds:off_40EDFA[eax*4]  +
or [ebp+var_218] 0FFFFFFFFh +
mov [ebp+var_278] esi +
mov [ebp+var_244] esi +
mov [ebp+var_238] esi +
mov [ebp+var_234] esi +
mov [ebp+var_210] esi +
mov [ebp+var_23C] esi +
jmp loc_40EDAC  +
movsx eax dl +
sub eax 20h +
jz loc_40E415  +
sub eax 3 +
jz loc_40E406  +
sub eax 8 +
jz loc_40E3FA  +
dec eax  +
dec eax  +
jz loc_40E3EE  +
sub eax 3 +
jnz loc_40EDAC  +
or [ebp+var_210] 8 +
jmp loc_40EDAC  +
or [ebp+var_210] 4 +
jmp loc_40EDAC  +
or [ebp+var_210] 1 +
jmp loc_40EDAC  +
or [ebp+var_210] 80h +
jmp loc_40EDAC  +
or [ebp+var_210] 2 +
jmp loc_40EDAC  +
cmp dl 2Ah +
jnz loc_40E452  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_238] edi +
cmp edi esi +
jge loc_40EDAC  +
or [ebp+var_210] 4 +
neg [ebp+var_238]  +
jmp loc_40EDAC  +
mov eax [ebp+var_238] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_238] eax +
jmp loc_40EDAC  +
mov [ebp+var_218] esi +
jmp loc_40EDAC  +
cmp dl 2Ah +
jnz loc_40E4A3  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_218] edi +
cmp edi esi +
jge loc_40EDAC  +
or [ebp+var_218] 0FFFFFFFFh +
jmp loc_40EDAC  +
mov eax [ebp+var_218] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_218] eax +
jmp loc_40EDAC  +
cmp dl 49h +
jz loc_40E518  +
cmp dl 68h +
jz loc_40E50C  +
cmp dl 6Ch +
jz loc_40E4E5  +
cmp dl 77h +
jnz loc_40EDAC  +
or [ebp+var_210] 800h +
jmp loc_40EDAC  +
cmp byte ptr [ebx] 6Ch +
jnz loc_40E500  +
inc ebx  +
or [ebp+var_210] 1000h +
mov [ebp+var_240] ebx +
jmp loc_40EDAC  +
or [ebp+var_210] 10h +
jmp loc_40EDAC  +
or [ebp+var_210] 20h +
jmp loc_40EDAC  +
mov al [ebx] +
cmp al 36h +
jnz loc_40E53C  +
cmp byte ptr [ebx+1] 34h +
jnz loc_40E53C  +
add ebx 2 +
or [ebp+var_210] 8000h +
mov [ebp+var_240] ebx +
jmp loc_40EDAC  +
cmp al 33h +
jnz loc_40E55E  +
cmp byte ptr [ebx+1] 32h +
jnz loc_40E55E  +
add ebx 2 +
and [ebp+var_210] 0FFFF7FFFh +
mov [ebp+var_240] ebx +
jmp loc_40EDAC  +
cmp al 64h +
jz loc_40EDAC  +
cmp al 69h +
jz loc_40EDAC  +
cmp al 6Fh +
jz loc_40EDAC  +
cmp al 75h +
jz loc_40EDAC  +
cmp al 78h +
jz loc_40EDAC  +
cmp al 58h +
jz loc_40EDAC  +
mov [ebp+var_274] esi +
and [ebp+var_23C] esi +
lea eax [ebp+var_25C] +
push eax  +
movzx eax dl +
push eax  +
call sub_4159D6  +
pop ecx  +
test eax eax +
mov al [ebp+var_211] +
pop ecx  +
jz loc_40E5D8  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
call sub_40E17D  +
mov al [ebx] +
inc ebx  +
mov [ebp+var_240] ebx +
test al al +
jz loc_40E288  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
call sub_40E17D  +
jmp loc_40EDAC  +
movsx eax dl +
cmp eax 64h +
jg loc_40E7B0  +
jz loc_40E858  +
cmp eax 53h +
jg loc_40E6C3  +
jz loc_40E657  +
sub eax 41h +
jz loc_40E620  +
dec eax  +
dec eax  +
jz loc_40E638  +
dec eax  +
dec eax  +
jz loc_40E620  +
dec eax  +
dec eax  +
jnz loc_40EBCB  +
add dl 20h +
mov [ebp+var_278] 1 +
mov [ebp+var_211] dl +
jmp loc_40E88E  +
test [ebp+var_210] 830h +
jnz loc_40E6E6  +
or [ebp+var_210] 800h +
jmp loc_40E6E6  +
test [ebp+var_210] 830h +
jnz loc_40E66D  +
or [ebp+var_210] 800h +
mov ecx [ebp+var_218] +
cmp ecx 0FFFFFFFFh +
jnz loc_40E67D  +
mov ecx 7FFFFFFFh +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_220] edi +
jz loc_40EB9D  +
test edi edi +
jnz loc_40E6AE  +
mov eax off_4245C4 +
mov [ebp+var_220] eax +
mov eax [ebp+var_220] +
mov [ebp+var_23C] 1 +
jmp loc_40EB8F  +
sub eax 58h +
jz loc_40E9EE  +
dec eax  +
dec eax  +
jz loc_40E74F  +
sub eax ecx +
jz loc_40E88E  +
dec eax  +
dec eax  +
jnz loc_40EBCB  +
mov edi [ebp+var_21C] +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_21C] edi +
jz loc_40E72B  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+UsedDefaultChar] +
push eax  +
lea eax [ebp+var_228] +
push eax  +
call sub_4159B9  +
add esp 10h +
test eax eax +
jz loc_40E73E  +
mov [ebp+var_244] 1 +
jmp loc_40E73E  +
mov al [edi-4] +
mov byte ptr [ebp+UsedDefaultChar] al +
mov [ebp+var_228] 1 +
lea eax [ebp+UsedDefaultChar] +
mov [ebp+var_220] eax +
jmp loc_40EBCB  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test eax eax +
jz loc_40E799  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_40E799  +
test [ebp+var_210] 800h +
movsx eax word ptr [eax] +
mov [ebp+var_220] ecx +
jz loc_40E78E  +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_23C] 1 +
jmp loc_40EBC5  +
and [ebp+var_23C] esi +
jmp loc_40EBC5  +
mov eax off_4245C0 +
mov [ebp+var_220] eax +
push eax  +
call sub_4091D0  +
pop ecx  +
jmp loc_40EBC5  +
cmp eax 70h +
jg loc_40E9F6  +
jz loc_40E9E4  +
cmp eax 65h +
jl loc_40EBCB  +
cmp eax 67h +
jle loc_40E888  +
cmp eax 69h +
jz loc_40E852  +
cmp eax 6Eh +
jz loc_40E809  +
cmp eax 6Fh +
jnz loc_40EBCB  +
test byte ptr [ebp+var_210] 80h +
mov edi [ebp+var_21C] +
mov [ebp+var_228] 8 +
jz loc_40E869  +
or [ebp+var_210] 200h +
jmp loc_40E869  +
add [ebp+var_21C] 4 +
mov eax [ebp+var_21C] +
mov esi [eax-4] +
call sub_408C96  +
test eax eax +
jz loc_40E288  +
test byte ptr [ebp+var_210] 20h +
jz loc_40E83B  +
mov ax word ptr [ebp+var_224] +
mov [esi] ax +
jmp loc_40E843  +
mov eax [ebp+var_224] +
mov [esi] eax +
mov [ebp+var_244] 1 +
jmp loc_40ED90  +
mov edi [ebp+var_21C] +
or [ebp+var_210] 40h +
mov [ebp+var_228] 0Ah +
mov ecx [ebp+var_210] +
test ecx 8000h +
jz loc_40EA5B  +
mov eax [edi] +
mov edx [edi+4] +
add edi 8 +
jmp loc_40EA94  +
mov edi [ebp+var_21C] +
or [ebp+var_210] 40h +
lea ebx [ebp+UsedDefaultChar] +
mov eax 200h +
mov [ebp+var_220] ebx +
mov [ebp+var_260] eax +
cmp [ebp+var_218] esi +
jge loc_40E8C0  +
mov [ebp+var_218] 6 +
jmp loc_40E92A  +
jnz loc_40E8D3  +
cmp dl 67h +
jnz loc_40E92A  +
mov [ebp+var_218] 1 +
jmp loc_40E92A  +
cmp [ebp+var_218] eax +
jle loc_40E8E1  +
mov [ebp+var_218] eax +
cmp [ebp+var_218] 0A3h +
jle loc_40E92A  +
mov esi [ebp+var_218] +
add esi 15Dh +
push esi  +
call sub_40FF09  +
mov dl [ebp+var_211] +
pop ecx  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_40E920  +
mov [ebp+var_220] eax +
mov [ebp+var_260] esi +
mov ebx eax +
jmp loc_40E92A  +
mov [ebp+var_218] 0A3h +
mov eax [edi] +
mov esi ds:DecodePointer +
add edi 8 +
mov [ebp+var_280] eax +
mov eax [edi-4] +
mov [ebp+var_27C] eax +
lea eax [ebp+var_25C] +
push eax  +
push [ebp+var_278]  +
movsx eax dl +
push [ebp+var_218]  +
mov [ebp+var_21C] edi +
push eax  +
push [ebp+var_260]  +
lea eax [ebp+var_280] +
push ebx  +
push eax  +
push off_4245B0  +
call esi  +
call eax  +
mov edi [ebp+var_210] +
add esp 1Ch +
and edi 80h +
jz loc_40E9A7  +
cmp [ebp+var_218] 0 +
jnz loc_40E9A7  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_4245BC  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_40E9C8  +
test edi edi +
jnz loc_40E9C8  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_4245B8  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebx] 2Dh +
jnz loc_40E9DE  +
or [ebp+var_210] 100h +
inc ebx  +
mov [ebp+var_220] ebx +
push ebx  +
jmp loc_40E7A5  +
mov [ebp+var_218] 8 +
mov [ebp+var_24C] ecx +
jmp loc_40EA20  +
sub eax 73h +
jz loc_40E66D  +
dec eax  +
dec eax  +
jz loc_40E85F  +
sub eax 3 +
jnz loc_40EBCB  +
mov edi [ebp+var_21C] +
mov [ebp+var_24C] 27h +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_228] 10h +
jz loc_40E869  +
mov al byte ptr [ebp+var_24C] +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_234] 2 +
jmp loc_40E869  +
test ecx 1000h +
jnz loc_40E87B  +
add edi 4 +
test cl 20h +
jz loc_40EA87  +
mov [ebp+var_21C] edi +
test cl 40h +
jz loc_40EA80  +
movsx eax word ptr [edi-4] +
jmp loc_40EA84  +
movzx eax word ptr [edi-4] +
cdq   +
jmp loc_40EA9A  +
mov eax [edi-4] +
test cl 40h +
jz loc_40EA92  +
cdq   +
jmp loc_40EA94  +
xor edx edx +
mov [ebp+var_21C] edi +
test cl 40h +
jz loc_40EAB9  +
test edx edx +
jg loc_40EAB9  +
jl loc_40EAA9  +
test eax eax +
jnb loc_40EAB9  +
neg eax  +
adc edx esi +
neg edx  +
or [ebp+var_210] 100h +
test [ebp+var_210] 9000h +
mov edi edx +
mov ebx eax +
jnz loc_40EACB  +
xor edi edi +
cmp [ebp+var_218] esi +
jge loc_40EADF  +
mov [ebp+var_218] 1 +
jmp loc_40EAF9  +
and [ebp+var_210] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp+var_218] eax +
jle loc_40EAF9  +
mov [ebp+var_218] eax +
mov eax ebx +
or eax edi +
jnz loc_40EB05  +
and [ebp+var_234] esi +
lea esi [ebp+var_D] +
mov eax [ebp+var_218] +
dec [ebp+var_218]  +
test eax eax +
jg loc_40EB1E  +
mov eax ebx +
or eax edi +
jz loc_40EB4B  +
mov eax [ebp+var_228] +
cdq   +
push edx  +
push eax  +
push edi  +
push ebx  +
call sub_415A30  +
add ecx 30h +
mov [ebp+var_260] ebx +
mov ebx eax +
mov edi edx +
cmp ecx 39h +
jle loc_40EB46  +
add ecx [ebp+var_24C] +
mov [esi] cl +
dec esi  +
jmp loc_40EB08  +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
test [ebp+var_210] 200h +
mov [ebp+var_228] eax +
mov [ebp+var_220] esi +
jz loc_40EBCB  +
test eax eax +
jz loc_40EB74  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_40EBCB  +
dec [ebp+var_220]  +
mov ecx [ebp+var_220] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_40EBC5  +
dec ecx  +
cmp [eax] si +
jz loc_40EB93  +
add eax 2 +
test ecx ecx +
jnz loc_40EB86  +
sub eax [ebp+var_220] +
sar eax 1 +
jmp loc_40EBC5  +
test edi edi +
jnz loc_40EBAC  +
mov eax off_4245C0 +
mov [ebp+var_220] eax +
mov eax [ebp+var_220] +
jmp loc_40EBBB  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_40EBBF  +
inc eax  +
test ecx ecx +
jnz loc_40EBB4  +
sub eax [ebp+var_220] +
mov [ebp+var_228] eax +
cmp [ebp+var_244] 0 +
jnz loc_40ED90  +
mov ecx [ebp+var_210] +
test cl 40h +
jz loc_40EC18  +
test ecx 100h +
jz loc_40EBF4  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_40EC0E  +
test cl 1 +
jz loc_40EC02  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_40EC0E  +
test cl 2 +
jz loc_40EC18  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_234] 1 +
mov eax [ebp+var_238] +
sub eax [ebp+var_228] +
sub eax [ebp+var_234] +
mov [ebp+var_260] eax +
test cl 0Ch +
jnz loc_40EC5A  +
mov edi eax +
jmp loc_40EC56  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
mov al 20h +
dec edi  +
call sub_40E17D  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_40EC5A  +
test edi edi +
jg loc_40EC39  +
push [ebp+var_234]  +
mov edi [ebp+var_26C] +
mov ebx [ebp+var_230] +
lea eax [ebp+var_22C] +
push eax  +
lea eax [ebp+var_224] +
call sub_40E1B0  +
test byte ptr [ebp+var_210] 8 +
pop ecx  +
pop ecx  +
jz loc_40ECB7  +
test byte ptr [ebp+var_210] 4 +
jnz loc_40ECB7  +
mov edi [ebp+var_260] +
jmp loc_40ECB3  +
lea esi [ebp+var_224] +
mov ecx ebx +
mov al 30h +
dec edi  +
call sub_40E17D  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_40ECB7  +
test edi edi +
jg loc_40EC9A  +
cmp [ebp+var_23C] 0 +
mov eax [ebp+var_228] +
jz loc_40ED3B  +
test eax eax +
jle loc_40ED3B  +
mov esi [ebp+var_220] +
mov [ebp+var_268] eax +
movzx eax word ptr [esi] +
dec [ebp+var_268]  +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_270] +
push eax  +
add esi 2 +
call sub_4159B9  +
add esp 10h +
test eax eax +
jnz loc_40ED32  +
cmp [ebp+var_270] eax +
jz loc_40ED32  +
push [ebp+var_270]  +
mov edi [ebp+var_26C] +
mov ebx [ebp+var_230] +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_224] +
call sub_40E1B0  +
cmp [ebp+var_268] 0 +
pop ecx  +
pop ecx  +
jnz loc_40ECD6  +
jmp loc_40ED55  +
or [ebp+var_224] 0FFFFFFFFh +
jmp loc_40ED55  +
mov edi [ebp+var_26C] +
push eax  +
push [ebp+var_220]  +
lea eax [ebp+var_224] +
call sub_40E1B0  +
pop ecx  +
pop ecx  +
cmp [ebp+var_224] 0 +
jl loc_40ED90  +
test byte ptr [ebp+var_210] 4 +
jz loc_40ED90  +
mov edi [ebp+var_260] +
jmp loc_40ED8C  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
mov al 20h +
dec edi  +
call sub_40E17D  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_40ED90  +
test edi edi +
jg loc_40ED6F  +
cmp [ebp+lpMem] 0 +
jz loc_40EDAC  +
push [ebp+lpMem]  +
call sub_408F41  +
and [ebp+lpMem] 0 +
pop ecx  +
mov ebx [ebp+var_240] +
mov al [ebx] +
mov [ebp+var_211] al +
test al al +
jz loc_40EDD1  +
mov ecx [ebp+var_274] +
mov edi [ebp+var_21C] +
mov dl al +
jmp loc_40E343  +
cmp [ebp+var_250] 0 +
jz loc_40EDE4  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_224] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4098E8  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov edi edi +
cmp dword_4274B8 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
dec dword ptr [edx+4]  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 200h +
mov eax dword_424070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_1E8] ecx +
lea ecx [ebp+var_184] +
mov [ebp+var_1A4] eax +
mov [ebp+lpMem] ecx +
mov [ebp+var_1DC] 15Eh +
mov [ebp+var_1D0] edi +
mov dword ptr [ebp+WideCharStr] edi +
mov [ebp+var_194] edi +
cmp esi edi +
jnz loc_41022A  +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
or eax 0FFFFFFFFh +
jmp loc_4111AE  +
cmp eax edi +
jz loc_410212  +
test byte ptr [eax+0Ch] 40h +
push ebx  +
jnz loc_4102A7  +
push eax  +
call sub_4120E8  +
pop ecx  +
mov edx offset unk_4245C8 +
cmp eax 0FFFFFFFFh +
jz loc_410261  +
cmp eax 0FFFFFFFEh +
jz loc_410261  +
mov ecx eax +
and ecx 1Fh +
mov ebx eax +
sar ebx 5 +
shl ecx 6 +
add ecx dword_426380[ebx*4] +
jmp loc_410263  +
mov ecx edx +
test byte ptr [ecx+24h] 7Fh +
jnz loc_41028F  +
cmp eax 0FFFFFFFFh +
jz loc_410287  +
cmp eax 0FFFFFFFEh +
jz loc_410287  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
shl eax 6 +
add eax dword_426380[ecx*4] +
jmp loc_410289  +
mov eax edx +
test byte ptr [eax+24h] 80h +
jz loc_4102A7  +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
or eax 0FFFFFFFFh +
jmp loc_4111AD  +
push [ebp+arg_8]  +
lea ecx [ebp+var_1FC] +
call sub_40CBE0  +
mov al [esi] +
mov [ebp+var_1A5] 0 +
mov [ebp+var_18C] edi +
mov [ebp+var_1CC] edi +
test al al +
jz loc_411194  +
mov edi esi +
movzx eax al +
push eax  +
call sub_40CDBD  +
pop ecx  +
test eax eax +
jz loc_410321  +
push [ebp+var_1A4]  +
dec [ebp+var_18C]  +
lea esi [ebp+var_18C] +
call sub_41018E  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_41030D  +
push [ebp+var_1A4]  +
push eax  +
call sub_41641D  +
pop ecx  +
pop ecx  +
inc edi  +
movzx eax byte ptr [edi] +
push eax  +
call sub_40CDBD  +
pop ecx  +
test eax eax +
jnz loc_41030D  +
jmp loc_41110C  +
mov al [edi] +
cmp al 25h +
jnz loc_411096  +
cmp [edi+1] al +
jz loc_41108C  +
xor eax eax +
mov [ebp+var_1E4] eax +
mov [ebp+var_1D1] al +
mov [ebp+var_1AC] eax +
mov [ebp+var_1B8] eax +
mov [ebp+var_19C] eax +
mov [ebp+var_1A8] al +
mov [ebp+var_1A7] al +
mov [ebp+var_19D] al +
mov [ebp+var_18D] al +
mov [ebp+var_1A6] al +
mov [ebp+var_195] al +
mov [ebp+var_185] 1 +
mov [ebp+var_1D8] eax +
xor esi esi +
inc edi  +
movzx ebx byte ptr [edi] +
movzx eax bl +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jz loc_4103B7  +
mov eax [ebp+var_19C] +
inc [ebp+var_1B8]  +
imul eax eax +
lea eax [eax+ebx-30h] +
mov [ebp+var_19C] eax +
jmp loc_41047C  +
cmp ebx 4Eh +
jg loc_410443  +
jz loc_41047C  +
cmp ebx 2Ah +
jz loc_41043B  +
cmp ebx 46h +
jz loc_41047C  +
cmp ebx 49h +
jz loc_4103E9  +
cmp ebx 4Ch +
jnz loc_410452  +
inc [ebp+var_185]  +
jmp loc_41047C  +
mov cl [edi+1] +
cmp cl 36h +
jnz loc_41040F  +
lea eax [edi+2] +
cmp byte ptr [eax] 34h +
jnz loc_41040F  +
inc [ebp+var_1D8]  +
mov edi eax +
mov [ebp+var_1C8] esi +
mov [ebp+var_1C4] esi +
jmp loc_41047C  +
cmp cl 33h +
jnz loc_410420  +
lea eax [edi+2] +
cmp byte ptr [eax] 32h +
jnz loc_410420  +
mov edi eax +
jmp loc_41047C  +
cmp cl 64h +
jz loc_41047C  +
cmp cl 69h +
jz loc_41047C  +
cmp cl 6Fh +
jz loc_41047C  +
cmp cl 78h +
jz loc_41047C  +
cmp cl 58h +
jnz loc_410452  +
jmp loc_41047C  +
inc [ebp+var_19D]  +
jmp loc_41047C  +
cmp ebx 68h +
jz loc_410470  +
cmp ebx 6Ch +
jz loc_41045A  +
cmp ebx 77h +
jz loc_410468  +
inc [ebp+var_18D]  +
jmp loc_41047C  +
lea eax [edi+1] +
cmp byte ptr [eax] 6Ch +
jz loc_4103F9  +
inc [ebp+var_185]  +
inc [ebp+var_195]  +
jmp loc_41047C  +
dec [ebp+var_185]  +
dec [ebp+var_195]  +
cmp [ebp+var_18D] 0 +
jz loc_410387  +
cmp [ebp+var_19D] 0 +
mov [ebp+var_1BC] edi +
jnz loc_4104B1  +
mov eax [ebp+var_1E8] +
mov esi [eax] +
mov [ebp+var_200] eax +
add eax 4 +
mov [ebp+var_1E8] eax +
jmp loc_4104B3  +
xor esi esi +
cmp [ebp+var_195] 0 +
mov [ebp+var_1C0] esi +
mov [ebp+var_18D] 0 +
jnz loc_4104E1  +
mov al [edi] +
cmp al 53h +
jz loc_4104DA  +
mov [ebp+var_195] 0FFh +
cmp al 43h +
jnz loc_4104E1  +
mov [ebp+var_195] 1 +
movzx ebx byte ptr [edi] +
or ebx 20h +
mov [ebp+var_1B4] ebx +
cmp ebx 6Eh +
jz loc_41053C  +
cmp ebx 63h +
jz loc_410510  +
cmp ebx 7Bh +
jz loc_410510  +
push [ebp+var_1A4]  +
lea esi [ebp+var_18C] +
call sub_41018E  +
pop ecx  +
jmp loc_410521  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
cmp eax 0FFFFFFFFh +
jz loc_41114C  +
mov esi [ebp+var_1C0] +
mov edi [ebp+var_1BC] +
mov ecx [ebp+var_1B8] +
test ecx ecx +
jz loc_410553  +
cmp [ebp+var_19C] 0 +
jz loc_411118  +
cmp ebx 6Fh +
jg loc_410AE0  +
jz loc_410DC1  +
cmp ebx 63h +
jz loc_410980  +
push 64h  +
pop eax  +
cmp ebx eax +
jz loc_410DC1  +
jle loc_410B0A  +
cmp ebx 67h +
jle loc_4105C8  +
cmp ebx 69h +
jz loc_4105A7  +
cmp ebx 6Eh +
jnz loc_410B0A  +
cmp [ebp+var_19D] 0 +
mov edi [ebp+var_18C] +
jz loc_41104B  +
jmp loc_411077  +
mov [ebp+var_1B4] eax +
mov ebx [ebp+var_194] +
cmp ebx 2Dh +
jnz loc_410C42  +
mov [ebp+var_1A7] 1 +
jmp loc_410C47  +
xor ebx ebx +
cmp [ebp+var_194] 2Dh +
jnz loc_4105DF  +
mov eax [ebp+lpMem] +
mov byte ptr [eax] 2Dh +
inc ebx  +
jmp loc_4105E8  +
cmp [ebp+var_194] 2Bh +
jnz loc_410605  +
dec [ebp+var_19C]  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
cmp [ebp+var_1B8] 0 +
jnz loc_410615  +
or [ebp+var_19C] 0FFFFFFFFh +
movzx eax byte ptr [ebp+var_194] +
jmp loc_410689  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_410694  +
mov al byte ptr [ebp+var_194] +
mov ecx [ebp+lpMem] +
inc [ebp+var_1AC]  +
mov [ebx+ecx] al +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
lea edi [ebp+lpMem] +
lea esi [ebp+var_1DC] +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
movzx eax al +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jnz loc_41061E  +
mov eax [ebp+var_1FC] +
mov eax [eax+0BCh] +
mov eax [eax] +
mov al [eax] +
mov [ebp+var_1A8] al +
cmp al byte ptr [ebp+var_194] +
jnz loc_41079B  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_41079B  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ecx [ebp+lpMem] +
mov [ebp+var_194] eax +
mov al [ebp+var_1A8] +
mov [ebx+ecx] al +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
lea edi [ebp+lpMem] +
lea esi [ebp+var_1DC] +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
movzx eax byte ptr [ebp+var_194] +
jmp loc_410790  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_41079B  +
mov eax [ebp+lpMem] +
mov cl byte ptr [ebp+var_194] +
inc [ebp+var_1AC]  +
mov [ebx+eax] cl +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
lea edi [ebp+lpMem] +
lea esi [ebp+var_1DC] +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
movzx eax al +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jnz loc_410725  +
cmp [ebp+var_1AC] 0 +
jz loc_410907  +
cmp [ebp+var_194] 65h +
jz loc_4107BE  +
cmp [ebp+var_194] 45h +
jnz loc_410907  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_410907  +
mov eax [ebp+lpMem] +
mov byte ptr [ebx+eax] 65h +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
lea edi [ebp+lpMem] +
lea esi [ebp+var_1DC] +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
cmp eax 2Dh +
jnz loc_410850  +
mov eax [ebp+lpMem] +
mov byte ptr [ebx+eax] 2Dh +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
jmp loc_410859  +
cmp [ebp+var_194] 2Bh +
jnz loc_410888  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jnz loc_410871  +
and [ebp+var_19C] eax +
jmp loc_410888  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
movzx eax byte ptr [ebp+var_194] +
jmp loc_4108FC  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_410907  +
mov eax [ebp+lpMem] +
mov cl byte ptr [ebp+var_194] +
inc [ebp+var_1AC]  +
mov [ebx+eax] cl +
lea eax [ebp+var_1D0] +
push eax  +
lea eax [ebp+var_184] +
push eax  +
inc ebx  +
push ebx  +
lea edi [ebp+lpMem] +
lea esi [ebp+var_1DC] +
call sub_410101  +
add esp 0Ch +
test eax eax +
jz loc_41114C  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
movzx eax al +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jnz loc_410891  +
dec [ebp+var_18C]  +
cmp [ebp+var_194] 0FFFFFFFFh +
jz loc_410929  +
push [ebp+var_1A4]  +
push [ebp+var_194]  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1AC] 0 +
jz loc_41114C  +
cmp [ebp+var_19D] 0 +
jnz loc_411077  +
mov eax [ebp+lpMem] +
inc [ebp+var_1CC]  +
lea ecx [ebp+var_1FC] +
push ecx  +
push eax  +
push [ebp+var_1C0]  +
mov byte ptr [ebx+eax] 0 +
movsx eax [ebp+var_185] +
dec eax  +
push eax  +
push off_4245B4  +
call ds:DecodePointer  +
call eax  +
add esp 10h +
jmp loc_411077  +
test ecx ecx +
jnz loc_410994  +
inc [ebp+var_19C]  +
mov [ebp+var_1B8] 1 +
cmp [ebp+var_195] 0 +
jle loc_4109A4  +
mov [ebp+var_1A6] 1 +
dec [ebp+var_18C]  +
cmp [ebp+var_194] 0FFFFFFFFh +
mov edi esi +
jz loc_4109C8  +
push [ebp+var_1A4]  +
push [ebp+var_194]  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1B8] 0 +
jz loc_4109E5  +
mov eax [ebp+var_19C] +
dec [ebp+var_19C]  +
test eax eax +
jz loc_410D6F  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov [ebp+var_194] eax +
cmp eax 0FFFFFFFFh +
jz loc_410D56  +
cmp ebx 63h +
jz loc_410A56  +
cmp ebx 73h +
jnz loc_410A22  +
cmp eax 9 +
jl loc_410A1D  +
cmp eax 0Dh +
jle loc_410D56  +
cmp eax 20h +
jnz loc_410A56  +
cmp ebx 7Bh +
jnz loc_410D56  +
movsx ebx [ebp+var_1A8] +
xor edx edx +
mov ecx eax +
and ecx 7 +
inc edx  +
shl edx cl +
mov ecx eax +
sar ecx 3 +
movsx ecx byte ptr [ebp+ecx+var_24] +
xor ecx ebx +
mov ebx [ebp+var_1B4] +
test edx ecx +
jz loc_410D56  +
cmp [ebp+var_19D] 0 +
jnz loc_410D50  +
cmp [ebp+var_1A6] 0 +
jz loc_410D42  +
mov byte ptr [ebp+var_1E0] al +
movzx eax al +
push eax  +
call sub_415A0E  +
pop ecx  +
test eax eax +
jz loc_410A9B  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov byte ptr [ebp+var_1E0+1] al +
lea eax [ebp+var_1FC] +
push eax  +
mov eax [ebp+var_1FC] +
mov dword ptr [ebp+WideCharStr] 3Fh +
push dword ptr [eax+0ACh]  +
lea eax [ebp+var_1E0] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_416500  +
mov ax [ebp+WideCharStr] +
add esp 10h +
mov [esi] ax +
add esi 2 +
jmp loc_410D45  +
mov eax ebx +
sub eax 70h +
jz loc_410DBA  +
sub eax 3 +
jz loc_410994  +
dec eax  +
dec eax  +
jz loc_410DC1  +
sub eax 3 +
jz loc_4105AD  +
sub eax 3 +
jz loc_410B3D  +
movzx eax byte ptr [edi] +
cmp eax [ebp+var_194] +
jnz loc_411118  +
dec [ebp+var_1A5]  +
cmp [ebp+var_19D] 0 +
jnz loc_411077  +
mov eax [ebp+var_200] +
mov [ebp+var_1E8] eax +
jmp loc_411077  +
cmp [ebp+var_195] 0 +
jle loc_410B4D  +
mov [ebp+var_1A6] 1 +
cmp byte ptr [edi+1] 5Eh +
lea esi [edi+1] +
jnz loc_410B60  +
lea esi [edi+2] +
mov [ebp+var_1A8] 0FFh +
push 20h  +
lea eax [ebp+var_24] +
push 0  +
push eax  +
call sub_409770  +
add esp 0Ch +
cmp byte ptr [esi] 5Dh +
jnz loc_410B81  +
mov dl 5Dh +
inc esi  +
mov [ebp+var_19] 20h +
jmp loc_410C1F  +
mov dl [ebp+var_1D1] +
jmp loc_410C1F  +
inc esi  +
cmp al 2Dh +
jnz loc_410C02  +
test dl dl +
jz loc_410C02  +
mov cl [esi] +
cmp cl 5Dh +
jz loc_410C02  +
inc esi  +
cmp dl cl +
jnb loc_410BA9  +
mov [ebp+var_185] cl +
jmp loc_410BB1  +
mov [ebp+var_185] dl +
mov dl cl +
cmp dl [ebp+var_185] +
jnb loc_410BE5  +
mov al [ebp+var_185] +
sub al dl +
movzx edi dl +
movzx edx al +
mov ecx edi +
and ecx 7 +
mov eax edi +
mov bl 1 +
shl bl cl +
shr eax 3 +
lea eax [ebp+eax+var_24] +
or [eax] bl +
inc edi  +
dec edx  +
jnz loc_410BC7  +
mov ebx [ebp+var_1B4] +
movzx ecx [ebp+var_185] +
mov eax ecx +
and ecx 7 +
mov dl 1 +
shl dl cl +
shr eax 3 +
lea eax [ebp+eax+var_24] +
or [eax] dl +
xor dl dl +
jmp loc_410C1F  +
movzx ecx al +
mov dl al +
mov eax ecx +
and ecx 7 +
mov bl 1 +
shl bl cl +
shr eax 3 +
lea eax [ebp+eax+var_24] +
or [eax] bl +
mov ebx [ebp+var_1B4] +
mov al [esi] +
cmp al 5Dh +
jnz loc_410B8C  +
test al al +
jz loc_41114C  +
mov [ebp+var_1BC] esi +
mov esi [ebp+var_1C0] +
jmp loc_4109A4  +
cmp ebx 2Bh +
jnz loc_410C75  +
dec [ebp+var_19C]  +
jnz loc_410C5C  +
test ecx ecx +
jz loc_410C5C  +
mov [ebp+var_18D] 1 +
jmp loc_410C75  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
mov [ebp+var_194] ebx +
cmp ebx 30h +
jnz loc_410E08  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
mov [ebp+var_194] ebx +
cmp bl 78h +
jz loc_410CFB  +
cmp bl 58h +
jz loc_410CFB  +
cmp [ebp+var_1B4] 78h +
mov [ebp+var_1AC] 1 +
jz loc_410CDA  +
cmp [ebp+var_1B8] 0 +
jz loc_410CCB  +
dec [ebp+var_19C]  +
jnz loc_410CCB  +
inc [ebp+var_18D]  +
mov [ebp+var_1B4] 6Fh +
jmp loc_410E08  +
dec [ebp+var_18C]  +
cmp ebx 0FFFFFFFFh +
jz loc_410CF3  +
push [ebp+var_1A4]  +
push ebx  +
call sub_41641D  +
pop ecx  +
pop ecx  +
push 30h  +
pop ebx  +
jmp loc_410E02  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
cmp [ebp+var_1B8] 0 +
mov ebx eax +
mov [ebp+var_194] ebx +
jz loc_410D33  +
sub [ebp+var_19C] 2 +
cmp [ebp+var_19C] 1 +
jge loc_410D33  +
inc [ebp+var_18D]  +
mov [ebp+var_1B4] 78h +
jmp loc_410E08  +
mov [esi] al +
inc esi  +
mov [ebp+var_1C0] esi +
jmp loc_4109C8  +
inc edi  +
jmp loc_4109C8  +
dec [ebp+var_18C]  +
cmp eax 0FFFFFFFFh +
jz loc_410D6F  +
push [ebp+var_1A4]  +
push eax  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp edi esi +
jz loc_41114C  +
cmp [ebp+var_19D] 0 +
jnz loc_411077  +
inc [ebp+var_1CC]  +
cmp ebx 63h +
jz loc_411077  +
cmp [ebp+var_1A6] 0 +
jz loc_410DAC  +
mov ecx [ebp+var_1C0] +
xor eax eax +
mov [ecx] ax +
jmp loc_411077  +
mov eax [ebp+var_1C0] +
mov byte ptr [eax] 0 +
jmp loc_411077  +
mov [ebp+var_185] 1 +
mov ebx [ebp+var_194] +
cmp ebx 2Dh +
jnz loc_410DD5  +
mov [ebp+var_1A7] 1 +
jmp loc_410DDA  +
cmp ebx 2Bh +
jnz loc_410E08  +
dec [ebp+var_19C]  +
jnz loc_410DEF  +
test ecx ecx +
jz loc_410DEF  +
mov [ebp+var_18D] 1 +
jmp loc_410E08  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
mov [ebp+var_194] ebx +
cmp [ebp+var_1D8] 0 +
jz loc_410F51  +
cmp [ebp+var_18D] 0 +
jnz loc_410F1A  +
cmp [ebp+var_1B4] 78h +
jz loc_410E88  +
cmp [ebp+var_1B4] 70h +
jz loc_410E88  +
movzx eax bl +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jz loc_410F01  +
cmp [ebp+var_1B4] 6Fh +
jnz loc_410E6D  +
cmp ebx 38h +
jge loc_410F01  +
mov esi [ebp+var_1C8] +
mov edi [ebp+var_1C4] +
shld edi esi +
shl esi 3 +
jmp loc_410EB8  +
push 0  +
push 0Ah  +
push [ebp+var_1C4]  +
push [ebp+var_1C8]  +
call sub_40AA50  +
mov esi eax +
mov edi edx +
jmp loc_410EB8  +
movzx eax bl +
push eax  +
call sub_40CD3C  +
pop ecx  +
test eax eax +
jz loc_410F01  +
mov esi [ebp+var_1C8] +
mov edi [ebp+var_1C4] +
shld edi esi +
push ebx  +
shl esi 4 +
call sub_410158  +
mov ebx eax +
pop ecx  +
mov [ebp+var_194] ebx +
inc [ebp+var_1AC]  +
lea eax [ebx-30h] +
cdq   +
add esi eax +
adc edi edx +
cmp [ebp+var_1B8] 0 +
mov [ebp+var_1C8] esi +
mov [ebp+var_1C4] edi +
jz loc_410EE3  +
dec [ebp+var_19C]  +
jz loc_410F1A  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
mov [ebp+var_194] ebx +
jmp loc_410E22  +
dec [ebp+var_18C]  +
cmp ebx 0FFFFFFFFh +
jz loc_410F1A  +
push [ebp+var_1A4]  +
push ebx  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1A7] 0 +
mov edi [ebp+var_1E4] +
jz loc_411019  +
mov eax [ebp+var_1C8] +
mov ecx [ebp+var_1C4] +
neg eax  +
adc ecx 0 +
neg ecx  +
mov [ebp+var_1C8] eax +
mov [ebp+var_1C4] ecx +
jmp loc_411019  +
cmp [ebp+var_18D] 0 +
mov edi [ebp+var_1E4] +
jnz loc_41100E  +
cmp [ebp+var_1B4] 78h +
jz loc_410F9C  +
cmp [ebp+var_1B4] 70h +
jz loc_410F9C  +
movzx eax bl +
push eax  +
call sub_40CCB8  +
pop ecx  +
test eax eax +
jz loc_410FF5  +
cmp [ebp+var_1B4] 6Fh +
jnz loc_410F97  +
cmp ebx 38h +
jge loc_410FF5  +
shl edi 3 +
jmp loc_410FBC  +
imul edi edi +
jmp loc_410FBC  +
movzx eax bl +
push eax  +
call sub_40CD3C  +
pop ecx  +
test eax eax +
jz loc_410FF5  +
push ebx  +
shl edi 4 +
call sub_410158  +
mov ebx eax +
pop ecx  +
mov [ebp+var_194] ebx +
inc [ebp+var_1AC]  +
cmp [ebp+var_1B8] 0 +
lea edi [edi+ebx-30h] +
jz loc_410FD7  +
dec [ebp+var_19C]  +
jz loc_41100E  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
mov [ebp+var_194] ebx +
jmp loc_410F64  +
dec [ebp+var_18C]  +
cmp ebx 0FFFFFFFFh +
jz loc_41100E  +
push [ebp+var_1A4]  +
push ebx  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1A7] 0 +
jz loc_411019  +
neg edi  +
cmp [ebp+var_1B4] 46h +
jnz loc_411029  +
and [ebp+var_1AC] 0 +
cmp [ebp+var_1AC] 0 +
jz loc_41114C  +
cmp [ebp+var_19D] 0 +
jnz loc_411077  +
inc [ebp+var_1CC]  +
mov esi [ebp+var_1C0] +
cmp [ebp+var_1D8] 0 +
jz loc_411067  +
mov eax [ebp+var_1C8] +
mov [esi] eax +
mov eax [ebp+var_1C4] +
mov [esi+4] eax +
jmp loc_411077  +
cmp [ebp+var_185] 0 +
jz loc_411074  +
mov [esi] edi +
jmp loc_411077  +
mov [esi] di +
mov edi [ebp+var_1BC] +
inc [ebp+var_1A5]  +
inc edi  +
mov [ebp+var_1BC] edi +
jmp loc_4110F0  +
cmp al 25h +
jnz loc_411096  +
cmp [edi+1] al +
jnz loc_411096  +
inc edi  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
mov ebx eax +
movzx eax byte ptr [edi] +
inc edi  +
mov [ebp+var_194] ebx +
mov [ebp+var_1BC] edi +
cmp eax ebx +
jnz loc_411134  +
movzx eax bl +
push eax  +
call sub_415A0E  +
pop ecx  +
test eax eax +
jz loc_4110F0  +
mov edx [ebp+var_1A4] +
inc [ebp+var_18C]  +
call sub_410178  +
movzx ecx byte ptr [edi] +
inc edi  +
mov [ebp+var_1BC] edi +
cmp ecx eax +
jnz loc_411121  +
dec [ebp+var_18C]  +
cmp [ebp+var_194] 0FFFFFFFFh +
jnz loc_41110C  +
cmp byte ptr [edi] 25h +
jnz loc_41114C  +
mov eax [ebp+var_1BC] +
cmp byte ptr [eax+1] 6Eh +
jnz loc_41114C  +
mov edi eax +
mov al [edi] +
test al al +
jnz loc_4102D4  +
jmp loc_41114C  +
cmp [ebp+var_194] 0FFFFFFFFh +
jmp loc_411137  +
cmp eax 0FFFFFFFFh +
jz loc_411134  +
push [ebp+var_1A4]  +
push eax  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_41114C  +
push [ebp+var_1A4]  +
push [ebp+var_194]  +
call sub_41641D  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1D0] 1 +
jnz loc_411161  +
push [ebp+lpMem]  +
call sub_408F41  +
pop ecx  +
cmp [ebp+var_194] 0FFFFFFFFh +
jnz loc_411194  +
mov eax [ebp+var_1CC] +
test eax eax +
jnz loc_41117F  +
cmp [ebp+var_1A5] al +
jnz loc_41117F  +
or eax 0FFFFFFFFh +
cmp [ebp+var_1F0] 0 +
jz loc_4111AD  +
mov ecx [ebp+var_1F4] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_4111AD  +
cmp [ebp+var_1F0] 0 +
jz loc_4111A7  +
mov eax [ebp+var_1F4] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_1CC] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_4098E8  +
leave   +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_411239  +
jmp loc_4111DC  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_4111DC  +
test ecx ecx +
jz loc_411286  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_41125D  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_41124C  +
and ecx 0Fh +
jz loc_411286  +
mov eax ecx +
shr ecx 2 +
jz loc_411276  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_411269  +
mov ecx eax +
and ecx 3 +
jz loc_411286  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41127D  +
pop eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword_426368 eax +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
call sub_4120E8  +
mov [ebp+arg_4] eax +
mov eax [esi+0Ch] +
pop ecx  +
test al 82h +
jnz loc_411301  +
call sub_40AC71  +
mov dword ptr [eax] 9 +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_411430  +
test al 40h +
jz loc_411312  +
call sub_40AC71  +
mov dword ptr [eax] 22h +
jmp loc_4112F5  +
push ebx  +
xor ebx ebx +
test al 1 +
jz loc_41132F  +
mov [esi+4] ebx +
test al 10h +
jz loc_4113AB  +
mov ecx [esi+8] +
and eax 0FFFFFFFEh +
mov [esi] ecx +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
and eax 0FFFFFFEFh +
or eax 2 +
mov [esi+0Ch] eax +
mov [esi+4] ebx +
mov [ebp+var_4] ebx +
test eax 10Ch +
jnz loc_411374  +
call sub_409BA6  +
add eax 20h +
cmp esi eax +
jz loc_411360  +
call sub_409BA6  +
add eax 40h +
cmp esi eax +
jnz loc_41136D  +
push [ebp+arg_4]  +
call sub_41580E  +
pop ecx  +
test eax eax +
jnz loc_411374  +
push esi  +
call sub_416630  +
pop ecx  +
test dword ptr [esi+0Ch] 108h +
push edi  +
jz loc_411402  +
mov eax [esi+8] +
mov edi [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
mov ecx [esi+18h] +
sub edi eax +
dec ecx  +
mov [esi+4] ecx +
cmp edi ebx +
jle loc_4113B6  +
push edi  +
push eax  +
push [ebp+arg_4]  +
call sub_41345A  +
add esp 0Ch +
mov [ebp+var_4] eax +
jmp loc_4113F8  +
or eax 20h +
mov [esi+0Ch] eax +
or eax 0FFFFFFFFh +
jmp loc_41142F  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFFh +
jz loc_4113D9  +
cmp ecx 0FFFFFFFEh +
jz loc_4113D9  +
mov eax ecx +
and eax 1Fh +
mov edx ecx +
sar edx 5 +
shl eax 6 +
add eax dword_426380[edx*4] +
jmp loc_4113DE  +
mov eax offset unk_4245C8 +
test byte ptr [eax+4] 20h +
jz loc_4113F8  +
push 2  +
push ebx  +
push ebx  +
push ecx  +
call sub_40B1EF  +
and eax edx +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_41141D  +
mov eax [esi+8] +
mov cl byte ptr [ebp+arg_0] +
mov [eax] cl +
jmp loc_411418  +
xor edi edi +
inc edi  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
call sub_41345A  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jz loc_411426  +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_41142E  +
mov eax [ebp+arg_0] +
and eax 0FFh +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
pxor xmm0 xmm0 +
push ecx  +
push ebx  +
mov eax ecx +
and eax 0Fh +
test eax eax +
jnz loc_4114C1  +
mov eax edx +
and edx 7Fh +
shr eax 7 +
jz loc_411483  +
lea esp [esp+0] +
movdqa oword ptr [ecx] xmm0 +
movdqa oword ptr [ecx+10h] xmm0 +
movdqa oword ptr [ecx+20h] xmm0 +
movdqa oword ptr [ecx+30h] xmm0 +
movdqa oword ptr [ecx+40h] xmm0 +
movdqa oword ptr [ecx+50h] xmm0 +
movdqa oword ptr [ecx+60h] xmm0 +
movdqa oword ptr [ecx+70h] xmm0 +
lea ecx [ecx+80h] +
dec eax  +
jnz loc_411453  +
test edx edx +
jz loc_4114BE  +
mov eax edx +
shr eax 4 +
jz loc_41149D  +
jmp loc_411493  +
***
lea ecx [ecx+0] +
***
movdqa oword ptr [ecx] xmm0 +
lea ecx [ecx+10h] +
dec eax  +
jnz loc_411493  +
and edx 0Fh +
jz loc_4114BE  +
mov eax edx +
xor ebx ebx +
shr edx 2 +
jz loc_4114B3  +
mov [ecx] ebx +
lea ecx [ecx+4] +
dec edx  +
jnz loc_4114AB  +
and eax 3 +
jz loc_4114BE  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_4114B8  +
pop ebx  +
pop eax  +
retn   +
mov ebx eax +
neg ebx  +
add ebx 10h +
sub edx ebx +
xor eax eax +
push edx  +
mov edx ebx +
and edx 3 +
jz loc_4114DA  +
mov [ecx] al +
inc ecx  +
dec edx  +
jnz loc_4114D4  +
shr ebx 2 +
jz loc_4114E7  +
mov [ecx] eax +
lea ecx [ecx+4] +
dec ebx  +
jnz loc_4114DF  +
pop edx  +
jmp loc_411442  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_4115F3  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_412905  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_4098E8  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_412830  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
retn   +
***
pop ecx  +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_417F40  +
pop ecx  +
mov edi edi +
call sub_40DCB0  +
cmp [ebp-20h] edi +
jz locret_41420C  +
cmp [ebp-24h] edi +
jz loc_414203  +
mov eax [ebp-1Ch] +
sar eax 5 +
mov ecx [ebp-1Ch] +
and ecx 1Fh +
shl ecx 6 +
mov eax dword_426380[eax*4] +
lea eax [eax+ecx+4] +
and byte ptr [eax] 0FEh +
push dword ptr [ebp-1Ch]  +
call sub_412B9D  +
pop ecx  +
retn   +
***
call sub_40DCB0  +
cmp [ebp-1Ch] edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
sub eax 3A4h +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
retn   +
***
jmp loc_41500F  +
***
cmp dword_4274B8 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
call sub_40D0EE  +
mov edi edi +
and dword_426364 0 +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_4159D6  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
or eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
movzx eax word ptr [ecx+6] +
push ebx  +
mov ebx eax +
shr ebx 4 +
and eax 8000h +
push esi  +
mov edx 7FFh +
and ebx edx +
push edi  +
mov [ebp+arg_4] eax +
mov eax [ecx+4] +
mov ecx [ecx] +
movzx edi bx +
mov esi 80000000h +
and eax 0FFFFFh +
mov [ebp+var_4] esi +
test edi edi +
jz loc_416A0D  +
cmp edi edx +
jz loc_416A06  +
add ebx 3C00h +
jmp loc_416A2E  +
mov edi 7FFFh +
jmp loc_416A31  +
xor edx edx +
cmp eax edx +
jnz loc_416A25  +
cmp ecx edx +
jnz loc_416A25  +
mov eax [ebp+arg_0] +
mov cx word ptr [ebp+arg_4] +
mov [eax+4] edx +
mov [eax] edx +
jmp loc_416A67  +
add ebx 3C01h +
mov [ebp+var_4] edx +
movzx edi bx +
mov edx ecx +
shr edx 15h +
shl eax 0Bh +
or edx eax +
or edx [ebp+var_4] +
mov eax [ebp+arg_0] +
shl ecx 0Bh +
jmp loc_416A59  +
mov ecx [eax] +
mov ebx ecx +
shr ebx 1Fh +
add edx edx +
or edx ebx +
add ecx ecx +
add edi 0FFFFh +
mov [eax] ecx +
mov [eax+4] edx +
test edx esi +
jz loc_416A46  +
mov ecx [ebp+arg_4] +
or ecx edi +
pop edi  +
pop esi  +
mov [eax+8] cx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_424070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+14h] +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov [ebp-24h] eax +
push edi  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_4169BD  +
pop ecx  +
pop ecx  +
lea eax [ebp-20h] +
push eax  +
push 0  +
push 11h  +
sub esp 0Ch +
lea esi [ebp-30h] +
mov edi esp +
movs   +
movs   +
movs   +
call sub_41A662  +
mov esi [ebp-24h] +
mov [ebx+8] eax +
movsx eax byte ptr [ebp-1Eh] +
mov [ebx] eax +
movsx eax word ptr [ebp-20h] +
mov [ebx+4] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_40EFA9  +
add esp 24h +
test eax eax +
jnz loc_416AF1  +
mov ecx [ebp-4] +
pop edi  +
mov [ebx+0Ch] esi +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_4098E8  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_40D3F4  +
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_416B24  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_416B40  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_416B6C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_416BB3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_416B7A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_416BA8  +
cmp edx [esp+arg_4] +
ja loc_416BA8  +
jb loc_416BB1  +
cmp eax [esp+arg_0] +
jbe loc_416BB1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_416BC5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_416BD9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41777F  +
add esp 10h +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_417908  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_417910  +
push large dword ptr fs:0  +
mov eax dword_424070 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_4179C7  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_41799A  +
cmp esi [esp+18h+arg_4] +
jbe loc_4179C7  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_4179C5  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_417A05  +
mov eax [ebx+esi*4+8] +
call sub_417A24  +
jmp loc_41797E  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_417910 +
jnz locret_4179FB  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_4179FB  +
mov eax 1 +
retn   +
***
mov ebx offset unk_424F50 +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp hObject 0FFFFFFFEh +
jnz loc_417A3B  +
call sub_41B39A  +
mov eax hObject +
cmp eax 0FFFFFFFFh +
jnz loc_417A4C  +
mov eax 0FFFFh +
leave   +
retn   +
push 0  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push 1  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_417A45  +
mov ax word ptr [ebp+Buffer] +
leave   +
retn   +
***
sub ecx eax +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_417E70  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_40DCB0  +
pop ecx  +
call sub_40DCB0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40D67A  +
mov ecx eax +
mov eax [ecx+6Ch] +
cmp eax off_424E30 +
jz loc_41930E  +
mov edx dword_424BE8 +
test [ecx+70h] edx +
jnz loc_41930E  +
call sub_4152F6  +
mov eax [eax+4] +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_417A70  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_424070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor ecx ecx +
push esi  +
xor esi esi +
mov [ebp+var_78] eax +
mov eax [ebp+arg_4] +
inc esi  +
push edi  +
mov [ebp+var_70] eax +
lea edi [ebp+var_20] +
mov [ebp+var_74] ecx +
mov [ebp+var_68] esi +
mov [ebp+var_4C] ecx +
mov [ebp+var_58] ecx +
mov [ebp+var_5C] ecx +
mov [ebp+var_60] ecx +
mov [ebp+var_64] ecx +
mov [ebp+var_50] ecx +
mov [ebp+var_6C] ecx +
cmp [ebp+arg_1C] ecx +
jnz loc_419FE5  +
call sub_40AC71  +
mov dword ptr [eax] 16h +
call sub_40D446  +
xor eax eax +
jmp loc_41A621  +
mov edx [ebp+arg_8] +
mov [ebp+var_54] edx +
mov al [edx] +
cmp al 20h +
jz loc_419FFD  +
cmp al 9 +
jz loc_419FFD  +
cmp al 0Ah +
jz loc_419FFD  +
cmp al 0Dh +
jnz loc_41A000  +
inc edx  +
jmp loc_419FEB  +
push ebx  +
mov bl 30h +
mov al [edx] +
inc edx  +
cmp ecx 0Bh +
ja loc_41A22B  +
jmp ds:off_41A632[ecx*4]  +
lea ecx [eax-31h] +
cmp cl 8 +
ja loc_41A024  +
push 3  +
pop ecx  +
dec edx  +
jmp loc_41A003  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jnz loc_41A03A  +
push 5  +
pop ecx  +
jmp loc_41A003  +
movsx eax al +
sub eax 2Bh +
jz loc_41A05F  +
dec eax  +
dec eax  +
jz loc_41A053  +
sub eax 3 +
jnz loc_41A1CB  +
mov ecx esi +
jmp loc_41A003  +
push 2  +
pop ecx  +
mov [ebp+var_74] 8000h +
jmp loc_41A003  +
and [ebp+var_74] 0 +
push 2  +
pop ecx  +
jmp loc_41A003  +
lea ecx [eax-31h] +
mov [ebp+var_58] esi +
cmp cl 8 +
jbe loc_41A01E  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jnz loc_41A088  +
push 4  +
jmp loc_41A037  +
cmp al 2Bh +
jz loc_41A0AE  +
cmp al 2Dh +
jz loc_41A0AE  +
cmp al bl +
jz loc_41A04F  +
cmp al 43h +
jle loc_41A1CB  +
cmp al 45h +
jle loc_41A0AA  +
sub al 64h +
cmp al 1 +
ja loc_41A1CB  +
push 6  +
jmp loc_41A037  +
dec edx  +
push 0Bh  +
jmp loc_41A037  +
lea ecx [eax-31h] +
cmp cl 8 +
jbe loc_41A01E  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jz loc_41A035  +
cmp al bl +
jz loc_41A04F  +
mov edx [ebp+var_54] +
jmp loc_41A1F4  +
mov [ebp+var_58] esi +
jmp loc_41A103  +
cmp al 39h +
jg loc_41A107  +
cmp [ebp+var_4C] 19h +
jnb loc_41A0FD  +
inc [ebp+var_4C]  +
sub al bl +
mov [edi] al +
inc edi  +
jmp loc_41A100  +
inc [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_41A0E9  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jz loc_41A084  +
cmp al 2Bh +
jz loc_41A0AE  +
cmp al 2Dh +
jz loc_41A0AE  +
jmp loc_41A094  +
cmp [ebp+var_4C] 0 +
mov [ebp+var_58] esi +
mov [ebp+var_5C] esi +
jnz loc_41A15B  +
jmp loc_41A13D  +
dec [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jz loc_41A137  +
jmp loc_41A15B  +
cmp al 39h +
jg loc_41A11C  +
cmp [ebp+var_4C] 19h +
jnb loc_41A158  +
inc [ebp+var_4C]  +
sub al bl +
mov [edi] al +
inc edi  +
dec [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_41A143  +
jmp loc_41A11C  +
sub al bl +
mov [ebp+var_5C] esi +
cmp al 9 +
ja loc_41A0DC  +
push 4  +
jmp loc_41A020  +
lea ecx [edx-2] +
mov [ebp+var_54] ecx +
lea ecx [eax-31h] +
cmp cl 8 +
ja loc_41A18A  +
push 9  +
jmp loc_41A020  +
movsx eax al +
sub eax 2Bh +
jz loc_41A1B2  +
dec eax  +
dec eax  +
jz loc_41A1A6  +
sub eax 3 +
jnz loc_41A0DC  +
push 8  +
jmp loc_41A037  +
or [ebp+var_68] 0FFFFFFFFh +
push 7  +
pop ecx  +
jmp loc_41A003  +
push 7  +
jmp loc_41A037  +
mov [ebp+var_60] esi +
jmp loc_41A1C1  +
mov al [edx] +
inc edx  +
cmp al bl +
jz loc_41A1BE  +
sub al 31h +
cmp al 8 +
jbe loc_41A183  +
dec edx  +
jmp loc_41A1F4  +
lea ecx [eax-31h] +
cmp cl 8 +
jbe loc_41A183  +
cmp al bl +
jmp loc_41A199  +
cmp [ebp+arg_18] 0 +
jz loc_41A227  +
movsx eax al +
sub eax 2Bh +
lea ecx [edx-1] +
mov [ebp+var_54] ecx +
jz loc_41A1B2  +
dec eax  +
dec eax  +
jz loc_41A1A6  +
mov edx ecx +
cmp [ebp+var_58] 0 +
mov eax [ebp+var_70] +
mov [eax] edx +
jz loc_41A5DB  +
push 18h  +
pop eax  +
cmp [ebp+var_4C] eax +
jbe loc_41A21B  +
cmp [ebp+var_9] 5 +
jl loc_41A214  +
inc [ebp+var_9]  +
dec edi  +
inc [ebp+var_50]  +
mov [ebp+var_4C] eax +
cmp [ebp+var_4C] 0 +
jbe loc_41A602  +
jmp loc_41A280  +
push 0Ah  +
pop ecx  +
dec edx  +
cmp ecx 0Ah +
jnz loc_41A003  +
jmp loc_41A1F4  +
mov [ebp+var_60] esi +
xor ecx ecx +
jmp loc_41A256  +
cmp al 39h +
jg loc_41A261  +
imul ecx ecx +
movsx esi al +
lea ecx [ecx+esi-30h] +
cmp ecx 1450h +
jg loc_41A25C  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_41A23D  +
jmp loc_41A261  +
mov ecx 1451h +
mov [ebp+var_64] ecx +
jmp loc_41A271  +
cmp al 39h +
jg loc_41A1CB  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_41A266  +
jmp loc_41A1CB  +
dec [ebp+var_4C]  +
inc [ebp+var_50]  +
dec edi  +
cmp byte ptr [edi] 0 +
jz loc_41A27A  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+var_4C]  +
lea eax [ebp+var_20] +
push eax  +
call sub_41B5B1  +
mov eax [ebp+var_64] +
xor edx edx +
add esp 0Ch +
cmp [ebp+var_68] edx +
jge loc_41A2A5  +
neg eax  +
add eax [ebp+var_50] +
cmp [ebp+var_60] edx +
jnz loc_41A2B0  +
add eax [ebp+arg_10] +
cmp [ebp+var_5C] edx +
jnz loc_41A2B8  +
sub eax [ebp+arg_14] +
cmp eax 1450h +
jg loc_41A5E4  +
cmp eax 0FFFFEBB0h +
jl loc_41A5FB  +
mov ecx offset unk_425130 +
sub ecx 60h +
mov [ebp+var_54] eax +
cmp eax edx +
jz loc_41A5C9  +
jge loc_41A2F0  +
neg eax  +
mov ecx offset unk_425290 +
mov [ebp+var_54] eax +
sub ecx 60h +
cmp [ebp+arg_C] edx +
jnz loc_41A2FB  +
xor eax eax +
mov word ptr [ebp+var_3C] ax +
cmp [ebp+var_54] edx +
jz loc_41A5C9  +
jmp loc_41A30B  +
mov ecx [ebp+var_7C] +
xor edx edx +
mov eax [ebp+var_54] +
sar [ebp+var_54] 3 +
add ecx 54h +
and eax 7 +
mov [ebp+var_7C] ecx +
cmp eax edx +
jz loc_41A5BF  +
imul eax eax +
lea ebx [ecx+eax] +
mov eax 8000h +
cmp [ebx] ax +
jb loc_41A341  +
mov esi ebx +
lea edi [ebp+var_48] +
movs   +
movs   +
movs   +
dec [ebp+var_48+2]  +
lea ebx [ebp+var_48] +
mov edx [ebp+var_32] +
xor eax eax +
mov [ebp+var_50] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
movzx eax word ptr [ebx+0Ah] +
mov esi eax +
xor esi [ebp+var_32] +
mov ecx 7FFFh +
and edx ecx +
and eax ecx +
and esi 8000h +
mov edi 7FFFh +
lea ecx [eax+edx] +
mov [ebp+var_70] esi +
movzx ecx cx +
cmp dx di +
jnb loc_41A5A1  +
cmp ax di +
jnb loc_41A5A1  +
mov edi 0BFFDh +
cmp cx di +
ja loc_41A5A1  +
mov esi 3FBFh +
cmp cx si +
ja loc_41A3AF  +
xor eax eax +
mov [ebp+var_38] eax +
mov [ebp+var_3C] eax +
jmp loc_41A5BC  +
xor esi esi +
cmp dx si +
jnz loc_41A3D5  +
inc ecx  +
test dword ptr [ebp-34h] 7FFFFFFFh +
jnz loc_41A3D5  +
cmp [ebp+var_38] esi +
jnz loc_41A3D5  +
cmp [ebp+var_3C] esi +
jnz loc_41A3D5  +
xor eax eax +
mov word ptr [ebp+var_32] ax +
jmp loc_41A5BF  +
cmp ax si +
jnz loc_41A3FB  +
inc ecx  +
test dword ptr [ebx+8] 7FFFFFFFh +
jnz loc_41A3FB  +
cmp [ebx+4] esi +
jnz loc_41A3FB  +
cmp [ebx] esi +
jnz loc_41A3FB  +
mov [ebp-34h] esi +
mov [ebp+var_38] esi +
mov [ebp+var_3C] esi +
jmp loc_41A5BF  +
mov [ebp+var_68] esi +
lea edi [ebp+var_28] +
mov [ebp+var_58] 5 +
mov eax [ebp+var_68] +
mov edx [ebp+var_58] +
add eax eax +
mov [ebp+var_64] edx +
test edx edx +
jle loc_41A469  +
lea eax [ebp+eax+var_3C] +
mov [ebp+var_5C] eax +
lea eax [ebx+8] +
mov [ebp+var_60] eax +
mov eax [ebp+var_60] +
mov edx [ebp+var_5C] +
movzx edx word ptr [edx] +
movzx eax word ptr [eax] +
and [ebp+var_4C] 0 +
imul eax edx +
mov edx [edi-4] +
lea esi [edx+eax] +
cmp esi edx +
jb loc_41A445  +
cmp esi eax +
jnb loc_41A44C  +
mov [ebp+var_4C] 1 +
cmp [ebp+var_4C] 0 +
mov [edi-4] esi +
jz loc_41A458  +
inc word ptr [edi]  +
add [ebp+var_5C] 2 +
sub [ebp+var_60] 2 +
dec [ebp+var_64]  +
cmp [ebp+var_64] 0 +
jg loc_41A424  +
add edi 2 +
inc [ebp+var_68]  +
dec [ebp+var_58]  +
cmp [ebp+var_58] 0 +
jg loc_41A408  +
add ecx 0C002h +
test cx cx +
jle loc_41A4BA  +
mov edi [ebp+var_24] +
test edi edi +
js loc_41A4B5  +
mov esi [ebp+var_28] +
mov eax [ebp+var_2C] +
shl [ebp+var_2C] 1 +
shr eax 1Fh +
mov edx esi +
add esi esi +
or esi eax +
shr edx 1Fh +
lea eax [edi+edi] +
or eax edx +
add ecx 0FFFFh +
mov [ebp+var_28] esi +
mov [ebp+var_24] eax +
test cx cx +
jg loc_41A483  +
test cx cx +
jg loc_41A507  +
add ecx 0FFFFh +
test cx cx +
jns loc_41A507  +
mov eax ecx +
neg eax  +
movzx esi ax +
add ecx esi +
test byte ptr [ebp+var_2C] 1 +
jz loc_41A4D7  +
inc [ebp+var_50]  +
mov eax [ebp+var_24] +
mov edi [ebp+var_28] +
mov edx [ebp+var_28] +
shr [ebp+var_24] 1 +
shl eax 1Fh +
shr edi 1 +
or edi eax +
mov eax [ebp+var_2C] +
shl edx 1Fh +
shr eax 1 +
or eax edx +
dec esi  +
mov [ebp+var_28] edi +
mov [ebp+var_2C] eax +
jnz loc_41A4CE  +
cmp [ebp+var_50] esi +
jz loc_41A507  +
or word ptr [ebp+var_2C] 1 +
mov eax 8000h +
cmp word ptr [ebp+var_2C] ax +
ja loc_41A523  +
mov edx [ebp+var_2C] +
and edx 1FFFFh +
cmp edx 18000h +
jnz loc_41A557  +
cmp [ebp+var_2C+2] 0FFFFFFFFh +
jnz loc_41A554  +
and [ebp+var_2C+2] 0 +
cmp [ebp+var_28+2] 0FFFFFFFFh +
jnz loc_41A54F  +
and [ebp+var_28+2] 0 +
mov edx 0FFFFh +
cmp word ptr [ebp+var_24+2] dx +
jnz loc_41A549  +
mov word ptr [ebp+var_24+2] ax +
inc ecx  +
jmp loc_41A557  +
inc word ptr [ebp+var_24+2]  +
jmp loc_41A557  +
inc [ebp+var_28+2]  +
jmp loc_41A557  +
inc [ebp+var_2C+2]  +
mov eax 7FFFh +
cmp cx ax +
jb loc_41A584  +
xor eax eax +
xor ecx ecx +
cmp word ptr [ebp+var_70] ax +
mov [ebp+var_38] eax +
setz cl  +
mov [ebp+var_3C] eax +
dec ecx  +
and ecx 80000000h +
add ecx 7FFF8000h +
mov [ebp-34h] ecx +
jmp loc_41A5BF  +
mov ax word ptr [ebp+var_2C+2] +
or ecx [ebp+var_70] +
mov word ptr [ebp+var_3C] ax +
mov eax [ebp+var_28] +
mov [ebp+var_3C+2] eax +
mov eax [ebp+var_24] +
mov [ebp+var_38+2] eax +
mov word ptr [ebp+var_32] cx +
jmp loc_41A5BF  +
xor eax eax +
test si si +
setz al  +
and [ebp+var_38] 0 +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
and [ebp+var_3C] 0 +
mov [ebp-34h] eax +
cmp [ebp+var_54] 0 +
jnz loc_41A306  +
mov eax [ebp-34h] +
movzx ecx word ptr [ebp+var_3C] +
mov esi [ebp+var_3C+2] +
mov edx [ebp+var_38+2] +
shr eax 10h +
jmp loc_41A60A  +
mov [ebp+var_6C] 4 +
jmp loc_41A602  +
xor esi esi +
mov eax 7FFFh +
mov edx 80000000h +
xor ecx ecx +
mov [ebp+var_6C] 2 +
jmp loc_41A60A  +
mov [ebp+var_6C] 1 +
xor ecx ecx +
xor eax eax +
xor edx edx +
xor esi esi +
mov edi [ebp+var_78] +
or eax [ebp+var_74] +
mov [edi] cx +
mov [edi+0Ah] ax +
mov eax [ebp+var_6C] +
mov [edi+2] esi +
mov [edi+6] edx +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_4098E8  +
leave   +
retn   +
***
mov edi edi +
xor eax eax +
xor eax eax +
mov edi edi +
xor eax eax +
mov eax hObject +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0Ah  +
push 0  +
push [ebp+arg_0]  +
call sub_416E89  +
add esp 0Ch +
pop ebp  +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
call sub_40DCB0  +
xor eax eax +
cmp dword_426368 eax +
jz loc_41B801  +
test byte ptr [ebp+8] 40h +
jz loc_41B7F9  +
cmp dword_425404 eax +
jz loc_41B7F9  +
mov [ebp-4] eax +
ldmxcsr dword ptr [ebp+8]  +
jmp loc_41B7F0  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
cmp eax 0C0000005h +
jz loc_41B7DA  +
cmp eax 0C000001Dh +
jz loc_41B7DA  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword_425404 0 +
and dword ptr [ebp+8] 0FFFFFFBFh +
ldmxcsr dword ptr [ebp+8]  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_41B801  +
and dword ptr [ebp+8] 0FFFFFFBFh +
ldmxcsr dword ptr [ebp+8]  +
call sub_40DCF5  +
retn   +
***
