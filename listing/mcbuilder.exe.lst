retf 0  +
***
retn   +
***
retn 0  +
***
retf   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1017BE0  +
cmp [esi] ax +
jz loc_1017BDC  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1017BD2  +
test edx edx +
jnz loc_1017BE5  +
mov eax 0C000000Dh +
pop esi  +
test edi edi +
jz locret_1017BF6  +
test eax eax +
jl loc_1017BF3  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_1017C0C  +
cmp ecx [ebp+arg_0] +
jbe loc_1017C11  +
mov eax 0C000000Dh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
mov ecx edx +
mov edi eax +
call sub_1017BFC  +
test eax eax +
jl loc_1017C3A  +
mov eax [ebp+arg_0] +
call sub_1017BC5  +
jmp loc_1017C3D  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1017C7C  +
cmp [ebp+arg_4] eax +
jz loc_1017C78  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1017C78  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1017C5B  +
test esi esi +
jnz loc_1017C84  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 80000005h +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1017C92  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memcpy_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memmove_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
mov esi ecx +
call ??0exception@@QAE@ABQBD@Z  +
mov dword ptr [esi] offset off_1011940 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ??1exception@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1011940 +
call ??1exception@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1017D37  +
push esi  +
call sub_101BD55  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ??0exception@@QAE@ABV0@@Z  +
mov dword ptr [esi] offset off_1011940 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
mov [ebp+var_4] esi +
cmp [ebp+arg_0] esi +
jz loc_1017D9D  +
push [ebp+arg_0]  +
lea eax [ebp+var_C] +
push eax  +
call ds:RtlInitUnicodeString  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push 1  +
lea eax [ebp+var_C] +
push eax  +
call ds:RtlHashUnicodeString  +
test eax eax +
jl loc_1017D9D  +
mov esi [ebp+var_4] +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1017DDA  +
test dx dx +
jz loc_1017DD6  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1017DDA  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1017DB4  +
xor eax eax +
jmp loc_1017DDF  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor ecx ecx +
test eax eax +
setnz cl  +
mov eax ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ds:RtlExpandEnvironmentStrings +
push edi  +
xor edi edi +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_4] edi +
push [ebp+arg_0]  +
push edi  +
call esi  +
cmp eax edi +
jz loc_1017E22  +
cmp eax 0C0000023h +
jz loc_1017E22  +
xor eax eax +
jmp loc_1017E6E  +
mov eax large fs:18h +
mov ecx [ebp+var_4] +
mov eax [eax+30h] +
push ebx  +
add ecx ecx +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov ebx eax +
cmp ebx edi +
jz loc_1017E6B  +
push edi  +
push [ebp+var_4]  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push edi  +
call esi  +
test eax eax +
jge loc_1017E6B  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+Buffer] +
push esi  +
xor esi esi +
inc esi  +
test ebx ebx +
jz loc_1017F36  +
test ebx 0FFFFE000h +
jnz loc_1017F34  +
test ebx 100h +
jnz loc_1017F34  +
test ebx 200h +
jz loc_1017EE4  +
and [ebp+Buffer] 0 +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
call NetGetJoinInformation  +
test eax eax +
jnz loc_1017ED2  +
cmp [ebp+var_8] esi +
jnz loc_1017ED2  +
xor esi esi +
cmp [ebp+Buffer] 0 +
jz loc_1017EE0  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
test esi esi +
jz loc_1017F36  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push 0  +
push 0  +
push 6  +
call ds:GetProductInfo  +
test eax eax +
jz loc_1017F34  +
mov eax [ebp+var_4] +
dec eax  +
cmp eax 46h +
ja loc_1017F36  +
movzx eax ds:byte_1017F61[eax] +
jmp ds:off_1017F41[eax*4]  +
test bl 10h +
jmp loc_1017F32  +
test bl 20h +
jmp loc_1017F32  +
test bl 4 +
jmp loc_1017F32  +
test bl 8 +
jmp loc_1017F32  +
test bl 2 +
jmp loc_1017F32  +
test bl 1 +
jmp loc_1017F32  +
test bl 40h +
jz loc_1017F36  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_8] 1 +
mov dword ptr [ebp+Data] edi +
cmp esi edi +
jnz loc_1017FD1  +
xor eax eax +
jmp loc_10180D3  +
mov eax [esi+10h] +
mov [ebp+arg_0] eax +
mov eax [esi+0Ch] +
push ebx  +
mov [ebp+var_C] eax +
lea eax [ebp+Data] +
push eax  +
mov ebx offset aSystem +
push ebx  +
call sub_101D7AB  +
test eax eax +
jz loc_10180D2  +
cmp [esi+10h] edi +
jl loc_1017FFF  +
cmp dword ptr [ebp+Data] edi +
jnz loc_1018063  +
mov eax [esi+0Ch] +
cmp eax edi +
jl loc_10180D9  +
or dword ptr [esi+0Ch] 0FFFFFFFFh +
push esi  +
mov [esi+10h] eax +
mov [ebp+arg_0] eax +
call sub_1020D5E  +
test eax eax +
jz loc_10180D9  +
cmp dword ptr [ebp+Data] edi +
jnz loc_1018063  +
lea eax [ebp+Data] +
push eax  +
mov esi offset aSystemLp +
push esi  +
call sub_101D7AB  +
test eax eax +
jnz loc_1018041  +
mov dword ptr [ebp+Data] 3 +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push 20000h  +
call sub_101CEDD  +
push dword ptr [ebp+Data]  +
push ebx  +
call sub_101D78B  +
test eax eax +
jz loc_10180D9  +
push esi  +
call sub_101C921  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_10180CF  +
mov esi offset dword_10118E0 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_10180CF  +
push 4  +
lea eax [ebp+var_C] +
mov [ebp+var_3C] eax +
pop eax  +
mov [ebp+var_34] eax +
mov [ebp+var_24] eax +
mov [ebp+var_14] eax +
lea eax [ebp+var_3C] +
push eax  +
push 3  +
push esi  +
push dword_1034C04  +
lea ecx [ebp+arg_0] +
push dword_1034C00  +
mov [ebp+var_2C] ecx +
lea ecx [ebp+Data] +
mov [ebp+var_38] edi +
mov [ebp+var_30] edi +
mov [ebp+var_28] edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] edi +
mov [ebp+var_10] edi +
call ds:EtwEventWrite  +
mov eax [ebp+var_8] +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov [ebp+var_8] edi +
jmp loc_10180CF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx dword_1034C10 +
sub ecx [eax] +
mov edx dword_1034C14 +
sbb edx [eax+4] +
push 0C9h  +
push 2A69C000h  +
push edx  +
push ecx  +
call __aulldiv  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_10] +
cmp ecx 0FFFFFFFFh +
push esi  +
push edi  +
jl loc_101820D  +
mov eax dword_1034C1C +
mov edx [eax+0Ch] +
mov edx [edx+3Ch] +
dec edx  +
cmp ecx edx +
jg loc_101820D  +
cmp ecx 0FFFFFFFFh +
jnz loc_101814A  +
xor eax eax +
inc eax  +
jmp loc_101820F  +
mov eax [eax+18h] +
mov edi [ebp+arg_0] +
mov esi ecx +
imul esi esi +
mov eax [eax+esi+1Ch] +
add [edi] eax +
mov eax dword_1034C1C +
mov eax [eax+20h] +
mov eax [eax+10h] +
lea eax [eax+ecx*8] +
push eax  +
call sub_10180E3  +
test eax eax +
jl loc_101820D  +
cmp eax 0Fh +
push ebx  +
mov ebx [ebp+arg_C] +
jg loc_10181BC  +
mov ecx dword_1034C1C +
mov ecx [ecx+18h] +
mov ecx [ecx+esi+1Ch] +
add [ebx] ecx +
cmp eax 0Ah +
jg loc_10181BC  +
mov ecx dword_1034C1C +
mov ecx [ecx+18h] +
mov edx [ecx+esi+1Ch] +
mov ecx [ebp+arg_8] +
add [ecx] edx +
cmp eax 5 +
jg loc_10181BC  +
mov eax dword_1034C1C +
mov eax [eax+18h] +
mov ecx [eax+esi+1Ch] +
mov eax [ebp+arg_4] +
add [eax] ecx +
mov eax dword_1034C1C +
mov eax [eax+18h] +
push dword ptr [eax+esi+20h]  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_1018116  +
mov eax dword_1034C1C +
mov eax [eax+18h] +
push dword ptr [eax+esi+24h]  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_1018116  +
mov eax dword_1034C1C +
mov eax [eax+18h] +
push dword ptr [eax+esi+28h]  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_1018116  +
xor eax eax +
inc eax  +
pop ebx  +
jmp loc_101820F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
push esi  +
mov esi dword_1034C1C +
push edi  +
xor edi edi +
mov dword_1034C14 ecx +
mov eax [eax] +
mov dword ptr [ebp+Data] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+hKey] edi +
mov [ebp+var_18] edi +
mov dword_1034C10 eax +
cmp esi edi +
jz loc_10183CF  +
cmp [esi+20h] edi +
jz loc_10183CF  +
mov eax [esi+20h] +
mov ecx [eax+0Ch] +
cmp ecx edi +
jz loc_10183CF  +
cmp [eax+10h] edi +
jz loc_10183CF  +
add ecx 10h +
push ecx  +
call sub_10180E3  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_10183CF  +
mov eax [esi+0Ch] +
push dword ptr [eax+58h]  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+Data] +
push eax  +
call sub_1018116  +
test eax eax +
jz loc_10183CF  +
cmp dword ptr [ebp+Data] edi +
jz loc_10183CF  +
mov eax [ebp+var_14] +
imul eax eax +
xor edx edx +
div  dword ptr [ebp+Data] +
xor edx edx +
push edi  +
mov [ebp+var_14] eax +
mov eax [ebp+var_10] +
imul eax eax +
div  dword ptr [ebp+Data] +
xor edx edx +
mov [ebp+var_10] eax +
mov eax [ebp+var_C] +
imul eax eax +
div  dword ptr [ebp+Data] +
shr dword ptr [ebp+Data] 14h +
mov [ebp+var_C] eax +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push 20007h  +
push edi  +
push edi  +
push edi  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
test eax eax +
jnz loc_10183C1  +
push ebx  +
mov ebx ds:RegSetValueExW +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push edi  +
push offset ValueName  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_10183C0  +
mov esi ds:RegDeleteValueW +
push offset aCmfutilization  +
push [ebp+hKey]  +
call esi  +
push offset aCmfutilizati_0  +
push [ebp+hKey]  +
call esi  +
push offset aCmfutilizati_1  +
push [ebp+hKey]  +
call esi  +
cmp [ebp+var_C] edi +
jbe loc_10183B9  +
cmp [ebp+arg_0] 0Fh +
jl loc_1018375  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 4  +
push edi  +
push offset aCmfutilizati_1  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_10183C0  +
cmp [ebp+var_10] edi +
jbe loc_10183B9  +
cmp [ebp+arg_0] 0Ah +
jl loc_1018397  +
push 4  +
lea eax [ebp+var_10] +
push eax  +
push 4  +
push edi  +
push offset aCmfutilizati_0  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_10183C0  +
cmp [ebp+var_14] edi +
jbe loc_10183B9  +
cmp [ebp+arg_0] 5 +
jl loc_10183B9  +
push 4  +
lea eax [ebp+var_14] +
push eax  +
push 4  +
push edi  +
push offset aCmfutilization  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_10183C0  +
mov [ebp+var_18] 1 +
pop ebx  +
cmp [ebp+hKey] edi +
jz loc_10183CF  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_18] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1034C1C +
push ebx  +
push esi  +
xor ebx ebx +
push 4  +
pop esi  +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
mov [ebp+hKey] ebx +
mov [ebp+var_1C] ebx +
cmp eax ebx +
jz loc_1018549  +
cmp [eax+0Ch] ebx +
jz loc_1018549  +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 20007h  +
push ebx  +
push ebx  +
push ebx  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
test eax eax +
jnz loc_101853B  +
push edi  +
mov edi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aAvgfilecount  +
push [ebp+hKey]  +
call edi  +
cmp eax 2 +
jnz loc_101845C  +
mov dword ptr [ebp+Data] ebx +
jmp loc_101846D  +
cmp eax ebx +
jnz loc_101853A  +
cmp [ebp+Type] esi +
jnz loc_101853A  +
mov eax dword_1034C1C +
mov edx [eax+0Ch] +
mov ecx [edx+48h] +
sub ecx [edx+4Ch] +
mov ebx offset aLastfilecount +
mov edx ecx +
sub edx dword ptr [ebp+Data] +
mov [ebp+var_18] ecx +
mov [ebp+var_24] edx +
mov eax [eax+0Ch] +
mov edx [eax+0Ch] +
mov eax edx +
imul eax dword ptr [ebp+Data] +
add eax ecx +
lea ecx [edx+1] +
xor edx edx +
div  ecx +
mov [ebp+cbData] esi +
mov dword ptr [ebp+Data] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call edi  +
cmp eax 2 +
jnz loc_10184C5  +
and [ebp+var_14] 0 +
jmp loc_10184CE  +
test eax eax +
jnz loc_1018538  +
cmp [ebp+Type] esi +
jnz loc_1018538  +
mov eax [ebp+var_18] +
sub eax [ebp+var_14] +
mov edi ds:RegSetValueExW +
push esi  +
mov [ebp+var_20] eax +
lea eax [ebp+Data] +
push eax  +
push esi  +
push 0  +
push offset aAvgfilecount  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_1018538  +
push esi  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push 0  +
push offset aFilecountdiff  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_1018538  +
push esi  +
lea eax [ebp+var_24] +
push eax  +
push esi  +
push 0  +
push offset aAvgcountdiff  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_1018538  +
push esi  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_1018538  +
mov [ebp+var_1C] 1 +
xor ebx ebx +
pop edi  +
cmp [ebp+hKey] ebx +
jz loc_1018549  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_1C] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
xor ebx ebx +
push 0A8h  +
mov word ptr [ebp+var_B0] ax +
lea eax [ebp+var_B0+2] +
push ebx  +
push eax  +
mov [ebp+var_C4] esi +
mov [ebp+var_C0] edi +
mov [ebp+var_B4] ebx +
mov [ebp+var_B8] ebx +
call memset  +
add esp 0Ch +
mov [ebp+var_BC] ebx +
cmp esi ebx +
jnz loc_10185BC  +
xor eax eax +
jmp loc_10186E9  +
mov [esi] ebx +
cmp edi ebx +
jz loc_10185C4  +
mov [edi] ebx +
push ebx  +
push 55h  +
lea eax [ebp+var_B0] +
push eax  +
call ds:GetSystemDefaultUILanguage  +
movzx eax ax +
push eax  +
call ds:LCIDToLocaleName  +
test eax eax +
jz loc_10186E3  +
lea eax [ebp+var_B0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_10185EF  +
sub eax edx +
sar eax 1 +
mov edi eax +
lea eax [ebp+var_B4] +
push eax  +
push ebx  +
lea eax [ebp+var_B8] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push 8  +
call ds:RtlGetSystemPreferredUILanguages  +
test eax eax +
jl loc_10186E3  +
cmp [ebp+var_B8] ebx +
jnz loc_1018637  +
mov [ebp+var_B4] 1 +
mov eax large fs:18h +
mov ecx [ebp+var_B4] +
mov eax [eax+30h] +
lea ecx [edi+ecx+1] +
add ecx ecx +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
cmp esi ebx +
jz loc_10186E3  +
lea ebx [edi+edi+2] +
push ebx  +
lea eax [ebp+var_B0] +
push eax  +
push esi  +
call memcpy  +
add esp 0Ch +
cmp [ebp+var_B8] 0 +
jz loc_10186A4  +
lea eax [ebp+var_B4] +
push eax  +
add ebx esi +
push ebx  +
lea eax [ebp+var_B8] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push 8  +
call ds:RtlGetSystemPreferredUILanguages  +
test eax eax +
jl loc_10186CE  +
mov eax [ebp+var_C4] +
mov [eax] esi +
mov eax [ebp+var_C0] +
test eax eax +
jz loc_10186C2  +
mov ecx [ebp+var_B4] +
lea ecx [edi+ecx+1] +
mov [eax] ecx +
mov [ebp+var_BC] 1 +
jmp loc_10186E3  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax [ebp+var_BC] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1018711  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp eax ebx +
jnz loc_1018735  +
xor eax eax +
jmp loc_10187AD  +
mov [eax] ebx +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_1018740  +
mov [eax] ebx +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
cmp eax ebx +
jnz loc_10187B2  +
mov edi ds:GetSystemPreferredUILanguages +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push 8  +
call edi  +
test eax eax +
jz loc_10187A9  +
mov eax large fs:18h +
mov ecx [ebp+var_4] +
mov eax [eax+30h] +
add ecx ecx +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
cmp esi ebx +
jz loc_10187A9  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
push 8  +
call edi  +
test eax eax +
jnz loc_1018821  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop edi  +
mov eax ebx +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_10187B5  +
sub eax edx +
sar eax 1 +
add eax 2 +
mov [ebp+var_4] eax +
mov eax large fs:18h +
mov ecx [ebp+var_4] +
mov eax [eax+30h] +
add ecx ecx +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
cmp esi ebx +
jz loc_10187A9  +
mov eax [ebp+var_4] +
lea eax [eax+eax-2] +
push eax  +
push [ebp+arg_4]  +
mov edi esi +
push esi  +
call memcpy  +
add esp 0Ch +
cmp [esi] bx +
jz loc_1018821  +
push 2Ch  +
push edi  +
call ds:__imp_wcschr  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jz loc_1018821  +
xor eax eax +
mov [edi] ax +
inc edi  +
inc edi  +
cmp [edi] bx +
jnz loc_1018804  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_1018832  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor ebx ebx +
inc ebx  +
jmp loc_10187A9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1018957  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1018957  +
mov esi ds:__imp_wcschr +
push 2Ch  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018957  +
xor ecx ecx +
mov [eax] cx +
mov [edi] ebx +
lea ebx [eax+2] +
jmp loc_1018885  +
inc ebx  +
inc ebx  +
push 20h  +
pop eax  +
cmp ax [ebx] +
jz loc_1018883  +
push 2Ch  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018957  +
xor ecx ecx +
mov [eax] cx +
add eax 2 +
push 2Ch  +
push eax  +
mov [edi+4] ebx +
mov [ebp+arg_0] eax +
call esi  +
mov ebx eax +
pop ecx  +
xor eax eax +
pop ecx  +
test ebx ebx +
jz loc_1018959  +
mov [ebx] ax +
push 10h  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call ds:wcstol  +
add esp 0Ch +
mov [edi+8] eax +
cmp eax 7FFFFFFFh +
jz loc_1018957  +
cmp eax 0FFFFFFFFh +
jl loc_1018957  +
cmp [ebp+var_4] ebx +
jnz loc_1018957  +
add ebx 2 +
push 2Ch  +
push ebx  +
call esi  +
mov esi eax +
pop ecx  +
xor eax eax +
pop ecx  +
test esi esi +
jz loc_1018959  +
mov [esi] ax +
push 10h  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call ds:wcstol  +
add esp 0Ch +
mov [edi+0Ch] eax +
cmp eax 7FFFFFFFh +
jz loc_1018957  +
cmp eax 80000000h +
jz loc_1018957  +
cmp eax 0FFFFFFFFh +
jl loc_1018957  +
cmp [ebp+var_4] esi +
jnz loc_1018957  +
push 10h  +
lea eax [ebp+var_4] +
push eax  +
add esi 2 +
push esi  +
call ds:__imp_wcstoul  +
add esp 0Ch +
mov [edi+10h] eax +
cmp eax 0FFFFFFFFh +
jz loc_1018957  +
mov eax [ebp+var_4] +
movzx eax word ptr [eax] +
cmp ax 0Ah +
jz loc_1018952  +
test ax ax +
jnz loc_1018957  +
xor eax eax +
inc eax  +
jmp loc_1018959  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp [ebp+arg_0] edi +
jz loc_1018BDB  +
cmp [ebp+arg_4] edi +
jz loc_1018BDB  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_1018BDB  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1024513  +
mov ebx eax +
cmp ebx edi +
jz loc_1018BDB  +
push 1  +
push dword ptr [esi+4]  +
push [ebp+arg_0]  +
call sub_102319D  +
cmp eax 0FFFFFFFFh +
jz loc_1018BDB  +
cmp eax [ebx+28h] +
jz loc_10189C5  +
mov [ebx+28h] eax +
lea eax [esi+8] +
mov [ebp+arg_0] eax +
mov eax [eax] +
cmp eax [ebx+2Ch] +
jz loc_10189D5  +
mov [ebx+2Ch] eax +
lea eax [esi+0Ch] +
mov [ebp+var_4] eax +
mov eax [eax] +
cmp eax [ebx+30h] +
jz loc_10189E5  +
mov [ebx+30h] eax +
mov byte ptr [ebx+43h] 0 +
mov eax [esi+4] +
mov ecx offset aBoot +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1018A17  +
cmp dx di +
jz loc_1018A13  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1018A17  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_10189F1  +
xor eax eax +
jmp loc_1018A1C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jz loc_1018A99  +
mov eax dword_1034C1C +
cmp eax edi +
jz loc_1018A99  +
push dword ptr [ebx+10h]  +
mov esi ebx +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_101F9B8  +
mov esi dword_1034C08 +
mov ecx dword_1034C0C +
mov edi esi +
or edi ecx +
jz loc_1018A61  +
mov edi eax +
or edi edx +
jz loc_1018A94  +
cmp edx ecx +
ja loc_1018A94  +
jb loc_1018A8D  +
cmp eax esi +
jnb loc_1018A94  +
jmp loc_1018A8D  +
push dword ptr [ebx+10h]  +
mov esi ebx +
sub esp 10h +
mov edi esp +
push dword_1034C1C  +
movs   +
movs   +
movs   +
movs   +
call sub_101FBF5  +
test eax eax +
jz loc_1018A94  +
mov eax [eax+2Ch] +
and eax 0FF000000h +
cmp eax 4000000h +
jnz loc_1018A94  +
or dword ptr [ebx+40h] 4000000h +
mov esi [ebp+arg_8] +
xor edi edi +
mov eax [ebx+40h] +
test eax 4000000h +
jz loc_1018B0B  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_1018BD4  +
mov esi offset dword_1011910 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_1018B21  +
mov ecx [ebp+arg_4] +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1018AD2  +
sub eax ebx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_C] eax +
lea eax [ebp+var_14] +
push eax  +
push 1  +
push esi  +
push dword_1034C04  +
mov [ebp+var_14] ecx +
push dword_1034C00  +
mov [ebp+var_10] edi +
mov [ebp+var_8] edi +
call ds:EtwEventWrite  +
jmp loc_1018B21  +
cmp dword_1034C18 edi +
jnz loc_1018B21  +
test byte ptr [esi+10h] 80h +
jz loc_1018B21  +
or eax 1000000h +
mov [ebx+40h] eax +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_1018BD4  +
mov esi offset dword_10118B0 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_1018BD4  +
mov ecx [ebp+arg_4] +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1018B54  +
sub eax ebx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_4C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_54] ecx +
mov ecx [eax+4] +
mov eax ecx +
mov [ebp+var_50] edi +
mov [ebp+var_48] edi +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx di +
jnz loc_1018B7D  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push 4  +
mov [ebp+var_44] ecx +
mov ecx [ebp+var_4] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_34] eax +
pop eax  +
mov [ebp+var_24] ecx +
lea ecx [ebp+var_54] +
push ecx  +
push eax  +
push esi  +
push dword_1034C04  +
mov [ebp+var_40] edi +
push dword_1034C00  +
mov [ebp+var_38] edi +
mov [ebp+var_30] edi +
mov [ebp+var_2C] eax +
mov [ebp+var_28] edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] eax +
mov [ebp+var_18] edi +
call ds:EtwEventWrite  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edx [ecx+4] +
test edx edx +
jnz loc_1018BF4  +
xor eax eax +
retn   +
mov eax [ecx+0Ch] +
sub eax edx +
sar eax 2 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push dword ptr [eax]  +
mov edi ecx +
mov esi [edi+20h] +
call sub_1017D65  +
and eax esi +
cmp [edi+24h] eax +
ja loc_1018C28  +
shr esi 1 +
or ecx 0FFFFFFFFh +
sub ecx esi +
add eax ecx +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
test edx edx +
jnz loc_1018C3D  +
xor eax eax +
retn   +
mov eax [ecx+8] +
sub eax edx +
sar eax 2 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ecx+18h] +
lea eax [ecx+4] +
cmp esi 10h +
jb loc_1018C60  +
mov edx [eax] +
jmp loc_1018C62  +
mov edx eax +
cmp [ebp+arg_0] edx +
jb loc_1018C7C  +
cmp esi 10h +
jb loc_1018C6E  +
mov eax [eax] +
mov ecx [ecx+14h] +
add ecx eax +
cmp ecx [ebp+arg_0] +
jbe loc_1018C7C  +
mov al 1 +
jmp loc_1018C7E  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_1018C9C  +
mov ecx [ebp+arg_8] +
mov ecx [ecx] +
mov [eax] ecx +
add eax 4 +
cmp eax [ebp+arg_4] +
jnz loc_1018C92  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1018CC9  +
xor ecx ecx +
mov eax ecx +
shl eax 2 +
push eax  +
call loc_101BD66  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 4 +
jnb loc_1018CB9  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_1017CE4  +
push offset dword_102D668  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1018D0F  +
xor ecx ecx +
push ecx  +
call loc_101BD66  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 1 +
jnb loc_1018D04  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_1017CE4  +
push offset dword_102D668  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1018D58  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101BD66  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 0Ch +
jnb loc_1018D4A  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_1017CE4  +
push offset dword_102D668  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1017C9E  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1017CC1  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
sar eax 2 +
mov ecx eax +
shl ecx 2 +
sub esi ecx +
test eax eax +
jle loc_1018DF1  +
push ecx  +
push [ebp+arg_0]  +
push ecx  +
push esi  +
call memmove_s  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp [ebp+arg_0] eax +
jz loc_1018E1B  +
sub [ebp+arg_8] 4 +
mov edx [ebp+arg_8] +
sub eax 4 +
mov ecx [eax] +
mov [edx] ecx +
cmp eax [ebp+arg_0] +
jnz loc_1018E08  +
mov eax [ebp+arg_8] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
sar eax 2 +
mov ecx eax +
shl ecx 2 +
push esi  +
lea esi [ecx+edx] +
test eax eax +
jbe loc_1018E51  +
push ecx  +
push [ebp+arg_0]  +
push ecx  +
push edx  +
call memmove_s  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1018E70  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jbe loc_1018E9A  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov ecx [ecx] +
dec [ebp+arg_4]  +
mov [eax] ecx +
add eax 4 +
cmp [ebp+arg_4] 0 +
ja loc_1018E87  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1018EB7  +
cmp ecx 7FFFFFFFh +
jbe loc_1018EBC  +
mov eax 80070057h +
test eax eax +
jl loc_1018EF9  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1018EE9  +
cmp eax esi +
ja loc_1018EE9  +
jnz loc_1018EF4  +
jmp loc_1018EEE  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1018F16  +
cmp edx 7FFFFFFFh +
jbe loc_1018F1B  +
mov eax 0C000000Dh +
test eax eax +
jl loc_1018F31  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1017C47  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_1018F51  +
cmp edx 7FFFFFFFh +
jbe loc_1018F56  +
mov eax 0C000000Dh +
test eax eax +
jl loc_1018F6C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1017C47  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_1017C1A  +
test eax eax +
jl loc_1018FAB  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1017C47  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 7FFFFFFFh +
push edi  +
shr esi 1 +
push ebx  +
lea eax [ebp+arg_4] +
mov edx esi +
call sub_1017C1A  +
test eax eax +
jl loc_1018FF0  +
mov eax [ebp+arg_4] +
push edi  +
mov edx esi +
sub edx eax +
lea ecx [ebx+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1017C47  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_1017C1A  +
test eax eax +
jl loc_1019042  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_101902A  +
mov eax 0C000000Dh +
jmp loc_1019042  +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
mov edx [ebp+arg_4] +
sub edx eax +
lea ecx [esi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1017C47  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_101906E  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_101906E  +
call sub_1017BC5  +
jmp loc_1019073  +
mov eax 0C000000Dh +
test eax eax +
jge loc_101907E  +
test edi edi +
jz loc_101907E  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
shr edx 1 +
test eax eax +
jz loc_10190B1  +
cmp edx 7FFFFFFFh +
ja loc_10190B1  +
push edi  +
lea edi [ebp+arg_4] +
call sub_1017BC5  +
pop edi  +
jmp loc_10190B6  +
mov eax 0C000000Dh +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_10190CD  +
test eax eax +
jl loc_10190CA  +
mov edx [ebp+arg_4] +
add edx edx +
mov [ecx] edx +
jmp loc_10190CD  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_1017D43  +
push offset dword_102D668  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 670h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor eax eax +
push 206h  +
push eax  +
mov word ptr [ebp+var_20C] ax +
lea eax [ebp-20Ah] +
push eax  +
call memset  +
or [ebp+hFindFile] 0FFFFFFFFh +
add esp 0Ch +
mov edi 104h +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101E3E2  +
test eax eax +
jz loc_1019302  +
push ebx  +
push esi  +
call sub_101FC22  +
mov esi eax +
mov [ebp+var_66C] esi +
test esi esi +
jz loc_10192D5  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10192D5  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_10192D5  +
mov ebx [eax+0Ch] +
lea eax [ebp+var_20C] +
push eax  +
push offset aS  +
lea eax [ebp+FileName] +
push edi  +
push eax  +
call sub_1018EA1  +
add esp 10h +
test eax eax +
jl loc_10192E1  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_10192E1  +
push 4  +
pop esi  +
mov ecx offset a_ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10191F9  +
test dx dx +
jz loc_10191F5  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10191F9  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_10191D5  +
xor eax eax +
jmp loc_10191FE  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10192B2  +
mov ecx offset a__ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1019235  +
test dx dx +
jz loc_1019231  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1019235  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_1019211  +
xor eax eax +
jmp loc_101923A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10192B2  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push offset aSS  +
lea eax [ebp+FileName] +
push edi  +
push eax  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_10192B2  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jnz loc_101927D  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
jmp loc_10192B2  +
lea eax [ebp+var_670] +
push eax  +
lea eax [ebp+FindFileData.cFileName] +
push offset aRc4u  +
push eax  +
call ds:__imp_swscanf  +
add esp 0Ch +
cmp eax 1 +
jnz loc_10192A6  +
cmp [ebp+var_670] ebx +
jz loc_10192B2  +
lea eax [ebp+FileName] +
push eax  +
call sub_101E5B8  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_10191CA  +
mov esi [ebp+var_66C] +
jmp loc_10192E1  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101E5B8  +
test esi esi +
jz loc_10192EB  +
push esi  +
call sub_101FF94  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
pop esi  +
pop ebx  +
jz loc_1019302  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101C23D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov [ebp+var_8] eax +
mov [ebp+arg_0] ebx +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
cmp ebx eax +
jz loc_101943E  +
cmp [ebp+arg_4] eax +
jz loc_101943E  +
cmp [ebp+arg_8] eax +
jz loc_101934E  +
cmp [ebp+arg_C] eax +
jz loc_101943E  +
lea eax [ebp+var_4] +
push eax  +
mov esi 7FFFFFFFh +
push esi  +
push ebx  +
call sub_101904C  +
test eax eax +
jl loc_101943E  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call sub_101904C  +
test eax eax +
jl loc_101943E  +
lea eax [ebp+var_10] +
push eax  +
push esi  +
mov esi offset aCulturename +
push esi  +
call sub_101904C  +
test eax eax +
jl loc_101943E  +
mov eax [ebp+var_4] +
push edi  +
mov edi ds:__imp_wcsstr +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
jmp loc_10193B2  +
mov ecx [ebp+var_C] +
sub ecx [ebp+var_10] +
push esi  +
add [ebp+var_4] ecx +
add eax 2 +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10193A4  +
cmp [ebp+arg_8] 0 +
jz loc_1019424  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_4] +
jbe loc_101942B  +
jmp loc_10193FF  +
mov eax ebx +
sub eax [ebp+arg_0] +
sar eax 1 +
push eax  +
push [ebp+arg_0]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1018FFC  +
test eax eax +
jl loc_101942B  +
push [ebp+arg_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1018F75  +
test eax eax +
jl loc_101942B  +
mov eax [ebp+var_10] +
lea ebx [ebx+eax*2] +
mov [ebp+arg_0] ebx +
push esi  +
push ebx  +
call edi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_10193CA  +
mov eax [ebp+arg_0] +
cmp word ptr [eax] 0 +
jz loc_1019424  +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1018F75  +
test eax eax +
jl loc_101942B  +
mov [ebp+var_8] 1 +
mov eax [ebp+arg_10] +
pop edi  +
test eax eax +
jz loc_1019439  +
mov ecx [ebp+var_4] +
inc ecx  +
mov [eax] ecx +
mov eax [ebp+var_8] +
jmp loc_1019440  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jz loc_101957D  +
cmp [ebp+arg_4] ebx +
jz loc_101957D  +
mov edi [ebp+arg_8] +
cmp edi ebx +
jz loc_101957D  +
cmp [edi] ebx +
jnz loc_101957D  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
mov esi 7FFFFFFFh +
push esi  +
push [ebp+arg_0]  +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
call sub_101904C  +
test eax eax +
jl loc_101955B  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call sub_101904C  +
test eax eax +
jl loc_101955B  +
lea eax [ebp+var_10] +
push eax  +
push esi  +
mov esi offset aCulturename +
push esi  +
call sub_101904C  +
test eax eax +
jl loc_101955B  +
mov ebx [ebp+var_8] +
mov edi ds:__imp_wcsstr +
push esi  +
push [ebp+arg_0]  +
jmp loc_10194E9  +
mov ecx [ebp+var_C] +
sub ecx [ebp+var_10] +
push esi  +
add ebx ecx +
add eax 2 +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10194DC  +
mov eax large fs:18h +
mov eax [eax+30h] +
lea esi [ebx+1] +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
xor ebx ebx +
test edi edi +
jz loc_1019558  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1019314  +
test eax eax +
jz loc_101953D  +
push esi  +
push edi  +
call sub_1017DF1  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
cmp eax ebx +
jz loc_101953D  +
mov [ebp+var_4] 1 +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
cmp [ebp+var_4] ebx +
jnz loc_1019577  +
xor ebx ebx +
mov edi [ebp+arg_8] +
mov eax [edi] +
cmp eax ebx +
jz loc_1019577  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov [edi] ebx +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_101957F  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+18h] 10h +
mov eax [ebp+arg_0] +
mov [ecx+14h] eax +
jb loc_10195A0  +
mov ecx [ecx+4] +
jmp loc_10195A3  +
add ecx 4 +
mov byte ptr [ecx+eax] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018D82  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018DA4  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018DC6  +
add esp 14h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018DFB  +
add esp 14h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018E25  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018E79  +
add esp 10h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_10196BE  +
push esi  +
push [ebp+arg_8]  +
call sub_1018E5D  +
add [ebp+arg_8] 4 +
add esi 4 +
cmp esi [ebp+arg_4] +
jnz loc_10196AE  +
mov eax [ebp+arg_8] +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jz loc_101978A  +
cmp [ebp+arg_4] ebx +
jz loc_101978A  +
mov esi [ebp+arg_8] +
cmp esi ebx +
jz loc_101978A  +
push edi  +
mov edi ds:RtlFreeHeap +
cmp [esi] bx +
jz loc_101976D  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_4] +
push esi  +
push dword ptr [eax]  +
call sub_101944B  +
test eax eax +
jz loc_101976D  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call sub_1018965  +
test eax eax +
jnz loc_1019766  +
cmp [ebp+var_4] ebx +
jz loc_1019749  +
push [ebp+var_4]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push dword ptr [eax+18h]  +
call edi  +
mov [ebp+var_4] ebx +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101974E  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp esi ebx +
jnz loc_1019705  +
jmp loc_101976D  +
mov [ebp+var_8] 1 +
cmp [ebp+var_4] ebx +
jz loc_1019784  +
push [ebp+var_4]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push dword ptr [eax+18h]  +
call edi  +
mov eax [ebp+var_8] +
pop edi  +
jmp loc_101978C  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
push edi  +
test esi esi +
jz loc_1019848  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1019848  +
mov eax [esi+10h] +
test eax 1400h +
jz loc_10197CF  +
push dword_1034BF4  +
push esi  +
push edi  +
call sub_10196D0  +
inc ebx  +
test dword ptr [esi+10h] 1800h +
jz loc_10197FA  +
push dword_1034BFC  +
push esi  +
push edi  +
call sub_10196D0  +
test eax eax +
jnz loc_10197FA  +
test ebx ebx +
jnz loc_10197FA  +
push dword_1034BF4  +
push esi  +
push edi  +
call sub_10196D0  +
test dword ptr [esi+10h] 1000h +
jz loc_1019810  +
push dword_1034BF8  +
push esi  +
push edi  +
call sub_10196D0  +
test dword ptr [esi+10h] 1C00h +
jnz loc_1019843  +
mov eax dword_1034BF8 +
test eax eax +
jz loc_1019825  +
push eax  +
jmp loc_101982B  +
push dword_1034BFC  +
push esi  +
push edi  +
call sub_10196D0  +
test eax eax +
jnz loc_1019843  +
push dword_1034BF4  +
push esi  +
push edi  +
call sub_10196D0  +
xor eax eax +
inc eax  +
jmp loc_101984A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_101988A  +
cmp dword ptr [esi+18h] 10h +
jb loc_101988A  +
cmp [ebp+arg_4] 0 +
lea eax [esi+4] +
push edi  +
mov edi [eax] +
jbe loc_1019882  +
push [ebp+arg_4]  +
push edi  +
push 10h  +
push eax  +
call sub_10195B0  +
push edi  +
call sub_101BD55  +
pop ecx  +
pop edi  +
push [ebp+arg_4]  +
mov ecx esi +
mov dword ptr [esi+18h] 0Fh +
call sub_101958A  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+4] eax +
and dword ptr [esi+8] 0 +
cmp ecx [esi+4] +
jz loc_10198D2  +
push edi  +
mov edi [ecx] +
push ecx  +
call sub_101BD55  +
pop ecx  +
mov ecx edi +
cmp edi [esi+4] +
jnz loc_10198C1  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp [esi+14h] edi +
jnb loc_10198EF  +
call loc_101BE70  +
mov eax [esi+14h] +
sub eax edi +
cmp eax [ebp+arg_4] +
jnb loc_10198FC  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jbe loc_101993F  +
mov ecx [esi+18h] +
push ebx  +
lea edx [esi+4] +
cmp ecx 10h +
jb loc_1019912  +
mov ebx [edx] +
jmp loc_1019914  +
mov ebx edx +
cmp ecx 10h +
jb loc_101991B  +
mov edx [edx] +
sub eax [ebp+arg_4] +
add ebx edi +
add ebx [ebp+arg_4] +
push eax  +
push ebx  +
sub ecx edi +
push ecx  +
add edx edi +
push edx  +
call sub_10195D2  +
mov eax [esi+14h] +
sub eax [ebp+arg_4] +
mov ecx esi +
push eax  +
call sub_101958A  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_catch  +
mov edi ecx +
mov [ebp-18h] edi +
mov esi [ebp+8] +
or esi 0Fh +
cmp esi 0FFFFFFFEh +
jbe loc_101998B  +
mov esi [ebp+8] +
jmp loc_10199B0  +
xor edx edx +
push 3  +
mov eax esi +
pop ebx  +
div  ebx +
mov ecx [edi+18h] +
mov [ebp-14h] ecx +
shr dword ptr [ebp-14h] 1 +
mov edx [ebp-14h] +
cmp eax edx +
jnb loc_10199B0  +
push 0FFFFFFFEh  +
pop eax  +
sub eax edx +
cmp ecx eax +
ja loc_10199B0  +
lea esi [edx+ecx] +
and dword ptr [ebp-4] 0 +
push 0  +
lea eax [esi+1] +
push eax  +
call loc_1018CF3  +
mov ebx eax +
jmp loc_10199EB  +
mov eax [ebp+8] +
mov [ebp-10h] esp +
mov [ebp+8] eax +
push 0  +
inc eax  +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_1018CF3  +
mov [ebp-14h] eax +
mov eax offset loc_10199E2 +
retn   +
mov edi [ebp-18h] +
mov esi [ebp+8] +
mov ebx [ebp-14h] +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_1019A0D  +
cmp dword ptr [edi+18h] 10h +
jb loc_10199FC  +
mov eax [edi+4] +
jmp loc_10199FF  +
lea eax [edi+4] +
push dword ptr [ebp+0Ch]  +
push eax  +
lea eax [esi+1] +
push eax  +
push ebx  +
call sub_10195B0  +
push 0  +
push 1  +
mov ecx edi +
call sub_1019856  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
mov [edi+4] ebx +
mov [edi+18h] esi +
call sub_101958A  +
call __EH_epilog3  +
retn 8  +
***
call loc_1018D39  +
test eax eax +
jz loc_1019A59  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz locret_1019A62  +
mov [ecx] eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 1  +
call loc_1018D39  +
mov esi eax +
test esi esi +
jz loc_1019A82  +
mov eax [ebp+arg_0] +
mov [esi] eax +
lea eax [esi+4] +
test eax eax +
jz loc_1019A8E  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+arg_8]  +
lea eax [esi+8] +
push eax  +
call sub_1018E5D  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1019AD8  +
mov eax [ebp+arg_0] +
add esp 18h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
jmp loc_1019AF0  +
mov ecx [eax] +
mov edx [ebp+arg_C] +
mov [edx] ecx +
add [ebp+arg_C] 4 +
add eax 4 +
cmp eax [ebp+arg_8] +
jnz loc_1019AE2  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
mov [eax] ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10196A3  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
jmp loc_1019B4B  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1018E5D  +
dec [ebp+arg_4]  +
add [ebp+arg_0] 4 +
cmp [ebp+arg_4] 0 +
ja loc_1019B39  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jz loc_1019B95  +
push ecx  +
push dword ptr [esi+8]  +
lea eax [ebp+var_4] +
push [ebp+arg_8]  +
push eax  +
call sub_1019AA6  +
mov eax [eax] +
mov ecx [ebp+arg_4] +
add esp 10h +
mov [esi+8] eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
call sub_1018C02  +
mov ecx [edi+14h] +
lea eax [ecx+eax*4] +
mov esi [eax] +
mov ebx [eax+4] +
mov [ebp+var_4] esi +
cmp esi ebx +
jz loc_1019BEB  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [ebp+arg_4] eax +
push [ebp+arg_4]  +
mov ecx edi +
push dword ptr [esi+8]  +
call sub_1017DA9  +
test eax eax +
jz loc_1019BFA  +
mov esi [esi] +
mov [ebp+var_4] esi +
cmp esi ebx +
jnz loc_1019BD1  +
mov ecx [edi+8] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
leave   +
retn 8  +
push dword ptr [esi+8]  +
mov ecx edi +
push [ebp+arg_4]  +
call sub_1017DA9  +
test eax eax +
jz loc_1019C16  +
mov eax [edi+8] +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
jmp loc_1019C19  +
lea eax [ebp+var_4] +
mov ecx [eax] +
jmp loc_1019BEE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0FFFFFFFEh +
jbe loc_1019C42  +
call loc_101BE33  +
cmp [esi+18h] edi +
jnb loc_1019C54  +
push dword ptr [esi+14h]  +
mov ecx esi +
push edi  +
call sub_101996A  +
jmp loc_1019C80  +
cmp [ebp+arg_4] 0 +
jz loc_1019C74  +
cmp edi 10h +
jnb loc_1019C74  +
mov eax [esi+14h] +
cmp edi eax +
jnb loc_1019C68  +
mov eax edi +
push eax  +
push 1  +
mov ecx esi +
call sub_1019856  +
jmp loc_1019C80  +
test edi edi +
jnz loc_1019C80  +
push edi  +
mov ecx esi +
call sub_101958A  +
xor eax eax +
cmp eax edi +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101967A  +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1019B32  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0  +
push 1  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1011B00 +
call sub_1019856  +
mov ecx esi +
pop esi  +
jmp ??1exception@@UAE@XZ  +
***
cmp dword ptr [ecx+24h] 10h +
jb loc_1019D0E  +
mov eax [ecx+10h] +
retn   +
***
lea eax [ecx+10h] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1019CE0  +
test byte ptr [ebp+8] 1 +
jz loc_1019D31  +
push esi  +
call sub_101BD55  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+8] +
mov edx [ecx+4] +
push eax  +
push edx  +
lea eax [ebp+var_4] +
push eax  +
call sub_1019B69  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
cmp [edi+14h] eax +
jnb loc_1019D7F  +
call loc_101BE70  +
mov esi [edi+14h] +
mov eax [ebp+arg_4] +
sub esi eax +
cmp [ebp+arg_8] esi +
jnb loc_1019D8F  +
mov esi [ebp+arg_8] +
mov ecx ebx +
cmp ebx edi +
jnz loc_1019DAD  +
push 0FFFFFFFFh  +
add esi eax +
push esi  +
call sub_10198D9  +
push [ebp+arg_4]  +
mov ecx ebx +
push 0  +
call sub_10198D9  +
jmp loc_1019DED  +
push 0  +
push esi  +
call sub_1019C2C  +
test al al +
jz loc_1019DED  +
cmp dword ptr [edi+18h] 10h +
jb loc_1019DC4  +
mov edi [edi+4] +
jmp loc_1019DC7  +
add edi 4 +
mov ecx [ebx+18h] +
cmp ecx 10h +
jb loc_1019DD4  +
mov eax [ebx+4] +
jmp loc_1019DD7  +
lea eax [ebx+4] +
mov edx [ebp+arg_4] +
push esi  +
add edi edx +
push edi  +
push ecx  +
push eax  +
call sub_10195B0  +
push esi  +
mov ecx ebx +
call sub_101958A  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push ecx  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_1019C93  +
lea eax [edi+esi*4] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_1018C4B  +
test al al +
jz loc_1019E55  +
cmp dword ptr [esi+18h] 10h +
jb loc_1019E42  +
mov eax [esi+4] +
jmp loc_1019E45  +
lea eax [esi+4] +
push [ebp+arg_4]  +
sub edi eax +
push edi  +
push esi  +
mov ecx esi +
call sub_1019D65  +
jmp loc_1019E8C  +
push 0  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1019C2C  +
test al al +
jz loc_1019E8A  +
mov ecx [esi+18h] +
cmp ecx 10h +
jb loc_1019E72  +
mov eax [esi+4] +
jmp loc_1019E75  +
lea eax [esi+4] +
push [ebp+arg_4]  +
push edi  +
push ecx  +
push eax  +
call sub_10195B0  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_101958A  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019A4A  +
and dword ptr [esi+8] 0 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push ecx  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_1019CB2  +
lea eax [edi+esi*4] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+4] +
jmp loc_1019F02  +
mov eax [esi] +
test eax eax +
jz loc_1019EFF  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
add esi 4 +
cmp esi [edi+8] +
jnz loc_1019EE4  +
mov ecx edi +
call sub_1019D47  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push edi  +
mov edi ecx +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
cmp [ebp+arg_0] eax +
jz loc_1019FBE  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
call sub_101904C  +
test eax eax +
jl loc_1019FBE  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push esi  +
mov esi [ebp+var_4] +
lea ecx [esi+esi+2] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov ebx eax +
mov [ebp+var_C] ebx +
test ebx ebx +
jz loc_1019FBC  +
push [ebp+arg_0]  +
inc esi  +
push esi  +
push ebx  +
call sub_1018F00  +
test eax eax +
jl loc_1019FA7  +
push esi  +
push ebx  +
call _wcsupr_s  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [edi+10h] +
call sub_1019BA4  +
mov ecx [ebp+var_10] +
xor eax eax +
cmp ecx [edi+18h] +
setnz al  +
mov [ebp+var_8] eax +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop esi  +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_14] edi +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_101A159  +
cmp [eax+1Ch] edi +
jz loc_101A159  +
cmp [eax+18h] edi +
jz loc_101A159  +
cmp [ebp+arg_4] edi +
jz loc_101A159  +
mov ecx offset aSystemroot +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_101A011  +
sub eax esi +
sar eax 1 +
mov edi offset a?? +
mov ebx eax +
mov eax edi +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_101A02B  +
mov esi ds:__imp__wcsnicmp +
push ebx  +
sub eax edx +
push ecx  +
push [ebp+arg_4]  +
sar eax 1 +
mov [ebp+var_C] eax +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_101A099  +
mov ecx [ebp+arg_8] +
push 0Eh  +
pop eax  +
sub eax ebx +
lea esi [ecx+eax*2] +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_101A159  +
push offset aSystemroot_0  +
push esi  +
push edi  +
call sub_1018F3A  +
mov eax [ebp+arg_4] +
lea eax [eax+ebx*2] +
push eax  +
push esi  +
push edi  +
call sub_1018FB6  +
mov [ebp+var_4] edi +
jmp loc_101A0B5  +
mov ebx [ebp+var_C] +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
call esi  +
mov esi [ebp+arg_8] +
add esp 0Ch +
test eax eax +
jnz loc_101A0B5  +
lea eax [ebx+ebx] +
add edi eax +
sub esi eax +
test edi edi +
jz loc_101A122  +
shr esi 1 +
push esi  +
push edi  +
call sub_1017DF1  +
mov ebx eax +
test ebx ebx +
jz loc_101A125  +
push ebx  +
mov ecx offset unk_1034C20 +
call sub_1019F19  +
cmp eax 1 +
jnz loc_101A119  +
mov eax [ebp+arg_0] +
push dword ptr [eax+18h]  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
call sub_102667F  +
test eax eax +
jz loc_101A125  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset aDontcache  +
push 0  +
push 0  +
push ebx  +
push [ebp+var_10]  +
lea esi [ebp+var_24] +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_102151F  +
test eax eax +
jz loc_101A125  +
mov [ebp+var_8] 1 +
jmp loc_101A125  +
mov ebx [ebp+var_14] +
cmp [ebp+var_4] 0 +
mov esi ds:RtlFreeHeap +
jz loc_101A144  +
push [ebp+var_4]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call esi  +
test ebx ebx +
jz loc_101A159  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push 0  +
push dword ptr [eax+18h]  +
call esi  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
xor ebx ebx +
push 206h  +
mov [ebp+FileName] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
mov [ebp+var_228] edi +
mov [ebp+var_22C] ebx +
call memset  +
add esp 0Ch +
mov [ebp+var_214] ebx +
mov [ebp+var_220] ebx +
cmp edi ebx +
jnz loc_101A1C5  +
xor eax eax +
jmp loc_101A410  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jz loc_101A3CC  +
push esi  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call esi  +
push offset aGetnextfilemap  +
push [ebp+hLibModule]  +
mov [ebp+var_210] eax +
call esi  +
push offset aClosefilemapen  +
push [ebp+hLibModule]  +
mov [ebp+var_224] eax +
call esi  +
mov [ebp+var_220] eax +
cmp [ebp+var_210] ebx +
jz loc_101A3CB  +
cmp [ebp+var_224] ebx +
jz loc_101A3CB  +
cmp eax ebx +
jz loc_101A3CB  +
lea eax [ebp+var_214] +
push eax  +
push ebx  +
push ebx  +
call [ebp+var_210]  +
test eax eax +
jz loc_101A3CB  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push 103h  +
push dword ptr [edi+4]  +
call sub_101E8C1  +
test eax eax +
jz loc_101A3CB  +
mov eax [edi+1Ch] +
cmp eax ebx +
jz loc_101A27E  +
push eax  +
call sub_1022C12  +
push 20000h  +
push 32h  +
push 1388h  +
push 3  +
push dword ptr [edi+8]  +
lea eax [ebp+FileName] +
push eax  +
call sub_10243A4  +
mov [edi+1Ch] eax +
cmp eax ebx +
jz loc_101A3CB  +
mov eax offset a_mui +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101A2AE  +
mov edi ds:RtlAllocateHeap +
sub eax ecx +
mov ecx large fs:18h +
sar eax 1 +
mov [ebp+var_230] eax +
mov eax 100h +
push eax  +
mov [ebp+var_210] eax +
mov eax [ecx+30h] +
push 8  +
push dword ptr [eax+18h]  +
call edi  +
mov esi eax +
cmp esi ebx +
jz loc_101A3CB  +
mov [ebp+var_21C] ebx +
jmp loc_101A328  +
mov eax [esi] +
shr eax 1 +
sub eax [ebp+var_230] +
push offset a_mui  +
lea eax [esi+eax*2+4] +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A328  +
push dword ptr [esi]  +
lea eax [esi+4] +
push eax  +
push [ebp+var_228]  +
call sub_1019FCB  +
lea eax [ebp+var_21C] +
push eax  +
push esi  +
push [ebp+var_210]  +
push [ebp+var_214]  +
push ebx  +
call [ebp+var_224]  +
test eax eax +
jnz loc_101A2F7  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_101A393  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax large fs:18h +
push [ebp+var_21C]  +
mov eax [eax+30h] +
push 8  +
push dword ptr [eax+18h]  +
call edi  +
mov esi eax +
cmp esi ebx +
jz loc_101A3CB  +
mov eax [ebp+var_21C] +
mov [ebp+var_210] eax +
jmp loc_101A2EF  +
mov edi [ebp+var_228] +
push dword ptr [edi+1Ch]  +
call sub_1023FDC  +
push dword ptr [edi+1Ch]  +
call sub_10238BD  +
mov [ebp+var_22C] 1 +
cmp esi ebx +
jz loc_101A3CB  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push ebx  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop esi  +
cmp [ebp+var_214] ebx +
jz loc_101A3F6  +
cmp [ebp+hLibModule] ebx +
jz loc_101A40A  +
cmp [ebp+var_220] ebx +
jz loc_101A3F6  +
push [ebp+var_214]  +
call [ebp+var_220]  +
mov [ebp+var_214] ebx +
cmp [ebp+hLibModule] ebx +
jz loc_101A40A  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov eax [ebp+var_22C] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_101958A  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1019D65  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
push ebx  +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_101A461  +
sub eax edx +
push eax  +
push [ebp+arg_0]  +
call sub_1019E21  +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0exception@@QAE@XZ  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1011B00 +
call sub_101A425  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov edi [ebp+8] +
push edi  +
call ??0exception@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
add edi 0Ch +
push edi  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1011B00 +
call sub_101A425  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101A4A3  +
mov dword ptr [esi] offset off_1011BBC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp sub_1019CE0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1011BBC +
call sub_1019CE0  +
test byte ptr [ebp+8] 1 +
jz loc_101A56E  +
push esi  +
call sub_101BD55  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101A4DD  +
mov dword ptr [esi] offset off_1011BBC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_101958A  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101A455  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 44h  +
mov eax offset loc_102D543 +
call __EH_prolog3  +
push offset aVectorTTooLong  +
lea ecx [ebp-28h] +
call sub_101A59C  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_101A51C  +
push offset dword_102D774  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
call __EH_prolog3  +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov esi 3FFFFFFFh +
sub esi eax +
cmp esi edx +
jnb loc_101A64D  +
push offset aListTTooLong  +
lea ecx [ebp-28h] +
call sub_101A59C  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_101A51C  +
push offset dword_102D774  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
add eax edx +
mov [ecx+8] eax +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_101A4DD  +
push offset dword_102D7F8  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_101A57A  +
push offset dword_102D774  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov [esi+4] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
cmp edi eax +
jnz loc_101A6E3  +
xor al al +
jmp loc_101A705  +
cmp edi 3FFFFFFFh +
jbe loc_101A6F0  +
call loc_101A5C8  +
push eax  +
push edi  +
call loc_1018CA8  +
mov [esi+4] eax +
mov [esi+8] eax +
lea eax [eax+edi*4] +
mov [esi+0Ch] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_8] +
mov eax [eax] +
push esi  +
push edi  +
mov esi ecx +
mov [ebp+var_4] eax +
call sub_1018BEA  +
mov edi [ebp+arg_4] +
mov [ebp+arg_8] eax +
test edi edi +
jz loc_101A860  +
mov ecx esi +
call sub_1018C33  +
mov ecx 3FFFFFFFh +
mov edx ecx +
sub edx eax +
cmp edx edi +
jnb loc_101A74E  +
call loc_101A5C8  +
add eax edi +
push ebx  +
cmp [ebp+arg_8] eax +
jnb loc_101A7D5  +
mov edx [ebp+arg_8] +
shr edx 1 +
sub ecx edx +
cmp ecx [ebp+arg_8] +
jnb loc_101A768  +
and [ebp+arg_8] 0 +
jmp loc_101A76B  +
add [ebp+arg_8] edx +
cmp [ebp+arg_8] eax +
jnb loc_101A773  +
mov [ebp+arg_8] eax +
push 0  +
push [ebp+arg_8]  +
call loc_1018CA8  +
push esi  +
mov ebx eax +
mov eax [esi+4] +
push ebx  +
push [ebp+arg_0]  +
push eax  +
call sub_101964C  +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
push eax  +
mov ecx esi +
call sub_1019DFB  +
push esi  +
push eax  +
push dword ptr [esi+8]  +
push [ebp+arg_0]  +
call sub_101964C  +
mov ecx esi +
call sub_1018C33  +
add edi eax +
mov eax [esi+4] +
test eax eax +
jz loc_101A7BE  +
push eax  +
call sub_101BD55  +
pop ecx  +
mov eax [ebp+arg_8] +
lea eax [ebx+eax*4] +
mov [esi+0Ch] eax +
lea eax [ebx+edi*4] +
mov [esi+8] eax +
mov [esi+4] ebx +
jmp loc_101A85F  +
mov eax [esi+8] +
mov ecx [ebp+arg_0] +
mov edx eax +
sub edx ecx +
sar edx 2 +
mov [ebp+arg_8] eax +
push esi  +
cmp edx edi +
jnb loc_101A82E  +
mov ebx edi +
shl ebx 2 +
lea edx [ebx+ecx] +
push edx  +
push eax  +
push ecx  +
call sub_101964C  +
mov eax [esi+8] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx eax +
sub ecx [ebp+arg_0] +
sar ecx 2 +
sub edi ecx +
push edi  +
push eax  +
mov ecx esi +
call sub_1019DFB  +
add [esi+8] ebx +
mov esi [esi+8] +
lea eax [ebp+var_4] +
push eax  +
sub esi ebx +
push esi  +
push [ebp+arg_0]  +
call sub_1018C88  +
add esp 0Ch +
jmp loc_101A85F  +
push eax  +
mov ebx eax +
shl edi 2 +
push eax  +
sub ebx edi +
push ebx  +
call sub_101964C  +
push [ebp+arg_8]  +
mov [esi+8] eax +
push ebx  +
push [ebp+arg_0]  +
call sub_10195F4  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_0] +
add edi eax +
push edi  +
push eax  +
call sub_1018C88  +
add esp 18h +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
lea edi [eax+4] +
push dword ptr [edi]  +
mov ebx ecx +
push eax  +
call sub_1019A68  +
push 1  +
mov ecx ebx +
mov esi eax +
call sub_101A605  +
mov [edi] esi +
mov eax [esi+4] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov eax [ebp+10h] +
mov eax [eax] +
mov [ebp-14h] eax +
call sub_1018BEA  +
mov edi [ebp+0Ch] +
mov [ebp+10h] eax +
test edi edi +
jz loc_101AA2F  +
mov ecx esi +
call sub_1018C33  +
mov ecx 3FFFFFFFh +
mov edx ecx +
sub edx eax +
cmp edx edi +
jnb loc_101A8E6  +
call loc_101A5C8  +
add eax edi +
cmp [ebp+10h] eax +
jnb loc_101A998  +
mov edx [ebp+10h] +
shr edx 1 +
sub ecx edx +
cmp ecx [ebp+10h] +
jnb loc_101A903  +
and dword ptr [ebp+10h] 0 +
jmp loc_101A906  +
add [ebp+10h] edx +
cmp [ebp+10h] eax +
jnb loc_101A90E  +
mov [ebp+10h] eax +
push 0  +
push dword ptr [ebp+10h]  +
call loc_1018CA8  +
and dword ptr [ebp-4] 0 +
mov ebx eax +
mov eax [esi+4] +
push esi  +
push ebx  +
push dword ptr [ebp+8]  +
mov [ebp+0Ch] ebx +
push eax  +
call sub_1019B04  +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
push eax  +
mov ecx esi +
call sub_1019EB3  +
mov ecx [esi+8] +
push esi  +
push eax  +
push ecx  +
push dword ptr [ebp+8]  +
call sub_1019B04  +
mov ecx esi +
call sub_1018C33  +
add edi eax +
mov eax [esi+4] +
test eax eax +
jz loc_101A96F  +
mov ecx [esi+8] +
jmp loc_101A962  +
add eax 4 +
cmp eax ecx +
jnz loc_101A95F  +
push dword ptr [esi+4]  +
call sub_101BD55  +
pop ecx  +
mov eax [ebp+10h] +
lea eax [ebx+eax*4] +
mov [esi+0Ch] eax +
lea eax [ebx+edi*4] +
mov [esi+8] eax +
mov [esi+4] ebx +
jmp loc_101AA2F  +
push dword ptr [ebp+0Ch]  +
call sub_101BD55  +
pop ecx  +
push 0  +
push 0  +
call _CxxThrowException  +
mov ebx [esi+8] +
mov ecx [ebp+8] +
mov eax ebx +
sub eax ecx +
sar eax 2 +
push esi  +
cmp eax edi +
jnb loc_101A9FA  +
mov eax edi +
shl eax 2 +
mov [ebp+10h] eax +
add eax ecx +
push eax  +
push ebx  +
push ecx  +
call sub_1019B04  +
mov eax [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx eax +
sub ecx [ebp+8] +
mov dword ptr [ebp-4] 2 +
sar ecx 2 +
sub edi ecx +
push edi  +
push eax  +
mov ecx esi +
call sub_1019EB3  +
mov eax [ebp+10h] +
add [esi+8] eax +
mov esi [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
sub esi eax +
push esi  +
push dword ptr [ebp+8]  +
call sub_1018C88  +
add esp 0Ch +
jmp loc_101AA2F  +
push ebx  +
shl edi 2 +
mov [ebp+10h] ebx +
sub [ebp+10h] edi +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1019B04  +
push ebx  +
push dword ptr [ebp+10h]  +
mov [esi+8] eax +
push dword ptr [ebp+8]  +
call sub_1019620  +
lea eax [ebp-14h] +
push eax  +
mov eax [ebp+8] +
add edi eax +
push edi  +
push eax  +
call sub_1018C88  +
add esp 18h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
push dword ptr [ebp+8]  +
call sub_101A6C4  +
test al al +
jz loc_101AA71  +
push dword ptr [ebp+0Ch]  +
mov eax [esi+4] +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
push eax  +
mov ecx esi +
call sub_1019EB3  +
mov [esi+8] eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
call sub_1018C33  +
test eax eax +
jnz loc_101AAB0  +
xor esi esi +
jmp loc_101AAB9  +
mov esi [ebp+arg_4] +
sub esi [edi+4] +
sar esi 2 +
push [ebp+arg_8]  +
mov ecx edi +
push 1  +
push [ebp+arg_4]  +
call sub_101A710  +
mov eax [edi+4] +
lea ecx [eax+esi*4] +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101A86B  +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1018C33  +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jbe loc_101AB2C  +
mov edx [esi+8] +
push edi  +
lea edi [ebp+arg_4] +
push edi  +
sub ecx eax +
push ecx  +
push edx  +
mov ecx esi +
call sub_101A8A4  +
pop edi  +
jmp loc_101AB44  +
jnb loc_101AB44  +
mov eax [esi+8] +
mov edx [esi+4] +
push eax  +
lea ecx [edx+ecx*4] +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx esi +
call sub_1019B69  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
mov [ebp+arg_4] eax +
mov eax [esi+8] +
push eax  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_1019B69  +
mov eax [esi+4] +
lea ecx [ebp+arg_4] +
push ecx  +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
call sub_101A8A4  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
call sub_1018C33  +
mov ecx esi +
mov edi eax +
call sub_1018BEA  +
push [ebp+arg_0]  +
cmp edi eax +
mov eax [esi+8] +
mov ecx esi +
jnb loc_101ABBE  +
push 1  +
push eax  +
call sub_1019DFB  +
mov [esi+8] eax +
jmp loc_101ABC8  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101AA9A  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+8] +
mov al [eax] +
push dword ptr [ebp+0Ch]  +
lea ecx [esi+4] +
mov [esi] al +
call sub_1019E97  +
mov eax [esi+8] +
and dword ptr [ebp-4] 0 +
mov [ebp+8] eax +
lea eax [ebp+8] +
push eax  +
push 9  +
lea ecx [esi+10h] +
call sub_101AA3C  +
xor eax eax +
inc eax  +
mov [esi+20h] eax +
mov [esi+24h] eax +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
cmp ecx esi +
jz loc_101AC41  +
push edi  +
mov edi [ebp+arg_10] +
push edi  +
call sub_101A605  +
sub [esi+8] edi +
pop edi  +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
mov ecx [ebp+arg_C] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
mov eax [eax+4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
mov ecx [eax+4] +
mov edx [edx+4] +
mov [eax+4] edx +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
mov edx [ebp+arg_C] +
mov [edx+4] eax +
mov eax [ebp+arg_8] +
mov [eax+4] ecx +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
push edi  +
mov edi ecx +
jnz loc_101ACA5  +
xor eax eax +
jmp loc_101AD00  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
call sub_101904C  +
test eax eax +
jl loc_101ACA1  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
mov esi [ebp+var_4] +
lea ecx [esi+esi+2] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_101ACED  +
push [ebp+arg_0]  +
inc esi  +
push esi  +
push eax  +
call sub_1018F00  +
test eax eax +
jge loc_101ACF1  +
xor eax eax +
jmp loc_101ACFF  +
lea eax [ebp+var_8] +
push eax  +
mov ecx edi +
call sub_101AB8E  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
xor ecx ecx +
push esi  +
mov [ebp-4] ecx +
cmp eax ecx +
jnz loc_101AD3E  +
inc dword_1034BF0  +
cmp [ebp+8] ecx +
jz loc_101AD39  +
push dword ptr [ebp+8]  +
mov ecx offset unk_1034C20 +
call sub_101AC8D  +
test eax eax +
jz loc_101ADB1  +
xor eax eax +
inc eax  +
jmp loc_101ADB1  +
push ebx  +
mov ebx [eax+4] +
push edi  +
mov edi [eax] +
cmp ebx ecx +
jz loc_101ADAD  +
cmp edi ecx +
jz loc_101ADAD  +
cmp [ebp+8] ecx +
jz loc_101ADAD  +
mov esi [edi] +
cmp esi ecx +
jz loc_101ADAD  +
cmp [esi] cx +
jz loc_101ADAD  +
lea eax [ebp+0Ch] +
push eax  +
push 104h  +
push esi  +
call sub_101904C  +
test eax eax +
jl loc_101ADAD  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+8]  +
push esi  +
call sub_101944B  +
test eax eax +
jz loc_101AD8B  +
push edi  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1018965  +
cmp dword ptr [ebp-4] 0 +
jz loc_101ADA8  +
push dword ptr [ebp-4]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
xor eax eax +
inc eax  +
jmp loc_101ADAF  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A2Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_101AEB8  +
test eax eax +
jz loc_101AEB8  +
push offset aR  +
push eax  +
lea eax [ebp+var_A10] +
lea ecx [ebp+var_A2C] +
push eax  +
mov [ebp+var_A18] ecx +
mov [ebp+var_A14] ebx +
call ds:_wfopen_s  +
add esp 0Ch +
test eax eax +
jnz loc_101AEB8  +
cmp [ebp+var_A10] eax +
jz loc_101AEB8  +
push esi  +
push edi  +
mov edi ds:fgetws +
mov esi 504h +
jmp loc_101AE85  +
push esi  +
lea eax [ebp+var_A0C] +
push eax  +
lea eax [ebp+var_A2C] +
push eax  +
call sub_101883F  +
test eax eax +
jz loc_101AE85  +
push [ebp+Buffer]  +
call sub_1017E79  +
test eax eax +
jz loc_101AE85  +
cmp dword_1034BF0 3 +
ja loc_101AE78  +
lea eax [ebp+var_A18] +
push eax  +
push 28h  +
push offset loc_101AD0A  +
call ds:EnumUILanguagesW  +
jmp loc_101AE85  +
lea eax [ebp+var_A2C] +
push eax  +
push ebx  +
call sub_1019797  +
push [ebp+var_A10]  +
lea eax [ebp+var_A0C] +
push esi  +
push eax  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_101AE32  +
pop edi  +
pop esi  +
cmp [ebp+var_A10] eax +
jz loc_101AEB3  +
push [ebp+var_A10]  +
call ds:fclose  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_101AEBA  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_101AF30  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_101AF30  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jbe loc_101AF2A  +
mov [ebp+var_8] esi +
mov [ebp+var_4] ebx +
push dword ptr [esi+10h]  +
call sub_1017E79  +
test eax eax +
jz loc_101AF24  +
cmp dword_1034BF0 3 +
ja loc_101AF1B  +
lea eax [ebp+var_8] +
push eax  +
push 8  +
push offset loc_101AD0A  +
call ds:EnumUILanguagesW  +
jmp loc_101AF24  +
push [ebp+var_8]  +
push ebx  +
call sub_1019797  +
add esi 14h +
dec edi  +
jnz loc_101AEED  +
xor eax eax +
inc eax  +
pop edi  +
jmp loc_101AF32  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp-1] +
push eax  +
mov esi ecx +
call sub_101ABD3  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov ebx [esi+24h] +
shr eax 2 +
push edi  +
cmp ebx eax +
ja loc_101B068  +
lea edi [esi+10h] +
mov ecx edi +
call sub_1018C33  +
dec eax  +
cmp eax ebx +
ja loc_101AFA0  +
push dword ptr [esi+8]  +
lea eax [eax+eax-1] +
mov [esi+20h] eax +
add eax 2 +
push eax  +
mov ecx edi +
call sub_101AB02  +
jmp loc_101AFAE  +
mov eax [esi+20h] +
cmp eax ebx +
jnb loc_101AFAE  +
lea eax [eax+eax+1] +
mov [esi+20h] eax +
mov eax [esi+20h] +
mov ebx [esi+24h] +
shr eax 1 +
sub ebx eax +
mov eax [esi+14h] +
dec ebx  +
lea eax [eax+ebx*4] +
mov edi [eax] +
cmp edi [eax+4] +
jz loc_101B065  +
push dword ptr [edi+8]  +
mov ecx esi +
call sub_1017D65  +
and eax [esi+20h] +
cmp eax ebx +
jnz loc_101AFDF  +
mov edi [edi] +
jmp loc_101B058  +
mov edx [edi] +
mov [ebp+var_8] edx +
cmp edx [esi+8] +
jz loc_101B033  +
mov [ebp+var_4] ebx +
mov eax ebx +
jmp loc_101B002  +
cmp [ebp+var_4] 0 +
mov ecx [esi+14h] +
mov [eax+ecx] edx +
jz loc_101B00D  +
dec [ebp+var_4]  +
mov eax [ebp+var_4] +
mov ecx [esi+14h] +
shl eax 2 +
cmp edi [eax+ecx] +
jz loc_101AFF0  +
mov eax [esi+8] +
push 0  +
push 0  +
push edx  +
push edi  +
lea ecx [esi+4] +
push ecx  +
push eax  +
call sub_101AC26  +
mov eax [esi+8] +
mov edx [esi+14h] +
mov ecx [esi+24h] +
mov edi [eax+4] +
mov [edx+ecx*4+4] eax +
mov edx [ebp+var_8] +
mov ecx [esi+24h] +
cmp ebx ecx +
jnb loc_101B051  +
mov eax [esi+14h] +
lea eax [eax+ecx*4] +
mov edx [eax] +
cmp edx [esi+8] +
jnz loc_101B04E  +
dec ecx  +
mov [eax] edi +
cmp ebx ecx +
jb loc_101B03A  +
mov edx [ebp+var_8] +
cmp edx [esi+8] +
jz loc_101B065  +
mov edi edx +
mov eax [esi+14h] +
cmp edi [eax+ebx*4+4] +
jnz loc_101AFCA  +
inc dword ptr [esi+24h]  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1018C02  +
mov ebx eax +
mov eax [esi+14h] +
lea eax [eax+ebx*4] +
mov edi [eax+4] +
cmp edi [eax] +
jz loc_101B09F  +
mov edi [edi+4] +
push dword ptr [edi+8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
mov ecx esi +
call sub_1017DA9  +
test eax eax +
jz loc_101B0B3  +
mov eax [esi+14h] +
cmp edi [eax+ebx*4] +
jnz loc_101B081  +
push [ebp+arg_4]  +
lea eax [ebp+arg_4] +
push edi  +
push eax  +
lea ecx [esi+4] +
call sub_101AADE  +
mov ecx [eax] +
jmp loc_101B0E0  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
mov ecx esi +
push dword ptr [edi+8]  +
call sub_1017DA9  +
test eax eax +
jz loc_101B0CA  +
mov edi [edi] +
jmp loc_101B09F  +
mov eax [ebp+arg_0] +
mov [eax] edi +
mov byte ptr [eax+4] 0 +
jmp loc_101B0F1  +
mov eax [esi+14h] +
mov [eax+ebx*4] ecx +
test ebx ebx +
jz loc_101B0E8  +
dec ebx  +
mov eax [esi+14h] +
cmp edi [eax+ebx*4] +
jz loc_101B0D5  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_10198A5  +
mov eax [esi+8] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 9  +
lea ecx [esi+10h] +
call sub_101AB4E  +
xor eax eax +
inc eax  +
mov [esi+20h] eax +
mov [esi+24h] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+18h] +
mov esi [eax] +
cmp esi eax +
jz loc_101B165  +
mov eax [esi+8] +
test eax eax +
jz loc_101B15E  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov esi [esi] +
cmp esi [edi+18h] +
jnz loc_101B142  +
lea ecx [edi+10h] +
call sub_101B0FD  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019ED9  +
test eax eax +
jnz loc_101B188  +
pop esi  +
retn   +
mov ecx esi +
call sub_101B133  +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
call sub_1018C33  +
test eax eax +
jz loc_101B266  +
mov ebx offset off_1031010 +
mov [ebp+var_8] esi +
mov esi [edi+4] +
jmp loc_101B24A  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [esi]  +
push dword ptr [ebx]  +
call sub_101944B  +
test eax eax +
jz loc_101B266  +
lea eax [ebp+var_C] +
push eax  +
push 7FFFFFFFh  +
push [ebp+var_4]  +
call sub_101904C  +
test eax eax +
jl loc_101B26E  +
mov eax [ebp+var_C] +
inc eax  +
push eax  +
push [ebp+var_4]  +
call _wcsupr_s  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea ecx [edi+10h] +
call sub_101AF5D  +
add esi 4 +
cmp esi [edi+8] +
jnz loc_101B1FE  +
add [ebp+var_8] 14h +
add ebx 14h +
cmp [ebp+var_8] 2EB8h +
jb loc_101B1F9  +
mov [ebp+var_10] 1 +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
xor eax eax +
jmp loc_101B269  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push offset dword_1034C00  +
push edi  +
push edi  +
push offset dword_1011800  +
mov [ebp+var_4] 80004005h +
mov [ebp+var_2C] edi +
mov [ebp+var_24] edi +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_20] edi +
mov [ebp+var_28] edi +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_40] 8 +
call ds:EtwEventRegister  +
test eax eax +
jz loc_101B300  +
mov dword_1034C00 edi +
mov dword_1034C04 edi +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov ebx ds:EtwEventWrite +
mov edx ecx +
or edx eax +
jz loc_101B4CC  +
mov esi offset dword_10118F0 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101B356  +
lea eax [ebp+var_64] +
push eax  +
push 1  +
push esi  +
push dword_1034C04  +
mov [ebp+var_64] offset aMcbuilder +
push dword_1034C00  +
mov [ebp+var_60] edi +
mov [ebp+var_5C] 14h +
mov [ebp+var_58] edi +
call ebx  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_101B4CC  +
push offset dword_10118A0  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101B4CC  +
xor eax eax +
inc eax  +
xor esi esi +
xor edi edi +
cmp [ebp+arg_0] eax +
mov [ebp+var_C] esi +
mov [ebp+var_8] eax +
jle loc_101B456  +
mov ecx [ebp+var_8] +
mov eax [ebp+arg_4] +
and [ebp+var_30] 0 +
lea eax [eax+ecx*4] +
lea ecx [ebp+var_30] +
push ecx  +
push 7FFFFFFFh  +
push dword ptr [eax]  +
mov [ebp+var_48] eax +
call sub_1019088  +
test eax eax +
jl loc_101B550  +
mov eax [ebp+var_30] +
inc eax  +
inc eax  +
add edi eax +
lea eax [edi+2] +
cmp eax [ebp+var_C] +
jb loc_101B424  +
lea eax [edi+28h] +
mov [ebp+var_C] eax +
mov eax large fs:18h +
push [ebp+var_C]  +
mov eax [eax+30h] +
test esi esi +
jz loc_101B40F  +
push esi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlReAllocateHeap  +
mov [ebp+var_44] eax +
test eax eax +
jnz loc_101B40A  +
push esi  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov esi [ebp+var_44] +
jmp loc_101B41C  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
test esi esi +
jz loc_101B55C  +
mov eax [ebp+var_48] +
push dword ptr [eax]  +
push [ebp+var_C]  +
push esi  +
call sub_1018FB6  +
push offset asc_1011CC8  +
push [ebp+var_C]  +
push esi  +
call sub_1018FB6  +
add edi 4 +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_0] +
jl loc_101B396  +
test esi esi +
jnz loc_101B484  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0Eh  +
pop edi  +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
test esi esi +
jz loc_101B55C  +
push offset aNull  +
push edi  +
push esi  +
call sub_1018F3A  +
and [ebp+var_80] 0 +
and [ebp+var_78] 0 +
lea eax [ebp+var_84] +
push eax  +
push 1  +
push offset dword_10118A0  +
push dword_1034C04  +
mov [ebp+var_84] esi +
push dword_1034C00  +
mov [ebp+var_7C] edi +
call ebx  +
test esi esi +
jz loc_101B4CA  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
xor edi edi +
xor esi esi +
inc esi  +
cmp [ebp+arg_0] esi +
mov [ebp+var_8] esi +
jle loc_101B5D2  +
mov [ebp+var_C] 2 +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
mov esi [eax+ecx*4] +
lea eax [ebp+var_3C] +
push eax  +
push 7FFFFFFFh  +
push esi  +
mov [ebp+var_3C] edi +
call sub_101904C  +
test eax eax +
jl loc_101B66D  +
cmp [ebp+var_3C] 2 +
jnz loc_101B66D  +
movzx eax word ptr [esi] +
cmp ax 2Dh +
jz loc_101B522  +
cmp ax 2Fh +
jnz loc_101B66D  +
movzx eax word ptr [esi+2] +
push eax  +
call ds:towupper  +
movzx eax ax +
sub eax 43h +
pop ecx  +
jz loc_101B595  +
dec eax  +
jz loc_101B58C  +
sub eax 9 +
jz loc_101B568  +
sub eax 6 +
jnz loc_101B66D  +
mov [ebp+var_24] 1 +
jmp loc_101B5BD  +
mov [ebp+var_4] 57h +
jmp loc_101BC42  +
mov [ebp+var_4] 8 +
jmp loc_101BBCA  +
cmp [ebp+var_1C] edi +
jnz loc_101B66D  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_C] +
jle loc_101B66D  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
mov eax [eax+ecx*4+4] +
mov [ebp+var_1C] eax +
jmp loc_101B5B7  +
mov [ebp+var_2C] 1 +
jmp loc_101B5BD  +
cmp [ebp+var_18] edi +
jnz loc_101B66D  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_C] +
jle loc_101B66D  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
mov eax [eax+ecx*4+4] +
mov [ebp+var_18] eax +
inc [ebp+var_8]  +
inc [ebp+var_C]  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
inc [ebp+var_C]  +
cmp eax [ebp+arg_0] +
jl loc_101B4E2  +
xor esi esi +
inc esi  +
push edi  +
push esi  +
push offset Name  +
call sub_101D001  +
test eax eax +
jz loc_101BBC3  +
push edi  +
push esi  +
push offset aSerestoreprivi  +
call sub_101D001  +
test eax eax +
jz loc_101BBC3  +
push edi  +
push esi  +
push offset aSetakeownershi  +
call sub_101D001  +
test eax eax +
jz loc_101BBC3  +
call sub_101CDCD  +
test eax eax +
jz loc_101B679  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_101B64B  +
mov esi offset dword_1011920 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101B64B  +
push edi  +
push edi  +
push esi  +
push dword_1034C04  +
push dword_1034C00  +
call ebx  +
push offset aSystemLp  +
call sub_101C921  +
push edi  +
push offset aSystem  +
call sub_101D78B  +
call sub_10190FB  +
mov [ebp+var_4] edi +
jmp loc_101BC42  +
mov [ebp+var_4] 57h +
jmp loc_101BBCA  +
lea eax [ebp+var_4C] +
push eax  +
mov [ebp+var_4C] edi +
call sub_101D3A6  +
test eax eax +
jnz loc_101B6CA  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC42  +
mov esi offset dword_1011810 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BC42  +
push edi  +
push edi  +
push esi  +
push dword_1034C04  +
push dword_1034C00  +
call ebx  +
jmp loc_101BC42  +
push 3  +
push 300h  +
push 6  +
push edi  +
push offset aSystem  +
call sub_1021B32  +
mov [ebp+var_10] eax +
cmp eax edi +
jnz loc_101B717  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011820 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BC26  +
push edi  +
push edi  +
jmp loc_101BC17  +
cmp [ebp+var_2C] edi +
jz loc_101B742  +
push eax  +
call sub_1020FC1  +
test eax eax +
jnz loc_101B742  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011830 +
jmp loc_101B6FF  +
cmp [ebp+var_24] edi +
jz loc_101B74F  +
mov [ebp+var_4] edi +
jmp loc_101BC26  +
mov esi offset unk_1034C20 +
mov ecx esi +
call sub_101B178  +
test eax eax +
jnz loc_101B77B  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011890 +
jmp loc_101B6FF  +
push edi  +
push 28h  +
push offset loc_101AD0A  +
call ds:EnumUILanguagesW  +
cmp dword_1034BF0 3 +
jbe loc_101B87B  +
lea eax [ebp+var_20] +
push eax  +
push offset dword_1034BF4  +
call sub_1018555  +
test eax eax +
jz loc_101B8A2  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_1C]  +
push offset dword_1034BFC  +
call sub_101871A  +
test eax eax +
jz loc_101B8A2  +
mov edx dword_1034BFC +
test edx edx +
jz loc_101B8A2  +
mov eax [ebp+var_28] +
cmp [ebp+var_20] eax +
jnz loc_101B815  +
mov esi dword_1034BF4 +
lea ecx [eax+eax] +
mov edi edx +
xor eax eax +
cmps   +
jz loc_101B7F1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_101B810  +
push edx  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
and dword_1034BFC 0 +
mov esi offset unk_1034C20 +
push offset dword_1034BF8  +
xor edi edi +
call sub_10186FF  +
mov ecx esi +
call sub_101B178  +
test eax eax +
jz loc_101B75F  +
mov eax dword_1034BF4 +
cmp eax edi +
jz loc_101B849  +
push eax  +
mov ecx esi +
call sub_101AC8D  +
test eax eax +
jz loc_101B75F  +
mov eax dword_1034BFC +
cmp eax edi +
jz loc_101B862  +
push eax  +
mov ecx esi +
call sub_101AC8D  +
test eax eax +
jz loc_101B75F  +
mov eax dword_1034BF8 +
cmp eax edi +
jz loc_101B87B  +
push eax  +
mov ecx esi +
call sub_101AC8D  +
test eax eax +
jz loc_101B75F  +
mov ecx esi +
call sub_101B1D3  +
test eax eax +
jnz loc_101B8D6  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011890 +
jmp loc_101B8BC  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011840 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BC26  +
push 0  +
push 0  +
jmp loc_101BC17  +
push [ebp+var_10]  +
call sub_101A168  +
test eax eax +
jz loc_101B886  +
mov ecx esi +
call sub_101B178  +
test eax eax +
jz loc_101B886  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov eax [ebp+SystemTimeAsFileTime.dwHighDateTime] +
mov dword_1034C0C eax +
mov eax [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov dword_1034C08 eax +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_38] +
push eax  +
xor edi edi +
push edi  +
push 40h  +
push offset aCachehitstimeo  +
push offset aSystemCurren_0  +
push 80000002h  +
call ds:RegGetValueW  +
test eax eax +
jz loc_101B93B  +
mov [ebp+var_38] 28E44000h +
mov [ebp+var_34] 580h +
mov eax [ebp+var_34] +
cmp dword_1034C0C eax +
ja loc_101B961  +
jb loc_101B953  +
mov ecx dword_1034C08 +
cmp ecx [ebp+var_38] +
jnb loc_101B961  +
mov dword_1034C08 edi +
mov dword_1034C0C edi +
jmp loc_101B970  +
mov ecx [ebp+var_38] +
sub dword_1034C08 ecx +
sbb dword_1034C0C eax +
mov esi [ebp+var_10] +
mov eax [esi+20h] +
cmp eax edi +
jz loc_101B9B5  +
mov eax [eax+14h] +
mov dword_1034C1C eax +
cmp [eax+20h] edi +
jz loc_101B9B5  +
mov eax [eax+20h] +
mov eax [eax+0Ch] +
cmp eax edi +
jz loc_101B9B5  +
mov ecx [eax+14h] +
cmp ecx dword_1034C0C +
jb loc_101B9B5  +
ja loc_101B9A9  +
mov eax [eax+10h] +
cmp eax dword_1034C08 +
jb loc_101B9B5  +
mov dword_1034C08 edi +
mov dword_1034C0C edi +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call sub_101821A  +
call sub_10183DD  +
call sub_101D754  +
mov dword_1034C18 eax +
cmp [ebp+var_18] edi +
jz loc_101BA00  +
push [ebp+var_18]  +
push dword ptr [esi+1Ch]  +
call sub_101ADBB  +
test eax eax +
jnz loc_101BA14  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011850 +
jmp loc_101B6FF  +
push 256h  +
push offset off_1031010  +
push dword ptr [esi+1Ch]  +
call sub_101AECE  +
jmp loc_101B9DD  +
push dword ptr [esi+1Ch]  +
call sub_1023FDC  +
push dword ptr [esi+1Ch]  +
call sub_10238BD  +
push dword ptr [esi+1Ch]  +
call sub_102235B  +
test eax eax +
jnz loc_101BA4F  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011860 +
jmp loc_101B6FF  +
push 0Ch  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_14] eax +
xor esi esi +
push off_1031004[esi]  +
push [ebp+var_14]  +
call sub_1026D11  +
mov edi offset aRebuildCache +
test eax eax +
jz loc_101BA86  +
add esi 4 +
cmp esi 0Ch +
jb loc_101BA65  +
jmp loc_101BAC8  +
push [ebp+var_14]  +
call sub_1026EE2  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
and [ebp+var_14] 0 +
mov edx eax +
or edx ecx +
jz loc_101BB21  +
mov esi offset dword_1011930 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BAC8  +
push 0  +
push 0  +
push esi  +
push dword_1034C04  +
push dword_1034C00  +
call ebx  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_101BB21  +
mov esi offset dword_10118C0 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BB21  +
and [ebp+var_A0] 0 +
and [ebp+var_98] 0 +
lea eax [ebp+var_A4] +
push eax  +
push 1  +
push esi  +
push dword_1034C04  +
mov [ebp+var_A4] edi +
push dword_1034C00  +
mov [ebp+var_9C] 1Ch +
call ebx  +
push [ebp+var_14]  +
push 0  +
push [ebp+var_10]  +
call sub_1020B9E  +
test eax eax +
jnz loc_101BB4C  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_101BBCA  +
mov [ebp+var_4] 80004005h +
jmp loc_101BBCA  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_101BB96  +
mov esi offset dword_10118D0 +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BB96  +
and [ebp+var_70] 0 +
and [ebp+var_68] 0 +
lea eax [ebp+var_74] +
push eax  +
push 1  +
push esi  +
push dword_1034C04  +
mov [ebp+var_74] edi +
push dword_1034C00  +
mov [ebp+var_6C] 1Ch +
call ebx  +
push [ebp+var_10]  +
call sub_1017FAD  +
test eax eax +
jnz loc_101BBBD  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011880 +
jmp loc_101B8BC  +
and [ebp+var_4] 0 +
jmp loc_101BC26  +
mov [ebp+var_4] 5 +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BC26  +
mov esi offset dword_1011870 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BC26  +
and [ebp+var_90] 0 +
and [ebp+var_88] 0 +
lea eax [ebp+var_4] +
mov [ebp+var_94] eax +
lea eax [ebp+var_94] +
push eax  +
mov [ebp+var_8C] 4 +
push 1  +
push esi  +
push dword_1034C04  +
push dword_1034C00  +
call ebx  +
cmp [ebp+var_10] 0 +
jz loc_101BC34  +
push [ebp+var_10]  +
call sub_1020C2F  +
cmp [ebp+var_14] 0 +
jz loc_101BC42  +
push [ebp+var_14]  +
call sub_1026EE2  +
mov eax dword_1034BF4 +
xor edi edi +
cmp eax edi +
jz loc_101BC61  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax dword_1034BFC +
cmp eax edi +
jz loc_101BC7E  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov eax dword_1034BF8 +
cmp eax edi +
jz loc_101BC9B  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov ecx dword_1034C00 +
mov eax dword_1034C04 +
mov edx ecx +
or edx eax +
jz loc_101BD1B  +
mov esi offset dword_1011900 +
push esi  +
push eax  +
push ecx  +
call ds:EtwEventEnabled  +
test al al +
jz loc_101BCF6  +
lea eax [ebp+var_B4] +
push eax  +
push 1  +
push esi  +
push dword_1034C04  +
mov [ebp+var_B4] offset aMcbuilder +
push dword_1034C00  +
mov [ebp+var_B0] edi +
mov [ebp+var_AC] 14h +
mov [ebp+var_A8] edi +
call ebx  +
mov eax dword_1034C00 +
mov ecx dword_1034C04 +
mov edx eax +
or edx ecx +
jz loc_101BD1B  +
push ecx  +
push eax  +
call ds:EtwEventUnregister  +
mov dword_1034C00 edi +
mov dword_1034C04 edi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ??0exception@@QAE@XZ  +
cmp dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_1011940 +
jnz loc_101BD4C  +
cmp dword ptr [esi+8] 0 +
jnz loc_101BD4C  +
mov eax off_1033F3C +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ds:malloc +
jmp loc_101BD84  +
push dword ptr [ebp+8]  +
call _callnewh  +
pop ecx  +
test eax eax +
jz loc_101BD91  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
test eax eax +
jz loc_101BD77  +
pop esi  +
leave   +
retn   +
***
test byte ptr dword_1034C64 1 +
mov esi offset dword_1034C58 +
jnz loc_101BDB8  +
or dword_1034C64 1 +
mov ecx esi +
call sub_101BD28  +
push offset loc_102D653  +
call sub_101C41D  +
pop ecx  +
push esi  +
lea ecx [ebp-0Ch] +
call sub_1017D43  +
push offset dword_102D668  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
jmp sub_1019CE0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1011CE8 +
call sub_1019CE0  +
test byte ptr [ebp+8] 1 +
jz loc_101BE05  +
push esi  +
call sub_101BD55  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101A4DD  +
mov dword ptr [esi] offset off_1011CE8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 44h  +
mov eax offset loc_102D543 +
call __EH_prolog3  +
push offset aStringTooLong  +
lea ecx [ebp-28h] +
call sub_101A59C  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_101A51C  +
push offset dword_102D774  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
push 44h  +
mov eax offset loc_102D543 +
call __EH_prolog3  +
push offset aInvalidStringP  +
lea ecx [ebp-28h] +
call sub_101A59C  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_101A4A3  +
push offset dword_102D984  +
lea eax [ebp-50h] +
push eax  +
mov dword ptr [ebp-50h] offset off_1011CE8 +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_101BE11  +
push offset dword_102D984  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101BEF5  +
test eax eax +
jnz loc_101BEFA  +
mov ecx [esi] +
test ecx ecx +
jz loc_101BEF2  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101BEE6  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1034C8C +
push offset dword_1034C7C  +
push dword_1034C88  +
mov dword_1034C7C eax +
push offset dword_1034C6C  +
push offset dword_1034C70  +
push offset dword_1034C68  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1034C78 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_101BF82  +
cmp eax esi +
jnz loc_101BF75  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101BF85  +
push 3E8h  +
call ds:Sleep  +
jmp loc_101BF5C  +
xor esi esi +
inc esi  +
mov eax dword_10355EC +
cmp eax esi +
jnz loc_101BF98  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_101BFD3  +
mov eax dword_10355EC +
test eax eax +
jnz loc_101BFCD  +
mov dword_10355EC esi +
push offset dword_1001298  +
push offset dword_100128C  +
call sub_101BED9  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101BFD3  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_101C09D  +
mov dword_1034C84 esi +
mov eax dword_10355EC +
cmp eax esi +
jnz loc_101BFF7  +
push offset dword_1001288  +
push offset dword_100127C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10355EC 2 +
cmp [ebp+var_1C] ebx +
jnz loc_101C004  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10355FC ebx +
jz loc_101C025  +
push offset dword_10355FC  +
call sub_101C539  +
pop ecx  +
test eax eax +
jz loc_101C025  +
push ebx  +
push 2  +
push ebx  +
call dword_10355FC  +
push dword_1034C6C  +
push dword_1034C70  +
push dword_1034C68  +
call sub_101B2A8  +
add esp 0Ch +
mov dword_1034C80 eax +
cmp dword_1034C74 ebx +
jnz loc_101C083  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1034C80 eax +
xor ebx ebx +
cmp dword_1034C74 ebx +
jnz loc_101C083  +
push eax  +
call ds:_exit  +
cmp dword_1034C84 ebx +
jnz loc_101C091  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1034C80 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_101C0BA  +
xor eax eax +
jmp loc_101C107  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101C0B6  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101C0F4  +
cmp ecx 20Bh +
jnz loc_101C0B6  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101C0B6  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101C102  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101C0B6  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1034C74 eax +
call sub_101C6D2  +
push eax  +
call ds:__set_app_type  +
or dword_10355F4 0FFFFFFFFh +
or dword_10355F8 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1034C94 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1034C90 +
mov [eax] ecx +
call sub_101C664  +
cmp dword_1033F80 0 +
jnz loc_101C160  +
push offset sub_101C664  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101C64C  +
xor eax eax +
retn   +
***
call sub_101C711  +
jmp sub_101BF3A  +
***
jmp ds:?what@exception@@UBEPBDXZ  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_101C1F2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_101C233  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_101C200  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_101C22E  +
cmp edx [esp+arg_4] +
ja loc_101C22E  +
jb loc_101C22F  +
cmp eax [esp+arg_0] +
jbe loc_101C22F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
cmp ecx dword_1033F70 +
jnz loc_101C248  +
retn 0  +
jmp loc_101C7A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_101C2A8  +
push esi  +
call sub_101BD55  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ds:__CxxFrameHandler3  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1033F70 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1033F70 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_101C393  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101C482  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101C482  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101C47C  +
cmp eax 19930521h +
jz loc_101C47C  +
cmp eax 19930522h +
jz loc_101C47C  +
cmp eax 1994000h +
jnz loc_101C482  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_101C444+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101C4C6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101C4C2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101C52D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101C525  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101C52F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101C515  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101C4B0  +
pop ecx  +
test eax eax +
jz loc_101C596  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101C4F0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101C596  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101C59F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101C23D  +
push offset dword_1033F70  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101C6C5  +
cmp ecx 0FFFFFFFFh +
jz loc_101C6C5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101C6BE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101C6BE  +
cmp edx 10000000h +
jnb loc_101C6BE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101C6BE  +
jmp loc_101C6B9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101C707  +
push eax  +
call sub_101C66C  +
test eax eax +
jz loc_101C707  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101C6FC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101C707  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1033F70 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101C743  +
test eax ebx +
jz loc_101C743  +
not eax  +
mov dword_1033F74 eax +
jmp loc_101C79E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101C78A  +
test dword_1033F70 ebx +
jnz loc_101C78F  +
mov esi 0BB40E64Fh +
mov dword_1033F70 esi +
not esi  +
mov dword_1033F74 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1034D98 eax +
mov dword_1034D94 ecx +
mov dword_1034D90 edx +
mov dword_1034D8C ebx +
mov dword_1034D88 esi +
mov dword_1034D84 edi +
mov word_1034DB0 ss +
mov word_1034DA4 cs +
mov word_1034D80 ds +
mov word_1034D7C es +
mov word_1034D78 fs +
mov word_1034D74 gs +
pushf   +
pop dword_1034DA8  +
mov eax [ebp+0] +
mov dword_1034D9C eax +
mov eax [ebp+4] +
mov dword_1034DA0 eax +
lea eax [ebp+8] +
mov dword_1034DAC eax +
mov eax [ebp-320h] +
mov dword_1034CE8 10001h +
mov eax dword_1034DA0 +
mov dword_1034CA4 eax +
mov dword_1034C98 0C0000409h +
mov dword_1034C9C 1 +
mov eax dword_1033F70 +
mov [ebp-328h] eax +
mov eax dword_1033F74 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub eax 0 +
jz loc_101C90A  +
dec eax  +
jz loc_101C8FC  +
dec eax  +
jz loc_101C8F4  +
dec eax  +
jz loc_101C8EF  +
xor eax eax +
jmp loc_101C918  +
xor eax eax +
inc eax  +
jmp loc_101C918  +
mov eax [ebp+arg_0] +
and eax [ebp+arg_4] +
jmp loc_101C913  +
mov eax [ebp+arg_0] +
and eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_101C918  +
mov eax [ebp+arg_0] +
and eax [ebp+arg_4] +
sub eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hKey] 0 +
lea eax [ebp+hKey] +
push eax  +
push 0F003Fh  +
push 0  +
push offset aSystemCurren_1  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_101C95F  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor eax eax +
xor ebx ebx +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+arg_4] ebx +
setz al  +
lea eax [eax+eax+2] +
mov [ebp+dwDesiredAccess] eax +
cmp [ebp+lpName] ebx +
jz loc_101C9DA  +
cmp [ebp+arg_8] ebx +
jz loc_101C9DA  +
push [ebp+lpName]  +
push 1  +
push eax  +
call ds:OpenFileMappingW  +
mov esi eax +
cmp esi ebx +
jz loc_101C9FD  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+dwDesiredAccess]  +
push esi  +
call ds:MapViewOfFile  +
mov edi eax +
cmp edi ebx +
jz loc_101C9E2  +
push esi  +
call ds:CloseHandle  +
xor eax eax +
cmp [ebp+arg_4] ebx +
setnz al  +
lea eax [eax+eax+1] +
or eax 8 +
push eax  +
push ebx  +
push edi  +
call [ebp+arg_8]  +
cmp eax ebx +
jz loc_101C9F2  +
jmp loc_101C9FF  +
push 57h  +
call ds:SetLastError  +
cmp esi ebx +
jz loc_101C9F2  +
cmp esi 0FFFFFFFFh +
jz loc_101C9F2  +
push esi  +
call ds:CloseHandle  +
cmp edi ebx +
jz loc_101C9FD  +
push edi  +
call ds:UnmapViewOfFile  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
push edi  +
mov [ebp+hObject] esi +
mov [ebp+nNumberOfBytesToRead] esi +
mov [ebp+var_8] esi +
cmp [ebp+NumberOfBytesRead] esi +
jz loc_101CADA  +
cmp [ebp+arg_8] esi +
jz loc_101CADA  +
push esi  +
push esi  +
push 3  +
push esi  +
push 1  +
push 80000000h  +
push [ebp+NumberOfBytesRead]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
call ds:GetLastError  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_101CAE2  +
lea eax [ebp+nNumberOfBytesToRead] +
push eax  +
push [ebp+hObject]  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_101CAE2  +
cmp [ebp+var_8] esi +
jz loc_101CA7A  +
push 20010300h  +
jmp loc_101CADC  +
mov eax [ebp+arg_4] +
cmp eax esi +
jnz loc_101CA86  +
mov eax [ebp+nNumberOfBytesToRead] +
jmp loc_101CA8B  +
cmp eax [ebp+nNumberOfBytesToRead] +
jb loc_101CA73  +
push eax  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx esi +
jz loc_101CAE2  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push [ebp+nNumberOfBytesToRead]  +
mov [ebp+NumberOfBytesRead] esi +
push ebx  +
push [ebp+hObject]  +
call ds:ReadFile  +
test eax eax +
jz loc_101CAE2  +
mov eax [ebp+nNumberOfBytesToRead] +
cmp [ebp+NumberOfBytesRead] eax +
jnz loc_101CA73  +
push esi  +
push eax  +
push ebx  +
call [ebp+arg_8]  +
mov edi eax +
cmp edi esi +
jz loc_101CAE2  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax edi +
jmp loc_101CB0B  +
push 57h  +
call ds:SetLastError  +
cmp [ebp+hObject] esi +
jz loc_101CAF6  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_101CAF6  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp ebx esi +
jz loc_101CB09  +
push ebx  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push edi  +
mov edi [ebp+lpFileName] +
lea eax [ebp+dwFileAttributes] +
push eax  +
push 0  +
push edi  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_101CB48  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_101CB44  +
cmp eax 3 +
jnz loc_101CB48  +
xor eax eax +
jmp loc_101CB76  +
cmp [ebp+arg_4] 0 +
push esi  +
jz loc_101CB72  +
mov esi ds:SetFileAttributesW +
push 80h  +
push edi  +
call esi  +
push edi  +
call ds:DeleteFileW  +
test eax eax +
jz loc_101CB6C  +
xor eax eax +
jmp loc_101CB75  +
push [ebp+dwFileAttributes]  +
push edi  +
call esi  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
cmp [ebp+lpFileName] esi +
jz loc_101CBCB  +
lea eax [ebp+FileInformation] +
push eax  +
push esi  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_101CBCB  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_101CBB4  +
mov ecx [ebp+var_10] +
mov edx [ebp+var_C] +
mov [eax] ecx +
mov [eax+4] edx +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_101CBC6  +
mov ecx [ebp+var_4] +
mov edx [ebp+var_8] +
mov [eax] ecx +
mov [eax+4] edx +
xor eax eax +
inc eax  +
jmp loc_101CBE5  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_101CBD7  +
mov [eax] esi +
mov [eax+4] esi +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_101CBE3  +
mov [eax] esi +
mov [eax+4] esi +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_101CC0C  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:ExpandEnvironmentStringsW +
push edi  +
xor edi edi +
push edi  +
push edi  +
push [ebp+lpSrc]  +
call esi  +
mov ebx eax +
cmp ebx edi +
jnz loc_101CC37  +
xor eax eax +
jmp loc_101CC71  +
lea eax [ebx+ebx] +
push eax  +
push edi  +
mov edi ds:GetProcessHeap +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_101CC6E  +
push ebx  +
push eax  +
push [ebp+lpSrc]  +
call esi  +
test eax eax +
jnz loc_101CC6E  +
push [ebp+lpMem]  +
push eax  +
call edi  +
push eax  +
call ds:HeapFree  +
and [ebp+lpMem] 0 +
mov eax [ebp+lpMem] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 9  +
pop ecx  +
push 12h  +
lea eax [ebp+Src] +
xor ebx ebx +
mov esi offset a_Systemdrive +
lea edi [ebp+Src] +
push eax  +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ebx +
movs   +
call sub_101CC15  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_101CD20  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_101CD0F  +
push ebx  +
xor eax eax +
mov [ebp+OutBuffer] ebx +
lea edi [ebp+var_34] +
stos   +
lea eax [ebp+BytesReturned] +
push eax  +
push 8  +
lea eax [ebp+OutBuffer] +
push eax  +
push ebx  +
push ebx  +
push 7405Ch  +
push esi  +
mov [ebp+BytesReturned] ebx +
call ds:DeviceIoControl  +
test eax eax +
jz loc_101CD08  +
mov eax [ebp+OutBuffer] +
mov [ebp+var_30] eax +
mov eax [ebp+var_34] +
mov [ebp+var_2C] eax +
push esi  +
call ds:CloseHandle  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 7  +
pop ecx  +
push 0Eh  +
lea eax [ebp+Src] +
xor ebx ebx +
mov esi offset aSystemdrive +
lea edi [ebp+Src] +
push eax  +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ebx +
movs   +
call sub_101CC15  +
mov esi eax +
xor ecx ecx +
cmp esi ecx +
jz loc_101CD79  +
mov ebx esi +
xor eax eax +
mov dword ptr [ebp+TotalNumberOfFreeBytes] ecx +
lea edi [ebp+TotalNumberOfFreeBytes+4] +
stos   +
lea eax [ebp+TotalNumberOfFreeBytes] +
push eax  +
push ecx  +
push ecx  +
push ebx  +
call ds:GetDiskFreeSpaceExW  +
test eax eax +
jz loc_101CD9B  +
mov edi dword ptr [ebp+TotalNumberOfFreeBytes] +
mov ebx dword ptr [ebp+TotalNumberOfFreeBytes+4] +
jmp loc_101CDA1  +
mov edi [ebp+var_30] +
mov ebx [ebp+var_2C] +
test esi esi +
jz loc_101CDB5  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
mov edx ebx +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push 3Ch  +
lea eax [ebp+var_3C] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_40] +
push eax  +
mov [ebp+var_40] 40h +
call ds:GlobalMemoryStatusEx  +
test eax eax +
jz loc_101CE2D  +
cmp [ebp+var_34] 0 +
ja loc_101CE09  +
cmp [ebp+var_38] 30000000h +
jb loc_101CE2D  +
call sub_101CC7D  +
cmp edx 4 +
jb loc_101CE2D  +
ja loc_101CE19  +
test eax eax +
jb loc_101CE2D  +
call sub_101CD3A  +
test edx edx +
ja loc_101CE29  +
cmp eax 80000000h +
jb loc_101CE2D  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
test ecx ecx +
jz loc_101CE56  +
cmp ecx ds:dword_1012170[eax*8] +
jz loc_101CE5A  +
inc eax  +
cmp eax 44h +
jb loc_101CE45  +
xor eax eax +
pop ebp  +
retn 4  +
mov eax ds:off_1012174[eax*8] +
jmp loc_101CE56  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
xor edi edi +
xor eax eax +
cmp [ebp+arg_0] edi +
jz loc_101CED0  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jz loc_101CED0  +
push esi  +
mov edx [ebp+arg_0] +
mov ecx ds:off_1012174[edi*8] +
mov si [ecx] +
cmp si [edx] +
jnz loc_101CEB0  +
test si si +
jz loc_101CEAC  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_101CEB0  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_101CE8A  +
xor ecx ecx +
jmp loc_101CEB5  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_101CEC1  +
inc edi  +
cmp edi 44h +
jb loc_101CE80  +
jmp loc_101CECD  +
mov ecx ds:dword_1012170[edi*8] +
xor eax eax +
inc eax  +
mov [ebx] ecx +
pop esi  +
jmp loc_101CED2  +
xor eax eax +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
push offset aNtdll_dll  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jz loc_101CF47  +
push esi  +
mov esi ds:GetProcAddress +
push offset aNtmapcmfmodule  +
push edi  +
call esi  +
test eax eax +
jz loc_101CF3F  +
push ebx  +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push [ebp+arg_10]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
mov ebx eax +
test ebx ebx +
jge loc_101CF3E  +
push offset aRtlntstatustod  +
push edi  +
call esi  +
test eax eax +
jz loc_101CF3E  +
push ebx  +
call eax  +
push eax  +
call ds:SetLastError  +
pop ebx  +
push edi  +
call ds:FreeLibrary  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_101CFA0  +
cmp [ebp+arg_4] edi +
jz loc_101CFA0  +
push offset aNtdll_dll  +
call ds:LoadLibraryW  +
mov esi eax +
cmp esi edi +
jz loc_101CFA0  +
push offset aRtlimagedirect  +
push esi  +
call ds:GetProcAddress  +
cmp eax edi +
jz loc_101CF95  +
push [ebp+arg_4]  +
push 2  +
push edi  +
push [ebp+arg_0]  +
call eax  +
mov edi eax +
push esi  +
call ds:FreeLibrary  +
mov eax edi +
jmp loc_101CFA2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_101CFC7  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
jmp loc_101CFF8  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101CFF3  +
test dx dx +
jz loc_101CFEF  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101CFF3  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_101CFCD  +
xor eax eax +
jmp loc_101CFF8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetCurrentThread +
xor eax eax +
lea ecx [ebp+hObject] +
push ecx  +
push eax  +
mov esi 0F01FFh +
push esi  +
mov [ebp+hObject] eax +
mov [ebp+pfResult] eax +
mov [ebp+var_C] eax +
call edi  +
mov ebx ds:OpenThreadToken +
push eax  +
call ebx  +
test eax eax +
jnz loc_101D07B  +
call ds:GetLastError  +
cmp eax 3F0h +
jnz loc_101D07B  +
lea eax [ebp+hObject] +
push eax  +
push 1  +
push esi  +
call edi  +
push eax  +
call ebx  +
test eax eax +
jnz loc_101D07B  +
call ds:GetLastError  +
cmp eax 3F0h +
jnz loc_101D07B  +
lea eax [ebp+hObject] +
push eax  +
push esi  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_101D1B6  +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
xor esi esi +
push esi  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_101D1B8  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+RequiredPrivileges.Privilege.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+RequiredPrivileges.Privilege.Luid.HighPart] eax +
lea eax [ebp+pfResult] +
push eax  +
lea eax [ebp+RequiredPrivileges] +
push eax  +
push [ebp+hObject]  +
xor edi edi +
inc edi  +
mov [ebp+pfResult] esi +
mov [ebp+RequiredPrivileges.PrivilegeCount] edi +
mov [ebp+RequiredPrivileges.Control] esi +
mov [ebp+RequiredPrivileges.Privilege.Attributes] esi +
call ds:PrivilegeCheck  +
test eax eax +
jz loc_101D1B8  +
mov ebx [ebp+arg_4] +
cmp ebx esi +
jz loc_101D146  +
cmp [ebp+pfResult] esi +
jnz loc_101D14B  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
mov eax ebx +
neg eax  +
push esi  +
sbb eax eax +
push esi  +
and eax 2 +
push esi  +
mov [ebp+NewState.Privileges.Attributes] eax +
lea eax [ebp+NewState] +
push eax  +
push esi  +
push [ebp+hObject]  +
mov [ebp+NewState.PrivilegeCount] edi +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_101D1B8  +
call ds:GetLastError  +
cmp eax 514h +
jz loc_101D1B8  +
mov eax [ebp+lpName] +
mov ecx offset aSerestoreprivi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101D199  +
cmp dx si +
jz loc_101D142  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101D199  +
add eax 4 +
add ecx 4 +
cmp dx si +
jnz loc_101D120  +
xor eax eax +
jmp loc_101D19E  +
cmp [ebp+pfResult] esi +
jnz loc_101D0D3  +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_101D157  +
mov ecx [ebp+pfResult] +
mov [eax] ecx +
mov eax [ebp+lpName] +
mov ecx offset aSerestoreprivi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101D185  +
cmp dx si +
jz loc_101D181  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101D185  +
add eax 4 +
add ecx 4 +
cmp dx si +
jnz loc_101D15F  +
xor eax eax +
jmp loc_101D18A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax esi +
jnz loc_101D194  +
mov dword_1034FB4 ebx +
mov [ebp+var_C] edi +
jmp loc_101D1B8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax esi +
jnz loc_101D1A8  +
mov dword_1034FB4 ebx +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_101D194  +
mov ecx [ebp+pfResult] +
mov [eax] ecx +
jmp loc_101D194  +
xor esi esi +
cmp [ebp+hObject] esi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_101D1C9  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_8] ebx +
mov [ebp+hMem] ebx +
cmp esi ebx +
jnz loc_101D1F1  +
xor eax eax +
jmp loc_101D264  +
mov eax dword_1033F84 +
dec eax  +
push edi  +
mov edi [esi] +
jz loc_101D226  +
dec eax  +
jnz loc_101D20E  +
mov eax [ebp+arg_0] +
dec eax  +
jz loc_101D21F  +
dec eax  +
jz loc_101D218  +
dec eax  +
jz loc_101D21F  +
dec eax  +
jz loc_101D21F  +
push 32h  +
call ds:SetLastError  +
jmp loc_101D241  +
mov eax offset aSAuFasaSdwdwof +
jmp loc_101D22B  +
mov eax offset aSAuFasaWdwoBaA +
jmp loc_101D22B  +
mov eax offset aDACioiGaWd +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+hMem] +
push ecx  +
push 1  +
push eax  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_101D245  +
and [esi] ebx +
xor eax eax +
jmp loc_101D263  +
mov eax [ebp+var_8] +
cmp [ebp+arg_4] ebx +
jnz loc_101D26A  +
xor ebx ebx +
inc ebx  +
mov [esi] eax +
cmp [ebp+hMem] 0 +
jz loc_101D261  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
cmp edi eax +
jb loc_101D250  +
push eax  +
push [ebp+hMem]  +
push [ebp+arg_4]  +
call memcpy  +
xor ebx ebx +
add esp 0Ch +
inc ebx  +
jmp loc_101D252  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi [ebp+arg_14] +
xor eax eax +
push edi  +
xor edi edi +
cmp [ebp+dwOptions] edi +
mov [ebp+var_8] edi +
setnz al  +
neg esi  +
sbb esi esi +
and esi 6 +
add esi 20019h +
mov [ebp+dwBytes] edi +
mov [ebp-10h] edi +
mov [ebp+dwOptions] eax +
xor eax eax +
mov [ebp+lpMem] 0Ch +
mov [ebp-0Ch] edi +
cmp [ebp+phkResult] edi +
jz loc_101D387  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jz loc_101D386  +
cmp [ebp+lpSubKey] edi +
jz loc_101D386  +
cmp [ebp+arg_10] edi +
jz loc_101D32B  +
cmp dword_1033F84 2 +
jnz loc_101D32B  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push 3  +
call sub_101D1D5  +
cmp [ebp+dwBytes] edi +
jbe loc_101D370  +
push [ebp+dwBytes]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-10h] eax +
cmp eax edi +
jz loc_101D386  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push 3  +
call sub_101D1D5  +
test eax eax +
jz loc_101D370  +
lea eax [ebp+lpMem] +
mov ecx [ebp+phkResult] +
mov [ecx] edi +
cmp [ebp+arg_10] edi +
jz loc_101D34E  +
push ebx  +
push ecx  +
push eax  +
push esi  +
push [ebp+dwOptions]  +
push edi  +
push edi  +
push [ebp+lpSubKey]  +
push 80000002h  +
call ds:RegCreateKeyExW  +
jmp loc_101D365  +
push ecx  +
push esi  +
push edi  +
push [ebp+lpSubKey]  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov dword ptr [ebx] 2 +
cmp eax edi +
jnz loc_101D370  +
mov [ebp+var_8] 1 +
cmp [ebp-10h] edi +
jz loc_101D386  +
push dword ptr [ebp-10h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:FlushViewOfFile  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
test edi edi +
jnz loc_101D3C2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101D409  +
push ebx  +
push offset aKernel32_dll  +
call ds:LoadLibraryW  +
mov ebx eax +
test ebx ebx +
jz loc_101D406  +
push offset aWow64disablewo  +
push ebx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101D3E8  +
and [edi] esi +
jmp loc_101D3FC  +
push edi  +
call eax  +
mov esi eax +
test esi esi +
jnz loc_101D3FF  +
call ds:GetLastError  +
cmp eax 1 +
jnz loc_101D3FF  +
xor esi esi +
inc esi  +
push ebx  +
call ds:FreeLibrary  +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset aKernel32_dll  +
xor esi esi +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jz loc_101D45E  +
push offset aWow64revertwow  +
push edi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_101D454  +
push [ebp+arg_0]  +
call eax  +
mov esi eax +
test esi esi +
jnz loc_101D457  +
call ds:GetLastError  +
cmp eax 1 +
jnz loc_101D457  +
xor esi esi +
inc esi  +
push edi  +
call ds:FreeLibrary  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_101D483  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
jmp locret_101D4A6  +
push 2  +
push [ebp+arg_0]  +
call sub_102C697  +
movzx eax ax +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_101D4A3  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_101CE68  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_101D4CD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101D52A  +
push ebx  +
push offset aKernel32_dll  +
call ds:LoadLibraryW  +
mov ebx eax +
test ebx ebx +
jz loc_101D526  +
push offset aGetsystemwow64  +
push ebx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101D4F9  +
push 78h  +
call ds:SetLastError  +
jmp loc_101D51F  +
push edi  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call eax  +
mov edi eax +
test edi edi +
jz loc_101D51E  +
cmp edi [esi] +
jbe loc_101D515  +
push 7Ah  +
call ds:SetLastError  +
jmp loc_101D51C  +
mov [ebp+var_4] 1 +
mov [esi] edi +
pop edi  +
push ebx  +
call ds:FreeLibrary  +
mov eax [ebp+var_4] +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset aShell32_dll  +
xor edi edi +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_101D575  +
push offset aShgetspecialfo  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_101D56E  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
mov edi eax +
push esi  +
call ds:FreeLibrary  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101D59D  +
cmp [esi] ax +
jz loc_101D599  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101D58F  +
test edx edx +
jnz loc_101D5A2  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101D5B3  +
test eax eax +
jl loc_101D5B0  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_101D5EE  +
cmp [ebp+arg_4] eax +
jz loc_101D5EA  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101D5EA  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101D5CD  +
test esi esi +
jnz loc_101D5F6  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101D604  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_101D62E  +
mov eax [ebp+arg_0] +
jb loc_101D625  +
cmp eax 0FFFFFFFFh +
ja loc_101D62E  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_101D639  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
mov [ebp+phkResult] edi +
cmp [ebp+lpSubKey] edi +
jz loc_101D6B4  +
cmp [ebp+lpValueName] edi +
jnz loc_101D662  +
mov [ebp+lpValueName] offset aSystem +
push 1  +
push 1  +
push [ebp+dwOptions]  +
lea eax [ebp+lpSubKey] +
push [ebp+lpSubKey]  +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101D287  +
test eax eax +
jz loc_101D6B4  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_101D6A6  +
push [ebp+phkResult]  +
call ds:RegFlushKey  +
test eax eax +
jnz loc_101D6A6  +
xor esi esi +
inc esi  +
cmp [ebp+phkResult] edi +
jz loc_101D6B4  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
mov [ebp+phkResult] esi +
mov [ebp+var_8] esi +
mov [ebp+Type] esi +
mov [ebp+cbData] 4 +
cmp [ebp+lpSubKey] esi +
jz loc_101D747  +
cmp [ebp+lpData] esi +
jz loc_101D747  +
cmp [ebp+lpValueName] esi +
jnz loc_101D6F5  +
mov [ebp+lpValueName] offset aSystem +
push esi  +
push esi  +
push [ebp+dwOptions]  +
lea eax [ebp+var_8] +
push [ebp+lpSubKey]  +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101D287  +
test eax eax +
jz loc_101D747  +
cmp [ebp+var_8] 1 +
jz loc_101D739  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_101D739  +
cmp [ebp+Type] 4 +
jnz loc_101D739  +
xor ebx ebx +
inc ebx  +
cmp [ebp+phkResult] esi +
jz loc_101D747  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+Data] 0 +
push 0  +
lea eax [ebp+Data] +
push eax  +
push offset aAllowonlymui  +
push offset aSystemCurren_0  +
call sub_101D6C1  +
test eax eax +
jz loc_101D782  +
cmp dword ptr [ebp+Data] 0 +
jbe loc_101D782  +
xor eax eax +
inc eax  +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push dword ptr [ebp+Data]  +
push [ebp+lpValueName]  +
push offset aSystemCurren_1  +
call sub_101D642  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+lpData]  +
push [ebp+lpValueName]  +
push offset aSystemCurren_1  +
call sub_101D6C1  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword ptr [ebp+Data] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
inc edi  +
mov [ebp+phkResult] esi +
mov dword ptr [ebp+Data] eax +
cmp [ebp+lpValueName] esi +
jnz loc_101D7EE  +
mov [ebp+lpValueName] offset aSystem +
push edi  +
push edi  +
push esi  +
push offset aSystemCurren_2  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101D287  +
test eax eax +
jz loc_101D83F  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_101D82D  +
push [ebp+phkResult]  +
call ds:RegFlushKey  +
test eax eax +
jz loc_101D82F  +
xor edi edi +
cmp [ebp+phkResult] esi +
jz loc_101D83D  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_220] eax +
mov [ebp+phkResult] ebx +
mov [ebp+var_218] ebx +
mov dword ptr [ebp+Data] ebx +
cmp edi ebx +
jnz loc_101D894  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101D982  +
cmp eax ebx +
jnz loc_101D8A2  +
mov [ebp+var_220] offset aSystem +
push ebx  +
push ebx  +
push ebx  +
push offset aSystemCurren_2  +
lea eax [ebp+var_230] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101D287  +
test eax eax +
jz loc_101D968  +
cmp [ebp+var_230] 1 +
jz loc_101D968  +
mov [ebp+dwIndex] ebx +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 104h +
push [ebp+phkResult]  +
mov [ebp+cbData] 4 +
call ds:RegEnumValueW  +
cmp eax 0EAh +
jz loc_101D94E  +
cmp eax ebx +
jnz loc_101D968  +
cmp [ebp+Type] 4 +
jnz loc_101D94E  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+var_220]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101D956  +
inc [ebp+dwIndex]  +
jmp loc_101D8D8  +
mov eax dword ptr [ebp+Data] +
mov [edi] eax +
mov [ebp+var_218] 1 +
cmp [ebp+phkResult] ebx +
jz loc_101D97C  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax [ebp+var_218] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
mov [ebp+var_228] eax +
mov [ebp+var_230] ecx +
mov [ebp+phkResult] esi +
mov [ebp+var_220] esi +
mov [ebp+var_224] esi +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
cmp ebx esi +
jnz loc_101D9F4  +
push 57h  +
call ds:SetLastError  +
jmp loc_101DADB  +
cmp eax esi +
jnz loc_101DA02  +
mov [ebp+var_228] offset aSystem +
push edi  +
mov edi [ebp+arg_8] +
push esi  +
push esi  +
push esi  +
push offset aSystemCurren_3  +
lea eax [ebp+var_224] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
add edi edi +
call sub_101D287  +
test eax eax +
jz loc_101DADA  +
cmp [ebp+var_224] 1 +
jnz loc_101DA44  +
push 490h  +
call ds:SetLastError  +
jmp loc_101DADA  +
mov [ebp+dwIndex] esi +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 104h +
push [ebp+phkResult]  +
mov [ebp+cbData] edi +
call ds:RegEnumValueW  +
cmp eax 0EAh +
jz loc_101DAB6  +
cmp eax esi +
jnz loc_101DADA  +
cmp [ebp+Type] 1 +
jnz loc_101DAB6  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+var_228]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101DABE  +
inc [ebp+dwIndex]  +
jmp loc_101DA4A  +
mov eax [ebp+var_230] +
cmp eax esi +
jz loc_101DAD0  +
mov ecx [ebp+cbData] +
mov [eax] ecx +
mov [ebp+var_220] 1 +
pop edi  +
cmp [ebp+phkResult] esi +
pop esi  +
pop ebx  +
jz loc_101DAF1  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_220] +
xor ecx ebp +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
cmp dword_1033F84 2 +
mov [ebp+dwBytes] edi +
mov [ebp-0Ch] edi +
mov [ebp+lpMem] 0Ch +
mov [ebp-8] edi +
jnz loc_101DB7C  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push 2  +
call sub_101D1D5  +
cmp [ebp+dwBytes] edi +
jbe loc_101DB77  +
push [ebp+dwBytes]  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax edi +
jz loc_101DB77  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push 2  +
call sub_101D1D5  +
test eax eax +
jnz loc_101DB7C  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
or eax 0FFFFFFFFh +
jmp loc_101DBC2  +
push ebx  +
push [ebp+lpName]  +
lea eax [ebp+lpMem] +
push [ebp+dwMaximumSizeLow]  +
push [ebp+dwMaximumSizeHigh]  +
push [ebp+flProtect]  +
push eax  +
push [ebp+hFile]  +
call ds:CreateFileMappingW  +
mov ebx eax +
call ds:GetLastError  +
cmp [ebp+arg_14] edi +
jz loc_101DBAD  +
cmp eax 0B7h +
jnz loc_101DBAD  +
or ebx 0FFFFFFFFh +
cmp [ebp-0Ch] edi +
jz loc_101DBBF  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+dwBytes] edi +
cmp dword_1034FB4 edi +
jz loc_101DBEC  +
or [ebp+dwFlagsAndAttributes] 2000000h +
mov esi ds:GetProcessHeap +
push 2  +
pop ebx  +
mov [ebp-0Ch] edi +
mov [ebp+lpMem] 0Ch +
mov [ebp-8] edi +
cmp dword_1033F84 ebx +
jnz loc_101DC4F  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push ebx  +
call sub_101D1D5  +
cmp [ebp+dwBytes] edi +
jbe loc_101DC4A  +
push [ebp+dwBytes]  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax edi +
jz loc_101DC4A  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push ebx  +
call sub_101D1D5  +
test eax eax +
jnz loc_101DC4F  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
or eax 0FFFFFFFFh +
jmp loc_101DC7D  +
push edi  +
push [ebp+dwFlagsAndAttributes]  +
lea eax [ebp+lpMem] +
push ebx  +
push eax  +
push [ebp+dwShareMode]  +
push [ebp+dwDesiredAccess]  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov ebx eax +
cmp [ebp-0Ch] edi +
jz loc_101DC7B  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_101DC9C  +
mov [ebx] edi +
push edi  +
push [ebp+lpName]  +
push [ebp+dwMaximumSizeLow]  +
push edi  +
push 4  +
push 0FFFFFFFFh  +
call sub_101DB0A  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_101DCC9  +
push [ebp+dwMaximumSizeLow]  +
push edi  +
push edi  +
push 2  +
push esi  +
call ds:MapViewOfFile  +
mov [ebp+dwMaximumSizeLow] eax +
cmp eax edi +
jnz loc_101DCDD  +
cmp esi edi +
jz loc_101DCD9  +
cmp esi 0FFFFFFFFh +
jz loc_101DCD9  +
push esi  +
call ds:CloseHandle  +
xor eax eax +
jmp loc_101DCEF  +
cmp ebx edi +
jz loc_101DCE5  +
mov [ebx] esi +
jmp loc_101DCEC  +
push esi  +
call ds:CloseHandle  +
mov eax [ebp+dwMaximumSizeLow] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor esi esi +
push 3  +
pop edi  +
mov [ebp+arg_C] ebx +
and [ebp+arg_C] 1 +
push esi  +
pop eax  +
setz al  +
mov [ebp+dwMaximumSizeLow] esi +
mov [ebp+var_14] esi +
mov [ebp+var_4] esi +
mov ecx edi +
mov [ebp+var_8] 1 +
lea eax [eax+eax+2] +
mov [ebp+dwDesiredAccess] eax +
mov eax dword_1034FB4 +
neg eax  +
sbb eax eax +
and eax 2000000h +
test bl 4 +
jz loc_101DD4D  +
cmp [ebp+arg_18] esi +
jz loc_101DD6C  +
xor ecx ecx +
mov edx [ebp+arg_14] +
cmp edx esi +
jz loc_101DD56  +
mov [edx] esi +
cmp [ebp+arg_C] esi +
jz loc_101DD5E  +
mov [ebp+var_8] edi +
cmp [ebp+lpName] esi +
jz loc_101DD67  +
or [ebp+var_8] 8 +
cmp [ebp+hFile] esi +
jnz loc_101DD79  +
push 57h  +
call ds:SetLastError  +
jmp loc_101DF06  +
push esi  +
push eax  +
push edi  +
push esi  +
mov eax ebx +
or eax 0FFFFFFFEh +
push ecx  +
shl eax 1Eh +
push eax  +
push [ebp+hFile]  +
call ds:CreateFileW  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_101DEF2  +
lea ecx [ebp+dwMaximumSizeLow] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_101DEF2  +
cmp [ebp+var_14] esi +
jz loc_101DDC4  +
push 20010600h  +
call ds:SetLastError  +
jmp loc_101DEF2  +
mov edi [ebp+arg_8] +
cmp edi esi +
jbe loc_101DDD0  +
cmp edi [ebp+dwMaximumSizeLow] +
jb loc_101DDB4  +
test bl 2 +
jz loc_101DE4B  +
cmp edi [ebp+dwMaximumSizeLow] +
jnb loc_101DDDD  +
mov edi [ebp+dwMaximumSizeLow] +
push esi  +
push [ebp+lpName]  +
push edi  +
push esi  +
push 4  +
push 0FFFFFFFFh  +
call sub_101DB0A  +
mov ebx eax +
cmp ebx esi +
jz loc_101DEF2  +
cmp ebx 0FFFFFFFFh +
jz loc_101DEE2  +
push edi  +
push esi  +
push esi  +
push 2  +
push ebx  +
call ds:MapViewOfFile  +
mov edi eax +
cmp edi esi +
jz loc_101DEE2  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push [ebp+dwMaximumSizeLow]  +
push edi  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_101DED7  +
mov eax [ebp+NumberOfBytesRead] +
cmp eax [ebp+dwMaximumSizeLow] +
jnz loc_101DED7  +
cmp [ebp+arg_10] esi +
jnz loc_101DE91  +
push edi  +
call ds:UnmapViewOfFile  +
mov edi esi +
jmp loc_101DE91  +
xor eax eax +
cmp [ebp+arg_C] esi +
push esi  +
push [ebp+lpName]  +
setnz al  +
push edi  +
push esi  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+hFile]  +
call sub_101DB0A  +
mov ebx eax +
cmp ebx esi +
jz loc_101DEF2  +
cmp ebx 0FFFFFFFFh +
jz loc_101DEE2  +
cmp [ebp+arg_10] esi +
jz loc_101DE8E  +
push edi  +
push esi  +
push esi  +
push [ebp+dwDesiredAccess]  +
push ebx  +
call ds:MapViewOfFile  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_101DEE2  +
mov edi [ebp+var_4] +
mov eax [ebp+arg_14] +
cmp eax esi +
jz loc_101DEA1  +
cmp [ebp+lpName] esi +
jz loc_101DEA1  +
mov [eax] ebx +
jmp loc_101DEAA  +
push ebx  +
call ds:CloseHandle  +
xor ebx ebx +
mov eax [ebp+arg_18] +
cmp eax esi +
jz loc_101DEB8  +
mov ecx [ebp+hFile] +
mov [eax] ecx +
jmp loc_101DEC1  +
push [ebp+hFile]  +
call ds:CloseHandle  +
mov [ebp+hFile] esi +
cmp [ebp+arg_10] esi +
jz loc_101DF0F  +
push [ebp+var_8]  +
push [ebp+dwMaximumSizeLow]  +
push edi  +
call [ebp+arg_10]  +
cmp eax esi +
jnz loc_101DF08  +
cmp edi esi +
jz loc_101DEE2  +
push edi  +
call ds:UnmapViewOfFile  +
cmp ebx esi +
jz loc_101DEF2  +
cmp ebx 0FFFFFFFFh +
jz loc_101DEF2  +
push ebx  +
call ds:CloseHandle  +
cmp [ebp+hFile] esi +
jz loc_101DF06  +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_101DF06  +
push [ebp+hFile]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
or eax 0FFFFFFFFh +
jmp loc_101DF08  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_1C] +
or [ebp+hFile] 0FFFFFFFFh +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
inc ebx  +
push edi  +
mov [ebp+lpBaseAddress] esi +
mov [ebp+hFileMappingObject] esi +
mov [ebp+NumberOfBytesWritten] esi +
mov [ebp+var_C] ebx +
cmp eax esi +
jz loc_101DF42  +
mov [eax] esi +
cmp [ebp+lpFileName] esi +
jz loc_101E066  +
cmp [ebp+lpBuffer] esi +
jz loc_101E066  +
mov edi [ebp+arg_C] +
cmp edi ebx +
jb loc_101E066  +
cmp [ebp+dwMaximumSizeLow] ebx +
jb loc_101E066  +
cmp [ebp+arg_18] esi +
jz loc_101E066  +
push 2000h  +
push 3  +
push 0C0000000h  +
push [ebp+lpFileName]  +
call sub_101DBCD  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_101E07C  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push edi  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_101E07C  +
cmp [ebp+NumberOfBytesWritten] edi +
jz loc_101DFBD  +
push 18h  +
call ds:SetLastError  +
jmp loc_101E07C  +
push [ebp+hFile]  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_101E07C  +
push ebx  +
push [ebp+lpName]  +
push [ebp+dwMaximumSizeLow]  +
push esi  +
push 4  +
push [ebp+hFile]  +
call sub_101DB0A  +
mov [ebp+hFileMappingObject] eax +
cmp eax esi +
jz loc_101E07C  +
cmp eax 0FFFFFFFFh +
jz loc_101E07C  +
push [ebp+dwMaximumSizeLow]  +
xor eax eax +
cmp [ebp+arg_14] esi +
push esi  +
setz al  +
push esi  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+hFileMappingObject]  +
call ds:MapViewOfFile  +
mov [ebp+lpBaseAddress] eax +
cmp eax esi +
jz loc_101E07C  +
cmp [ebp+lpName] esi +
jz loc_101E022  +
mov [ebp+var_C] 9 +
cmp [ebp+arg_14] esi +
jz loc_101E02B  +
or [ebp+var_C] 2 +
push [ebp+hFile]  +
mov edi ds:CloseHandle +
call edi  +
mov eax [ebp+arg_1C] +
mov [ebp+hFile] esi +
cmp eax esi +
jz loc_101E04C  +
cmp [ebp+lpName] esi +
jz loc_101E04C  +
mov ecx [ebp+hFileMappingObject] +
mov [eax] ecx +
jmp loc_101E054  +
push [ebp+hFileMappingObject]  +
call edi  +
mov [ebp+hFileMappingObject] esi +
push [ebp+var_C]  +
push [ebp+dwMaximumSizeLow]  +
push [ebp+lpBaseAddress]  +
call [ebp+arg_18]  +
cmp eax esi +
jz loc_101E06E  +
jmp loc_101E0A6  +
push 57h  +
call ds:SetLastError  +
cmp [ebp+lpBaseAddress] esi +
jz loc_101E07C  +
push [ebp+lpBaseAddress]  +
call ds:UnmapViewOfFile  +
cmp [ebp+hFile] esi +
jz loc_101E090  +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_101E090  +
push [ebp+hFile]  +
call ds:CloseHandle  +
cmp [ebp+hFileMappingObject] esi +
jz loc_101E0A4  +
cmp [ebp+hFileMappingObject] 0FFFFFFFFh +
jz loc_101E0A4  +
push [ebp+hFileMappingObject]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
xor ebx ebx +
push ebx  +
push [ebp+lpFileName]  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
call sub_101CB17  +
test eax eax +
jz loc_101E268  +
push ebx  +
push [ebp+arg_4]  +
call sub_101CB17  +
test eax eax +
jz loc_101E268  +
push esi  +
mov esi ds:CreateFileW +
push edi  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 1  +
mov edi 80000000h +
push edi  +
push [ebp+lpFileName]  +
call esi  +
mov [ebp+hFile] eax +
cmp eax ebx +
jz loc_101E266  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 1  +
push edi  +
push [ebp+arg_4]  +
call esi  +
mov edi eax +
mov [ebp+var_1C] edi +
cmp edi ebx +
jz loc_101E251  +
mov esi ds:GetFileSizeEx +
lea eax [ebp+var_24] +
push eax  +
push [ebp+hFile]  +
call esi  +
test eax eax +
jz loc_101E251  +
lea eax [ebp+var_2C] +
push eax  +
push edi  +
call esi  +
test eax eax +
jz loc_101E251  +
cmp [ebp+var_20] ebx +
jnz loc_101E158  +
cmp [ebp+var_28] ebx +
jz loc_101E160  +
push 18h  +
call ds:SetLastError  +
mov esi ds:CreateFileMappingW +
push ebx  +
push ebx  +
push ebx  +
push 2  +
push ebx  +
push [ebp+hFile]  +
call esi  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_101E251  +
push ebx  +
push ebx  +
push ebx  +
push 2  +
push ebx  +
push edi  +
call esi  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jz loc_101E23A  +
mov esi ds:MapViewOfFile +
push ebx  +
push ebx  +
push ebx  +
push 4  +
push [ebp+hObject]  +
call esi  +
mov edi eax +
mov [ebp+lpBaseAddress] edi +
cmp edi ebx +
jz loc_101E23A  +
push ebx  +
push ebx  +
push ebx  +
push 4  +
push [ebp+arg_4]  +
call esi  +
mov [ebp+lpFileName] eax +
cmp eax ebx +
jz loc_101E225  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call sub_101CF54  +
mov esi eax +
cmp esi ebx +
jz loc_101E1FD  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_4] +
add eax edi +
add ecx esi +
cmp ecx eax +
ja loc_101E1FD  +
mov edi [ebp+lpFileName] +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_101CF54  +
cmp eax ebx +
jz loc_101E1FD  +
mov ecx [ebp+var_2C] +
lea edx [ecx+edi] +
mov ecx [ebp+var_10] +
lea edi [ecx+eax] +
cmp edi edx +
jbe loc_101E20D  +
mov ecx [ebp+var_24] +
cmp ecx [ebp+var_2C] +
jnz loc_101E225  +
mov edi [ebp+lpFileName] +
mov esi [ebp+lpBaseAddress] +
jmp loc_101E217  +
cmp [ebp+var_4] ecx +
jnz loc_101E225  +
mov ecx [ebp+var_4] +
mov edi eax +
xor eax eax +
cmps   +
jz loc_101E222  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov [ebp+var_C] eax +
push [ebp+lpBaseAddress]  +
mov esi ds:UnmapViewOfFile +
call esi  +
cmp [ebp+lpFileName] ebx +
jz loc_101E23A  +
push [ebp+lpFileName]  +
call esi  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
cmp [ebp+arg_4] ebx +
jz loc_101E257  +
push [ebp+arg_4]  +
call esi  +
jmp loc_101E257  +
mov esi ds:CloseHandle +
push [ebp+hFile]  +
call esi  +
cmp [ebp+var_1C] ebx +
jz loc_101E266  +
push [ebp+var_1C]  +
call esi  +
pop edi  +
pop esi  +
mov eax [ebp+var_C] +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_0] +
mul  [ebp+arg_4] +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jge loc_101E298  +
xor eax eax +
jmp locret_101E29B  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_101E2BA  +
cmp edx 7FFFFFFFh +
jbe loc_101E2BF  +
mov eax 80070057h +
test eax eax +
jl loc_101E2D5  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_101D5B9  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push esi  +
jz loc_101E338  +
cmp [ebp+arg_8] 0 +
jz loc_101E338  +
push 2  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102C6FF  +
test eax eax +
jg loc_101E342  +
push [ebp+arg_0]  +
call sub_101CE37  +
mov esi eax +
test esi esi +
jz loc_101E340  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101E2A4  +
test eax eax +
jl loc_101E340  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101E327  +
sub eax edx +
sar eax 1 +
inc eax  +
jmp loc_101E342  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_101E365  +
cmp edx esi +
jbe loc_101E36A  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_101E382  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101D582  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_101E384  +
xor ecx ecx +
test eax eax +
jl loc_101E39B  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_101D5B9  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_101E3C8  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_101E3C8  +
call sub_101D582  +
jmp loc_101E3CD  +
mov eax 80070057h +
test eax eax +
jge loc_101E3D8  +
test edi edi +
jz loc_101E3D8  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
test ebx ebx +
jnz loc_101E41D  +
xor esi esi +
push edi  +
push ebx  +
push esi  +
call ds:GetSystemWindowsDirectoryW  +
mov edi eax +
test edi edi +
jz loc_101E419  +
cmp edi ebx +
jnb loc_101E428  +
test esi esi +
jz loc_101E428  +
push offset aRescache  +
push ebx  +
push esi  +
call sub_101E34C  +
test eax eax +
jge loc_101E428  +
xor eax eax +
jmp loc_101E42B  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_101E3F2  +
xor eax eax +
jmp loc_101E42C  +
lea eax [edi+9] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
inc ebx  +
mov [ebp+phkResult] esi +
mov [ebp+var_C] ebx +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
cmp [ebp+lpData] esi +
jnz loc_101E466  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101E4FA  +
cmp [ebp+lpValueName] esi +
jnz loc_101E472  +
mov [ebp+lpValueName] offset aSystem +
lea eax [ebp+var_8] +
push eax  +
push 400h  +
push [ebp+lpData]  +
call sub_101E3A6  +
test eax eax +
jge loc_101E48B  +
push 32h  +
jmp loc_101E459  +
push edi  +
mov edi [ebp+var_8] +
lea edi [edi+edi+2] +
cmp edi 800h +
jbe loc_101E4A5  +
push 32h  +
call ds:SetLastError  +
jmp loc_101E4BE  +
push ebx  +
push ebx  +
push esi  +
push offset aSystemCurren_3  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
call sub_101D287  +
test eax eax +
jnz loc_101E4C2  +
xor eax eax +
jmp loc_101E4F9  +
push edi  +
push [ebp+lpData]  +
push ebx  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_101E4E5  +
push [ebp+phkResult]  +
call ds:RegFlushKey  +
test eax eax +
jz loc_101E4E8  +
mov [ebp+var_C] esi +
cmp [ebp+phkResult] esi +
jz loc_101E4F6  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_C] 4 +
jz loc_101E51E  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 1Ch  +
pop ebp  +
jmp sub_101DCFB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_101E538  +
xor eax eax +
jmp loc_101E5AF  +
mov ecx [ebp+arg_0] +
push esi  +
xor esi esi +
mov eax 104h +
cmp word ptr [ecx] 0 +
jz loc_101E550  +
inc esi  +
inc ecx  +
inc ecx  +
cmp esi eax +
jl loc_101E543  +
cmp esi eax +
jl loc_101E560  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101E5AE  +
push edi  +
push 2  +
lea edi [esi+1] +
push edi  +
call sub_101E275  +
test eax eax +
jbe loc_101E58C  +
push 2  +
push edi  +
call sub_101E275  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_101E58E  +
xor edi edi +
test edi edi +
jnz loc_101E596  +
xor eax eax +
jmp loc_101E5AD  +
add esi esi +
push esi  +
push [ebp+arg_0]  +
push edi  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov [esi+edi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+hFindFile] 0FFFFFFFFh +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
push ebx  +
mov dword ptr [ebp+lpPathName] edi +
mov [ebp+var_258] ebx +
call ds:SetLastError  +
cmp edi ebx +
jnz loc_101E601  +
mov [ebp+var_258] 57h +
jmp loc_101E826  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101E606  +
sub eax edx +
sar eax 1 +
push esi  +
lea esi [eax+3] +
mov [ebp+var_268] eax +
lea eax [esi+esi] +
push eax  +
push ebx  +
mov ebx ds:GetProcessHeap +
call ebx  +
push eax  +
call ds:HeapAlloc  +
push edi  +
push offset aS  +
push esi  +
push eax  +
mov [ebp+lpMem] eax +
call sub_1018EA1  +
add esp 10h +
test eax eax +
jl loc_101E83C  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpMem]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101E68F  +
call ds:GetLastError  +
mov [ebp+var_258] eax +
cmp eax 2 +
jnz loc_101E7F6  +
and [ebp+var_258] 0 +
jmp loc_101E7DF  +
mov ecx offset a_ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101E6C0  +
test dx dx +
jz loc_101E6BC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101E6C0  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_101E69A  +
xor eax eax +
jmp loc_101E6C5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_101E7AB  +
mov ecx offset a__ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101E6FE  +
test dx dx +
jz loc_101E6FA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101E6FE  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_101E6D8  +
xor eax eax +
jmp loc_101E703  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_101E7AB  +
lea eax [ebp+FindFileData.cFileName] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101E714  +
mov ecx [ebp+var_268] +
sub eax edx +
sar eax 1 +
lea edi [eax+ecx+2] +
cmp esi edi +
jnb loc_101E758  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov esi edi +
lea eax [esi+esi] +
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+lpPathName]  +
push offset aSS  +
push esi  +
push [ebp+lpMem]  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_101E83C  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
push [ebp+lpMem]  +
jz loc_101E7A1  +
call sub_101E5B8  +
mov [ebp+var_258] eax +
test eax eax +
jnz loc_101E7F6  +
jmp loc_101E7AB  +
call ds:DeleteFileW  +
test eax eax +
jz loc_101E7EA  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101E68F  +
push [ebp+hFindFile]  +
call ds:FindClose  +
or [ebp+hFindFile] 0FFFFFFFFh +
mov edi dword ptr [ebp+lpPathName] +
push edi  +
call ds:RemoveDirectoryW  +
test eax eax +
jnz loc_101E7F6  +
call ds:GetLastError  +
mov [ebp+var_258] eax +
cmp [ebp+lpMem] 0 +
pop esi  +
jz loc_101E811  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_101E826  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_258] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 4  +
call ds:GetLastError  +
mov [ebp+var_258] eax +
test eax eax +
jnz loc_101E7F6  +
mov [ebp+var_258] 1 +
jmp loc_101E7F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
cmp esi ebx +
jz loc_101E8B3  +
mov edi [ebp+arg_4] +
cmp edi ebx +
jz loc_101E8B3  +
cmp [ebp+arg_8] ebx +
jbe loc_101E8AE  +
sub edi esi +
movzx eax word ptr [esi] +
cmp ax [ebp+arg_C] +
jnz loc_101E88B  +
mov ax [ebp+arg_10] +
jmp loc_101E897  +
test ax ax +
jz loc_101E8A5  +
push eax  +
call towlower  +
pop ecx  +
mov [edi+esi] ax +
inc ebx  +
inc esi  +
inc esi  +
cmp ebx [ebp+arg_8] +
jb loc_101E87C  +
jmp loc_101E8AE  +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ecx+ebx*2] ax +
xor eax eax +
inc eax  +
jmp loc_101E8B5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
xor ecx ecx +
push esi  +
and edx 0FF00h +
mov eax 80004005h +
push edi  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_10] edx +
mov edi eax +
cmp ebx ecx +
jz loc_101EC15  +
mov esi [ebp+arg_C] +
cmp esi ecx +
jz loc_101EC15  +
movzx ecx byte ptr [ebp+arg_4] +
dec ecx  +
cmp ecx 0Dh +
ja loc_101EB93  +
jmp ds:off_101EC21[ecx*4]  +
cmp edx 100h +
jnz loc_101E92A  +
push dword ptr [ebp+arg_0]  +
push offset aS_0  +
jmp loc_101EB23  +
cmp edx 400h +
jnz loc_101E993  +
push 2  +
push esi  +
call sub_101E275  +
test eax eax +
jbe loc_101E95B  +
push 2  +
push esi  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
jmp loc_101E95F  +
and [ebp+lpMem] 0 +
cmp [ebp+lpMem] 0 +
jz loc_101EB97  +
push 2Fh  +
push 5Ch  +
push esi  +
push [ebp+lpMem]  +
push dword ptr [ebp+arg_0]  +
call sub_101E85D  +
test eax eax +
jz loc_101EB97  +
push offset a_owner  +
push [ebp+lpMem]  +
push offset aGlobalSBaseS  +
jmp loc_101EB84  +
cmp edx 500h +
jnz loc_101EB97  +
push offset aRc  +
push dword ptr [ebp+arg_0]  +
push offset aSS_0  +
jmp loc_101EB84  +
mov [ebp+var_C] offset aRescache_ccm +
and [ebp+var_8] 0 +
jmp loc_101EB97  +
mov [ebp+var_C] offset aRescache_mni +
jmp loc_101E9B8  +
cmp edx 500h +
jnz loc_101E9E4  +
push offset aRescache_dir  +
push dword ptr [ebp+arg_0]  +
push offset aSS_1  +
jmp loc_101EB84  +
mov [ebp+var_C] offset aRescache_dir +
mov [ebp+var_8] offset aDirectory +
jmp loc_101EB93  +
cmp edx 500h +
jnz loc_101EB97  +
push offset a_cmf  +
push offset aSegment  +
push dword ptr [ebp+arg_0]  +
push offset aSSS  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 18h +
jmp loc_101EB91  +
cmp edx 500h +
jnz loc_101EB97  +
push offset a_toc  +
jmp loc_101EA08  +
cmp edx 500h +
jnz loc_101EA49  +
push offset aRescache_hit  +
jmp loc_101E9D7  +
mov [ebp+var_C] offset aRescache_hit +
mov [ebp+var_8] offset aCmfhits +
jmp loc_101EB93  +
mov [ebp+var_C] offset aRescache_usg +
jmp loc_101E9B8  +
cmp edx 100h +
jz loc_101EAEA  +
cmp edx 500h +
jz loc_101EAEA  +
cmp edx 400h +
jnz loc_101EB97  +
push 2  +
push esi  +
call sub_101E275  +
test eax eax +
jbe loc_101EAAD  +
push 2  +
push esi  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
jmp loc_101EAB1  +
and [ebp+lpMem] 0 +
cmp [ebp+lpMem] 0 +
jz loc_101EB97  +
push 2Fh  +
push 5Ch  +
push esi  +
push [ebp+lpMem]  +
push dword ptr [ebp+arg_0]  +
call sub_101E85D  +
test eax eax +
jz loc_101EB97  +
push offset a_owner  +
push offset aWip  +
push [ebp+lpMem]  +
push offset aGlobalSSS  +
jmp loc_101EA15  +
push offset aWip  +
push dword ptr [ebp+arg_0]  +
push offset aSS  +
jmp loc_101EB84  +
cmp edx 500h +
jnz loc_101EB13  +
push offset a_tmp  +
push offset aUpd_0  +
jmp loc_101EA0D  +
cmp edx 100h +
jnz loc_101EB97  +
push dword ptr [ebp+arg_0]  +
push offset aS_1  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 10h +
jmp loc_101EB91  +
cmp edx 100h +
jnz loc_101EB97  +
push offset aUpd  +
jmp loc_101EAEF  +
cmp edx 100h +
jnz loc_101EB97  +
push offset aTmp  +
push offset aUpd  +
push dword ptr [ebp+arg_0]  +
push offset aSSS_0  +
jmp loc_101EA15  +
cmp edx 100h +
jnz loc_101EB97  +
push offset aRdy  +
jmp loc_101EB7C  +
cmp edx 100h +
jnz loc_101EB97  +
push offset aUpd_1  +
push dword ptr [ebp+arg_0]  +
push offset aSS_2  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 14h +
mov edi eax +
test edi edi +
jge loc_101EBD2  +
cmp [ebp+var_10] 100h +
jz loc_101EBB2  +
cmp [ebp+var_10] 200h +
jz loc_101EC02  +
cmp [ebp+var_10] 500h +
jnz loc_101EBD2  +
cmp [ebp+var_C] 0 +
jz loc_101EBD2  +
push [ebp+var_C]  +
push dword ptr [ebp+arg_0]  +
push offset aSS  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
mov edi eax +
add esp 14h +
xor eax eax +
cmp eax esi +
sbb eax eax +
lea ecx [esi-1] +
and eax ecx +
xor ecx ecx +
mov [ebx+eax*2] cx +
cmp [ebp+lpMem] ecx +
jz loc_101EBF9  +
push [ebp+lpMem]  +
push ecx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
test edi edi +
setnl al  +
jmp loc_101EC17  +
cmp [ebp+var_8] 0 +
jz loc_101EBD2  +
push [ebp+var_8]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_2  +
jmp loc_101EBC3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov edx [ebp+lpMem] +
push ebx  +
mov ebx [ebp+arg_C] +
xor eax eax +
and edx 0FF00h +
push esi  +
mov ecx 80004005h +
push edi  +
mov [ebp+var_C] eax +
mov [ebp+var_10] eax +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
mov [ebp+var_14] edx +
cmp ebx eax +
jz loc_101EE67  +
mov esi [ebp+arg_10] +
cmp esi eax +
jz loc_101EE67  +
cmp [ebp+arg_8] eax +
jge loc_101ECB5  +
push esi  +
push ebx  +
push [ebp+lpMem]  +
push dword ptr [ebp+arg_0]  +
call sub_101E8C1  +
jmp loc_101EE69  +
movzx eax byte ptr [ebp+lpMem] +
dec eax  +
mov edi offset aRc +
jz loc_101EDEC  +
sub eax 3 +
jz loc_101ED8B  +
dec eax  +
jz loc_101ED77  +
dec eax  +
jz loc_101ED61  +
sub eax 5 +
jz loc_101ED3E  +
sub eax 3 +
jnz loc_101EF32  +
cmp edx 100h +
jz loc_101ED1B  +
cmp edx 500h +
jz loc_101ED1B  +
cmp edx 200h +
jnz loc_101EF32  +
push offset aCmfhits  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_0]  +
push offset aS04dS  +
jmp loc_101EF15  +
push offset aRescache_hit  +
push [ebp+arg_8]  +
push edi  +
push dword ptr [ebp+arg_0]  +
push offset aSS04dS  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 1Ch +
jmp loc_101EF22  +
cmp edx 100h +
jnz loc_101EF3E  +
push offset a_tmp  +
push [ebp+arg_8]  +
push offset aUpd_0  +
push dword ptr [ebp+arg_0]  +
push offset aSS04dS_0  +
jmp loc_101ED2C  +
mov [ebp+var_C] offset aSegment +
mov [ebp+var_10] offset a_toc +
mov [ebp+var_4] ecx +
jmp loc_101EF32  +
mov eax offset aSegment +
mov [ebp+var_C] eax +
mov [ebp+var_10] offset a_cmf +
mov [ebp+var_8] eax +
jmp loc_101ED6F  +
cmp edx 100h +
jz loc_101EDE2  +
cmp edx 500h +
jz loc_101EDE2  +
cmp edx 200h +
jnz loc_101EDAD  +
push offset aDirectory  +
jmp loc_101ED0B  +
cmp edx 300h +
jnz loc_101EDCF  +
push offset a_init  +
push offset aDirectory  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_0]  +
push offset aS04dSS  +
jmp loc_101ED2C  +
cmp edx 400h +
jnz loc_101EF32  +
push offset a_owner  +
jmp loc_101EDBA  +
push offset aRescache_dir  +
jmp loc_101ED20  +
cmp edx 100h +
jz loc_101EF09  +
cmp edx 500h +
jz loc_101EF09  +
cmp edx 300h +
jnz loc_101EEA6  +
push 2  +
push esi  +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_101EE3B  +
push 2  +
push esi  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
jmp loc_101EE3F  +
and [ebp+lpMem] 0 +
cmp [ebp+lpMem] 0 +
jz loc_101EE67  +
push 2Fh  +
push 5Ch  +
push esi  +
push [ebp+lpMem]  +
push dword ptr [ebp+arg_0]  +
call sub_101E85D  +
test eax eax +
jnz loc_101EE70  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
push offset a_init  +
push [ebp+arg_8]  +
lea eax [esi-1] +
push edi  +
push [ebp+lpMem]  +
push offset aGlobalSS04dS  +
push eax  +
push [ebp+arg_C]  +
call sub_1018EA1  +
add esp 1Ch +
push [ebp+lpMem]  +
mov [ebp+var_4] eax +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov ebx [ebp+arg_C] +
jmp loc_101EF25  +
cmp edx 400h +
jnz loc_101EF32  +
push 2  +
push esi  +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_101EEDD  +
push 2  +
push esi  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
jmp loc_101EEE1  +
and [ebp+lpMem] 0 +
cmp [ebp+lpMem] 0 +
jz loc_101EE67  +
push 2Fh  +
push 5Ch  +
push esi  +
push [ebp+lpMem]  +
push dword ptr [ebp+arg_0]  +
call sub_101E85D  +
test eax eax +
jz loc_101EE59  +
push offset a_owner  +
jmp loc_101EE75  +
push [ebp+arg_8]  +
push edi  +
push dword ptr [ebp+arg_0]  +
push offset aSS04d  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 18h +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_101EFFF  +
mov edx [ebp+var_14] +
cmp edx 100h +
jz loc_101EFD8  +
cmp edx 200h +
jz loc_101EFB5  +
cmp edx 300h +
jz loc_101EFA8  +
cmp edx 400h +
jz loc_101EF8D  +
cmp edx 500h +
jnz loc_101EFFF  +
cmp [ebp+var_C] 0 +
jz loc_101EFFF  +
push [ebp+var_10]  +
lea eax [esi-1] +
push [ebp+var_C]  +
push [ebp+arg_8]  +
push edi  +
push dword ptr [ebp+arg_0]  +
push offset aSS04dSS  +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 20h +
jmp loc_101EFFC  +
cmp [ebp+var_8] 0 +
jz loc_101EFFF  +
push offset a_owner  +
push [ebp+arg_8]  +
push [ebp+var_8]  +
push dword ptr [ebp+arg_0]  +
push offset aSSDS  +
jmp loc_101EFEF  +
cmp [ebp+var_8] 0 +
jz loc_101EFFF  +
push offset a_init  +
jmp loc_101EF98  +
cmp [ebp+var_8] 0 +
jz loc_101EFFF  +
push [ebp+arg_8]  +
lea eax [esi-1] +
push [ebp+var_8]  +
push dword ptr [ebp+arg_0]  +
push offset aSSD  +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 18h +
jmp loc_101EFFC  +
cmp [ebp+var_C] 0 +
jz loc_101EFFF  +
push [ebp+var_10]  +
push [ebp+arg_8]  +
push [ebp+var_C]  +
push dword ptr [ebp+arg_0]  +
push offset aSSDS_0  +
lea eax [esi-1] +
push eax  +
push ebx  +
call sub_1018EA1  +
add esp 1Ch +
mov [ebp+var_4] eax +
xor eax eax +
cmp eax esi +
sbb eax eax +
lea ecx [esi-1] +
and eax ecx +
xor ecx ecx +
mov [ebx+eax*2] cx +
xor eax eax +
cmp [ebp+var_4] ecx +
setnl al  +
jmp loc_101EE69  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
or [ebp+var_418] 0FFFFFFFFh +
push esi  +
mov [ebp+var_41C] ecx +
test eax eax +
jge loc_101F053  +
xor esi esi +
jmp loc_101F056  +
lea esi [eax+1] +
test ecx ecx +
jnz loc_101F062  +
or eax 0FFFFFFFFh +
jmp loc_101F0FF  +
push edi  +
mov edi 270Fh +
cmp esi edi +
jle loc_101F07C  +
cmp [ebp+arg_8] 0 +
jz loc_101F078  +
and [ebp+arg_8] 0 +
xor esi esi +
cmp esi edi +
jg loc_101F0F8  +
push ebx  +
mov ebx 104h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
push 101h  +
push [ebp+var_41C]  +
call sub_101EC5E  +
test eax eax +
jz loc_101F0F7  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_101F0F7  +
push ebx  +
lea eax [ebp+var_414] +
push eax  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_101F0F7  +
lea eax [ebp+var_414] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_101F0F7  +
mov [ebp+var_418] esi +
inc esi  +
cmp esi edi +
jle loc_101F082  +
cmp [ebp+arg_8] 0 +
jz loc_101F0F3  +
and [ebp+arg_8] 0 +
xor esi esi +
cmp esi edi +
jle loc_101F082  +
pop ebx  +
mov eax [ebp+var_418] +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 670h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov dword ptr [ebp+var_670] eax +
test eax eax +
jnz loc_101F13D  +
or eax 0FFFFFFFFh +
jmp loc_101F28B  +
push esi  +
mov esi 104h +
push esi  +
lea ecx [ebp+FileName] +
push ecx  +
push 501h  +
push eax  +
call sub_101E8C1  +
test eax eax +
jnz loc_101F162  +
or eax 0FFFFFFFFh +
jmp loc_101F28A  +
push edi  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
or edi 0FFFFFFFFh +
mov [ebp+hFindFile] eax +
mov [ebp+var_66C] edi +
cmp eax edi +
jz loc_101F283  +
push ebx  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_101F24D  +
push 2  +
lea eax [ebp+FindFileData.cFileName] +
push offset aRc  +
push eax  +
call _wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101F24D  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_101F24D  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [ebp+var_670]  +
lea eax [ebp+var_414] +
push offset aSS  +
push 103h  +
push eax  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_101F24D  +
lea eax [ebp+var_414] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax edi +
jz loc_101F24D  +
push 2  +
xor edx edx +
pop eax  +
movzx ecx [ebp+eax*2+FindFileData.cFileName] +
test cx cx +
jz loc_101F23F  +
movzx ecx cx +
lea ebx [ecx-30h] +
cmp bx 9 +
ja loc_101F23D  +
imul edx edx +
movzx ecx cx +
inc eax  +
cmp eax esi +
lea edx [edx+ecx-30h] +
jl loc_101F213  +
jmp loc_101F23F  +
mov edx edi +
cmp edx [ebp+var_66C] +
jle loc_101F24D  +
mov [ebp+var_66C] edx +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101F276  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov [ebp+hFindFile] edi +
cmp [ebp+hFindFile] edi +
jnz loc_101F18F  +
pop ebx  +
mov eax [ebp+var_66C] +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101C23D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_101F2BD  +
mov eax [ebp+arg_0] +
jb loc_101F2B3  +
cmp eax 0FFFFFFFFh +
ja loc_101F2BD  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
inc eax  +
jmp loc_101F2C5  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset sub_102C8D1  +
push [ebp+arg_4]  +
push [ebp+lpName]  +
call sub_101C96B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jz loc_101F32B  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_101F32B  +
mov esi [eax+14h] +
test esi esi +
jz loc_101F32B  +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_101F32B  +
mov eax [ebp+arg_4] +
cmp eax [edx+44h] +
jnb loc_101F32B  +
shl eax 5 +
mov eax [eax+ecx+14h] +
test eax eax +
jl loc_101F333  +
cmp eax [edx+50h] +
jnb loc_101F333  +
lea eax [esi+eax*2] +
jmp loc_101F335  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_101F3B8  +
mov esi [edi+0Ch] +
cmp esi ebx +
jz loc_101F3B8  +
cmp [esi+44h] ebx +
jz loc_101F3B8  +
cmp [ebp+arg_4] ebx +
jz loc_101F3B8  +
mov ecx [esi+34h] +
cmp ecx 1 +
jb loc_101F3B4  +
mov eax [esi+44h] +
cmp eax ecx +
jnb loc_101F3B4  +
mov [ebp+arg_0] ebx +
cmp eax ebx +
jbe loc_101F3C0  +
mov eax [edi+10h] +
mov eax [ebx+eax+14h] +
test eax eax +
jl loc_101F39F  +
mov ecx [edi+0Ch] +
cmp eax [ecx+50h] +
jge loc_101F39F  +
mov ecx [edi+14h] +
push 1  +
push [ebp+arg_4]  +
lea eax [ecx+eax*2] +
push eax  +
call sub_101CFAD  +
test eax eax +
jz loc_101F3AF  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add ebx 20h +
cmp eax [esi+44h] +
jb loc_101F377  +
jmp loc_101F3C0  +
mov eax [ebp+arg_0] +
jmp loc_101F3C3  +
push 18h  +
jmp loc_101F3BA  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
test ebx ebx +
jz loc_101F467  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_101F467  +
mov ecx [ebx+18h] +
test ecx ecx +
jz loc_101F467  +
mov edi [eax+58h] +
mov eax [eax+48h] +
cmp edi eax +
jge loc_101F467  +
mov edx [ebp+arg_4] +
or edx [ebp+arg_8] +
jnz loc_101F40E  +
mov edx [ebp+arg_C] +
or edx [ebp+arg_10] +
jz loc_101F467  +
test edi edi +
jl loc_101F46F  +
push esi  +
mov esi edi +
imul esi esi +
add esi ecx +
mov [ebp+arg_0] eax +
jz loc_101F461  +
cmp [ebp+arg_0] 0 +
jz loc_101F461  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1020570  +
test eax eax +
jge loc_101F438  +
mov edi [esi+20h] +
jmp loc_101F43D  +
jle loc_101F45E  +
mov edi [esi+28h] +
test edi edi +
jl loc_101F453  +
mov eax [ebx+0Ch] +
cmp edi [eax+48h] +
jge loc_101F453  +
mov esi edi +
imul esi esi +
add esi [ebx+18h] +
jmp loc_101F455  +
xor esi esi +
dec [ebp+arg_0]  +
test esi esi +
jnz loc_101F41F  +
jmp loc_101F461  +
mov [ebp+var_4] edi +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_101F472  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_101F48C  +
xor eax eax +
jmp loc_101F505  +
cmp [ebp+arg_4] 0 +
jnz loc_101F499  +
mov [ebp+arg_4] 0Ah +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetProcessHeap +
push 0Ch  +
push 8  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_101F4ED  +
push 4  +
push [ebp+arg_4]  +
call sub_101E275  +
test eax eax +
jbe loc_101F4D9  +
push 4  +
push [ebp+arg_4]  +
call sub_101E275  +
push eax  +
push 0  +
call edi  +
push eax  +
call ebx  +
jmp loc_101F4DB  +
xor eax eax +
mov [esi+8] eax +
test eax eax +
jnz loc_101F4F1  +
push esi  +
push eax  +
call edi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_101F502  +
mov eax [ebp+arg_4] +
and dword ptr [esi] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_0] +
mov [eax] esi +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_101F52A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101F5D3  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_101F535  +
push 0Dh  +
jmp loc_101F51D  +
mov eax [ebx] +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
push ecx  +
test al 1 +
jz loc_101F56F  +
call ds:UnmapViewOfFile  +
mov eax [ebx+4] +
test eax eax +
jz loc_101F55E  +
push eax  +
call ds:CloseHandle  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_101F5BB  +
push eax  +
call ds:CloseHandle  +
jmp loc_101F5BB  +
push 0  +
test al 4 +
jnz loc_101F57C  +
call edi  +
push eax  +
call esi  +
jmp loc_101F5BB  +
call edi  +
push eax  +
call esi  +
mov eax [ebx+10h] +
test eax eax +
jz loc_101F590  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax [ebx+14h] +
test eax eax +
jz loc_101F59F  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax [ebx+18h] +
test eax eax +
jz loc_101F5AE  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_101F5BB  +
push eax  +
call sub_101CBEF  +
push 24h  +
pop ecx  +
mov eax ebx +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_101F5C0  +
push ebx  +
push ecx  +
call edi  +
push eax  +
call esi  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_101F3CF  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_14] +
push ebx  +
and eax 0FFFF0000h +
push esi  +
push edi  +
cmp eax 100000h +
jnz loc_101F627  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_101F668  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
push esi  +
call sub_101F3CF  +
mov ecx [esi+0Ch] +
mov edx [ecx+48h] +
mov edi edx +
jmp loc_101F664  +
cmp eax edx +
jge loc_101F668  +
test edi edi +
jz loc_101F668  +
mov ebx [esi+18h] +
mov ecx eax +
imul ecx ecx +
add ecx ebx +
mov ebx [ebp+arg_14] +
cmp [ecx+10h] ebx +
jz loc_101F668  +
mov eax [ecx+24h] +
dec edi  +
test eax eax +
jge loc_101F646  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
push eax  +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_101F7C2  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_101F7C2  +
push ebx  +
push esi  +
push edi  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_101F7B8  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov esi [ebp+arg_4] +
cmp esi [eax+48h] +
jge loc_101F7BF  +
test esi esi +
jl loc_101F7BF  +
mov eax [ebp+arg_8] +
add eax esi +
cmp byte ptr [eax] 1 +
jz loc_101F7BF  +
imul esi esi +
mov byte ptr [eax] 1 +
mov eax [edi+18h] +
add eax esi +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
mov edx [eax+24h] +
mov eax [edi+0Ch] +
mov eax [eax+48h] +
cmp ebx eax +
mov [ebp+arg_0] ecx +
mov [ebp+var_8] edx +
jge loc_101F7BF  +
cmp ecx eax +
jge loc_101F7BF  +
cmp edx eax +
jge loc_101F7BF  +
test ebx ebx +
jl loc_101F74A  +
push [ebp+var_4]  +
push ebx  +
call sub_1027744  +
test eax eax +
jz loc_101F7BF  +
mov eax [edi+18h] +
imul ebx ebx +
add ebx eax +
push ebx  +
add eax esi +
push eax  +
call sub_1020570  +
test eax eax +
jle loc_101F7BF  +
cmp [ebp+arg_0] 0 +
jl loc_101F777  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call sub_1027744  +
test eax eax +
jz loc_101F7BF  +
mov eax [ebp+arg_0] +
mov ecx [edi+18h] +
imul eax eax +
add eax ecx +
push eax  +
add ecx esi +
push ecx  +
call sub_1020570  +
test eax eax +
jge loc_101F7BF  +
cmp [ebp+var_8] 0 +
jl loc_101F7A4  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1027744  +
test eax eax +
jz loc_101F7BF  +
mov eax [ebp+var_8] +
mov ecx [edi+18h] +
imul eax eax +
add eax ecx +
push eax  +
add ecx esi +
push ecx  +
call sub_1020570  +
test eax eax +
jnz loc_101F7BF  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_101F6C3  +
mov [ebp+var_C] 1 +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_101F829  +
cmp dword ptr [ebx+18h] 0 +
jz loc_101F829  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_101F603  +
mov esi eax +
test esi esi +
jl loc_101F83B  +
push [ebp+arg_1C]  +
imul eax eax +
mov ecx [ebp+arg_18] +
add eax [ebx+18h] +
and ecx 0FF000001h +
push ecx  +
push dword ptr [eax+2Ch]  +
call sub_101C8D5  +
test eax eax +
jz loc_101F83B  +
mov eax esi +
jmp loc_101F83E  +
call ds:GetLastError  +
test eax eax +
jnz loc_101F83B  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
inc edi  +
xor ebx ebx +
mov [ebp+var_4] edi +
cmp esi ebx +
jz loc_101F921  +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_101F921  +
mov ecx [eax+48h] +
cmp ecx ebx +
jnz loc_101F87F  +
mov eax edi +
jmp loc_101F923  +
cmp [eax+58h] ebx +
jge loc_101F88D  +
cmp [eax+5Ch] ebx +
jl loc_101F921  +
push edi  +
push ecx  +
call sub_101E275  +
test eax eax +
jbe loc_101F8B8  +
mov eax [esi+0Ch] +
push edi  +
push dword ptr [eax+48h]  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_101F8BA  +
xor edi edi +
cmp edi ebx +
jz loc_101F921  +
mov eax [esi+0Ch] +
mov eax [eax+58h] +
cmp eax ebx +
jl loc_101F8D4  +
push edi  +
push eax  +
push esi  +
call sub_101F674  +
test eax eax +
jz loc_101F90A  +
mov eax [esi+0Ch] +
mov eax [eax+5Ch] +
jmp loc_101F8F7  +
mov ecx [esi+0Ch] +
cmp eax [ecx+48h] +
jnb loc_101F90A  +
cmp [edi+eax] bl +
jnz loc_101F90A  +
mov byte ptr [edi+eax] 1 +
imul eax eax +
mov ecx [esi+18h] +
mov eax [eax+ecx+24h] +
cmp eax ebx +
jge loc_101F8DC  +
mov eax [esi+0Ch] +
mov eax [eax+60h] +
cmp eax ebx +
jl loc_101F90D  +
cmp [eax+edi] bl +
jnz loc_101F90D  +
mov [ebp+var_4] ebx +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
jmp loc_101F923  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_101F96B  +
cmp dword ptr [ebx+18h] 0 +
jz loc_101F96B  +
push [ebp+arg_1C]  +
lea esi [ebp+arg_4] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_101F7D6  +
test eax eax +
jl loc_101F97D  +
imul eax eax +
add eax [ebx+18h] +
jmp loc_101F97F  +
call ds:GetLastError  +
test eax eax +
jnz loc_101F97D  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 2  +
push 1  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F7D6  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_101FA14  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_101FA14  +
mov eax [ebx+20h] +
test eax eax +
jz loc_101FA14  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_101FA14  +
cmp dword ptr [eax+10h] 0 +
jz loc_101FA14  +
mov eax [ecx+0Ch] +
cmp eax [edx+3Ch] +
jnz loc_101FA14  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_101F98B  +
mov edx eax +
test edx edx +
jl loc_101FA1C  +
mov eax [ebx+20h] +
mov ecx [eax+10h] +
mov eax [ecx+edx*8] +
mov edx [ecx+edx*8+4] +
jmp loc_101FA20  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
xor edx edx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] 3 +
test edi edi +
jnz loc_101FA65  +
push 57h  +
call ds:SetLastError  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_101FA5C  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push [ebp+arg_4]  +
mov esi [edi+0Ch] +
push esi  +
call sub_102C7E2  +
test eax eax +
jz loc_101FA50  +
xchg eax [ebp+arg_0] +
mov ebx [esi+10h] +
push edi  +
call sub_101F84A  +
test eax eax +
jz loc_101FAA2  +
mov eax [edi+0Ch] +
mov eax [eax+58h] +
test eax eax +
jl loc_101FABA  +
lea ecx [ebp+var_4] +
push ecx  +
push 0  +
push eax  +
push edi  +
call sub_102C939  +
cmp [ebp+var_4] 0 +
jbe loc_101FABA  +
xchg eax [ebp+arg_4] +
mov eax [esi+18h] +
cmp ebx eax +
ja loc_101FAB3  +
mov eax [esi+14h] +
cmp ebx eax +
jbe loc_101FA50  +
dec [ebp+var_8]  +
jnz loc_101FA75  +
jmp loc_101FA50  +
cmp [ebp+var_8] 0 +
jz loc_101FA50  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_101FACC  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
inc eax  +
jmp loc_101FA5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 10h  +
mov [ebp+var_8] esi +
pop edi  +
mov [ebp+var_C] 1 +
mov [ebp+var_4] esi +
cmp [ebp+lpBaseAddress] esi +
jz loc_101FB02  +
push 50h  +
pop edi  +
mov [ebp+var_C] 3 +
cmp [ebp+arg_8] esi +
jz loc_101FB0A  +
or edi 2 +
cmp [ebp+arg_C] esi +
jz loc_101FB12  +
or edi 4 +
cmp [ebp+arg_10] esi +
jz loc_101FB1A  +
or edi 8 +
mov ebx [ebp+arg_14] +
cmp ebx esi +
jz loc_101FB26  +
mov eax [ebx] +
mov [ebp+var_4] eax +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
push edi  +
call sub_101CEDD  +
mov [ebp+lpBaseAddress] eax +
cmp ebx esi +
jz loc_101FB4D  +
mov ecx [ebp+var_4] +
and ecx 0FFE8FFFFh +
mov [ebx] ecx +
cmp eax esi +
jnz loc_101FB58  +
xor eax eax +
jmp loc_101FBE9  +
mov ecx [ebp+arg_0] +
cmp ecx esi +
jl loc_101FB6D  +
cmp [ebp+arg_8] ecx +
jz loc_101FB6D  +
push eax  +
call ds:UnmapViewOfFile  +
jmp loc_101FB51  +
push [ebp+var_C]  +
push [ebp+var_8]  +
push eax  +
call sub_102C8D1  +
mov ebx eax +
cmp ebx esi +
jnz loc_101FB8A  +
push [ebp+lpBaseAddress]  +
call ds:UnmapViewOfFile  +
jmp loc_101FBE7  +
test [ebp+var_4] 1C0000h +
jnz loc_101FBE7  +
push esi  +
push [ebp+var_8]  +
push ebx  +
call sub_101FA2C  +
push esi  +
push esi  +
push esi  +
push [ebp+arg_0]  +
test eax eax +
jnz loc_101FBDB  +
or edi 120000h +
push edi  +
call sub_101CEDD  +
test edi 10000h +
jnz loc_101FBCF  +
push ebx  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push [ebp+lpBaseAddress]  +
jmp loc_101FB65  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+30h] 100000h +
jmp loc_101FBE7  +
or edi 60000h +
push edi  +
call sub_101CEDD  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 2  +
push 1  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F92F  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor esi esi +
push 206h  +
mov word ptr [ebp+var_20C] ax +
lea eax [ebp+var_20C+2] +
push esi  +
push eax  +
mov [ebp+var_214] esi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
mov [ebp+var_210] esi +
call sub_101E3E2  +
dec eax  +
cmp eax 102h +
ja loc_101FC8B  +
lea eax [ebp+var_20C] +
mov [ebp+var_210] eax +
mov edi ds:GetProcessHeap +
push 1Ch  +
push 8  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
xor eax eax +
cmp esi eax +
jnz loc_101FCC3  +
call ds:GetLastError  +
test eax eax +
jnz loc_101FD5E  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_101FD5E  +
lea ecx [ebp+var_214] +
push ecx  +
push eax  +
push eax  +
push eax  +
push eax  +
push 0FFFFFFFFh  +
mov [esi+8] eax +
call sub_101FAD6  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_101FD45  +
mov eax [eax+0Ch] +
cmp dword ptr [eax+44h] 1 +
jnb loc_101FCEF  +
push 20010502h  +
jmp loc_101FD3F  +
push 1  +
call sub_10205F2  +
mov ecx [esi+0Ch] +
mov [ecx+20h] eax +
mov eax [esi+0Ch] +
mov eax [eax+0Ch] +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
test eax eax +
jbe loc_101FD2A  +
mov eax [esi+0Ch] +
mov eax [eax+0Ch] +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
push eax  +
push 8  +
call edi  +
push eax  +
call ebx  +
jmp loc_101FD2C  +
xor eax eax +
mov [esi+10h] eax +
test eax eax +
jnz loc_101FD62  +
call ds:GetLastError  +
test eax eax +
jnz loc_101FD45  +
push 0Eh  +
call ds:SetLastError  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_101FD52  +
push eax  +
call sub_101F50E  +
push esi  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_101FD95  +
cmp [ebp+var_210] 0 +
jz loc_101FD78  +
push [ebp+var_210]  +
call sub_101E529  +
jmp loc_101FD7A  +
xor eax eax +
and dword ptr [esi+18h] 0 +
or dword ptr [esi] 80h +
mov [esi+14h] eax +
mov eax [ebp+var_214] +
and eax 7 +
or [esi+4] eax +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+var_418] eax +
mov [ebp+var_41C] esi +
test eax eax +
jnz loc_101FDE1  +
mov [ebp+var_418] offset aGlobalRescache +
push 0  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+var_418]  +
call sub_101D997  +
test eax eax +
jz loc_101FE23  +
lea eax [ebp+var_414] +
test esi esi +
jnz loc_101FE10  +
mov [ebp+var_41C] eax +
jmp loc_101FE2B  +
push eax  +
push esi  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101FF1B  +
jmp loc_101FE2B  +
test esi esi +
jz loc_101FF1B  +
mov ebx ds:GetProcessHeap +
push 1Ch  +
push 8  +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov esi eax +
test esi esi +
jz loc_101FEEC  +
and dword ptr [esi+8] 0 +
push 104h  +
lea eax [ebp+Name] +
push eax  +
push 204h  +
push [ebp+var_418]  +
call sub_101E8C1  +
test eax eax +
jz loc_101FEFE  +
push 0  +
lea eax [ebp+Name] +
push eax  +
call sub_101F2CE  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_101FEFE  +
mov eax [eax+0Ch] +
cmp dword ptr [eax+44h] 1 +
jnb loc_101FE97  +
push 20010502h  +
jmp loc_101FEF8  +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
test eax eax +
jbe loc_101FEBF  +
mov eax [esi+0Ch] +
mov eax [eax+0Ch] +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call edi  +
jmp loc_101FEC1  +
xor eax eax +
mov [esi+10h] eax +
test eax eax +
jz loc_101FEEC  +
push [ebp+var_41C]  +
call sub_101E529  +
mov [esi+14h] eax +
test eax eax +
jz loc_101FEEC  +
push [ebp+var_418]  +
call sub_101E529  +
mov [esi+18h] eax +
test eax eax +
jnz loc_101FF1F  +
call ds:GetLastError  +
test eax eax +
jnz loc_101FEFE  +
push 0Eh  +
call ds:SetLastError  +
test esi esi +
jz loc_101FF1B  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_101FF0F  +
push eax  +
call sub_101F50E  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_101FF7E  +
push 104h  +
lea eax [ebp+Name] +
push eax  +
push 20Eh  +
push [ebp+var_418]  +
call sub_101E8C1  +
test eax eax +
jz loc_101FF7C  +
push 0  +
lea eax [ebp+Name] +
push eax  +
call sub_102064C  +
mov ecx [esi+0Ch] +
mov [ecx+20h] eax +
mov eax [esi+0Ch] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_101FF7C  +
test eax eax +
jz loc_101FF7C  +
mov edx [ecx+0Ch] +
mov eax [eax+0Ch] +
mov edx [edx+0Ch] +
cmp edx [eax+3Ch] +
jz loc_101FF7C  +
push ecx  +
call sub_10206A8  +
mov eax [esi+0Ch] +
and dword ptr [eax+20h] 0 +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
xor edi edi +
inc ebx  +
mov [ebp+var_8] edi +
cmp esi edi +
jnz loc_101FFB4  +
xor eax eax +
jmp loc_102007D  +
mov eax [esi+8] +
cmp eax edi +
jz loc_101FFC6  +
push eax  +
call sub_102CBC2  +
mov ebx eax +
mov [esi+8] edi +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1020009  +
mov eax [eax+20h] +
cmp eax edi +
jz loc_101FFE0  +
push eax  +
call sub_10206A8  +
mov eax [esi+0Ch] +
mov [eax+20h] edi +
mov eax [esi+0Ch] +
mov ecx [eax+0Ch] +
mov ecx [ecx+44h] +
push eax  +
mov [ebp+var_8] ecx +
call sub_101F50E  +
test eax eax +
jz loc_1020001  +
mov [ebp+arg_0] 1 +
cmp ebx edi +
jnz loc_1020004  +
mov [ebp+arg_0] edi +
mov [esi+0Ch] edi +
jmp loc_102000C  +
mov [ebp+arg_0] edi +
mov ebx ds:HeapFree +
cmp [esi+10h] edi +
jz loc_102006C  +
xor eax eax +
mov [ebp+var_4] eax +
cmp [ebp+var_8] edi +
jbe loc_102005A  +
mov ecx [esi+10h] +
lea eax [ecx+eax*4] +
cmp [eax] edi +
jz loc_102004E  +
push dword ptr [eax]  +
call sub_10208C0  +
test eax eax +
jz loc_1020042  +
cmp [ebp+arg_0] edi +
mov [ebp+arg_0] 1 +
jnz loc_1020045  +
mov [ebp+arg_0] edi +
mov eax [esi+10h] +
mov ecx [ebp+var_4] +
mov [eax+ecx*4] edi +
mov eax [ebp+var_4] +
inc eax  +
mov [ebp+var_4] eax +
cmp eax [ebp+var_8] +
jb loc_1020021  +
push dword ptr [esi+10h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov [esi+10h] edi +
jmp loc_102006F  +
mov [ebp+arg_0] edi +
push esi  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
or ebx 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_220] eax +
mov [ebp+var_21C] ecx +
mov [ebp+var_210] ebx +
mov [ebp+var_218] ebx +
mov [ebp+var_214] 1 +
test eax eax +
jnz loc_10200EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10200E8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10201EF  +
test esi esi +
jz loc_102013B  +
push 0  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push esi  +
call sub_101D997  +
test eax eax +
jz loc_1020134  +
test edi edi +
jnz loc_1020117  +
lea edi [ebp+var_20C] +
jmp loc_102013B  +
lea eax [ebp+var_20C] +
push eax  +
push edi  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102013B  +
xor esi esi +
mov [ebp+var_214] esi +
jmp loc_102013B  +
and [ebp+var_214] 0 +
push edi  +
push esi  +
call sub_101FDA9  +
test eax eax +
jz loc_102015D  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_1020157  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_1020157  +
mov ebx [ecx+0Ch] +
push eax  +
call sub_101FF94  +
cmp [ebp+var_214] 0 +
jz loc_10201AA  +
test esi esi +
jz loc_10201AA  +
lea eax [ebp+var_218] +
push eax  +
push esi  +
call sub_101D84A  +
test eax eax +
jz loc_10201AA  +
mov eax [ebp+var_218] +
test eax eax +
jl loc_10201AA  +
cmp eax ebx +
jz loc_10201AA  +
test ebx ebx +
jge loc_10201A4  +
mov ebx eax +
test edi edi +
jz loc_10201AA  +
push 1  +
push eax  +
push edi  +
call sub_101F022  +
test eax eax +
jl loc_10201AA  +
cmp eax ebx +
jz loc_10201AA  +
mov [ebp+var_210] eax +
test ebx ebx +
jge loc_10201D2  +
test edi edi +
jz loc_10201D2  +
push edi  +
call sub_101F113  +
mov ebx eax +
mov eax 270Fh +
cmp ebx eax +
jnz loc_10201D2  +
push 1  +
push eax  +
push edi  +
call sub_101F022  +
test eax eax +
jl loc_10201D2  +
mov ebx eax +
mov eax [ebp+var_220] +
mov [eax] ebx +
mov eax [ebp+var_21C] +
test eax eax +
jz loc_10201EC  +
mov ecx [ebp+var_210] +
mov [eax] ecx +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_218] eax +
push 104h  +
lea eax [ebp+var_20C] +
or esi 0FFFFFFFFh +
push eax  +
mov [ebp+var_210] esi +
mov [ebp+var_214] esi +
xor edi edi +
call sub_101E3E2  +
dec eax  +
cmp eax 102h +
ja loc_1020259  +
lea edi [ebp+var_20C] +
test ebx ebx +
jnz loc_1020276  +
call ds:GetLastError  +
test eax eax +
jnz loc_102026F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020319  +
call sub_101FC22  +
test eax eax +
jz loc_1020296  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_1020290  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_1020290  +
mov esi [ecx+0Ch] +
push eax  +
call sub_101FF94  +
lea eax [ebp+var_214] +
push eax  +
push offset aSystem  +
call sub_101D84A  +
test eax eax +
jz loc_10202DA  +
mov eax [ebp+var_214] +
test eax eax +
jl loc_10202DA  +
cmp eax esi +
jz loc_10202DA  +
test esi esi +
jge loc_10202D4  +
mov esi eax +
test edi edi +
jz loc_10202DA  +
push 1  +
push eax  +
push edi  +
call sub_101F022  +
test eax eax +
jl loc_10202DA  +
cmp eax esi +
jz loc_10202DA  +
mov [ebp+var_210] eax +
test esi esi +
jge loc_1020302  +
test edi edi +
jz loc_1020302  +
push edi  +
call sub_101F113  +
mov esi eax +
mov eax 270Fh +
cmp esi eax +
jnz loc_1020302  +
push 1  +
push eax  +
push edi  +
call sub_101F022  +
test eax eax +
jl loc_1020302  +
mov esi eax +
mov eax [ebp+var_218] +
mov [ebx] esi +
test eax eax +
jz loc_1020316  +
mov ecx [ebp+var_210] +
mov [eax] ecx +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor esi esi +
push 206h  +
mov word ptr [ebp+var_20C] ax +
lea eax [ebp+var_20C+2] +
push esi  +
push eax  +
mov [ebp+var_214] esi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
mov [ebp+var_210] esi +
call sub_101E3E2  +
dec eax  +
cmp eax 102h +
ja loc_1020398  +
lea eax [ebp+var_20C] +
mov [ebp+var_210] eax +
mov edi ds:GetProcessHeap +
push 1Ch  +
push 8  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
test esi esi +
jnz loc_10203CE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1020488  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_1020488  +
mov eax [ebp+arg_0] +
and dword ptr [esi+8] 0 +
test eax eax +
jge loc_10203F2  +
lea eax [ebp+var_21C] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_1020205  +
mov eax [ebp+var_218] +
lea ecx [ebp+var_214] +
push ecx  +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0  +
push eax  +
call sub_101FAD6  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_102046F  +
mov eax [eax+0Ch] +
cmp dword ptr [eax+44h] 1 +
jb loc_102046F  +
push 1  +
call sub_10205F2  +
mov ecx [esi+0Ch] +
mov [ecx+20h] eax +
mov eax [esi+0Ch] +
mov eax [eax+0Ch] +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
test eax eax +
jbe loc_1020454  +
mov eax [esi+0Ch] +
mov eax [eax+0Ch] +
push 4  +
push dword ptr [eax+34h]  +
call sub_101E275  +
push eax  +
push 8  +
call edi  +
push eax  +
call ebx  +
jmp loc_1020456  +
xor eax eax +
mov [esi+10h] eax +
test eax eax +
jnz loc_102048C  +
call ds:GetLastError  +
test eax eax +
jnz loc_102046F  +
push 0Eh  +
call ds:SetLastError  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102047C  +
push eax  +
call sub_101F50E  +
push esi  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_10204BF  +
cmp [ebp+var_210] 0 +
jz loc_10204A2  +
push [ebp+var_210]  +
call sub_101E529  +
jmp loc_10204A4  +
xor eax eax +
and dword ptr [esi+18h] 0 +
or dword ptr [esi] 80h +
mov [esi+14h] eax +
mov eax [ebp+var_214] +
and eax 7 +
or [esi+4] eax +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+Data] 0 +
push esi  +
call sub_101FC22  +
mov esi eax +
test esi esi +
jnz loc_1020564  +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx 40000h +
jnz loc_1020563  +
test ebx 100h +
jnz loc_1020511  +
lea eax [ebp+Data] +
push eax  +
push offset aSystem  +
call sub_101D7AB  +
test eax eax +
jnz loc_1020515  +
and dword ptr [ebp+Data] 0 +
test ebx 800h +
jz loc_102052C  +
test bl 2 +
jz loc_1020528  +
or dword ptr [ebp+Data] 2 +
jmp loc_102052C  +
and dword ptr [ebp+Data] 0FFFFFFFDh +
test ebx 1000h +
jz loc_1020543  +
test bl 4 +
jz loc_102053F  +
or dword ptr [ebp+Data] 4 +
jmp loc_1020543  +
and dword ptr [ebp+Data] 0FFFFFFFBh +
mov ecx dword ptr [ebp+Data] +
test cl 1 +
jz loc_1020563  +
mov eax ecx +
shr ecx 2 +
shr eax 1 +
and ecx 1 +
push ecx  +
and eax 1 +
push eax  +
push 0FFFFFFFFh  +
call sub_102032F  +
mov esi eax +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_1020585  +
mov eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
jmp loc_10205E9  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_1020591  +
xor eax eax +
inc eax  +
jmp loc_10205E9  +
and [ebp+arg_4] 0 +
mov eax [edx] +
push ebx  +
mov ebx [ecx] +
push esi  +
mov esi [edx+4] +
push edi  +
mov edi [ecx+4] +
cmp esi edi +
jb loc_10205DF  +
ja loc_10205CC  +
cmp eax ebx +
ja loc_10205CC  +
cmp esi edi +
ja loc_10205B6  +
jb loc_10205DF  +
cmp eax ebx +
jb loc_10205DF  +
mov eax [edx+8] +
mov esi [ecx+8] +
mov edx [edx+0Ch] +
mov ecx [ecx+0Ch] +
cmp edx ecx +
jb loc_10205DF  +
ja loc_10205CC  +
cmp eax esi +
jbe loc_10205D5  +
mov [ebp+arg_4] 1 +
jmp loc_10205E3  +
cmp edx ecx +
ja loc_10205E3  +
jb loc_10205DF  +
cmp eax esi +
jnb loc_10205E3  +
or [ebp+arg_4] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
mov eax 100h +
jz loc_1020612  +
push 3  +
add eax 40h +
pop ebx  +
push 0  +
push 0  +
lea ecx [ebp+var_4] +
push ecx  +
push 0FFFFFFFFh  +
push eax  +
call sub_101CEDD  +
mov esi eax +
test esi esi +
jz loc_1020641  +
push ebx  +
push [ebp+var_4]  +
push esi  +
call sub_102D19D  +
mov ebx eax +
test ebx ebx +
jnz loc_102063F  +
push esi  +
call ds:UnmapViewOfFile  +
mov eax ebx +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset sub_102D19D  +
push [ebp+arg_4]  +
push [ebp+lpName]  +
call sub_101C96B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1020695  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_1020695  +
mov eax [eax] +
test al 2 +
jz loc_1020691  +
test al 1 +
jz loc_1020691  +
push 0  +
push ecx  +
call sub_101D395  +
jmp loc_102069F  +
push 32h  +
jmp loc_1020697  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10206C4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020757  +
mov ecx [esi+0Ch] +
test ecx ecx +
jnz loc_10206CF  +
push 0Dh  +
jmp loc_10206B7  +
mov eax [esi] +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
test al 1 +
jz loc_1020724  +
test al 4 +
jz loc_10206F3  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020755  +
test al 2 +
jnz loc_10206FD  +
push esi  +
call sub_102066A  +
push dword ptr [esi+0Ch]  +
call ds:UnmapViewOfFile  +
mov eax [esi+4] +
test eax eax +
jz loc_1020714  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+8] +
test eax eax +
jz loc_102073F  +
push eax  +
call ds:CloseHandle  +
jmp loc_102073F  +
push ecx  +
push 0  +
test al 4 +
jz loc_102073A  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+10h] +
test eax eax +
jz loc_102073F  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
push 14h  +
pop ecx  +
mov eax esi +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1020744  +
push esi  +
push ecx  +
call ebx  +
push eax  +
call edi  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
xor ebx ebx +
push 20h  +
inc ebx  +
cmp [ebp+arg_4] 0 +
pop eax  +
jz loc_102077F  +
push 60h  +
pop eax  +
push 3  +
pop ebx  +
push 0  +
push 0  +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_0]  +
push eax  +
call sub_101CEDD  +
mov esi eax +
test esi esi +
jz loc_10207AF  +
push ebx  +
push [ebp+var_4]  +
push esi  +
call sub_102D484  +
mov ebx eax +
test ebx ebx +
jnz loc_10207AD  +
push esi  +
call ds:UnmapViewOfFile  +
mov eax ebx +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset sub_102D484  +
push [ebp+arg_4]  +
push [ebp+lpName]  +
call sub_101C96B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
or [ebp+var_8] 0FFFFFFFFh +
xor eax eax +
cmp [ebp+arg_C] eax +
jz loc_10207EF  +
inc eax  +
cmp [ebp+arg_10] 0 +
jz loc_10207F8  +
or eax 2 +
push esi  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset sub_102D484  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101E505  +
mov esi eax +
test esi esi +
jz loc_1020832  +
mov eax [ebp+var_4] +
push [ebp+arg_0]  +
mov [esi+4] eax +
call sub_101E529  +
mov [esi+0Ch] eax +
mov eax [ebp+var_8] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
push 4  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
pop eax  +
cmp [ebp+arg_4] esi +
jz loc_1020859  +
push 5  +
pop eax  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset sub_102D484  +
push eax  +
push esi  +
push esi  +
push [ebp+hFile]  +
call sub_101DCFB  +
cmp eax esi +
pop esi  +
jz locret_1020882  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10208AD  +
mov eax [ecx+10h] +
test eax eax +
jz loc_10208AD  +
mov edx [ebp+arg_4] +
cmp edx [eax+1Ch] +
jnb loc_10208AD  +
mov eax [ecx+14h] +
add eax edx +
jmp loc_10208B7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10208DC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020963  +
mov ecx [esi+10h] +
test ecx ecx +
jnz loc_10208E7  +
push 0Dh  +
jmp loc_10208CF  +
mov eax [esi] +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
test al 1 +
jz loc_1020930  +
test al 4 +
jz loc_102090B  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020961  +
push ecx  +
call ds:UnmapViewOfFile  +
mov eax [esi+4] +
test eax eax +
jz loc_1020920  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+8] +
test eax eax +
jz loc_102094B  +
push eax  +
call ds:CloseHandle  +
jmp loc_102094B  +
push ecx  +
push 0  +
test al 4 +
jz loc_1020946  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+14h] +
test eax eax +
jz loc_102094B  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
push 18h  +
pop ecx  +
mov eax esi +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1020950  +
push esi  +
push ecx  +
call ebx  +
push eax  +
call edi  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
neg eax  +
sbb eax eax +
and eax 3 +
inc eax  +
mov ebx eax +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push ebx  +
mov [ebp+dwBytes] edi +
mov [ebp-0Ch] edi +
mov [ebp+lpMem] 0Ch +
mov [ebp-8] edi +
call sub_101D1D5  +
cmp [ebp+dwBytes] edi +
jbe loc_10209DA  +
push [ebp+dwBytes]  +
mov esi ds:GetProcessHeap +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax edi +
jz loc_10209DA  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push ebx  +
call sub_101D1D5  +
test eax eax +
jnz loc_10209E3  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+lpPathName]  +
call ds:CreateDirectoryW  +
mov ebx eax +
cmp [ebp-0Ch] edi +
jz loc_1020A04  +
push dword ptr [ebp-0Ch]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax ebx +
jmp loc_10209DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_1020A6D  +
cmp [ebp+arg_4] 0 +
jnz loc_1020A32  +
xor eax eax +
jmp locret_1020A7A  +
mov eax [ebp+FileInformation] +
and eax 0FFFFFFF8h +
push eax  +
push [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
test eax eax +
jz loc_1020A2E  +
push [ebp+lpFileName]  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_1020A68  +
call ds:GetLastError  +
push eax  +
push offset aLasterrorD  +
call printf  +
pop ecx  +
pop ecx  +
jmp loc_1020A2E  +
xor eax eax +
inc eax  +
jmp locret_1020A7A  +
call ds:GetLastError  +
dec eax  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1020B49  +
mov eax [edi+4] +
test eax eax +
jz loc_1020B49  +
push 104h  +
lea ecx [ebp+Name] +
push ecx  +
push 401h  +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_1020B49  +
push esi  +
lea eax [ebp+Name] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov esi eax +
test esi esi +
jz loc_1020B48  +
push ebx  +
push 493E0h  +
push esi  +
call ds:WaitForSingleObject  +
mov ebx eax +
test ebx ebx +
jz loc_1020B44  +
cmp ebx 80h +
jz loc_1020B44  +
push esi  +
call ds:CloseHandle  +
push offset aStatusReturned  +
push ebx  +
call sub_10285DE  +
mov esi ds:GetLastError +
call esi  +
mov edi ds:SetLastError +
test eax eax +
jnz loc_1020B24  +
push ebx  +
call edi  +
push offset aLastErrorAfter  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1020B47  +
call esi  +
test eax eax +
jnz loc_1020B47  +
call esi  +
push eax  +
call edi  +
jmp loc_1020B47  +
mov [edi+2Ch] esi +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101C23D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1020B8A  +
push offset aRescsystemview  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1020B86  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1020B95  +
push [ebp+arg_0]  +
call sub_1020A83  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1020C1A  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_1020C1A  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1020BC9  +
cmp edi 1 +
jz loc_1020BC9  +
cmp edi 2 +
jnz loc_1020C1A  +
lea ecx [ebp+var_4] +
push ecx  +
push dword ptr [esi+18h]  +
push eax  +
call sub_1024255  +
test eax eax +
jnz loc_1020BF9  +
mov ecx [ebp+var_4] +
test ecx ecx +
jbe loc_1020C22  +
mov eax [esi+1Ch] +
mov edx [eax+0Ch] +
cmp ecx [edx+18h] +
jnb loc_1020C22  +
push dword ptr [esi+18h]  +
push eax  +
call sub_1024343  +
test eax eax +
jz loc_1020C22  +
cmp edi 1 +
jnz loc_1020C03  +
push dword ptr [esi+20h]  +
jmp loc_1020C0F  +
cmp edi 2 +
jnz loc_1020C0D  +
push dword ptr [esi+24h]  +
jmp loc_1020C0F  +
push 0  +
push [ebp+arg_8]  +
push esi  +
call sub_1028509  +
jmp loc_1020C24  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1020CD9  +
mov eax [esi+4] +
cmp eax edi +
jz loc_1020C53  +
push eax  +
call sub_101CBEF  +
mov [esi+4] edi +
mov eax [esi+8] +
cmp eax edi +
jz loc_1020C63  +
push eax  +
call sub_101CBEF  +
mov [esi+8] edi +
mov eax [esi+18h] +
cmp eax edi +
jz loc_1020C73  +
push eax  +
call sub_102CBC2  +
mov [esi+18h] edi +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_1020C83  +
push eax  +
call sub_1022C12  +
mov [esi+1Ch] edi +
mov eax [esi+20h] +
cmp eax edi +
jz loc_1020C93  +
push eax  +
call sub_1024D5E  +
mov [esi+20h] edi +
mov eax [esi+24h] +
cmp eax edi +
jz loc_1020CA3  +
push eax  +
call sub_1024D5E  +
mov [esi+24h] edi +
mov eax [esi+28h] +
cmp eax edi +
jz loc_1020CB3  +
push eax  +
call sub_1024D5E  +
mov [esi+28h] edi +
mov eax [esi+2Ch] +
cmp eax edi +
jz loc_1020CCA  +
push eax  +
call ds:ReleaseMutex  +
push dword ptr [esi+2Ch]  +
call ds:CloseHandle  +
push esi  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1020D4A  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_1020D4A  +
push dword ptr [esi+18h]  +
call sub_10289DD  +
test eax eax +
jz loc_1020D52  +
push dword ptr [esi+1Ch]  +
call sub_102235B  +
test eax eax +
jz loc_1020D52  +
mov eax [esi+20h] +
test eax eax +
jz loc_1020D23  +
push eax  +
call sub_10251C1  +
test eax eax +
jz loc_1020D52  +
mov eax [esi+24h] +
test eax eax +
jz loc_1020D34  +
push eax  +
call sub_10251C1  +
test eax eax +
jz loc_1020D52  +
mov esi [esi+28h] +
test esi esi +
jz loc_1020D45  +
push esi  +
call sub_10251C1  +
test eax eax +
jz loc_1020D52  +
xor eax eax +
inc eax  +
jmp loc_1020D54  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jge loc_1020D75  +
mov eax [esi+10h] +
test eax eax +
jl loc_1020D82  +
push eax  +
push dword ptr [esi+8]  +
call sub_101D7CB  +
test eax eax +
jz loc_1020D93  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
call sub_101E437  +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
or [ebp+var_21C] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_214] edi +
mov [ebp+var_218] 3 +
cmp eax 6 +
jz loc_1020DE2  +
mov [ebp+var_218] eax +
cmp esi edi +
jz loc_1020F8B  +
cmp [esi+1Ch] edi +
jz loc_1020F8B  +
cmp ebx edi +
jnz loc_1020E03  +
lea ebx [ebp+var_24C] +
mov [ebp+var_248] edi +
mov eax [ebx+4] +
mov ecx 200h +
test eax ecx +
jnz loc_1020E1A  +
or eax ecx +
mov [ebx+4] eax +
mov eax [esi+4] +
mov [ebx+2Ch] eax +
mov eax [ebp+arg_4] +
dec eax  +
jz loc_1020F0E  +
dec eax  +
jz loc_1020E96  +
dec eax  +
dec eax  +
jnz loc_1020F8B  +
mov eax [esi+28h] +
cmp eax edi +
jz loc_1020E48  +
push eax  +
call sub_1024D5E  +
test eax eax +
jz loc_1020E8A  +
mov [esi+28h] edi +
jmp loc_1020FA5  +
push 104h  +
lea eax [ebp+var_210] +
push eax  +
push 108h  +
push dword ptr [esi+4]  +
call sub_101E8C1  +
push edi  +
test eax eax +
jz loc_1020E8B  +
push ebx  +
push [ebp+arg_C]  +
lea eax [ebp+var_210] +
push [ebp+arg_8]  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push eax  +
call sub_1025938  +
mov [esi+28h] eax +
cmp eax edi +
jnz loc_1020F83  +
push edi  +
push edi  +
call sub_10285DE  +
jmp loc_1020FA5  +
cmp [esi+24h] edi +
jnz loc_1020F8B  +
lea eax [esi+0Ch] +
cmp [eax] edi +
jge loc_1020EC1  +
push eax  +
lea eax [ebp+var_21C] +
push eax  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
call sub_1020089  +
test eax eax +
jz loc_1020F8B  +
mov eax [esi+0Ch] +
cmp eax edi +
jl loc_1020E8A  +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
push eax  +
push 101h  +
push dword ptr [esi+4]  +
call sub_101EC5E  +
push edi  +
test eax eax +
jz loc_1020E8B  +
push ebx  +
push [ebp+arg_C]  +
lea eax [ebp+var_210] +
push [ebp+arg_8]  +
push [ebp+var_218]  +
push dword ptr [esi+8]  +
push eax  +
call sub_1025938  +
cmp [esi+20h] edi +
mov [esi+24h] eax +
jmp loc_1020E84  +
cmp [esi+20h] edi +
jnz loc_1020F8B  +
lea eax [esi+10h] +
cmp [eax] edi +
jge loc_1020F31  +
lea ecx [ebp+var_21C] +
push ecx  +
push eax  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
call sub_1020089  +
test eax eax +
jz loc_1020F8B  +
mov eax [esi+10h] +
cmp eax edi +
jl loc_1020E8A  +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
push eax  +
push 101h  +
push dword ptr [esi+4]  +
call sub_101EC5E  +
push edi  +
test eax eax +
jz loc_1020E8B  +
push ebx  +
push [ebp+arg_C]  +
lea eax [ebp+var_210] +
push [ebp+arg_8]  +
push [ebp+var_218]  +
push dword ptr [esi+8]  +
push eax  +
call sub_1025938  +
mov [esi+20h] eax +
jmp loc_1020E82  +
mov [ebp+var_214] eax +
jmp loc_1020FA5  +
push edi  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1020FA5  +
push 57h  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_214] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov dword ptr [ebp+Data] ebx +
cmp ecx ebx +
jnz loc_1020FD8  +
xor eax eax +
jmp loc_102104B  +
cmp [ecx+10h] ebx +
jl loc_1021000  +
mov eax [ecx+20h] +
cmp eax ebx +
jz loc_1021000  +
mov eax [eax+14h] +
cmp eax ebx +
jz loc_1021000  +
cmp [eax+0Ch] ebx +
jz loc_1021000  +
mov eax [ecx+20h] +
mov eax [eax+14h] +
mov eax [eax+0Ch] +
or dword ptr [eax+30h] 100000h +
push esi  +
push edi  +
lea eax [ebp+Data] +
push eax  +
mov esi offset aSystemLp +
push esi  +
call sub_101D7AB  +
mov edi offset aSystem +
test eax eax +
jz loc_102101F  +
cmp dword ptr [ebp+Data] ebx +
jnz loc_1021042  +
lea eax [ebp+Data] +
push eax  +
push edi  +
call sub_101D7AB  +
test eax eax +
jz loc_1021032  +
cmp dword ptr [ebp+Data] ebx +
jnz loc_1021039  +
mov dword ptr [ebp+Data] 3 +
push dword ptr [ebp+Data]  +
push esi  +
call sub_101D78B  +
push ebx  +
push edi  +
call sub_101D78B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101D3A6  +
test eax eax +
jnz loc_10210A3  +
mov esi ds:GetLastError +
push offset aErrorDisabling  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_102109C  +
call esi  +
test eax eax +
jnz loc_102109C  +
call esi  +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1021267  +
mov ebx [ebp+arg_0] +
push ebx  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_4] +
push [ebp+arg_18]  +
push [ebp+arg_20]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+1Ch]  +
movs   +
movs   +
movs   +
movs   +
call sub_10249DE  +
test eax eax +
jge loc_10210FA  +
mov esi ds:GetLastError +
push offset aFailedToAddFil  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_102125C  +
call esi  +
test eax eax +
jnz loc_102125C  +
call esi  +
push eax  +
jmp loc_1021184  +
mov ecx [ebx+1Ch] +
mov edx [ecx+0Ch] +
cmp eax [edx+18h] +
jb loc_1021123  +
push offset aWrongIndexRetu  +
push 0Dh  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102125C  +
push 0Dh  +
jmp loc_1021184  +
imul eax eax +
add eax [ecx+14h] +
cmp [ebp+arg_28] 0 +
mov esi eax +
jz loc_102113F  +
push 1  +
push [ebp+arg_28]  +
push ecx  +
call sub_102319D  +
mov [esi+28h] eax +
mov eax [ebp+arg_2C] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_30] +
mov [esi+30h] eax +
call sub_1028619  +
test eax eax +
jz loc_10211E9  +
cmp eax 1 +
jz loc_102118F  +
jbe loc_1021168  +
cmp eax 3 +
jbe loc_10211E9  +
push offset aUnsupportedMan  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102125C  +
push 32h  +
call ds:SetLastError  +
jmp loc_102125C  +
mov eax [ebx+20h] +
test eax eax +
jz loc_10211AB  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_1024E65  +
mov eax [ebx+24h] +
test eax eax +
jz loc_10211C7  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_1024E65  +
mov ebx [ebx+28h] +
test ebx ebx +
jz loc_1021255  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1024E65  +
jmp loc_1021255  +
cmp [ebp+arg_24] 0 +
jz loc_1021255  +
mov eax [ebx+20h] +
test eax eax +
jz loc_1021211  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_4] +
push [ebp+arg_20]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_10266A2  +
mov eax [ebx+24h] +
test eax eax +
jz loc_1021233  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_4] +
push [ebp+arg_20]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_10266A2  +
mov ebx [ebx+28h] +
test ebx ebx +
jz loc_1021255  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_4] +
push [ebp+arg_20]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10266A2  +
mov [ebp+var_8] 1 +
push [ebp+var_4]  +
call sub_101D414  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_214] ecx +
mov [ebp+var_210] eax +
cmp eax ebx +
jz loc_10212AB  +
cmp [ebp+arg_4] 6 +
jz loc_10212AB  +
push 8  +
pop edi  +
jmp loc_10212AD  +
xor edi edi +
cmp ecx ebx +
jnz loc_10212D4  +
push ebx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10214AB  +
push 57h  +
call ds:SetLastError  +
jmp loc_10214AB  +
cmp [ebp+arg_C] ebx +
jz loc_10212F9  +
cmp [ebp+arg_8] 6 +
jnz loc_10212F9  +
push ebx  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10214AB  +
push 32h  +
jmp loc_10212C9  +
push 30h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_10214AB  +
or edi [ebp+arg_4] +
push [ebp+var_214]  +
mov [esi] edi +
call sub_101E529  +
mov [esi+4] eax +
cmp eax ebx +
jz loc_10214A5  +
mov eax [ebp+arg_4] +
and eax 3 +
cmp al 3 +
jz loc_1021343  +
mov eax [ebp+arg_4] +
and eax 6 +
cmp al 6 +
jnz loc_1021358  +
push esi  +
call sub_1020B5D  +
test eax eax +
jnz loc_1021358  +
push offset a_opensystemvie  +
push ebx  +
jmp loc_10214A0  +
mov edi 104h +
push edi  +
lea eax [ebp+FileName] +
push eax  +
push 102h  +
push dword ptr [esi+4]  +
call sub_101E8C1  +
test eax eax +
jz loc_10214A5  +
cmp [ebp+arg_4] 1 +
lea eax [ebp+FileName] +
push eax  +
jz loc_102138E  +
call sub_1028624  +
jmp loc_1021393  +
call sub_102CCE4  +
mov [esi+18h] eax +
cmp eax ebx +
jnz loc_10213C6  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_10213AC  +
push offset a_opensystemv_0  +
jmp loc_1021352  +
lea eax [ebp+FileName] +
push eax  +
call sub_102CEA0  +
mov [esi+18h] eax +
cmp eax ebx +
jnz loc_10213C6  +
push offset a_opensystemv_1  +
jmp loc_1021352  +
push edi  +
lea eax [ebp+FileName] +
push eax  +
push 103h  +
push [ebp+var_214]  +
call sub_101E8C1  +
test eax eax +
jz loc_10214A5  +
mov ebx 400h +
push ebx  +
push [ebp+arg_4]  +
xor edi edi +
push edi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1024B14  +
mov [esi+1Ch] eax +
cmp eax edi +
jz loc_1021436  +
push eax  +
call sub_10221D1  +
cmp eax edi +
jz loc_1021436  +
push eax  +
call sub_101E529  +
mov [esi+8] eax +
cmp eax edi +
jnz loc_1021436  +
push offset a_opensystemv_2  +
push 8  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10214A5  +
push 8  +
jmp loc_102146F  +
mov eax [esi+8] +
cmp eax edi +
jz loc_1021477  +
cmp [ebp+var_210] edi +
jz loc_1021477  +
push 1  +
push [ebp+var_210]  +
push eax  +
call sub_101CFAD  +
test eax eax +
jz loc_1021477  +
push offset a_opensystemv_3  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10214A5  +
push 57h  +
call ds:SetLastError  +
jmp loc_10214A5  +
cmp [ebp+arg_C] edi +
lea eax [esi+0Ch] +
push eax  +
lea edi [esi+10h] +
push edi  +
jnz loc_1021491  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
call sub_1020089  +
jmp loc_1021496  +
call sub_1020205  +
test eax eax +
jnz loc_10214AF  +
push offset a_opensystemv_4  +
push eax  +
call sub_10285DE  +
push esi  +
call sub_1020C2F  +
xor eax eax +
jmp loc_1021509  +
mov eax [edi] +
xor edi edi +
cmp eax edi +
jl loc_1021501  +
push 104h  +
lea ecx [ebp+FileName] +
push ecx  +
push eax  +
push 101h  +
push dword ptr [esi+4]  +
call sub_101EC5E  +
test eax eax +
jz loc_1021501  +
push [ebp+arg_C]  +
lea eax [ebp+FileName] +
push edi  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push eax  +
call sub_1025938  +
mov [esi+20h] eax +
cmp eax edi +
jnz loc_1021501  +
push offset aFailedToOpenLi  +
push edi  +
call sub_10285DE  +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_2C]  +
lea esi [ebp+arg_4] +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+lpFileName]  +
push [ebp+lpFileName]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_1021055  +
pop edi  +
pop esi  +
pop ebp  +
retn 30h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+lpFileName] +
push edi  +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
push esi  +
mov dword ptr [ebp+var_668] esi +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_10215AE  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1021799  +
push esi  +
xor eax eax +
call sub_102096D  +
jmp loc_102177D  +
test byte ptr [ebp+FileInformation] 10h +
jnz loc_10215C4  +
push 32h  +
call ds:SetLastError  +
jmp loc_1021799  +
mov ebx 104h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
push esi  +
call sub_101E8C1  +
test eax eax +
jz loc_1021799  +
push [ebp+arg_4]  +
lea eax [ebp+FileName] +
push eax  +
call sub_1020A0D  +
test eax eax +
jz loc_1021799  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 505h  +
push esi  +
call sub_101E8C1  +
test eax eax +
jz loc_1021799  +
mov esi ds:FindFirstFileW +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call esi  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10216BA  +
cmp [ebp+arg_4] 0 +
jz loc_1021799  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+var_668]  +
lea eax [ebp+var_20C] +
push offset aSS  +
push 103h  +
push eax  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_1021799  +
xor eax eax +
mov [ebp+var_6] ax +
push 80h  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SetFileAttributesW  +
lea eax [ebp+var_20C] +
push eax  +
call ds:DeleteFileW  +
test eax eax +
jz loc_10216AF  +
lea eax [ebp+FindFileData] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1021633  +
push edi  +
call ds:FindClose  +
jmp loc_10216C9  +
call ds:GetLastError  +
jmp loc_1021799  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1021799  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 506h  +
push dword ptr [ebp+var_668]  +
call sub_101E8C1  +
test eax eax +
jz loc_1021799  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call esi  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_102178E  +
cmp [ebp+arg_4] 0 +
jz loc_1021799  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+var_668]  +
lea eax [ebp+var_20C] +
push offset aSS  +
push 103h  +
push eax  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_1021799  +
xor eax eax +
mov [ebp+var_6] ax +
push 80h  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SetFileAttributesW  +
lea eax [ebp+var_20C] +
push eax  +
call ds:DeleteFileW  +
test eax eax +
jz loc_1021799  +
lea eax [ebp+FindFileData] +
push eax  +
push esi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1021704  +
push esi  +
call ds:FindClose  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_102177A  +
xor eax eax +
jmp loc_102177D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:GetFileAttributesExW +
push edi  +
mov edi [ebp+lpFileName] +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
push edi  +
mov [ebp+var_210] edi +
call esi  +
test eax eax +
jnz loc_10217FB  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_10217ED  +
cmp eax 3 +
jnz loc_1021903  +
xor eax eax +
push edi  +
inc eax  +
call sub_102096D  +
jmp loc_102190A  +
test byte ptr [ebp+FileInformation] 10h +
jnz loc_102180B  +
push 32h  +
jmp loc_10218A9  +
mov ebx 104h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 103h  +
push edi  +
call sub_101E8C1  +
test eax eax +
jz loc_1021903  +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call esi  +
mov edi ds:GetLastError +
test eax eax +
jz loc_1021864  +
cmp [ebp+arg_8] 0 +
jz loc_10218A7  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
test eax eax +
jz loc_1021903  +
jmp loc_102186F  +
call edi  +
cmp eax 2 +
jnz loc_1021903  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 102h  +
push [ebp+var_210]  +
call sub_101E8C1  +
test eax eax +
jz loc_1021903  +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call esi  +
test eax eax +
jz loc_10218C4  +
cmp [ebp+arg_8] 0 +
jnz loc_10218B1  +
push 50h  +
call ds:SetLastError  +
jmp loc_1021903  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
test eax eax +
jz loc_1021903  +
jmp loc_10218CB  +
call edi  +
cmp eax 2 +
jnz loc_1021903  +
cmp [ebp+arg_4] 0 +
jl loc_1021907  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+arg_4]  +
push 101h  +
push [ebp+var_210]  +
call sub_101EC5E  +
test eax eax +
jz loc_1021903  +
push [ebp+arg_8]  +
lea eax [ebp+FileName] +
push eax  +
call sub_102155D  +
test eax eax +
jnz loc_1021907  +
xor eax eax +
jmp loc_102190A  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov [ebp+var_214] ebx +
mov [ebp+lpValueName] eax +
test eax eax +
jz loc_1021958  +
cmp [ebp+arg_4] 6 +
jz loc_1021958  +
push 8  +
pop edi  +
jmp loc_102195A  +
xor edi edi +
test ebx ebx +
jnz loc_1021981  +
push ebx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1021AF0  +
push 57h  +
call ds:SetLastError  +
jmp loc_1021AF0  +
push 30h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1021AF0  +
or edi [ebp+arg_4] +
push ebx  +
mov [esi] edi +
call sub_101E529  +
mov [esi+4] eax +
test eax eax +
jz loc_1021AEA  +
mov eax [ebp+arg_4] +
and eax 3 +
cmp al 3 +
jz loc_10219C6  +
mov eax [ebp+arg_4] +
and eax 6 +
cmp al 6 +
jnz loc_10219D4  +
push esi  +
call sub_1020B5D  +
test eax eax +
jz loc_1021AEA  +
cmp [ebp+lpValueName] 0 +
jz loc_10219F5  +
push [ebp+lpValueName]  +
call sub_101E529  +
mov [esi+8] eax +
test eax eax +
jz loc_1021AEA  +
jmp loc_10219F9  +
and dword ptr [esi+8] 0 +
mov ebx 104h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 102h  +
push dword ptr [esi+4]  +
call sub_101E8C1  +
test eax eax +
jz loc_1021AEA  +
lea eax [ebp+FileName] +
push eax  +
call sub_102CEA0  +
mov [esi+18h] eax +
test eax eax +
jz loc_1021AEA  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push 103h  +
push dword ptr [esi+4]  +
call sub_101E8C1  +
test eax eax +
jz loc_1021AEA  +
lea edi [ebx-4] +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+FileName] +
push dword ptr [esi+8]  +
push eax  +
call sub_1024B14  +
xor ecx ecx +
mov [esi+1Ch] eax +
cmp eax ecx +
jz loc_1021AEA  +
cmp [ebp+arg_C] ecx +
jz loc_1021A7F  +
or dword ptr [esi+10h] 0FFFFFFFFh +
mov [esi+20h] ecx +
jmp loc_1021B10  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push ecx  +
push 101h  +
push dword ptr [esi+4]  +
mov [esi+10h] ecx +
call sub_101EC5E  +
test eax eax +
jz loc_1021AEA  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call sub_102155D  +
test eax eax +
jz loc_1021AEA  +
mov eax [ebp+var_214] +
push 0  +
mov [ebp+var_218] eax +
lea eax [ebp+var_244] +
push eax  +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_240] 200h +
push [ebp+arg_8]  +
lea eax [ebp+FileName] +
push dword ptr [esi+8]  +
push eax  +
call sub_1025938  +
mov [esi+20h] eax +
test eax eax +
jnz loc_1021AF4  +
push esi  +
call sub_1020C2F  +
xor eax eax +
jmp loc_1021B1C  +
mov eax [eax+14h] +
mov eax [eax+0Ch] +
mov ecx [esi+10h] +
mov [eax+0Ch] ecx +
push dword ptr [esi+10h]  +
push [ebp+lpValueName]  +
call sub_101D7CB  +
xor ecx ecx +
or dword ptr [esi+0Ch] 0FFFFFFFFh +
mov [esi+24h] ecx +
mov [esi+28h] ecx +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
xor eax eax +
push edi  +
push eax  +
mov [ebp+var_214] eax +
mov [ebp+var_210] eax +
mov [ebp+var_218] eax +
mov edi esi +
call sub_1028603  +
test ebx ebx +
jz loc_1021BB5  +
push offset aSystem  +
push ebx  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1021BB5  +
test esi esi +
jnz loc_1021C4F  +
push esi  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
call sub_101D997  +
test eax eax +
jnz loc_1021BAA  +
push offset aRescopensystem  +
jmp loc_1021D88  +
lea edi [ebp+var_20C] +
jmp loc_1021C4F  +
test esi esi +
jnz loc_1021C4F  +
cmp [ebp+arg_10] 6 +
mov [ebp+var_210] 1 +
jnz loc_1021BEE  +
push offset aRescopensyst_0  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1021C8B  +
push 32h  +
jmp loc_1021C85  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101E3E2  +
test eax eax +
jnz loc_1021C27  +
mov esi ds:GetLastError +
push offset aRescopensyst_1  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1021C8B  +
call esi  +
test eax eax +
jnz loc_1021C8B  +
call esi  +
push eax  +
jmp loc_1021C85  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
lea edi [ebp+var_20C] +
call sub_101FAD6  +
cmp eax esi +
jz loc_1021C4F  +
push eax  +
mov [ebp+var_218] 1 +
call sub_101F50E  +
mov esi [ebp+arg_C] +
mov eax 100h +
cmp esi eax +
jz loc_1021D94  +
cmp esi 200h +
jz loc_1021D94  +
cmp esi 300h +
jz loc_1021C99  +
cmp esi 400h +
jz loc_1021CD0  +
cmp esi 500h +
jz loc_1021C8F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1021CEC  +
mov [ebp+var_214] 1 +
push [ebp+var_210]  +
mov ecx edi +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1021273  +
mov esi eax +
xor eax eax +
cmp esi eax +
jnz loc_1021CEA  +
cmp [ebp+var_210] eax +
jz loc_1021CFD  +
cmp [ebp+var_218] eax +
jz loc_1021CFD  +
push offset aRescopensyst_2  +
push eax  +
jmp loc_1021D8A  +
push [ebp+var_210]  +
mov ecx edi +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1021273  +
mov esi eax +
test esi esi +
jz loc_1021C8B  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 14h  +
push eax  +
push eax  +
push edi  +
call sub_10217A2  +
test eax eax +
jnz loc_1021D1B  +
call ds:GetLastError  +
cmp eax 50h +
jz loc_1021D1B  +
push offset aRescopensyst_3  +
jmp loc_1021D88  +
push [ebp+var_214]  +
mov ecx edi +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1021920  +
cmp [ebp+var_214] 0 +
mov esi eax +
jnz loc_1021D74  +
test esi esi +
jz loc_1021D74  +
cmp [ebp+var_210] 0 +
jz loc_1021D74  +
push esi  +
call sub_1020CE7  +
push esi  +
call sub_1020C2F  +
push [ebp+var_210]  +
mov ecx edi +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1021273  +
mov esi eax +
test esi esi +
jnz loc_1021D74  +
push offset aRescopensyst_4  +
jmp loc_1021D88  +
push 5  +
call sub_1028603  +
test esi esi +
jnz loc_1021CEA  +
push offset aRescopensyst_5  +
push 0  +
call sub_10285DE  +
jmp loc_1021C8B  +
xor ecx ecx +
cmp [ebp+var_210] ecx +
jz loc_1021DAA  +
cmp [ebp+var_218] ecx +
jnz loc_1021C8B  +
xor edx edx +
cmp esi eax +
setz dl  +
push edx  +
push ecx  +
push edi  +
call sub_10217A2  +
test eax eax +
jz loc_1021C8B  +
push 0  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_8]  +
push ebx  +
call sub_1021920  +
mov esi eax +
test esi esi +
jz loc_1021C8B  +
cmp [ebp+var_210] 0 +
jz loc_1021CEA  +
push esi  +
call sub_1020CE7  +
push esi  +
call sub_1020C2F  +
jmp loc_1021CD0  +
***
cmp dword ptr [eax] 4D534552h +
push esi  +
push edi  +
jnz loc_1021E76  +
cmp dword ptr [eax+4] 494E41h +
jnz loc_1021E76  +
cmp dword ptr [eax+8] 0 +
jnz loc_1021E76  +
test ebx ebx +
jz loc_1021E20  +
cmp ebx 30h +
jb loc_1021E76  +
mov ecx [eax+10h] +
cmp ecx 1 +
jb loc_1021E76  +
mov edi [eax+14h] +
cmp edi 800h +
jb loc_1021E76  +
mov edx [eax+18h] +
cmp edx ecx +
ja loc_1021E76  +
mov esi [eax+1Ch] +
cmp esi 400h +
ja loc_1021E76  +
cmp [eax+20h] edi +
ja loc_1021E76  +
cmp [eax+24h] edx +
jge loc_1021E76  +
cmp [eax+28h] edx +
jge loc_1021E76  +
cmp [eax+2Ch] edx +
jge loc_1021E76  +
test ebx ebx +
jz loc_1021E71  +
imul ecx ecx +
add ecx edi +
lea eax [ecx+esi*8] +
lea eax [eax+eax+38h] +
cmp ebx eax +
jnb loc_1021E71  +
push 18h  +
jmp loc_1021E78  +
xor eax eax +
inc eax  +
jmp loc_1021E80  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov eax esi +
call sub_1021DFE  +
test eax eax +
jnz loc_1021E94  +
retn   +
lea eax [esi+30h] +
mov [edi+10h] eax +
xor ecx ecx +
mov [edi+0Ch] esi +
add eax 8 +
cmp [esi+10h] ecx +
jbe loc_1021EB4  +
mov [edi+14h] eax +
mov edx [esi+10h] +
imul edx edx +
add eax edx +
jmp loc_1021EB7  +
mov [edi+14h] ecx +
cmp [esi+1Ch] ecx +
jbe loc_1021EC9  +
mov [edi+18h] eax +
mov ecx [esi+1Ch] +
shl ecx 4 +
add eax ecx +
jmp loc_1021ECC  +
mov [edi+18h] ecx +
xor ecx ecx +
cmp ecx [esi+14h] +
sbb ecx ecx +
and ecx eax +
xor eax eax +
mov [edi+1Ch] ecx +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jnz loc_1021EF9  +
push 57h  +
call ds:SetLastError  +
jmp loc_1021F2D  +
push 38h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1021F2D  +
push ebx  +
mov ebx [ebp+0Ch] +
call sub_1021E88  +
pop ebx  +
test eax eax +
jnz loc_1021F31  +
push edi  +
push eax  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_1021F3B  +
mov eax [ebp+10h] +
and eax 0FFFFFFFBh +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
mov [ebp+lpMem] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
cmp [ebp+lpFileName] edi +
jnz loc_1021F70  +
push 57h  +
call ds:SetLastError  +
jmp loc_10221A7  +
push edi  +
push edi  +
push 3  +
push edi  +
push 1  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov ebx eax +
mov [ebp+hFile] ebx +
cmp ebx 0FFFFFFFFh +
jnz loc_1021FC4  +
mov ebx ds:GetLastError +
push offset a_loadgrowablem  +
call ebx  +
push eax  +
call sub_10285DE  +
call ebx  +
test eax eax +
jz loc_1022139  +
call ebx  +
test eax eax +
jnz loc_1022139  +
call ebx  +
push eax  +
call ds:SetLastError  +
jmp loc_1022139  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_1022002  +
push offset a_loadgrowabl_0  +
mov ebx ds:GetLastError +
call ebx  +
push eax  +
call sub_10285DE  +
call ebx  +
test eax eax +
jz loc_1022134  +
call ebx  +
test eax eax +
jnz loc_1022134  +
call ebx  +
push eax  +
jmp loc_102212E  +
cmp [ebp+var_C] edi +
jz loc_1022028  +
push offset a_loadgrowabl_1  +
push 18h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1022134  +
push 18h  +
jmp loc_102212E  +
push 30h  +
push ebx  +
call sub_102A7D0  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_102203E  +
push offset a_loadgrowabl_2  +
jmp loc_1021FD8  +
mov ebx [ebp+var_10] +
call sub_1021DFE  +
test eax eax +
jnz loc_1022051  +
push offset a_loadgrowabl_3  +
jmp loc_1021FD8  +
push 38h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi edi +
jz loc_1022116  +
mov ebx [ebp+lpMem] +
push 8  +
push [ebp+hFile]  +
mov dword ptr [esi] 6 +
mov [esi+0Ch] ebx +
call sub_102A7D0  +
mov [esi+10h] eax +
mov eax [ebx+10h] +
cmp eax edi +
jbe loc_10220A9  +
imul eax eax +
push eax  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov [esi+14h] eax +
cmp eax edi +
jnz loc_10220AC  +
push offset a_loadgrowabl_4  +
jmp loc_1021FD8  +
mov [esi+14h] edi +
mov eax [ebx+1Ch] +
cmp eax edi +
jbe loc_10220D0  +
shl eax 4 +
push eax  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov [esi+18h] eax +
cmp eax edi +
jnz loc_10220D3  +
push offset a_loadgrowabl_5  +
jmp loc_1021FD8  +
mov [esi+18h] edi +
mov ebx [ebx+14h] +
cmp ebx edi +
jbe loc_10220F7  +
lea eax [ebx+ebx] +
push eax  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov [esi+1Ch] eax +
cmp eax edi +
jnz loc_10220FA  +
push offset a_loadgrowabl_6  +
jmp loc_1021FD8  +
mov [esi+1Ch] edi +
push [ebp+hFile]  +
call ds:CloseHandle  +
push [ebp+lpFileName]  +
call sub_101E529  +
mov [esi+20h] eax +
cmp eax edi +
jnz loc_10221AB  +
push offset a_loadgrowabl_7  +
push 8  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1022134  +
push 8  +
call ds:SetLastError  +
cmp [ebp+hFile] edi +
jz loc_1022142  +
push [ebp+hFile]  +
call ds:CloseHandle  +
mov ebx ds:HeapFree +
cmp esi edi +
jz loc_1022195  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1022166  +
cmp [ebp+lpMem] eax +
jnz loc_102215B  +
mov [ebp+lpMem] edi +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov eax [esi+14h] +
cmp eax edi +
jz loc_1022178  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_102218A  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
push esi  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
cmp [ebp+lpMem] edi +
jz loc_10221A7  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
xor eax eax +
jmp loc_10221C5  +
lea ecx [esi+28h] +
lea edx [esi+30h] +
push ecx  +
push edx  +
push eax  +
mov [ecx] edi +
mov [ecx+4] edi +
mov [edx] edi +
mov [edx+4] edi +
call sub_101CB80  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10221FE  +
mov eax [ecx+10h] +
test eax eax +
jz loc_10221FE  +
mov edx [ecx+1Ch] +
test edx edx +
jz loc_10221FE  +
mov eax [eax] +
test eax eax +
jl loc_1022206  +
mov ecx [ecx+0Ch] +
cmp eax [ecx+20h] +
jge loc_1022206  +
lea eax [edx+eax*2] +
jmp loc_1022208  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
or edi 0FFFFFFFFh +
test esi esi +
jl loc_1022256  +
mov eax [ebp+arg_0] +
imul esi esi +
mov eax [eax+14h] +
mov esi [esi+eax+38h] +
test esi esi +
jl loc_1022256  +
mov ecx esi +
imul ecx ecx +
add eax ecx +
mov ecx [eax+10h] +
cmp ecx [ebp+arg_4] +
jnz loc_1022222  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push dword ptr [eax+40h]  +
call sub_101C8D5  +
test eax eax +
jz loc_1022222  +
mov edi esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+lpFileName] ebx +
jz loc_1022335  +
mov esi [ebp+arg_4] +
cmp esi ebx +
jz loc_1022335  +
mov edi [esi+0Ch] +
test edi edi +
jz loc_1022335  +
push ebx  +
push ebx  +
push 40000000h  +
push [ebp+lpFileName]  +
call sub_101DBCD  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_102233D  +
push 30h  +
push edi  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102233D  +
push 8  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102233D  +
mov eax [edi+10h] +
test eax eax +
jbe loc_10222DE  +
imul eax eax +
push eax  +
push dword ptr [esi+14h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102233D  +
mov eax [edi+1Ch] +
test eax eax +
jbe loc_10222F6  +
shl eax 4 +
push eax  +
push dword ptr [esi+18h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102233D  +
mov edi [edi+14h] +
test edi edi +
jbe loc_102230E  +
lea eax [edi+edi] +
push eax  +
push dword ptr [esi+1Ch]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102233D  +
push ebx  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_102233D  +
push ebx  +
call ds:CloseHandle  +
lea eax [esi+28h] +
push eax  +
add esi 30h +
push esi  +
push [ebp+lpFileName]  +
call sub_101CB80  +
xor eax eax +
inc eax  +
jmp loc_102234F  +
push 57h  +
call ds:SetLastError  +
test ebx ebx +
jz loc_102234D  +
cmp ebx 0FFFFFFFFh +
jz loc_102234D  +
push ebx  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor edx edx +
cmp eax edx +
jnz loc_102237F  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10223A0  +
push 57h  +
jmp loc_102239A  +
mov ecx [eax] +
test cl 2 +
jnz loc_10223A6  +
push edx  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10223A0  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
test cl 1 +
jz loc_10223B7  +
push edx  +
push dword ptr [eax+0Ch]  +
call ds:FlushViewOfFile  +
jmp loc_10223A2  +
mov ecx [eax+20h] +
cmp ecx edx +
jz loc_10223A0  +
push eax  +
push ecx  +
call sub_1022263  +
jmp loc_10223A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jz loc_1022412  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_1022412  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_1022412  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_1022412  +
mov eax [ebp+arg_4] +
cmp eax [edx+1Ch] +
jnb loc_1022412  +
shl eax 4 +
add eax ecx +
cmp dword ptr [eax+4] 0 +
jz loc_1022412  +
mov eax [eax+8] +
test eax eax +
jl loc_1022412  +
cmp eax [edx+20h] +
jge loc_1022412  +
lea eax [esi+eax*2] +
jmp loc_1022414  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
test ebx ebx +
jz loc_10224B6  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_10224B6  +
mov ecx [ebx+14h] +
test ecx ecx +
jz loc_10224B6  +
mov edi [eax+24h] +
mov eax [eax+18h] +
cmp edi eax +
jge loc_10224B6  +
mov edx [ebp+arg_4] +
or edx [ebp+arg_8] +
jnz loc_102245D  +
mov edx [ebp+arg_C] +
or edx [ebp+arg_10] +
jz loc_10224B6  +
test edi edi +
jl loc_10224BE  +
push esi  +
mov esi edi +
imul esi esi +
add esi ecx +
mov [ebp+arg_0] eax +
jz loc_10224B0  +
cmp [ebp+arg_0] 0 +
jz loc_10224B0  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1020570  +
test eax eax +
jge loc_1022487  +
mov edi [esi+34h] +
jmp loc_102248C  +
jle loc_10224AD  +
mov edi [esi+3Ch] +
test edi edi +
jl loc_10224A2  +
mov eax [ebx+0Ch] +
cmp edi [eax+18h] +
jge loc_10224A2  +
mov esi edi +
imul esi esi +
add esi [ebx+14h] +
jmp loc_10224A4  +
xor esi esi +
dec [ebp+arg_0]  +
test esi esi +
jnz loc_102246E  +
jmp loc_10224B0  +
mov [ebp+var_4] edi +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_10224C1  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_10225FE  +
mov esi [edx+0Ch] +
test esi esi +
jz loc_10225FE  +
mov eax [edx+1Ch] +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_10225FE  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10225FE  +
cmp word ptr [eax] 0 +
jz loc_10225FE  +
mov ecx [edx] +
mov [ebp+var_C] ecx +
test cl 2 +
jnz loc_1022521  +
push 5  +
jmp loc_1022600  +
mov ecx [esi+20h] +
mov ebx [esi+14h] +
cmp ecx ebx +
jbe loc_1022532  +
push 18h  +
jmp loc_1022600  +
lea edi [eax+2] +
mov [ebp+var_4] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1022538  +
sub eax [ebp+var_4] +
sar eax 1 +
lea edi [eax+1] +
add ecx edi +
cmp ecx ebx +
jbe loc_10225DE  +
test byte ptr [ebp+var_C] 4 +
jnz loc_1022561  +
push 32h  +
jmp loc_1022600  +
mov eax [esi+20h] +
add eax edi +
add ebx ebx +
cmp eax ebx +
ja loc_1022566  +
push 2  +
push ebx  +
call sub_101E275  +
test eax eax +
jbe loc_1022595  +
push 2  +
push ebx  +
call sub_101E275  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
jmp loc_1022599  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_1022606  +
mov eax [esi+20h] +
add eax eax +
push eax  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
call memcpy  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
add esp 0Ch +
cmp [ebp+lpMem] 0 +
mov [ecx+1Ch] eax +
mov [esi+14h] ebx +
jz loc_10225DC  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edx [ebp+arg_0] +
jmp loc_10225DE  +
mov edx ecx +
mov ebx [esi+20h] +
lea eax [edi+edi] +
push eax  +
mov eax [edx+1Ch] +
push [ebp+arg_4]  +
lea eax [eax+ebx*2] +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+20h] edi +
mov eax ebx +
jmp loc_1022609  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
imul edi edi +
add edi [eax+14h] +
test ebx ebx +
jl loc_102267B  +
push esi  +
mov eax [ebp+arg_0] +
mov esi ebx +
imul esi esi +
add esi [eax+14h] +
push esi  +
push edi  +
call sub_1020570  +
test eax eax +
jz loc_102266E  +
jge loc_1022657  +
mov ebx [esi+34h] +
test ebx ebx +
jge loc_1022630  +
mov eax [ebp+arg_8] +
mov [esi+34h] eax +
jmp loc_1022668  +
test eax eax +
jle loc_1022668  +
mov ebx [esi+3Ch] +
test ebx ebx +
jge loc_1022630  +
mov eax [ebp+arg_8] +
mov [esi+3Ch] eax +
test ebx ebx +
jge loc_1022630  +
jmp loc_102267A  +
mov eax [esi+38h] +
mov [edi+38h] eax +
mov eax [ebp+arg_8] +
mov [esi+38h] eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1022738  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1022738  +
mov ecx [esi] +
test cl 4 +
jz loc_10226BF  +
test cl 2 +
jz loc_10226BF  +
mov edi [eax+10h] +
lea eax [edi+edi] +
mov [ebp+var_4] eax +
cmp eax edi +
ja loc_10226C3  +
push 32h  +
jmp loc_102273A  +
mov ecx [esi+14h] +
push 48h  +
push eax  +
mov [ebp+lpMem] ecx +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_10226F6  +
push 48h  +
push [ebp+var_4]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
jmp loc_10226FA  +
and [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_1022704  +
push 8  +
jmp loc_102273A  +
imul edi edi +
push edi  +
push [ebp+lpMem]  +
push [ebp+arg_0]  +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add esp 0Ch +
push [ebp+lpMem]  +
mov [esi+14h] eax +
mov eax [esi+0Ch] +
push 0  +
mov [eax+10h] ecx +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
inc eax  +
jmp loc_1022742  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
push eax  +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102289C  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_102289C  +
push ebx  +
push esi  +
push edi  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_1022892  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov esi [ebp+arg_4] +
cmp esi [eax+18h] +
jge loc_1022899  +
test esi esi +
jl loc_1022899  +
mov eax [ebp+arg_8] +
add eax esi +
cmp byte ptr [eax] 1 +
jz loc_1022899  +
imul esi esi +
mov byte ptr [eax] 1 +
mov eax [edi+14h] +
add eax esi +
mov ebx [eax+34h] +
mov ecx [eax+3Ch] +
mov edx [eax+38h] +
mov eax [edi+0Ch] +
mov eax [eax+18h] +
cmp ebx eax +
mov [ebp+arg_0] ecx +
mov [ebp+var_8] edx +
jge loc_1022899  +
cmp ecx eax +
jge loc_1022899  +
cmp edx eax +
jge loc_1022899  +
test ebx ebx +
jl loc_1022824  +
push [ebp+var_4]  +
push ebx  +
call sub_1027744  +
test eax eax +
jz loc_1022899  +
mov eax [edi+14h] +
imul ebx ebx +
add ebx eax +
push ebx  +
add eax esi +
push eax  +
call sub_1020570  +
test eax eax +
jle loc_1022899  +
cmp [ebp+arg_0] 0 +
jl loc_1022851  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call sub_1027744  +
test eax eax +
jz loc_1022899  +
mov eax [ebp+arg_0] +
mov ecx [edi+14h] +
imul eax eax +
add eax ecx +
push eax  +
add ecx esi +
push ecx  +
call sub_1020570  +
test eax eax +
jge loc_1022899  +
cmp [ebp+var_8] 0 +
jl loc_102287E  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1027744  +
test eax eax +
jz loc_1022899  +
mov eax [ebp+var_8] +
mov ecx [edi+14h] +
imul eax eax +
add eax ecx +
push eax  +
add ecx esi +
push ecx  +
call sub_1020570  +
test eax eax +
jnz loc_1022899  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102279D  +
mov [ebp+var_C] 1 +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ecx ecx +
push edi  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
cmp esi ecx +
jz loc_1022A14  +
mov eax [esi+0Ch] +
cmp eax ecx +
jz loc_1022A14  +
cmp [esi+14h] ecx +
jz loc_1022A14  +
mov edi [ebp+arg_8] +
cmp edi ecx +
jz loc_1022A14  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jl loc_1022A14  +
cmp ebx [eax+18h] +
jg loc_1022A14  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1022A1C  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1022A1C  +
push [ebp+var_4]  +
push ebx  +
jmp loc_102297F  +
mov eax [ebp+arg_4] +
mov ecx [esi+14h] +
imul eax eax +
add eax ecx +
mov ecx [eax+34h] +
mov ebx [eax+3Ch] +
mov eax [esi+0Ch] +
mov eax [eax+18h] +
cmp ecx eax +
jge loc_10229A2  +
cmp ebx eax +
jge loc_10229A2  +
test ecx ecx +
jl loc_1022964  +
push [ebp+var_4]  +
push ecx  +
call sub_1027744  +
test eax eax +
jz loc_1022A1C  +
test ebx ebx +
jl loc_1022979  +
push [ebp+var_4]  +
push ebx  +
call sub_1027744  +
test eax eax +
jz loc_1022A1C  +
push [ebp+var_8]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_1022A1C  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_1022930  +
or [ebp+arg_4] 0FFFFFFFFh +
jmp loc_10229EC  +
push 0Dh  +
jmp loc_1022A16  +
mov edx [ebp+arg_4] +
mov ecx [esi+14h] +
mov eax edx +
imul eax eax +
add eax ecx +
mov ecx [eax+34h] +
mov ebx [eax+3Ch] +
lea eax [edi+edx*8] +
test ecx ecx +
jl loc_10229D0  +
lea ecx [edi+ecx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax] ecx +
jmp loc_10229D3  +
and dword ptr [eax] 0 +
test ebx ebx +
jl loc_10229E8  +
lea ecx [edi+ebx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax+4] ecx +
jmp loc_10229EC  +
and dword ptr [eax+4] 0 +
push [ebp+var_8]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_10229A6  +
mov eax [ebp+arg_4] +
test eax eax +
jl loc_1022A1C  +
lea eax [edi+eax*8] +
mov ecx [eax+4] +
mov eax [eax] +
lea eax [ecx+eax+1] +
mov [ebp+var_C] eax +
jmp loc_1022A1C  +
push 57h  +
call ds:SetLastError  +
push [ebp+var_8]  +
call sub_1022B7C  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+14h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+34h] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+3Ch] edx +
jge loc_1022A7F  +
or dword ptr [eax+34h] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+3Ch] eax +
lea eax [ecx+eax*8] +
mov [eax] edx +
mov eax [eax+4] +
inc eax  +
mov [ecx+edi*8+4] eax +
jmp loc_1022ACE  +
mov edx [ebx+14h] +
mov ecx edi +
mov edi [esi+3Ch] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+3Ch] 0 +
jge loc_1022A82  +
mov edx [ebx+14h] +
imul ecx ecx +
or dword ptr [ecx+edx+3Ch] 0FFFFFFFFh +
mov ecx [eax+34h] +
or dword ptr [eax+34h] 0FFFFFFFFh +
mov eax [esi+34h] +
test eax eax +
jge loc_1022AB2  +
mov [esi+34h] ecx +
jmp loc_1022ABE  +
test ecx ecx +
jl loc_1022ABE  +
push ecx  +
push eax  +
push ebx  +
call sub_1022615  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+3Ch] eax +
call sub_10228B0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+14h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+3Ch] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+34h] edx +
jge loc_1022B1F  +
or dword ptr [eax+3Ch] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+34h] eax +
lea eax [ecx+eax*8] +
mov [eax+4] edx +
mov eax [eax] +
inc eax  +
mov [ecx+edi*8] eax +
jmp loc_1022B6E  +
mov edx [ebx+14h] +
mov ecx edi +
mov edi [esi+34h] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+34h] 0 +
jge loc_1022B22  +
mov edx [ebx+14h] +
imul ecx ecx +
or dword ptr [ecx+edx+34h] 0FFFFFFFFh +
mov ecx [eax+3Ch] +
or dword ptr [eax+3Ch] 0FFFFFFFFh +
mov eax [esi+3Ch] +
test eax eax +
jge loc_1022B52  +
mov [esi+3Ch] ecx +
jmp loc_1022B5E  +
test ecx ecx +
jl loc_1022B5E  +
push ecx  +
push eax  +
push ebx  +
call sub_1022615  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+34h] eax +
call sub_10228B0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1022BB0  +
mov eax [ebx+8] +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
test eax eax +
jz loc_1022BA6  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
push ebx  +
push 0  +
call edi  +
push eax  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1022C07  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_1022C07  +
mov edx [ebp+arg_4] +
cmp edx [eax+18h] +
jnb loc_1022C07  +
mov eax edx +
imul eax eax +
add eax [ecx+14h] +
push esi  +
or dword ptr [eax+3Ch] 0FFFFFFFFh +
or dword ptr [eax+34h] 0FFFFFFFFh +
mov esi [ecx+0Ch] +
mov esi [esi+28h] +
mov [eax+38h] esi +
mov eax [ecx+0Ch] +
mov [eax+28h] edx +
mov eax [ecx+0Ch] +
cmp dword ptr [eax+2Ch] 0 +
pop esi  +
jge loc_1022C02  +
mov [eax+2Ch] edx +
xor eax eax +
inc eax  +
jmp loc_1022C09  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1022C2E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1022CE9  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1022C38  +
push 0Dh  +
jmp loc_1022C21  +
mov eax [esi+20h] +
test eax eax +
jz loc_1022C49  +
push eax  +
call sub_101CBEF  +
and dword ptr [esi+20h] 0 +
mov eax [esi] +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
push dword ptr [esi+0Ch]  +
test al 1 +
jz loc_1022C85  +
call ds:UnmapViewOfFile  +
mov eax [esi+4] +
test eax eax +
jz loc_1022C74  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+8] +
cmp eax 0FFFFFFFFh +
jz loc_1022CD1  +
push eax  +
call ds:CloseHandle  +
jmp loc_1022CD1  +
push 0  +
test al 4 +
jnz loc_1022C92  +
call ebx  +
push eax  +
call edi  +
jmp loc_1022CD1  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+14h] +
test eax eax +
jz loc_1022CA6  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+18h] +
test eax eax +
jz loc_1022CB5  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_1022CC4  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+20h] +
test eax eax +
jz loc_1022CD1  +
push eax  +
call sub_101CBEF  +
push 38h  +
pop ecx  +
mov eax esi +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1022CD6  +
push esi  +
push ecx  +
call ebx  +
push eax  +
call edi  +
xor eax eax +
pop edi  +
inc eax  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
test eax eax +
jz loc_1022D5F  +
cmp [ebp+lpFileName] 0 +
jz loc_1022D5F  +
mov ecx [eax+10h] +
mov edx [eax+1Ch] +
imul ecx ecx +
lea ecx [ecx+edx*8] +
add ecx [eax+14h] +
lea ecx [ecx+ecx+38h] +
test ecx ecx +
jz loc_1022D67  +
lea edx [ebp+var_4] +
push edx  +
push offset loc_1021EE1  +
push [ebp+arg_8]  +
push ecx  +
push 30h  +
push eax  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101DF19  +
mov esi eax +
test esi esi +
jz loc_1022D67  +
push [ebp+lpFileName]  +
call sub_101E529  +
mov [esi+20h] eax +
mov eax [ebp+var_4] +
mov [esi+4] eax +
mov eax [esi+10h] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [esi+8] 0FFFFFFFFh +
mov eax esi +
jmp loc_1022D69  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
push 38h  +
push 8  +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_1022EB4  +
push 30h  +
push 8  +
mov dword ptr [ebx] 6 +
call esi  +
push eax  +
call edi  +
mov [ebx+0Ch] eax +
test eax eax +
jz loc_1022EAE  +
mov esi [ebp+arg_4] +
push 0Ch  +
pop ecx  +
mov edi eax +
push 8  +
movs   +
mov esi ds:GetProcessHeap +
push 8  +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebx+10h] eax +
test eax eax +
jz loc_1022EAE  +
or dword ptr [eax] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
mov eax [eax+10h] +
test eax eax +
jbe loc_1022E1D  +
push 48h  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_1022E0E  +
mov eax [ebp+arg_4] +
push 48h  +
push dword ptr [eax+10h]  +
call sub_101E275  +
push eax  +
push 8  +
call esi  +
push eax  +
call edi  +
jmp loc_1022E10  +
xor eax eax +
mov [ebx+14h] eax +
test eax eax +
jz loc_1022EAE  +
jmp loc_1022E21  +
and dword ptr [ebx+14h] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+1Ch] +
test eax eax +
jbe loc_1022E59  +
push 10h  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_1022E4E  +
mov eax [ebp+arg_4] +
push 10h  +
push dword ptr [eax+1Ch]  +
call sub_101E275  +
push eax  +
push 8  +
call esi  +
push eax  +
call edi  +
jmp loc_1022E50  +
xor eax eax +
mov [ebx+18h] eax +
test eax eax +
jz loc_1022EAE  +
jmp loc_1022E5D  +
and dword ptr [ebx+18h] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+14h] +
test eax eax +
jbe loc_1022E95  +
push 2  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_1022E8A  +
mov eax [ebp+arg_4] +
push 2  +
push dword ptr [eax+14h]  +
call sub_101E275  +
push eax  +
push 8  +
call esi  +
push eax  +
call edi  +
jmp loc_1022E8C  +
xor eax eax +
mov [ebx+1Ch] eax +
test eax eax +
jz loc_1022EAE  +
jmp loc_1022E99  +
and dword ptr [ebx+1Ch] 0 +
cmp [ebp+arg_0] 0 +
jz loc_1022EB8  +
push [ebp+arg_0]  +
call sub_101E529  +
mov [ebx+20h] eax +
test eax eax +
jnz loc_1022EBC  +
push ebx  +
call sub_1022C12  +
xor eax eax +
jmp loc_1022EE3  +
and dword ptr [ebx+20h] 0 +
xor edx edx +
lea eax [ebx+28h] +
lea ecx [ebx+30h] +
mov [eax] edx +
mov [eax+4] edx +
mov [ecx] edx +
mov [ecx+4] edx +
mov edx [ebx+20h] +
test edx edx +
jz loc_1022EDD  +
push eax  +
push ecx  +
push edx  +
call sub_101CB80  +
or dword ptr [ebx+8] 0FFFFFFFFh +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
xor edx edx +
push esi  +
xor eax eax +
xor ebx ebx +
push edi  +
mov [ebp+var_4] edx +
cmp [ebp+lpFileName] edx +
jnz loc_1022F2B  +
push offset a_openexistingm  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1022F86  +
push 57h  +
call ds:SetLastError  +
jmp loc_1022F86  +
mov ecx [ebp+arg_8] +
dec ecx  +
jz loc_1022F4F  +
dec ecx  +
dec ecx  +
jz loc_1022F4A  +
sub ecx 3 +
jnz loc_1022F21  +
push [ebp+lpFileName]  +
call sub_1021F46  +
mov esi eax +
test esi esi +
jz loc_1022F86  +
jmp loc_1022FA1  +
xor eax eax +
inc eax  +
mov ebx eax +
mov edi offset loc_1021EE1 +
cmp [ebp+lpName] edx +
jz loc_1022F69  +
push edi  +
push eax  +
push [ebp+lpName]  +
call sub_101C96B  +
mov esi eax +
test esi esi +
jnz loc_1022FA1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push ebx  +
push 0  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101E505  +
mov esi eax +
test esi esi +
jnz loc_1022F8A  +
xor eax eax +
jmp loc_1022FA3  +
mov eax [ebp+var_4] +
push [ebp+lpFileName]  +
mov [esi+4] eax +
mov eax [ebp+var_8] +
mov [esi+8] eax +
call sub_101E529  +
mov [esi+20h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
push esi  +
call sub_102241E  +
test eax eax +
jge loc_1022FD3  +
xor eax eax +
jmp loc_1022FD9  +
imul eax eax +
add eax [esi+14h] +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
or eax 0FFFFFFFFh +
cmp [ebp+arg_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_8] eax +
jge loc_1023010  +
mov ecx [ebx+0Ch] +
mov ecx [ecx+24h] +
mov [ebp+arg_4] ecx +
test ecx ecx +
jl loc_10230EC  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_10230E1  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_10230E1  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_10230E1  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+arg_0] edi +
test edi edi +
jl loc_1023095  +
test ebx ebx +
jz loc_10230DF  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_10230DF  +
mov esi [ebp+arg_0] +
cmp esi [eax+10h] +
jnb loc_10230DF  +
mov ecx [ebx+1Ch] +
imul esi esi +
add esi [ebx+14h] +
push 1  +
mov eax [esi+14h] +
push [ebp+arg_8]  +
lea eax [ecx+eax*2] +
push eax  +
call sub_101CFAD  +
test eax eax +
jz loc_10230D9  +
mov esi [esi+38h] +
mov [ebp+arg_0] esi +
test esi esi +
jge loc_1023056  +
imul edi edi +
add edi [ebx+14h] +
mov eax [edi+34h] +
test eax eax +
jl loc_10230AF  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_10230DF  +
mov edi [edi+3Ch] +
test edi edi +
jl loc_10230C3  +
push [ebp+var_4]  +
push edi  +
call sub_1027744  +
test eax eax +
jz loc_10230DF  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102304C  +
jmp loc_10230DF  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
cmp ebx ecx +
jz loc_1023174  +
cmp [ebx+14h] ecx +
jz loc_1023174  +
cmp [ebp+arg_4] ecx +
jnz loc_1023124  +
cmp [ebp+arg_8] ecx +
jnz loc_1023124  +
cmp [ebp+arg_C] ecx +
jnz loc_1023124  +
cmp [ebp+arg_10] ecx +
jz loc_1023174  +
mov eax [ebp+arg_14] +
cmp eax ecx +
jz loc_1023174  +
and eax 0FFFF0000h +
jz loc_1023139  +
cmp eax 100000h +
jnz loc_1023174  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1022FAF  +
test eax eax +
jz loc_102316F  +
mov ecx [ebp+arg_14] +
cmp [eax+10h] ecx +
jnz loc_1023160  +
mov ecx [ebp+arg_18] +
or [eax+40h] ecx +
inc [ebp+var_4]  +
mov eax [eax+38h] +
test eax eax +
jl loc_102316F  +
imul eax eax +
add eax [ebx+14h] +
jnz loc_102314F  +
mov eax [ebp+var_4] +
jmp loc_1023191  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102318E  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
or ebx 0FFFFFFFFh +
xor eax eax +
mov [ebp+var_4] ebx +
cmp edi eax +
jz loc_10231E7  +
mov ecx [edi+0Ch] +
cmp ecx eax +
jz loc_10231E7  +
mov edx [edi+18h] +
cmp edx eax +
jz loc_10231E7  +
cmp [edi+1Ch] eax +
jz loc_10231E7  +
cmp [ebp+arg_4] eax +
jnz loc_10231FC  +
cmp [ebp+arg_8] eax +
jz loc_10231E7  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jbe loc_10231E7  +
cmp dword ptr [edx+4] 0 +
jz loc_10231F0  +
inc eax  +
add edx 10h +
cmp eax ecx +
jb loc_10231D9  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov dword ptr [edx+4] 1 +
mov [edx+8] ebx +
jmp loc_10231E9  +
xor esi esi +
cmp [ecx+1Ch] eax +
jbe loc_102324D  +
xor ebx ebx +
mov eax [edi+18h] +
add eax ebx +
cmp dword ptr [eax+4] 0 +
jnz loc_102321B  +
cmp [ebp+var_4] 0 +
jge loc_102323C  +
mov [ebp+var_4] esi +
jmp loc_102323C  +
mov eax [eax+8] +
test eax eax +
jl loc_102323C  +
cmp eax [ecx+20h] +
jge loc_102323C  +
mov ecx [edi+1Ch] +
push [ebp+arg_4]  +
lea eax [ecx+eax*2] +
push eax  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1023282  +
mov ecx [edi+0Ch] +
inc esi  +
add ebx 10h +
cmp esi [ecx+1Ch] +
jb loc_1023205  +
xor eax eax +
or ebx 0FFFFFFFFh +
cmp [ebp+arg_8] eax +
jz loc_10231E7  +
mov esi [ebp+var_4] +
cmp esi eax +
jl loc_10231E7  +
push [ebp+arg_4]  +
shl esi 4 +
add esi [edi+18h] +
push edi  +
call sub_10224CC  +
mov [esi+8] eax +
test eax eax +
jl loc_10231E7  +
mov eax [ebp+var_4] +
mov dword ptr [esi+4] 1 +
jmp loc_10231E9  +
mov eax esi +
jmp loc_10231E9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
inc edi  +
xor ebx ebx +
mov [ebp+var_4] edi +
cmp esi ebx +
jz loc_1023365  +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1023365  +
mov ecx [eax+18h] +
cmp ecx ebx +
jnz loc_10232C3  +
mov eax edi +
jmp loc_1023367  +
cmp [eax+24h] ebx +
jge loc_10232D1  +
cmp [eax+28h] ebx +
jl loc_1023365  +
push edi  +
push ecx  +
call sub_101E275  +
test eax eax +
jbe loc_10232FC  +
mov eax [esi+0Ch] +
push edi  +
push dword ptr [eax+18h]  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_10232FE  +
xor edi edi +
cmp edi ebx +
jz loc_1023365  +
mov eax [esi+0Ch] +
mov eax [eax+24h] +
cmp eax ebx +
jl loc_1023318  +
push edi  +
push eax  +
push esi  +
call sub_102274E  +
test eax eax +
jz loc_102334E  +
mov eax [esi+0Ch] +
mov eax [eax+28h] +
jmp loc_102333B  +
mov ecx [esi+0Ch] +
cmp eax [ecx+18h] +
jnb loc_102334E  +
cmp [edi+eax] bl +
jnz loc_102334E  +
mov byte ptr [edi+eax] 1 +
imul eax eax +
mov ecx [esi+14h] +
mov eax [eax+ecx+38h] +
cmp eax ebx +
jge loc_1023320  +
mov eax [esi+0Ch] +
mov eax [eax+2Ch] +
cmp eax ebx +
jl loc_1023351  +
cmp [eax+edi] bl +
jnz loc_1023351  +
mov [ebp+var_4] ebx +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
jmp loc_1023367  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_14] +
push ebx  +
and eax 0FFFF0000h +
push esi  +
push edi  +
cmp eax 100000h +
jnz loc_1023397  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_10233D8  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
push esi  +
call sub_102241E  +
mov ecx [esi+0Ch] +
mov edx [ecx+18h] +
mov edi edx +
jmp loc_10233D4  +
cmp eax edx +
jge loc_10233D8  +
test edi edi +
jz loc_10233D8  +
mov ebx [esi+14h] +
mov ecx eax +
imul ecx ecx +
add ecx ebx +
mov ebx [ebp+arg_14] +
cmp [ecx+10h] ebx +
jz loc_10233D8  +
mov eax [ecx+38h] +
dec edi  +
test eax eax +
jge loc_10233B6  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1023458  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1023458  +
cmp [esi+14h] edi +
jz loc_1023458  +
mov eax [eax+18h] +
cmp eax 1 +
jb loc_1023470  +
push 8  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_1023438  +
mov eax [esi+0Ch] +
push 8  +
push dword ptr [eax+18h]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_102343A  +
xor edi edi +
test edi edi +
jz loc_1023470  +
mov eax [esi+0Ch] +
push edi  +
push dword ptr [eax+24h]  +
push esi  +
call sub_10228B0  +
cmp eax 1 +
jge loc_1023454  +
push 0Dh  +
jmp loc_102345A  +
mov eax edi +
jmp loc_1023472  +
push 57h  +
call ds:SetLastError  +
test edi edi +
jz loc_1023470  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ebp+var_C] eax +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1023570  +
push [ebp+var_4]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1023570  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_1023570  +
push ebx  +
push esi  +
push edi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
jmp loc_10234EE  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
cmp edi ebx +
jbe loc_10234E7  +
call sub_1022A3B  +
jmp loc_10234EC  +
call sub_1022ADC  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov esi ecx +
imul esi esi +
add esi [eax+14h] +
mov eax [ebp+arg_4] +
lea eax [eax+ecx*8] +
mov ebx [eax+4] +
mov edi [eax] +
mov eax ebx +
sub eax edi +
cdq   +
xor eax edx +
sub eax edx +
mov [ebp+arg_8] ebx +
cmp eax 1 +
jbe loc_1023523  +
imul eax eax +
add ebx edi +
xor edx edx +
div  ebx +
mov ebx [ebp+arg_8] +
jmp loc_1023525  +
xor eax eax +
cmp eax 14h +
ja loc_10234D5  +
mov eax [ebp+var_8] +
mov [eax] ecx +
lea eax [esi+34h] +
cmp dword ptr [eax] 0 +
jl loc_1023544  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102356D  +
add esi 3Ch +
cmp dword ptr [esi] 0 +
jl loc_1023559  +
push [ebp+var_4]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_102356D  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_10234CE  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
cmp ebx edi +
jz loc_102376C  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_102376C  +
cmp [esi] edi +
jge loc_10235BC  +
xor eax eax +
inc eax  +
jmp loc_102376E  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1023757  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1023757  +
push [ebp+var_8]  +
push dword ptr [esi]  +
call sub_1027744  +
test eax eax +
jz loc_1023757  +
push [ebp+var_4]  +
push esi  +
jmp loc_1023658  +
mov ecx [ebx+0Ch] +
mov eax [ebp+arg_0] +
cmp eax [ecx+18h] +
jge loc_1023757  +
imul eax eax +
add eax [ebx+14h] +
mov edi eax +
lea esi [edi+34h] +
mov eax [esi] +
test eax eax +
jl loc_102363A  +
push [ebp+var_8]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1023757  +
push [ebp+var_4]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_1023757  +
add edi 3Ch +
mov eax [edi] +
test eax eax +
jl loc_1023665  +
push [ebp+var_8]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1023757  +
push [ebp+var_4]  +
push edi  +
call sub_1027744  +
test eax eax +
jz loc_1023757  +
push [ebp+var_8]  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_10235F8  +
jmp loc_102373C  +
mov edx [ebp+arg_4] +
mov esi [edx] +
mov [ebp+arg_0] esi +
imul esi esi +
add esi [ebx+14h] +
lea edi [esi+38h] +
cmp dword ptr [edi] 0 +
mov [ebp+var_C] esi +
mov ecx edi +
jl loc_10236C7  +
mov eax [ecx] +
mov [ebp+var_10] eax +
imul eax eax +
add eax [ebx+14h] +
test byte ptr [eax+40h] 1 +
jz loc_10236B9  +
push [ebp+var_10]  +
mov eax [eax+38h] +
push ebx  +
mov [ecx] eax +
call sub_1022BBA  +
mov edx [ebp+arg_4] +
jmp loc_10236BC  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_C] +
add ecx 38h +
cmp dword ptr [ecx] 0 +
jge loc_1023695  +
test byte ptr [esi+40h] 1 +
jz loc_102373C  +
cmp dword ptr [edi] 0 +
mov ecx [esi+34h] +
jl loc_10236EA  +
mov eax [edi] +
imul eax eax +
add eax [ebx+14h] +
mov [eax+34h] ecx +
mov ecx [esi+3Ch] +
mov [eax+3Ch] ecx +
mov eax [edi] +
jmp loc_102372C  +
test ecx ecx +
jl loc_102370C  +
mov eax [ebx+14h] +
jmp loc_10236F6  +
mov ecx [ecx+3Ch] +
imul ecx ecx +
add ecx eax +
cmp dword ptr [ecx+3Ch] 0 +
jge loc_10236F3  +
mov eax [esi+3Ch] +
mov [ecx+3Ch] eax +
mov eax [esi+34h] +
jmp loc_102372C  +
mov eax [esi+3Ch] +
test eax eax +
jl loc_1023730  +
mov edi [ebx+14h] +
jmp loc_102371B  +
mov eax [eax+34h] +
imul eax eax +
add eax edi +
cmp dword ptr [eax+34h] 0 +
jge loc_1023718  +
mov [eax+34h] ecx +
mov eax [esi+3Ch] +
mov [edx] eax +
jmp loc_1023733  +
or dword ptr [edx] 0FFFFFFFFh +
push [ebp+arg_0]  +
push ebx  +
call sub_1022BBA  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102367A  +
mov [ebp+var_C] 1 +
push [ebp+var_4]  +
call sub_1022B7C  +
push [ebp+var_8]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
jmp loc_102376E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_1023795  +
cmp edx 7FFFFFFFh +
jbe loc_1023797  +
mov eax ecx +
test eax eax +
jl loc_10237C0  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_10237B0  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_10237C0  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_101D5B9  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1023843  +
mov eax [esi+10h] +
test eax eax +
jz loc_1023843  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_1023843  +
cmp [ebp+arg_4] 0 +
jz loc_102383E  +
mov eax [eax] +
test eax eax +
jl loc_102382A  +
mov ecx [ebp+arg_4] +
lea eax [edx+eax*2] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_102381C  +
test dx dx +
jz loc_1023818  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_102381C  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10237F6  +
xor eax eax +
jmp loc_1023821  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_102382A  +
xor eax eax +
inc eax  +
jmp loc_102384D  +
push [ebp+arg_4]  +
push esi  +
call sub_10224CC  +
test eax eax +
jl loc_102384B  +
mov ecx [esi+10h] +
mov [ecx] eax +
jmp loc_1023825  +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_1023825  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+arg_0] +
push edi  +
call sub_1023373  +
mov esi [ebp+arg_18] +
mov ebx eax +
and esi 0Dh +
test ebx ebx +
jge loc_1023888  +
or eax 0FFFFFFFFh +
jmp loc_10238B1  +
push [ebp+arg_1C]  +
imul eax eax +
mov ecx [edi+14h] +
push esi  +
push dword ptr [eax+ecx+40h]  +
call sub_101C8D5  +
test eax eax +
jz loc_10238A3  +
mov eax ebx +
jmp loc_10238B1  +
push [ebp+arg_1C]  +
push esi  +
push ebx  +
push [ebp+arg_14]  +
push edi  +
call sub_1022211  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10238FB  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10238FB  +
cmp dword ptr [eax+18h] 3 +
jnb loc_10238DC  +
xor eax eax +
inc eax  +
jmp loc_1023905  +
push esi  +
call sub_10233E4  +
test eax eax +
jz loc_1023903  +
mov ecx [esi+0Ch] +
push dword ptr [ecx+24h]  +
push eax  +
push esi  +
call sub_102347E  +
mov ecx [esi+0Ch] +
mov [ecx+24h] eax +
jmp loc_10238D7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_1034FC0 +
xor ecx ecx +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_214] ecx +
mov [ebp+var_218] ecx +
mov [ebp+var_21C] ecx +
cmp eax ecx +
jnz loc_1023B50  +
mov dword_1034FC0 offset off_1033F88 +
cmp [ebp+arg_0] ecx +
jz loc_1023B01  +
lea eax [ebp+var_21C] +
push eax  +
call sub_101D3A6  +
test eax eax +
jz loc_1023B3E  +
mov esi ds:GetLastError +
mov edi 104h +
mov eax [ebp+var_214] +
mov ecx dword_1034FC0 +
imul eax eax +
lea ebx [eax+ecx+4] +
mov eax [ebp+var_214] +
xor ecx ecx +
sub eax ecx +
jz loc_1023AD7  +
dec eax  +
jz loc_1023AB2  +
dec eax  +
jz loc_1023A9F  +
dec eax  +
jz loc_1023A4C  +
dec eax  +
jz loc_1023A1B  +
dec eax  +
jnz loc_10239FE  +
push offset aSystemdrive_0  +
call _wgetenv  +
pop ecx  +
test eax eax +
jz loc_10239D5  +
push eax  +
push offset aS_1  +
jmp loc_1023A8B  +
push edi  +
push ebx  +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jz loc_1023AAB  +
push ebx  +
call _wcsupr  +
mov [esp+22Ch+var_22C] offset aWindows +
push ebx  +
call wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023A42  +
push offset aRescmanifestin  +
push 32h  +
call sub_10285DE  +
call esi  +
test eax eax +
jnz loc_1023B3E  +
push 32h  +
jmp loc_1023B38  +
push ecx  +
push 26h  +
push ebx  +
push ecx  +
call sub_101D534  +
test eax eax +
jz loc_1023B15  +
push offset aX86  +
push ebx  +
call wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1023AE3  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1023AE3  +
push offset aProgramfilesX8  +
call _wgetenv  +
pop ecx  +
test eax eax +
jz loc_1023A65  +
push eax  +
push edi  +
push ebx  +
call sub_101E2A4  +
jmp loc_1023A95  +
push 0  +
push 26h  +
lea eax [ebp+var_210] +
push eax  +
push 0  +
call sub_101D534  +
test eax eax +
jz loc_1023B15  +
lea eax [ebp+var_210] +
push eax  +
push offset aSX86  +
push edi  +
push ebx  +
call sub_1018EA1  +
add esp 10h +
test eax eax +
jl loc_10239FE  +
jmp loc_1023AE3  +
push edi  +
push ebx  +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jnz loc_1023AE3  +
push offset aRescmanifest_0  +
jmp loc_1023B21  +
lea eax [ebp+var_218] +
push eax  +
push ebx  +
mov [ebp+var_218] edi +
call sub_101D4AF  +
test eax eax +
jnz loc_1023AE3  +
call esi  +
cmp eax 78h +
jz loc_1023AE3  +
push offset aRescmanifest_1  +
jmp loc_1023B21  +
push edi  +
push ebx  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_1023B1C  +
inc [ebp+var_214]  +
cmp [ebp+var_214] 6 +
jb loc_102397A  +
push [ebp+var_21C]  +
call sub_101D414  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 4  +
push offset aRescmanifest_2  +
jmp loc_1023B21  +
push offset aRescmanifest_3  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1023B3E  +
call esi  +
test eax eax +
jnz loc_1023B3E  +
call esi  +
push eax  +
call ds:SetLastError  +
cmp dword_1034FC0 0 +
jz loc_1023B73  +
or dword_1034FC0 0FFFFFFFFh +
jmp loc_1023B73  +
cmp eax 0FFFFFFFFh +
jnz loc_1023B01  +
push offset aRescmanifestin  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023B73  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023B04  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 1  +
call sub_102390F  +
test eax eax +
jnz loc_1023BBE  +
mov esi ds:GetLastError +
push offset aRescmanifestpa  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1023BB7  +
call esi  +
test eax eax +
jnz loc_1023BB7  +
call esi  +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023D10  +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1023BEB  +
push offset aRescmanifest_4  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023BE4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023D0F  +
mov esi [ebp+arg_0] +
and [ebp+var_8] 0 +
lea ecx [esi+2] +
mov ax [esi] +
inc esi  +
inc esi  +
test ax ax +
jnz loc_1023BF5  +
sub esi ecx +
sar esi 1 +
and [ebp+arg_4] 0 +
push edi  +
mov eax dword_1034FC0 +
mov ecx [ebp+arg_4] +
add ecx eax +
lea edx [ecx+4] +
cmp word ptr [edx] 0 +
jz loc_1023C62  +
mov eax edx +
lea edi [eax+2] +
mov [ebp+var_4] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1023C23  +
sub eax [ebp+var_4] +
sar eax 1 +
mov [ebp+var_4] eax +
mov eax [ecx] +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1023C3A  +
sub eax ecx +
sar eax 1 +
mov edi eax +
cmp esi [ebp+var_4] +
jb loc_1023C62  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push edx  +
call _wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_1023C83  +
add [ebp+arg_4] 210h +
inc [ebp+var_8]  +
cmp [ebp+arg_4] 0C60h +
jb loc_1023C08  +
cmp [ebp+arg_8] 0 +
jnz loc_1023CD3  +
inc esi  +
mov [ebx] esi +
jmp loc_1023D0B  +
mov eax edi +
sub eax [ebp+var_4] +
add eax esi +
cmp [ebp+arg_8] 0 +
jnz loc_1023C95  +
inc eax  +
mov [ebx] eax +
jmp loc_1023D0B  +
cmp eax [ebx] +
inc eax  +
mov [ebx] eax +
jnb loc_1023CDC  +
mov ecx [ebp+var_8] +
mov edx dword_1034FC0 +
imul ecx ecx +
push edi  +
push dword ptr [ecx+edx]  +
push eax  +
push [ebp+arg_8]  +
call sub_102377A  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
sub esi eax +
lea eax [ecx+eax*2] +
push esi  +
push eax  +
mov eax [ebx] +
sub eax edi +
push eax  +
mov eax [ebp+arg_8] +
lea eax [eax+edi*2] +
push eax  +
jmp loc_1023D06  +
mov eax [ebx] +
cmp esi eax +
jb loc_1023CFE  +
inc esi  +
mov [ebx] esi +
push offset aRescmanifest_4  +
push 7Ah  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023CFA  +
push 7Ah  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023D0E  +
push esi  +
push [ebp+arg_0]  +
push eax  +
push [ebp+arg_8]  +
call sub_102377A  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push 1  +
call sub_102390F  +
test eax eax +
jnz loc_1023D3B  +
push eax  +
push eax  +
call sub_10285DE  +
xor eax eax +
jmp locret_1023E96  +
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
cmp ebx edx +
jnz loc_1023D66  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023D5F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023E95  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] edx +
lea ecx [edi+2] +
mov ax [edi] +
inc edi  +
inc edi  +
cmp ax dx +
jnz loc_1023D70  +
sub edi ecx +
sar edi 1 +
mov [ebp+arg_4] edx +
push esi  +
mov eax dword_1034FC0 +
mov ecx [ebp+arg_4] +
add ecx eax +
lea eax [ecx+4] +
cmp word ptr [eax] 0 +
jz loc_1023DD6  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1023D98  +
mov ecx [ecx] +
sub eax esi +
sar eax 1 +
mov [ebp+var_8] eax +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1023DB0  +
sub eax edx +
sar eax 1 +
mov [ebp+var_C] eax +
cmp edi eax +
jb loc_1023DD6  +
push eax  +
push [ebp+arg_0]  +
push ecx  +
call wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_1023DF7  +
add [ebp+arg_4] 210h +
inc [ebp+var_4]  +
cmp [ebp+arg_4] 0C60h +
jb loc_1023D82  +
cmp [ebp+arg_8] 0 +
jnz loc_1023E5B  +
inc edi  +
mov [ebx] edi +
jmp loc_1023E90  +
mov esi [ebp+var_8] +
sub esi [ebp+var_C] +
add esi edi +
cmp [ebp+arg_8] 0 +
jnz loc_1023E0D  +
inc esi  +
mov [ebx] esi +
jmp loc_1023E90  +
mov ecx [ebx] +
cmp esi ecx +
jb loc_1023E18  +
inc esi  +
mov [ebx] esi +
jmp loc_1023E64  +
mov eax [ebp+var_4] +
push [ebp+var_8]  +
imul eax eax +
mov edx dword_1034FC0 +
lea eax [eax+edx+4] +
push eax  +
push ecx  +
push [ebp+arg_8]  +
call sub_102377A  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_0] +
sub edi eax +
lea eax [ecx+eax*2] +
mov ecx [ebx] +
push edi  +
push eax  +
mov eax [ebp+var_8] +
sub ecx eax +
push ecx  +
mov ecx [ebp+arg_8] +
lea eax [ecx+eax*2] +
push eax  +
call sub_102377A  +
jmp loc_1023E05  +
mov eax [ebx] +
cmp edi eax +
jb loc_1023E83  +
inc edi  +
mov [ebx] edi +
push 0  +
push 7Ah  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023E7F  +
push 7Ah  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1023E93  +
push edi  +
push [ebp+arg_0]  +
push eax  +
push [ebp+arg_8]  +
call sub_102377A  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1023ECF  +
cmp dword ptr [eax+14h] 0 +
jz loc_1023ECF  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1023ECF  +
push [ebp+arg_C]  +
mov ecx [ecx+14h] +
mov eax [eax+1Ch] +
push [ebp+arg_8]  +
lea eax [eax+ecx*2] +
push eax  +
call sub_1023D1A  +
jmp loc_1023EEC  +
push 0  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023EEA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_1023FB4  +
mov eax [eax+1Ch] +
cmp eax edi +
jz loc_1023FB4  +
mov ecx [ebp+arg_4] +
lea ebx [eax+ecx*2] +
xor eax eax +
push edi  +
cmp ax [ebx] +
jz loc_1023FB5  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_1023D1A  +
test eax eax +
jnz loc_1023F45  +
push edi  +
push edi  +
call sub_10285DE  +
jmp loc_1023FCE  +
push 2  +
push [ebp+var_4]  +
call sub_101E275  +
mov esi ds:GetProcessHeap +
test eax eax +
jbe loc_1023F71  +
push 2  +
push [ebp+var_4]  +
call sub_101E275  +
push eax  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1023F8B  +
push edi  +
push 8  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023FCE  +
push 8  +
jmp loc_1023FC8  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_1023D1A  +
test eax eax +
jnz loc_1023FB0  +
xor ebx ebx +
push ebx  +
push ebx  +
call sub_10285DE  +
push edi  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
jmp loc_1023FCE  +
mov eax edi +
jmp loc_1023FD0  +
push edi  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1023FCE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1023FFB  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_1023FFB  +
add eax 24h +
push eax  +
push ecx  +
call sub_1023584  +
jmp loc_1024018  +
push 0  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1024016  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 37Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_10] +
xor ecx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_344] eax +
mov [ebp+var_340] ecx +
mov [ebp+var_33C] ecx +
cmp ebx ecx +
jz loc_102405C  +
mov [ebx] ecx +
cmp edi ecx +
jz loc_1024231  +
mov eax [edi+0Ch] +
cmp eax ecx +
jz loc_1024231  +
mov esi [ebp+arg_C] +
cmp esi [eax+18h] +
jnb loc_1024231  +
push 0  +
lea eax [ebp+var_33C] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1024224  +
push [ebp+var_33C]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_1024224  +
jmp loc_102420D  +
mov esi [ebp+arg_C] +
imul esi esi +
add esi [edi+14h] +
mov eax [esi+34h] +
test eax eax +
jl loc_10240CE  +
push [ebp+var_33C]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1024224  +
mov eax [esi+3Ch] +
test eax eax +
jl loc_10240E9  +
push [ebp+var_33C]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1024224  +
mov eax [esi+38h] +
test eax eax +
jl loc_1024104  +
push [ebp+var_33C]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1024224  +
test byte ptr [esi+40h] 9 +
jnz loc_102420D  +
mov eax [esi+28h] +
test eax eax +
jl loc_1024124  +
push eax  +
push edi  +
call sub_10223CC  +
test eax eax +
jz loc_10241FD  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+var_348] +
push eax  +
push esi  +
push edi  +
mov [ebp+var_348] 104h +
call sub_1023E9F  +
test eax eax +
jz loc_10241FD  +
push 2  +
push dword ptr [esi+10h]  +
call ds:IsValidLocale  +
test eax eax +
jnz loc_102417C  +
push 96h  +
lea eax [ebp+var_338] +
push eax  +
push dword ptr [esi+10h]  +
push [ebp+var_344]  +
call sub_102CEBD  +
test eax eax +
jz loc_10241FD  +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_10241FD  +
mov edx [esi+20h] +
mov eax [ebp+var_364] +
mov ecx [ebp+var_368] +
cmp edx [ebp+var_35C] +
jnz loc_10241FD  +
mov edx [esi+1Ch] +
cmp edx eax +
ja loc_10241FD  +
jb loc_10241BD  +
mov eax [esi+18h] +
cmp eax ecx +
ja loc_10241FD  +
push [ebp+var_344]  +
lea eax [ebp+var_340] +
push eax  +
lea eax [ebp+var_358] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_102667F  +
test eax eax +
jz loc_10241FD  +
push esi  +
lea eax [ebp+var_358] +
push eax  +
call sub_1020570  +
test eax eax +
jnz loc_10241FD  +
mov eax [ebp+var_340] +
cmp eax [esi+10h] +
jz loc_102420D  +
cmp [ebp+arg_8] 0 +
jz loc_1024207  +
or dword ptr [esi+40h] 1 +
test ebx ebx +
jz loc_102420D  +
inc dword ptr [ebx]  +
push [ebp+var_33C]  +
lea eax [ebp+arg_C] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_10240AA  +
push [ebp+var_33C]  +
call sub_1022B7C  +
jmp loc_102423F  +
push 57h  +
call ds:SetLastError  +
test ebx ebx +
jz loc_102423F  +
inc dword ptr [ebx]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
push 3  +
pop ecx  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ecx +
cmp edi ebx +
jnz loc_102428B  +
push 57h  +
call ds:SetLastError  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1024282  +
mov [eax] ebx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov eax [edi] +
cmp eax ebx +
jz loc_102429F  +
cmp eax 1 +
jz loc_102429F  +
cmp eax ecx +
jz loc_102429F  +
cmp eax 6 +
jnz loc_1024279  +
mov eax [edi+0Ch] +
cmp dword ptr [eax] 4D534552h +
jnz loc_10242EF  +
cmp dword ptr [eax+4] 494E41h +
jnz loc_10242EF  +
cmp [eax+8] ebx +
jnz loc_10242EF  +
mov edx [eax+10h] +
cmp edx 1 +
jb loc_10242EF  +
mov esi [eax+14h] +
cmp esi 800h +
jb loc_10242EF  +
mov ecx [eax+18h] +
cmp ecx edx +
ja loc_10242EF  +
cmp dword ptr [eax+1Ch] 400h +
ja loc_10242EF  +
cmp [eax+20h] esi +
ja loc_10242EF  +
cmp [eax+24h] ecx +
jge loc_10242EF  +
cmp [eax+28h] ecx +
jge loc_10242EF  +
cmp [eax+2Ch] ecx +
jl loc_10242F3  +
push 0Dh  +
jmp loc_1024273  +
push edi  +
call sub_102328E  +
test eax eax +
jz loc_102431E  +
mov eax [edi+0Ch] +
mov eax [eax+24h] +
test eax eax +
jl loc_102431A  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
push 0  +
push [ebp+arg_4]  +
push edi  +
call sub_1024021  +
mov ebx [ebp+var_8] +
test ebx ebx +
jbe loc_1024323  +
dec [ebp+var_4]  +
jnz loc_10242F3  +
cmp [ebp+var_4] 0 +
jz loc_1024279  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1024336  +
mov [eax] ebx +
xor eax eax +
inc eax  +
jmp loc_1024284  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1024390  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1024390  +
mov eax [eax+24h] +
test eax eax +
jl loc_1024386  +
push 0  +
push eax  +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1024021  +
lea eax [ebp+var_4] +
push eax  +
mov eax [esi+0Ch] +
push dword ptr [eax+24h]  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_1024021  +
xor eax eax +
cmp [ebp+var_4] eax +
setz al  +
jmp loc_102439A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 30h +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp eax 1 +
jb loc_102447C  +
mov ecx [ebp+arg_14] +
cmp ecx 800h +
jb loc_102447C  +
mov edx [ebp+arg_10] +
mov [ebp+var_20] eax +
xor eax eax +
cmp eax ecx +
sbb eax eax +
or [ebp+var_C] 0FFFFFFFFh +
or [ebp+var_8] 0FFFFFFFFh +
or [ebp+var_4] 0FFFFFFFFh +
neg eax  +
mov [ebp+var_30] 4D534552h +
mov [ebp+var_2C] 494E41h +
mov [ebp+var_28] edi +
mov [ebp+var_24] edi +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] edi +
mov [ebp+var_14] edx +
mov [ebp+var_10] eax +
cmp edx 400h +
jbe loc_1024419  +
push 0Dh  +
call ds:SetLastError  +
jmp loc_102448E  +
cmp eax ecx +
ja loc_102440F  +
mov eax [ebp+arg_8] +
dec eax  +
jz loc_102443E  +
dec eax  +
dec eax  +
jz loc_102443E  +
sub eax 3 +
jz loc_1024430  +
push 57h  +
jmp loc_1024411  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+lpFileName]  +
call sub_1022D73  +
jmp loc_1024454  +
xor eax eax +
cmp [ebp+arg_8] 3 +
setz al  +
push eax  +
push edi  +
push [ebp+lpFileName]  +
lea eax [ebp+var_30] +
call sub_1022CF3  +
mov esi eax +
cmp esi edi +
jz loc_102448E  +
cmp [ebp+arg_4] edi +
jz loc_102446C  +
push [ebp+arg_4]  +
push esi  +
call sub_10237C9  +
test eax eax +
jz loc_1024484  +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_1024478  +
xor ecx ecx +
mov [eax] cx +
mov eax esi +
jmp loc_1024490  +
push 57h  +
call ds:SetLastError  +
cmp esi edi +
jz loc_102448E  +
push esi  +
call sub_1022C12  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10244FD  +
cmp dword ptr [esi+14h] 0 +
jz loc_10244FD  +
test eax eax +
jz loc_10244FD  +
lea ecx [ebp+var_210] +
push ecx  +
lea ecx [ebp+var_214] +
push ecx  +
push eax  +
mov [ebp+var_214] 104h +
call sub_1023B7C  +
test eax eax +
jnz loc_10244EC  +
or eax 0FFFFFFFFh +
jmp loc_10244FF  +
lea eax [ebp+var_210] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
call sub_1022FE4  +
jmp loc_10244FF  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push esi  +
call sub_102449B  +
test eax eax +
jge loc_102452D  +
xor eax eax +
jmp loc_1024533  +
imul eax eax +
add eax [esi+14h] +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 43Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_1C] +
mov eax [ebp+arg_30] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
xor edi edi +
mov [ebp+var_430] edx +
mov [ebp+var_42C] eax +
cmp ebx edi +
jz loc_10249AB  +
mov eax [ebx+0Ch] +
cmp eax edi +
jz loc_10249AB  +
cmp [ebx+14h] edi +
jz loc_10249AB  +
mov ecx [eax+18h] +
cmp [eax+24h] ecx +
jge loc_10249AB  +
cmp [eax+28h] ecx +
jge loc_10249AB  +
cmp [eax+2Ch] ecx +
jge loc_10249AB  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_10245BD  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_10249AB  +
mov eax [ebp+arg_14] +
cmp eax edi +
jz loc_10249AB  +
and eax 0FFFF0000h +
jz loc_10245DA  +
cmp eax 100000h +
jnz loc_10249AB  +
cmp esi edi +
jz loc_10249AB  +
cmp edx edi +
jz loc_10249AB  +
or [ebp+var_43C] 0FFFFFFFFh +
push edi  +
mov [ebp+var_424] 104h +
call sub_1028603  +
lea eax [ebp+var_210] +
push eax  +
lea eax [ebp+var_424] +
push eax  +
push esi  +
call sub_1023B7C  +
test eax eax +
jnz loc_1024648  +
push offset aRescmanifestad  +
mov esi ds:GetLastError +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_10249C5  +
call esi  +
test eax eax +
jnz loc_10249C5  +
call esi  +
push eax  +
jmp loc_10249BF  +
lea eax [ebp+var_210] +
xor esi esi +
push eax  +
inc esi  +
push ebx  +
mov [ebp+var_434] esi +
mov [ebp+var_438] edi +
mov [ebp+var_428] edi +
call sub_102449B  +
cmp eax edi +
mov [ebp+var_420] eax +
jl loc_102470F  +
imul eax eax +
add eax [ebx+14h] +
mov ecx [eax] +
mov [ebp+var_438] eax +
cmp ecx [ebp+arg_4] +
jnz loc_10246E6  +
mov ecx [eax+4] +
cmp ecx [ebp+arg_8] +
jnz loc_10246E6  +
mov ecx [eax+8] +
cmp ecx [ebp+arg_C] +
jnz loc_10246E6  +
mov ecx [eax+0Ch] +
cmp ecx [ebp+arg_10] +
jnz loc_10246E6  +
mov ecx [eax+10h] +
cmp ecx [ebp+arg_14] +
jz loc_10246CC  +
push offset aRescmanifest_5  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10249C5  +
push 32h  +
jmp loc_10249BF  +
test byte ptr [eax+40h] 1 +
jnz loc_10246DE  +
push 3  +
call sub_1028603  +
jmp loc_10249A3  +
mov [ebp+var_434] edi +
jmp loc_102470F  +
test byte ptr [eax+40h] 1 +
jnz loc_10246F3  +
push offset aRescmanifest_6  +
jmp loc_10246B0  +
mov ecx [eax+14h] +
or [ebp+var_420] 0FFFFFFFFh +
mov [eax+10h] edi +
mov [ebp+var_43C] ecx +
mov [eax+14h] edi +
mov [ebp+var_438] edi +
push 2  +
push esi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1023857  +
test eax eax +
jge loc_1024744  +
cmp [ebp+var_434] 0 +
jnz loc_10248A3  +
push 2  +
call sub_1028603  +
jmp loc_102488F  +
push 4  +
imul eax eax +
push [ebp+arg_14]  +
add eax [ebx+14h] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
mov [ebp+var_424] eax +
movs   +
call sub_10230F6  +
mov eax [ebp+var_424] +
test byte ptr [eax+40h] 8 +
mov [ebp+var_428] 4 +
jz loc_102478C  +
mov [ebp+var_428] 0Ch +
jmp loc_1024886  +
mov ecx [ebp+var_42C] +
test ecx ecx +
jz loc_102480D  +
mov eax [ecx+20h] +
test eax eax +
jz loc_10247E9  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push dword ptr [eax+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101FBF5  +
test eax eax +
jz loc_10247E3  +
mov ecx [eax+2Ch] +
push 0  +
push [ebp+var_430]  +
and ecx 0FF000000h +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
mov eax [ebp+var_42C] +
push dword ptr [eax+20h]  +
call sub_1026184  +
jmp loc_102485A  +
mov ecx [ebp+var_42C] +
cmp dword ptr [ecx+24h] 0 +
jz loc_102480D  +
push [ebp+arg_14]  +
mov eax [ecx+20h] +
sub esp 10h +
mov edi esp +
push dword ptr [eax+14h]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_101FBF5  +
test eax eax +
jnz loc_10247B8  +
mov eax [ebp+var_424] +
mov ecx [ebx+1Ch] +
mov eax [eax+14h] +
lea eax [ecx+eax*2] +
lea ecx [ebp+FileName] +
push ecx  +
lea ecx [ebp+var_424] +
push ecx  +
push eax  +
mov [ebp+var_424] 104h +
call sub_1023D1A  +
test eax eax +
jnz loc_1024848  +
push offset aRescmanifest_7  +
jmp loc_102461E  +
push [ebp+var_430]  +
lea eax [ebp+FileName] +
push eax  +
call sub_101E0B2  +
test eax eax +
jz loc_1024886  +
push 8  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10230F6  +
push 1  +
mov [ebp+var_428] 0Ch +
call sub_1028603  +
cmp [ebp+var_434] 0 +
jnz loc_10248A3  +
mov eax [ebp+var_438] +
mov ecx [ebp+var_428] +
mov [eax+40h] ecx +
jmp loc_102499D  +
mov eax [ebx+0Ch] +
cmp dword ptr [eax+28h] 0 +
jge loc_10248E1  +
lea ecx [eax+18h] +
mov edx [ecx] +
cmp edx [eax+10h] +
jb loc_10248D7  +
push ebx  +
call sub_1022686  +
test eax eax +
jnz loc_10248CA  +
push offset aRescmanifest_8  +
jmp loc_10246B0  +
mov eax [ebx+0Ch] +
lea ecx [eax+18h] +
mov edx [ecx] +
cmp edx [eax+10h] +
jnb loc_10248C0  +
inc dword ptr [ecx]  +
mov [ebp+var_420] edx +
jmp loc_1024904  +
mov ecx [eax+28h] +
mov edx [ebx+14h] +
mov [ebp+var_420] ecx +
imul ecx ecx +
mov ecx [ecx+edx+38h] +
mov [eax+28h] ecx +
mov eax [ebx+0Ch] +
mov ecx [eax+28h] +
test ecx ecx +
jge loc_1024904  +
mov [eax+2Ch] ecx +
mov eax [ebp+var_43C] +
test eax eax +
jge loc_1024929  +
lea eax [ebp+var_210] +
push eax  +
push ebx  +
call sub_10224CC  +
test eax eax +
jge loc_1024929  +
push offset aRescmanifest_9  +
jmp loc_102461E  +
mov ecx [ebp+var_420] +
imul ecx ecx +
add ecx [ebx+14h] +
lea esi [ebp+arg_4] +
mov edi ecx +
movs   +
movs   +
movs   +
mov edx [ebp+arg_14] +
movs   +
and dword ptr [ecx+24h] 0 +
mov [ecx+14h] eax +
mov eax [ebp+arg_20] +
mov [ecx+18h] eax +
mov eax [ebp+arg_24] +
mov [ecx+1Ch] eax +
mov eax [ebp+arg_28] +
mov [ecx+20h] eax +
or eax 0FFFFFFFFh +
mov [ecx+28h] eax +
mov [ecx+2Ch] eax +
mov [ecx+34h] eax +
mov [ecx+38h] eax +
mov [ecx+3Ch] eax +
mov eax [ebp+var_428] +
or eax [ebp+arg_2C] +
mov [ecx+10h] edx +
mov [ecx+40h] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+24h] +
test ecx ecx +
jge loc_1024990  +
mov ecx [ebp+var_420] +
mov [eax+24h] ecx +
jmp loc_102499D  +
push [ebp+var_420]  +
push ecx  +
push ebx  +
call sub_1022615  +
mov ebx [ebx+0Ch] +
inc dword ptr [ebx+0Ch]  +
mov eax [ebp+var_420] +
jmp loc_10249C8  +
push edi  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10249C5  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edx edx +
or edi 0FFFFFFFFh +
cmp ebx edx +
jz loc_1024AD6  +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_1024AD6  +
cmp [ebx+14h] edx +
jz loc_1024AD6  +
mov ecx [eax+18h] +
cmp [eax+24h] ecx +
jge loc_1024AD6  +
cmp [eax+28h] ecx +
jge loc_1024AD6  +
cmp [eax+2Ch] ecx +
jge loc_1024AD6  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_1024A3F  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_1024AD6  +
cmp [ebp+arg_14] edx +
jz loc_1024AD6  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_1024A59  +
cmp eax 100000h +
jnz loc_1024AD6  +
cmp [ebp+arg_1C] edx +
jz loc_1024AD6  +
cmp [ebp+lpFileName] edx +
jz loc_1024AD6  +
lea eax [ebp+FileInformation] +
push eax  +
push edx  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_1024A99  +
mov esi ds:GetLastError +
push offset aFailedToGetAtt  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1024ADE  +
call esi  +
test eax eax +
jnz loc_1024ADE  +
call esi  +
push eax  +
jmp loc_1024AD8  +
push [ebp+arg_24]  +
mov eax [ebp+var_C] +
push [ebp+arg_18]  +
mov ecx [ebp+var_10] +
push [ebp+var_4]  +
lea esi [ebp+arg_4] +
push eax  +
push ecx  +
push [ebp+lpFileName]  +
push [ebp+arg_1C]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_102453D  +
mov edi eax +
test edi edi +
jge loc_1024ADE  +
push 0  +
push 0  +
call sub_10285DE  +
jmp loc_1024ADE  +
push 57h  +
call ds:SetLastError  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 20000h  +
push 32h  +
push 1388h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+lpFileName]  +
call sub_10243A4  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_214] eax +
mov [ebp+lpName] ebx +
cmp edi ebx +
jnz loc_1024B51  +
push 57h  +
call ds:SetLastError  +
jmp loc_1024C45  +
cmp eax ebx +
jz loc_1024B7C  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push 203h  +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_1024B7C  +
lea eax [ebp+var_20C] +
mov [ebp+lpName] eax +
xor eax eax +
mov esi 100h +
cmp [ebp+arg_C] esi +
setz al  +
push eax  +
push edi  +
call sub_101CB17  +
mov ecx [ebp+arg_C] +
mov [ebp+var_218] eax +
cmp ecx esi +
jz loc_1024C19  +
cmp ecx 200h +
jz loc_1024C19  +
cmp ecx 300h +
jz loc_1024BD9  +
cmp ecx 400h +
jnz loc_1024B44  +
test eax eax +
jz loc_1024C49  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push edi  +
call sub_1022EEF  +
mov ebx eax +
test ebx ebx +
jnz loc_1024C49  +
push offset aRescopenmanife  +
jmp loc_1024C3E  +
push [ebp+arg_8]  +
xor esi esi +
cmp eax esi +
jz loc_1024BF0  +
push [ebp+lpName]  +
push edi  +
call sub_1022EEF  +
jmp loc_1024BFC  +
push [ebp+var_214]  +
push edi  +
call sub_1024AEC  +
mov ebx eax +
cmp ebx esi +
jnz loc_1024C49  +
cmp [ebp+var_218] esi +
jz loc_1024C12  +
push offset aRescopenmanife  +
push esi  +
jmp loc_1024C40  +
push offset aRescopenmani_0  +
jmp loc_1024C0F  +
test eax eax +
jz loc_1024C24  +
push 5  +
jmp loc_1024B46  +
push [ebp+arg_8]  +
push [ebp+var_214]  +
push edi  +
call sub_1024AEC  +
mov ebx eax +
test ebx ebx +
jnz loc_1024C49  +
push offset aRescopenmani_0  +
push 0  +
call sub_10285DE  +
xor eax eax +
jmp loc_1024C4B  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1024D27  +
mov eax [edi+8] +
test eax eax +
jz loc_1024D27  +
push 104h  +
lea ecx [ebp+Name] +
push ecx  +
push 401h  +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_1024D27  +
push esi  +
lea eax [ebp+Name] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov esi eax +
test esi esi +
jz loc_1024D26  +
push ebx  +
push 493E0h  +
push esi  +
call ds:WaitForSingleObject  +
mov ebx eax +
test ebx ebx +
jz loc_1024D22  +
cmp ebx 80h +
jz loc_1024D22  +
push esi  +
call ds:CloseHandle  +
push offset aStatusReturned  +
push ebx  +
call sub_10285DE  +
mov esi ds:GetLastError +
call esi  +
mov edi ds:SetLastError +
test eax eax +
jnz loc_1024D02  +
push ebx  +
call edi  +
push offset aLastErrorAfter  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_1024D25  +
call esi  +
test eax eax +
jnz loc_1024D25  +
call esi  +
push eax  +
call edi  +
jmp loc_1024D25  +
mov [edi+24h] esi +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101C23D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1024D4A  +
xor eax eax +
jmp loc_1024D55  +
push [ebp+arg_0]  +
call sub_1024C61  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1024E57  +
mov eax [esi+8] +
mov [ebp+arg_0] ebx +
cmp eax ebx +
jz loc_1024D85  +
push eax  +
call sub_101CBEF  +
mov [esi+8] ebx +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1024D95  +
push eax  +
call sub_101CBEF  +
mov [esi+0Ch] ebx +
mov eax [esi+14h] +
cmp eax ebx +
jz loc_1024DC1  +
mov eax [eax+20h] +
cmp eax ebx +
jz loc_1024DAF  +
push eax  +
call sub_10206A8  +
mov eax [esi+14h] +
mov [eax+20h] ebx +
mov eax [esi+14h] +
mov ecx [eax+0Ch] +
mov ecx [ecx+44h] +
push eax  +
mov [ebp+arg_0] ecx +
call sub_101F50E  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] ebx +
jle loc_1024E05  +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_1024DE4  +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_1024DE4  +
push dword ptr [eax]  +
call sub_10297BF  +
mov eax [esi+1Ch] +
mov [eax+edi*4] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_1024DFF  +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_1024DFF  +
push dword ptr [eax]  +
call sub_10208C0  +
mov eax [esi+20h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_1024DC9  +
mov eax [esi+1Ch] +
mov edi ds:HeapFree +
cmp eax ebx +
mov ebx ds:GetProcessHeap +
jz loc_1024E24  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+1Ch] 0 +
mov eax [esi+20h] +
test eax eax +
jz loc_1024E37  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+20h] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_1024E4E  +
push eax  +
call ds:ReleaseMutex  +
push dword ptr [esi+24h]  +
call ds:CloseHandle  +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor edx edx +
push esi  +
push edi  +
cmp ebx edx +
jz loc_1024F67  +
mov eax [ebx+14h] +
cmp eax edx +
jz loc_1024F67  +
cmp [ebx+1Ch] edx +
jz loc_1024F67  +
mov ecx [ebp+arg_4] +
or ecx [ebp+arg_8] +
jnz loc_1024EA2  +
mov ecx [ebp+arg_C] +
or ecx [ebp+arg_10] +
jz loc_1024F67  +
cmp [ebp+arg_14] edx +
jz loc_1024F67  +
mov ecx [ebp+arg_14] +
and ecx 0FFFF0000h +
jz loc_1024EC2  +
cmp ecx 100000h +
jnz loc_1024F67  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_101FBF5  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_1024EFC  +
push offset aCanTFindTheSpe  +
push 2  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1024F81  +
push 2  +
jmp loc_1024F7B  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_102B171  +
test eax eax +
jz loc_1024F3B  +
push [ebp+arg_14]  +
mov ecx [ebx+1Ch] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
push dword ptr [ecx+eax*4]  +
call sub_1029A6A  +
test eax eax +
jnz loc_1024F46  +
push 0  +
push 0  +
call sub_10285DE  +
jmp loc_1024F81  +
mov eax [esi+14h] +
mov ecx [ebx+20h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+10h] +
mov edx [ebx+14h] +
mov edx [edx+10h] +
mov ecx [ecx+10h] +
shl eax 5 +
mov [edx+eax+10h] ecx +
xor eax eax +
inc eax  +
jmp loc_1024F83  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1024F81  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor edx edx +
push esi  +
push edi  +
cmp ebx edx +
jz loc_10250FB  +
mov eax [ebx+14h] +
cmp eax edx +
jz loc_10250FB  +
mov ecx [ebp+arg_8] +
or ecx [ebp+arg_C] +
jnz loc_1024FC3  +
mov ecx [ebp+arg_10] +
or ecx [ebp+arg_14] +
jz loc_10250FB  +
cmp [ebp+arg_18] edx +
jz loc_10250FB  +
mov ecx [ebp+arg_18] +
and ecx 0FFFF0000h +
jz loc_1024FE3  +
cmp ecx 100000h +
jnz loc_10250FB  +
cmp [ebp+arg_1C] edx +
jz loc_10250FB  +
push 3  +
push edx  +
push [ebp+arg_18]  +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call sub_101F7D6  +
test eax eax +
jl loc_1025029  +
push offset aFileForGivenEn  +
push 50h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1025115  +
push 50h  +
jmp loc_102510F  +
push [ebp+arg_20]  +
mov eax [ebx+1Ch] +
mov ecx [ebp+arg_4] +
mov esi [eax+ecx*4] +
push [ebp+arg_1C]  +
mov [ebp+arg_0] esi +
push dword ptr [esi+14h]  +
call sub_1028F6D  +
mov [ebp+arg_1C] eax +
test eax eax +
jl loc_10250F0  +
mov ecx [esi+14h] +
mov ecx [ecx+10h] +
mov edx [esi+0Ch] +
mov ecx [ecx+10h] +
push [ebp+arg_20]  +
mov [edx+18h] ecx +
mov ecx [esi+14h] +
mov ecx [ecx+10h] +
mov edx [esi+0Ch] +
mov ecx [ecx+1Ch] +
mov [edx+1Ch] ecx +
mov ecx [esi+14h] +
mov edx [esi+0Ch] +
mov ecx [ecx+10h] +
mov ecx [ecx+18h] +
push eax  +
push [ebp+arg_18]  +
mov [edx+20h] ecx +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
movs   +
call sub_102A09D  +
test eax eax +
jl loc_10250F0  +
mov ecx [ebp+arg_4] +
mov edx [ebx+20h] +
mov edx [edx+ecx*4] +
mov edx [edx+10h] +
mov edx [edx+1Ch] +
push [ebp+arg_20]  +
mov esi [ebx+14h] +
mov esi [esi+10h] +
push [ebp+arg_1C]  +
mov eax ecx +
shl eax 5 +
mov [esi+eax+4] edx +
mov edx [ebx+20h] +
mov edx [edx+ecx*4] +
mov edx [edx+10h] +
mov esi [ebx+14h] +
mov esi [esi+10h] +
mov edx [edx+10h] +
push ecx  +
push [ebp+arg_18]  +
mov [esi+eax+10h] edx +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
movs   +
call sub_102B96A  +
test eax eax +
jge loc_1025118  +
push 0  +
push 0  +
call sub_10285DE  +
jmp loc_1025115  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1025115  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10251A3  +
mov eax [esi+14h] +
test eax eax +
jz loc_10251A3  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_10251A3  +
mov eax [esi+8] +
test eax eax +
jz loc_10251A3  +
push 104h  +
lea ecx [ebp+FileName] +
push ecx  +
push 10Eh  +
push eax  +
call sub_101E8C1  +
test eax eax +
jz loc_10251AB  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
push 100h  +
push 3  +
push dword ptr [eax+3Ch]  +
lea eax [ebp+FileName] +
push 0  +
push eax  +
call sub_102C04F  +
mov ecx [esi+14h] +
mov [ecx+20h] eax +
mov eax [esi+14h] +
xor ecx ecx +
cmp [eax+20h] ecx +
setnz cl  +
mov eax ecx +
jmp loc_10251AD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101C23D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1025281  +
mov eax [esi+14h] +
test eax eax +
jz loc_1025281  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_1025281  +
mov eax [eax+44h] +
cmp eax [esi+18h] +
jbe loc_10251F8  +
push 32h  +
jmp loc_1025283  +
xor edi edi +
test eax eax +
jbe loc_1025245  +
mov eax [esi+20h] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_1025214  +
push dword ptr [eax]  +
call sub_1028CF6  +
test eax eax +
jz loc_1025289  +
mov eax [esi+1Ch] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_1025239  +
push dword ptr [eax]  +
call sub_102A77E  +
test eax eax +
jz loc_1025289  +
mov eax [esi+1Ch] +
push dword ptr [eax+edi*4]  +
call sub_1029592  +
test eax eax +
jz loc_1025289  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
inc edi  +
cmp edi [eax+44h] +
jb loc_10251FE  +
push dword ptr [esi+14h]  +
call sub_102BDAC  +
test eax eax +
jz loc_1025289  +
push dword ptr [esi+14h]  +
call sub_102AC56  +
test eax eax +
jz loc_1025289  +
mov eax [esi+14h] +
cmp dword ptr [eax+20h] 0 +
jnz loc_102526C  +
push esi  +
call sub_1025124  +
mov eax [esi+14h] +
mov eax [eax+20h] +
test eax eax +
jz loc_102527C  +
push eax  +
call sub_102066A  +
xor eax eax +
inc eax  +
jmp loc_102528B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_214] ecx +
mov [ebp+dwBytes] eax +
mov [ebp+var_218] edx +
test eax eax +
jz loc_10252D8  +
cmp [ebp+arg_8] 6 +
jz loc_10252D8  +
push 8  +
pop edi  +
jmp loc_10252DA  +
xor edi edi +
test ecx ecx +
jnz loc_10252EB  +
push 57h  +
call ds:SetLastError  +
jmp loc_102541F  +
mov ebx ds:GetProcessHeap +
push 28h  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_102541F  +
or edi [ebp+arg_8] +
push [ebp+var_214]  +
and dword ptr [esi+4] 0 +
mov [esi] edi +
call sub_101E529  +
xor edi edi +
mov [esi+8] eax +
cmp eax edi +
jz loc_1025419  +
mov eax [ebp+arg_8] +
and eax 3 +
cmp al 3 +
jz loc_102533D  +
mov eax [ebp+arg_8] +
and eax 6 +
cmp al 6 +
jnz loc_102534B  +
push esi  +
call sub_1024D3B  +
test eax eax +
jz loc_1025419  +
cmp [ebp+dwBytes] edi +
jz loc_102536B  +
push [ebp+dwBytes]  +
call sub_101E529  +
mov [esi+0Ch] eax +
cmp eax edi +
jz loc_1025419  +
jmp loc_102536E  +
mov [esi+0Ch] edi +
mov eax 104h +
push eax  +
lea ecx [ebp+FileName] +
push ecx  +
push eax  +
push [ebp+var_214]  +
call sub_101E8C1  +
test eax eax +
jz loc_1025419  +
push [ebp+var_218]  +
lea eax [ebp+FileName] +
push 100h  +
push [ebp+arg_8]  +
push edi  +
push eax  +
call sub_102B692  +
mov [esi+14h] eax +
cmp eax edi +
jz loc_1025419  +
mov eax [eax+0Ch] +
mov eax [eax+34h] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 4  +
pop ecx  +
mov [esi+18h] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_1025419  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [esi+1Ch] eax +
test eax eax +
jz loc_1025419  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [esi+18h] +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_1025419  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
push eax  +
call edi  +
mov [esi+20h] eax +
test eax eax +
jnz loc_1025423  +
push esi  +
call sub_1024D5E  +
xor eax eax +
jmp loc_1025425  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push ebx  +
shr eax 1 +
and eax 1 +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_214] edx +
mov [ebp+dwBytes] ecx +
mov [ebp+var_218] eax +
cmp ecx ebx +
jz loc_1025484  +
cmp [ebp+arg_8] 6 +
jz loc_1025484  +
push 8  +
pop edi  +
jmp loc_1025486  +
xor edi edi +
cmp edx ebx +
jnz loc_1025497  +
push 57h  +
call ds:SetLastError  +
jmp loc_10256EA  +
push 28h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_10256EA  +
or edi [ebp+arg_8] +
push [ebp+var_214]  +
mov [esi+4] ebx +
mov [esi] edi +
call sub_101E529  +
mov [esi+8] eax +
cmp eax ebx +
jz loc_10256E4  +
test byte ptr [ebp+arg_8] 2 +
jz loc_10254E4  +
push esi  +
call sub_1024D3B  +
test eax eax +
jz loc_10256E4  +
cmp [ebp+dwBytes] ebx +
jz loc_1025502  +
push [ebp+dwBytes]  +
call sub_101E529  +
mov [esi+0Ch] eax +
cmp eax ebx +
jz loc_10256E4  +
mov edi 104h +
push edi  +
lea eax [ebp+FileName] +
push eax  +
push edi  +
push dword ptr [esi+8]  +
call sub_101E8C1  +
test eax eax +
jz loc_10256E4  +
push ebx  +
push 400h  +
push [ebp+arg_8]  +
lea eax [ebp+FileName] +
push ebx  +
push eax  +
call sub_102B692  +
mov [esi+14h] eax +
cmp eax ebx +
jz loc_10256E4  +
cmp [eax+0Ch] ebx +
jz loc_1025583  +
push edi  +
lea eax [ebp+FileName] +
push eax  +
push 10Eh  +
push dword ptr [esi+8]  +
call sub_101E8C1  +
test eax eax +
jz loc_1025583  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
push 300h  +
push [ebp+arg_8]  +
push dword ptr [eax+3Ch]  +
lea eax [ebp+FileName] +
push ebx  +
push eax  +
call sub_102C04F  +
mov ecx [esi+14h] +
mov [ecx+20h] eax +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov eax [eax+34h] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 4  +
pop ecx  +
mov [esi+18h] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_10256E4  +
push [ebp+dwBytes]  +
mov edi ds:GetProcessHeap +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [esi+1Ch] eax +
cmp eax ebx +
jz loc_10256E4  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [esi+18h] +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_10256E4  +
push [ebp+dwBytes]  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [esi+20h] eax +
cmp eax ebx +
jz loc_10256E4  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov [ebp+dwBytes] ebx +
cmp [eax+44h] ebx +
jbe loc_10256D1  +
mov edi [ebp+dwBytes] +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push edi  +
push 105h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_10256E4  +
push ebx  +
push [ebp+var_218]  +
lea eax [ebp+FileName] +
push ebx  +
push ebx  +
push eax  +
shl edi 2 +
call sub_10207D8  +
mov ecx [esi+20h] +
mov [edi+ecx] eax +
mov eax [esi+20h] +
cmp [edi+eax] ebx +
jz loc_10256E4  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+dwBytes]  +
push 106h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_10256E4  +
mov eax [esi+20h] +
push dword ptr [eax+edi]  +
lea eax [ebp+FileName] +
push ebx  +
push 400h  +
push [ebp+arg_C]  +
push ebx  +
push eax  +
call sub_102A6C2  +
mov ecx [esi+1Ch] +
mov [edi+ecx] eax +
mov eax [esi+1Ch] +
cmp [edi+eax] ebx +
jz loc_10256E4  +
inc [ebp+dwBytes]  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov ecx [ebp+dwBytes] +
cmp ecx [eax+44h] +
jb loc_102561B  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
push esi  +
call sub_1024D5E  +
xor eax eax +
jmp loc_10256D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
shr eax 1 +
and eax 1 +
push esi  +
push edi  +
mov [ebp+dwBytes] ecx +
mov [ebp+lpBaseAddress] eax +
test ecx ecx +
jnz loc_1025733  +
push 57h  +
call ds:SetLastError  +
jmp loc_102592F  +
mov edi ds:GetProcessHeap +
push 28h  +
push 8  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_102592F  +
mov eax [ebp+arg_4] +
push [ebp+dwBytes]  +
and dword ptr [esi+4] 0 +
or eax 8 +
mov [esi] eax +
call sub_101E529  +
xor edx edx +
mov [esi+8] eax +
cmp eax edx +
jz loc_1025929  +
test byte ptr [ebp+arg_4] 2 +
jz loc_102578C  +
push esi  +
call sub_1024D3B  +
test eax eax +
jz loc_1025929  +
xor edx edx +
or dword ptr [esi+4] 1 +
mov eax [ebp+arg_C] +
mov ecx [esi+4] +
mov [esi+0Ch] edx +
test al 6 +
jz loc_10257A3  +
or ecx 8 +
mov [esi+4] ecx +
push edx  +
push edx  +
push edx  +
push edx  +
push [ebp+lpBaseAddress]  +
and eax 6 +
or [esi+4] eax +
push 0FFFFFFFFh  +
call sub_101FAD6  +
mov [esi+14h] eax +
test eax eax +
jz loc_1025929  +
push 1  +
call sub_10205F2  +
mov ecx [esi+14h] +
mov [ecx+20h] eax +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov eax [eax+34h] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 4  +
pop ecx  +
mov [esi+18h] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_1025929  +
push [ebp+dwBytes]  +
push 8  +
call edi  +
push eax  +
call ebx  +
mov [esi+1Ch] eax +
test eax eax +
jz loc_1025929  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [esi+18h] +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_1025929  +
push [ebp+dwBytes]  +
push 8  +
call edi  +
push eax  +
call ebx  +
xor ebx ebx +
mov [esi+20h] eax +
cmp eax ebx +
jz loc_1025929  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
cmp [eax+44h] ebx +
jbe loc_1025916  +
push [ebp+lpBaseAddress]  +
mov edi ebx +
push ebx  +
shl edi 2 +
call sub_1020761  +
mov ecx [esi+20h] +
mov [edi+ecx] eax +
mov eax [esi+20h] +
cmp dword ptr [edi+eax] 0 +
jnz loc_10258BB  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
push 105h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_1025929  +
push [ebp+lpBaseAddress]  +
lea eax [ebp+FileName] +
push eax  +
call sub_102083E  +
mov ecx [esi+20h] +
mov [edi+ecx] eax +
mov eax [esi+20h] +
cmp dword ptr [edi+eax] 0 +
jz loc_1025929  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
push 106h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_1025929  +
mov eax [esi+20h] +
push dword ptr [edi+eax]  +
lea eax [ebp+FileName] +
push 0  +
push 400h  +
push [ebp+arg_8]  +
push 0  +
push eax  +
call sub_102A6C2  +
mov ecx [esi+1Ch] +
mov [edi+ecx] eax +
mov eax [esi+1Ch] +
cmp dword ptr [edi+eax] 0 +
jz loc_1025929  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
inc ebx  +
cmp ebx [eax+44h] +
jb loc_1025858  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 10h  +
push esi  +
call sub_1024D5E  +
xor eax eax +
jmp loc_1025918  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp ebx edi +
jz loc_1025985  +
push edi  +
call sub_10204D5  +
cmp eax edi +
jnz loc_1025979  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
call sub_101FAD6  +
cmp eax edi +
jnz loc_1025971  +
xor ebx ebx +
mov [ebp+var_4] edi +
jmp loc_1025985  +
push eax  +
call sub_101F50E  +
jmp loc_1025985  +
mov ecx [eax+4] +
push eax  +
mov [ebp+var_4] ecx +
call sub_101FF94  +
mov esi [ebp+arg_0] +
cmp esi edi +
jz loc_10259AF  +
mov eax [ebp+arg_10] +
cmp eax 100h +
jz loc_1025A30  +
cmp eax 200h +
jz loc_1025A13  +
cmp eax 300h +
jz loc_10259EB  +
cmp eax 400h +
jz loc_10259BC  +
push 57h  +
call ds:SetLastError  +
jmp loc_1025A56  +
cmp ebx edi +
jz loc_10259D1  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_10256F3  +
jmp loc_10259E0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_102543B  +
cmp eax edi +
jnz loc_1025A58  +
push offset aRescopenadminv  +
jmp loc_1025A50  +
cmp ebx edi +
jz loc_1025A00  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_10256F3  +
jmp loc_1025A0F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_102543B  +
cmp eax edi +
jnz loc_1025A58  +
cmp ebx edi +
jz loc_1025A1E  +
push offset aRescopenadmi_0  +
jmp loc_1025A50  +
push edi  +
push esi  +
call sub_102155D  +
test eax eax +
jnz loc_1025A38  +
push offset aRescopenadmi_1  +
jmp loc_1025A50  +
cmp ebx edi +
jnz loc_1025A17  +
push 1  +
jmp loc_1025A1F  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_1025296  +
cmp eax edi +
jnz loc_1025A58  +
push offset aRescopenadmi_2  +
push edi  +
call sub_10285DE  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi ds:SetLastError +
mov [ebp+var_12C] eax +
xor eax eax +
push eax  +
mov [ebp+var_128] eax +
mov [ebp+var_124] eax +
mov [ebp+hLibModule] eax +
mov [ebp+var_120] eax +
call edi  +
test ebx ebx +
jz loc_1025BE6  +
test esi esi +
jz loc_1025BE6  +
push 2  +
push 0  +
push ebx  +
call ds:LoadLibraryExW  +
mov ebx eax +
test ebx ebx +
jz loc_1025BEA  +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call ds:GetVersionExW  +
test eax eax +
jz loc_1025BC4  +
cmp [ebp+VersionInformation.dwMajorVersion] 6 +
jb loc_1025B55  +
push offset aNtdll_dll  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
test eax eax +
jz loc_1025BC4  +
push offset aLdrressearchre  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_1025BC4  +
push 0  +
push 0  +
lea ecx [ebp+var_124] +
push ecx  +
lea ecx [ebp+var_120] +
push ecx  +
push 1100h  +
push 3  +
push offset dword_1014024  +
push ebx  +
call eax  +
test eax eax +
jl loc_1025BC4  +
mov eax [ebp+var_124] +
jmp loc_1025B8B  +
push 10h  +
push 1  +
push ebx  +
call ds:FindResourceW  +
mov edi eax +
test edi edi +
jz loc_1025BC4  +
push edi  +
push ebx  +
call ds:LoadResource  +
test eax eax +
jz loc_1025BC4  +
push eax  +
call ds:LockResource  +
mov [ebp+var_120] eax +
test eax eax +
jz loc_1025BC4  +
push edi  +
push ebx  +
call ds:SizeofResource  +
mov edi [ebp+var_12C] +
mov [esi] eax +
test edi edi +
jz loc_1025BBA  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [edi] eax +
push dword ptr [esi]  +
push [ebp+var_120]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov [ebp+var_128] 1 +
mov esi ds:FreeLibrary +
push ebx  +
call esi  +
cmp [ebp+hLibModule] 0 +
jz loc_1025BDE  +
push [ebp+hLibModule]  +
call esi  +
mov eax [ebp+var_128] +
jmp loc_1025BEC  +
push 57h  +
call edi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 650h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+lpMem] eax +
xor ebx ebx +
xor eax eax +
mov edi 206h +
push edi  +
mov word ptr [ebp+dwBytes] ax +
lea eax [ebp+dwBytes+2] +
push ebx  +
push eax  +
mov [ebp+var_624] ebx +
mov [ebp+var_628] ebx +
mov [ebp+var_638] ebx +
mov [ebp+var_634] ebx +
call memset  +
xor eax eax +
push edi  +
mov [ebp+var_414] ax +
lea eax [ebp-412h] +
push ebx  +
push eax  +
call memset  +
mov eax [esi] +
and eax 0FFFFFFF7h +
mov [ebp+var_644] eax +
mov eax [esi+14h] +
add esp 18h +
cmp eax ebx +
jz loc_1026078  +
mov ecx [eax+0Ch] +
mov [ebp+var_630] ecx +
cmp ecx ebx +
jz loc_1026078  +
mov eax ecx +
mov edx [eax+44h] +
mov ecx [eax+40h] +
mov [ebp+var_62C] edx +
mov [ebp+var_640] ecx +
cmp edx [eax+34h] +
jb loc_1025CC0  +
push 20011104h  +
jmp loc_102607A  +
mov eax [ebp+lpMem] +
cmp eax ebx +
jz loc_1025CDB  +
test byte ptr [eax+4] 40h +
jz loc_1025CDB  +
mov eax [eax+20h] +
mov [ebp+var_640] eax +
mov ecx eax +
mov ebx ds:GetProcessHeap +
cmp ecx 100000h +
jb loc_1026015  +
mov eax [ebp+var_630] +
cmp ecx [eax+40h] +
ja loc_1026015  +
mov eax [esi+4] +
and [ebp+var_63C] 0 +
mov ecx eax +
shr eax 2 +
and ecx 1 +
and eax 1 +
cmp dword ptr [esi+0Ch] 0 +
mov [ebp+var_650] ecx +
mov [ebp+var_64C] eax +
jz loc_1025D9E  +
xor eax eax +
push edi  +
push eax  +
mov [ebp+var_61C] ax +
lea eax [ebp-61Ah] +
push eax  +
call memset  +
mov edi [ebp+lpMem] +
add esp 0Ch +
test edi edi +
jz loc_1025D65  +
mov eax [edi+4] +
test al al +
jns loc_1025D59  +
mov eax [edi+24h] +
mov [ebp+var_63C] eax +
jmp loc_1025DA4  +
test eax 100h +
jz loc_1025D65  +
mov eax [edi+28h] +
jmp loc_1025D68  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_1025D71  +
mov eax offset dword_1014048 +
push 104h  +
lea ecx [ebp+var_61C] +
push ecx  +
push [ebp+var_62C]  +
push 205h  +
push eax  +
call sub_101EC5E  +
test eax eax +
jz loc_1026080  +
lea eax [ebp+var_61C] +
jmp loc_1025D51  +
mov edi [ebp+lpMem] +
push 104h  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_62C]  +
push 105h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_1026080  +
push 1  +
push edi  +
push [ebp+var_62C]  +
lea eax [ebp+dwBytes] +
push 0  +
push eax  +
call sub_1028AAD  +
mov [ebp+var_624] eax +
test eax eax +
jz loc_1026080  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+var_62C]  +
push 106h  +
push dword ptr [esi+8]  +
call sub_101EC5E  +
test eax eax +
jz loc_102601D  +
push [ebp+var_624]  +
lea eax [ebp+var_414] +
push edi  +
push 100h  +
push [ebp+var_644]  +
push 0  +
push eax  +
call sub_102A6C2  +
mov [ebp+var_628] eax +
test eax eax +
jz loc_102601D  +
mov eax [esi+18h] +
mov edi [ebp+var_62C] +
cmp edi eax +
jb loc_1025F6D  +
test eax eax +
jbe loc_1025E64  +
add eax eax +
mov [ebp+var_630] eax +
jmp loc_1025E6E  +
mov [ebp+var_630] 0Ah +
mov eax [ebp+var_630] +
push 4  +
pop ecx  +
mul  ecx +
lea ecx [ebp+lpMem] +
push ecx  +
push edx  +
push eax  +
mov [ebp+var_648] eax +
mov [ebp+var_644] edx +
call sub_101D610  +
test eax eax +
jl loc_102601D  +
push [ebp+lpMem]  +
push 8  +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+var_638] eax +
test eax eax +
jz loc_102601D  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+var_644]  +
push [ebp+var_648]  +
call sub_101D610  +
test eax eax +
jl loc_102601D  +
push [ebp+lpMem]  +
push 8  +
call ebx  +
push eax  +
call edi  +
mov [ebp+var_634] eax +
test eax eax +
jz loc_102601D  +
mov eax [esi+1Ch] +
mov edi [esi+20h] +
mov [ebp+lpMem] eax +
mov eax [esi+18h] +
shl eax 2 +
push eax  +
push edi  +
push [ebp+var_638]  +
call memcpy  +
mov eax [esi+18h] +
shl eax 2 +
push eax  +
push [ebp+lpMem]  +
push [ebp+var_634]  +
call memcpy  +
mov eax [ebp+var_638] +
mov [esi+20h] eax +
mov eax [ebp+var_634] +
add esp 18h +
mov [esi+1Ch] eax +
mov eax [ebp+var_630] +
push edi  +
push 0  +
mov [esi+18h] eax +
call ebx  +
mov edi ds:HeapFree +
push eax  +
call edi  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov edi [ebp+var_62C] +
cmp [ebp+var_650] 0 +
jz loc_1025F93  +
push [ebp+var_624]  +
call sub_10208C0  +
test eax eax +
jz loc_102601D  +
push 1  +
push edi  +
call sub_1020761  +
jmp loc_1025FC3  +
cmp [ebp+var_64C] 0 +
jz loc_1025FD6  +
push [ebp+var_624]  +
call sub_10208C0  +
test eax eax +
jz loc_102601D  +
push 1  +
push 1  +
push 0  +
push [ebp+var_63C]  +
lea eax [ebp+dwBytes] +
push eax  +
call sub_10207D8  +
mov [ebp+var_624] eax +
test eax eax +
jz loc_1026031  +
mov ecx [ebp+var_628] +
mov [ecx+14h] eax +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_640]  +
push [ebp+var_63C]  +
push dword ptr [esi+14h]  +
call sub_102B742  +
cmp eax edi +
jz loc_1025FF9  +
push 32h  +
jmp loc_1026017  +
mov eax [esi+20h] +
mov ecx [ebp+var_624] +
mov [eax+edi*4] ecx +
mov eax [esi+1Ch] +
mov ecx [ebp+var_628] +
mov [eax+edi*4] ecx +
mov eax edi +
jmp loc_1026083  +
push 18h  +
call ds:SetLastError  +
cmp [ebp+var_624] 0 +
jz loc_1026031  +
push [ebp+var_624]  +
call sub_10208C0  +
xor esi esi +
cmp [ebp+var_628] esi +
jz loc_1026046  +
push [ebp+var_628]  +
call sub_10297BF  +
cmp [ebp+var_638] esi +
jz loc_102605E  +
push [ebp+var_638]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_634] esi +
jz loc_1026080  +
push [ebp+var_634]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
jmp loc_1026080  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+lpMem] +
push esi  +
push edi  +
push dword ptr [ebx+4]  +
or esi 0FFFFFFFFh +
call sub_102CF7A  +
push 1  +
push eax  +
mov [ebp+var_4] eax +
call sub_101E275  +
test eax eax +
jbe loc_10260DE  +
push 1  +
push [ebp+var_4]  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
jmp loc_10260E2  +
and [ebp+lpMem] 0 +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_1026176  +
mov esi [ebx+4] +
push 0Ah  +
pop ecx  +
mov edi eax +
movs   +
mov ecx [ebx+4] +
mov ecx [ecx+18h] +
shl ecx 3 +
push ecx  +
push dword ptr [ebx+8]  +
add eax 28h +
push eax  +
call memcpy  +
mov eax [ebx+4] +
mov ecx [eax+20h] +
mov eax [eax+1Ch] +
mov esi [ebp+lpMem] +
add ecx ecx +
push ecx  +
push dword ptr [ebx+0Ch]  +
lea eax [esi+eax*8+28h] +
push eax  +
call memcpy  +
mov ebx [ebx+4] +
add esp 18h +
push [ebp+var_4]  +
push esi  +
push dword ptr [ebx+10h]  +
mov esi ebx +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+arg_0] +
push edi  +
call sub_1024F8F  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1026164  +
mov eax [edi+14h] +
mov eax [eax+18h] +
mov ecx esi +
imul ecx ecx +
mov byte ptr [eax+ecx+2Fh] 2 +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+lpBaseAddress] eax +
mov eax [ebp+arg_18] +
push edi  +
mov [ebp+var_218] edx +
mov [ebp+lpMem] eax +
test esi esi +
jz loc_1026329  +
cmp [ebp+arg_C] 1 +
jb loc_1026329  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov ecx [ebp+arg_4] +
cmp ecx [eax+44h] +
jb loc_10261E4  +
push 20012104h  +
jmp loc_102632B  +
mov ebx [esi] +
mov eax [esi+20h] +
mov edi ecx +
shl edi 2 +
shr ebx 1 +
add eax edi +
and ebx 1 +
cmp dword ptr [eax] 0 +
jnz loc_1026281  +
test byte ptr [esi+4] 1 +
jz loc_102620D  +
push ebx  +
push ecx  +
call sub_1020761  +
jmp loc_1026267  +
push ecx  +
push dword ptr [esi+14h]  +
call sub_101F2EC  +
test eax eax +
jz loc_1026227  +
push ebx  +
push eax  +
call sub_10207BA  +
mov ecx [esi+20h] +
mov [edi+ecx] eax +
mov eax [esi+20h] +
cmp dword ptr [edi+eax] 0 +
jnz loc_102626D  +
mov eax [esi+8] +
test eax eax +
jz loc_102626D  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push [ebp+arg_4]  +
push 105h  +
push eax  +
call sub_101EC5E  +
test eax eax +
jz loc_102626D  +
xor eax eax +
push eax  +
push ebx  +
push eax  +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_10207D8  +
mov ecx [esi+20h] +
mov [edi+ecx] eax +
mov eax [esi+20h] +
add eax edi +
cmp dword ptr [eax] 0 +
jz loc_1026331  +
mov edx [ebp+var_218] +
mov esi [eax] +
mov eax [ebp+arg_C] +
mov edi [esi+10h] +
lea ecx [edx+eax] +
cmp ecx [edi+1Ch] +
jb loc_102629B  +
push 20012221h  +
jmp loc_102632B  +
cmp [ebp+arg_10] 0 +
jnz loc_10262BA  +
push [ebp+lpMem]  +
push [ebp+lpBaseAddress]  +
push eax  +
push edx  +
push esi  +
call sub_1029125  +
jmp loc_1026344  +
and [ebp+lpMem] 0 +
lea eax [ebp+lpBaseAddress] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+lpBaseAddress]  +
call sub_1025A64  +
test eax eax +
jz loc_1026331  +
cmp [ebp+lpMem] 0 +
jz loc_1026331  +
mov ecx [ebp+arg_C] +
cmp [ebp+lpBaseAddress] ecx +
jnz loc_1026331  +
mov edi [esi+14h] +
add edi [ebp+var_218] +
mov esi [ebp+lpMem] +
xor ebx ebx +
cmps   +
jz loc_102630C  +
sbb ebx ebx +
sbb ebx 0FFFFFFFFh +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test ebx ebx +
jnz loc_1026331  +
xor eax eax +
jmp loc_1026344  +
push 57h  +
call ds:SetLastError  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jz loc_1026341  +
call esi  +
jmp loc_1026344  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 15Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_14C] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_140] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov [ebp+var_134] esi +
mov [ebp+var_144] eax +
mov [ebp+var_13C] ebx +
mov [ebp+hModule] ebx +
mov [ebp+hLibModule] ebx +
mov [ebp+var_12C] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_120] ebx +
mov [ebp+var_138] ebx +
call ds:SetLastError  +
cmp esi ebx +
jz loc_10263DE  +
cmp [ebp+arg_C] ebx +
jz loc_1026613  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call ds:GetVersionExW  +
test eax eax +
jz loc_1026613  +
cmp [ebp+VersionInformation.dwMajorVersion] 6 +
jb loc_1026535  +
push offset aNtdll_dll  +
call ds:LoadLibraryW  +
mov [ebp+hModule] eax +
cmp eax ebx +
jz loc_1026613  +
mov esi ds:GetProcAddress +
push offset aLdrfindresourc  +
push eax  +
call esi  +
mov [ebp+var_148] eax +
cmp eax ebx +
jz loc_1026613  +
push offset aRtlimagenthead  +
push [ebp+hModule]  +
call esi  +
mov esi eax +
cmp esi ebx +
jz loc_1026613  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 5  +
push 80000000h  +
push edi  +
call ds:CreateFileW  +
mov [ebp+var_12C] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102647F  +
mov [ebp+var_12C] ebx +
jmp loc_1026613  +
push ebx  +
push ebx  +
push ebx  +
push 2  +
push ebx  +
push eax  +
call ds:CreateFileMappingW  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_1026613  +
push 2  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
lea eax [ebp+var_138] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+var_120] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:NtMapViewOfSection  +
cmp eax ebx +
jl loc_1026522  +
lea eax [ebp+var_15C] +
push eax  +
push ebx  +
push [ebp+var_138]  +
push [ebp+var_120]  +
push ebx  +
call esi  +
cmp eax ebx +
jl loc_1026522  +
mov esi [ebp+var_120] +
lea eax [ebp+hResInfo] +
push eax  +
push 3  +
lea eax [ebp+var_158] +
push eax  +
or esi edi +
push esi  +
push 30h  +
mov [ebp+var_158] offset Type +
mov [ebp+var_154] edi +
mov [ebp+var_150] ebx +
call [ebp+var_148]  +
cmp eax ebx +
jl loc_1026522  +
cmp [ebp+hResInfo] ebx +
jnz loc_1026572  +
push eax  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
jmp loc_1026613  +
push 2  +
push ebx  +
push edi  +
call ds:LoadLibraryExW  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jnz loc_1026550  +
xor eax eax +
jmp loc_1026669  +
push offset Type  +
push 1  +
push eax  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
cmp eax ebx +
jz loc_10265FF  +
mov esi [ebp+hLibModule] +
push [ebp+hResInfo]  +
push esi  +
call ds:LoadResource  +
cmp eax ebx +
jz loc_10265FF  +
push eax  +
call ds:LockResource  +
cmp eax ebx +
jz loc_10265FF  +
cmp dword ptr [eax] 0FECDFECDh +
jz loc_10265A0  +
push 0Bh  +
call ds:SetLastError  +
jmp loc_10265FF  +
mov edi [ebp+var_14C] +
lea esi [eax+1Ch] +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax+74h] +
cmp ecx ebx +
jbe loc_10265F5  +
lea esi [ecx+eax] +
cmp word ptr [esi] 2Ah +
jnz loc_10265C2  +
mov esi offset aEnUs +
cmp [ebp+var_134] ebx +
jz loc_10265DD  +
push esi  +
push [ebp+arg_C]  +
push [ebp+var_134]  +
call sub_101E2A4  +
test eax eax +
jl loc_10265FF  +
mov edi [ebp+var_140] +
cmp edi ebx +
jz loc_10265F5  +
push esi  +
push [ebp+var_144]  +
call sub_102CC58  +
mov [edi] eax +
mov [ebp+var_13C] 1 +
cmp [ebp+hLibModule] ebx +
jz loc_1026613  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp [ebp+var_120] ebx +
jz loc_1026629  +
push [ebp+var_120]  +
push 0FFFFFFFFh  +
call ds:NtUnmapViewOfSection  +
mov esi ds:CloseHandle +
cmp [ebp+hObject] ebx +
jz loc_102663F  +
push [ebp+hObject]  +
call esi  +
cmp [ebp+var_12C] ebx +
jz loc_102664F  +
push [ebp+var_12C]  +
call esi  +
cmp [ebp+hModule] ebx +
jz loc_1026663  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
mov eax [ebp+var_13C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102635A  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
xor ecx ecx +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
cmp eax ecx +
jz loc_1026890  +
mov edx [ebp+arg_4] +
or edx [ebp+arg_8] +
jnz loc_10266D7  +
mov edx [ebp+arg_C] +
or edx [ebp+arg_10] +
jz loc_1026890  +
cmp [ebp+arg_14] ecx +
jz loc_1026890  +
mov edx [ebp+arg_14] +
and edx 0FFFF0000h +
jz loc_10266F7  +
cmp edx 100000h +
jnz loc_1026890  +
cmp [ebp+lpBaseAddress] ecx +
jz loc_1026890  +
push 3  +
push ecx  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push dword ptr [eax+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F92F  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jz loc_10267FE  +
mov eax [ebx+2Ch] +
mov ecx [ebp+arg_18] +
and eax 0FF000000h +
cmp ecx 80000000h +
jnz loc_102673D  +
mov ecx eax +
jmp loc_102674B  +
cmp eax ecx +
jz loc_102674B  +
cmp eax edi +
jnz loc_10268AA  +
xor ecx ecx +
mov eax [ebx+14h] +
mov esi [ebp+arg_0] +
cmp eax [esi+18h] +
jb loc_102675D  +
push offset aCorruptDirecto  +
jmp loc_1026778  +
push edi  +
push [ebp+lpBaseAddress]  +
push ecx  +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+18h]  +
push eax  +
push esi  +
call sub_1026184  +
cmp eax edi +
jge loc_102677E  +
push offset aInternalError  +
push edi  +
jmp loc_1026880  +
jnz loc_10267D7  +
test byte ptr [ebx+2Ch] 1 +
jz loc_1026887  +
push [ebp+arg_14]  +
mov eax [ebp+arg_0] +
sub esp 10h +
mov edi esp +
push dword ptr [eax+14h]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_102B09F  +
test eax eax +
jz loc_1026879  +
push dword ptr [ebx+1Ch]  +
mov ecx [ebp+arg_0] +
push dword ptr [ebx+18h]  +
mov eax [ebx+14h] +
push [ebp+arg_14]  +
mov ecx [ecx+1Ch] +
sub esp 10h +
mov edi esp +
push dword ptr [ecx+eax*4]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_1029913  +
jmp loc_1026875  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_1026801  +
push offset aRevalidatingOn  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10268AA  +
push 32h  +
jmp loc_10268A4  +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov [ebp+arg_18] edi +
cmp [eax+44h] edi +
jbe loc_10268AA  +
mov ebx [ebp+arg_0] +
mov ecx [ebp+arg_18] +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpBaseAddress]  +
mov eax [ebx+1Ch] +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push dword ptr [eax+ecx*4]  +
movs   +
movs   +
movs   +
movs   +
call sub_102A382  +
test eax eax +
jnz loc_1026855  +
inc [ebp+arg_18]  +
mov eax [ebx+14h] +
mov eax [eax+0Ch] +
mov ecx [ebp+arg_18] +
cmp ecx [eax+44h] +
jb loc_1026813  +
jmp loc_10268AA  +
push [ebp+var_8]  +
lea esi [ebp+arg_4] +
push [ebp+var_C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_102B96A  +
test eax eax +
jnz loc_1026887  +
push offset aInternalError  +
push 0  +
call sub_10285DE  +
jmp loc_10268AA  +
mov [ebp+var_4] 1 +
jmp loc_10268AA  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10268AA  +
push 57h  +
call ds:SetLastError  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
xor edx edx +
push esi  +
push edi  +
mov [ebp+var_4] edx +
cmp ebx edx +
jz loc_1026A50  +
mov eax [ebx+14h] +
cmp eax edx +
jz loc_1026A50  +
mov ecx [ebp+arg_8] +
or ecx [ebp+arg_C] +
jnz loc_10268F1  +
mov ecx [ebp+arg_10] +
or ecx [ebp+arg_14] +
jz loc_1026A50  +
cmp [ebp+arg_18] edx +
jz loc_1026A50  +
mov ecx [ebp+arg_18] +
and ecx 0FFFF0000h +
jz loc_1026911  +
cmp ecx 100000h +
jnz loc_1026A50  +
cmp [ebp+lpFileName] edx +
jz loc_1026A50  +
mov eax [eax+0Ch] +
mov ecx [ebp+arg_4] +
cmp ecx [eax+44h] +
jb loc_1026949  +
push offset aTheGivenSegmen  +
mov esi 585h +
push esi  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026A6A  +
push esi  +
jmp loc_1026A64  +
push [ebp+lpFileName]  +
lea esi [ebp+arg_8] +
push edx  +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10266A2  +
lea esi [ebp+arg_8] +
test eax eax +
jz loc_1026993  +
push 2  +
push 1  +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F7D6  +
test eax eax +
jge loc_1026A6D  +
push offset aInconsistentDi  +
jmp loc_1026A47  +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F98B  +
test eax eax +
jl loc_10269CC  +
push offset aFileForGivenEn  +
push 50h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026A6A  +
push 50h  +
jmp loc_1026A64  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+lpFileName]  +
mov eax [ebx+1Ch] +
push [ebp+arg_18]  +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_4] +
push dword ptr [eax+esi*4]  +
call sub_102A23C  +
test eax eax +
jl loc_1026A45  +
mov edx [ebx+20h] +
mov edx [edx+esi*4] +
mov edx [edx+10h] +
mov edx [edx+1Ch] +
mov edi [ebx+14h] +
mov edi [edi+10h] +
mov ecx esi +
shl ecx 5 +
mov [edi+ecx+4] edx +
mov edx [ebx+20h] +
mov edx [edx+esi*4] +
mov edx [edx+10h] +
mov edi [ebx+14h] +
mov edi [edi+10h] +
mov edx [edx+10h] +
mov [edi+ecx+10h] edx +
push [ebp+var_4]  +
push eax  +
push esi  +
push [ebp+arg_18]  +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_102B96A  +
test eax eax +
jge loc_1026A6D  +
push 0  +
push 0  +
call sub_10285DE  +
jmp loc_1026A6A  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026A6A  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
xor edx edx +
push esi  +
push edi  +
mov [ebp+var_8] edx +
mov [ebp+lpMem] edx +
cmp ebx edx +
jz loc_1026BCA  +
mov eax [ebx+14h] +
cmp eax edx +
jz loc_1026BCA  +
mov ecx [ebp+arg_8] +
or ecx [ebp+arg_C] +
jnz loc_1026AB5  +
mov ecx [ebp+arg_10] +
or ecx [ebp+arg_14] +
jz loc_1026BCA  +
cmp [ebp+arg_18] edx +
jz loc_1026BCA  +
mov ecx [ebp+arg_18] +
and ecx 0FFFF0000h +
jz loc_1026AD5  +
cmp ecx 100000h +
jnz loc_1026BCA  +
cmp [ebp+lpBaseAddress] edx +
jz loc_1026BCA  +
mov eax [eax+0Ch] +
mov ecx [ebp+arg_4] +
cmp ecx [eax+44h] +
jb loc_1026B0D  +
push offset aTheGivenSegmen  +
mov esi 585h +
push esi  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026BE4  +
push esi  +
jmp loc_1026BDE  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_8] +
push 1000000h  +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10266A2  +
test eax eax +
jz loc_1026B58  +
push 2  +
push 1  +
push [ebp+arg_18]  +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F7D6  +
test eax eax +
jge loc_1026BE7  +
push offset aInconsistentDi  +
jmp loc_1026BC1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+lpBaseAddress]  +
call sub_1025A64  +
test eax eax +
jz loc_1026BBC  +
push [ebp+var_8]  +
lea esi [ebp+arg_8] +
push [ebp+lpMem]  +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1024F8F  +
mov esi eax +
test esi esi +
jl loc_1026BA0  +
mov eax [ebx+14h] +
mov eax [eax+18h] +
mov ecx esi +
imul ecx ecx +
mov byte ptr [eax+ecx+2Fh] 1 +
cmp [ebp+lpMem] 0 +
jz loc_1026BB8  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
jmp loc_1026BE7  +
push offset aCannotExtractV  +
push 0  +
call sub_10285DE  +
jmp loc_1026BE4  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026BE4  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_1C] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1026CB3  +
cmp [ebp+arg_1C] 1000000h +
jz loc_1026C94  +
cmp [ebp+arg_1C] 4000000h +
jnz loc_1026C5B  +
mov ebx [ebp+arg_0] +
push 3  +
push 0  +
push [ebp+arg_18]  +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101F7D6  +
test eax eax +
jl loc_1026C60  +
push offset aFileForGivenEn  +
push 50h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1026C5B  +
push 50h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1026CD0  +
push 0  +
push 0  +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_102B96A  +
test eax eax +
jl loc_1026CD0  +
mov ecx [ebx+14h] +
mov ecx [ecx+18h] +
mov edx eax +
imul edx edx +
mov byte ptr [ecx+edx+2Fh] 4 +
jmp loc_1026CD0  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_8] +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
call sub_1026A79  +
jmp loc_1026CD0  +
push [ebp+lpBaseAddress]  +
lea esi [ebp+arg_8] +
push [ebp+arg_18]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
call sub_10268B9  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1026CED  +
or eax 0FFFFFFFFh +
jmp loc_1026D08  +
mov edx [ecx+24h] +
test edx edx +
jz loc_1026D05  +
mov eax [ebp+arg_4] +
cmp [ecx+4] eax +
jbe loc_1026D05  +
imul eax eax +
mov eax [eax+edx+8] +
jmp loc_1026D08  +
mov eax [ecx+30h] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1026E56  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1026E56  +
cmp word ptr [eax] 3Bh +
jnz loc_1026D44  +
mov [ebp+var_4] 1 +
jmp loc_1026E51  +
push ebx  +
push eax  +
call sub_101E529  +
mov ebx eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1026D50  +
sub eax edx +
sar eax 1 +
jz loc_1026E3C  +
cmp word ptr [ebx] 5Bh +
push esi  +
jnz loc_1026DAE  +
lea eax [ebx+eax*2-2] +
cmp word ptr [eax] 5Dh +
jnz loc_1026DAE  +
push 0Ch  +
xor ecx ecx +
push 8  +
mov [eax] cx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1026E3B  +
mov eax [edi+8] +
mov [esi+8] eax +
lea eax [ebx+2] +
push eax  +
mov [edi+8] esi +
call sub_101E529  +
mov [esi] eax +
jmp loc_1026E30  +
push 3Dh  +
push ebx  +
call wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1026E3B  +
mov edi [edi+8] +
test edi edi +
jz loc_1026E3B  +
xor eax eax +
mov [esi] ax +
inc esi  +
inc esi  +
mov eax ebx +
mov [ebp+arg_0] esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1026DD4  +
sub eax edx +
sar eax 1 +
jz loc_1026E3B  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1026DE9  +
sub eax edx +
sar eax 1 +
jz loc_1026E3B  +
push 0Ch  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1026E3B  +
mov eax [edi+4] +
mov [esi+8] eax +
push ebx  +
mov [edi+4] esi +
call sub_101E529  +
mov [esi] eax +
test eax eax +
jz loc_1026E3B  +
push [ebp+arg_0]  +
call sub_101E529  +
mov [esi+4] eax +
test eax eax +
jz loc_1026E3B  +
mov [ebp+var_4] 1 +
pop esi  +
test ebx ebx +
jz loc_1026E50  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov eax [ebp+var_4] +
jmp loc_1026E58  +
xor eax eax +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+arg_0] ebx +
test ebx ebx +
jz loc_1026ED8  +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
jmp loc_1026E85  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_1026E93  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov ebx [ebx+4] +
jmp loc_1026EBD  +
mov eax [ebx] +
test eax eax +
jz loc_1026EB0  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
push dword ptr [ebx+4]  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax ebx +
mov ebx [ebx+8] +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
test ebx ebx +
jnz loc_1026E98  +
mov eax [ebp+arg_0] +
mov ebx [eax+8] +
push eax  +
push 0  +
mov [ebp+arg_0] ebx +
call edi  +
push eax  +
call esi  +
test ebx ebx +
jnz loc_1026E82  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1026F10  +
mov eax [esi+8] +
test eax eax +
jz loc_1026F00  +
push eax  +
call sub_1026E62  +
and dword ptr [esi+8] 0 +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jz loc_1026F50  +
cmp [ebp+arg_4] 0 +
jz loc_1026F50  +
mov esi [eax+8] +
jmp loc_1026F45  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1026F4B  +
mov esi [esi+8] +
test esi esi +
jnz loc_1026F32  +
jmp loc_1026F58  +
xor eax eax +
inc eax  +
jmp loc_1026F5A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1026FC2  +
cmp [ebp+arg_4] edi +
jz loc_1026FC2  +
cmp [ebp+arg_8] edi +
jz loc_1026FC2  +
push esi  +
mov esi [eax+8] +
jmp loc_1026F96  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1026F9C  +
mov esi [esi+8] +
cmp esi edi +
jnz loc_1026F83  +
jmp loc_1026FBD  +
mov esi [esi+4] +
jmp loc_1026FB4  +
push dword ptr [esi]  +
push [ebp+arg_8]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1026FBA  +
mov esi [esi+8] +
cmp esi edi +
jnz loc_1026FA1  +
jmp loc_1026FBD  +
mov edi [esi+4] +
mov eax edi +
pop esi  +
jmp loc_1026FCC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jz loc_1027062  +
cmp [ebp+arg_4] 0 +
jz loc_1027062  +
cmp [ebp+arg_8] 0 +
jz loc_1027062  +
mov edi [ebp+arg_C] +
test edi edi +
jz loc_1027062  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1026F64  +
mov esi eax +
test esi esi +
jz loc_102706A  +
push esi  +
push offset aTrue  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1027057  +
push esi  +
push offset a1  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1027057  +
push esi  +
push offset aFalse  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1027052  +
push esi  +
push offset a0  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1027052  +
push 32h  +
jmp loc_1027064  +
and dword ptr [edi] 0 +
jmp loc_102705D  +
mov dword ptr [edi] 1 +
xor eax eax +
inc eax  +
jmp loc_102706C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jz loc_10270CD  +
cmp [ebp+arg_4] ebx +
jz loc_10270CD  +
cmp [ebp+arg_8] ebx +
jz loc_10270CD  +
mov edi [ebp+arg_C] +
cmp edi ebx +
jz loc_10270CD  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1026F64  +
mov esi eax +
cmp esi ebx +
jz loc_10270D5  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call wcstoul  +
add esp 0Ch +
mov [edi] eax +
cmp [ebp+var_4] esi +
jnz loc_10270C8  +
push 32h  +
jmp loc_10270CF  +
xor eax eax +
inc eax  +
jmp loc_10270D7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor edx edx +
push ebx  +
push esi  +
mov [ebp+var_4] edx +
mov [ebp+var_C] edx +
cmp [ebp+arg_0] edx +
jz loc_1027226  +
mov ebx [ebp+arg_C] +
cmp ebx edx +
jz loc_1027226  +
mov eax [ebp+arg_8] +
cmp eax edx +
jz loc_1027140  +
mov ecx [eax+14h] +
cmp ecx edx +
jz loc_1027226  +
cmp [ecx+0Ch] edx +
jz loc_1027226  +
mov eax ecx +
mov eax [eax+0Ch] +
mov esi [eax+34h] +
mov ecx [eax+40h] +
mov [ebp+arg_8] esi +
mov esi [eax+3Ch] +
mov eax [eax+38h] +
mov [ebp+arg_C] esi +
mov [ebp+var_8] eax +
jmp loc_102715A  +
mov ecx 400000h +
mov [ebp+arg_8] 14h +
mov [ebp+arg_C] 7D0h +
mov [ebp+var_8] 200h +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+arg_0] ecx +
cmp edi edx +
jz loc_10271D2  +
lea eax [ebp+arg_8] +
push eax  +
push offset aMaxnumsegments  +
mov esi offset aRebuildDirecto +
push esi  +
push edi  +
call sub_1027077  +
lea eax [ebp+arg_C] +
push eax  +
push offset aMaxnumentriesa  +
push esi  +
push edi  +
call sub_1027077  +
lea eax [ebp+var_8] +
push eax  +
push offset aMaxstringsizea  +
push esi  +
push edi  +
call sub_1027077  +
lea eax [ebp+arg_0] +
push eax  +
push offset aMaxsegmentsize  +
push esi  +
push edi  +
call sub_1027077  +
lea eax [ebp+var_4] +
push eax  +
push offset aMaxsizeabsolut  +
mov esi offset aRebuildSegment +
push esi  +
push edi  +
call sub_1027077  +
lea eax [ebp+var_C] +
push eax  +
push offset aMinsizeabsolut  +
push esi  +
push edi  +
call sub_1027077  +
mov ecx [ebp+arg_0] +
mov eax [ebp+var_8] +
mov edx [ebp+arg_C] +
mov esi [ebp+arg_8] +
mov edi 200h +
mov [ebx+10h] edx +
mov [ebx+0Ch] esi +
cmp eax edi +
jnb loc_10271EC  +
mov eax edi +
mov [ebx+14h] eax +
pop edi  +
cmp ecx [ebp+var_C] +
jnb loc_10271F8  +
mov ecx [ebp+var_C] +
cmp [ebp+var_4] 0 +
jz loc_1027206  +
cmp ecx [ebp+var_4] +
jbe loc_1027206  +
mov ecx [ebp+var_4] +
lea eax [ecx+0FFFh] +
shr eax 0Ch +
shl eax 0Ch +
mov [ebx+8] eax +
test edx edx +
jz loc_102722E  +
test esi esi +
jz loc_102722E  +
test eax eax +
jz loc_102722E  +
xor eax eax +
inc eax  +
jmp loc_1027230  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 2Ch  +
lea eax [ebp+var_30] +
push ebx  +
push eax  +
mov [ebp+var_34] ebx +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
cmp eax ebx +
jz loc_1027441  +
mov edi [ebp+arg_8] +
cmp edi ebx +
jz loc_1027441  +
cmp [edi+20h] ebx +
jz loc_1027441  +
mov ecx [eax+4] +
mov [ebp+var_8] ecx +
mov ecx [edi+10h] +
mov [ebp+var_20] ecx +
mov ecx [edi+0Ch] +
mov [ebp+var_24] ecx +
mov ecx [edi+14h] +
mov [ebp+var_1C] ecx +
mov ecx [edi+8] +
mov [ebp+var_14] ecx +
lea ecx [ebp+var_34] +
push ecx  +
push 100h  +
push 6  +
push 4  +
push eax  +
mov [ebp+var_34] 30h +
mov [ebp+var_30] 25Ch +
call sub_1020D9D  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi ebx +
jz loc_1027441  +
mov [ebp+arg_0] ebx +
cmp [edi] ebx +
jbe loc_10273DD  +
mov eax [edi+20h] +
mov ecx [ebp+arg_0] +
mov ebx [eax+ecx*4] +
test ebx ebx +
jz loc_10273BA  +
cmp dword ptr [ebx+8] 0 +
jz loc_10273BA  +
lea eax [ebp+var_34] +
push eax  +
push esi  +
mov [ebp+var_30] 40h +
call sub_1025C02  +
test eax eax +
jl loc_1027441  +
cmp eax [ebp+arg_0] +
jnz loc_1027439  +
mov ebx [ebx+8] +
jmp loc_10273B0  +
cmp dword ptr [ebx+3Ch] 0 +
jz loc_10273AD  +
cmp dword ptr [ebx+50h] 1 +
jnz loc_10273AD  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1027371  +
mov eax [ebx+30h] +
test eax eax +
jl loc_1027371  +
push dword ptr [ebx+34h]  +
mov ecx [ecx+20h] +
push dword ptr [ecx+eax*4]  +
call sub_102088B  +
test eax eax +
jz loc_1027371  +
push dword ptr [ebx+44h]  +
lea esi [ebx+10h] +
push eax  +
push dword ptr [ebx+20h]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
push [ebp+var_4]  +
movs   +
movs   +
movs   +
call sub_1024F8F  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_8] +
test eax eax +
jge loc_10273AD  +
mov eax [ebx+48h] +
cmp eax 2000000h +
jz loc_10273A1  +
push dword ptr [ebx+38h]  +
lea esi [ebx+10h] +
push eax  +
push dword ptr [ebx+20h]  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
push [ebp+var_4]  +
movs   +
movs   +
movs   +
call sub_1026BF3  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_8] +
jmp loc_10273AD  +
push dword ptr [ebx+40h]  +
push [ebp+arg_0]  +
push esi  +
call sub_1026099  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_1027315  +
jmp loc_10273CD  +
lea eax [ebp+var_34] +
push eax  +
push esi  +
call sub_1025C02  +
test eax eax +
jl loc_1027441  +
cmp eax [ebp+arg_0] +
jnz loc_1027439  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [edi] +
jb loc_10272D0  +
xor ebx ebx +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
xor ecx ecx +
cmp [eax+44h] ebx +
jbe loc_1027410  +
mov eax [esi+20h] +
cmp [eax+ecx*4] ebx +
jz loc_1027404  +
mov eax [eax+ecx*4] +
mov eax [eax+10h] +
mov edx [eax+1Ch] +
add edx 1060h +
mov [eax+20h] edx +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
inc ecx  +
cmp ecx [eax+44h] +
jb loc_10273EA  +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov ecx [eax+48h] +
mov [eax+3Ch] ecx +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov ecx [eax+44h] +
mov [eax+34h] ecx +
mov eax [esi+14h] +
mov eax [eax+0Ch] +
mov ecx [eax+50h] +
mov [eax+38h] ecx +
xor eax eax +
inc eax  +
jmp loc_1027443  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
xor ecx ecx +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
cmp eax ecx +
jz loc_10276F3  +
mov eax [eax+1Ch] +
mov [ebp+arg_0] eax +
cmp eax ecx +
jz loc_10276F3  +
cmp [eax+1Ch] ecx +
jz loc_10276F3  +
mov eax [ebp+arg_8] +
cmp eax ecx +
jz loc_10276F3  +
mov ebx [ebp+arg_14] +
cmp ebx ecx +
jz loc_10276F3  +
mov edx [ebp+arg_4] +
cmp edx ecx +
jz loc_10276F3  +
mov esi dword ptr [ebp+arg_C] +
cmp esi ecx +
jz loc_10274BB  +
cmp [esi+14h] ecx +
jnz loc_10274BB  +
push 32h  +
jmp loc_10276F5  +
lea edi [ebx+10h] +
mov esi eax +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax+10h] +
mov [ebx+20h] ecx +
mov ecx [eax+28h] +
mov [ebx+24h] ecx +
mov ecx [eax+2Ch] +
mov [ebx+28h] ecx +
mov ecx [eax+30h] +
mov [ebx+2Ch] ecx +
mov ecx [eax+40h] +
mov edi 0FF000000h +
and ecx edi +
mov [ebx+48h] ecx +
mov ecx [ebx+24h] +
test ecx ecx +
jl loc_102751E  +
cmp ecx [edx+4] +
jnb loc_102751E  +
mov esi [edx+24h] +
test esi esi +
jz loc_102751E  +
imul ecx ecx +
cmp dword ptr [ecx+esi] 0 +
jz loc_102751E  +
mov esi [ecx+esi+4] +
mov [ebx+50h] esi +
mov esi [edx+24h] +
mov esi [ecx+esi] +
mov [ebx+4Ch] esi +
mov edx [edx+24h] +
mov ecx [ecx+edx+8] +
jmp loc_102752D  +
mov ecx [edx+2Ch] +
mov [ebx+50h] ecx +
mov ecx [edx+28h] +
mov [ebx+4Ch] ecx +
mov ecx [edx+30h] +
cmp dword ptr [ebx+50h] 0 +
mov [ebx+54h] ecx +
jnz loc_102753E  +
xor eax eax +
inc eax  +
jmp loc_10276FD  +
mov ecx dword ptr [ebp+arg_C] +
test ecx ecx +
jz loc_1027566  +
push dword ptr [eax+10h]  +
mov esi eax +
sub esp 10h +
mov edi esp +
push dword ptr [ecx+14h]  +
movs   +
movs   +
movs   +
movs   +
call sub_101FBF5  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov edi 0FF000000h +
push dword ptr [eax+14h]  +
push [ebp+arg_0]  +
call sub_1023EF5  +
xor esi esi +
mov [ebx+38h] eax +
cmp eax esi +
jz loc_10276FB  +
or dword ptr [ebx+30h] 0FFFFFFFFh +
lea ecx [ebp+var_C] +
push ecx  +
push esi  +
push eax  +
call sub_101CB80  +
test eax eax +
jz loc_10276A8  +
mov esi [ebp+var_4] +
mov dword ptr [ebx+3Ch] 1 +
test esi esi +
jz loc_10275E5  +
mov eax [esi+2Ch] +
mov ecx [ebx+48h] +
and eax edi +
cmp eax ecx +
jnz loc_10275E5  +
cmp eax 2000000h +
jz loc_10275E5  +
push 0  +
push dword ptr [ebx+38h]  +
push ecx  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push dword ptr [ebp+arg_C]  +
call sub_1026184  +
test eax eax +
jnz loc_10275E5  +
mov eax [esi+14h] +
mov [ebx+30h] eax +
mov eax [esi+18h] +
mov [ebx+34h] eax +
mov eax [esi+1Ch] +
jmp loc_10276D3  +
mov eax [ebx+48h] +
or dword ptr [ebx+30h] 0FFFFFFFFh +
xor ecx ecx +
mov [ebx+34h] ecx +
cmp eax ecx +
jnz loc_10275FD  +
mov eax [ebp+var_C] +
jmp loc_10276D3  +
cmp eax 1000000h +
jnz loc_1027616  +
lea eax [ebx+44h] +
push eax  +
push ecx  +
push dword ptr [ebx+38h]  +
call sub_1025A64  +
jmp loc_10276DB  +
cmp eax 2000000h +
jnz loc_1027693  +
cmp [ebp+arg_10] ecx +
jz loc_1027693  +
push dword ptr [ebx+38h]  +
push offset aRebuildStringp  +
push [ebp+arg_10]  +
call sub_1026F64  +
mov dword ptr [ebp+arg_C] eax +
test eax eax +
jz loc_1027693  +
mov esi [ebp+arg_8] +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_102D07D  +
mov esi eax +
test esi esi +
jz loc_10276FB  +
push dword ptr [ebp+arg_C]  +
mov [ebx+40h] esi +
push esi  +
call sub_102C3CF  +
test eax eax +
jz loc_10276A2  +
push dword ptr [ebx+38h]  +
push esi  +
call sub_102C471  +
test eax eax +
jz loc_10276A2  +
mov eax [esi+4] +
and dword ptr [esi] 0FFFFFFF9h +
mov ecx [eax+18h] +
mov [eax+1Ch] ecx +
mov eax [esi+4] +
mov ecx [eax+20h] +
mov [eax+24h] ecx +
push dword ptr [esi+4]  +
call sub_102CF7A  +
jmp loc_10276D3  +
cmp dword ptr [ebx+48h] 4000000h +
jnz loc_10276A2  +
and dword ptr [ebx+44h] 0 +
jmp loc_10276DB  +
and dword ptr [ebx+50h] 0 +
jmp loc_10276DB  +
mov eax [ebp+var_4] +
mov [ebx+3Ch] esi +
cmp eax esi +
jz loc_10276D8  +
mov ecx [eax+2Ch] +
and ecx edi +
cmp ecx [ebx+48h] +
jnz loc_10276D8  +
cmp ecx 2000000h +
jz loc_10276D8  +
mov ecx [eax+14h] +
mov [ebx+30h] ecx +
mov ecx [eax+18h] +
mov [ebx+34h] ecx +
mov eax [eax+1Ch] +
mov [ebx+44h] eax +
jmp loc_10276DB  +
mov [ebx+50h] esi +
mov eax [ebx+44h] +
mov ecx [ebp+arg_4] +
cmp eax [ecx+8] +
jbe loc_1027536  +
and dword ptr [ebx+50h] 0 +
jmp loc_1027536  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_102771A  +
xor eax eax +
jmp loc_102773A  +
mov eax [esi+40h] +
test eax eax +
jz loc_1027727  +
push eax  +
call sub_102CFAE  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
cmp esi ebx +
jnz loc_102775C  +
xor eax eax +
jmp loc_1027806  +
cmp [esi+8] ebx +
jz loc_1027755  +
mov eax [esi+4] +
push edi  +
cmp [esi] eax +
jnz loc_10277F5  +
lea ecx [ebp+arg_4] +
push ecx  +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101F29E  +
test eax eax +
jz loc_10277C7  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_4] +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101F29E  +
test eax eax +
jz loc_10277C7  +
push 4  +
push [ebp+arg_4]  +
call sub_101E275  +
mov edi ds:GetProcessHeap +
test eax eax +
jbe loc_10277C3  +
push 4  +
push [ebp+arg_4]  +
call sub_101E275  +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_10277CB  +
xor eax eax +
jmp loc_1027805  +
mov eax [esi+4] +
shl eax 2 +
push eax  +
push dword ptr [esi+8]  +
push ebx  +
call memcpy  +
add esp 0Ch +
push dword ptr [esi+8]  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+arg_4] +
mov [esi+8] ebx +
mov [esi+4] eax +
mov eax [esi] +
mov ecx [esi+8] +
mov edx [ebp+arg_0] +
mov [ecx+eax*4] edx +
inc dword ptr [esi]  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push esi  +
test ecx ecx +
jz loc_102783F  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102783F  +
mov edx [ecx+8] +
test edx edx +
jz loc_102783F  +
mov eax [ecx] +
test eax eax +
jz loc_102783F  +
dec eax  +
mov [ecx] eax +
mov eax [edx+eax*4] +
mov [esi] eax +
xor eax eax +
inc eax  +
jmp loc_1027841  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_14] ebx +
mov [ebp+var_4] ebx +
cmp eax ebx +
jz loc_1027B1D  +
mov edi [eax+1Ch] +
mov [ebp+var_18] edi +
cmp edi ebx +
jz loc_1027B1D  +
cmp [edi+0Ch] ebx +
jz loc_1027B1D  +
cmp [ebp+arg_4] ebx +
jz loc_1027B1D  +
mov eax [edi+0Ch] +
mov eax [eax+24h] +
cmp eax ebx +
jl loc_1027B25  +
imul eax eax +
add eax [edi+14h] +
push ebx  +
mov [ebp+var_8] eax +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1027B06  +
push [ebp+var_4]  +
push [ebp+var_8]  +
jmp loc_1027ACF  +
mov eax [ebp+var_8] +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_1027AA1  +
mov eax [ebp+var_C] +
test byte ptr [eax+40h] 9 +
jnz loc_1027A85  +
push 58h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_1027B13  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_C]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102744F  +
test eax eax +
jz loc_1027AF3  +
cmp [esi+50h] ebx +
jnz loc_1027922  +
push esi  +
call sub_1027709  +
jmp loc_1027A83  +
mov eax [ebp+arg_4] +
mov edi [eax+18h] +
cmp edi ebx +
jnz loc_1027944  +
mov edi eax +
cmp [edi+1Ch] ebx +
jnz loc_1027AF3  +
mov [edi+18h] esi +
mov [esi+4] ebx +
mov [esi] ebx +
jmp loc_1027A18  +
mov ebx [esi+20h] +
cmp ebx [edi+20h] +
jge loc_102795C  +
mov [eax+18h] esi +
and dword ptr [esi] 0 +
mov [esi+4] edi +
mov [edi] esi +
jmp loc_1027A14  +
push dword ptr [esi+24h]  +
push eax  +
call sub_1026CDC  +
mov [ebp+var_10] eax +
jmp loc_1027971  +
cmp ebx [edi+20h] +
jle loc_1027994  +
mov edi eax +
mov eax [edi+4] +
test eax eax +
jnz loc_102796A  +
jmp loc_1027994  +
mov eax [esi+20h] +
cmp eax [edi+20h] +
jnz loc_10279BF  +
push dword ptr [edi+24h]  +
push [ebp+arg_4]  +
call sub_1026CDC  +
cmp [ebp+var_10] eax +
jle loc_10279BF  +
mov edi ebx +
mov ebx [edi+4] +
test ebx ebx +
jnz loc_102797A  +
jmp loc_10279BF  +
mov eax [esi+20h] +
cmp eax [edi+20h] +
jnz loc_10279F1  +
push dword ptr [edi+24h]  +
push [ebp+arg_4]  +
call sub_1026CDC  +
cmp [ebp+var_10] eax +
jnz loc_10279F1  +
mov eax [edi+24h] +
cmp [esi+24h] eax +
jle loc_10279F1  +
mov edi ebx +
mov ebx [edi+4] +
test ebx ebx +
jnz loc_102799D  +
jmp loc_10279F1  +
mov eax [esi+20h] +
cmp eax [edi+20h] +
jnz loc_10279F7  +
mov ebx [edi+24h] +
push ebx  +
push [ebp+arg_4]  +
call sub_1026CDC  +
cmp [ebp+var_10] eax +
jnz loc_10279F7  +
cmp [esi+24h] ebx +
jnz loc_10279F7  +
mov eax [esi+28h] +
cmp eax [edi+28h] +
jl loc_10279F7  +
mov edi [edi+4] +
cmp dword ptr [edi+4] 0 +
jnz loc_10279C8  +
mov eax [edi] +
mov [esi] eax +
mov [esi+4] edi +
mov [edi] esi +
mov eax [esi] +
test eax eax +
jz loc_1027A0E  +
mov edi [ebp+arg_4] +
mov [eax+4] esi +
jmp loc_1027A16  +
mov eax [ebp+arg_4] +
mov [eax+18h] esi +
mov edi eax +
xor ebx ebx +
mov eax [edi+1Ch] +
cmp eax ebx +
jnz loc_1027A2A  +
mov [edi+1Ch] esi +
mov [esi+0Ch] ebx +
mov [esi+8] ebx +
jmp loc_1027A80  +
mov edx [esi+2Ch] +
cmp edx [eax+2Ch] +
jle loc_1027A47  +
mov [edi+1Ch] esi +
mov [esi+0Ch] eax +
mov [esi+8] ebx +
mov [eax+8] esi +
jmp loc_1027A80  +
cmp edx [eax+2Ch] +
jge loc_1027A60  +
mov eax ecx +
mov ecx [eax+0Ch] +
cmp ecx ebx +
jnz loc_1027A40  +
jmp loc_1027A60  +
cmp edx [eax+2Ch] +
jnz loc_1027A65  +
mov ecx [esi+44h] +
cmp ecx [eax+44h] +
jbe loc_1027A65  +
mov eax [eax+0Ch] +
cmp [eax+0Ch] ebx +
jnz loc_1027A50  +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov [esi+0Ch] eax +
mov [eax+8] esi +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1027A7D  +
mov [eax+0Ch] esi +
jmp loc_1027A80  +
mov [edi+1Ch] esi +
mov edi [ebp+var_18] +
xor esi esi +
mov eax [ebp+var_C] +
mov eax [eax+38h] +
cmp eax ebx +
jl loc_1027A9E  +
imul eax eax +
add eax [edi+14h] +
mov [ebp+var_C] eax +
jnz loc_10278CD  +
mov eax [ebp+var_8] +
mov eax [eax+34h] +
cmp eax ebx +
jl loc_1027ABB  +
push [ebp+var_4]  +
imul eax eax +
add eax [edi+14h] +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1027B06  +
mov eax [ebp+var_8] +
mov eax [eax+3Ch] +
cmp eax ebx +
jl loc_1027AD8  +
push [ebp+var_4]  +
imul eax eax +
add eax [edi+14h] +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_1027B06  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_10278BF  +
mov [ebp+var_14] 1 +
cmp esi ebx +
jz loc_1027B06  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_14] +
jmp loc_1027B27  +
push 8  +
call ds:SetLastError  +
jmp loc_1027AF3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor eax eax +
push esi  +
push edi  +
mov [ebp+dwFlags] eax +
cmp [ebp+arg_0] eax +
jz loc_1027E57  +
mov esi [ebp+arg_4] +
cmp esi eax +
jz loc_1027E57  +
cmp [esi+20h] eax +
jnz loc_1027E57  +
mov edi [esi+8] +
mov edx [esi+0Ch] +
mov ecx [esi+10h] +
sub edi 1060h +
mov [ebp+var_10] edi +
mov [ebp+var_C] edx +
jz loc_1027E5F  +
cmp ecx eax +
jz loc_1027E5F  +
cmp edx eax +
jz loc_1027E5F  +
mov ecx [esi+1Ch] +
mov [ebp+arg_0] 1 +
cmp ecx eax +
jz loc_1027BE5  +
mov edx [ecx+44h] +
lea eax [edx+eax+7] +
shr eax 3 +
shl eax 3 +
cmp eax edi +
ja loc_1027BB2  +
mov ebx [esi+10h] +
cmp [ebp+dwFlags] ebx +
jb loc_1027BCE  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_C] +
jnb loc_1027BDA  +
mov eax [esi+10h] +
cmp [ebp+dwFlags] eax +
jnb loc_1027BDA  +
inc [ebp+arg_0]  +
lea eax [edx+7] +
shr eax 3 +
shl eax 3 +
mov ecx [ecx+0Ch] +
inc [ebp+dwFlags]  +
test ecx ecx +
jnz loc_1027B99  +
jmp loc_1027BE5  +
and dword ptr [ecx+50h] 0 +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_1027BDA  +
push 4  +
push [ebp+arg_0]  +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_1027C11  +
push 4  +
push [ebp+arg_0]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
jmp loc_1027C13  +
xor eax eax +
mov [esi+20h] eax +
test eax eax +
jnz loc_1027C21  +
push 8  +
jmp loc_1027E59  +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
mov edi [esi+18h] +
test eax eax +
jbe loc_1027D05  +
xor ecx ecx +
xor edx edx +
and [ebp+dwFlags] ecx +
jmp loc_1027C91  +
cmp dword ptr [edi+50h] 0 +
jz loc_1027C8C  +
mov eax [edi+44h] +
lea eax [eax+ecx+7] +
shr eax 3 +
shl eax 3 +
mov [ebp+lpMem] eax +
cmp eax [ebp+var_10] +
ja loc_1027C97  +
mov ecx [esi+20h] +
mov edx [ebp+arg_4] +
cmp dword ptr [ecx+edx*4] 0 +
jnz loc_1027C87  +
push 0Ch  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov ecx [esi+20h] +
mov edx [ebp+arg_4] +
mov [ecx+edx*4] eax +
mov eax [esi+20h] +
mov ecx edx +
mov eax [eax+ecx*4] +
mov [eax+8] edi +
mov eax [ebp+lpMem] +
inc [ebp+dwFlags]  +
mov ecx eax +
mov edx edi +
mov edi [edi+4] +
test edi edi +
jnz loc_1027C3C  +
jmp loc_1027CA8  +
test edx edx +
jz loc_1027C9F  +
and dword ptr [edx+4] 0 +
add ecx 7 +
shr ecx 3 +
shl ecx 3 +
mov eax [esi+20h] +
mov edx [ebp+arg_4] +
lea eax [eax+edx*4] +
cmp dword ptr [eax] 0 +
jnz loc_1027CE3  +
push 0Ch  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov ecx [esi+20h] +
mov edx [ebp+arg_4] +
mov [ecx+edx*4] eax +
mov ecx [esi+20h] +
mov eax edx +
mov ecx [ecx+eax*4] +
and dword ptr [ecx] 0 +
mov ecx [esi+20h] +
mov eax [ecx+eax*4] +
and dword ptr [eax+4] 0 +
jmp loc_1027CF6  +
mov eax [eax] +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [ebp+arg_4] +
mov eax [eax+ecx*4] +
mov ecx [ebp+dwFlags] +
mov [eax+4] ecx +
inc [ebp+arg_4]  +
mov eax [ebp+arg_0] +
cmp [ebp+arg_4] eax +
jb loc_1027C33  +
test edi edi +
jz loc_1027E45  +
inc eax  +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_C] +
jnb loc_1027E41  +
mov eax [esi+20h] +
push 4  +
push [ebp+arg_4]  +
mov [ebp+lpMem] eax +
call sub_101E275  +
test eax eax +
jbe loc_1027D49  +
push 4  +
push [ebp+arg_4]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
jmp loc_1027D4B  +
xor eax eax +
mov [esi+20h] eax +
test eax eax +
jz loc_1027E2E  +
mov ecx [ebp+arg_0] +
shl ecx 2 +
push ecx  +
push [ebp+lpMem]  +
push eax  +
call memcpy  +
mov eax [ebp+arg_0] +
mov edx [esi+20h] +
shl eax 2 +
xor ecx ecx +
add esp 0Ch +
cmp [eax+edx] ecx +
jnz loc_1027E23  +
push [ebp+lpMem]  +
push ecx  +
call ebx  +
push eax  +
call ds:HeapFree  +
push 0Ch  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov ecx [ebp+arg_0] +
mov edx [esi+20h] +
shl ecx 2 +
mov [ecx+edx] eax +
mov eax [esi+20h] +
mov eax [eax+ecx] +
mov [eax+8] edi +
mov eax [edi+44h] +
add eax 7 +
shr eax 3 +
shl eax 3 +
inc [ebp+arg_0]  +
inc [ebp+arg_4]  +
jmp loc_1027DDD  +
cmp dword ptr [edi+50h] 0 +
jz loc_1027DDD  +
mov ecx [edi+44h] +
lea ecx [ecx+eax+7] +
shr ecx 3 +
shl ecx 3 +
cmp ecx [ebp+var_10] +
ja loc_1027DE9  +
inc [ebp+dwFlags]  +
mov eax ecx +
mov [ebp+lpMem] edi +
mov edi [edi+4] +
test edi edi +
jnz loc_1027DC0  +
jmp loc_1027DFD  +
mov ecx [ebp+lpMem] +
test ecx ecx +
jz loc_1027DF4  +
and dword ptr [ecx+4] 0 +
add eax 7 +
shr eax 3 +
shl eax 3 +
mov ecx [ebp+arg_0] +
mov edx [esi+20h] +
shl ecx 2 +
mov edx [edx+ecx-4] +
mov [edx] eax +
mov eax [esi+20h] +
mov eax [eax+ecx-4] +
mov ecx [ebp+dwFlags] +
mov [eax+4] ecx +
test edi edi +
jnz loc_1027D11  +
jmp loc_1027E45  +
push edx  +
push ecx  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+lpMem] +
mov [esi+20h] eax +
jmp loc_1027E41  +
mov eax edi +
mov edi [edi+4] +
push eax  +
call sub_1027709  +
test edi edi +
jnz loc_1027E36  +
mov eax [ebp+arg_0] +
and dword ptr [esi+18h] 0 +
and dword ptr [esi+1Ch] 0 +
mov [esi] eax +
xor eax eax +
inc eax  +
jmp loc_1027E61  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1027E7E  +
xor eax eax +
jmp loc_1027E9A  +
push esi  +
mov esi [edi+8] +
jmp loc_1027E8F  +
mov eax esi +
mov esi [esi+4] +
push eax  +
call sub_1027709  +
test esi esi +
jnz loc_1027E84  +
and [edi+8] esi +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 818h +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
xor ecx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_814] eax +
mov [ebp+var_810] edx +
mov [ebp+dwBytes] ecx +
cmp eax ecx +
jz loc_10280A7  +
cmp edx ecx +
jz loc_10280A7  +
cmp edi ecx +
jz loc_10280A7  +
mov eax [eax+1Ch] +
cmp eax ecx +
jz loc_10280A7  +
cmp [eax+0Ch] ecx +
jz loc_10280A7  +
cmp [eax+18h] ecx +
jz loc_10280A7  +
cmp [eax+1Ch] ecx +
jz loc_10280A7  +
cmp [edi+24h] ecx +
jnz loc_10280A7  +
lea ebx [edi+2Ch] +
push ebx  +
push offset aCached  +
mov esi offset aAffinityDefaul +
push esi  +
push edx  +
call sub_1026FD6  +
test eax eax +
jnz loc_1027F3F  +
mov dword ptr [ebx] 1 +
lea ebx [edi+30h] +
push ebx  +
push offset aPriority  +
push esi  +
push [ebp+var_810]  +
call sub_1027077  +
test eax eax +
jnz loc_1027F5E  +
mov dword ptr [ebx] 2710h +
mov eax [ebp+var_814] +
mov eax [eax+1Ch] +
mov eax [eax+0Ch] +
mov esi [eax+1Ch] +
lea eax [ebp+dwBytes] +
push eax  +
push 0Ch  +
pop ecx  +
mov eax esi +
mul  ecx +
push edx  +
push eax  +
mov [ebp+var_818] esi +
call sub_101D610  +
test eax eax +
jge loc_1027F93  +
push 32h  +
jmp loc_10280A9  +
push [ebp+dwBytes]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [edi+24h] eax +
test eax eax +
jnz loc_1027FB6  +
push 8  +
jmp loc_10280A9  +
and [ebp+var_80C] 0 +
mov [edi+4] esi +
test esi esi +
jbe loc_10280A2  +
and [ebp+dwBytes] 0 +
push [ebp+var_80C]  +
mov eax [ebp+var_814] +
push dword ptr [eax+1Ch]  +
call sub_10223CC  +
test eax eax +
jnz loc_1027FF4  +
push [ebp+var_80C]  +
push offset aAffinityU  +
jmp loc_1027FFA  +
push eax  +
push offset aAffinityS  +
lea eax [ebp+var_804] +
push 400h  +
push eax  +
call sub_1018EA1  +
add esp 10h +
test eax eax +
jl loc_1027F8C  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_810]  +
call sub_1026F1A  +
test eax eax +
jz loc_1028083  +
mov esi [edi+24h] +
add esi [ebp+dwBytes] +
lea eax [ebp+var_804] +
lea ebx [esi+4] +
push ebx  +
push offset aCached  +
push eax  +
push [ebp+var_810]  +
mov dword ptr [esi] 1 +
call sub_1026FD6  +
test eax eax +
jnz loc_102805F  +
mov eax [edi+2Ch] +
mov [ebx] eax +
add esi 8 +
push esi  +
push offset aPriority  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_810]  +
call sub_1027077  +
test eax eax +
jnz loc_1028083  +
mov eax [edi+30h] +
mov [esi] eax +
inc [ebp+var_80C]  +
mov eax [ebp+var_80C] +
add [ebp+dwBytes] 0Ch +
cmp eax [ebp+var_818] +
jb loc_1027FCF  +
xor eax eax +
inc eax  +
jmp loc_10280B1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 46Ch +
mov eax dword_1033F70 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
push 206h  +
mov [ebp+NewFileName] ax +
xor edi edi +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+var_464] edi +
cmp esi edi +
jz loc_102840D  +
cmp [esi+4] edi +
jz loc_102840D  +
mov ebx [esi+28h] +
cmp ebx edi +
jz loc_102840D  +
mov eax [esi+20h] +
mov [ebp+var_46C] eax +
mov eax [esi+0Ch] +
cmp eax edi +
jl loc_102815D  +
cmp [ebp+arg_8] edi +
jz loc_1028169  +
or dword ptr [esi+0Ch] 0FFFFFFFFh +
mov [ebp+var_460] eax +
mov eax [esi+24h] +
cmp eax edi +
jz loc_1028170  +
push eax  +
call sub_1024D5E  +
test eax eax +
jz loc_1028415  +
mov [esi+24h] edi +
jmp loc_1028170  +
mov eax [esi+10h] +
cmp eax 0FFFFFFFFh +
jl loc_102840D  +
inc eax  +
mov [ebp+var_460] eax +
cmp [ebp+arg_4] 0 +
mov edi 104h +
jnz loc_10281D6  +
push edi  +
lea eax [ebp+NewFileName] +
push eax  +
push 501h  +
push dword ptr [esi+4]  +
call sub_101E8C1  +
test eax eax +
jz loc_1028415  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+NewFileName] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102835E  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1028415  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov eax [esi+10h] +
mov [ebp+var_464] eax +
cmp [ebp+var_460] eax +
jz loc_10283EE  +
push edi  +
lea eax [ebp+NewFileName] +
push eax  +
push [ebp+var_460]  +
push 101h  +
push dword ptr [esi+4]  +
call sub_101EC5E  +
test eax eax +
jz loc_1028415  +
lea eax [ebp+NewFileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_102822B  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_1028249  +
mov eax [ebp+var_460] +
inc eax  +
xor edx edx +
mov ecx 2710h +
div  ecx +
mov [ebp+var_460] edx +
cmp edx [ebp+var_464] +
jnz loc_10281EB  +
mov edi [ebp+var_460] +
cmp edi [ebp+var_464] +
jz loc_10283EE  +
mov eax [ebx+14h] +
mov eax [eax+0Ch] +
mov [eax+0Ch] edi +
mov eax [ebx+14h] +
cmp dword ptr [eax+20h] 0 +
jnz loc_1028273  +
push ebx  +
call sub_1025124  +
mov edx [ebp+var_46C] +
test edx edx +
jz loc_10282E3  +
mov eax [edx+14h] +
test eax eax +
jz loc_10282E3  +
mov eax [eax+20h] +
test eax eax +
jz loc_10282E3  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_10282E3  +
mov eax [ebx+14h] +
mov eax [eax+20h] +
test eax eax +
jz loc_10282E3  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_10282E3  +
mov eax [edx+14h] +
mov eax [eax+20h] +
mov eax [eax+0Ch] +
mov edi [eax+18h] +
mov ecx [ebx+14h] +
mov ecx [ecx+20h] +
mov ecx [ecx+0Ch] +
mov [ecx+18h] edi +
mov eax [eax+1Ch] +
mov edi [ebp+var_460] +
mov [ecx+1Ch] eax +
mov eax [edx+14h] +
mov eax [eax+20h] +
mov ecx [ebx+14h] +
mov eax [eax+0Ch] +
mov ecx [ecx+20h] +
mov edx [eax+20h] +
mov ecx [ecx+0Ch] +
mov [ecx+20h] edx +
mov eax [eax+24h] +
mov [ecx+24h] eax +
push ebx  +
call sub_10251C1  +
test eax eax +
jz loc_1028415  +
mov eax [esi+24h] +
mov [esi+0Ch] edi +
test eax eax +
jz loc_102830D  +
push eax  +
call sub_1024D5E  +
test eax eax +
jz loc_1028415  +
and dword ptr [esi+24h] 0 +
push dword ptr [ebx+8]  +
call sub_101E529  +
mov edi eax +
test edi edi +
jz loc_1028415  +
push ebx  +
call sub_1024D5E  +
test eax eax +
jz loc_1028415  +
push 8  +
lea eax [ebp+NewFileName] +
push eax  +
xor ebx ebx +
push edi  +
mov [esi+28h] ebx +
call ds:MoveFileExW  +
push edi  +
push ebx  +
test eax eax +
jnz loc_10283F2  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_1028415  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_10283C6  +
lea eax [ebp+var_464] +
push eax  +
lea eax [ebp+FindFileData.cFileName] +
push offset aRc4u  +
push eax  +
call swscanf  +
add esp 0Ch +
cmp eax 1 +
jnz loc_10283C6  +
mov eax [ebp+var_464] +
cmp eax [esi+10h] +
jz loc_10283C6  +
cmp eax [esi+0Ch] +
jz loc_10283C6  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [esi+4]  +
lea eax [ebp+NewFileName] +
push offset aSS  +
push edi  +
push eax  +
call sub_1018EA1  +
add esp 14h +
test eax eax +
jl loc_10283E2  +
lea eax [ebp+NewFileName] +
push eax  +
call sub_101E5B8  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102835E  +
jmp loc_10281CA  +
push [ebp+hFindFile]  +
call ds:FindClose  +
push 32h  +
jmp loc_102840F  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push esi  +
call sub_1020D5E  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1028417  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101C23D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
mov [ebp+var_4] 1 +
cmp [ebp+lpMem] eax +
jz locret_10284A8  +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
mov [ebp+var_8] eax +
cmp [ebp+arg_4] eax +
jbe loc_1028499  +
push ebx  +
mov ecx [ebp+lpMem] +
lea eax [ecx+eax*4] +
mov ebx [eax] +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1028486  +
push ebx  +
call sub_1027E6D  +
push ebx  +
push 0  +
mov [ebp+var_10] eax +
call edi  +
push eax  +
call esi  +
mov eax [ebp+var_C] +
and dword ptr [eax] 0 +
mov eax [ebp+var_10] +
and [ebp+var_4] eax +
mov eax [ebp+var_8] +
inc eax  +
mov [ebp+var_8] eax +
cmp eax [ebp+arg_4] +
jb loc_102845A  +
cmp [ebp+var_4] 0 +
pop ebx  +
jz loc_10284A3  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_10284C2  +
xor eax eax +
jmp loc_10284FF  +
mov eax [ebx+20h] +
test eax eax +
jz loc_10284D5  +
push dword ptr [ebx]  +
push eax  +
call sub_102842D  +
test eax eax +
jz loc_10284BE  +
mov eax [ebx+24h] +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
test eax eax +
jz loc_10284F2  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
push ebx  +
push 0  +
call edi  +
push eax  +
call esi  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_10285C8  +
cmp [edi+1Ch] ebx +
jz loc_10285C8  +
push 34h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jnz loc_102854C  +
push 8  +
call ds:SetLastError  +
jmp loc_10285C3  +
mov [esi+4] ebx +
mov [esi+24h] ebx +
mov ebx [ebp+arg_4] +
mov dword ptr [esi+2Ch] 1 +
mov dword ptr [esi+30h] 64h +
test ebx ebx +
jz loc_1028573  +
push esi  +
push ebx  +
push edi  +
call sub_1027EA4  +
test eax eax +
jz loc_10285BD  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
push edi  +
call sub_10270E3  +
test eax eax +
jz loc_10285BD  +
push ebx  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_102784B  +
test eax eax +
jz loc_10285D0  +
push esi  +
push edi  +
call sub_1027B33  +
test eax eax +
jz loc_10285BD  +
push esi  +
push [ebp+arg_8]  +
push edi  +
call sub_102723B  +
test eax eax +
jz loc_10285BD  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 0  +
push edi  +
call sub_10280C7  +
test eax eax +
jz loc_10285BD  +
mov [ebp+var_4] ebx +
push esi  +
call sub_10284B1  +
mov eax [ebp+var_4] +
jmp loc_10285D2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1034FD4 +
test eax eax +
jz loc_10285FA  +
push dword_1034FD8  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_1034FDC eax +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+hFile] +
xor ebx ebx +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
push esi  +
cmp edi esi +
jnz loc_1028663  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102885E  +
push 57h  +
call ds:SetLastError  +
jmp loc_102885E  +
push esi  +
push 3  +
push esi  +
push 1  +
push 80000000h  +
push edi  +
call ds:CreateFileW  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10286A9  +
mov esi ds:GetLastError +
push offset aRescloadresiza  +
call esi  +
push eax  +
call sub_10285DE  +
call esi  +
test eax eax +
jz loc_102885E  +
call esi  +
test eax eax +
jnz loc_102885E  +
call esi  +
push eax  +
jmp loc_1028658  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_10286E7  +
push offset aRescloadresi_0  +
mov edi ds:GetLastError +
call edi  +
push eax  +
call sub_10285DE  +
call edi  +
test eax eax +
jz loc_10287F0  +
call edi  +
test eax eax +
jnz loc_10287F0  +
call edi  +
push eax  +
jmp loc_10287EA  +
cmp [ebp+var_4] ebx +
jnz loc_10287D2  +
push 20h  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov ebx eax +
test ebx ebx +
jnz loc_1028707  +
push offset aRescloadresi_1  +
jmp loc_10286BD  +
push [ebp+var_8]  +
push ebx  +
call sub_102CABF  +
test eax eax +
jnz loc_1028724  +
push offset aRescloadresi_2  +
push eax  +
call sub_10285DE  +
jmp loc_10287F0  +
push 28h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_102875C  +
push offset aRescloadresi_3  +
push 8  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10287F0  +
push 8  +
jmp loc_10287EA  +
mov dword ptr [esi] 6 +
mov [esi+4] ebx +
mov eax [ebx+0Ch] +
shl eax 3 +
push eax  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov [esi+8] eax +
test eax eax +
jnz loc_1028785  +
push offset aRescloadresi_4  +
jmp loc_10286BD  +
mov eax [ebx+10h] +
add eax eax +
push eax  +
mov eax [ebx+18h] +
add eax eax +
push eax  +
push [ebp+hFile]  +
call sub_102A846  +
and dword ptr [esi+10h] 0 +
push edi  +
mov [esi+0Ch] eax +
call sub_101E529  +
mov [esi+14h] eax +
test eax eax +
jz loc_102873B  +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
push edi  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_10287C8  +
push offset aRescloadresi_5  +
jmp loc_10286BD  +
cmp [ebp+var_10] 0 +
jz loc_1028862  +
push offset aRescloadresi_6  +
push 18h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10287F0  +
push 18h  +
call ds:SetLastError  +
cmp [ebp+hFile] 0 +
jz loc_10287FF  +
push [ebp+hFile]  +
call ds:CloseHandle  +
mov edi ds:HeapFree +
test esi esi +
jz loc_102884E  +
mov eax [esi+4] +
test eax eax +
jz loc_1028822  +
cmp ebx eax +
jnz loc_1028816  +
xor ebx ebx +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax [esi+8] +
test eax eax +
jz loc_1028835  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax [esi+14h] +
test eax eax +
jz loc_1028842  +
push eax  +
call sub_101CBEF  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
test ebx ebx +
jz loc_102885E  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
xor eax eax +
jmp loc_102887F  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_18] +
mov edx [ebp+var_C] +
push [ebp+hFile]  +
mov [esi+18h] edx +
mov [esi+20h] ecx +
mov [esi+24h] eax +
call ds:CloseHandle  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
or ebx 0FFFFFFFFh +
cmp esi edi +
jz loc_10289A5  +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_10288B8  +
mov eax [esi+14h] +
cmp eax edi +
jz loc_10289A5  +
push 2000h  +
push edi  +
push 40000000h  +
push eax  +
call sub_101DBCD  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_10288E0  +
push offset aInternalError  +
push edi  +
call sub_10285DE  +
jmp loc_10289CF  +
mov edi [esi+4] +
push 20h  +
push edi  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102893A  +
mov eax [edi+0Ch] +
test eax eax +
jbe loc_1028908  +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102893A  +
mov edi [edi+10h] +
test edi edi +
jbe loc_1028920  +
lea eax [edi+edi] +
push eax  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102893A  +
push ebx  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_102893A  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_1028943  +
push offset aInternalError  +
push 0  +
jmp loc_102897D  +
xor edi edi +
cmp [ebp+var_4] edi +
jz loc_1028960  +
push edi  +
push 18h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10289BF  +
push 18h  +
jmp loc_10289B9  +
mov eax [ebp+var_8] +
mov [esi+18h] eax +
lea eax [ebp+LastWriteTime] +
push eax  +
push edi  +
push edi  +
push ebx  +
call ds:GetFileTime  +
test eax eax +
jnz loc_1028984  +
push offset aInternalError  +
push edi  +
call sub_10285DE  +
jmp loc_10289BF  +
mov eax [ebp+LastWriteTime.dwHighDateTime] +
mov ecx [ebp+LastWriteTime.dwLowDateTime] +
push ebx  +
mov [ebp+var_4] eax +
mov [ebp+var_8] ecx +
mov [esi+20h] ecx +
mov [esi+24h] eax +
call ds:CloseHandle  +
xor eax eax +
mov [esi+10h] edi +
inc eax  +
jmp loc_10289D1  +
push edi  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10289CF  +
push 57h  +
call ds:SetLastError  +
cmp ebx 0FFFFFFFFh +
jz loc_10289CF  +
test ebx ebx +
jz loc_10289CF  +
push ebx  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1028A0F  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_1028A0F  +
cmp dword ptr [eax+10h] 0 +
jnz loc_10289FB  +
xor eax eax +
inc eax  +
jmp loc_1028A2C  +
push ecx  +
push eax  +
call sub_102888B  +
test eax eax +
jnz loc_10289F6  +
push eax  +
push eax  +
call sub_10285DE  +
jmp loc_1028A2A  +
push 0  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1028A2A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor ebx ebx +
and [ebp+hKey] ebx +
push ebx  +
push offset aSystemCurren_4  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1028A94  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aCompressedsegm  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1028A94  +
cmp [ebp+Type] 4 +
jnz loc_1028A94  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_1028A94  +
inc ebx  +
cmp [ebp+hKey] 0 +
jz loc_1028AA3  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+hObject] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
xor ebx ebx +
xor esi esi +
mov [ebp+dwMaximumSizeLow] 400000h +
mov [ebp+var_C] ebx +
cmp edi ebx +
jz loc_1028AF6  +
test byte ptr [edi+4] 40h +
jz loc_1028ADD  +
mov eax [edi+20h] +
mov [ebp+dwMaximumSizeLow] eax +
call sub_1028A35  +
test eax eax +
jnz loc_1028AEF  +
test dword ptr [edi+4] 400h +
jz loc_1028AF6  +
mov [ebp+var_C] 1 +
cmp [ebp+lpFileName] ebx +
jz loc_1028C8C  +
cmp [ebp+dwMaximumSizeLow] 100000h +
jb loc_1028C8C  +
cmp [ebp+var_C] ebx +
jnz loc_1028B52  +
push 80h  +
push 1  +
push 0C0000000h  +
push [ebp+lpFileName]  +
call sub_101DBCD  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_1028CC8  +
push 1060h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jnz loc_1028B90  +
push 8  +
jmp loc_1028C8E  +
push ebx  +
push [ebp+dwMaximumSizeLow]  +
push ebx  +
push 4  +
push ebx  +
push 0FFFFFFFFh  +
call ds:CreateFileMappingW  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_1028CB4  +
push ebx  +
push ebx  +
push ebx  +
push 6  +
push eax  +
call ds:MapViewOfFile  +
mov esi eax +
cmp esi ebx +
jz loc_1028CB4  +
push [ebp+dwMaximumSizeLow]  +
push ebx  +
push esi  +
call memset  +
add esp 0Ch +
mov eax [ebp+arg_8] +
mov [esi+0Ch] eax +
mov eax [ebp+dwMaximumSizeLow] +
mov [esi+20h] eax +
xor eax eax +
mov dword ptr [esi] 43534552h +
mov dword ptr [esi+4] 474553h +
mov dword ptr [esi+8] 1 +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+1Ch] ebx +
mov [esi+18h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
lea edi [esi+2Ch] +
stos   +
stos   +
stos   +
stos   +
or eax 0FFFFFFFFh +
lea edi [esi+3Ch] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+var_C] +
mov [esi+4Ch] eax +
cmp eax ebx +
jnz loc_1028C42  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov edi 1060h +
push edi  +
push esi  +
push [ebp+hObject]  +
mov [ebp+NumberOfBytesWritten] ebx +
call ds:WriteFile  +
test eax eax +
jz loc_1028C94  +
cmp [ebp+NumberOfBytesWritten] edi +
jz loc_1028C0B  +
push 18h  +
jmp loc_1028C8E  +
push [ebp+hObject]  +
call ds:FlushFileBuffers  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push ebx  +
push [ebp+arg_10]  +
push [ebp+dwMaximumSizeLow]  +
push [ebp+arg_4]  +
push [ebp+lpFileName]  +
call sub_10207D8  +
mov edi eax +
jmp loc_1028C88  +
push 18h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_1028B4B  +
push [ebp+lpFileName]  +
mov dword ptr [edi] 3 +
call sub_101E529  +
mov [edi+0Ch] eax +
cmp eax ebx +
jz loc_1028B4B  +
mov eax [ebp+hObject] +
mov [edi+10h] esi +
add esi 1060h +
mov [edi+4] eax +
mov [edi+14h] esi +
mov eax edi +
jmp loc_1028CCA  +
push 57h  +
call ds:SetLastError  +
cmp esi ebx +
jz loc_1028CB4  +
push esi  +
cmp [ebp+var_C] ebx +
jz loc_1028CA6  +
call ds:UnmapViewOfFile  +
jmp loc_1028CB4  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1028CC8  +
cmp [ebp+hObject] ebx +
jz loc_1028CC8  +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+hObject] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1028F57  +
mov eax [esi+10h] +
cmp eax edi +
jz loc_1028F57  +
cmp [eax+4Ch] edi +
jnz loc_1028D2B  +
push edi  +
push eax  +
call ds:FlushViewOfFile  +
jmp loc_1028F61  +
mov ecx [esi+0Ch] +
cmp ecx edi +
jz loc_1028F57  +
mov ebx [eax+20h] +
sub ebx 1060h +
mov [ebp+var_18] edi +
mov [ebp+dwFlagsAndAttributes] 80000000h +
cmp dword_1034FB4 edi +
jz loc_1028D58  +
mov [ebp+dwFlagsAndAttributes] 82000000h +
cmp ebx edi +
jnz loc_1028DAB  +
mov ebx [esi+8] +
cmp ebx edi +
jz loc_1028D68  +
cmp ebx 0FFFFFFFFh +
jnz loc_1028D82  +
push [ebp+dwFlagsAndAttributes]  +
push edi  +
push 40000000h  +
push ecx  +
call sub_101DBCD  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_1028F5F  +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1060h  +
push dword ptr [esi+10h]  +
push ebx  +
call ds:WriteFile  +
mov edi eax +
cmp ebx [esi+8] +
jz loc_1028DA4  +
push ebx  +
call ds:CloseHandle  +
mov eax edi +
jmp loc_1028F61  +
push 5  +
push offset loc_1028CD6  +
push edi  +
push 10000h  +
call sub_102FF40  +
mov [ebp+var_24] eax +
cmp eax edi +
jz loc_1028F52  +
push edi  +
push ebx  +
push edi  +
push 4  +
push edi  +
push 0FFFFFFFFh  +
call ds:CreateFileMappingW  +
mov [ebp+var_28] eax +
cmp eax edi +
jz loc_1028F44  +
push edi  +
push edi  +
push edi  +
push 6  +
push eax  +
call ds:MapViewOfFile  +
mov [ebp+lpBaseAddress] eax +
cmp eax edi +
jz loc_1028F3B  +
mov [ebp+var_10] eax +
mov eax [esi+14h] +
mov [ebp+var_C] eax +
mov eax [esi+10h] +
mov edi [eax+20h] +
sub edi 1060h +
mov dword ptr [eax+54h] 0 +
mov eax [esi+10h] +
mov [ebp+var_4] ebx +
mov dword ptr [eax+50h] 10000h +
jz loc_1028EBD  +
mov [ebp+var_8] 5Ch +
cmp [ebp+var_8] 105Ch +
jnb loc_1028F30  +
cmp ebx [ebp+var_4] +
jb loc_1028F30  +
mov eax [esi+10h] +
inc dword ptr [eax+54h]  +
mov edx [ebp+var_8] +
mov ecx [esi+10h] +
add [ebp+var_8] 4 +
mov eax ebx +
sub eax [ebp+var_4] +
mov [edx+ecx] eax +
mov eax 10000h +
mov [ebp+hObject] eax +
cmp edi eax +
ja loc_1028E6B  +
mov [ebp+hObject] edi +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+hObject]  +
push [ebp+var_C]  +
push [ebp+var_4]  +
push [ebp+var_10]  +
push [ebp+var_24]  +
call sub_102FCF0  +
test eax eax +
jle loc_1028F30  +
cmp eax [ebp+hObject] +
jb loc_1028EA5  +
push [ebp+hObject]  +
push [ebp+var_C]  +
push [ebp+var_10]  +
call memcpy  +
mov eax [ebp+hObject] +
add esp 0Ch +
mov ecx [ebp+hObject] +
add [ebp+var_C] ecx +
sub [ebp+var_4] eax +
add [ebp+var_10] eax +
sub edi ecx +
test edi edi +
ja loc_1028E2E  +
jmp loc_1028EC0  +
mov eax [ebp+hObject] +
mov ecx [esi+10h] +
mov [ecx+58h] eax +
mov eax [esi+8] +
test eax eax +
jz loc_1028ED2  +
cmp eax 0FFFFFFFFh +
jnz loc_1028EE4  +
push [ebp+dwFlagsAndAttributes]  +
push 0  +
push 40000000h  +
push dword ptr [esi+0Ch]  +
call sub_101DBCD  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_1028F30  +
mov edi ds:WriteFile +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1060h  +
push dword ptr [esi+10h]  +
push [ebp+hObject]  +
call edi  +
mov [ebp+var_18] eax +
test eax eax +
jz loc_1028F21  +
sub ebx [ebp+var_4] +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
push [ebp+lpBaseAddress]  +
push [ebp+hObject]  +
call edi  +
mov [ebp+var_18] eax +
mov eax [ebp+hObject] +
cmp eax [esi+8] +
jz loc_1028F30  +
push eax  +
call ds:CloseHandle  +
push [ebp+lpBaseAddress]  +
call ds:UnmapViewOfFile  +
xor edi edi +
push [ebp+var_28]  +
call ds:CloseHandle  +
push offset loc_102D29D  +
push edi  +
push [ebp+var_24]  +
call sub_1030000  +
mov eax [ebp+var_18] +
jmp loc_1028F61  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1029016  +
cmp [ebp+arg_4] 0 +
jz loc_1029016  +
mov edx [ebp+arg_8] +
cmp edx 1 +
jb loc_1029016  +
test byte ptr [edi] 2 +
jnz loc_1028F9F  +
push 32h  +
jmp loc_1029018  +
mov ecx [edi+10h] +
mov esi [ecx+1Ch] +
add esi 7 +
shr esi 3 +
shl esi 3 +
lea eax [esi+0FFFh] +
shr eax 0Ch +
shl eax 0Ch +
mov ebx eax +
sub ebx esi +
cmp ebx 0C8h +
jnb loc_1028FC8  +
mov esi eax +
mov eax [ecx+20h] +
lea ebx [esi+edx] +
sub eax 1060h +
cmp ebx eax +
jb loc_1028FDB  +
push 70h  +
jmp loc_1029018  +
mov eax [edi+14h] +
test eax eax +
jz loc_1028FF1  +
push edx  +
push [ebp+arg_4]  +
add eax esi +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax [edi+10h] +
mov ecx esi +
sub ecx [eax+1Ch] +
add [eax+18h] ecx +
mov eax [edi+10h] +
inc ebx  +
mov [eax+1Ch] ebx +
mov eax [edi+10h] +
inc dword ptr [eax+14h]  +
mov edi [edi+10h] +
inc dword ptr [edi+10h]  +
xchg eax [ebp+arg_4] +
mov eax esi +
jmp loc_1029021  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+hObject] edi +
cmp eax edi +
jz loc_1029119  +
cmp [ebp+lpFileName] edi +
jz loc_1029119  +
test byte ptr [eax] 2 +
jnz loc_1029060  +
push 32h  +
call ds:SetLastError  +
jmp loc_10290AB  +
push edi  +
push edi  +
push 3  +
push edi  +
push 1  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_10290AB  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_1029098  +
cmp [ebp+var_8] edi +
jz loc_10290BE  +
push 18h  +
call ds:SetLastError  +
mov esi ds:CloseHandle +
push ebx  +
call esi  +
cmp [ebp+hObject] edi +
jz loc_10290AB  +
push [ebp+hObject]  +
call esi  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_10290B4  +
mov [eax] edi +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push edi  +
push edi  +
push edi  +
push 2  +
push edi  +
push ebx  +
call ds:CreateFileMappingW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_1029098  +
push edi  +
push edi  +
push edi  +
push 4  +
push eax  +
call ds:MapViewOfFile  +
mov esi eax +
cmp esi edi +
jz loc_1029098  +
push [ebp+var_C]  +
push esi  +
push [ebp+arg_0]  +
call sub_1028F6D  +
push esi  +
mov [ebp+lpFileName] eax +
call ds:UnmapViewOfFile  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push ebx  +
call esi  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1029114  +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+lpFileName] +
jmp loc_10290B7  +
push 57h  +
jmp loc_1029058  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+hObject] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
cmp ebx edi +
jz loc_102929E  +
cmp [ebp+lpBaseAddress] edi +
jz loc_102929E  +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
lea eax [edx+ecx] +
cmp eax edx +
jb loc_102929E  +
cmp eax ecx +
jb loc_102929E  +
mov ecx [ebx+10h] +
cmp eax [ecx+1Ch] +
jnb loc_102929E  +
push edi  +
push edi  +
push 3  +
push edi  +
push 1  +
push 80000000h  +
push [ebp+lpBaseAddress]  +
call ds:CreateFileW  +
mov esi eax +
mov [ebp+arg_0] esi +
cmp esi 0FFFFFFFFh +
jz loc_10291C2  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_10291AF  +
cmp [ebp+var_10] edi +
jz loc_10291E2  +
push 18h  +
call ds:SetLastError  +
push esi  +
mov esi ds:CloseHandle +
call esi  +
cmp [ebp+hObject] edi +
jz loc_10291C2  +
push [ebp+hObject]  +
call esi  +
mov eax [ebp+arg_10] +
cmp eax edi +
jz loc_10291CB  +
mov [eax] edi +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jz loc_10292AB  +
call esi  +
jmp loc_10292B0  +
push edi  +
push edi  +
push edi  +
push 2  +
push edi  +
push esi  +
call ds:CreateFileMappingW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_10291AF  +
push edi  +
push edi  +
push edi  +
push 4  +
push eax  +
call ds:MapViewOfFile  +
mov [ebp+lpBaseAddress] eax +
cmp eax edi +
jz loc_10291AF  +
mov esi [ebx+14h] +
add esi [ebp+arg_4] +
lea eax [ebp+var_8] +
push eax  +
push esi  +
mov [ebp+arg_4] 1 +
call sub_101CF54  +
mov ebx eax +
cmp ebx edi +
jz loc_102926C  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_8] +
add eax ebx +
add ecx esi +
cmp eax ecx +
ja loc_102926C  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpBaseAddress]  +
call sub_101CF54  +
cmp eax edi +
jz loc_102926C  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_8] +
jnz loc_102926C  +
mov edx [ebp+var_14] +
mov edi [ebp+lpBaseAddress] +
add ecx eax +
add edx edi +
cmp ecx edx +
ja loc_102926C  +
mov ecx [ebp+var_8] +
mov edi eax +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_1029280  +
and [ebp+arg_4] eax +
jmp loc_1029280  +
mov ecx [ebp+arg_8] +
cmp [ebp+var_14] ecx +
jnz loc_1029280  +
mov edi [ebp+lpBaseAddress] +
xor eax eax +
cmps   +
jnz loc_1029280  +
and [ebp+arg_4] eax +
push [ebp+lpBaseAddress]  +
call ds:UnmapViewOfFile  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+arg_0]  +
call esi  +
mov eax [ebp+arg_4] +
jmp loc_10292B0  +
push 57h  +
call ds:SetLastError  +
jmp loc_10291C2  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
cmp dword ptr [eax] 53534552h +
jnz loc_1029310  +
cmp dword ptr [eax+4] 434F54h +
jnz loc_1029310  +
cmp dword ptr [eax+8] 0 +
jnz loc_1029310  +
test esi esi +
jbe loc_10292DC  +
cmp esi 40h +
jb loc_1029310  +
mov ecx [eax+10h] +
cmp ecx 1 +
jb loc_1029308  +
mov edx [eax+14h] +
cmp edx ecx +
ja loc_1029308  +
cmp [eax+30h] edx +
jge loc_1029310  +
cmp [eax+34h] edx +
jge loc_1029310  +
cmp [eax+38h] edx +
jge loc_1029310  +
test esi esi +
jz loc_102930C  +
imul ecx ecx +
add ecx 40h +
cmp esi ecx +
jnb loc_102930C  +
push 18h  +
jmp loc_1029312  +
xor eax eax +
inc eax  +
retn   +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push edi  +
test ebx ebx +
jnz loc_1029338  +
push 57h  +
call ds:SetLastError  +
jmp loc_1029394  +
push 1Ch  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1029394  +
push esi  +
mov esi [ebp+0Ch] +
mov eax ebx +
call sub_10292BC  +
pop esi  +
test eax eax +
jz loc_1029384  +
xor eax eax +
mov [edi+0Ch] ebx +
cmp [ebx+10h] eax +
jbe loc_1029371  +
add ebx 40h +
mov [edi+10h] ebx +
jmp loc_1029374  +
mov [edi+10h] eax +
mov [edi+14h] eax +
mov eax [ebp+10h] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102937E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
cmp [ebp+lpFileName] esi +
jnz loc_10293C6  +
push 57h  +
call ds:SetLastError  +
jmp loc_10294DC  +
push esi  +
push esi  +
push 3  +
push esi  +
push 1  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_102946F  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_102946F  +
cmp [ebp+var_8] esi +
jz loc_1029405  +
push 18h  +
call ds:SetLastError  +
jmp loc_102946F  +
push 40h  +
push [ebp+hFile]  +
call sub_102A7D0  +
mov ebx eax +
cmp ebx esi +
jz loc_102946F  +
mov esi [ebp+var_C] +
call sub_10292BC  +
test eax eax +
jz loc_102946D  +
push 1Ch  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102946D  +
mov dword ptr [edi] 6 +
mov [edi+0Ch] ebx +
mov ecx [ebx+10h] +
mov eax [ebx+14h] +
imul ecx ecx +
imul eax eax +
push ecx  +
push eax  +
push [ebp+hFile]  +
call sub_102A846  +
mov [edi+10h] eax +
test eax eax +
jz loc_102946D  +
push [ebp+lpFileName]  +
call sub_101E529  +
mov [edi+18h] eax +
test eax eax +
jnz loc_10294E0  +
xor esi esi +
cmp [ebp+hFile] esi +
jz loc_102947D  +
push [ebp+hFile]  +
call ds:CloseHandle  +
cmp edi esi +
mov esi ds:HeapFree +
jz loc_10294CC  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_10294A0  +
cmp ebx eax +
jnz loc_1029494  +
xor ebx ebx +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov eax [edi+10h] +
test eax eax +
jz loc_10294B3  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov eax [edi+18h] +
test eax eax +
jz loc_10294C0  +
push eax  +
call sub_101CBEF  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
test ebx ebx +
jz loc_10294DC  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
xor eax eax +
jmp loc_10294F1  +
mov eax [ebp+arg_4] +
push [ebp+hFile]  +
mov [edi+14h] eax +
call ds:CloseHandle  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+lpFileName] edi +
jz loc_102956C  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jz loc_102956C  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_102956C  +
push edi  +
push edi  +
push 40000000h  +
push [ebp+lpFileName]  +
call sub_101DBCD  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1029574  +
push 40h  +
push esi  +
push edi  +
call sub_102A8CC  +
test eax eax +
jz loc_1029574  +
mov eax [esi+10h] +
test eax eax +
jbe loc_1029555  +
imul eax eax +
push eax  +
push dword ptr [ebx+10h]  +
push edi  +
call sub_102A8CC  +
test eax eax +
jz loc_1029574  +
push edi  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_1029574  +
push edi  +
call ds:CloseHandle  +
xor eax eax +
inc eax  +
jmp loc_1029586  +
push 57h  +
call ds:SetLastError  +
test edi edi +
jz loc_1029584  +
cmp edi 0FFFFFFFFh +
jz loc_1029584  +
push edi  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10295C5  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_10295C5  +
test byte ptr [eax] 1 +
jz loc_10295B5  +
push 0  +
push ecx  +
call ds:FlushViewOfFile  +
jmp loc_10295CF  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_10295CD  +
push eax  +
push ecx  +
call sub_10294FD  +
jmp loc_10295CF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
test ebx ebx +
jz loc_1029670  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_1029670  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_1029670  +
mov edi [eax+30h] +
mov eax [eax+14h] +
cmp edi eax +
jge loc_1029670  +
mov edx [ebp+arg_4] +
or edx [ebp+arg_8] +
jnz loc_1029617  +
mov edx [ebp+arg_C] +
or edx [ebp+arg_10] +
jz loc_1029670  +
test edi edi +
jl loc_1029678  +
push esi  +
mov esi edi +
imul esi esi +
add esi ecx +
mov [ebp+arg_0] eax +
jz loc_102966A  +
cmp [ebp+arg_0] 0 +
jz loc_102966A  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1020570  +
test eax eax +
jge loc_1029641  +
mov edi [esi+1Ch] +
jmp loc_1029646  +
jle loc_1029667  +
mov edi [esi+24h] +
test edi edi +
jl loc_102965C  +
mov eax [ebx+0Ch] +
cmp edi [eax+14h] +
jge loc_102965C  +
mov esi edi +
imul esi esi +
add esi [ebx+10h] +
jmp loc_102965E  +
xor esi esi +
dec [ebp+arg_0]  +
test esi esi +
jnz loc_1029628  +
jmp loc_102966A  +
mov [ebp+var_4] edi +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_102967B  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
imul edi edi +
add edi [eax+10h] +
test ebx ebx +
jl loc_10296EC  +
push esi  +
mov eax [ebp+arg_0] +
mov esi ebx +
imul esi esi +
add esi [eax+10h] +
push esi  +
push edi  +
call sub_1020570  +
test eax eax +
jz loc_10296DF  +
jge loc_10296C8  +
mov ebx [esi+1Ch] +
test ebx ebx +
jge loc_10296A1  +
mov eax [ebp+arg_8] +
mov [esi+1Ch] eax +
jmp loc_10296D9  +
test eax eax +
jle loc_10296D9  +
mov ebx [esi+24h] +
test ebx ebx +
jge loc_10296A1  +
mov eax [ebp+arg_8] +
mov [esi+24h] eax +
test ebx ebx +
jge loc_10296A1  +
jmp loc_10296EB  +
mov eax [esi+20h] +
mov [edi+20h] eax +
mov eax [ebp+arg_8] +
mov [esi+20h] eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_10297A9  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10297A9  +
mov ecx [esi] +
test cl 4 +
jz loc_1029730  +
test cl 2 +
jz loc_1029730  +
mov edi [eax+10h] +
lea eax [edi+edi] +
mov [ebp+var_4] eax +
cmp eax edi +
ja loc_1029734  +
push 32h  +
jmp loc_10297AB  +
mov ecx [esi+10h] +
push 30h  +
push eax  +
mov [ebp+lpMem] ecx +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_1029767  +
push 30h  +
push [ebp+var_4]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
jmp loc_102976B  +
and [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_1029775  +
push 8  +
jmp loc_10297AB  +
imul edi edi +
push edi  +
push [ebp+lpMem]  +
push [ebp+arg_0]  +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add esp 0Ch +
push [ebp+lpMem]  +
mov [esi+10h] eax +
mov eax [esi+0Ch] +
push 0  +
mov [eax+10h] ecx +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
inc eax  +
jmp loc_10297B3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_10297D8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_102984F  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_10297E3  +
push 0Dh  +
jmp loc_10297CE  +
mov eax [ebx] +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
push ecx  +
test al 1 +
jz loc_102981D  +
call ds:UnmapViewOfFile  +
mov eax [ebx+4] +
test eax eax +
jz loc_102980C  +
push eax  +
call ds:CloseHandle  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_1029837  +
push eax  +
call ds:CloseHandle  +
jmp loc_1029837  +
push 0  +
test al 2 +
jz loc_1029832  +
call edi  +
push eax  +
call esi  +
mov eax [ebx+10h] +
test eax eax +
jz loc_1029837  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
push 1Ch  +
pop ecx  +
mov eax ebx +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_102983C  +
push ebx  +
push ecx  +
call edi  +
push eax  +
call esi  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_10298C3  +
cmp dword ptr [ebx+10h] 0 +
jz loc_10298C3  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10295D8  +
mov edi [ebp+arg_18] +
and edi 1 +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_10298BE  +
mov esi [ebp+arg_0] +
mov eax [ebx+10h] +
imul esi esi +
add eax esi +
mov ecx [eax+10h] +
cmp ecx [ebp+arg_14] +
jnz loc_10298B0  +
push [ebp+arg_1C]  +
push edi  +
push dword ptr [eax+28h]  +
call sub_101C8D5  +
test eax eax +
jnz loc_10298BE  +
mov eax [ebx+10h] +
mov esi [eax+esi+20h] +
mov [ebp+arg_0] esi +
test esi esi +
jge loc_102988D  +
mov eax [ebp+arg_0] +
jmp loc_10298E1  +
push 0  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10298DE  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_10295D8  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
cmp ebx ecx +
jz loc_1029A42  +
cmp [ebx+10h] ecx +
jz loc_1029A42  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_1029945  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_1029A42  +
cmp [ebp+arg_14] ecx +
jz loc_1029A42  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_1029963  +
cmp eax 100000h +
jnz loc_1029A42  +
cmp [ebp+arg_1C] ecx +
jz loc_1029A42  +
push 2  +
push 1  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1029859  +
test eax eax +
jl loc_10299C8  +
imul eax eax +
add eax [ebx+10h] +
mov ecx [eax+18h] +
cmp ecx [ebp+arg_18] +
jnz loc_10299A7  +
mov ecx [ebp+arg_1C] +
cmp [eax+14h] ecx +
jnz loc_10299A7  +
xor eax eax +
inc eax  +
jmp loc_1029A5E  +
push offset aCanTRestoreThe  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1029A5C  +
push 32h  +
jmp loc_1029A56  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10298ED  +
test eax eax +
jl loc_1029A05  +
mov ecx [ebx+10h] +
mov edx [ebp+arg_14] +
imul eax eax +
add eax ecx +
cmp [eax+10h] edx +
jnz loc_10299FE  +
mov edx [eax+18h] +
cmp edx [ebp+arg_18] +
jnz loc_10299FE  +
mov edx [ebp+arg_1C] +
cmp [eax+14h] edx +
jz loc_1029A13  +
mov eax [eax+20h] +
test eax eax +
jge loc_10299E1  +
push offset aEntryWithSpeci  +
push 0  +
call sub_10285DE  +
jmp loc_1029A5C  +
and dword ptr [eax+28h] 0FFFFFFFEh +
mov ecx [ebx+14h] +
mov eax [eax+14h] +
mov edx [ecx+10h] +
cmp [edx+18h] eax +
jb loc_102999F  +
mov ecx edx +
sub [ecx+18h] eax +
mov eax [ebx+14h] +
mov eax [eax+10h] +
mov ecx [ebx+0Ch] +
mov eax [eax+18h] +
mov [ecx+20h] eax +
jmp loc_102999F  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1029A5C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
xor eax eax +
inc eax  +
push esi  +
push edi  +
mov [ebp+var_4] eax +
test ebx ebx +
jz loc_1029AFA  +
mov ecx [ebp+arg_4] +
or ecx [ebp+arg_8] +
jnz loc_1029A90  +
mov ecx [ebp+arg_C] +
or ecx [ebp+arg_10] +
jz loc_1029AFA  +
cmp [ebp+arg_14] 0 +
jz loc_1029AFA  +
push 2  +
push eax  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1029859  +
test eax eax +
jge loc_1029AB8  +
and [ebp+var_4] 0 +
jmp loc_1029AF5  +
imul eax eax +
add eax [ebx+10h] +
or dword ptr [eax+28h] 1 +
mov eax [eax+14h] +
mov ecx [ebx+14h] +
mov ecx [ecx+10h] +
add [ecx+18h] eax +
mov eax [ebx+14h] +
mov eax [eax+10h] +
mov eax [eax+18h] +
mov ecx [ebx+0Ch] +
mov [ecx+20h] eax +
mov eax [ebx+14h] +
mov eax [eax+10h] +
inc dword ptr [eax+10h]  +
mov eax [ebx+14h] +
mov eax [eax+10h] +
mov ecx [ebx+0Ch] +
mov eax [eax+10h] +
mov [ecx+18h] eax +
mov eax [ebp+var_4] +
jmp loc_1029AFC  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ecx ecx +
push edi  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
cmp esi ecx +
jz loc_1029C6C  +
mov eax [esi+0Ch] +
cmp eax ecx +
jz loc_1029C6C  +
cmp [esi+10h] ecx +
jz loc_1029C6C  +
mov edi [ebp+arg_8] +
cmp edi ecx +
jz loc_1029C6C  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jl loc_1029C6C  +
cmp ebx [eax+14h] +
jg loc_1029C6C  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1029C74  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_1029C74  +
push [ebp+var_4]  +
push ebx  +
jmp loc_1029BD7  +
mov eax [ebp+arg_4] +
mov ecx [esi+10h] +
imul eax eax +
add eax ecx +
mov ecx [eax+1Ch] +
mov ebx [eax+24h] +
mov eax [esi+0Ch] +
mov eax [eax+14h] +
cmp ecx eax +
jge loc_1029BFA  +
cmp ebx eax +
jge loc_1029BFA  +
test ecx ecx +
jl loc_1029BBC  +
push [ebp+var_4]  +
push ecx  +
call sub_1027744  +
test eax eax +
jz loc_1029C74  +
test ebx ebx +
jl loc_1029BD1  +
push [ebp+var_4]  +
push ebx  +
call sub_1027744  +
test eax eax +
jz loc_1029C74  +
push [ebp+var_8]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_1029C74  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_1029B88  +
or [ebp+arg_4] 0FFFFFFFFh +
jmp loc_1029C44  +
push 0Dh  +
jmp loc_1029C6E  +
mov edx [ebp+arg_4] +
mov ecx [esi+10h] +
mov eax edx +
imul eax eax +
add eax ecx +
mov ecx [eax+1Ch] +
mov ebx [eax+24h] +
lea eax [edi+edx*8] +
test ecx ecx +
jl loc_1029C28  +
lea ecx [edi+ecx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax] ecx +
jmp loc_1029C2B  +
and dword ptr [eax] 0 +
test ebx ebx +
jl loc_1029C40  +
lea ecx [edi+ebx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax+4] ecx +
jmp loc_1029C44  +
and dword ptr [eax+4] 0 +
push [ebp+var_8]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_1029BFE  +
mov eax [ebp+arg_4] +
test eax eax +
jl loc_1029C74  +
lea eax [edi+eax*8] +
mov ecx [eax+4] +
mov eax [eax] +
lea eax [ecx+eax+1] +
mov [ebp+var_C] eax +
jmp loc_1029C74  +
push 57h  +
call ds:SetLastError  +
push [ebp+var_8]  +
call sub_1022B7C  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+10h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+1Ch] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+24h] edx +
jge loc_1029CD7  +
or dword ptr [eax+1Ch] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+24h] eax +
lea eax [ecx+eax*8] +
mov [eax] edx +
mov eax [eax+4] +
inc eax  +
mov [ecx+edi*8+4] eax +
jmp loc_1029D26  +
mov edx [ebx+10h] +
mov ecx edi +
mov edi [esi+24h] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+24h] 0 +
jge loc_1029CDA  +
mov edx [ebx+10h] +
imul ecx ecx +
or dword ptr [ecx+edx+24h] 0FFFFFFFFh +
mov ecx [eax+1Ch] +
or dword ptr [eax+1Ch] 0FFFFFFFFh +
mov eax [esi+1Ch] +
test eax eax +
jge loc_1029D0A  +
mov [esi+1Ch] ecx +
jmp loc_1029D16  +
test ecx ecx +
jl loc_1029D16  +
push ecx  +
push eax  +
push ebx  +
call sub_1029686  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+24h] eax +
call sub_1029B08  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+10h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+24h] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+1Ch] edx +
jge loc_1029D77  +
or dword ptr [eax+24h] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+1Ch] eax +
lea eax [ecx+eax*8] +
mov [eax+4] edx +
mov eax [eax] +
inc eax  +
mov [ecx+edi*8] eax +
jmp loc_1029DC6  +
mov edx [ebx+10h] +
mov ecx edi +
mov edi [esi+1Ch] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+1Ch] 0 +
jge loc_1029D7A  +
mov edx [ebx+10h] +
imul ecx ecx +
or dword ptr [ecx+edx+1Ch] 0FFFFFFFFh +
mov ecx [eax+24h] +
or dword ptr [eax+24h] 0FFFFFFFFh +
mov eax [esi+24h] +
test eax eax +
jge loc_1029DAA  +
mov [esi+24h] ecx +
jmp loc_1029DB6  +
test ecx ecx +
jl loc_1029DB6  +
push ecx  +
push eax  +
push ebx  +
call sub_1029686  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+1Ch] eax +
call sub_1029B08  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
push 1Ch  +
push 8  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov edi eax +
mov [ebp+var_4] edi +
test edi edi +
jz loc_1029E66  +
push 40h  +
push 8  +
call ebx  +
push eax  +
call esi  +
mov [edi+0Ch] eax +
test eax eax +
jz loc_1029E5E  +
mov edx [ebp+dwBytes] +
push 10h  +
pop ecx  +
mov edi eax +
lea eax [ebp+dwBytes] +
push eax  +
mov esi edx +
push 30h  +
movs   +
mov eax [edx+10h] +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_1029E5E  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov ecx [ebp+var_4] +
mov [ecx+10h] eax +
test eax eax +
jz loc_1029E5E  +
cmp [ebp+arg_4] 0 +
jz loc_1029E6A  +
push [ebp+arg_4]  +
call sub_101E529  +
mov ecx [ebp+var_4] +
mov [ecx+18h] eax +
test eax eax +
jnz loc_1029E72  +
push [ebp+var_4]  +
call sub_10297BF  +
xor eax eax +
jmp loc_1029E78  +
mov eax ecx +
and dword ptr [eax+18h] 0 +
jmp loc_1029E74  +
mov eax ecx +
or dword ptr [eax+8] 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
test ecx ecx +
jz loc_1029ECE  +
cmp [ebp+lpFileName] 0 +
jz loc_1029ECE  +
mov eax [ecx+10h] +
imul eax eax +
add eax 40h +
jz loc_1029ED6  +
lea edx [ebp+var_4] +
push edx  +
push offset loc_1029320  +
push [ebp+arg_8]  +
push eax  +
push 40h  +
push ecx  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101DF19  +
test eax eax +
jz loc_1029ED6  +
mov ecx [ebp+var_4] +
or dword ptr [eax+8] 0FFFFFFFFh +
mov [eax+4] ecx +
jmp locret_1029ED8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push esi  +
xor edx edx +
push edi  +
xor eax eax +
xor edi edi +
mov [ebp+var_4] edx +
cmp [ebp+lpFileName] edx +
jnz loc_1029F06  +
push 57h  +
call ds:SetLastError  +
jmp loc_1029F5C  +
mov ecx [ebp+arg_8] +
dec ecx  +
jz loc_1029F29  +
dec ecx  +
dec ecx  +
jz loc_1029F24  +
sub ecx 3 +
jnz loc_1029EFC  +
push ebx  +
push [ebp+lpFileName]  +
call sub_102939D  +
test eax eax +
jz loc_1029F5C  +
jmp loc_1029F6F  +
xor edi edi +
inc edi  +
mov eax edi +
mov esi offset loc_1029320 +
cmp [ebp+lpName] edx +
jz loc_1029F41  +
push esi  +
push eax  +
push [ebp+lpName]  +
call sub_101C96B  +
test eax eax +
jnz loc_1029F6C  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push edi  +
push 0  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101E505  +
test eax eax +
jnz loc_1029F60  +
xor eax eax +
jmp loc_1029F6F  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
mov [eax+14h] ebx +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 64h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov esi 3E8h +
cmp eax edi +
jz loc_1029FA7  +
test byte ptr [eax+4] 20h +
jz loc_1029FA7  +
mov esi [eax+1Ch] +
cmp esi 1 +
jb loc_102A05A  +
cmp [ebp+arg_10] edi +
jz loc_102A05A  +
cmp [ebp+lpFileName] edi +
jz loc_1029FCD  +
lea eax [ebp+FileInformation] +
push eax  +
push edi  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_1029FCD  +
mov ebx [ebp+var_C] +
mov edi [ebp+var_10] +
mov eax [ebp+arg_10] +
mov eax [eax+10h] +
xor ecx ecx +
mov [ebp+Buffer] 53534552h +
mov [ebp+var_60] 434F54h +
mov [ebp+var_5C] ecx +
mov edx [eax+0Ch] +
mov [ebp+var_58] edx +
mov [ebp+var_54] esi +
mov [ebp+var_50] ecx +
mov edx [eax+10h] +
mov [ebp+var_4C] edx +
mov edx [eax+1Ch] +
mov [ebp+var_48] edx +
mov [ebp+var_44] ecx +
mov eax [eax+20h] +
or [ebp+var_34] 0FFFFFFFFh +
or [ebp+var_30] 0FFFFFFFFh +
or [ebp+var_2C] 0FFFFFFFFh +
mov [ebp+var_40] eax +
mov eax [ebp+arg_8] +
dec eax  +
mov [ebp+var_3C] edi +
mov [ebp+var_38] ebx +
jz loc_102A036  +
dec eax  +
dec eax  +
jz loc_102A036  +
sub eax 3 +
jnz loc_102A05A  +
push [ebp+lpFileName]  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1029DD4  +
jmp loc_102A04E  +
xor eax eax +
cmp [ebp+arg_8] 3 +
lea ecx [ebp+Buffer] +
setz al  +
push eax  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_1029E84  +
test eax eax +
jz loc_102A062  +
mov ecx [ebp+arg_10] +
mov [eax+14h] ecx +
jmp loc_102A064  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 2  +
push 1  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_1029859  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor edx edx +
push esi  +
push edi  +
cmp ebx edx +
jz loc_102A213  +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_102A213  +
cmp [ebx+10h] edx +
jz loc_102A213  +
mov ecx [eax+30h] +
cmp ecx [eax+14h] +
jge loc_102A213  +
mov ecx [ebp+arg_4] +
or ecx [ebp+arg_8] +
jnz loc_102A0E6  +
mov ecx [ebp+arg_C] +
or ecx [ebp+arg_10] +
jz loc_102A213  +
cmp [ebp+arg_14] edx +
jz loc_102A213  +
mov ecx [ebp+arg_14] +
and ecx 0FFFF0000h +
jz loc_102A106  +
cmp ecx 100000h +
jnz loc_102A213  +
mov ecx [ebp+arg_18] +
cmp ecx [eax+1Ch] +
jb loc_102A12F  +
push offset aCanTReferToAnO  +
push 18h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A22D  +
push 18h  +
jmp loc_102A227  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_102A070  +
test eax eax +
jl loc_102A169  +
push offset aCanTClobberExi  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A22D  +
push 32h  +
jmp loc_102A227  +
mov eax [ebx+0Ch] +
cmp dword ptr [eax+34h] 0 +
jge loc_102A1A1  +
lea ecx [eax+14h] +
mov edx [ecx] +
cmp edx [eax+10h] +
jb loc_102A19A  +
push ebx  +
call sub_10296F7  +
test eax eax +
jnz loc_102A18D  +
push offset aSegmenttocIsOu  +
jmp loc_102A14D  +
mov eax [ebx+0Ch] +
lea ecx [eax+14h] +
mov edx [ecx] +
cmp edx [eax+10h] +
jnb loc_102A186  +
inc dword ptr [ecx]  +
mov [ebp+arg_0] edx +
jmp loc_102A1C1  +
mov ecx [eax+34h] +
mov edx [ebx+10h] +
mov [ebp+arg_0] ecx +
imul ecx ecx +
mov ecx [ecx+edx+20h] +
mov [eax+34h] ecx +
mov eax [ebx+0Ch] +
mov ecx [eax+34h] +
test ecx ecx +
jge loc_102A1C1  +
mov [eax+38h] ecx +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_14] +
mov eax edx +
imul eax eax +
add eax [ebx+10h] +
lea esi [ebp+arg_4] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
or dword ptr [eax+1Ch] 0FFFFFFFFh +
or dword ptr [eax+20h] 0FFFFFFFFh +
or dword ptr [eax+24h] 0FFFFFFFFh +
and dword ptr [eax+28h] 0 +
mov [eax+10h] ecx +
mov ecx [ebp+arg_1C] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_18] +
mov [eax+18h] ecx +
mov eax [ebx+0Ch] +
mov ecx [eax+30h] +
test ecx ecx +
jge loc_102A206  +
mov [eax+30h] edx +
jmp loc_102A20E  +
push edx  +
push ecx  +
push ebx  +
call sub_1029686  +
mov eax [ebp+arg_0] +
jmp loc_102A230  +
push edx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A22D  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
cmp ebx ecx +
jz loc_102A34F  +
cmp [ebx+14h] ecx +
jz loc_102A34F  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_102A272  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_102A34F  +
cmp [ebp+arg_14] ecx +
jz loc_102A34F  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_102A290  +
cmp eax 100000h +
jnz loc_102A34F  +
cmp [ebp+lpFileName] ecx +
jz loc_102A34F  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_102A070  +
test eax eax +
jl loc_102A2D3  +
push offset aCanTClobberE_0  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A369  +
push 32h  +
jmp loc_102A363  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+lpFileName]  +
push dword ptr [ebx+14h]  +
call sub_102902D  +
mov [ebp+lpFileName] eax +
test eax eax +
jl loc_102A33F  +
mov ecx [ebp+arg_1C] +
test ecx ecx +
jz loc_102A2F5  +
mov edx [ebp+var_4] +
mov [ecx] edx +
mov ecx [ebx+14h] +
mov ecx [ecx+10h] +
mov ecx [ecx+10h] +
mov edx [ebx+0Ch] +
mov [edx+18h] ecx +
mov ecx [ebx+14h] +
mov ecx [ecx+10h] +
mov ecx [ecx+1Ch] +
mov edx [ebx+0Ch] +
mov [edx+1Ch] ecx +
mov ecx [ebx+14h] +
mov ecx [ecx+10h] +
mov edx [ebx+0Ch] +
mov ecx [ecx+18h] +
mov [edx+20h] ecx +
push [ebp+var_4]  +
lea esi [ebp+arg_4] +
push eax  +
push [ebp+arg_14]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_102A09D  +
test eax eax +
jge loc_102A34A  +
push 0  +
push 0  +
call sub_10285DE  +
jmp loc_102A369  +
mov eax [ebp+lpFileName] +
jmp loc_102A376  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A369  +
push 57h  +
call ds:SetLastError  +
mov eax [ebp+arg_1C] +
test eax eax +
jz loc_102A373  +
and dword ptr [eax] 0 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
cmp ebx ecx +
jz loc_102A4FA  +
cmp [ebx+10h] ecx +
jz loc_102A4FA  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_102A3B4  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_102A4FA  +
cmp [ebp+arg_14] ecx +
jz loc_102A4FA  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_102A3D2  +
cmp eax 100000h +
jnz loc_102A4FA  +
cmp [ebp+lpBaseAddress] ecx +
jz loc_102A4FA  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_102A070  +
test eax eax +
jl loc_102A467  +
imul eax eax +
add eax [ebx+10h] +
push 0  +
push [ebp+lpBaseAddress]  +
mov esi eax +
push dword ptr [esi+14h]  +
push dword ptr [esi+18h]  +
push dword ptr [ebx+14h]  +
call sub_1029125  +
test eax eax +
jge loc_102A424  +
push offset aInternalError  +
push 0  +
call sub_10285DE  +
jmp loc_102A514  +
jnz loc_102A446  +
mov eax [ebp+arg_1C] +
test eax eax +
jz loc_102A432  +
mov ecx [esi+18h] +
mov [eax] ecx +
mov eax [ebp+arg_20] +
test eax eax +
jz loc_102A43E  +
mov ecx [esi+14h] +
mov [eax] ecx +
xor eax eax +
inc eax  +
jmp loc_102A516  +
push offset aUndeletedEntry  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A514  +
push 32h  +
jmp loc_102A50E  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10298ED  +
xor edi edi +
jmp loc_102A4A8  +
imul eax eax +
add eax [ebx+10h] +
mov esi eax +
mov eax [ebp+arg_14] +
cmp [esi+10h] eax +
jnz loc_102A4A5  +
push edi  +
push [ebp+lpBaseAddress]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+18h]  +
push dword ptr [ebx+14h]  +
call sub_1029125  +
cmp eax edi +
jl loc_102A4B3  +
jz loc_102A4BE  +
mov eax [esi+20h] +
cmp eax edi +
jge loc_102A47D  +
push offset aEntryWithSpe_0  +
jmp loc_102A4B8  +
push offset aInternalError  +
push edi  +
jmp loc_102A41A  +
and dword ptr [esi+28h] 0FFFFFFFEh +
mov eax [ebx+14h] +
mov ecx [esi+14h] +
mov edx [eax+10h] +
cmp [edx+18h] ecx +
jb loc_102A4E4  +
mov eax edx +
sub [eax+18h] ecx +
mov eax [ebx+14h] +
mov eax [eax+10h] +
mov ecx [ebx+0Ch] +
mov eax [eax+18h] +
mov [ecx+20h] eax +
mov eax [ebp+arg_1C] +
cmp eax edi +
jz loc_102A4F0  +
mov ecx [esi+18h] +
mov [eax] ecx +
mov eax [ebp+arg_20] +
cmp eax edi +
jmp loc_102A437  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102A514  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_102A596  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_102A596  +
cmp [esi+10h] edi +
jz loc_102A596  +
mov eax [eax+14h] +
cmp eax 1 +
jb loc_102A5AE  +
push 8  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_102A576  +
mov eax [esi+0Ch] +
push 8  +
push dword ptr [eax+14h]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_102A578  +
xor edi edi +
test edi edi +
jz loc_102A5AE  +
mov eax [esi+0Ch] +
push edi  +
push dword ptr [eax+30h]  +
push esi  +
call sub_1029B08  +
cmp eax 1 +
jge loc_102A592  +
push 0Dh  +
jmp loc_102A598  +
mov eax edi +
jmp loc_102A5B0  +
push 57h  +
call ds:SetLastError  +
test edi edi +
jz loc_102A5AE  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ebp+var_C] eax +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102A6AE  +
push [ebp+var_4]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102A6AE  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_102A6AE  +
push ebx  +
push esi  +
push edi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
jmp loc_102A62C  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
cmp edi ebx +
jbe loc_102A625  +
call sub_1029C93  +
jmp loc_102A62A  +
call sub_1029D34  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov esi ecx +
imul esi esi +
add esi [eax+10h] +
mov eax [ebp+arg_4] +
lea eax [eax+ecx*8] +
mov ebx [eax+4] +
mov edi [eax] +
mov eax ebx +
sub eax edi +
cdq   +
xor eax edx +
sub eax edx +
mov [ebp+arg_8] ebx +
cmp eax 1 +
jbe loc_102A661  +
imul eax eax +
add ebx edi +
xor edx edx +
div  ebx +
mov ebx [ebp+arg_8] +
jmp loc_102A663  +
xor eax eax +
cmp eax 14h +
ja loc_102A613  +
mov eax [ebp+var_8] +
mov [eax] ecx +
lea eax [esi+1Ch] +
cmp dword ptr [eax] 0 +
jl loc_102A682  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102A6AB  +
add esi 24h +
cmp dword ptr [esi] 0 +
jl loc_102A697  +
push [ebp+var_4]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_102A6AB  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102A60C  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
xor edi edi +
cmp [ebp+lpFileName] edi +
jnz loc_102A6DD  +
push 57h  +
call ds:SetLastError  +
jmp loc_102A775  +
mov ebx [ebp+arg_C] +
push esi  +
xor eax eax +
mov esi 100h +
cmp ebx esi +
setz al  +
push eax  +
push [ebp+lpFileName]  +
call sub_101CB17  +
cmp ebx esi +
pop esi  +
jz loc_102A750  +
cmp ebx 200h +
jz loc_102A750  +
cmp ebx 300h +
jz loc_102A736  +
cmp ebx 400h +
jnz loc_102A72E  +
test eax eax +
jz loc_102A72E  +
push [ebp+arg_8]  +
mov ebx [ebp+arg_14] +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_1029EE1  +
mov edi eax +
test edi edi +
jz loc_102A775  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 18h  +
test eax eax +
jnz loc_102A717  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_1029F7A  +
jmp loc_102A728  +
test eax eax +
jz loc_102A75B  +
push 5  +
jmp loc_102A6D2  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_1029F7A  +
mov edi eax +
test edi edi +
jnz loc_102A72E  +
xor eax eax +
jmp loc_102A730  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102A7BC  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102A7BC  +
cmp dword ptr [eax+14h] 3 +
jnb loc_102A79D  +
xor eax eax +
inc eax  +
jmp loc_102A7C6  +
push esi  +
call sub_102A522  +
test eax eax +
jz loc_102A7C4  +
mov ecx [esi+0Ch] +
push dword ptr [ecx+30h]  +
push eax  +
push esi  +
call sub_102A5BC  +
mov ecx [esi+0Ch] +
mov [ecx+30h] eax +
jmp loc_102A798  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+NumberOfBytesRead] +
cmp ebx 1 +
push esi  +
push edi  +
jge loc_102A7EA  +
push 57h  +
call ds:SetLastError  +
jmp loc_102A834  +
mov esi ds:GetProcessHeap +
push ebx  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102A834  +
and [ebp+NumberOfBytesRead] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push ebx  +
push edi  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_102A828  +
cmp ebx [ebp+NumberOfBytesRead] +
jz loc_102A838  +
push 26h  +
call ds:SetLastError  +
push edi  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102A83A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
test ebx ebx +
jl loc_102A8A6  +
cmp [ebp+NumberOfBytesRead] 1 +
jl loc_102A8A6  +
cmp [ebp+NumberOfBytesRead] ebx +
jl loc_102A8A6  +
push [ebp+NumberOfBytesRead]  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102A8BE  +
test ebx ebx +
jle loc_102A8A2  +
and [ebp+NumberOfBytesRead] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push ebx  +
push edi  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_102A8AE  +
cmp ebx [ebp+NumberOfBytesRead] +
jz loc_102A8A2  +
push 26h  +
jmp loc_102A8A8  +
mov eax edi +
jmp loc_102A8C0  +
push 57h  +
call ds:SetLastError  +
test edi edi +
jz loc_102A8BE  +
push edi  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
xor eax eax +
cmp esi eax +
jnz loc_102A8E0  +
xor eax eax +
inc eax  +
jmp loc_102A916  +
cmp [ebp+hFile] eax +
jz loc_102A90C  +
cmp [ebp+lpBuffer] eax +
jz loc_102A90C  +
push eax  +
mov [ebp+NumberOfBytesWritten] eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_102A914  +
cmp esi [ebp+NumberOfBytesWritten] +
jz loc_102A8DB  +
push 1Dh  +
jmp loc_102A90E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+lpMem] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
cmp [ebp+lpFileName] esi +
jnz loc_102A948  +
push 57h  +
call ds:SetLastError  +
jmp loc_102AA90  +
push esi  +
push esi  +
push 3  +
push esi  +
push 1  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov ebx ds:GetProcessHeap +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_102AA1E  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_102AA1E  +
cmp [ebp+var_8] esi +
jz loc_102A993  +
push 18h  +
call ds:SetLastError  +
jmp loc_102AA1E  +
push 68h  +
push edi  +
call sub_102A7D0  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_102AA1E  +
push [ebp+var_C]  +
push eax  +
call sub_102C7E2  +
test eax eax +
jz loc_102AA1E  +
push 24h  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_102AA1E  +
mov eax [ebp+lpMem] +
mov [esi+0Ch] eax +
mov dword ptr [esi] 6 +
mov eax [eax+34h] +
shl eax 5 +
push eax  +
push edi  +
call sub_102A7D0  +
mov [esi+10h] eax +
test eax eax +
jz loc_102AA1E  +
mov eax [ebp+lpMem] +
mov eax [eax+38h] +
add eax eax +
push eax  +
push edi  +
call sub_102A7D0  +
mov [esi+14h] eax +
test eax eax +
jz loc_102AA1E  +
mov eax [ebp+lpMem] +
mov eax [eax+3Ch] +
imul eax eax +
push eax  +
push edi  +
call sub_102A7D0  +
mov [esi+18h] eax +
test eax eax +
jz loc_102AA1E  +
push [ebp+lpFileName]  +
call sub_101E529  +
mov [esi+1Ch] eax +
test eax eax +
jnz loc_102AA94  +
test edi edi +
jz loc_102AA29  +
push edi  +
call ds:CloseHandle  +
mov edi ds:HeapFree +
test esi esi +
jz loc_102AA80  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102AA4B  +
cmp [ebp+lpMem] eax +
jnz loc_102AA43  +
and [ebp+lpMem] 0 +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+10h] +
test eax eax +
jz loc_102AA5A  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+14h] +
test eax eax +
jz loc_102AA69  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+18h] +
test eax eax +
jz loc_102AA78  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+lpMem] 0 +
jz loc_102AA90  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call edi  +
xor eax eax +
jmp loc_102AA9D  +
push edi  +
call ds:CloseHandle  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+lpBuffer] 0 +
jz loc_102AAF6  +
cmp [ebp+lpFileName] 0 +
jz loc_102AAF6  +
push [ebp+lpBuffer]  +
call sub_102C7A5  +
test eax eax +
jz loc_102AAFE  +
lea ecx [ebp+var_4] +
push ecx  +
movzx ecx [ebp+arg_C] +
push offset sub_102C8D1  +
push ecx  +
push eax  +
push 68h  +
push [ebp+lpBuffer]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101DF19  +
test eax eax +
jz loc_102AAFE  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
jmp locret_102AB00  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
xor eax eax +
and [ebp+var_4] eax +
push esi  +
xor esi esi +
cmp [ebp+lpFileName] eax +
jnz loc_102AB2B  +
push 57h  +
call ds:SetLastError  +
jmp loc_102AB7F  +
mov ecx [ebp+arg_8] +
dec ecx  +
jz loc_102AB4D  +
dec ecx  +
dec ecx  +
jz loc_102AB48  +
sub ecx 3 +
jnz loc_102AB21  +
push [ebp+lpFileName]  +
call sub_102A920  +
test eax eax +
jz loc_102AB7F  +
jmp loc_102AB8F  +
xor esi esi +
inc esi  +
mov eax esi +
cmp [ebp+lpName] 0 +
jz loc_102AB60  +
push eax  +
push [ebp+lpName]  +
call sub_101F2CE  +
test eax eax +
jnz loc_102AB8F  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset sub_102C8D1  +
push esi  +
push 0  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101E505  +
test eax eax +
jnz loc_102AB83  +
xor eax eax +
jmp loc_102AB8F  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+lpFileName] ebx +
jz loc_102AC30  +
mov esi [ebp+arg_4] +
cmp esi ebx +
jz loc_102AC30  +
cmp [esi+0Ch] ebx +
jz loc_102AC30  +
push ebx  +
push ebx  +
push 40000000h  +
push [ebp+lpFileName]  +
call sub_101DBCD  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_102AC38  +
mov edi [esi+0Ch] +
push 68h  +
push edi  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102AC38  +
mov eax [edi+34h] +
shl eax 5 +
push eax  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102AC38  +
mov eax [edi+38h] +
add eax eax +
push eax  +
push dword ptr [esi+14h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102AC38  +
mov eax [edi+3Ch] +
imul eax eax +
push eax  +
push dword ptr [esi+18h]  +
push ebx  +
call sub_102A8CC  +
test eax eax +
jz loc_102AC38  +
push ebx  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_102AC38  +
push ebx  +
call ds:CloseHandle  +
xor eax eax +
inc eax  +
jmp loc_102AC4A  +
push 57h  +
call ds:SetLastError  +
test ebx ebx +
jz loc_102AC48  +
cmp ebx 0FFFFFFFFh +
jz loc_102AC48  +
push ebx  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_102AC66  +
push 57h  +
jmp loc_102AC6F  +
mov ecx [eax] +
test cl 2 +
jnz loc_102AC7B  +
push 32h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
test cl 1 +
jz loc_102AC8D  +
push 0  +
push dword ptr [eax+0Ch]  +
call ds:FlushViewOfFile  +
jmp loc_102AC77  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_102AC75  +
push eax  +
push ecx  +
call sub_102AB99  +
jmp loc_102AC77  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_102ADD4  +
mov esi [edx+0Ch] +
test esi esi +
jz loc_102ADD4  +
mov eax [edx+14h] +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_102ADD4  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_102ADD4  +
cmp word ptr [eax] 0 +
jz loc_102ADD4  +
mov ecx [edx] +
mov [ebp+var_C] ecx +
test cl 2 +
jnz loc_102ACF7  +
push 5  +
jmp loc_102ADD6  +
mov ecx [esi+50h] +
mov ebx [esi+38h] +
cmp ecx ebx +
jbe loc_102AD08  +
push 18h  +
jmp loc_102ADD6  +
lea edi [eax+2] +
mov [ebp+var_4] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_102AD0E  +
sub eax [ebp+var_4] +
sar eax 1 +
lea edi [eax+1] +
add ecx edi +
cmp ecx ebx +
jbe loc_102ADB4  +
test byte ptr [ebp+var_C] 4 +
jnz loc_102AD37  +
push 32h  +
jmp loc_102ADD6  +
mov eax [esi+50h] +
add eax edi +
add ebx ebx +
cmp eax ebx +
ja loc_102AD3C  +
push 2  +
push ebx  +
call sub_101E275  +
test eax eax +
jbe loc_102AD6B  +
push 2  +
push ebx  +
call sub_101E275  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
jmp loc_102AD6F  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_102ADDC  +
mov eax [esi+50h] +
add eax eax +
push eax  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
call memcpy  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
add esp 0Ch +
cmp [ebp+lpMem] 0 +
mov [ecx+14h] eax +
mov [esi+38h] ebx +
jz loc_102ADB2  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edx [ebp+arg_0] +
jmp loc_102ADB4  +
mov edx ecx +
mov ebx [esi+50h] +
lea eax [edi+edi] +
push eax  +
mov eax [edx+14h] +
push [ebp+arg_4]  +
lea eax [eax+ebx*2] +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+50h] edi +
mov eax ebx +
jmp loc_102ADDF  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
imul edi edi +
add edi [eax+18h] +
test ebx ebx +
jl loc_102AE51  +
push esi  +
mov eax [ebp+arg_0] +
mov esi ebx +
imul esi esi +
add esi [eax+18h] +
push esi  +
push edi  +
call sub_1020570  +
test eax eax +
jz loc_102AE44  +
jge loc_102AE2D  +
mov ebx [esi+20h] +
test ebx ebx +
jge loc_102AE06  +
mov eax [ebp+arg_8] +
mov [esi+20h] eax +
jmp loc_102AE3E  +
test eax eax +
jle loc_102AE3E  +
mov ebx [esi+28h] +
test ebx ebx +
jge loc_102AE06  +
mov eax [ebp+arg_8] +
mov [esi+28h] eax +
test ebx ebx +
jge loc_102AE06  +
jmp loc_102AE50  +
mov eax [esi+24h] +
mov [edi+24h] eax +
mov eax [ebp+arg_8] +
mov [esi+24h] eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_102AF0E  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102AF0E  +
mov ecx [esi] +
test cl 4 +
jz loc_102AE95  +
test cl 2 +
jz loc_102AE95  +
mov edi [eax+3Ch] +
lea eax [edi+edi] +
mov [ebp+var_4] eax +
cmp eax edi +
ja loc_102AE99  +
push 32h  +
jmp loc_102AF10  +
mov ecx [esi+18h] +
push 30h  +
push eax  +
mov [ebp+lpMem] ecx +
call sub_101E275  +
mov ebx ds:GetProcessHeap +
test eax eax +
jbe loc_102AECC  +
push 30h  +
push [ebp+var_4]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
jmp loc_102AED0  +
and [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_102AEDA  +
push 8  +
jmp loc_102AF10  +
imul edi edi +
push edi  +
push [ebp+lpMem]  +
push [ebp+arg_0]  +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add esp 0Ch +
push [ebp+lpMem]  +
mov [esi+18h] eax +
mov eax [esi+0Ch] +
push 0  +
mov [eax+3Ch] ecx +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
inc eax  +
jmp loc_102AF18  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov ecx [ebp+SystemTimeAsFileTime.dwHighDateTime] +
mov edx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
xchg eax [ebp+var_4] +
mov eax [esi+0Ch] +
mov [eax+28h] edx +
mov [eax+2Ch] ecx +
mov eax [esi+0Ch] +
inc dword ptr [eax+10h]  +
xchg eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
push 24h  +
push 8  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov edi eax +
mov [ebp+var_4] edi +
test edi edi +
jz loc_102B05B  +
push 68h  +
push 8  +
call ebx  +
push eax  +
call esi  +
mov [edi+0Ch] eax +
test eax eax +
jz loc_102B053  +
mov edx [ebp+arg_0] +
push 1Ah  +
pop ecx  +
mov edi eax +
mov eax [ebp+var_4] +
mov esi edx +
movs   +
mov dword ptr [eax] 6 +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [edx+34h] +
push 20h  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_102B053  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
mov [ecx+10h] eax +
test eax eax +
jz loc_102B053  +
mov edi [ebp+arg_0] +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [edi+38h] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_102B053  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
mov [ecx+14h] eax +
test eax eax +
jz loc_102B053  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [edi+3Ch] +
push 30h  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_102B053  +
push [ebp+dwBytes]  +
push 8  +
call ebx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
mov [ecx+18h] eax +
test eax eax +
jz loc_102B053  +
cmp [ebp+arg_4] 0 +
jz loc_102B05F  +
push [ebp+arg_4]  +
call sub_101E529  +
mov ecx [ebp+var_4] +
mov [ecx+1Ch] eax +
test eax eax +
jnz loc_102B065  +
push [ebp+var_4]  +
call sub_101F50E  +
xor eax eax +
jmp loc_102B068  +
mov eax ecx +
and dword ptr [eax+1Ch] 0 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_102ACA2  +
mov edi eax +
test edi edi +
jl loc_102B092  +
call sub_102AF24  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
cmp ebx ecx +
jz loc_102B148  +
cmp [ebx+18h] ecx +
jz loc_102B148  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_102B0CD  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_102B148  +
cmp [ebp+arg_14] ecx +
jz loc_102B148  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_102B0E3  +
cmp eax 100000h +
jnz loc_102B148  +
push 3  +
push ecx  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_101F7D6  +
mov edi eax +
test edi edi +
jl loc_102B126  +
xchg eax [ebp+arg_14] +
mov eax [ebx+0Ch] +
mov ecx [eax+10h] +
inc ecx  +
mov [eax+18h] ecx +
xchg eax [ebp+arg_14] +
mov eax edi +
imul eax eax +
add eax [ebx+18h] +
mov esi ebx +
and dword ptr [eax+2Ch] 0FFFFFFFEh +
call sub_102AF24  +
jmp loc_102B144  +
push offset aSpecifiedEntry  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102B144  +
push 32h  +
call ds:SetLastError  +
mov eax edi +
jmp loc_102B165  +
push ecx  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102B162  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jz loc_102B1EB  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_102B18E  +
mov eax [ebp+arg_C] +
or eax [ebp+arg_10] +
jz loc_102B1EB  +
cmp [ebp+arg_14] 0 +
jz loc_102B1EB  +
mov eax [ebp+arg_14] +
and eax 0FFFF0000h +
jz loc_102B1A5  +
cmp eax 100000h +
jnz loc_102B1EB  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
movs   +
call sub_101FBF5  +
test eax eax +
jnz loc_102B1DA  +
push offset aCanTFindSpecif  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102B206  +
push 32h  +
jmp loc_102B200  +
mov esi [ebp+arg_0] +
or dword ptr [eax+2Ch] 1 +
call sub_102AF24  +
xor eax eax +
inc eax  +
jmp loc_102B208  +
push 0  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102B206  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+20h] +
test eax eax +
jz loc_102B22D  +
push eax  +
call sub_10206A8  +
and dword ptr [esi+20h] 0 +
push esi  +
call sub_102AE5C  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ecx ecx +
push edi  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
cmp esi ecx +
jz loc_102B3A1  +
mov eax [esi+0Ch] +
cmp eax ecx +
jz loc_102B3A1  +
cmp [esi+18h] ecx +
jz loc_102B3A1  +
mov edi [ebp+arg_8] +
cmp edi ecx +
jz loc_102B3A1  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jl loc_102B3A1  +
cmp ebx [eax+48h] +
jg loc_102B3A1  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102B3A9  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102B3A9  +
push [ebp+var_4]  +
push ebx  +
jmp loc_102B30C  +
mov eax [ebp+arg_4] +
mov ecx [esi+18h] +
imul eax eax +
add eax ecx +
mov ecx [eax+20h] +
mov ebx [eax+28h] +
mov eax [esi+0Ch] +
mov eax [eax+48h] +
cmp ecx eax +
jge loc_102B32F  +
cmp ebx eax +
jge loc_102B32F  +
test ecx ecx +
jl loc_102B2F1  +
push [ebp+var_4]  +
push ecx  +
call sub_1027744  +
test eax eax +
jz loc_102B3A9  +
test ebx ebx +
jl loc_102B306  +
push [ebp+var_4]  +
push ebx  +
call sub_1027744  +
test eax eax +
jz loc_102B3A9  +
push [ebp+var_8]  +
push [ebp+arg_4]  +
call sub_1027744  +
test eax eax +
jz loc_102B3A9  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102B2BD  +
or [ebp+arg_4] 0FFFFFFFFh +
jmp loc_102B379  +
push 0Dh  +
jmp loc_102B3A3  +
mov edx [ebp+arg_4] +
mov ecx [esi+18h] +
mov eax edx +
imul eax eax +
add eax ecx +
mov ecx [eax+20h] +
mov ebx [eax+28h] +
lea eax [edi+edx*8] +
test ecx ecx +
jl loc_102B35D  +
lea ecx [edi+ecx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax] ecx +
jmp loc_102B360  +
and dword ptr [eax] 0 +
test ebx ebx +
jl loc_102B375  +
lea ecx [edi+ebx*8] +
mov edx [ecx+4] +
mov ecx [ecx] +
lea ecx [edx+ecx+1] +
mov [eax+4] ecx +
jmp loc_102B379  +
and dword ptr [eax+4] 0 +
push [ebp+var_8]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102B333  +
mov eax [ebp+arg_4] +
test eax eax +
jl loc_102B3A9  +
lea eax [edi+eax*8] +
mov ecx [eax+4] +
mov eax [eax] +
lea eax [ecx+eax+1] +
mov [ebp+var_C] eax +
jmp loc_102B3A9  +
push 57h  +
call ds:SetLastError  +
push [ebp+var_8]  +
call sub_1022B7C  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+18h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+20h] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+28h] edx +
jge loc_102B40C  +
or dword ptr [eax+20h] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+28h] eax +
lea eax [ecx+eax*8] +
mov [eax] edx +
mov eax [eax+4] +
inc eax  +
mov [ecx+edi*8+4] eax +
jmp loc_102B45B  +
mov edx [ebx+18h] +
mov ecx edi +
mov edi [esi+28h] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+28h] 0 +
jge loc_102B40F  +
mov edx [ebx+18h] +
imul ecx ecx +
or dword ptr [ecx+edx+28h] 0FFFFFFFFh +
mov ecx [eax+20h] +
or dword ptr [eax+20h] 0FFFFFFFFh +
mov eax [esi+20h] +
test eax eax +
jge loc_102B43F  +
mov [esi+20h] ecx +
jmp loc_102B44B  +
test ecx ecx +
jl loc_102B44B  +
push ecx  +
push eax  +
push ebx  +
call sub_102ADEB  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+28h] eax +
call sub_102B23D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax ecx +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
mov edx [ebx+18h] +
push esi  +
add eax edx +
push edi  +
mov edi [eax+28h] +
mov esi edi +
imul esi esi +
add esi edx +
xor edx edx +
cmp [esi+20h] edx +
jge loc_102B4AC  +
or dword ptr [eax+28h] 0FFFFFFFFh +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [esi+20h] eax +
lea eax [ecx+eax*8] +
mov [eax+4] edx +
mov eax [eax] +
inc eax  +
mov [ecx+edi*8] eax +
jmp loc_102B4FB  +
mov edx [ebx+18h] +
mov ecx edi +
mov edi [esi+20h] +
mov esi edi +
imul esi esi +
add esi edx +
cmp dword ptr [esi+20h] 0 +
jge loc_102B4AF  +
mov edx [ebx+18h] +
imul ecx ecx +
or dword ptr [ecx+edx+20h] 0FFFFFFFFh +
mov ecx [eax+28h] +
or dword ptr [eax+28h] 0FFFFFFFFh +
mov eax [esi+28h] +
test eax eax +
jge loc_102B4DF  +
mov [esi+28h] ecx +
jmp loc_102B4EB  +
test ecx ecx +
jl loc_102B4EB  +
push ecx  +
push eax  +
push ebx  +
call sub_102ADEB  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push edi  +
push ebx  +
mov [esi+20h] eax +
call sub_102B23D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_8] 14h +
mov edx 200h +
mov [ebp+var_C] 7D0h +
mov ecx 400000h +
mov [ebp+var_4] esi +
cmp eax esi +
jz loc_102B56F  +
mov ebx [eax+4] +
test bl 4 +
jz loc_102B546  +
mov edi [eax+10h] +
mov [ebp+var_8] edi +
test bl 8 +
jz loc_102B551  +
mov edi [eax+14h] +
mov [ebp+var_C] edi +
test bl 10h +
jz loc_102B559  +
mov edx [eax+18h] +
test bl 40h +
jz loc_102B561  +
mov ecx [eax+20h] +
test ebx 200h +
jz loc_102B56F  +
mov eax [eax+2Ch] +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
mov [ebp+var_40] eax +
mov eax [ebp+var_C] +
push 3  +
mov [ebp+var_38] eax +
or eax 0FFFFFFFFh +
pop edi  +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+Buffer] 43534552h +
mov [ebp+var_70] 524944h +
mov [ebp+var_6C] edi +
mov [ebp+var_68] esi +
mov [ebp+var_64] esi +
mov [ebp+var_60] esi +
mov [ebp+var_5C] esi +
mov [ebp+var_58] esi +
mov [ebp+var_54] esi +
mov [ebp+var_50] esi +
mov [ebp+var_4C] esi +
mov [ebp+var_48] esi +
mov [ebp+var_44] 40000h +
mov [ebp+var_3C] edx +
mov [ebp+var_34] ecx +
mov [ebp+var_30] esi +
mov [ebp+var_24] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] esi +
call sub_102C7E2  +
test eax eax +
jz loc_102B684  +
mov eax [ebp+arg_8] +
dec eax  +
jz loc_102B604  +
dec eax  +
dec eax  +
jz loc_102B604  +
sub eax edi +
jnz loc_102B684  +
push [ebp+lpFileName]  +
lea eax [ebp+Buffer] +
push eax  +
call sub_102AF58  +
jmp loc_102B61D  +
cmp [ebp+arg_8] edi +
setz al  +
movzx eax al +
push eax  +
push [ebp+lpName]  +
lea eax [ebp+Buffer] +
push [ebp+lpFileName]  +
push eax  +
call sub_102AAA9  +
mov edi eax +
cmp edi esi +
jz loc_102B684  +
cmp [ebp+var_4] esi +
jnz loc_102B671  +
push [ebp+lpFileName]  +
call sub_101E529  +
mov ebx eax +
cmp ebx esi +
jz loc_102B680  +
push 5Ch  +
push ebx  +
call wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_102B669  +
xor ecx ecx +
push 5Ch  +
push ebx  +
mov [eax] cx +
call wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_102B669  +
push ebx  +
xor ecx ecx +
push edi  +
mov [eax] cx +
call sub_102B074  +
mov ecx [edi+0Ch] +
mov [ecx+54h] eax +
push ebx  +
call sub_101CBEF  +
jmp loc_102B680  +
push [ebp+var_4]  +
push edi  +
call sub_102B074  +
mov ecx [edi+0Ch] +
mov [ecx+54h] eax +
mov eax edi +
jmp loc_102B686  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
xor edi edi +
cmp [ebp+lpFileName] edi +
jnz loc_102B6AD  +
push 57h  +
call ds:SetLastError  +
jmp loc_102B739  +
mov ebx [ebp+arg_C] +
push esi  +
xor eax eax +
mov esi 100h +
cmp ebx esi +
setz al  +
push eax  +
push [ebp+lpFileName]  +
call sub_101CB17  +
cmp ebx esi +
pop esi  +
jz loc_102B71A  +
cmp ebx 200h +
jz loc_102B71A  +
cmp ebx 300h +
jz loc_102B703  +
cmp ebx 400h +
jnz loc_102B6FB  +
test eax eax +
jz loc_102B6FB  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102AB09  +
mov edi eax +
test edi edi +
jz loc_102B739  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 14h  +
test eax eax +
jnz loc_102B6E7  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102B509  +
jmp loc_102B6F5  +
test eax eax +
jz loc_102B722  +
push 5  +
jmp loc_102B6A2  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102B509  +
mov edi eax +
test edi edi +
jnz loc_102B6FB  +
xor eax eax +
jmp loc_102B6FD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+FileTime.dwHighDateTime] ebx +
mov [ebp+FileTime.dwLowDateTime] ebx +
cmp esi ebx +
jz loc_102B953  +
mov edi [esi+0Ch] +
cmp edi ebx +
jz loc_102B953  +
cmp [esi+10h] ebx +
jz loc_102B953  +
test byte ptr [esi] 2 +
jnz loc_102B780  +
push 32h  +
jmp loc_102B955  +
cmp [ebp+arg_8] ebx +
jnz loc_102B78B  +
mov eax [edi+40h] +
mov [ebp+arg_8] eax +
mov eax [edi+34h] +
cmp eax 1 +
jb loc_102B94F  +
cmp [edi+44h] eax +
ja loc_102B94F  +
mov eax [ebp+arg_8] +
cmp eax [edi+40h] +
ja loc_102B94F  +
cmp eax 100000h +
jb loc_102B94F  +
cmp [ebp+arg_4] ebx +
jz loc_102B7C9  +
push [ebp+arg_4]  +
push esi  +
call sub_101F33F  +
test eax eax +
jge loc_102B779  +
cmp [ebp+dwBytes] ebx +
jz loc_102B7FD  +
lea eax [ebp+FileInformation] +
push eax  +
push ebx  +
push [ebp+dwBytes]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_102B815  +
cmp [ebp+var_34] ebx +
jz loc_102B7EF  +
push 20010304h  +
jmp loc_102B955  +
mov eax [ebp+var_3C] +
mov [ebp+FileTime.dwLowDateTime] eax +
mov eax [ebp+var_38] +
mov [ebp+FileTime.dwHighDateTime] eax +
jmp loc_102B815  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
lea eax [ebp+FileTime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:SystemTimeToFileTime  +
mov eax [ebp+FileTime.dwHighDateTime] +
mov [ebp+var_18] eax +
mov eax [ebp+FileTime.dwLowDateTime] +
mov [ebp+var_1C] eax +
mov eax [edi+34h] +
cmp eax [edi+44h] +
jnz loc_102B8CA  +
test byte ptr [esi] 4 +
jz loc_102B779  +
lea ecx [ebp+dwBytes] +
push ecx  +
push 20h  +
add eax eax +
pop ecx  +
mov [ebp+var_C] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_102B95B  +
push [ebp+dwBytes]  +
mov eax [esi+10h] +
mov ebx ds:GetProcessHeap +
push 8  +
mov [ebp+lpMem] eax +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_102B95B  +
lea eax [ebp+var_8] +
push eax  +
mov eax [edi+44h] +
push 20h  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101D610  +
test eax eax +
jl loc_102B95B  +
mov eax [ebp+var_8] +
cmp eax [ebp+dwBytes] +
ja loc_102B95B  +
push eax  +
push [ebp+lpMem]  +
push [ebp+arg_0]  +
call memcpy  +
mov eax [ebp+arg_0] +
add esp 0Ch +
push [ebp+lpMem]  +
mov [esi+10h] eax +
mov eax [ebp+var_C] +
push 0  +
mov [edi+34h] eax +
call ebx  +
push eax  +
call ds:HeapFree  +
xor ebx ebx +
or eax 0FFFFFFFFh +
cmp [ebp+arg_4] ebx +
jz loc_102B8DF  +
push [ebp+arg_4]  +
push esi  +
call sub_102B074  +
cmp eax ebx +
jl loc_102B95B  +
mov ecx [edi+44h] +
mov edx [esi+10h] +
shl ecx 5 +
mov [ecx+edx+10h] ebx +
mov ecx [edi+44h] +
mov edx [esi+10h] +
shl ecx 5 +
mov [ecx+edx+4] ebx +
mov ecx [edi+44h] +
mov edx [esi+10h] +
mov ebx [ebp+arg_8] +
shl ecx 5 +
mov [ecx+edx] ebx +
mov ecx [edi+44h] +
mov edx [esi+10h] +
mov ebx [ebp+var_1C] +
shl ecx 5 +
mov [ecx+edx+8] ebx +
mov ebx [ebp+var_18] +
mov [ecx+edx+0Ch] ebx +
mov ecx [edi+44h] +
mov edx [esi+10h] +
shl ecx 5 +
mov [ecx+edx+14h] eax +
mov eax [edi+44h] +
mov ecx [esi+10h] +
shl eax 5 +
and dword ptr [eax+ecx+18h] 0 +
xchg eax [ebp+arg_4] +
mov ebx [edi+44h] +
lea eax [ebx+1] +
mov [edi+44h] eax +
call sub_102AF24  +
mov eax ebx +
jmp loc_102B95E  +
push 18h  +
jmp loc_102B955  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_C] esi +
cmp ebx esi +
jz loc_102BBE5  +
mov eax [ebx+0Ch] +
cmp eax esi +
jz loc_102BBE5  +
cmp [ebx+18h] esi +
jz loc_102BBE5  +
mov ecx [ebx+10h] +
cmp ecx esi +
jz loc_102BBE5  +
mov edx [ebp+arg_4] +
or edx [ebp+arg_8] +
jnz loc_102B9B8  +
mov edx [ebp+arg_C] +
or edx [ebp+arg_10] +
jz loc_102BBE5  +
mov edx [ebp+arg_14] +
cmp edx esi +
jz loc_102BBE5  +
and edx 0FFFF0000h +
jz loc_102B9D7  +
cmp edx 100000h +
jnz loc_102BBE5  +
mov edx [ebp+arg_18] +
cmp edx [eax+44h] +
jnb loc_102BBE5  +
mov edi [eax+58h] +
cmp edi [eax+48h] +
jge loc_102BBE5  +
mov eax [ebp+arg_20] +
cmp eax esi +
jbe loc_102BA08  +
mov edi [ebp+arg_1C] +
shl edx 5 +
add edi eax +
cmp edi [edx+ecx+4] +
jnb loc_102BBE5  +
push 3  +
push esi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_101F7D6  +
mov edx eax +
test edx edx +
jl loc_102BA8D  +
mov ecx edx +
imul ecx ecx +
add ecx [ebx+18h] +
test byte ptr [ecx+2Ch] 1 +
jnz loc_102BA55  +
push offset aCanTClobberE_1  +
push 32h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102BBFF  +
push 32h  +
jmp loc_102BBF9  +
xchg eax [ebp+arg_0] +
mov eax [ebx+0Ch] +
mov esi [eax+10h] +
inc esi  +
mov [eax+18h] esi +
xchg eax [ebp+arg_0] +
mov eax [ebp+arg_18] +
and dword ptr [ecx+2Ch] 0FFFFFFFEh +
mov [ecx+14h] eax +
mov eax [ebp+arg_1C] +
mov [ecx+18h] eax +
mov eax [ebp+arg_20] +
mov [ecx+1Ch] eax +
mov edi edx +
mov esi ebx +
call sub_102AF24  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
or [ebp+var_4] 0FFFFFFFFh +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
mov [ebp+var_8] 1 +
movs   +
call sub_101F5DD  +
mov ecx eax +
xor esi esi +
cmp ecx esi +
jl loc_102BAE5  +
mov edx [ebx+18h] +
mov eax ecx +
imul eax eax +
add eax edx +
test byte ptr [eax+2Ch] 1 +
jnz loc_102BACB  +
mov ecx [eax+24h] +
cmp ecx esi +
jge loc_102BAB5  +
jmp loc_102BAE5  +
mov [ebp+var_4] ecx +
mov [ebp+var_8] esi +
xchg eax [ebp+var_10] +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
inc edx  +
mov [eax+18h] edx +
xchg eax [ebp+var_10] +
cmp ecx esi +
jge loc_102BB4C  +
mov eax [ebx+0Ch] +
cmp [eax+5Ch] esi +
jl loc_102BB0D  +
mov ecx [eax+5Ch] +
mov edx [ebx+18h] +
mov [ebp+var_4] ecx +
imul ecx ecx +
mov ecx [ecx+edx+24h] +
mov [eax+5Ch] ecx +
mov eax [ebx+0Ch] +
mov ecx [eax+5Ch] +
cmp ecx esi +
jge loc_102BB0D  +
mov [eax+60h] ecx +
cmp [ebp+var_4] esi +
jge loc_102BB4C  +
mov ecx [ebx+0Ch] +
mov eax [ecx+48h] +
cmp eax [ecx+3Ch] +
jb loc_102BB42  +
push ebx  +
call sub_102B213  +
test eax eax +
jz loc_102BB32  +
mov ecx [ebx+0Ch] +
mov eax [ecx+48h] +
cmp eax [ecx+3Ch] +
jb loc_102BB42  +
push offset aOutOfEntriesSp  +
push esi  +
call sub_10285DE  +
jmp loc_102BBFF  +
mov [ebp+var_4] eax +
mov [ebp+var_C] 1 +
mov ebx [ebp+var_4] +
mov ecx [ebp+arg_0] +
imul ebx ebx +
add ebx [ecx+18h] +
mov eax [ebp+arg_14] +
lea esi [ebp+arg_4] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
mov [ebx+10h] eax +
mov eax [ebp+arg_18] +
mov [ebx+14h] eax +
mov eax [ebp+arg_1C] +
xor esi esi +
mov [ebx+18h] eax +
mov eax [ebp+arg_20] +
mov [ebx+1Ch] eax +
mov [ebx+2Ch] esi +
cmp [ebp+var_8] esi +
jz loc_102BBB1  +
or dword ptr [ebx+20h] 0FFFFFFFFh +
or dword ptr [ebx+24h] 0FFFFFFFFh +
or dword ptr [ebx+28h] 0FFFFFFFFh +
xchg eax [ebp+arg_14] +
mov eax [ecx+0Ch] +
mov edx [eax+58h] +
cmp edx esi +
jge loc_102BBA4  +
mov edx [ebp+var_4] +
mov [eax+58h] edx +
jmp loc_102BBB1  +
push [ebp+var_4]  +
push edx  +
push ecx  +
call sub_102ADEB  +
mov ecx [ebp+arg_0] +
cmp [ebp+var_C] esi +
jz loc_102BBCA  +
xchg eax [ebp+arg_14] +
mov eax [ecx+0Ch] +
inc dword ptr [eax+48h]  +
cmp [ebx+1Ch] esi +
jnz loc_102BBCA  +
mov eax [ecx+0Ch] +
inc dword ptr [eax+4Ch]  +
mov ecx [ecx+20h] +
cmp ecx esi +
jz loc_102BBDA  +
push [ebp+var_4]  +
push ecx  +
call sub_102BEF0  +
mov edi [ebp+var_4] +
mov ebx [ebp+arg_0] +
jmp loc_102BA7D  +
push esi  +
push 57h  +
call sub_10285DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_102BBFF  +
push 57h  +
call ds:SetLastError  +
or edi 0FFFFFFFFh +
jmp loc_102BA7D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_102BC80  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_102BC80  +
cmp [esi+18h] edi +
jz loc_102BC80  +
mov eax [eax+48h] +
cmp eax 1 +
jb loc_102BC98  +
push 8  +
push eax  +
call sub_101E275  +
test eax eax +
jbe loc_102BC60  +
mov eax [esi+0Ch] +
push 8  +
push dword ptr [eax+48h]  +
call sub_101E275  +
push eax  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
jmp loc_102BC62  +
xor edi edi +
test edi edi +
jz loc_102BC98  +
mov eax [esi+0Ch] +
push edi  +
push dword ptr [eax+58h]  +
push esi  +
call sub_102B23D  +
cmp eax 1 +
jge loc_102BC7C  +
push 0Dh  +
jmp loc_102BC82  +
mov eax edi +
jmp loc_102BC9A  +
push 57h  +
call ds:SetLastError  +
test edi edi +
jz loc_102BC98  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ebp+var_C] eax +
push 0  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102BD98  +
push [ebp+var_4]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102BD98  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_102BD98  +
push ebx  +
push esi  +
push edi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
jmp loc_102BD16  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
cmp edi ebx +
jbe loc_102BD0F  +
call sub_102B3C8  +
jmp loc_102BD14  +
call sub_102B469  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov esi ecx +
imul esi esi +
add esi [eax+18h] +
mov eax [ebp+arg_4] +
lea eax [eax+ecx*8] +
mov ebx [eax+4] +
mov edi [eax] +
mov eax ebx +
sub eax edi +
cdq   +
xor eax edx +
sub eax edx +
mov [ebp+arg_8] ebx +
cmp eax 1 +
jbe loc_102BD4B  +
imul eax eax +
add ebx edi +
xor edx edx +
div  ebx +
mov ebx [ebp+arg_8] +
jmp loc_102BD4D  +
xor eax eax +
cmp eax 14h +
ja loc_102BCFD  +
mov eax [ebp+var_8] +
mov [eax] ecx +
lea eax [esi+20h] +
cmp dword ptr [eax] 0 +
jl loc_102BD6C  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102BD95  +
add esi 28h +
cmp dword ptr [esi] 0 +
jl loc_102BD81  +
push [ebp+var_4]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_102BD95  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102BCF6  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102BE01  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102BE01  +
cmp dword ptr [eax+48h] 3 +
jnb loc_102BDCB  +
xor eax eax +
inc eax  +
jmp loc_102BE0B  +
push esi  +
call sub_102BC0C  +
mov ecx eax +
test ecx ecx +
jz loc_102BE09  +
xchg eax [ebp+arg_0] +
mov eax [esi+0Ch] +
mov edx [eax+10h] +
inc edx  +
mov [eax+14h] edx +
xchg eax [ebp+arg_0] +
mov eax [esi+0Ch] +
push dword ptr [eax+58h]  +
push ecx  +
push esi  +
call sub_102BCA6  +
mov ecx [esi+0Ch] +
mov [ecx+58h] eax +
call sub_102AF24  +
jmp loc_102BDC6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
push edi  +
xor eax eax +
xor edi edi +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
cmp [ebp+arg_0] esi +
jnz loc_102BE39  +
push 57h  +
call ds:SetLastError  +
jmp loc_102BE81  +
mov ecx [ebp+arg_8] +
dec ecx  +
jz loc_102BE51  +
dec ecx  +
dec ecx  +
jz loc_102BE4C  +
sub ecx 3 +
jnz loc_102BE2F  +
push 32h  +
jmp loc_102BE31  +
xor edi edi +
inc edi  +
mov eax edi +
cmp [ebp+lpName] esi +
jz loc_102BE63  +
push eax  +
push [ebp+lpName]  +
call sub_102064C  +
cmp eax esi +
jnz loc_102BE91  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset sub_102D19D  +
push edi  +
push esi  +
push [ebp+lpName]  +
push [ebp+arg_0]  +
call sub_101E505  +
cmp eax esi +
jnz loc_102BE85  +
xor eax eax +
jmp loc_102BE91  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov ecx [ebp+var_8] +
mov [eax+8] ecx +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
xor ecx ecx +
cmp edx ecx +
jz loc_102BEDD  +
mov eax [edx+0Ch] +
cmp eax ecx +
jz loc_102BEDD  +
cmp [edx+10h] ecx +
jz loc_102BEDD  +
cmp [eax+0Ch] ecx +
jbe loc_102BED8  +
push esi  +
push edi  +
mov edi [eax+10h] +
mov esi [edx+10h] +
mov [esi+ecx*8] edi +
mov eax [eax+14h] +
mov [esi+ecx*8+4] eax +
mov eax [edx+0Ch] +
inc ecx  +
cmp ecx [eax+0Ch] +
jb loc_102BEBD  +
pop edi  +
pop esi  +
xor eax eax +
inc eax  +
jmp loc_102BEE7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102BF26  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_102BF26  +
mov ecx [ecx+10h] +
test ecx ecx +
jz loc_102BF26  +
mov edx [ebp+arg_4] +
cmp edx [eax+0Ch] +
jnb loc_102BF26  +
push esi  +
mov esi [eax+10h] +
mov [ecx+edx*8] esi +
mov eax [eax+14h] +
mov [ecx+edx*8+4] eax +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_102BF30  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
and [ebp+var_4] esi +
cmp [ebp+lpBuffer] esi +
jz loc_102BF94  +
cmp [ebp+lpFileName] esi +
jz loc_102BF94  +
push [ebp+lpBuffer]  +
call sub_102D0F4  +
test eax eax +
jz loc_102BFA6  +
lea ecx [ebp+var_4] +
push ecx  +
movzx ecx [ebp+arg_C] +
push offset sub_102D19D  +
push ecx  +
push eax  +
push 28h  +
push [ebp+lpBuffer]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_101DF19  +
mov esi eax +
test esi esi +
jz loc_102BFA6  +
mov eax [ebp+var_4] +
push esi  +
mov [esi+4] eax +
call sub_102BE9C  +
test eax eax +
jz loc_102BF9C  +
mov eax esi +
jmp loc_102BFA8  +
push 57h  +
call ds:SetLastError  +
test esi esi +
jz loc_102BFA6  +
push esi  +
call sub_10206A8  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi [ebp+arg_8] +
cmp esi 1 +
jnb loc_102BFCD  +
push 57h  +
call ds:SetLastError  +
jmp loc_102C043  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov eax [ebp+SystemTimeAsFileTime.dwHighDateTime] +
mov ecx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov [ebp+var_24] esi +
xor esi esi +
mov [ebp+var_1C] eax +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+Buffer] 43534552h +
mov [ebp+var_2C] 544948h +
mov [ebp+var_28] 1 +
mov [ebp+var_20] ecx +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
call sub_102D10F  +
test eax eax +
jz loc_102C043  +
mov eax [ebp+arg_C] +
dec eax  +
jz loc_102C025  +
dec eax  +
dec eax  +
jz loc_102C025  +
push 32h  +
jmp loc_102BFC5  +
cmp [ebp+arg_C] 3 +
setz al  +
movzx eax al +
push eax  +
push [ebp+lpName]  +
lea eax [ebp+Buffer] +
push [ebp+lpFileName]  +
push eax  +
call sub_102BF39  +
cmp eax esi +
jnz loc_102C045  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
xor edi edi +
cmp [ebp+lpFileName] edi +
jnz loc_102C06A  +
push 57h  +
call ds:SetLastError  +
jmp loc_102C0F6  +
mov ebx [ebp+arg_10] +
push esi  +
xor eax eax +
mov esi 100h +
cmp ebx esi +
setz al  +
push eax  +
push [ebp+lpFileName]  +
call sub_101CB17  +
cmp ebx esi +
pop esi  +
jz loc_102C0D7  +
cmp ebx 200h +
jz loc_102C0D7  +
cmp ebx 300h +
jz loc_102C0C0  +
cmp ebx 400h +
jnz loc_102C0B8  +
test eax eax +
jz loc_102C0B8  +
push [ebp+arg_C]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102BE15  +
mov edi eax +
test edi edi +
jz loc_102C0F6  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 14h  +
push [ebp+arg_C]  +
test eax eax +
jnz loc_102C0A7  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102BFB2  +
jmp loc_102C0B2  +
test eax eax +
jz loc_102C0DF  +
push 5  +
jmp loc_102C05F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpName]  +
push [ebp+lpFileName]  +
call sub_102BFB2  +
mov edi eax +
test edi edi +
jnz loc_102C0B8  +
xor eax eax +
jmp loc_102C0BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102C1E6  +
mov eax [esi+4] +
mov ecx [eax+18h] +
mov eax [eax+1Ch] +
cmp ecx eax +
ja loc_102C1E6  +
push ebx  +
push edi  +
jnz loc_102C19F  +
lea ebx [eax+5] +
push 8  +
push ebx  +
call sub_101E275  +
mov edi ds:GetProcessHeap +
test eax eax +
jbe loc_102C158  +
push 8  +
push ebx  +
call sub_101E275  +
push eax  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
jmp loc_102C15C  +
and [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
jz loc_102C1DF  +
mov eax [esi+4] +
cmp dword ptr [eax+18h] 0 +
jbe loc_102C180  +
mov eax [eax+1Ch] +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
push [ebp+arg_0]  +
call memcpy  +
add esp 0Ch +
mov eax [esi+8] +
test eax eax +
jz loc_102C193  +
push eax  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
mov eax [esi+4] +
mov [eax+1Ch] ebx +
mov eax [esi+4] +
mov eax [eax+18h] +
mov ecx [esi+8] +
mov dx [ebp+arg_4] +
mov [ecx+eax*8] dx +
mov eax [esi+4] +
mov eax [eax+18h] +
mov ecx [esi+8] +
mov dx [ebp+arg_8] +
mov [ecx+eax*8+2] dx +
mov eax [esi+4] +
mov ecx [esi+8] +
mov eax [eax+18h] +
mov edx [ebp+arg_C] +
mov [ecx+eax*8+4] edx +
mov esi [esi+4] +
inc dword ptr [esi+18h]  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
jmp loc_102C1E8  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_102C324  +
mov esi [edx+4] +
test esi esi +
jz loc_102C324  +
mov eax [edx+0Ch] +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_102C324  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_102C324  +
cmp word ptr [eax] 0 +
jz loc_102C324  +
mov ecx [edx] +
mov [ebp+var_C] ecx +
test cl 2 +
jnz loc_102C247  +
push 5  +
jmp loc_102C326  +
mov ecx [esi+20h] +
mov ebx [esi+24h] +
cmp ecx ebx +
jbe loc_102C258  +
push 18h  +
jmp loc_102C326  +
lea edi [eax+2] +
mov [ebp+var_4] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_102C25E  +
sub eax [ebp+var_4] +
sar eax 1 +
lea edi [eax+1] +
add ecx edi +
cmp ecx ebx +
jbe loc_102C304  +
test byte ptr [ebp+var_C] 4 +
jnz loc_102C287  +
push 32h  +
jmp loc_102C326  +
mov eax [esi+20h] +
add eax edi +
add ebx ebx +
cmp eax ebx +
ja loc_102C28C  +
push 2  +
push ebx  +
call sub_101E275  +
test eax eax +
jbe loc_102C2BB  +
push 2  +
push ebx  +
call sub_101E275  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
jmp loc_102C2BF  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_102C32C  +
mov eax [esi+20h] +
add eax eax +
push eax  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
call memcpy  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
add esp 0Ch +
cmp [ebp+lpMem] 0 +
mov [ecx+0Ch] eax +
mov [esi+24h] ebx +
jz loc_102C302  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edx [ebp+arg_0] +
jmp loc_102C304  +
mov edx ecx +
mov ebx [esi+20h] +
lea eax [edi+edi] +
push eax  +
mov eax [edx+0Ch] +
push [ebp+arg_4]  +
lea eax [eax+ebx*2] +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+20h] edi +
mov eax ebx +
jmp loc_102C32F  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102C39D  +
mov eax [esi+4] +
test eax eax +
jz loc_102C39D  +
mov ebx [ebp+arg_4] +
cmp ebx [eax+18h] +
jnb loc_102C39D  +
cmp [ebp+arg_8] 0 +
jz loc_102C39D  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_102C3AF  +
push 2  +
push 0Ah  +
call sub_101E275  +
test eax eax +
jbe loc_102C38C  +
push 2  +
push 0Ah  +
call sub_101E275  +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
jmp loc_102C38E  +
xor eax eax +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_102C3A5  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax [esi+4] +
mov dword ptr [eax+24h] 0Ah +
push [ebp+arg_8]  +
push esi  +
call sub_102C1F2  +
mov ecx [esi+8] +
mov [ecx+ebx*8+4] eax +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
jmp loc_102C39F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
push dword ptr [ebp+arg_4]  +
xor ebx ebx +
mov [ebp+var_4] ebx +
call sub_101E529  +
mov [ebp+lpMem] eax +
mov edi eax +
cmp [eax] bx +
jz loc_102C452  +
push esi  +
push 2Ch  +
push edi  +
call wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi ebx +
jz loc_102C406  +
xor eax eax +
mov [esi] ax +
push edi  +
lea eax [ebp+var_10] +
push eax  +
call ds:RtlInitUnicodeString  +
lea eax [ebp+arg_4] +
push eax  +
push 0Ah  +
lea eax [ebp+var_10] +
push eax  +
call ds:RtlUnicodeStringToInteger  +
test eax eax +
jl loc_102C451  +
push ebx  +
push ebx  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102C0FF  +
test eax eax +
jz loc_102C451  +
cmp esi ebx +
jz loc_102C44A  +
push 2Ch  +
pop eax  +
lea edi [esi+2] +
mov [esi] ax +
cmp [edi] bx +
jnz loc_102C3F1  +
jmp loc_102C451  +
mov [ebp+var_4] 1 +
pop esi  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
cmp [ebp+lpLibFileName] edi +
jnz loc_102C496  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_102C5C8  +
push 2  +
push edi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov [ebp+hLibModule] eax +
cmp eax edi +
jz loc_102C5C5  +
cmp eax 0FFFFFFFFh +
jz loc_102C5BC  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov [ebp+lpLibFileName] edi +
cmp [ecx+18h] edi +
jbe loc_102C5BC  +
push ebx  +
push esi  +
mov eax [eax+8] +
mov ecx [ebp+lpLibFileName] +
movzx ebx word ptr [eax+ecx*8] +
movzx eax bx +
shr eax 4 +
push 6  +
inc eax  +
push eax  +
push [ebp+hLibModule]  +
call ds:FindResourceW  +
cmp eax edi +
jz loc_102C599  +
push eax  +
push [ebp+hLibModule]  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
cmp eax edi +
jz loc_102C599  +
push eax  +
call ds:LockResource  +
mov esi eax +
cmp esi edi +
jz loc_102C599  +
and ebx 0Fh +
jmp loc_102C51E  +
dec ebx  +
lea esi [esi+edi*2] +
movzx edi word ptr [esi] +
inc esi  +
inc esi  +
test ebx ebx +
jnz loc_102C51A  +
push 2  +
lea ebx [edi+1] +
push ebx  +
call sub_101E275  +
test eax eax +
jbe loc_102C552  +
push 2  +
push ebx  +
call sub_101E275  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
jmp loc_102C554  +
xor ebx ebx +
test ebx ebx +
jz loc_102C597  +
add edi edi +
push edi  +
push esi  +
push ebx  +
call memcpy  +
add esp 0Ch +
push ebx  +
push [ebp+lpLibFileName]  +
xor eax eax +
push [ebp+arg_0]  +
mov [edi+ebx] ax +
call sub_102C33B  +
test eax eax +
jz loc_102C57E  +
inc [ebp+var_4]  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push [ebp+hResData]  +
call ds:FreeResource  +
xor edi edi +
inc [ebp+lpLibFileName]  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov edx [ebp+lpLibFileName] +
cmp edx [ecx+18h] +
jb loc_102C4CA  +
pop esi  +
pop ebx  +
cmp [ebp+var_4] edi +
jbe loc_102C5BC  +
mov [ebp+var_C] 1 +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov eax [ebp+var_C] +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax word ptr [eax] +
movzx ecx word ptr [ecx] +
cmp cx ax +
jnz loc_102C64B  +
xor eax eax +
pop ebp  +
retn   +
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 68h +
jnz loc_102C68C  +
cmp word ptr [eax] 7Fh +
jz loc_102C68C  +
xor eax eax +
inc eax  +
jmp loc_102C68E  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_102C6EC  +
test [ebp+arg_4] 0FFFFFFFDh +
jnz loc_102C6EC  +
push offset sub_102C658  +
push 8  +
push 163h  +
push offset off_1016FE8  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
test eax eax +
jz loc_102C6EC  +
mov ecx [eax+4] +
imul ecx ecx +
add ecx offset dword_1015F38 +
test byte ptr [ebp+arg_4] 2 +
jnz loc_102C6E7  +
push ecx  +
call sub_102C673  +
test eax eax +
jnz loc_102C6EC  +
mov ax [ecx] +
jmp loc_102C6F6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
push edi  +
jl loc_102C790  +
cmp [ebp+arg_4] 0 +
jnz loc_102C71C  +
cmp [ebp+arg_8] 0 +
jnz loc_102C790  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_102C790  +
push offset sub_102C631  +
push 0Ch  +
push 164h  +
lea eax [ebp+arg_0] +
push offset dword_1015F38  +
push eax  +
call bsearch  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_102C790  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_102C758  +
push ecx  +
call sub_102C673  +
test eax eax +
jnz loc_102C790  +
mov edi [ecx+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102C760  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] 0 +
lea esi [eax+1] +
jz loc_102C78C  +
push esi  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102377A  +
test eax eax +
jge loc_102C78C  +
push 7Ah  +
jmp loc_102C792  +
mov eax esi +
jmp loc_102C79A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_102C7D5  +
push edi  +
push esi  +
call sub_102C7E2  +
test eax eax +
jz loc_102C7D5  +
mov edi [esi+3Ch] +
mov eax [esi+34h] +
imul edi edi +
shl eax 4 +
add edi eax +
add edi [esi+38h] +
lea edi [edi+edi+68h] +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_102C7F5  +
cmp edi 68h +
jb loc_102C860  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 43534552h +
jnz loc_102C860  +
cmp dword ptr [esi+4] 524944h +
jnz loc_102C860  +
cmp dword ptr [esi+8] 3 +
jnz loc_102C860  +
mov eax [esi+34h] +
cmp eax 1 +
jb loc_102C824  +
cmp [esi+44h] eax +
ja loc_102C824  +
mov eax [esi+50h] +
cmp eax [esi+38h] +
jbe loc_102C82B  +
push 20010202h  +
jmp loc_102C862  +
mov eax [esi+3Ch] +
cmp eax 1 +
jb loc_102C824  +
cmp [esi+48h] eax +
ja loc_102C824  +
test edi edi +
jz loc_102C84A  +
push esi  +
call sub_102C7A5  +
cmp edi eax +
jnb loc_102C84A  +
push 18h  +
jmp loc_102C862  +
mov eax [esi+48h] +
test eax eax +
jbe loc_102C870  +
cmp [esi+58h] eax +
jge loc_102C860  +
cmp [esi+5Ch] eax +
jge loc_102C860  +
cmp [esi+60h] eax +
jl loc_102C882  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
cmp dword ptr [esi+58h] 0 +
jge loc_102C860  +
cmp dword ptr [esi+5Ch] 0 +
jge loc_102C860  +
cmp dword ptr [esi+60h] 0 +
jge loc_102C860  +
xor eax eax +
inc eax  +
jmp loc_102C86A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_4] +
push esi  +
call sub_102C7E2  +
test eax eax +
jnz loc_102C8A4  +
jmp loc_102C8C7  +
mov eax [ebp+arg_0] +
mov [eax+0Ch] esi +
lea ecx [esi+68h] +
mov [eax+10h] ecx +
mov edx [esi+34h] +
shl edx 5 +
add ecx edx +
mov [eax+14h] ecx +
mov edx [esi+38h] +
lea ecx [ecx+edx*2] +
mov [eax+18h] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jnz loc_102C8E8  +
push 57h  +
call ds:SetLastError  +
jmp loc_102C91C  +
mov esi ds:GetProcessHeap +
push 24h  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102C91C  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push edi  +
call sub_102C88C  +
test eax eax +
jnz loc_102C920  +
push edi  +
push eax  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102C92E  +
mov eax [ebp+arg_8] +
and eax 0FFFFFFFBh +
or dword ptr [edi+8] 0FFFFFFFFh +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor ecx ecx +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
cmp ebx ecx +
jz loc_102CAAA  +
mov eax [ebx+0Ch] +
cmp eax ecx +
jz loc_102CAAA  +
mov esi [ebp+arg_4] +
cmp esi [eax+48h] +
jnb loc_102CAAA  +
mov eax [ebp+arg_C] +
cmp eax ecx +
jz loc_102C979  +
mov [eax] ecx +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_101F47D  +
test eax eax +
jz loc_102CA9D  +
push [ebp+var_4]  +
push esi  +
call sub_1027744  +
test eax eax +
jz loc_102CA9D  +
push edi  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jz loc_102CA95  +
mov esi [ebp+arg_4] +
imul esi esi +
add esi [ebx+18h] +
mov eax [esi+20h] +
mov edi [esi+14h] +
test eax eax +
jl loc_102C9D5  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102CA9C  +
mov eax [esi+28h] +
test eax eax +
jl loc_102C9ED  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102CA9C  +
mov eax [esi+24h] +
test eax eax +
jl loc_102CA05  +
push [ebp+var_4]  +
push eax  +
call sub_1027744  +
test eax eax +
jz loc_102CA9C  +
mov edx [esi+2Ch] +
test dl 1 +
jnz loc_102CA7C  +
mov eax [esi] +
or eax [esi+4] +
jnz loc_102CA1C  +
mov eax [esi+8] +
or eax [esi+0Ch] +
jz loc_102CA5E  +
mov eax [esi+10h] +
test eax eax +
jz loc_102CA5E  +
and eax 0FFFF0000h +
jz loc_102CA31  +
cmp eax 100000h +
jnz loc_102CA5E  +
mov ecx [ebx+0Ch] +
cmp edi [ecx+44h] +
jnb loc_102CA5E  +
mov eax [ebx+10h] +
shl edi 5 +
add eax edi +
cmp dword ptr [eax+18h] 0 +
jnz loc_102CA7C  +
mov edi [esi+1Ch] +
add edi [esi+18h] +
cmp [eax+4] edi +
jb loc_102CA5E  +
mov eax [eax+14h] +
test eax eax +
jl loc_102CA7C  +
cmp eax [ecx+50h] +
jb loc_102CA7C  +
cmp [ebp+arg_8] 0 +
jz loc_102CA6C  +
or edx 8 +
mov [esi+2Ch] edx +
jmp loc_102CA73  +
mov [ebp+var_8] 1 +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_102CA7C  +
inc dword ptr [eax]  +
push [ebp+var_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1027811  +
test eax eax +
jnz loc_102C9B1  +
cmp [ebp+var_8] eax +
jnz loc_102CA9C  +
mov [ebp+var_C] 1 +
pop edi  +
push [ebp+var_4]  +
call sub_1022B7C  +
mov eax [ebp+var_C] +
jmp loc_102CAB4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 43534552h +
jnz loc_102CB11  +
cmp dword ptr [eax+4] 4C5543h +
jnz loc_102CB11  +
cmp dword ptr [eax+8] 0 +
jnz loc_102CB11  +
mov edx [ebp+arg_4] +
test edx edx +
jbe loc_102CAEA  +
cmp edx 20h +
jb loc_102CB11  +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jb loc_102CB08  +
cmp [eax+14h] ecx +
ja loc_102CB08  +
test edx edx +
jz loc_102CB0C  +
mov eax [eax+10h] +
lea eax [eax+ecx*4+10h] +
add eax eax +
cmp edx eax +
jnb loc_102CB0C  +
push 18h  +
jmp loc_102CB13  +
xor eax eax +
inc eax  +
jmp loc_102CB1B  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_4] +
push esi  +
call sub_102CABF  +
test eax eax +
jnz loc_102CB3C  +
jmp loc_102CB54  +
mov eax [ebp+arg_0] +
lea ecx [esi+20h] +
mov [eax+8] ecx +
mov [eax+4] esi +
mov edx [esi+0Ch] +
lea ecx [ecx+edx*8] +
mov [eax+0Ch] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push esi  +
push edi  +
jnz loc_102CB75  +
push 57h  +
call ds:SetLastError  +
jmp loc_102CBA9  +
mov esi ds:GetProcessHeap +
push 28h  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102CBA9  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push edi  +
call sub_102CB24  +
test eax eax +
jnz loc_102CBAD  +
push edi  +
push eax  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102CBB7  +
mov eax [ebp+10h] +
and eax 0FFFFFFFBh +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102CC4B  +
mov eax [esi+4] +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
test eax eax +
jz loc_102CBF0  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+4] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_102CC03  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+14h] 0 +
test byte ptr [esi] 4 +
jz loc_102CC2E  +
mov eax [esi+8] +
test eax eax +
jz loc_102CC1B  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102CC2E  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0Ch] 0 +
test byte ptr [esi] 1 +
jz loc_102CC41  +
mov eax [esi+4] +
test eax eax +
jz loc_102CC41  +
push eax  +
call ds:UnmapViewOfFile  +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
pop edi  +
pop ebx  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jz loc_102CCCE  +
push [ebp+arg_4]  +
call sub_101D46B  +
cmp eax edi +
jnz loc_102CCD8  +
mov esi [ebp+arg_0] +
cmp esi edi +
jz loc_102CCCE  +
mov ebx [esi+4] +
cmp ebx edi +
jz loc_102CCCE  +
cmp [esi+8] edi +
jz loc_102CCCE  +
cmp [esi+0Ch] edi +
jz loc_102CCCE  +
mov ecx [ebx+0Ch] +
cmp ecx 1 +
jb loc_102CCCA  +
mov eax [ebx+14h] +
cmp eax ecx +
ja loc_102CCCA  +
cmp eax edi +
jbe loc_102CCD6  +
mov eax [esi+8] +
mov eax [eax+edi*8] +
mov ecx [esi+0Ch] +
push 1  +
push [ebp+arg_4]  +
lea eax [ecx+eax*2] +
push eax  +
call sub_101CFAD  +
test eax eax +
jz loc_102CCC1  +
inc edi  +
cmp edi [ebx+14h] +
jb loc_102CC9E  +
jmp loc_102CCD6  +
mov eax [esi+8] +
mov eax [eax+edi*8+4] +
jmp loc_102CCD8  +
push 18h  +
jmp loc_102CCD0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
push offset loc_102CB5E  +
xor edi edi +
push edi  +
push [ebp+NumberOfBytesRead]  +
call sub_101CA0B  +
mov esi eax +
cmp esi edi +
jz loc_102CD4A  +
lea eax [ebp+FileInformation] +
push eax  +
push edi  +
push [ebp+NumberOfBytesRead]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_102CD41  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_10] +
push [ebp+NumberOfBytesRead]  +
mov [esi+18h] eax +
mov eax [ebp+var_C] +
mov [esi+20h] ecx +
mov [esi+24h] eax +
call sub_101E529  +
mov [esi+14h] eax +
cmp eax edi +
jnz loc_102CD4A  +
push esi  +
call sub_102CBC2  +
xor eax eax +
jmp loc_102CD4C  +
mov [esi+18h] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpFileName] esi +
jz loc_102CE80  +
cmp [ebp+arg_4] 1 +
jb loc_102CE80  +
cmp [ebp+arg_8] 1 +
jb loc_102CE80  +
mov edi ds:GetProcessHeap +
push 28h  +
push 8  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_102CE92  +
push 20h  +
push 8  +
call edi  +
push eax  +
call ebx  +
mov [esi+4] eax +
test eax eax +
jz loc_102CE88  +
push 8  +
push [ebp+arg_4]  +
call sub_101E275  +
test eax eax +
jbe loc_102CDD6  +
push 8  +
push [ebp+arg_4]  +
call sub_101E275  +
push eax  +
push 8  +
call edi  +
push eax  +
call ebx  +
jmp loc_102CDD8  +
xor eax eax +
mov [esi+8] eax +
test eax eax +
jz loc_102CE88  +
push 2  +
push [ebp+arg_8]  +
call sub_101E275  +
test eax eax +
jbe loc_102CE05  +
push 2  +
push [ebp+arg_8]  +
call sub_101E275  +
push eax  +
push 8  +
call edi  +
push eax  +
call ebx  +
jmp loc_102CE07  +
xor eax eax +
mov [esi+0Ch] eax +
test eax eax +
jz loc_102CE88  +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
mov dword ptr [esi] 6 +
xor edi edi +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_8] +
mov dword ptr [eax] 43534552h +
mov dword ptr [eax+4] 4C5543h +
mov [eax+8] edi +
mov [eax+10h] ecx +
mov [eax+14h] edi +
mov [eax+18h] edi +
lea eax [ebp+FileInformation] +
push eax  +
push edi  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_102CE5C  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_102CE5C  +
xor eax eax +
jmp loc_102CE5F  +
xor eax eax +
inc eax  +
push [ebp+lpFileName]  +
mov [esi+10h] eax +
call sub_101E529  +
mov [esi+14h] eax +
cmp eax edi +
jz loc_102CE88  +
xor eax eax +
mov [esi+20h] eax +
mov [esi+24h] eax +
mov [esi+18h] eax +
mov eax esi +
jmp loc_102CE94  +
push 57h  +
call ds:SetLastError  +
test esi esi +
jz loc_102CE92  +
push esi  +
call sub_102CBC2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 200h  +
push 0Ah  +
push [ebp+lpFileName]  +
call sub_102CD57  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_102CF64  +
cmp [esi+8] edi +
jz loc_102CF64  +
cmp [esi+0Ch] edi +
jz loc_102CF64  +
cmp [ebp+arg_4] 100000h +
jb loc_102CF64  +
cmp [ebp+arg_8] edi +
jz loc_102CF64  +
cmp [ebp+arg_C] edi +
jz loc_102CF64  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101E2DE  +
cmp eax edi +
ja loc_102CF6E  +
mov eax [esi+4] +
mov ecx [eax+14h] +
xor edx edx +
cmp ecx edi +
jbe loc_102CF6C  +
mov ecx [esi+8] +
mov edi ecx +
mov ebx [ebp+arg_4] +
cmp [edi+4] ebx +
jnz loc_102CF29  +
mov ebx [edi] +
cmp ebx [eax+18h] +
jb loc_102CF34  +
inc edx  +
add edi 8 +
cmp edx [eax+14h] +
jb loc_102CF1A  +
jmp loc_102CF6C  +
mov eax [ecx+edx*8] +
mov ecx [esi+0Ch] +
lea eax [ecx+eax*2] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_101E2A4  +
test eax eax +
jl loc_102CF6C  +
mov eax [ebp+arg_8] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102CF53  +
sub eax edx +
sar eax 1 +
inc eax  +
jmp loc_102CF6E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
cmp edi esi +
jz loc_102CFA1  +
push esi  +
push edi  +
call sub_102D01B  +
test eax eax +
jz loc_102CFA1  +
mov eax [edi+1Ch] +
mov ecx [edi+24h] +
lea esi [ecx+eax*4+14h] +
add esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_102D011  +
test byte ptr [esi] 1 +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
jnz loc_102D007  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_102CFE1  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0Ch] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_102CFF4  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_102D007  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+4] 0 +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_102D031  +
cmp esi 28h +
jnb loc_102D031  +
push 0Dh  +
jmp loc_102D06B  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 1 +
jnz loc_102D066  +
mov ecx [eax+1Ch] +
cmp ecx 1 +
jb loc_102D066  +
cmp [eax+18h] ecx +
ja loc_102D066  +
mov ecx [eax+20h] +
cmp ecx [eax+24h] +
ja loc_102D066  +
test esi esi +
jz loc_102D061  +
push eax  +
call sub_102CF7A  +
cmp esi eax +
jnb loc_102D061  +
push 18h  +
jmp loc_102D06B  +
xor eax eax +
inc eax  +
jmp loc_102D073  +
push 20010212h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
push 10h  +
push 8  +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_102D0AC  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_102D0E8  +
push 28h  +
push 8  +
mov dword ptr [ebx] 6 +
call esi  +
push eax  +
call edi  +
mov [ebx+4] eax +
test eax eax +
jnz loc_102D0CA  +
push ebx  +
call sub_102CFAE  +
jmp loc_102D0A0  +
mov ecx [ebp+arg_10] +
mov edi eax +
lea esi [ebp+arg_0] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+4] +
mov [eax+10h] ecx +
mov eax [ebx+4] +
mov dword ptr [eax+14h] 1 +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
lea eax ds:28h[eax*8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_102D120  +
cmp ecx 28h +
jb loc_102D15B  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_102D15B  +
cmp dword ptr [eax] 43534552h +
jnz loc_102D15B  +
cmp dword ptr [eax+4] 544948h +
jnz loc_102D15B  +
cmp dword ptr [eax+8] 1 +
jnz loc_102D15B  +
cmp dword ptr [eax+0Ch] 1 +
jb loc_102D15B  +
test ecx ecx +
jz loc_102D156  +
push eax  +
call sub_102D0F4  +
cmp ecx eax +
jnb loc_102D156  +
push 18h  +
jmp loc_102D15D  +
xor eax eax +
inc eax  +
jmp loc_102D165  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_4] +
push esi  +
call sub_102D10F  +
test eax eax +
jz loc_102D193  +
mov eax [ebp+arg_0] +
mov [eax+0Ch] esi +
add esi 28h +
mov [eax+10h] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jnz loc_102D1B4  +
push 57h  +
call ds:SetLastError  +
jmp loc_102D1F0  +
mov esi ds:GetProcessHeap +
push 14h  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102D1F0  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFFFFFFBh +
push edi  +
mov [edi] eax +
call sub_102D16E  +
test eax eax +
jnz loc_102D1F4  +
push edi  +
push eax  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102D1F6  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+4Ch] 0 +
mov edx 1060h +
mov eax edx +
jnz loc_102D21D  +
mov eax [ecx+1Ch] +
add eax edx +
jmp loc_102D232  +
mov edx [ecx+54h] +
test edx edx +
jbe loc_102D232  +
mov eax [ecx+edx*4+58h] +
mov ecx [ecx+58h] +
lea eax [eax+ecx+1060h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_102D250  +
cmp esi 1060h +
jb loc_102D289  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 43534552h +
jnz loc_102D289  +
cmp dword ptr [eax+4] 474553h +
jnz loc_102D289  +
cmp dword ptr [eax+8] 1 +
jnz loc_102D289  +
mov ecx [eax+1Ch] +
cmp ecx [eax+20h] +
ja loc_102D289  +
test esi esi +
jz loc_102D284  +
push eax  +
call sub_102D201  +
cmp esi eax +
jnb loc_102D284  +
push 18h  +
jmp loc_102D28B  +
xor eax eax +
inc eax  +
jmp loc_102D293  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+var_14] 0 +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_4] +
push esi  +
call sub_102D23B  +
test eax eax +
jz loc_102D465  +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esi+1060h] +
mov [ebx+10h] esi +
mov [ebx+14h] eax +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_102D300  +
mov [ebp+var_14] 1 +
jmp loc_102D464  +
push edi  +
push 18h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+var_1C] edi +
test edi edi +
jz loc_102D463  +
push offset loc_1028CD6  +
push 0  +
call sub_1030420  +
mov [ebp+var_18] eax +
test eax eax +
jz loc_102D45B  +
push 6  +
pop ecx  +
mov esi ebx +
movs   +
mov edi [ebp+var_1C] +
lea eax [ebx+4] +
push eax  +
mov eax [edi+10h] +
push dword ptr [eax+20h]  +
push 0  +
call sub_101DC89  +
mov [ebp+var_10] eax +
mov [ebx+10h] eax +
test eax eax +
jz loc_102D46D  +
mov esi [edi+10h] +
mov eax [esi+50h] +
push [ebp+arg_4]  +
mov [ebp+arg_8] eax +
call sub_102D201  +
mov ecx eax +
mov eax 1060h +
sub ecx eax +
mov [ebp+var_8] ecx +
mov ecx [esi+20h] +
sub ecx eax +
mov [ebp+var_C] ecx +
mov ecx [edi+14h] +
push eax  +
mov [ebp+arg_0] ecx +
mov ecx [ebp+var_10] +
lea edx [ecx+1060h] +
push esi  +
push ecx  +
mov [ebp+arg_4] edx +
call memcpy  +
mov eax [ebp+arg_4] +
and [ebp+var_4] 0 +
mov [ebx+14h] eax +
mov eax [ebx+10h] +
add esp 0Ch +
cmp dword ptr [eax+54h] 0 +
jbe loc_102D445  +
push 5Ch  +
pop ecx  +
mov [ebp+var_10] ecx +
jmp loc_102D3C3  +
mov ecx [ebp+var_10] +
mov eax [ebx+10h] +
mov eax [eax+54h] +
dec eax  +
cmp [ebp+var_4] eax +
mov eax [edi+10h] +
jnz loc_102D3D7  +
mov esi [eax+58h] +
jmp loc_102D3DE  +
mov esi [ecx+eax+4] +
sub esi [ecx+eax] +
cmp esi [ebp+var_8] +
ja loc_102D46D  +
mov eax [ebp+var_C] +
cmp [ebp+arg_8] eax +
jbe loc_102D3F2  +
mov [ebp+arg_8] eax +
mov eax [ebp+arg_8] +
cmp esi eax +
jnz loc_102D40A  +
push eax  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call memcpy  +
add esp 0Ch +
jmp loc_102D420  +
push esi  +
push [ebp+arg_0]  +
push eax  +
push eax  +
push [ebp+arg_4]  +
push [ebp+var_18]  +
call sub_1030300  +
cmp eax [ebp+arg_8] +
jnz loc_102D46D  +
mov eax [ebp+arg_8] +
add [ebp+arg_4] eax +
sub [ebp+var_C] eax +
add [ebp+arg_0] esi +
sub [ebp+var_8] esi +
inc [ebp+var_4]  +
mov eax [ebx+10h] +
mov ecx [ebp+var_4] +
add [ebp+var_10] 4 +
cmp ecx [eax+54h] +
jb loc_102D3C0  +
mov [ebp+var_14] 1 +
push offset loc_102D29D  +
push 0  +
push [ebp+var_18]  +
call sub_1030450  +
push [ebp+var_1C]  +
call sub_10208C0  +
pop edi  +
pop ebx  +
mov eax [ebp+var_14] +
pop esi  +
leave   +
retn 0Ch  +
mov eax [ebx+10h] +
mov ecx [edi+10h] +
mov [ebx+10h] ecx +
and dword ptr [edi+14h] 0 +
mov [edi+10h] eax +
jmp loc_102D44C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jnz loc_102D49B  +
push 57h  +
call ds:SetLastError  +
jmp loc_102D4D7  +
mov esi ds:GetProcessHeap +
push 18h  +
push 8  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_102D4D7  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFFFFFFBh +
push edi  +
mov [edi] eax +
call sub_102D2BD  +
test eax eax +
jnz loc_102D4DB  +
push edi  +
push eax  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102D4DD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D6FC +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D750 +
jmp loc_101C2CC  +
***
mov dh 0FFh +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D7D4 +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D854 +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D8D4 +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D900 +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D934 +
jmp loc_101C2CC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101C23D  +
mov eax offset dword_102D960 +
jmp loc_101C2CC  +
***
fdiv st(6) st +
jmp fword ptr [eax+44h]  +
***
setalc   +
add al [ecx] +
call sub_101C41D  +
pop ecx  +
retn   +
***
mov dword_1034C58 offset off_1011940 +
mov ecx offset dword_1034C58 +
jmp ??1exception@@UAE@XZ  +
***
retf   +
***
jmp loc_102E14A  +
outs   +
js loc_102E1B7  +
jz $+2  +
aaa   +
add [edi] bh +
jz near ptr loc_102E1B7+3  +
jb loc_102E1C4  +
imul ebp [esi+61h] +
pop ecx  +
inc ecx  +
pop eax  +
pop eax  +
pop edx  +
add [ecx+1] bl +
pop edi  +
js loc_102E1CD  +
jo loc_102E1E1  +
pop edi  +
push 6C646E61h  +
jb loc_102E1AA  +
pop edi  +
arpl [edi+6Dh] bp +
ins  dx +
outs   +
outs   +
add [edi] ah +
add [edi+63h] ebx +
outs   +
outs   +
jz near ptr loc_102E1F5+3  +
outs   +
ins  dx +
jo $+3  +
add [esi+6C745203h] al +
dec eax  +
popa   +
jnb loc_102E1FD  +
push ebp  +
outs   +
imul esp [ebx+6Fh] +
jb loc_102E209  +
outs   +
add [bx+si] al +
pushf   +
add edx [edx+74h] +
ins  dx +
dec ecx  +
outs   +
imul esi [ebp+edx*2+6Eh] +
push ebx  +
jz loc_102E229  +
imul ebp [esi+67h] +
push edx  +
jz loc_102E22D  +
inc esi  +
jb loc_102E229  +
dec eax  +
popa   +
jo $+2  +
arpl [edx] ax +
push edx  +
jz loc_102E23B  +
inc ecx  +
ins  dx +
ins  dx +
outs   +
arpl [ecx+74h] sp +
dec eax  +
popa   +
jo $+2  +
and [ebx] eax +
push edx  +
jz near ptr loc_102E24C+1  +
inc ebp  +
js near ptr loc_102E24E+6  +
popa   +
outs   +
inc ebp  +
outs   +
jbe near ptr loc_102E24E+6  +
jb loc_102E25C  +
outs   +
ins  dx +
outs  byte ptr gs:[esi] +
jz loc_102E246  +
jz near ptr loc_102E266+1  +
imul ebp [esi+67h] +
inc ebp  +
jz near ptr loc_102E275+1  +
inc ebp  +
jbe near ptr loc_102E266+1  +
outs   +
jz loc_102E25C  +
jb loc_102E270  +
jz loc_102E26E  +
add ds:77744500h dh +
inc ebp  +
jbe near ptr loc_102E275+2  +
outs   +
jz near ptr loc_102E259+1  +
outs   +
popa   +
bound ebp [ebp+64h] +
add [ebx+eax+52h] bh +
jz near ptr loc_102E28B+2  +
inc edi  +
jz near ptr loc_102E275+3  +
jns near ptr loc_102E299+1  +
jz loc_102E28E  +
ins  dx +
push eax  +
jb near ptr loc_102E291+1  +
jb near ptr loc_102E2A2+1  +
push ebp  +
dec ecx  +
dec esp  +
popa   +
outs   +
jnz near ptr 0E29Ch  +
jnb near ptr 0E23Fh  +
add [eax] bh +
add [ebp+74h] al +
ja loc_102E28B  +
jbe loc_102E2AD  +
outs   +
jz loc_102E2A0  +
outs   +
jb loc_102E2B3  +
imul esi [bp+di+74h] +
inc edi  +
add al 52h +
jz loc_102E2C7  +
push edx  +
inc ecx  +
ins  dx +
ins  dx +
outs   +
arpl [ecx+74h] sp +
dec eax  +
popa   +
jo $+2  +
aaa   +
add [ebp+74h] al +
ja near ptr loc_102E2B3+2  +
jbe near ptr loc_102E2D6+1  +
outs   +
jz loc_102E2C7  +
imul esi gs:[bp+di+74h] +
outs   +
jz loc_102E2E5  +
ins  dx +
ins  dx +
ins byte ptr es:[edi] dx +
ins  dx +
add [ebp+0] ah +
dec esi  +
jz loc_102E2CF  +
jo near ptr loc_102E2F6+3  +
inc edx  +
jnz near ptr loc_102E2F6+3  +
jb near ptr loc_102E2DC+1  +
jb near ptr loc_102E2FB+3  +
add gs:[eax] al +
cwde   +
add [esi+65h] cl +
jz near ptr loc_102E2E5+4  +
jz near ptr loc_102E2EE+1  +
outs   +
imul ebp [esi+49h] +
ins  dx +
popa   +
jz loc_102E31A  +
outs   +
outs   +
add [esi+45h] cl +
push esp  +
inc ecx  +
push eax  +
dec ecx  +
xor esi [edx] +
ins byte ptr es:[edi] dx +
ins  dx +
dec edi  +
jo loc_102E32F  +
outs   +
dec ebx  +
jns near ptr loc_102E313+1  +
js near ptr loc_102E327+1  +
add [edi] bl +
add [ecx+64h] al +
push 75h  +
jnb near ptr loc_102E34D+1  +
push esp  +
outs   +
imul esp [ebp+6Eh] +
jb near ptr loc_102E346+5  +
jbe loc_102E34D  +
ins  dx +
jnb near ptr 0E2EAh  +
pop ss  +
add dl [eax+72h] +
imul esi [esi+69h] +
inc ebx  +
push 6B6365h  +
add [edi+6F6F4C01h] dl +
imul esi [ebp+70h] +
jb near ptr loc_102E36A+6  +
jbe near ptr loc_102E371+1  +
ins  dx +
push esi  +
popa   +
ins  dx +
jnz near ptr loc_102E375+2  +
push edi  +
add bh dh +
add [edi+70h] ecx +
outs  byte ptr gs:[esi] +
push eax  +
jb loc_102E38C  +
arpl [ebp+73h] sp +
jnb near ptr loc_102E375+1  +
outs   +
imul esp [ebp+6Eh] +
add ah bh +
add [edi+70h] ecx +
outs  byte ptr gs:[esi] +
push esp  +
push 64616572h  +
push esp  +
outs   +
imul esp [ebp+6Eh] +
jb $+2  +
inc ebx  +
outs   +
outs   +
jbe near ptr loc_102E3A5+1  +
jb loc_102E3B7  +
push ebx  +
jz near ptr loc_102E3B7+1  +
imul ebp [esi+67h] +
jb near ptr loc_102E3B7+1  +
jz near ptr word_102E3CA  +
inc esp  +
jnb near ptr loc_102E3B7+1  +
jb loc_102E3C0  +
jo loc_102E3CD  +
outs   +
jb near ptr loc_102E3AE+2  +
outs   +
push ebx  +
arpl gs:[ebp+72h] si +
imul esi [ecx+edi*2+44h] +
imul esi [eax+74h] +
add [ebx+2] dl +
push edx  +
inc esi  +
ins  dx +
jnz near ptr loc_102E3ED+1  +
push 79654Bh  +
push edx  +
add dl [edx+65h] +
inc ebp  +
outs   +
jnz loc_102E3F6  +
push esi  +
popa   +
ins  dx +
jnz near ptr loc_102E3F1+2  +
push edi  +
add ah ch +
add cl [ecx+6Eh] +
jz near ptr loc_102E3FA+1  +
jb near ptr loc_102E403+1  +
outs   +
arpl [ebx+65h] bp +
inc ebp  +
js loc_102E403  +
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 75712CB5h  +
***
arpl [ebx+65h] bp +
inc ebx  +
outs   +
ins  dx +
jo near ptr loc_102E41E+3  +
jb loc_102E427  +
inc ebp  +
js near ptr loc_102E427+1  +
push 65676E61h  +
movs   +
add al 53h +
jz loc_102E427  +
outs   +
push 6C646E61h  +
inc ebp  +
js near ptr loc_102E43E+2  +
jo near ptr loc_102E452+2  +
imul ebp [edi+6Eh] +
jb $+3  +
adc eax [edx] +
inc edi  +
jz near ptr loc_102E43B+2  +
outs   +
jnz near ptr loc_102E45A+6  +
dec eax  +
popa   +
outs   +
ins byte ptr es:[edi] dx +
inc ecx  +
jb near ptr loc_102E47C+2  +
push eax  +
jb near ptr loc_102E46E+1  +
outs   +
jb near ptr loc_102E477+2  +
popa   +
outs   +
arpl [ebp+43h] sp +
outs   +
jnz near ptr loc_102E47C+6  +
jz near ptr loc_102E47A+1  +
jb $+2  +
xchg eax edx +
add al [edi+65h] +
jz loc_102E472  +
imul esp [ebx+6Bh] +
jz $+2  +
add ch al +
add [edi+65h] eax +
jz near ptr loc_102E470+1  +
jnz loc_102E4A2  +
jb loc_102E497  +
outs   +
jz near ptr loc_102E488+1  +
push 64616572h  +
dec ecx  +
add fs:[eax] al +
rol dword ptr [ecx] 47h +
jz near ptr loc_102E485+2  +
jnz near ptr loc_102E4B7+1  +
jb loc_102E4AD  +
outs   +
jz loc_102E49B  +
jb loc_102E4BC  +
arpl [ebp+73h] sp +
jnb loc_102E49B  +
add al al +
add al 54h +
jb near ptr loc_102E4C6+1  +
imul ebp [esi+61h] +
outs   +
arpl [ebp+73h] sp +
jnb $+2  +
add al al +
add [edi+65h] eax +
jz near ptr loc_102E4B0+1  +
jnz near ptr loc_102E4DE+4  +
jb loc_102E4D7  +
outs   +
jz loc_102E4C5  +
jb loc_102E4E6  +
arpl [ebp+73h] sp +
jnb $+2  +
rol dword ptr ds:6E61686Eh[edx*2] cl +
ins byte ptr es:[edi] dx +
inc ebp  +
js loc_102E4ED  +
jo loc_102E501  +
imul ebp [edi+6Eh] +
jb $+3  +
add [edx+0] dl +
inc ebx  +
ins  dx +
outs   +
jnb near ptr loc_102E503+1  +
dec eax  +
popa   +
outs   +
ins byte ptr es:[edi] dx +
add cl bh +
add edx [edx+65h] +
ins  dx +
popa   +
jnb near ptr loc_102E50F+5  +
dec ebp  +
jnz loc_102E526  +
js $+3  +
add dh dl +
add al 55h +
outs   +
ins  dx +
popa   +
jo near ptr loc_102E50F+5  +
imul esp [ebp+77h] +
ins  dx +
add gs:[ecx+4] dh +
push ebx  +
jz loc_102E51A  +
popa   +
jnb near ptr loc_102E543+2  +
inc ebp  +
jb near ptr word_102E546  +
outs   +
jb $+2  +
add [esi+3] dl +
dec ebp  +
popa   +
jo near ptr loc_102E52D+7  +
imul esp [ebp+77h] +
ins  dx +
add gs:[eax+3] bh +
dec edi  +
jo near ptr loc_102E54E+4  +
outs   +
inc esi  +
imul ebp [ebp+4Dh] +
outs   +
push edi  +
popa   +
jo loc_102E549  +
jb loc_102E56A  +
add gs:[eax] al +
mov edi 61655203h +
inc esi  +
imul ebp [ebp+0] +
jz loc_102E560  +
imul ebp [ebp+53h] +
js $+2  +
pop dword ptr [eax]  +
inc ebx  +
jb near ptr loc_102E58D+1  +
popa   +
jz loc_102E591  +
inc esi  +
imul ebp [ebp+57h] +
jz near ptr loc_102E57D+1  +
imul ebp [ebp+41h] +
bound esi [ebp+74h] +
jnb near ptr loc_102E599+4  +
add [edi+65h] eax +
jz near ptr loc_102E593+1  +
imul ebp [ebp+41h] +
bound esi [ebp+74h] +
jnb loc_102E5A1  +
js near ptr loc_102E5B4+1  +
sbb eax 70784501h +
popa   +
outs   +
inc ebp  +
outs   +
jbe loc_102E5D5  +
jb near ptr loc_102E5DA+3  +
outs   +
ins  dx +
outs  byte ptr gs:[esi] +
jz loc_102E5C7  +
jz loc_102E5E8  +
imul ebp [esi+67h] +
add al [edi+6Ch] +
outs   +
bound esp [ecx+6Ch] +
dec ebp  +
ins dword ptr es:[edi] dx +
outs   +
jb loc_102E603  +
push ebx  +
jz near ptr loc_102E5EA+4  +
jz near ptr loc_102E603+1  +
jnb loc_102E5D6  +
js $+2  +
add ch bl +
add [ebp+76h] al +
imul esp [ebx+65h] +
outs   +
jz near ptr loc_102E612+3  +
outs   +
ins  dx +
add dh cl +
add [edi+65h] eax +
jz near ptr loc_102E5EA+6  +
imul esi [ebx+6Bh] +
push ebx  +
jo loc_102E617  +
arpl [ebp+45h] sp +
js loc_102E612  +
add ah al +
add [edi+65h] eax +
jz near ptr loc_102E603+2  +
jnz near ptr loc_102E630+6  +
jb near ptr loc_102E62A+1  +
outs   +
jz loc_102E61D  +
push 64616572h  +
dec eax  +
add ecx [edi+ebp*2+63h] +
popa   +
ins  dx +
inc esi  +
jb near ptr loc_102E63E+1  +
add gs:[edx+1] bl +
inc esi  +
ins  dx +
jnz loc_102E655  +
push 77656956h  +
dec edi  +
inc si  +
imul ebp [ebp+0] +
popa   +
jz near ptr loc_102E659+2  +
inc esi  +
imul ebp [ebp+4Dh] +
outs   +
push edi  +
add [edi+1] dl +
inc esi  +
ins  dx +
jnz loc_102E67D  +
push 656C6946h  +
inc edx  +
jnz loc_102E678  +
jb near ptr loc_102E682+7  +
add ds:69725705h ah +
jz near ptr loc_102E682+2  +
inc esi  +
imul ebp [ebp+0] +
jz loc_102E67D  +
jns near ptr loc_102E69B+4  +
jz loc_102E693  +
ins  dx +
push edi  +
imul ebp [esi+64h] +
imul esi [edx+65h] +
jns near ptr loc_102E696+1  +
arpl [eax+eax-62h] si +
add [ebx+72h] al +
popa   +
jz near ptr loc_102E6C2+3  +
dec ebp  +
jnz near ptr loc_102E6D5+2  +
js loc_102E6BD  +
jns loc_102E6D1  +
add [edi+65h] eax +
jz near ptr loc_102E6C2+6  +
imul ebp [ebp+41h] +
bound esi [ebp+74h] +
jnb near ptr loc_102E6E5+2  +
add [ebx+72h] al +
popa   +
jz near ptr loc_102E6FD+2  +
inc esp  +
imul esi [edx+65h] +
jns near ptr loc_102E6FA+1  +
jnb loc_102E733  +
ins dword ptr es:[edi] dx +
inc esp  +
imul esi [edx+65h] +
jns near ptr loc_102E71E+4  +
add [ecx+7A695304h] dh +
outs  dword ptr gs:[esi] +
push dx  +
jnb near ptr loc_102E744+3  +
jnz loc_102E74C  +
arpl [ebp+0] sp +
add [ebx+3] dl +
dec esp  +
outs   +
arpl [ebx+52h] bp +
jnb near ptr loc_102E755+2  +
jnz loc_102E75C  +
arpl [ebp+0] sp +
add [ecx+3] al +
dec esp  +
outs   +
popa   +
push edx  +
jnb loc_102E767  +
jnz loc_102E76C  +
arpl [ebp+0] sp +
add [esi+1] cl +
inc esi  +
imul ebp [esi+64h] +
jnz near ptr loc_102E77B+1  +
arpl [ebp+57h] sp +
add [ebx+74654702h] ah +
push esi  +
jb loc_102E78A  +
imul ebp [edi+6Eh] +
add ecx [edi+ebp*2+61h] +
dec esp  +
imul esp [edx+72h] +
js loc_102E785  +
outs   +
jbe loc_102E79B  +
inc esi  +
imul ebp [ebp+45h] +
add [edi+65h] eax +
jz loc_102E78A  +
imul ebp [ebp+54h] +
mov ebp 73795304h +
jz near ptr loc_102E7B6+2  +
ins  dx +
push esp  +
imul ebp [ebp+65h] +
ins  dx +
push esp  +
imul ebp [ebp+65h] +
inc edi  +
jz near ptr loc_102E7BC+1  +
jns loc_102E7DF  +
jz near ptr loc_102E7CE+5  +
ins  dx +
push esp  +
imul ebp [ebp+65h] +
jb loc_102E7DE  +
push edx  +
jnb loc_102E7ED  +
jnz loc_102E7F2  +
arpl [ebp+0] sp +
add [ebx] bh +
add eax 6C776F74h +
outs   +
ja loc_102E7F2  +
jb $+2  +
add bl dh +
add al 70h +
jb near ptr loc_102E7FC+2  +
outs   +
jz near ptr loc_102E7FC+2  +
add al 5Fh +
ja near ptr loc_102E7FC+6  +
jnb near ptr loc_102E811+5  +
jo near ptr loc_102E811+4  +
add [eax] dh +
add al 5Fh +
ja loc_102E810  +
jz loc_102E811  +
outs   +
jbe $+2  +
add [ebx+5] bl +
ja near ptr loc_102E811+6  +
jnb near ptr loc_102E822+2  +
arpl [ebp+70h] bp +
add [eax+5] ah +
ja near ptr loc_102E820+1  +
jnb near ptr loc_102E82E+4  +
arpl [eax+72h] bp +
add ds:55744E02h ah +
outs   +
ins  dx +
popa   +
jo near ptr loc_102E822+2  +
imul esp [ebp+77h] +
arpl [ecx+ebp*2+6Fh] si +
outs   +
adc al 4 +
push edx  +
jz near ptr byte_102E84D  +
dec esi  +
jz near ptr byte_102E837  +
jz near ptr byte_102E847  +
jz near ptr byte_102E85D  +
jnb near ptr word_102E83E  +
outs   +
inc esp  +
outs   +
jnb near ptr byte_102E834  +
jb near ptr byte_102E863  +
outs   +
jb $+2  +
dec esp  +
add [esi+74h] ecx +
dec ebp  +
popa   +
jo near ptr word_102E852  +
imul esp [ebp+77h] +
arpl [ecx+ebp*2+6Fh] si +
outs   +
outs   +
imul esp [ebx+6Fh] +
jb near ptr byte_102E883  +
outs   +
push esp  +
outs   +
dec ecx  +
outs   +
jz near ptr byte_102E887  +
jb near ptr 0E826h  +
add byte ptr [edx] 73h +
popa   +
jb near ptr byte_102E891  +
push 0  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword_10355E8 0 +
jnz loc_102F0B6  +
push ebx  +
push esi  +
push edi  +
mov ecx 13579BDFh +
mov edx 87654321h +
mov [ebp+var_C] offset word_1034FE8 +
lea esp [esp+0] +
mov edi edx +
mov esi ecx +
xor eax eax +
mov [ebp+var_8] 20h +
jmp loc_102F053  +
mov edi [ebp+var_4] +
sub eax 61C88647h +
add edi eax +
mov [ebp+var_4] edi +
lea edi [edi+edx*8] +
mov ebx edx +
sar ebx 5 +
add esi eax +
add ebx esi +
xor ebx edi +
lea edi [eax+edx] +
xor ebx edi +
add ecx ebx +
mov ebx ecx +
sar ebx 5 +
add ebx [ebp+var_4] +
lea edi [esi+ecx*8] +
xor edi ebx +
lea ebx [eax+ecx] +
xor edi ebx +
add edx edi +
mov edi 1 +
sub [ebp+var_8] edi +
jnz loc_102F050  +
mov eax [ebp+var_C] +
add ecx edx +
mov esi ecx +
and esi 7FFFh +
mov [eax] si +
add eax 2 +
mov [ebp+var_C] eax +
cmp eax offset dword_10355E8 +
jb loc_102F040  +
mov dword_10355E8 edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi eax +
mov eax [edi-40h] +
mov ecx [edi-10h] +
mov [ebp+var_4] eax +
mov eax [edi-14h] +
sub ecx 2 +
xor esi esi +
cmp eax ecx +
jnb loc_102F120  +
push ebx  +
movzx edx byte ptr [eax+2] +
movzx ebx byte ptr [eax] +
movzx ebx word_1034FE8[ebx*2] +
movzx edx word_10353E8[edx*2] +
xor edx ebx +
movzx ebx byte ptr [eax+1] +
movzx ebx word_10351E8[ebx*2] +
xor edx ebx +
mov ebx [ebp+var_4] +
mov bx [ebx+edx*2] +
mov [edi+esi*2] bx +
mov ebx [ebp+var_4] +
mov [ebx+edx*2] si +
inc eax  +
inc esi  +
cmp eax ecx +
jb loc_102F0E0  +
pop ebx  +
add ecx 2 +
cmp eax ecx +
jnb loc_102F141  +
sub ecx eax +
xor eax eax +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
lea edi [edi+esi*2] +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push esi  +
mov esi [ecx-38h] +
mov edx [ecx-30h] +
lea eax [edx+edx] +
or eax 1 +
test edx edx +
jge loc_102F173  +
mov edx [ecx-34h] +
mov [edx] eax +
mov [ecx-34h] esi +
add esi 4 +
mov eax 1 +
mov [ecx-30h] eax +
cmp esi [ecx-38h] +
jz loc_102F156  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
mov edx [ebp+8] +
mov esi [edx-14h] +
mov eax [edx-1Ch] +
add eax esi +
mov [edx-4] eax +
add esi [edx-24h] +
mov ebx [edx-38h] +
mov ebp [edx-30h] +
cmp esi [edx-14h] +
jnz loc_102F1C4  +
mov al [esi] +
inc ebx  +
inc esi  +
mov [ebx-1] al +
add ebp ebp +
jb loc_102F32B  +
cmp esi [edx-4] +
jnb loc_102F36A  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
lea ecx [ecx+eax*4] +
lea eax [edi+ecx*2] +
lea ecx [esi-1FFFh] +
mov edi [edx+eax*4] +
mov [edx+eax*4] esi +
cmp edi ecx +
js loc_102F1B5  +
test edi edi +
jz loc_102F1B5  +
mov eax [esi] +
sub eax [edi] +
jz loc_102F24E  +
test eax 0FFFFFFh +
jnz loc_102F1B5  +
mov ecx 3 +
sub edi esi +
lea eax [esi+ecx] +
not edi  +
add ebx 2 +
shl edi 3 +
inc esi  +
lea edi [edi+ecx-3] +
stc   +
mov [ebx-2] di +
adc ebp ebp +
jb loc_102F2FC  +
cmp eax [edx-8] +
ja loc_102F347  +
push ebp  +
mov ebp eax +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
lea ecx [ecx+eax*4] +
lea eax [edi+ecx*2] +
mov [edx+eax*4] esi +
inc esi  +
cmp esi ebp +
jnz loc_102F22F  +
pop ebp  +
jmp loc_102F1C4  +
***
mov eax [esi+4] +
sub eax [edi+4] +
jz loc_102F28C  +
bsf ecx eax +
sub edi esi +
shr ecx 3 +
not edi  +
add ecx 4 +
add ebx 2 +
lea eax [esi+ecx] +
shl edi 3 +
inc esi  +
lea edi [edi+ecx-3] +
stc   +
mov [ebx-2] di +
adc ebp ebp +
jnb loc_102F223  +
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F223  +
***
mov eax esi +
mov ecx [edx-10h] +
add esi 8 +
add edi 8 +
sub ecx esi +
cmps   +
jz loc_102F340  +
lea ecx [esi-1] +
sub edi esi +
sub ecx eax +
mov esi eax +
cmp ecx 0Ah +
jb loc_102F206  +
not edi  +
lea eax [esi+ecx] +
shl edi 3 +
sub ecx 0Ah +
add edi 7 +
push eax  +
mov [ebx] di +
mov al cl +
cmp ecx 0Fh +
jbe loc_102F2CE  +
mov al 0Fh +
mov edi [edx-54h] +
add ebx 2 +
test edi edi +
jnz loc_102F2E0  +
mov [edx-54h] ebx +
mov [ebx] al +
inc ebx  +
jmp loc_102F2EC  +
shl al 4 +
mov dword ptr [edx-54h] 0 +
or [edi] al +
sub ecx 0Fh +
jnb loc_102F311  +
inc esi  +
pop eax  +
stc   +
adc ebp ebp +
jnb loc_102F223  +
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F223  +
***
mov [ebx] cl +
inc ebx  +
cmp ecx 0FFh +
jb loc_102F2F1  +
add ecx 16h +
mov byte ptr [ebx-1] 0FFh +
mov [ebx] cx +
add ebx 2 +
jmp loc_102F2F1  +
***
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F1C4  +
***
inc esi  +
inc edi  +
jmp loc_102F2A1  +
***
push eax  +
jmp loc_102F35F  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
lea ecx [ecx+eax*4] +
lea eax [edi+ecx*2] +
mov [edx+eax*4] esi +
inc esi  +
cmp esi [edx-8] +
jb loc_102F34A  +
pop esi  +
jmp loc_102F1C4  +
***
mov [edx-38h] ebx +
mov [edx-30h] ebp +
sub esi [edx-14h] +
mov [edx-24h] esi +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
mov edx [ebp+8] +
mov esi [edx-14h] +
mov eax [edx-1Ch] +
add eax esi +
mov [edx-4] eax +
add esi [edx-24h] +
mov ebx [edx-38h] +
mov ebp [edx-30h] +
cmp esi [edx-14h] +
jnz loc_102F3C4  +
mov al [esi] +
inc ebx  +
inc esi  +
mov [ebx-1] al +
add ebp ebp +
jb loc_102F56E  +
cmp esi [edx-4] +
jnb loc_102F5C9  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
movzx eax word_1034FE8[eax*2] +
movzx ecx word_10351E8[ecx*2] +
movzx edi word_10353E8[edi*2] +
xor eax ecx +
xor eax edi +
mov ecx [edx-14h] +
movzx di word ptr [edx+eax*2] +
sub esi ecx +
add edi ecx +
mov [edx+eax*2] si +
add esi ecx +
lea ecx [esi-1FFFh] +
cmp edi ecx +
js loc_102F3B5  +
test edi edi +
jz loc_102F3B5  +
mov eax [esi] +
sub eax [edi] +
jz loc_102F48E  +
test eax 0FFFFFFh +
jnz loc_102F3B5  +
mov ecx 3 +
sub edi esi +
lea eax [esi+ecx] +
not edi  +
add ebx 2 +
shl edi 3 +
inc esi  +
lea edi [edi+ecx-3] +
stc   +
mov [ebx-2] di +
adc ebp ebp +
jb loc_102F53F  +
cmp eax [edx-8] +
ja loc_102F58A  +
push ebp  +
push eax  +
mov ebp esi +
sub ebp [edx-14h] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
movzx eax word_1034FE8[eax*2] +
movzx ecx word_10351E8[ecx*2] +
movzx edi word_10353E8[edi*2] +
xor eax ecx +
xor eax edi +
mov [edx+eax*2] bp +
inc esi  +
inc ebp  +
cmp esi [esp] +
jnz loc_102F455  +
pop eax  +
pop ebp  +
jmp loc_102F3C4  +
***
mov eax [esi+4] +
sub eax [edi+4] +
jz loc_102F4CF  +
bsf ecx eax +
sub edi esi +
shr ecx 3 +
not edi  +
add ecx 4 +
add ebx 2 +
lea eax [esi+ecx] +
shl edi 3 +
inc esi  +
lea edi [edi+ecx-3] +
stc   +
mov [ebx-2] di +
adc ebp ebp +
jnb loc_102F445  +
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F445  +
***
mov eax esi +
mov ecx [edx-10h] +
add esi 8 +
add edi 8 +
sub ecx esi +
cmps   +
jz loc_102F583  +
lea ecx [esi-1] +
sub edi esi +
sub ecx eax +
mov esi eax +
cmp ecx 0Ah +
jb loc_102F428  +
not edi  +
lea eax [esi+ecx] +
shl edi 3 +
sub ecx 0Ah +
add edi 7 +
push eax  +
mov [ebx] di +
mov al cl +
cmp ecx 0Fh +
jbe loc_102F511  +
mov al 0Fh +
mov edi [edx-54h] +
add ebx 2 +
test edi edi +
jnz loc_102F523  +
mov [edx-54h] ebx +
mov [ebx] al +
inc ebx  +
jmp loc_102F52F  +
shl al 4 +
mov dword ptr [edx-54h] 0 +
or [edi] al +
sub ecx 0Fh +
jnb loc_102F554  +
inc esi  +
pop eax  +
stc   +
adc ebp ebp +
jnb loc_102F445  +
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F445  +
***
mov [ebx] cl +
inc ebx  +
cmp ecx 0FFh +
jb loc_102F534  +
add ecx 16h +
mov byte ptr [ebx-1] 0FFh +
mov [ebx] cx +
add ebx 2 +
jmp loc_102F534  +
***
mov ecx [edx-34h] +
mov [edx-34h] ebx +
add ebx 4 +
mov [ecx] ebp +
mov ebp 1 +
jmp loc_102F3C4  +
***
inc esi  +
inc edi  +
jmp loc_102F4E4  +
***
push eax  +
jmp loc_102F5BE  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edi byte ptr [esi+2] +
movzx eax word_1034FE8[eax*2] +
movzx ecx word_10351E8[ecx*2] +
movzx edi word_10353E8[edi*2] +
xor eax ecx +
xor eax edi +
mov ecx esi +
sub ecx [edx-14h] +
mov [edx+eax*2] cx +
inc esi  +
cmp esi [edx-8] +
jb loc_102F58D  +
pop esi  +
jmp loc_102F3C4  +
***
mov [edx-38h] ebx +
mov [edx-30h] ebp +
sub esi [edx-14h] +
mov [edx-24h] esi +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+8] +
push ebx  +
push esi  +
mov esi [ecx-38h] +
push edi  +
mov [ebp+8] esi +
mov edx [ecx-24h] +
cmp word ptr [ecx+edx*2] 0 +
mov [ebp-4] edx +
jz loc_102F6D5  +
mov ebx [ecx-14h] +
mov dword ptr [ecx-2Ch] 2 +
mov [ecx] dx +
movzx eax word ptr [ecx+edx*2] +
movzx edx word ptr [ebx+edx+1] +
movzx edi word ptr [ecx+eax*2] +
cmp [ebx+eax+1] dx +
jz loc_102F688  +
movzx eax word ptr [ecx+edi*2] +
cmp [ebx+edi+1] dx +
jz loc_102F68A  +
movzx edi word ptr [ecx+eax*2] +
cmp [ebx+eax+1] dx +
jz loc_102F688  +
movzx eax word ptr [ecx+edi*2] +
cmp [ebx+edi+1] dx +
jz loc_102F68A  +
movzx edi word ptr [ecx+eax*2] +
cmp [ebx+eax+1] dx +
jz loc_102F688  +
movzx eax word ptr [ecx+edi*2] +
cmp [ebx+edi+1] dx +
jz loc_102F68A  +
movzx edi word ptr [ecx+eax*2] +
cmp [ebx+eax+1] dx +
jz loc_102F688  +
movzx eax word ptr [ecx+edi*2] +
cmp [ebx+edi+1] dx +
jz loc_102F68A  +
cmp [ebx+eax+1] dx +
jnz loc_102F6C6  +
mov edi eax +
mov eax [ebp-4] +
cmp edi eax +
jz loc_102F6C6  +
sub eax edi +
cmp eax 2000h +
jge loc_102F6C6  +
mov eax ebx +
mov edx [eax+edi] +
lea esi [eax+edi] +
add eax [ebp-4] +
xor edx [eax] +
jz loc_102F709  +
test edx 0FFFFFFh +
jnz loc_102F6C3  +
add eax 3 +
cmp eax [ecx-10h] +
ja loc_102F6C3  +
mov dword ptr [ecx-2Ch] 3 +
mov [ecx-28h] edi +
mov esi [ebp+8] +
mov eax [ecx-2Ch] +
cmp eax 2 +
jg loc_102F829  +
mov edx [ebp-4] +
mov eax [ecx-14h] +
mov dl [edx+eax] +
mov [esi] dl +
mov eax [ecx-30h] +
inc esi  +
mov [ebp+8] esi +
lea edx [eax+eax] +
test eax eax +
jge loc_102F6FE  +
mov eax [ecx-34h] +
mov [eax] edx +
mov [ecx-34h] esi +
add esi 4 +
mov [ebp+8] esi +
mov edx 1 +
inc dword ptr [ecx-24h]  +
mov [ecx-30h] edx +
jmp loc_102F8D7  +
cmp eax [ecx-0Ch] +
ja loc_102F7F8  +
mov dl [eax+4] +
cmp dl [esi+4] +
jnz loc_102F7B4  +
mov dl [eax+5] +
cmp dl [esi+5] +
jnz loc_102F7B9  +
mov dl [eax+6] +
cmp dl [esi+6] +
jnz loc_102F7BE  +
mov dl [eax+7] +
cmp dl [esi+7] +
jnz loc_102F7C3  +
mov dl [eax+8] +
cmp dl [esi+8] +
jnz loc_102F7C8  +
mov dl [eax+9] +
cmp dl [esi+9] +
jnz loc_102F7CD  +
mov dl [eax+0Ah] +
cmp dl [esi+0Ah] +
jnz loc_102F7D2  +
mov dl [eax+0Bh] +
cmp dl [esi+0Bh] +
jnz loc_102F7D7  +
mov dl [eax+0Ch] +
cmp dl [esi+0Ch] +
jnz loc_102F7DC  +
mov dl [eax+0Dh] +
cmp dl [esi+0Dh] +
jnz loc_102F7E1  +
mov dl [eax+0Eh] +
cmp dl [esi+0Eh] +
jnz loc_102F7E6  +
mov dl [eax+0Fh] +
cmp dl [esi+0Fh] +
jnz loc_102F7EB  +
add eax 10h +
add esi 10h +
cmp eax [ecx-0Ch] +
ja loc_102F7F8  +
mov dl [eax] +
cmp dl [esi] +
jnz loc_102F80D  +
mov dl [eax+1] +
cmp dl [esi+1] +
jnz loc_102F7F0  +
mov dl [eax+2] +
cmp dl [esi+2] +
jnz loc_102F7F3  +
mov dl [eax+3] +
cmp dl [esi+3] +
jz loc_102F712  +
add eax 3 +
jmp loc_102F80D  +
add eax 4 +
jmp loc_102F80D  +
add eax 5 +
jmp loc_102F80D  +
add eax 6 +
jmp loc_102F80D  +
add eax 7 +
jmp loc_102F80D  +
add eax 8 +
jmp loc_102F80D  +
add eax 9 +
jmp loc_102F80D  +
add eax 0Ah +
jmp loc_102F80D  +
add eax 0Bh +
jmp loc_102F80D  +
add eax 0Ch +
jmp loc_102F80D  +
add eax 0Dh +
jmp loc_102F80D  +
add eax 0Eh +
jmp loc_102F80D  +
add eax 0Fh +
jmp loc_102F80D  +
inc eax  +
jmp loc_102F80D  +
add eax 2 +
jmp loc_102F80D  +
cmp eax [ecx-10h] +
jz loc_102F80D  +
lea ecx [ecx+0] +
mov dl [eax] +
cmp dl [esi] +
jnz loc_102F80D  +
inc eax  +
inc esi  +
cmp eax [ecx-10h] +
jnz loc_102F800  +
mov esi [ebp+8] +
sub eax ebx +
sub eax [ebp-4] +
cmp eax 2 +
jle loc_102F6C6  +
mov [ecx-2Ch] eax +
mov [ecx-28h] edi +
jmp loc_102F6C6  +
***
lea edx [eax-3] +
mov eax [ebp-4] +
sub eax [ecx-28h] +
cmp edx 7 +
lea eax ds:0FFFFFFF8h[eax*8] +
jge loc_102F84A  +
or eax edx +
mov [esi] al +
sar eax 8 +
mov [esi+1] al +
jmp loc_102F8AB  +
or eax 7 +
mov [esi] al +
sar eax 8 +
mov [esi+1] al +
mov edi [ecx-54h] +
sub edx 7 +
add esi 2 +
mov eax edx +
test edi edi +
jnz loc_102F876  +
cmp edx 0Fh +
mov [ecx-54h] esi +
jl loc_102F871  +
mov eax 0Fh +
mov [esi] al +
inc esi  +
jmp loc_102F88C  +
cmp edx 0Fh +
jl loc_102F880  +
mov eax 0Fh +
shl al 4 +
or [edi] al +
mov dword ptr [ecx-54h] 0 +
sub edx 0Fh +
js loc_102F8AE  +
mov [esi] dl +
inc esi  +
cmp edx 0FFh +
jl loc_102F8AE  +
add edx 16h +
mov [esi] dl +
sar edx 8 +
mov byte ptr [esi-1] 0FFh +
mov [esi+1] dl +
add esi 2 +
mov edx [ecx-30h] +
lea eax [edx+edx] +
or eax 1 +
test edx edx +
jge loc_102F8CB  +
mov edx [ecx-34h] +
mov [edx] eax +
mov [ecx-34h] esi +
add esi 4 +
mov eax 1 +
mov [ecx-30h] eax +
mov eax [ecx-2Ch] +
add [ecx-24h] eax +
mov [ebp+8] esi +
mov edx [ecx-24h] +
cmp edx [ecx-1Ch] +
jl loc_102F602  +
pop edi  +
mov [ecx-38h] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8 +
mov ecx [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi [ecx-38h] +
mov [ebp+8] edi +
jmp loc_102F920  +
mov esi [ecx-24h] +
cmp word ptr [ecx+esi*2] 0 +
jz loc_102FB76  +
mov eax [ecx-50h] +
mov ebx [ecx-14h] +
mov dword ptr [ecx-2Ch] 2 +
mov [ebp-8] eax +
mov edi esi +
mov [ecx] si +
mov edx [ecx-2Ch] +
movzx eax word ptr [ecx+edi*2] +
lea edx [ebx+edx-1] +
movzx esi word ptr [edx+esi] +
sub dword ptr [ebp-8] 1 +
js loc_102FB68  +
movzx edi word ptr [ecx+eax*2] +
cmp [edx+eax] si +
jz loc_102F9AE  +
movzx eax word ptr [ecx+edi*2] +
cmp [edx+edi] si +
jz loc_102F9B0  +
movzx edi word ptr [ecx+eax*2] +
cmp [edx+eax] si +
jz loc_102F9AE  +
movzx eax word ptr [ecx+edi*2] +
cmp [edx+edi] si +
jz loc_102F9B0  +
movzx edi word ptr [ecx+eax*2] +
cmp [edx+eax] si +
jz loc_102F9AE  +
movzx eax word ptr [ecx+edi*2] +
cmp [edx+edi] si +
jz loc_102F9B0  +
movzx edi word ptr [ecx+eax*2] +
cmp [edx+eax] si +
jz loc_102F9AE  +
movzx eax word ptr [ecx+edi*2] +
cmp [edx+edi] si +
jnz loc_102F952  +
jmp loc_102F9B0  +
mov edi eax +
mov edx [ecx-24h] +
cmp edi edx +
jz loc_102FB68  +
mov eax edx +
sub eax edi +
cmp eax 2000h +
jge loc_102FB68  +
mov ebx [ecx-14h] +
mov eax ebx +
lea esi [eax+edi] +
add eax edx +
mov edx [esi] +
xor edx [eax] +
jz loc_102FA0E  +
test edx 0FFFFFFh +
jnz loc_102FAF8  +
cmp dword ptr [ecx-2Ch] 2 +
jg loc_102FAF8  +
add eax 3 +
cmp eax [ecx-10h] +
ja loc_102FAF8  +
mov esi [ecx-24h] +
mov dword ptr [ecx-2Ch] 3 +
mov [ecx-28h] edi +
jmp loc_102F943  +
***
mov edx [ecx-0Ch] +
cmp eax edx +
ja loc_102FB44  +
lea esp [esp+0] +
mov bl [eax+4] +
cmp bl [esi+4] +
jnz loc_102FB00  +
mov bl [eax+5] +
cmp bl [esi+5] +
jnz loc_102FB05  +
mov bl [eax+6] +
cmp bl [esi+6] +
jnz loc_102FB0A  +
mov bl [eax+7] +
cmp bl [esi+7] +
jnz loc_102FB0F  +
mov bl [eax+8] +
cmp bl [esi+8] +
jnz loc_102FB14  +
mov bl [eax+9] +
cmp bl [esi+9] +
jnz loc_102FB19  +
mov bl [eax+0Ah] +
cmp bl [esi+0Ah] +
jnz loc_102FB1E  +
mov bl [eax+0Bh] +
cmp bl [esi+0Bh] +
jnz loc_102FB23  +
mov bl [eax+0Ch] +
cmp bl [esi+0Ch] +
jnz loc_102FB28  +
mov bl [eax+0Dh] +
cmp bl [esi+0Dh] +
jnz loc_102FB2D  +
mov bl [eax+0Eh] +
cmp bl [esi+0Eh] +
jnz loc_102FB32  +
mov bl [eax+0Fh] +
cmp bl [esi+0Fh] +
jnz loc_102FB37  +
add eax 10h +
add esi 10h +
cmp eax edx +
ja loc_102FB44  +
mov bl [eax] +
cmp bl [esi] +
jnz loc_102FAE3  +
mov bl [eax+1] +
cmp bl [esi+1] +
jnz loc_102FB3C  +
mov bl [eax+2] +
cmp bl [esi+2] +
jnz loc_102FB3F  +
mov bl [eax+3] +
cmp bl [esi+3] +
jz loc_102FA20  +
add eax 3 +
mov ebx [ecx-14h] +
mov edx [ecx-24h] +
sub eax ebx +
sub eax edx +
cmp eax [ecx-2Ch] +
jle loc_102FAF8  +
mov [ecx-2Ch] eax +
mov [ecx-28h] edi +
mov esi [ecx-24h] +
jmp loc_102F943  +
***
add eax 4 +
jmp loc_102FAE3  +
***
add eax 5 +
jmp loc_102FAE3  +
***
add eax 6 +
jmp loc_102FAE3  +
***
add eax 7 +
jmp loc_102FAE3  +
***
add eax 8 +
jmp loc_102FAE3  +
***
add eax 9 +
jmp loc_102FAE3  +
***
add eax 0Ah +
jmp loc_102FAE3  +
***
add eax 0Bh +
jmp loc_102FAE3  +
***
add eax 0Ch +
jmp loc_102FAE3  +
***
add eax 0Dh +
jmp loc_102FAE3  +
***
add eax 0Eh +
jmp loc_102FAE3  +
***
add eax 0Fh +
jmp loc_102FAE3  +
***
inc eax  +
jmp loc_102FAE3  +
***
add eax 2 +
jmp loc_102FAE3  +
***
mov edx [ecx-10h] +
cmp eax edx +
jz loc_102FB55  +
mov bl [eax] +
cmp bl [esi] +
jnz loc_102FAE3  +
inc eax  +
inc esi  +
jmp loc_102FB47  +
***
sub eax [ecx-14h] +
mov edx [ecx-24h] +
sub eax edx +
cmp eax [ecx-2Ch] +
jle loc_102FB68  +
mov [ecx-2Ch] eax +
mov [ecx-28h] edi +
mov eax [ecx-2Ch] +
cmp eax 2 +
jg loc_102FBAA  +
mov esi [ecx-24h] +
mov edi [ebp+8] +
mov edx [ecx-14h] +
mov al [esi+edx] +
mov [edi] al +
mov eax [ecx-30h] +
inc edi  +
mov [ebp+8] edi +
lea edx [eax+eax] +
test eax eax +
jge loc_102FB9F  +
mov eax [ecx-34h] +
mov [eax] edx +
mov [ecx-34h] edi +
add edi 4 +
mov [ebp+8] edi +
mov edx 1 +
inc dword ptr [ecx-24h]  +
mov [ecx-30h] edx +
jmp loc_102FC5D  +
mov esi [ebp+8] +
lea edx [eax-3] +
mov eax [ecx-24h] +
sub eax [ecx-28h] +
cmp edx 7 +
lea eax ds:0FFFFFFF8h[eax*8] +
jge loc_102FBCE  +
or eax edx +
mov [esi] al +
sar eax 8 +
mov [esi+1] al +
jmp loc_102FC2F  +
or eax 7 +
mov [esi] al +
sar eax 8 +
mov [esi+1] al +
mov edi [ecx-54h] +
sub edx 7 +
add esi 2 +
mov eax edx +
test edi edi +
jnz loc_102FBFA  +
cmp edx 0Fh +
mov [ecx-54h] esi +
jl loc_102FBF5  +
mov eax 0Fh +
mov [esi] al +
inc esi  +
jmp loc_102FC10  +
cmp edx 0Fh +
jl loc_102FC04  +
mov eax 0Fh +
shl al 4 +
or [edi] al +
mov dword ptr [ecx-54h] 0 +
sub edx 0Fh +
js loc_102FC32  +
mov [esi] dl +
inc esi  +
cmp edx 0FFh +
jl loc_102FC32  +
add edx 16h +
mov [esi] dl +
sar edx 8 +
mov byte ptr [esi-1] 0FFh +
mov [esi+1] dl +
add esi 2 +
mov edx [ecx-30h] +
lea eax [edx+edx] +
or eax 1 +
test edx edx +
jge loc_102FC4F  +
mov edx [ecx-34h] +
mov [edx] eax +
mov [ecx-34h] esi +
add esi 4 +
mov eax 1 +
mov [ecx-30h] eax +
mov eax [ecx-2Ch] +
add [ecx-24h] eax +
mov [ebp+8] esi +
mov edi esi +
mov edx [ecx-24h] +
cmp edx [ecx-1Ch] +
jl loc_102F920  +
mov [ecx-38h] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_102FC93  +
push esi  +
call [ebp+arg_0]  +
pop ebp  +
retn 0Ch  +
push edi  +
mov edi [esi-1Ch] +
mov eax [esi-24h] +
mov ecx eax +
sub ecx [esi-18h] +
cmp ecx ebx +
jl loc_102FCBB  +
mov edx eax +
shl edx 4 +
sub edx eax +
mov eax [ebp+arg_8] +
sar edx 4 +
push edx  +
push eax  +
call [ebp+arg_4]  +
mov eax [esi-24h] +
mov [esi-18h] eax +
cmp eax edi +
mov [esi-1Ch] edi +
jge loc_102FCD8  +
mov eax [esi-18h] +
mov ecx edi +
sub ecx eax +
cmp ecx ebx +
jle loc_102FCD2  +
add eax ebx +
mov [esi-1Ch] eax +
push esi  +
call [ebp+arg_0]  +
jmp loc_102FC97  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_102FF2B  +
cmp dword ptr [ebx] 53E7C0DEh +
jnz loc_102FF2B  +
mov eax [ebp+arg_10] +
lea ecx [eax-1] +
push edi  +
cmp ecx [ebx+10h] +
ja loc_102FF25  +
cmp eax 8 +
jle loc_102FF25  +
cmp [ebp+arg_8] 8 +
jl loc_102FF25  +
cmp [ebp+arg_4] 0 +
jz loc_102FF25  +
mov edi [ebp+arg_C] +
test edi edi +
jz loc_102FF25  +
push esi  +
mov esi [ebx+8] +
push 54h  +
lea edx [esi-54h] +
push 0  +
push edx  +
call memset  +
mov eax [ebx+0Ch] +
mov [esi-38h] eax +
mov edx [esi-38h] +
mov [esi-40h] eax +
mov eax [ebx+14h] +
mov [esi-50h] eax +
mov eax [ebp+arg_10] +
mov [esi-1Ch] eax +
mov [esi-20h] eax +
add eax edi +
lea ecx [eax-10h] +
mov [esi-10h] eax +
add eax 0FFFFFFFDh +
mov [esi-8] eax +
mov eax [ebp+arg_4] +
mov [esi-48h] eax +
mov [esi-44h] eax +
mov eax [esi-50h] +
add esp 0Ch +
mov [esi-14h] edi +
mov [esi-0Ch] ecx +
mov dword ptr [esi-24h] 0 +
mov [esi-3Ch] edx +
mov edi offset loc_102F190 +
test eax eax +
jg loc_102FDB9  +
push 2BD8h  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
jmp loc_102FDFE  +
cmp eax 1 +
jnz loc_102FDD5  +
push 10000h  +
push 0  +
push esi  +
mov edi offset loc_102F390 +
call memset  +
add esp 0Ch +
jmp loc_102FDFE  +
cmp eax 3 +
mov edi offset loc_102F5F0 +
jl loc_102FDE4  +
mov edi offset loc_102F900 +
mov eax [esi-40h] +
push 10000h  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov eax esi +
call sub_102F0C0  +
mov ebx [ebp+arg_1C] +
test ebx ebx +
jle loc_102FE0A  +
cmp ebx [ebp+arg_10] +
jle loc_102FE0D  +
mov ebx [ebp+arg_10] +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_102FE23  +
mov ecx [ebp+arg_18] +
push 0  +
push ecx  +
mov dword ptr [esi-18h] 0 +
call eax  +
mov eax [esi-44h] +
mov ecx [ebp+arg_8] +
mov edx eax +
mov [esi-38h] eax +
add dword ptr [esi-38h] 4 +
mov [esi-3Ch] eax +
mov eax [esi-48h] +
sub eax [esi-38h] +
mov [esi-34h] edx +
lea eax [eax+ecx-8] +
lea edx [eax+7] +
sar edx 3 +
sub eax edx +
cmp eax 10h +
mov dword ptr [esi-30h] 1 +
jle loc_102FF01  +
lea ebx [ebx+0] +
mov edx [esi-24h] +
mov ecx [esi-20h] +
cmp edx ecx +
jge loc_102FEAA  +
add eax edx +
add ecx 0FFFFFFF8h +
cmp eax ecx +
mov [esi-1Ch] eax +
jle loc_102FE7D  +
cmp edx ecx +
mov [esi-1Ch] ecx +
jge loc_102FEAA  +
mov eax [ebp+arg_18] +
mov ecx [ebp+arg_14] +
push eax  +
push ecx  +
push edi  +
call sub_102FC80  +
mov edx [esi-48h] +
sub edx [esi-38h] +
mov eax [ebp+arg_8] +
lea eax [edx+eax-8] +
lea ecx [eax+7] +
sar ecx 3 +
sub eax ecx +
cmp eax 10h +
jg loc_102FE60  +
mov esi [ebp+arg_10] +
jmp loc_102FF11  +
cmp edx [esi-20h] +
jge loc_102FEEF  +
nop   +
mov eax [esi-24h] +
mov ecx [esi-14h] +
mov al [eax+ecx] +
mov edx [esi-38h] +
mov [edx] al +
mov ecx [esi-30h] +
mov edx 1 +
add [esi-38h] edx +
lea eax [ecx+ecx] +
test ecx ecx +
jge loc_102FEE1  +
mov ecx [esi-34h] +
mov [ecx] eax +
mov eax [esi-38h] +
add dword ptr [esi-38h] 4 +
mov [esi-34h] eax +
mov eax edx +
add [esi-24h] edx +
mov [esi-30h] eax +
mov ecx [esi-24h] +
cmp ecx [esi-20h] +
jl loc_102FEB0  +
mov ecx esi +
call sub_102F150  +
mov eax [esi-38h] +
sub eax [esi-3Ch] +
cmp eax [ebp+arg_8] +
jb loc_102FF06  +
mov esi [ebp+arg_10] +
jmp loc_102FF11  +
add [esi-44h] eax +
mov eax [esi-44h] +
sub eax [esi-48h] +
mov esi eax +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_102FF22  +
mov edx [ebp+arg_10] +
mov ecx [ebp+arg_18] +
push edx  +
push ecx  +
call eax  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 20h  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_102FFED  +
mov edx [ebp+arg_0] +
lea eax [edx-1] +
mov [ebp+arg_8] eax +
cmp eax 0FFFFh +
ja loc_102FFED  +
push ebx  +
mov ebx [ebp+arg_C] +
xor ecx ecx +
cmp ebx 9 +
mov eax 2BD8h +
jle loc_102FF7A  +
lea ebx [ecx+9] +
jmp loc_102FF7F  +
cmp ebx 1 +
jl loc_102FF91  +
cmp ebx 2 +
mov eax 10000h +
jl loc_102FF91  +
lea eax [edx+edx] +
mov ecx 10000h +
push esi  +
lea esi [ecx+194h] +
mov ecx [ebp+arg_4] +
and esi 0FFFFFFE0h +
lea eax [eax+esi+38h] +
push eax  +
push ecx  +
call edi  +
test eax eax +
jnz loc_102FFB1  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
mov edx [ebp+arg_8] +
mov edi eax +
mov [eax+10h] edx +
mov [eax+14h] ebx +
mov dword ptr [eax] 53E7C0DEh +
mov [eax+4] eax +
add eax 18h +
mov ecx eax +
and ecx 1Fh +
mov edx 20h +
sub edx ecx +
add eax edx +
lea ecx [eax+esi] +
mov [edi+8] ecx +
mov [edi+0Ch] eax +
call sub_102F010  +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
pop ebp  +
retn 10h  +
xor eax eax +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_103002B  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_103002B  +
cmp dword ptr [eax] 53E7C0DEh +
jnz loc_103002B  +
mov edx [ebp+arg_4] +
mov dword ptr [eax] 0 +
mov eax [eax+4] +
push eax  +
push edx  +
call ecx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov eax [ebp+arg_0] +
push ebx  +
push ecx  +
push edx  +
push esi  +
push edi  +
push ebp  +
sub esp 20h +
mov edx [eax+0Ch] +
mov [esp+44h+var_40] edx +
mov edx [eax+8] +
mov [esp+44h+var_3C] edx +
mov edx [eax+1Ch] +
mov [esp+44h+var_38] edx +
mov edx [eax+14h] +
mov [esp+44h+var_34] edx +
mov edx [eax+20h] +
mov [esp+44h+var_30] edx +
mov edx [eax+24h] +
mov [esp+44h+var_2C] edx +
xor edx edx +
mov [esp+44h+var_44] edx +
mov [esp+44h+var_28] eax +
mov edx [eax+4] +
mov ebp edx +
mov edi [eax+4] +
mov ebx [eax+18h] +
xor eax eax +
jmp loc_1030160  +
mov [edi-1] cl +
inc edi  +
mov cl [ebx] +
inc ebx  +
add eax eax +
jnb loc_10300A0  +
mov [edi-1] cl +
jz loc_1030160  +
xor edx edx +
mov dx [ebx] +
mov ecx edx +
shr edx 3 +
add ebx 2 +
not edx  +
and ecx 7 +
lea esi [edi+edx] +
cmp cl 5 +
ja loc_10300FE  +
cmp esi ebp +
jb loc_10302B5  +
cmp edx 0FFFFFFFDh +
mov edx [esi] +
jnb loc_10300F1  +
mov [edi] edx +
mov edx [esi+4] +
mov [edi+4] edx +
lea edi [edi+ecx+3] +
add eax eax +
jnb loc_10300A3  +
jnz loc_10300B4  +
jmp loc_1030160  +
add ecx 3 +
movs   +
add eax eax +
jnb loc_10300A3  +
jnz loc_10300B4  +
jmp loc_1030160  +
cmp esi ebp +
jb loc_10302B5  +
mov edx [esp+44h+var_44] +
cmp cl 7 +
jnz loc_1030132  +
test edx edx +
jz loc_103011D  +
xor ecx ecx +
mov cl [edx] +
xor edx edx +
shr ecx 4 +
jmp loc_1030127  +
xor ecx ecx +
mov cl [ebx] +
mov edx ebx +
and ecx 0Fh +
inc ebx  +
mov [esp+44h+var_44] edx +
cmp cl 0Fh +
lea ecx [ecx+7] +
jz loc_103018A  +
lea edx [edi+ecx+3] +
add ecx 3 +
cmp edx [esp+44h+var_3C] +
jnb loc_1030246  +
movs   +
add eax eax +
jnb loc_10300A3  +
jnz loc_10300B4  +
jmp loc_1030160  +
cmp ebx [esp+44h+var_38] +
jnb loc_1030270  +
cmp edi [esp+44h+var_3C] +
jnb loc_1030270  +
mov eax [ebx] +
add ebx 4 +
test eax eax +
lea eax [eax+eax+1] +
jns loc_10300A3  +
jmp loc_10300B4  +
xor ecx ecx +
mov cl [ebx] +
inc ebx  +
cmp cl 0FFh +
lea ecx [ecx+16h] +
jnz loc_1030132  +
xor ecx ecx +
mov cx [ebx] +
add ebx 2 +
cmp ecx 115h +
jnb loc_1030132  +
jmp loc_10301B0  +
mov [edi-1] cl +
cmp edi [esp+44h+var_40] +
jnb loc_10302C9  +
cmp ebx [esp+44h+var_34] +
jnb loc_10302B5  +
inc edi  +
mov cl [ebx] +
inc ebx  +
add eax eax +
jnb loc_10301B0  +
mov [edi-1] cl +
jz loc_1030270  +
cmp edi [esp+44h+var_40] +
jnb loc_10302B9  +
cmp ebx [esp+44h+var_30] +
jnb loc_10302B5  +
xor edx edx +
mov dx [ebx] +
mov ecx edx +
shr edx 3 +
add ebx 2 +
not edx  +
and ecx 7 +
lea esi [edi+edx] +
cmp esi ebp +
jb loc_10302B5  +
mov edx [esp+44h+var_44] +
cmp cl 7 +
jnz loc_103023F  +
test edx edx +
jz loc_1030220  +
xor ecx ecx +
mov cl [edx] +
xor edx edx +
shr ecx 4 +
jmp loc_1030234  +
cmp ebx [esp+44h+var_34] +
jnb loc_10302B5  +
xor ecx ecx +
mov cl [ebx] +
mov edx ebx +
and ecx 0Fh +
inc ebx  +
mov [esp+44h+var_44] edx +
cmp cl 0Fh +
lea ecx [ecx+7] +
jz loc_103028C  +
lea edx [edi+ecx+3] +
add ecx 3 +
cmp edx [esp+44h+var_40] +
jbe loc_1030256  +
mov ecx [esp+44h+var_40] +
sub ecx edi +
movs   +
jmp loc_10302C9  +
movs   +
add eax eax +
jnb loc_10301B3  +
jnz loc_10301D8  +
jmp loc_1030270  +
cmp ebx [esp+44h+var_2C] +
jnb loc_10302B5  +
mov eax [ebx] +
add ebx 4 +
test eax eax +
lea eax [eax+eax+1] +
jns loc_10301B3  +
jmp loc_10301D8  +
cmp ebx [esp+44h+var_34] +
jnb loc_10302B5  +
xor ecx ecx +
mov cl [ebx] +
inc ebx  +
cmp cl 0FFh +
lea ecx [ecx+16h] +
jnz loc_103023F  +
cmp ebx [esp+44h+var_30] +
jnb loc_10302B5  +
xor ecx ecx +
mov cx [ebx] +
add ebx 2 +
cmp ecx 115h +
jnb loc_103023F  +
xor eax eax +
jmp loc_10302D8  +
mov ebx [esp+44h+var_28] +
mov eax 1 +
cmp edi [ebx] +
jnz loc_10302C9  +
mov [ebx+34h] eax +
mov eax 1 +
mov ebx [esp+44h+var_28] +
mov [ebx+2Ch] ebx +
mov [ebx+10h] edi +
mov ebx [esp+44h+var_28] +
mov [ebx+30h] eax +
add esp 20h +
pop ebp  +
pop edi  +
pop esi  +
pop edx  +
pop ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1030408  +
cmp dword ptr [esi+38h] 35DEC0DEh +
jnz loc_1030408  +
mov ecx [ebp+arg_14] +
mov edx [ebp+arg_8] +
cmp edx ecx +
jnz loc_1030330  +
mov eax [ebp+arg_C] +
pop esi  +
pop ebp  +
retn 18h  +
jl loc_1030408  +
test ecx ecx +
jl loc_1030408  +
cmp edx 8 +
jle loc_1030408  +
cmp ecx 8 +
jl loc_1030408  +
cmp edx 10000h +
push edi  +
mov edi [ebp+arg_C] +
jg loc_1030400  +
test edi edi +
jle loc_1030400  +
mov eax [ebp+arg_4] +
add edx eax +
mov [esi] edx +
lea edx [eax+edi] +
mov edi [ebp+arg_10] +
add ecx edi +
lea edi [ecx-1] +
mov [esi+20h] edi +
mov [esi+28h] edi +
push ebx  +
mov edi edx +
lea ebx [ecx-3] +
sub edi eax +
mov [esi+24h] ebx +
mov [esi+4] eax +
mov [esi+0Ch] edx +
mov [esi+14h] ecx +
mov [esi+8] eax +
pop ebx  +
cmp edi 108h +
jbe loc_10303A9  +
add edx 0FFFFFEF8h +
mov [esi+8] edx +
mov eax [esi+18h] +
mov edx ecx +
sub edx eax +
mov [esi+1Ch] eax +
cmp edx 0E8h +
jbe loc_10303C4  +
add ecx 0FFFFFF18h +
mov [esi+1Ch] ecx +
mov eax [ebp+arg_10] +
xor edi edi +
push esi  +
mov [esi+18h] eax +
mov [esi+30h] edi +
mov [esi+34h] edi +
call sub_1030040  +
cmp [esi+30h] edi +
jz loc_10303F7  +
mov eax [esi+0Ch] +
cmp [esi+10h] eax +
ja loc_10303F7  +
cmp eax [esi] +
jnz loc_10303EE  +
cmp [esi+34h] edi +
jz loc_10303F7  +
mov eax [ebp+arg_C] +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 18h  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1030443  +
mov ecx [ebp+arg_0] +
push 3Ch  +
push ecx  +
call eax  +
test eax eax +
jz loc_1030443  +
mov dword ptr [eax+38h] 35DEC0DEh +
pop ebp  +
retn 8  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_103047A  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_103047A  +
cmp dword ptr [eax+38h] 35DEC0DEh +
jnz loc_103047A  +
push eax  +
mov dword ptr [eax+38h] 0 +
mov eax [ebp+arg_4] +
push eax  +
call ecx  +
pop ebp  +
retn 0Ch  +
***
