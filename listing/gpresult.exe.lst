cmp dword ptr [ecx+64h] 0 +
push esi  +
jz loc_10034C6  +
push ebx  +
push 191h  +
call sub_1017157  +
mov esi ds:__iob_func +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 1D1h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov ebx 193h +
push ebx  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc ebx  +
cmp ebx 19Ch +
jbe loc_1003428  +
mov ebx 19Eh +
push ebx  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc ebx  +
cmp ebx 19Fh +
jbe loc_1003448  +
mov ebx 1A1h +
push ebx  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc ebx  +
cmp ebx 1A6h +
jbe loc_1003468  +
mov ebx 1B1h +
push ebx  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc ebx  +
cmp ebx 1C0h +
jbe loc_1003488  +
mov ebx 1C2h +
push ebx  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc ebx  +
cmp ebx 1C4h +
jbe loc_10034A8  +
pop ebx  +
pop esi  +
retn   +
mov esi 191h +
push esi  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc esi  +
cmp esi 1C4h +
jbe loc_10034CB  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+18h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [esi+1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+20h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+24h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+28h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+2Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+4Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+50h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+5Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 8 +
mov edi offset dword_1001374 +
push edi  +
lea ecx [esi+24h] +
mov [esi] ebx +
mov [esi+0Ch] ebx +
mov [esi+4] ebx +
mov [esi+14h] ebx +
mov [esi+8] ebx +
mov [esi+10h] ebx +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+1Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+20h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+4Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+50h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+5Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+2Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov [esi+30h] ebx +
mov [esi+74h] ebx +
mov [esi+34h] ebx +
mov [esi+3Ch] ebx +
mov [esi+40h] ebx +
mov [esi+44h] ebx +
mov [esi+54h] ebx +
mov [esi+48h] ebx +
mov [esi+58h] ebx +
mov [esi+6Ch] ebx +
mov [esi+68h] ebx +
mov [esi+70h] ebx +
mov [esi+60h] ebx +
mov dword ptr [esi+64h] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 8 +
mov eax [esi] +
xor ebx ebx +
cmp eax ebx +
jz loc_1003634  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
mov eax [esi+4] +
cmp eax ebx +
jz loc_1003644  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+4] ebx +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1003654  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+0Ch] ebx +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1003664  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+8] ebx +
lea edi [esi+54h] +
cmp [edi] ebx +
jz loc_1003684  +
mov eax [edi] +
lea eax [eax+ebx*4] +
push eax  +
call sub_10157C3  +
inc ebx  +
cmp ebx [esi+58h] +
jbe loc_100366B  +
push edi  +
call sub_10157C3  +
xor ebx ebx +
lea eax [esi+14h] +
push eax  +
call sub_10043C5  +
call ds:CoUninitialize  +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_10036A1  +
push eax  +
call ds:CloseHandle  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+5Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+50h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+4Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+2Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+28h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+24h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+20h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+1Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+18h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 8007000Eh  +
mov esi ecx +
mov [ebp+var_4] 1 +
call ds:SetLastError  +
call sub_1014CC4  +
push esi  +
call sub_1004FCF  +
test eax eax +
jz loc_10037C9  +
push ebx  +
push 16h  +
lea ebx [esi+78h] +
pop ecx  +
mov eax ebx +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100374F  +
push edi  +
mov edi ds:__iob_func +
call edi  +
add eax 20h +
push eax  +
call sub_1014E1B  +
test eax eax +
jz loc_1003770  +
push 0FFFFFFF5h  +
jmp loc_1003781  +
call edi  +
add eax 40h +
push eax  +
call sub_1014E1B  +
test eax eax +
jz loc_100378C  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
mov [esi+74h] eax +
jmp loc_1003790  +
and dword ptr [esi+74h] 0 +
mov eax [esi+74h] +
pop edi  +
test eax eax +
jz loc_10037A0  +
push ebx  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
lea eax [ebp+var_4] +
push eax  +
call sub_1019A14  +
pop ebx  +
test eax eax +
jl loc_10037B4  +
mov eax [ebp+var_4] +
mov [esi+64h] eax +
push 0  +
call ds:SetLastError  +
push offset dword_1001378  +
call sub_1014C5D  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov [ebp+lpBuffer] eax +
xor eax eax +
xor edi edi +
push 9Eh  +
mov word ptr [ebp+var_A4] ax +
lea eax [ebp+var_A4+2] +
push edi  +
push eax  +
mov [ebp+NumberOfCharsWritten] edi +
call memset  +
add esp 0Ch +
cmp ebx edi +
jz loc_10038B3  +
xor eax eax +
mov [ebp+dwCursorPosition.X] ax +
mov ax [esi+6] +
push 50h  +
mov [ebp+dwCursorPosition.Y] ax +
pop ecx  +
lea eax [ebp+var_A4] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1003843  +
push dword ptr [ebp+dwCursorPosition.X]  +
mov esi ds:SetConsoleCursorPosition +
push ebx  +
call esi  +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 4Fh  +
push 4Fh  +
push 4Fh  +
push offset dword_100137C  +
lea eax [ebp+var_A4] +
push eax  +
call sub_1016096  +
mov edi ds:WriteConsoleW +
push eax  +
push ebx  +
call edi  +
push dword ptr [ebp+dwCursorPosition.X]  +
push ebx  +
call esi  +
cmp [ebp+lpBuffer] 0 +
jz loc_10038B3  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpBuffer]  +
call ds:lstrlenW  +
push eax  +
push [ebp+lpBuffer]  +
push ebx  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push [ebp+lpName]  +
xor ebx ebx +
push ebx  +
push 100000h  +
mov esi ecx +
mov [ebp+hMem] ebx +
call ds:OpenMutexW  +
mov [esi+48h] eax +
cmp eax ebx +
jnz loc_1003960  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1003910  +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
push 1  +
push offset aDDWowdWdAGaWd  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_1003928  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
xor eax eax +
jmp loc_1003963  +
push 0Ch  +
pop ecx  +
mov edx ecx +
lea eax [ebp+MutexAttributes] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1003930  +
mov eax [ebp+hMem] +
push [ebp+lpName]  +
mov [ebp+MutexAttributes.lpSecurityDescriptor] eax +
push ebx  +
lea eax [ebp+MutexAttributes] +
push eax  +
mov [ebp+MutexAttributes.nLength] ecx +
mov [ebp+MutexAttributes.bInheritHandle] ebx +
call ds:CreateMutexW  +
mov [esi+48h] eax +
cmp eax ebx +
jz loc_1003910  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_10039BA  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_10039BA  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_100399F  +
cmp [ecx] di +
jz loc_100399B  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_1003991  +
test edx edx +
jnz loc_10039A4  +
mov edi 80070057h +
test esi esi +
jz loc_10039B5  +
test edi edi +
jl loc_10039B2  +
sub eax edx +
mov [esi] eax +
jmp loc_10039B5  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_10039BF  +
mov eax 80070057h +
test eax eax +
jge loc_10039CA  +
test esi esi +
jz loc_10039CA  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
call sub_1014CC4  +
push dword ptr [ebp-98h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1003A74 +
retn   +
***
call __EH_prolog3  +
lea ecx [ebp-0A0h] +
call sub_10034F1  +
xor esi esi +
mov [ebp-4] esi +
push esi  +
push esi  +
push 100h  +
mov [ebp-10h] esi +
call ds:SetThreadPreferredUILanguages  +
lea ecx [ebp-0A0h] +
call sub_1003718  +
test eax eax +
jnz loc_1004187  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
inc esi  +
call sub_1015A2D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A0h] +
call sub_100360C  +
mov eax esi +
call __EH_epilog3  +
retn   +
xor ebx ebx +
inc ebx  +
cmp [ebp+8] ebx +
jnz loc_100419C  +
lea ecx [ebp-0A0h] +
call sub_10033E5  +
jmp loc_100416B  +
mov edi [ebp+0Ch] +
lea eax [ebp-10h] +
push eax  +
push edi  +
push dword ptr [ebp+8]  +
lea ecx [ebp-0A0h] +
call sub_10039D4  +
cmp eax esi +
jnz loc_10041F2  +
mov esi ds:__iob_func +
push 20001h  +
call esi  +
add eax 40h +
push eax  +
call sub_101716F  +
cmp [ebp-10h] ebx +
jnz loc_10041EB  +
push dword ptr [edi]  +
push 58h  +
call sub_1017157  +
push eax  +
push ebx  +
push ebx  +
call esi  +
add eax 40h +
push eax  +
call sub_1017004  +
add esp 14h +
mov esi ebx +
jmp loc_100416B  +
cmp dword ptr [ebp+8] 2 +
jnz loc_1004222  +
push esi  +
push esi  +
push offset a?  +
push dword ptr [edi+4]  +
call sub_1014F64  +
test eax eax +
jz loc_100418F  +
push esi  +
push esi  +
push offset a?_0  +
push dword ptr [edi+4]  +
call sub_1014F64  +
test eax eax +
jz loc_100418F  +
lea ecx [ebp-0A0h] +
call sub_100BBAC  +
test eax eax +
jz loc_10041EB  +
jmp loc_100416B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
xor esi esi +
push offset dword_1003060  +
push edi  +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
call dword ptr [eax]  +
test eax eax +
jl loc_100429D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1004290  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_100429D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push offset dword_1003070  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jnz loc_10043BB  +
mov eax [esi] +
push ebx  +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
mov ebx offset dword_1003060 +
push ebx  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jz loc_10042FE  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10042F7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
jmp loc_10043B9  +
test [ebp+arg_1C] 60h +
jz loc_1004308  +
xor edi edi +
jmp loc_100430B  +
mov edi [ebp+arg_18] +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_1004344  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_100433F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebp+var_4] +
jmp loc_10043AD  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1004355  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
test edi edi +
jz loc_10043AA  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jnz loc_10043A0  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10043AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
jmp loc_10043AA  +
cmp esi 80004002h +
jnz loc_10043AA  +
xor esi esi +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10043B7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_1004401  +
cmp dword ptr [eax] 0 +
push edi  +
mov edi ds:CoTaskMemFree +
jz loc_10043E4  +
push dword ptr [eax]  +
call edi  +
mov eax [esi] +
mov eax [eax+10h] +
test eax eax +
jz loc_10043F0  +
push eax  +
call edi  +
mov eax [esi] +
mov eax [eax+8] +
test eax eax +
jz loc_10043FC  +
push eax  +
call edi  +
push dword ptr [esi]  +
call edi  +
pop edi  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
cmp dword ptr [ebp+8] 0 +
jz loc_1004461  +
and dword ptr [ebp-4] 0 +
mov si [ebp+14h] +
mov [ebp-20h] si +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
call ds:SafeArrayGetElement  +
cmp si 8 +
jnz loc_1004461  +
push dword ptr [ebp-18h]  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_1004463  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1004461 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_catch  +
cmp dword ptr [ebp+8] 0 +
jz loc_10044C0  +
and dword ptr [ebp-4] 0 +
mov si [ebp+14h] +
mov [ebp-20h] si +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
call ds:SafeArrayGetElement  +
cmp si 0Dh +
jnz loc_10044C0  +
mov eax [ebp+10h] +
mov ecx [ebp-18h] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_10044C2  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10044C0 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1004508  +
mov eax [ebp+arg_0] +
jb loc_10044FF  +
cmp eax 0FFFFFFFFh +
ja loc_1004508  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1004513  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1004536  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1004541  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jge loc_100455B  +
pop ebp  +
jmp sub_1014187  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_1004595  +
cmp [ebp+arg_0] eax +
jz loc_1004595  +
push 8007000Eh  +
call sub_1014187  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_10045B3  +
push eax  +
call ds:SysFreeString  +
mov esi [esi+4] +
test esi esi +
jz loc_10045C1  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+pvargSrc]  +
mov esi ecx +
push esi  +
call ds:VariantCopy  +
push eax  +
call sub_100454A  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_10045FA  +
mov edx ecx +
mov eax dword ptr [ebp+vt] +
cmp ecx edx +
jnz loc_1004606  +
cmp ax [ecx] +
jz loc_1004617  +
push eax  +
push 0  +
push edx  +
push ecx  +
call ds:VariantChangeType  +
push eax  +
call sub_100454A  +
pop ebp  +
retn 8  +
***
adc eax offset VariantClear +
push eax  +
call sub_100454A  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax+7FFBFE00h] +
cmp ecx 0FDFFh +
ja loc_1004655  +
add eax 0FFFFFE00h +
movzx eax ax +
jmp loc_1004657  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+8] 0 +
jnz loc_1004692  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100473C  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset word_1001370  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100472E  +
push offset a?_1  +
lea ecx [ebp-14h] +
call ?FindOneOf@CHString@@QBEHPBG@Z  +
or esi 0FFFFFFFFh +
cmp eax esi +
jz loc_10046CE  +
mov [ebp-4] esi +
jmp loc_1004732  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jz loc_1004711  +
inc eax  +
push eax  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jnz loc_10046C9  +
mov [ebp-4] esi +
jmp loc_1004682  +
push 8007000Eh  +
call ds:SetLastError  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100472E +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
cmp [ebp+8] edi +
jnz loc_100477D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
mov esi [ebp+0Ch] +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
mov [esi] edi +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-10h]  +
call sub_101844A  +
cmp eax 1 +
jnz loc_10047CE  +
push 2  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
lea ecx [ebp-10h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
jz loc_1004767  +
push 5Ch  +
lea ecx [ebp-10h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_10047ED  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_1004775  +
push offset a_  +
push dword ptr [ebp-10h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004809  +
mov dword ptr [esi] 1 +
jmp loc_1004813  +
push dword ptr [ebp-10h]  +
call sub_10188D6  +
mov [esi] eax +
xor edi edi +
inc edi  +
jmp loc_10047DD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
mov [ebp+var_8] 0Ah +
jnz loc_100483C  +
mov eax 80041008h +
jmp locret_1004869  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100423B  +
test eax eax +
jl locret_1004869  +
push 0  +
push [ebp+arg_4]  +
push 3  +
push 6  +
push 0  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_10042AA  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_C] ebx +
jnz loc_100488B  +
mov eax 80041008h +
jmp loc_100497C  +
push esi  +
push edi  +
mov edi ds:CoTaskMemAlloc +
push 1Ch  +
call edi  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi ebx +
jz loc_1004949  +
push 1Ch  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10048A7  +
cmp [ebp+lpString] ebx +
jz loc_10048E6  +
push ebx  +
push [ebp+lpString]  +
call sub_1014F43  +
mov [ebp+var_8] eax +
lea eax [eax+eax+2] +
push eax  +
call edi  +
mov [esi] eax +
cmp eax ebx +
jz loc_1004940  +
mov eax [ebp+var_8] +
push ebx  +
push [ebp+lpString]  +
mov [esi+4] eax +
call sub_1014F43  +
inc eax  +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_101570A  +
cmp [ebp+arg_8] ebx +
jz loc_1004921  +
push ebx  +
push [ebp+arg_8]  +
call sub_1014F43  +
mov [ebp+lpString] eax +
lea eax [eax+eax+2] +
push eax  +
call edi  +
mov [esi+8] eax +
cmp eax ebx +
jz loc_1004940  +
mov eax [ebp+lpString] +
push ebx  +
push [ebp+arg_8]  +
mov [esi+0Ch] eax +
call sub_1014F43  +
inc eax  +
push eax  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
call sub_101570A  +
cmp [ebp+arg_4] ebx +
jz loc_100496C  +
push ebx  +
push [ebp+arg_4]  +
call sub_1014F43  +
mov [ebp+lpString] eax +
lea eax [eax+eax+2] +
push eax  +
call edi  +
mov [esi+10h] eax +
cmp eax ebx +
jnz loc_1004950  +
lea eax [ebp+var_4] +
push eax  +
call sub_10043C5  +
mov eax 80041006h +
jmp loc_100497A  +
mov eax [ebp+lpString] +
push ebx  +
push [ebp+arg_4]  +
mov [esi+14h] eax +
call sub_1014F43  +
inc eax  +
push eax  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
call sub_101570A  +
mov eax [ebp+arg_C] +
mov dword ptr [esi+18h] 2 +
mov [eax] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_10049B3  +
push dword ptr [ebp+8]  +
call sub_1004564  +
jmp loc_10049B5  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
test eax eax +
jnz loc_10049C9  +
push 8007000Eh  +
call sub_1014187  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jz loc_10049EC  +
mov eax [eax] +
test eax eax +
jz loc_10049EC  +
push eax  +
call ds:SysStringLen  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+len] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
push edi  +
mov ecx ebx +
mov dword ptr [esi+8] 1 +
call sub_10049D8  +
mov ecx [ebp+arg_4] +
mov edi eax +
call sub_10049D8  +
lea ecx [ebp+len] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call sub_100451C  +
test eax eax +
jl loc_1004A47  +
mov eax [ebp+len] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+len] +
push ecx  +
push edx  +
push eax  +
call sub_10044EA  +
test eax eax +
jge loc_1004A51  +
push 8007000Eh  +
call sub_1014187  +
push [ebp+len]  +
push 0  +
call ds:SysAllocStringByteLen  +
mov [esi] eax +
test eax eax +
jnz loc_1004A73  +
mov eax [ebp+var_4] +
add eax edi +
jz loc_1004ABD  +
push 8007000Eh  +
call sub_1014187  +
mov eax [ebx] +
test eax eax +
jz loc_1004A7D  +
mov eax [eax] +
jmp loc_1004A7F  +
xor eax eax +
test eax eax +
jz loc_1004A93  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_1004AA0  +
mov eax [eax] +
jmp loc_1004AA2  +
xor eax eax +
test eax eax +
jz loc_1004ABD  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
mov eax [esi] +
lea eax [eax+edi*2] +
push eax  +
call memcpy  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
cmp word ptr [esi] 3 +
jnz loc_1004AE4  +
mov eax [esi+8] +
jmp loc_1004B16  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push esi  +
push 3  +
lea ecx [ebp-1Ch] +
call sub_10045EC  +
mov esi [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
movzx eax word ptr [esi] +
cmp ax 3 +
jz loc_1004B5E  +
cmp ax 0Ah +
jz loc_1004B5E  +
cmp ax 0Bh +
jnz loc_1004B4B  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
mov [esi+8] ax +
jmp loc_1004B64  +
push esi  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push esi  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
cmp [ebp+arg_0] 0 +
jnz loc_1004B97  +
and dword ptr [esi+8] 0 +
push 8  +
pop eax  +
mov [esi] ax +
jmp loc_1004BB9  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
test eax eax +
jnz loc_1004BB0  +
push 8007000Eh  +
call sub_1014187  +
jmp loc_1004BB9  +
push 8  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+0Ch] +
xor ebx ebx +
cmp [esi] ebx +
jnz loc_1004C6A  +
push ebx  +
push ebx  +
push esi  +
push 400h  +
push dword ptr [edi+4]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
mov eax [esi] +
cmp eax ebx +
jz loc_1004C2A  +
push eax  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1004C6A  +
mov ecx [esi] +
lea ecx [ecx+eax*2-2] +
cmp word ptr [ecx] 0Ah +
jnz loc_1004C6A  +
xor edx edx +
mov [ecx] dx +
mov ecx [esi] +
lea eax [ecx+eax*2-4] +
cmp word ptr [eax] 0Dh +
jnz loc_1004C6A  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1004C6A  +
push 40h  +
push ebx  +
call ds:LocalAlloc  +
mov [ebp-4] eax +
mov [esi] eax +
cmp eax ebx +
jz loc_1004C6A  +
mov edi [edi+4] +
push edi  +
call sub_1004635  +
movzx eax ax +
cmp ax bx +
jz loc_1004C58  +
movzx eax ax +
push eax  +
push offset aIdispatchError  +
jmp loc_1004C5E  +
push edi  +
push offset aUnknownError0x  +
push dword ptr [ebp-4]  +
call ds:wsprintfW  +
add esp 0Ch +
mov eax [esi] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
cmp [ebp+8] ebx +
jnz loc_1004CCC  +
mov esi 80041008h +
mov [ebp-4] bl +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 14h  +
mov edi [ebp+18h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1004CE2  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100481D  +
mov esi eax +
jmp loc_1004CAB  +
cmp [ebp+10h] ebx +
jnz loc_1004D00  +
cmp [ebp+14h] ebx +
jnz loc_1004D00  +
push ebx  +
push ebx  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [ebp+8]  +
call sub_10042AA  +
jmp loc_1004CDE  +
push offset dword_1001374  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 5Ch  +
lea ecx [ebp-10h] +
call ?Find@CHString@@QBEHG@Z  +
mov esi eax +
lea ecx [ebp-10h] +
cmp esi 0FFFFFFFFh +
jz loc_1004D78  +
push esi  +
lea eax [ebp+10h] +
push eax  +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+10h] +
call ??1CHString@@QAE@XZ  +
inc esi  +
push esi  +
lea eax [ebp+10h] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+10h] +
call ??1CHString@@QAE@XZ  +
jmp loc_1004D7F  +
push 40h  +
call ?Find@CHString@@QBEHG@Z  +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov esi [ebp-14h] +
cmp [eax+4] ebx +
jnz loc_1004D92  +
mov esi [ebp-18h] +
lea ecx [ebp-10h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
mov eax [ebp-10h] +
jnz loc_1004DA5  +
mov eax [ebp-1Ch] +
cmp [edi] ebx +
jnz loc_1004DBC  +
push edi  +
push esi  +
push dword ptr [ebp+14h]  +
push eax  +
call sub_1004872  +
cmp eax ebx +
jnz loc_1004CDE  +
push ebx  +
push dword ptr [edi]  +
jmp loc_1004CEE  +
***
call __EH_prolog3_catch  +
push offset dword_1001378  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@PBG@Z  +
xor edi edi +
mov [ebp-4] edi +
mov [ebp-18h] edi +
mov ebx [ebp+8] +
cmp ebx 80070005h +
jz loc_1004F3D  +
cmp ebx 525h +
jz loc_1004F42  +
mov byte ptr [ebp-4] 1 +
mov esi 0FEh +
push esi  +
lea ecx [ebp-14h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-1Ch] eax +
cmp ebx 80040154h +
jnz loc_1004E43  +
push esi  +
push 1580h  +
call sub_1017157  +
push eax  +
push dword ptr [ebp-1Ch]  +
call sub_101570A  +
push dword ptr [ebp-14h]  +
call sub_1014C5D  +
jmp loc_1004F4E  +
lea eax [ebp-18h] +
push eax  +
push offset riid  +
push 1  +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
cmp eax edi +
jl loc_1004E9F  +
mov [ebp+8] edi +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push edi  +
push edi  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jl loc_1004E9F  +
push esi  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
call sub_101570A  +
push dword ptr [ebp+8]  +
call ds:SysFreeString  +
mov [ebp+8] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_1004EA5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
jmp loc_1004EA5  +
push ebx  +
call sub_1014187  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
mov [ebp-4] edi +
push offset asc_10014C8  +
lea ecx [ebp-14h] +
call ??YCHString@@QAEABV0@PBG@Z  +
jmp loc_1004E36  +
mov eax offset loc_1004EB2 +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
mov dword ptr [ebp-4] 2 +
mov eax (offset dword_1004EC4+35h) +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1004F4E +
retn   +
mov ebx 52Eh +
push ebx  +
call ds:SetLastError  +
call sub_1014CC4  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_1004F84  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10045A1  +
test [ebp+arg_0] 1 +
jz loc_1004FAA  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov [ebp-14h] esi +
push 2  +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jge loc_1004FF9  +
push eax  +
call sub_1014187  +
push esi  +
push esi  +
push esi  +
push 3  +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
cmp eax esi +
jge loc_1005017  +
push eax  +
call sub_1014187  +
mov edi [ebp+8] +
mov eax [edi] +
cmp eax esi +
jz loc_1005028  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] esi +
push edi  +
push offset stru_10030D0  +
push ebx  +
push esi  +
push offset stru_10031A0  +
call ds:CoCreateInstance  +
cmp eax esi +
jge loc_1005045  +
push eax  +
call sub_1014187  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_1005091  +
test esi esi +
jz loc_1005091  +
push 1  +
mov ecx esi +
call sub_1004F90  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_10050AE  +
call sub_100506E  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_10050DB  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov ecx edi +
call sub_100509B  +
mov eax [esi] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
call sub_100509B  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1005124  +
push dword ptr [ebp+8]  +
call sub_1004564  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor edi edi +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_1005168  +
push dword ptr [ebp+8]  +
push esi  +
call sub_10049F4  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_100509B  +
mov [esi] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push ecx  +
mov ecx [ebp+8] +
call sub_1004F67  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1005139  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1004986  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1005139  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
and dword ptr [esi] 0 +
cmp word ptr [edi] 8 +
jnz loc_1005230  +
push dword ptr [edi+8]  +
call sub_10050F3  +
jmp loc_1005267  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push edi  +
push 8  +
lea ecx [ebp-1Ch] +
call sub_10045EC  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_10050F3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-38h] ebx +
mov [ebp-28h] ebx +
mov [ebp-24h] ebx +
mov [ebp-4] ebx +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 1 +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 3 +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_10052AE  +
mov [eax] ebx +
mov esi [ebp+28h] +
cmp esi ebx +
jz loc_10052B7  +
mov [esi] ebx +
mov byte ptr [ebp-4] 4 +
push ebx  +
call ds:SetLastError  +
mov [ebp-38h] ebx +
mov edi [ebp+8] +
cmp edi ebx +
jnz loc_10052EC  +
cmp esi ebx +
jz loc_10052D6  +
mov dword ptr [esi] 80041008h +
mov byte ptr [ebp-4] 2 +
mov byte ptr [ebp-4] 1 +
mov [ebp-4] bl +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
jmp loc_100571B  +
lea eax [ebp-28h] +
push eax  +
mov esi [ebp+10h] +
push esi  +
call sub_1004749  +
test eax eax +
jnz loc_1005307  +
push 800706BAh  +
call sub_1014187  +
push dword ptr [ebp+14h]  +
call sub_1004660  +
test eax eax +
jnz loc_100531D  +
push 525h  +
call sub_1014187  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-1Ch] +
call sub_10050F3  +
cmp esi ebx +
jz loc_10054FA  +
cmp [ebp-28h] ebx +
jnz loc_10054FA  +
push esi  +
lea ecx [ebp-24h] +
call sub_10050F3  +
push esi  +
call sub_101844A  +
push dword ptr [ebp+24h]  +
cmp eax 1 +
jnz loc_10053F6  +
lea ecx [ebp-2Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
push offset word_1001370  +
lea ecx [ebp+8] +
call sub_1004986  +
mov byte ptr [ebp-4] 6 +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-24h] +
call sub_1005184  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
mov ecx eax +
call sub_1005184  +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [ebp-1Ch] +
call sub_10050BF  +
mov byte ptr [ebp-4] 7 +
mov ecx [ebp-3Ch] +
cmp ecx ebx +
jz loc_10053B4  +
call sub_100506E  +
mov [ebp-3Ch] ebx +
mov byte ptr [ebp-4] 6 +
mov ecx [ebp-40h] +
cmp ecx ebx +
jz loc_10053C7  +
call sub_100506E  +
mov [ebp-40h] ebx +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_10053DA  +
call sub_100506E  +
mov [ebp+8] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-2Ch] +
cmp ecx ebx +
jz loc_10054B7  +
call sub_100506E  +
mov [ebp-2Ch] ebx +
jmp loc_10054B7  +
lea ecx [ebp-34h] +
call sub_1004986  +
mov byte ptr [ebp-4] 9 +
push offset word_1001370  +
lea ecx [ebp-30h] +
call sub_1004986  +
mov byte ptr [ebp-4] 0Ah +
lea eax [ebp-24h] +
push eax  +
push offset asc_10014CC  +
lea eax [ebp-4Ch] +
push eax  +
call sub_10051C7  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov ecx eax +
call sub_1005184  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call sub_1005184  +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea ecx [ebp-1Ch] +
call sub_10050BF  +
mov byte ptr [ebp-4] 0Ch +
mov ecx [ebp-44h] +
cmp ecx ebx +
jz loc_100546B  +
call sub_100506E  +
mov [ebp-44h] ebx +
mov byte ptr [ebp-4] 0Bh +
mov ecx [ebp-48h] +
cmp ecx ebx +
jz loc_100547E  +
call sub_100506E  +
mov [ebp-48h] ebx +
mov byte ptr [ebp-4] 0Ah +
mov ecx [ebp-4Ch] +
cmp ecx ebx +
jz loc_1005491  +
call sub_100506E  +
mov [ebp-4Ch] ebx +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_10054A4  +
call sub_100506E  +
mov [ebp-30h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_10054B7  +
call sub_100506E  +
mov [ebp-34h] ebx +
cmp [ebp+14h] ebx +
jz loc_10054FA  +
push dword ptr [ebp+14h]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10054FA  +
push dword ptr [ebp+14h]  +
lea ecx [ebp-18h] +
call sub_10050F3  +
push dword ptr [ebp+18h]  +
lea ecx [ebp-14h] +
call sub_10050F3  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_10054FA  +
lea ecx [ebp-14h] +
call sub_10049D8  +
test eax eax +
jnz loc_10054FA  +
push ebx  +
lea ecx [ebp-14h] +
call sub_10050F3  +
mov esi [ebp+0Ch] +
mov eax [esi] +
cmp eax ebx +
jz loc_100550B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005516  +
mov edx [eax] +
jmp loc_1005518  +
xor edx edx +
cmp [ebp-18h] ebx +
jz loc_1005524  +
mov eax [ebp-18h] +
mov ecx [eax] +
jmp loc_1005526  +
xor ecx ecx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1005531  +
mov eax [eax] +
jmp loc_1005533  +
xor eax eax +
mov esi [edi] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
push edi  +
call dword ptr [esi+0Ch]  +
mov [ebp-20h] eax +
cmp eax ebx +
jge loc_100564B  +
cmp eax 80070005h +
jnz loc_10055E2  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_1005634  +
lea ecx [ebp-18h] +
call sub_10049D8  +
test eax eax +
jz loc_1005634  +
lea ecx [ebp-14h] +
call sub_10049D8  +
test eax eax +
jnz loc_1005634  +
push offset dword_1001374  +
lea ecx [ebp+14h] +
call sub_1004986  +
mov byte ptr [ebp-4] 0Eh +
cmp [eax] ebx +
jz loc_100559E  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10055A0  +
xor eax eax +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10055AB  +
mov edx [ecx] +
jmp loc_10055AD  +
xor edx edx +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_10055B8  +
mov ecx [ecx] +
jmp loc_10055BA  +
xor ecx ecx +
mov esi [edi] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push edx  +
push ecx  +
push edi  +
call dword ptr [esi+0Ch]  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_100562F  +
call sub_100506E  +
mov [ebp+14h] ebx +
jmp loc_100562F  +
cmp dword ptr [ebp-20h] 80041064h +
jnz loc_100562F  +
mov dword ptr [ebp-28h] 1 +
push ebx  +
lea ecx [ebp-18h] +
call sub_10050F3  +
push ebx  +
lea ecx [ebp-14h] +
call sub_10050F3  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-1Ch] +
call sub_10050F3  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100561A  +
mov eax [eax] +
jmp loc_100561C  +
xor eax eax +
mov ecx [edi] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push edi  +
call dword ptr [ecx+0Ch]  +
mov [ebp-20h] eax +
cmp [ebp-20h] ebx +
jge loc_100563E  +
push dword ptr [ebp-20h]  +
call sub_1014187  +
jmp loc_100564B  +
push offset dword_1001374  +
lea ecx [ebp-14h] +
call sub_10050F3  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005656  +
mov ecx [eax] +
jmp loc_1005658  +
xor ecx ecx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1005663  +
mov eax [eax] +
jmp loc_1005665  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push ecx  +
push eax  +
push dword ptr [ebp+10h]  +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
call sub_1004C76  +
mov [ebp-20h] eax +
cmp eax ebx +
jge loc_1005684  +
push eax  +
call sub_1014187  +
mov dword ptr [ebp-38h] 1 +
mov eax [ebp+28h] +
cmp eax ebx +
jz loc_1005694  +
mov [eax] ebx +
mov dword ptr [ebp-4] 3 +
jmp loc_10056C1  +
add ds:byte_10056BF[eax] bh +
retn   +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_10056CD  +
mov ecx [ebp-28h] +
mov [eax] ecx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_10056E0  +
call sub_100506E  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10056F3  +
call sub_100506E  +
mov [ebp-18h] ebx +
mov [ebp-4] bl +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1005705  +
call sub_100506E  +
mov [ebp-1Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-24h] +
cmp ecx ebx +
jz loc_1005718  +
call sub_100506E  +
mov [ebp-24h] ebx +
mov eax [ebp-38h] +
call __EH_epilog3  +
retn 28h  +
***
call __EH_prolog3_catch  +
xor edi edi +
mov [ebp-18h] edi +
push offset dword_1001378  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@PBG@Z  +
mov [ebp-4] edi +
push edi  +
call ds:SetLastError  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_100576B  +
push offset Buffer  +
mov ecx [ebp+18h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_10057FB  +
mov esi [ebp+14h] +
mov ecx esi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
jnz loc_100578C  +
push dword ptr [ebp+28h]  +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+24h]  +
push edi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push edi  +
jmp loc_10057AF  +
xor ecx ecx +
xor edx edx +
inc edx  +
cmp [ebp+20h] edi +
jnz loc_100579D  +
mov eax [ebp+18h] +
mov ecx [eax] +
xor edx edx +
mov eax [esi] +
push dword ptr [ebp+28h]  +
lea ebx [ebp+14h] +
push ebx  +
push dword ptr [ebp+24h]  +
push edx  +
push dword ptr [ebp+1Ch]  +
push ecx  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005276  +
cmp eax 1 +
jnz loc_10057D8  +
xor edi edi +
inc edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_1005948  +
cmp dword ptr [ebp+14h] 80041064h +
jz loc_10057F4  +
cmp dword ptr [ebp+14h] 80070005h +
jz loc_10057F4  +
push dword ptr [ebp+14h]  +
call sub_1004DC9  +
jmp loc_10057C5  +
cmp [ebp+20h] edi +
jnz loc_10057FE  +
jmp loc_10057C5  +
mov esi [ebp+14h] +
mov ecx esi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
jnz loc_1005867  +
mov byte ptr [ebp-4] 1 +
mov ebx 0FEh +
push ebx  +
mov ecx esi +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-20h] eax +
mov [ebp-4] edi +
mov [ebp+20h] ebx +
lea ecx [ebp+20h] +
push ecx  +
push eax  +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_100583B  +
call sub_1014CC4  +
jmp loc_10057C5  +
push 0FFFFFFFFh  +
mov ecx esi +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
jmp loc_100586C  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1005860 +
retn   +
xor edi edi +
jmp loc_10057C5  +
mov ebx 0FEh +
mov byte ptr [ebp-4] 3 +
push ebx  +
mov ebx [ebp+18h] +
mov ecx ebx +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-1Ch] eax +
mov [ebp-4] edi +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov [ebp+18h] eax +
cmp eax 0FFFFFFFFh +
jz loc_10057C5  +
cmp eax edi +
jz loc_10057C5  +
push dword ptr [esi]  +
push 157Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-14h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push edi  +
lea ecx [ebp-18h] +
push ecx  +
push eax  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+18h]  +
call ds:WriteConsoleW  +
push 40h  +
push dword ptr [ebp-1Ch]  +
call sub_1015CB6  +
cmp eax 1 +
jnz loc_10057C5  +
push 0FFFFFFFFh  +
mov ecx ebx +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
mov eax [ebx] +
mov esi [esi] +
push dword ptr [ebp+28h]  +
push edi  +
push dword ptr [ebp+24h]  +
push edi  +
push dword ptr [ebp+1Ch]  +
push eax  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005276  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_1005948  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100593A +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 24h  +
***
call __EH_prolog3_catch  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jz loc_1005A0B  +
cmp [ebp+0Ch] ebx +
jz loc_1005A0B  +
mov [ebp-4] ebx +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_100599D  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100599F  +
xor eax eax +
mov ecx [esi] +
push ebx  +
push ebx  +
lea edx [ebp-24h] +
push edx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_10059C1  +
call sub_100506E  +
mov [ebp+0Ch] ebx +
lea eax [ebp-24h] +
push eax  +
cmp esi ebx +
jge loc_10059D3  +
call ds:VariantClear  +
mov eax esi +
jmp loc_1005A10  +
mov ecx [ebp+10h] +
call sub_10045C8  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
jmp loc_1005A10  +
mov eax offset loc_1005A06 +
retn   +
mov eax [ebp+0Ch] +
jmp loc_1005A10  +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
lea eax [ebp-20h] +
push eax  +
call ds:VariantInit  +
xor esi esi +
mov [ebp-4] esi +
push dword ptr [ebp+14h]  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] esi +
jz loc_1005AE4  +
cmp [ebp+0Ch] esi +
jz loc_1005AE4  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005955  +
cmp eax esi +
jl loc_1005AE4  +
mov byte ptr [ebp-4] 1 +
cmp word ptr [ebp-20h] 1 +
jz loc_1005AB1  +
cmp [ebp-20h] si +
jz loc_1005AB1  +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_100520C  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1005A93  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1005A95  +
xor eax eax +
push eax  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
cmp ecx esi +
jz loc_1005AB1  +
call sub_100506E  +
mov [ebp+0Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
inc eax  +
jmp loc_1005AFA  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1005AE4 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+8] 0 +
mov esi [ebp+10h] +
mov eax [ebp+14h] +
mov [esi] eax +
jz loc_1005B79  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1005B79  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005955  +
test eax eax +
jl loc_1005B79  +
cmp word ptr [ebp-1Ch] 1 +
jz loc_1005B60  +
cmp word ptr [ebp-1Ch] 0 +
jz loc_1005B60  +
lea ecx [ebp-1Ch] +
call sub_1004ACB  +
mov [esi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
inc eax  +
jmp loc_1005B8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+8] 0 +
mov esi [ebp+10h] +
mov eax [ebp+14h] +
mov [esi] eax +
jz loc_1005C0A  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1005C0A  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005955  +
test eax eax +
jl loc_1005C0A  +
cmp word ptr [ebp-1Ch] 1 +
jz loc_1005BF1  +
cmp word ptr [ebp-1Ch] 0 +
jz loc_1005BF1  +
movsx eax word ptr [ebp-14h] +
mov [esi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
inc eax  +
jmp loc_1005C20  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
cmp [ebp+8] ebx +
jz loc_1005DC1  +
cmp [ebp+0Ch] ebx +
jz loc_1005DC1  +
push offset a16010101000000  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005A1D  +
test eax eax +
jz loc_1005DC1  +
push 4  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 1 +
mov eax [eax] +
push 0Ah  +
pop edi  +
push edi  +
push eax  +
call sub_101672F  +
mov esi [ebp+10h] +
mov [esi] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 2  +
push 4  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 2 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+2] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
push 2  +
mov [esi+4] ax +
push 6  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+6] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 2  +
push 8  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+8] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 2  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 5 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+0Ah] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 2  +
push 0Ch  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 6 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+0Ch] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push 6  +
push 0Fh  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 7 +
mov eax [eax] +
push edi  +
push eax  +
call sub_101672F  +
mov [esi+0Eh] ax +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1005DCF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
cmp [ebp+8] ebx +
jz loc_1005E63  +
cmp [ebp+0Ch] ebx +
jz loc_1005E63  +
mov [ebp-4] ebx +
mov esi [ebp+10h] +
lea edi [ebp-28h] +
movs   +
movs   +
movs   +
movs   +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_1005E1A  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1005E1C  +
xor ecx ecx +
mov eax [ebp+8] +
mov edx [eax] +
push ebx  +
lea esi [ebp-28h] +
push esi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+14h]  +
mov [ebp-14h] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1005E41  +
call sub_100506E  +
mov [ebp+0Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
jmp loc_1005E68  +
retn   +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-14h] esi +
lea eax [ebp-28h] +
push eax  +
call ds:VariantInit  +
mov [ebp-4] esi +
cmp [ebp+8] esi +
jz loc_1005EF5  +
cmp [ebp+0Ch] esi +
jz loc_1005EF5  +
cmp [ebp+10h] esi +
jz loc_1005EF5  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+10h]  +
lea ecx [ebp-28h] +
call sub_1004B70  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005DDC  +
mov [ebp-4] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax [ebp-14h] +
jmp loc_1005F0E  +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-14h] esi +
lea eax [ebp-28h] +
push eax  +
call ds:VariantInit  +
mov [ebp-4] esi +
cmp [ebp+8] esi +
jz loc_1005F96  +
cmp [ebp+0Ch] esi +
jz loc_1005F96  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+10h]  +
lea ecx [ebp-28h] +
call sub_1004B21  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1005DDC  +
mov [ebp-4] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax [ebp-14h] +
jmp loc_1005FAF  +
mov eax offset loc_1005F64 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-30h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-20h] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
mov esi [ebp+8] +
cmp esi ebx +
jz loc_1006323  +
cmp [ebp+0Ch] ebx +
jz loc_1006323  +
cmp [ebp+14h] ebx +
jz loc_1006323  +
cmp [ebp+18h] ebx +
jz loc_1006323  +
mov [ebp-4] ebx +
mov edi offset aStdregprov +
push edi  +
lea ecx [ebp-24h] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_100601E  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1006020  +
xor eax eax +
mov ecx [esi] +
push ebx  +
lea edx [ebp-1Ch] +
push edx  +
push ebx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov [ebp-4] bl +
mov ecx [ebp-24h] +
cmp ecx ebx +
jz loc_1006042  +
call sub_100506E  +
mov [ebp-24h] ebx +
cmp esi ebx +
jge loc_100604C  +
push esi  +
call sub_1014187  +
mov esi 800300FDh +
cmp [ebp-1Ch] ebx +
jnz loc_100605C  +
push esi  +
call sub_1014187  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-20h] +
push edx  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax ebx +
jge loc_1006078  +
push eax  +
call sub_1014187  +
cmp [ebp-20h] ebx +
jnz loc_1006083  +
push esi  +
call sub_1014187  +
mov eax [ebp-20h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jge loc_100609B  +
push eax  +
call sub_1014187  +
cmp [ebp-14h] ebx +
jnz loc_10060A6  +
push esi  +
call sub_1014187  +
push offset aHdefkey  +
lea ecx [ebp-28h] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_10060C1  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10060C3  +
xor eax eax +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp-14h]  +
call sub_1005F1B  +
mov [ebp-4] bl +
mov ecx [ebp-28h] +
cmp ecx ebx +
jz loc_10060E1  +
call sub_100506E  +
mov [ebp-28h] ebx +
push offset aSsubkeyname  +
lea ecx [ebp+10h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_10060FC  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10060FE  +
xor eax eax +
push dword ptr [ebp+14h]  +
push eax  +
push dword ptr [ebp-14h]  +
call sub_1005E75  +
mov [ebp-4] bl +
mov ecx [ebp+10h] +
cmp ecx ebx +
jz loc_100611C  +
call sub_100506E  +
mov [ebp+10h] ebx +
push offset aSvaluename  +
lea ecx [ebp+14h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_1006137  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1006139  +
xor eax eax +
push dword ptr [ebp+18h]  +
push eax  +
push dword ptr [ebp-14h]  +
call sub_1005E75  +
mov [ebp-4] bl +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_1006157  +
call sub_100506E  +
mov [ebp+14h] ebx +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-2Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
push edi  +
lea ecx [ebp+18h] +
call sub_1004986  +
mov byte ptr [ebp-4] 6 +
cmp [esi] ebx +
jz loc_100617F  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1006181  +
xor esi esi +
cmp [eax] ebx +
jz loc_100618B  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100618D  +
xor eax eax +
mov ecx [ebp+8] +
mov edx [ecx] +
push ebx  +
lea edi [ebp-18h] +
push edi  +
push dword ptr [ebp-14h]  +
push ebx  +
push ebx  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+60h]  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp+18h] +
cmp ecx ebx +
jz loc_10061B7  +
call sub_100506E  +
mov [ebp+18h] ebx +
mov [ebp-4] bl +
mov ecx [ebp-2Ch] +
cmp ecx ebx +
jz loc_10061C9  +
call sub_100506E  +
mov [ebp-2Ch] ebx +
cmp esi ebx +
jge loc_10061D3  +
push esi  +
call sub_1014187  +
cmp [ebp-18h] ebx +
jnz loc_10061E2  +
push 800300FDh  +
call sub_1014187  +
push offset aReturnvalue  +
lea ecx [ebp+8] +
call sub_1004986  +
mov byte ptr [ebp-4] 7 +
cmp [eax] ebx +
jz loc_10061FD  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10061FF  +
xor eax eax +
push ebx  +
lea ecx [ebp-30h] +
push ecx  +
push eax  +
push dword ptr [ebp-18h]  +
call sub_1005B07  +
mov esi eax +
mov [ebp-4] bl +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1006221  +
call sub_100506E  +
mov [ebp+8] ebx +
cmp esi ebx +
jz loc_100622A  +
cmp [ebp-30h] ebx +
jz loc_1006234  +
push 800300FDh  +
call sub_1014187  +
push ebx  +
push 1  +
push offset aGetdwordvalue  +
push dword ptr [ebp+0Ch]  +
call sub_1014F64  +
test eax eax +
jnz loc_1006285  +
push offset aUvalue  +
lea ecx [ebp+0Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 8 +
cmp [eax] ebx +
jz loc_1006263  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1006265  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push eax  +
push dword ptr [ebp-18h]  +
call sub_1005955  +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_10062C0  +
call sub_100506E  +
mov [ebp+0Ch] ebx +
jmp loc_10062C0  +
push offset aSvalue  +
lea ecx [ebp-30h] +
call sub_1004986  +
mov byte ptr [ebp-4] 9 +
cmp [eax] ebx +
jz loc_10062A0  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10062A2  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push eax  +
push dword ptr [ebp-18h]  +
call sub_1005955  +
mov [ebp-4] bl +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_10062C0  +
call sub_100506E  +
mov [ebp-30h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_10062D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_10062E4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_10062F4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1006301  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
jmp loc_1006328  +
mov eax offset loc_100631E +
retn   +
mov eax [ebp+0Ch] +
jmp loc_1006328  +
mov eax 80041008h +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3_catch  +
lea eax [ebp-20h] +
push eax  +
call ds:VariantInit  +
xor esi esi +
mov [ebp-4] esi +
mov byte ptr [ebp-4] 1 +
cmp [ebp+1Ch] esi +
jz loc_1006364  +
push dword ptr [ebp+1Ch]  +
mov ecx [ebp+18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] esi +
jz loc_1006415  +
cmp [ebp+10h] esi +
jz loc_1006415  +
cmp [ebp+14h] esi +
jz loc_1006415  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset aGetstringvalue  +
push dword ptr [ebp+8]  +
call sub_1005FBC  +
cmp eax esi +
jl loc_1006415  +
cmp word ptr [ebp-20h] 1 +
jz loc_10063E2  +
cmp [ebp-20h] si +
jz loc_10063E2  +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp+1Ch] +
call sub_100520C  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_10063C4  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10063C6  +
xor eax eax +
push eax  +
mov ecx [ebp+18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+1Ch] +
cmp ecx esi +
jz loc_10063E2  +
call sub_100506E  +
mov [ebp+1Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
inc eax  +
jmp loc_100642B  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1006415 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3_catch  +
lea eax [ebp-20h] +
push eax  +
call ds:VariantInit  +
xor edi edi +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
mov esi [ebp+18h] +
mov eax [ebp+1Ch] +
mov [esi] eax +
cmp [ebp+8] edi +
jz loc_10064D6  +
cmp [ebp+10h] edi +
jz loc_10064D6  +
cmp [ebp+14h] edi +
jz loc_10064D6  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset aGetdwordvalue  +
push dword ptr [ebp+8]  +
call sub_1005FBC  +
cmp eax edi +
jl loc_10064D6  +
cmp word ptr [ebp-20h] 1 +
jz loc_10064A3  +
cmp [ebp-20h] di +
jz loc_10064A3  +
lea ecx [ebp-20h] +
call sub_1004ACB  +
mov [esi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
inc eax  +
jmp loc_10064EC  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10064D6 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-20h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_100454A  +
xor eax eax +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-20h] esi +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
mov edi [ebp+8] +
cmp edi esi +
jz loc_1006705  +
mov byte ptr [ebp-4] 1 +
push offset aWin32_operatin  +
lea ecx [ebp+8] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1006545  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1006547  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-18h] +
push edx  +
push esi  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+48h]  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
cmp ecx esi +
jz loc_1006569  +
call sub_100506E  +
mov [ebp+8] esi +
cmp edi esi +
jge loc_1006573  +
push edi  +
call sub_1014187  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call sub_100481D  +
cmp eax esi +
jge loc_1006588  +
push eax  +
call sub_1014187  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
or ebx 0FFFFFFFFh +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax esi +
jge loc_10065A9  +
push eax  +
call sub_1014187  +
cmp [ebp-20h] esi +
jnz loc_10065D6  +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_10065BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_10065CE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] ebx +
jmp loc_1006709  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset aVersion  +
push dword ptr [ebp-1Ch]  +
call sub_1005A1D  +
test eax eax +
mov eax [ebp-1Ch] +
jz loc_10065B1  +
cmp eax esi +
jz loc_1006606  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_1006616  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-24h] esi +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi ebx +
jnz loc_100663D  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_101672F  +
mov ebx eax +
mov [ebp-24h] ebx +
jmp loc_10066D8  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
push 0Ah  +
push eax  +
call sub_101672F  +
mov ebx eax +
mov [ebp-24h] ebx +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
inc edi  +
push edi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_10066AE  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_101672F  +
mov esi eax +
jmp loc_10066D8  +
push eax  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 5 +
mov eax [eax] +
push 0Ah  +
push eax  +
call sub_101672F  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
imul ebx ebx +
add ebx esi +
mov [ebp-28h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
jmp loc_1006713  +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CHString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+8] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+10h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+14h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+20h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+24h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+28h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+2Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [esi+30h] +
call ??0CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 0Bh +
lea ecx [esi+30h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+2Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+28h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+24h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+20h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+1Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+18h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+14h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+10h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+8] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+4] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov [ebp+var_218] eax +
mov [ebp+nSize] esi +
cmp edi esi +
jz loc_100693E  +
cmp ebx esi +
jz loc_100693E  +
cmp eax esi +
jz loc_100693E  +
lea eax [ebp+Buffer] +
push eax  +
push 20h  +
push esi  +
push esi  +
push edi  +
push esi  +
call ds:DsGetDcNameW  +
test eax eax +
jnz loc_10068FC  +
mov eax [ebp+Buffer] +
inc esi  +
test byte ptr [eax+24h] 10h +
jz loc_10068F2  +
mov [ebx] esi +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1006940  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+nSize] 104h +
call ds:GetComputerNameW  +
test eax eax +
jz loc_100693E  +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_1014F64  +
test eax eax +
jnz loc_100693E  +
mov eax [ebp+var_218] +
mov [eax] esi +
jmp loc_10068F8  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
call sub_1018F40  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_1006A5F  +
cmp [ebp+arg_0] edi +
jz loc_1006A5F  +
push ebx  +
push esi  +
push [ebp+arg_0]  +
call sub_1018FE0  +
mov ebx eax +
xor esi esi +
mov [ebp+var_10] ebx +
cmp ebx edi +
jbe loc_10069AD  +
push 1  +
push esi  +
push [ebp+arg_0]  +
call sub_10196CD  +
cmp eax [ebp+var_8] +
jbe loc_10069A8  +
mov [ebp+var_8] eax +
inc esi  +
cmp esi ebx +
jb loc_1006995  +
mov [ebp+var_C] edi +
cmp ebx edi +
jbe loc_1006A13  +
xor esi esi +
push 1  +
push esi  +
push [ebp+arg_0]  +
call sub_10196CD  +
mov ebx eax +
cmp ebx [ebp+var_8] +
jz loc_10069D0  +
inc esi  +
cmp esi [ebp+var_10] +
jnz loc_10069B6  +
jmp loc_1006A05  +
cmp esi [ebp+var_10] +
jz loc_1006A05  +
push 2  +
push [ebp+var_4]  +
call sub_101942D  +
push edi  +
push edi  +
push esi  +
push [ebp+arg_0]  +
call sub_1019696  +
push eax  +
push edi  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call sub_1019894  +
push ebx  +
push 1  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call sub_10198D1  +
dec [ebp+var_8]  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_10] +
jb loc_10069B4  +
xor esi esi +
cmp [ebp+var_10] edi +
jbe loc_1006A4D  +
push edi  +
push edi  +
push esi  +
push [ebp+var_4]  +
call sub_1019696  +
push eax  +
push edi  +
push esi  +
push [ebp+arg_0]  +
call sub_1019894  +
push 1  +
push esi  +
push [ebp+var_4]  +
call sub_10196CD  +
push eax  +
push 1  +
push esi  +
push [ebp+arg_0]  +
call sub_10198D1  +
inc esi  +
cmp esi [ebp+var_10] +
jb loc_1006A1A  +
pop esi  +
pop ebx  +
cmp [ebp+var_4] edi +
jz loc_1006A6A  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018FB5  +
jmp loc_1006A6A  +
push 8007000Eh  +
call ds:SetLastError  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov edx 1FCh +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_1006A8C  +
mov eax [ecx+4Ch] +
lea edx [ebp+var_4] +
push edx  +
push dword ptr [ecx+14h]  +
push eax  +
push ebx  +
call ds:DsBindWithCredW  +
test eax eax +
jnz loc_1006AF6  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
xor eax eax +
cmp [ebp+arg_4] ebx +
push 1  +
setnz al  +
push 1  +
inc eax  +
inc eax  +
push eax  +
push ebx  +
push [ebp+var_4]  +
call ds:DsCrackNamesW  +
test eax eax +
jnz loc_1006AF6  +
mov eax [ebp+var_8] +
mov eax [eax+4] +
push 0FEh  +
push dword ptr [eax+8]  +
push [ebp+arg_0]  +
call sub_101570A  +
lea eax [ebp+var_4] +
push eax  +
call ds:DsUnBindW  +
push [ebp+var_8]  +
call ds:DsFreeNameResultW  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10067D7  +
test [ebp+arg_0] 1 +
jz loc_1006B1A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-4] ebx +
lea edi [esi+78h] +
push edi  +
push 1F1h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
lea eax [ebp-1Ch] +
push eax  +
push offset stru_1001620  +
push 1  +
push ebx  +
push offset stru_1001610  +
call ds:CoCreateInstance  +
mov [ebp-14h] eax +
cmp eax ebx +
jge loc_1006B86  +
push edi  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-14h]  +
call sub_1014187  +
push edi  +
push 1F2h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
cmp [esi+44h] ebx +
jz loc_1006BC5  +
mov eax [ebp-1Ch] +
mov edi [eax] +
lea eax [ebp-18h] +
push eax  +
lea ecx [esi+24h] +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
lea ecx [esi+5Ch] +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
push dword ptr [ebp-1Ch]  +
call dword ptr [edi+20h]  +
mov [ebp-14h] eax +
jmp loc_1006C25  +
lea ebx [esi+24h] +
push ebx  +
push offset asc_10014CC  +
lea eax [ebp-20h] +
push eax  +
call ??H@YG?AVCHString@@PBGABV0@@Z  +
mov byte ptr [ebp-4] 1 +
push offset word_1001370  +
lea ecx [ebp-20h] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [esi+5Ch] +
push eax  +
lea ecx [ebp-20h] +
call ??YCHString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-1Ch] +
mov edi [eax] +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
lea ecx [ebp-20h] +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
push dword ptr [ebp-1Ch]  +
call dword ptr [edi+20h]  +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
xor ebx ebx +
cmp [ebp-14h] ebx +
jge loc_1006C3F  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-14h]  +
call sub_1014187  +
lea eax [esi+78h] +
push eax  +
push 1F3h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
mov eax [ebp-18h] +
lea ecx [esi+2Ch] +
mov edi [eax] +
cmp dword ptr [esi+60h] 2 +
jnz loc_1006C72  +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
push dword ptr [ebp-18h]  +
call dword ptr [edi+28h]  +
jmp loc_1006C7E  +
call ?AllocSysString@CHString@@QBEPAGXZ  +
push eax  +
push dword ptr [ebp-18h]  +
call dword ptr [edi+24h]  +
mov [ebp-14h] eax +
lea edi [esi+78h] +
push edi  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
cmp [ebp-14h] ebx +
jge loc_1006CA5  +
push edi  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-14h]  +
call sub_1014187  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1006D14  +
mov eax [ebp-24h] +
mov edi [eax+4] +
mov [ebp-14h] edi +
push edi  +
call ds:SetLastError  +
call sub_1014CC4  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
cmp edi 800700CEh +
jnz loc_1006D08  +
push 1E6h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1006D12 +
retn   +
xor ebx ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1006D24  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1006D31  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1006D55  +
cmp ecx 7FFFFFFFh +
jbe loc_1006D5A  +
mov eax 80070057h +
test eax eax +
jl loc_1006D97  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1006D87  +
cmp eax esi +
ja loc_1006D87  +
jnz loc_1006D92  +
jmp loc_1006D8C  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 610h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_5FC] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax ecx +
lea ecx [eax+78h] +
push ecx  +
push 0  +
push dword ptr [eax+74h]  +
call sub_10037D1  +
mov ecx 0FEh +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1006DDB  +
mov esi ds:__iob_func +
mov ebx offset asc_10014C8 +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 129h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 12Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp+Time] +
push eax  +
call ds:GetLocalTime  +
lea eax [ebp+var_5FC] +
push eax  +
call sub_1014EC9  +
push 0FEh  +
lea ecx [ebp+DateStr] +
push ecx  +
mov ecx [ebp+var_5FC] +
dec ecx  +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx offset aMmDdYyyy +
push ecx  +
lea ecx [ebp+Time] +
push ecx  +
push 0  +
push eax  +
call ds:GetDateFormatW  +
push 0FEh  +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [ebp+var_5FC] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp+Time] +
push eax  +
push 0  +
push 400h  +
call ds:GetTimeFormatW  +
lea eax [ebp+TimeStr] +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
push 12Bh  +
call sub_1017157  +
push eax  +
push 1  +
push 2  +
call esi  +
add eax 20h +
push eax  +
call sub_1017004  +
add esp 18h +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+10h]  +
push dword ptr [edi+4]  +
push 67h  +
call sub_1017157  +
push eax  +
push 1  +
push 2  +
call esi  +
add eax 20h +
push eax  +
call sub_1017004  +
add esp 18h +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+10h]  +
push dword ptr [edi+4]  +
push 67h  +
call sub_1017157  +
push eax  +
lea eax [ebp+String] +
push 0FEh  +
push eax  +
call sub_1006D3F  +
add esp 14h +
lea eax [ebp+String] +
push eax  +
call sub_1015618  +
mov [ebp+var_600] eax +
test eax eax +
jbe loc_1006F57  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
dec [ebp+var_600]  +
jnz loc_1006F3C  +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 0FEh  +
push dword ptr [edi+14h]  +
lea eax [ebp+String] +
push eax  +
call sub_101570A  +
push 0  +
lea eax [ebp+String] +
push eax  +
call sub_1014F43  +
test eax eax +
jz loc_1006FB5  +
push 0FEh  +
push 181h  +
call sub_1017157  +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_101570A  +
push 6Fh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+28h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 6Eh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+24h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 6Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+1Ch]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 0BEh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+0Ch]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 70h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [edi+8]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
inc eax  +
pop ebx  +
call sub_101453D  +
leave   +
retn 4  +
***
call __EH_prolog3_catch_GS  +
mov esi ecx +
mov ebx [ebp+8] +
xor edi edi +
mov [ebp-218h] edi +
mov [ebp-214h] edi +
mov [ebp-4] edi +
push offset aRootDefault  +
lea ecx [ebp-220h] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] edi +
jz loc_10070EF  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-21Ch] eax +
jmp loc_10070F5  +
mov [ebp-21Ch] edi +
mov eax [esi+18h] +
mov ecx [esi+24h] +
push edi  +
lea edx [ebp-218h] +
push edx  +
push dword ptr [ebp-21Ch]  +
push edi  +
lea edx [esi+14h] +
push edx  +
push dword ptr [esi+30h]  +
push eax  +
push ecx  +
lea eax [ebp-214h] +
push eax  +
push dword ptr [esi]  +
call sub_1005276  +
mov byte ptr [ebp-4] 0 +
mov ecx [ebp-220h] +
cmp ecx edi +
jz loc_100713A  +
call sub_100506E  +
mov [ebp-220h] edi +
cmp [ebp-218h] edi +
jge loc_100714D  +
push dword ptr [ebp-218h]  +
call sub_1014187  +
mov esi 0FEh +
push esi  +
push offset aSoftwareMicros  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
mov eax [ebx] +
push esi  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_1015C73  +
mov edi 138Dh +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebx+8] +
push eax  +
push offset aProfileimagepa  +
lea eax [ebp-210h] +
push eax  +
mov esi 80000002h +
push esi  +
push dword ptr [ebp-214h]  +
call sub_1006335  +
push edi  +
call sub_1017157  +
push eax  +
add ebx 0Ch +
push ebx  +
push offset aCentralprofile  +
lea eax [ebp-210h] +
push eax  +
push esi  +
push dword ptr [ebp-214h]  +
call sub_1006335  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-214h] +
test eax eax +
jz loc_10071D8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_1007238  +
mov eax [ebp-224h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-214h] +
test eax eax +
jz loc_100722C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-214h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1007236 +
retn   +
xor eax eax +
call sub_101466B  +
retn 4  +
***
call __EH_prolog3_catch  +
mov edi ecx +
xor ebx ebx +
mov [ebp-20h] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
push offset aRsop_session  +
lea ecx [ebp-1Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_100727C  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_100727E  +
xor ecx ecx +
mov eax [ebp+8] +
mov edx [eax] +
lea esi [ebp-18h] +
push esi  +
push ebx  +
push 30h  +
push ecx  +
push eax  +
call dword ptr [edx+48h]  +
mov esi eax +
mov [ebp-4] bl +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_10072A3  +
call sub_100506E  +
mov [ebp-1Ch] ebx +
cmp esi ebx +
jge loc_10072AD  +
push esi  +
call sub_1014187  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-18h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_10072C2  +
push eax  +
call sub_1014187  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-14h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10072E1  +
push eax  +
call sub_1014187  +
cmp [ebp-20h] ebx +
jnz loc_100730B  +
push 138Dh  +
call sub_1017157  +
push eax  +
mov ecx [ebp+0Ch] +
cmp [ebp+10h] ebx +
jz loc_10072FE  +
add ecx 1Ch +
jmp loc_1007301  +
add ecx 18h +
call ??4CHString@@QAEABV0@PBG@Z  +
jmp loc_100739E  +
cmp [ebp+10h] ebx +
jz loc_1007371  +
mov esi 138Dh +
push esi  +
call sub_1017157  +
push eax  +
mov edi [ebp+0Ch] +
lea eax [edi+1Ch] +
push eax  +
push offset aSite  +
push dword ptr [ebp-14h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100733E  +
push 800300FDh  +
call sub_1014187  +
push esi  +
call sub_1017157  +
push eax  +
lea eax [edi+10h] +
push eax  +
push offset a__server  +
push dword ptr [ebp-14h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1007364  +
push 800300FDh  +
call sub_1014187  +
push esi  +
call sub_1017157  +
push eax  +
add edi 14h +
push edi  +
jmp loc_1007383  +
push 138Dh  +
call sub_1017157  +
push eax  +
mov eax [ebp+0Ch] +
add eax 18h +
push eax  +
push offset aTargetname  +
push dword ptr [ebp-14h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100739E  +
push 800300FDh  +
call sub_1014187  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_10073B2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_10073BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_1007427  +
mov eax [ebp-24h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100740B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100741B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1007425 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-70h] esi +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-5Ch] edi +
mov [ebp-50h] edi +
mov [ebp-54h] edi +
mov [ebp-58h] edi +
mov [ebp-68h] edi +
mov [ebp-48h] edi +
mov [ebp-44h] edi +
mov [ebp-60h] edi +
mov [ebp-38h] edi +
xor ebx ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] edi +
mov [ebp-34h] edi +
mov [ebp-2Ch] edi +
mov [ebp-28h] edi +
mov [ebp-3Ch] edi +
mov [ebp-40h] edi +
mov [ebp-24h] edi +
mov [ebp-14h] edi +
mov byte ptr [ebp-4] 1 +
cmp [ebp+8] edi +
jz loc_1007495  +
cmp [ebp+0Ch] edi +
jnz loc_100749F  +
push 800300FDh  +
call sub_1014187  +
call sub_1018F40  +
mov [ebp-24h] eax +
call sub_1018F40  +
mov [ebp-14h] eax +
cmp [ebp-24h] edi +
jz loc_10074B8  +
cmp eax edi +
jnz loc_10074C2  +
push 8007000Eh  +
call sub_1014187  +
push offset aRsop_gplink  +
lea ecx [ebp+0Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] edi +
jz loc_10074DD  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10074DF  +
xor eax eax +
mov ecx [ebp+8] +
mov ecx [ecx] +
lea edx [ebp-34h] +
push edx  +
push edi  +
push 30h  +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [ecx+48h]  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
cmp ecx edi +
jz loc_1007508  +
call sub_100506E  +
mov [ebp+0Ch] edi +
cmp [ebp-20h] edi +
jge loc_1007515  +
push dword ptr [ebp-20h]  +
call sub_1014187  +
push dword ptr [esi+14h]  +
push dword ptr [ebp-34h]  +
call sub_100481D  +
mov [ebp-20h] eax +
cmp eax edi +
jge loc_100752D  +
push eax  +
call sub_1014187  +
xor esi esi +
inc esi  +
mov eax [ebp-34h] +
mov ecx [eax] +
lea edx [ebp-48h] +
push edx  +
lea edx [ebp-2Ch] +
push edx  +
push esi  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-20h] eax +
cmp eax edi +
jge loc_1007551  +
push eax  +
call sub_1014187  +
cmp [ebp-48h] edi +
jz loc_1007855  +
push edi  +
lea eax [ebp-44h] +
push eax  +
push offset aAppliedorder  +
push dword ptr [ebp-2Ch]  +
call sub_1005B07  +
cmp eax edi +
jnz loc_100757A  +
push 800300FDh  +
call sub_1014187  +
push edi  +
lea eax [ebp-50h] +
push eax  +
push offset aEnabled  +
push dword ptr [ebp-2Ch]  +
call sub_1005B9C  +
cmp eax edi +
jnz loc_100759A  +
push 800300FDh  +
call sub_1014187  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aGpo  +
push dword ptr [ebp-2Ch]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_10075C4  +
push 800300FDh  +
call sub_1014187  +
push offset aRsop_gpo_id  +
lea ecx [ebp-18h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100784A  +
push dword ptr [ebp-18h]  +
lea ecx [ebp-4Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] edi +
jz loc_10075F3  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10075F5  +
xor eax eax +
mov ecx [ebp+8] +
mov ecx [ecx] +
push edi  +
lea edx [ebp-28h] +
push edx  +
push edi  +
push edi  +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [ecx+18h]  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-4Ch] +
cmp ecx edi +
jz loc_100761E  +
call sub_100506E  +
mov [ebp-4Ch] edi +
cmp [ebp-20h] edi +
jge loc_1007638  +
cmp dword ptr [ebp-20h] 80041002h +
jz loc_100784A  +
push dword ptr [ebp-20h]  +
call sub_1014187  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aName  +
push dword ptr [ebp-28h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_1007662  +
push 800300FDh  +
call sub_1014187  +
push edi  +
lea eax [ebp-5Ch] +
push eax  +
push offset aFilterallowed  +
push dword ptr [ebp-28h]  +
call sub_1005B9C  +
cmp eax edi +
jnz loc_1007682  +
push 800300FDh  +
call sub_1014187  +
push edi  +
lea eax [ebp-54h] +
push eax  +
push offset aEnabled  +
push dword ptr [ebp-28h]  +
call sub_1005B9C  +
cmp eax edi +
jnz loc_10076A2  +
push 800300FDh  +
call sub_1014187  +
push edi  +
lea eax [ebp-58h] +
push eax  +
push offset aAccessdenied  +
push dword ptr [ebp-28h]  +
call sub_1005B9C  +
cmp eax edi +
jnz loc_10076C2  +
push 800300FDh  +
call sub_1014187  +
push edi  +
lea eax [ebp-60h] +
push eax  +
push offset aVersion_0  +
push dword ptr [ebp-28h]  +
call sub_1005B07  +
cmp eax edi +
jnz loc_10076E2  +
push 800300FDh  +
call sub_1014187  +
cmp [ebp-44h] edi +
jbe loc_1007718  +
push 2  +
push dword ptr [ebp-24h]  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-24h]  +
call sub_1019894  +
push dword ptr [ebp-44h]  +
push esi  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-24h]  +
call sub_10198D1  +
inc dword ptr [ebp-38h]  +
jmp loc_100784A  +
or eax 0FFFFFFFFh +
cmp [ebp-50h] eax +
jz loc_1007743  +
push 2  +
push dword ptr [ebp-14h]  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 12Dh  +
jmp loc_1007836  +
cmp [ebp-54h] eax +
jz loc_100776B  +
push 2  +
push dword ptr [ebp-14h]  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 12Eh  +
jmp loc_1007836  +
cmp [ebp-58h] eax +
jnz loc_1007793  +
push 2  +
push dword ptr [ebp-14h]  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 12Fh  +
jmp loc_1007836  +
cmp [ebp-5Ch] eax +
jz loc_10077F8  +
push 3  +
push dword ptr [ebp-14h]  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 12Ch  +
call sub_1017157  +
push eax  +
push esi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aFilterid  +
push dword ptr [ebp-28h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_10077F0  +
push 800300FDh  +
call sub_1014187  +
push edi  +
push dword ptr [ebp-18h]  +
push 2  +
jmp loc_100783D  +
push 2  +
push dword ptr [ebp-14h]  +
cmp [ebp-60h] edi +
jnz loc_100781D  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 130h  +
jmp loc_1007836  +
call sub_101942D  +
push edi  +
push dword ptr [ebp-18h]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
push edi  +
push 131h  +
call sub_1017157  +
push eax  +
push esi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1019894  +
inc ebx  +
mov [ebp-30h] ebx +
xor eax eax +
inc eax  +
cmp eax esi +
jz loc_1007530  +
push dword ptr [ebp-24h]  +
call sub_1006956  +
push dword ptr [ebp-24h]  +
call sub_1018FE0  +
mov [ebp-38h] eax +
mov [ebp-1Ch] edi +
push 20h  +
pop ebx  +
mov esi ds:__iob_func +
mov eax [ebp-38h] +
cmp [ebp-1Ch] eax +
jnb loc_10078B9  +
push offset asc_100179C  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push edi  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-24h]  +
call sub_1019696  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-1Ch]  +
jmp loc_1007874  +
cmp eax edi +
ja loc_10078F0  +
push offset asc_100179C  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-14h]  +
call sub_1018FE0  +
mov [ebp-30h] eax +
cmp eax edi +
jbe loc_1007950  +
push 72h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 72h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-1Ch] eax +
cmp dword ptr [ebp-1Ch] 4 +
jbe loc_1007950  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-1Ch]  +
jmp loc_1007933  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
mov [ebp-1Ch] edi +
mov eax [ebp-1Ch] +
cmp eax [ebp-30h] +
jnb loc_1007B1E  +
push offset asc_100179C  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push edi  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call sub_1019696  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 0C7h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 1  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call sub_1019696  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push edi  +
push 1  +
push 12Ch  +
call sub_1017157  +
push eax  +
push 1  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call sub_1019696  +
push eax  +
call sub_1014F64  +
test eax eax +
jnz loc_1007B04  +
cmp [ebp-68h] edi +
jnz loc_1007A5F  +
push offset aRootPolicy  +
lea ecx [ebp-64h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [eax] edi +
jz loc_1007A10  +
mov eax [eax] +
mov eax [eax] +
mov [ebp+8] eax +
jmp loc_1007A13  +
mov [ebp+8] edi +
mov eax [ebp-70h] +
mov ecx [eax+18h] +
push edi  +
lea edx [ebp-20h] +
push edx  +
push dword ptr [ebp+8]  +
push edi  +
lea edx [eax+14h] +
push edx  +
push dword ptr [eax+30h]  +
push ecx  +
push dword ptr [eax+24h]  +
lea ecx [ebp-40h] +
push ecx  +
push dword ptr [eax]  +
call sub_1005276  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-64h] +
cmp ecx edi +
jz loc_1007A4B  +
call sub_100506E  +
mov [ebp-64h] edi +
cmp [ebp-20h] edi +
jge loc_1007A58  +
push dword ptr [ebp-20h]  +
call sub_1014187  +
mov dword ptr [ebp-68h] 1 +
push 2  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call sub_1019696  +
push eax  +
lea ecx [ebp-6Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [eax] edi +
jz loc_1007A86  +
mov eax [eax] +
mov eax [eax] +
mov [ebp+8] eax +
jmp loc_1007A89  +
mov [ebp+8] edi +
mov eax [ebp-40h] +
mov ecx [eax] +
push edi  +
lea edx [ebp-3Ch] +
push edx  +
push edi  +
push edi  +
push dword ptr [ebp+8]  +
push eax  +
call dword ptr [ecx+18h]  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-6Ch] +
cmp ecx edi +
jz loc_1007AB2  +
call sub_100506E  +
mov [ebp-6Ch] edi +
cmp [ebp-20h] edi +
jl loc_1007B04  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aName  +
push dword ptr [ebp-3Ch]  +
call sub_1005A1D  +
push 73h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-18h]  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-1Ch]  +
jmp loc_1007965  +
cmp [ebp-24h] edi +
jz loc_1007B2F  +
lea eax [ebp-24h] +
push eax  +
call sub_1018FB5  +
mov [ebp-24h] edi +
cmp [ebp-14h] edi +
jz loc_1007B40  +
lea eax [ebp-14h] +
push eax  +
call sub_1018FB5  +
mov [ebp-14h] edi +
mov [ebp-4] edi +
mov eax [ebp-2Ch] +
cmp eax edi +
jz loc_1007B53  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-2Ch] edi +
mov eax [ebp-34h] +
cmp eax edi +
jz loc_1007B63  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-34h] edi +
mov eax [ebp-28h] +
cmp eax edi +
jz loc_1007B73  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] edi +
mov eax [ebp-3Ch] +
cmp eax edi +
jz loc_1007B83  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-3Ch] edi +
mov eax [ebp-40h] +
cmp eax edi +
jz loc_1007B93  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-40h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1007C67  +
mov eax [ebp-74h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-2Ch] +
xor edi edi +
cmp eax edi +
jz loc_1007BEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-2Ch] edi +
mov eax [ebp-34h] +
cmp eax edi +
jz loc_1007BFE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-34h] edi +
mov eax [ebp-28h] +
cmp eax edi +
jz loc_1007C0E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] edi +
mov eax [ebp-3Ch] +
cmp eax edi +
jz loc_1007C1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-3Ch] edi +
mov eax [ebp-40h] +
cmp eax edi +
jz loc_1007C2E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-40h] edi +
cmp [ebp-24h] edi +
jz loc_1007C3F  +
lea eax [ebp-24h] +
push eax  +
call sub_1018FB5  +
mov [ebp-24h] edi +
cmp [ebp-14h] edi +
jz loc_1007C50  +
lea eax [ebp-14h] +
push eax  +
call sub_1018FB5  +
mov [ebp-14h] edi +
mov [ebp-4] edi +
mov eax offset loc_1007C59 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
lea ecx [ebp-30h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov esi [ebp+8] +
cmp esi ebx +
jnz loc_1007CB2  +
push 800300FDh  +
call sub_1014187  +
mov edi offset aRsopdeletesess +
push edi  +
lea ecx [ebp+8] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_1007CCE  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1007CD0  +
xor eax eax +
mov ecx [esi] +
push ebx  +
lea edx [ebp-1Ch] +
push edx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+4Ch]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1007CF2  +
call sub_100506E  +
mov [ebp+8] ebx +
cmp esi ebx +
jge loc_1007CFC  +
push esi  +
call sub_1014187  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jge loc_1007D14  +
push eax  +
call sub_1014187  +
push dword ptr [ebp+0Ch]  +
push offset aNamespace  +
push dword ptr [ebp-14h]  +
call sub_1005E75  +
cmp eax ebx +
jge loc_1007D2E  +
push eax  +
call sub_1014187  +
push edi  +
lea ecx [ebp-28h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 4 +
push offset aRsoploggingmod  +
lea ecx [ebp-24h] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [esi] ebx +
jz loc_1007D58  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1007D5A  +
xor esi esi +
cmp [eax] ebx +
jz loc_1007D64  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1007D66  +
xor ecx ecx +
mov eax [ebp+10h] +
mov edx [eax] +
push ebx  +
lea edi [ebp-18h] +
push edi  +
push dword ptr [ebp-14h]  +
push ebx  +
push ebx  +
push esi  +
push ecx  +
push eax  +
call dword ptr [edx+60h]  +
mov esi eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-24h] +
cmp ecx ebx +
jz loc_1007D90  +
call sub_100506E  +
mov [ebp-24h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-28h] +
cmp ecx ebx +
jz loc_1007DA3  +
call sub_100506E  +
mov [ebp-28h] ebx +
cmp [ebp-18h] ebx +
jnz loc_1007DAD  +
mov esi 80004005h +
cmp esi ebx +
jge loc_1007E2B  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 5Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1007DED  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1007DFD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1007E0D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov [ebp-4] bl +
lea ecx [ebp-30h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
jmp loc_1007F1F  +
push ebx  +
lea eax [ebp-2Ch] +
push eax  +
push offset aHresult  +
push dword ptr [ebp-18h]  +
call sub_1005B07  +
mov [ebp-20h] eax +
cmp eax ebx +
jnz loc_1007E4E  +
push 800300FDh  +
call sub_1014187  +
cmp [ebp-2Ch] ebx +
jz loc_1007E82  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 5Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov [ebp-20h] ebx +
xor eax eax +
inc eax  +
mov [ebp-20h] eax +
mov [ebp-4] eax +
jmp loc_1007ED5  +
mov eax [ebp-34h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
and dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1007ED3 +
retn   +
xor ebx ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1007EE5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1007EF5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1007F05  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov [ebp-4] bl +
lea ecx [ebp-30h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-20h] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor edi edi +
mov [ebp-14h] edi +
mov [ebp-18h] edi +
mov [ebp-24h] edi +
mov [ebp-28h] edi +
lea ecx [ebp-2Ch] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
lea eax [esi+78h] +
push eax  +
push 16Fh  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push offset aWin32_operatin  +
lea ecx [ebp-1Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] edi +
jz loc_1007F89  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1007F8B  +
xor ecx ecx +
mov eax [esi+4] +
mov edx [eax] +
lea ebx [ebp-14h] +
push ebx  +
push edi  +
push 30h  +
push ecx  +
push eax  +
call dword ptr [edx+48h]  +
mov ebx eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx edi +
jz loc_1007FB1  +
call sub_100506E  +
mov [ebp-1Ch] edi +
cmp ebx edi +
jge loc_1007FBB  +
push ebx  +
call sub_1014187  +
push dword ptr [esi+14h]  +
push dword ptr [ebp-14h]  +
call sub_100481D  +
cmp eax edi +
jge loc_1007FD0  +
push eax  +
call sub_1014187  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-18h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax edi +
jge loc_1007FEF  +
push eax  +
call sub_1014187  +
mov ebx 138Dh +
push ebx  +
call sub_1017157  +
push eax  +
mov eax [ebp+8] +
add eax 24h +
push eax  +
push offset aVersion  +
push dword ptr [ebp-18h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_100801D  +
push 800300FDh  +
call sub_1014187  +
push ebx  +
call sub_1017157  +
push eax  +
mov eax [ebp+8] +
add eax 20h +
push eax  +
push offset aCaption  +
push dword ptr [ebp-18h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_1008046  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-14h] +
cmp eax edi +
jz loc_1008056  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] edi +
push offset aWin32_computer  +
lea ecx [ebp-20h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] edi +
jz loc_1008074  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
jmp loc_1008077  +
mov [ebp-1Ch] edi +
mov eax [esi+4] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push edi  +
push 30h  +
push dword ptr [ebp-1Ch]  +
push eax  +
call dword ptr [ecx+48h]  +
mov [ebp-1Ch] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-20h] +
cmp ecx edi +
jz loc_10080A0  +
call sub_100506E  +
mov [ebp-20h] edi +
cmp [ebp-1Ch] edi +
jge loc_10080AD  +
push dword ptr [ebp-1Ch]  +
call sub_1014187  +
push dword ptr [esi+14h]  +
push dword ptr [ebp-14h]  +
call sub_100481D  +
cmp eax edi +
jge loc_10080C2  +
push eax  +
call sub_1014187  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-18h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax edi +
jge loc_10080E1  +
push eax  +
call sub_1014187  +
push edi  +
lea eax [ebp-28h] +
push eax  +
push offset aDomainrole  +
push dword ptr [ebp-18h]  +
call sub_1005B07  +
cmp eax edi +
jnz loc_1008101  +
push 800300FDh  +
call sub_1014187  +
push ebx  +
call sub_1017157  +
push eax  +
lea eax [esi+4Ch] +
push eax  +
push offset aDomain  +
push dword ptr [ebp-18h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_1008127  +
push 800300FDh  +
call sub_1014187  +
push ebx  +
call sub_1017157  +
push eax  +
add esi 50h +
push esi  +
push offset aName  +
push dword ptr [ebp-18h]  +
call sub_1005A1D  +
cmp eax edi +
jnz loc_100814D  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-28h] +
sub eax edi +
jz loc_1008186  +
dec eax  +
jz loc_100817F  +
dec eax  +
jz loc_1008178  +
dec eax  +
jz loc_1008171  +
dec eax  +
jz loc_100816A  +
dec eax  +
jnz loc_100819C  +
push 111h  +
jmp loc_100818B  +
push 110h  +
jmp loc_100818B  +
push 10Fh  +
jmp loc_100818B  +
push 10Eh  +
jmp loc_100818B  +
push 10Dh  +
jmp loc_100818B  +
push 10Ch  +
call sub_1017157  +
mov ecx [ebp+8] +
push eax  +
add ecx 28h +
call ??4CHString@@QAEABV0@PBG@Z  +
mov [ebp-4] edi +
jmp loc_1008283  +
mov eax [ebp-30h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-14h] +
xor edi edi +
cmp eax edi +
jz loc_10081EB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_10081FB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
mov [ebp-4] edi +
mov eax offset loc_1008204 +
retn   +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
mov eax [ebp-14h] +
xor edi edi +
cmp eax edi +
jz loc_100823E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_100824E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov [ebp-4] edi +
mov eax offset loc_1008281 +
retn   +
xor edi edi +
mov eax [ebp-14h] +
cmp eax edi +
jz loc_1008293  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_10082A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
xor esi esi +
inc esi  +
jmp loc_1008206  +
***
call __EH_prolog3_catch_GS  +
mov edi ecx +
mov [ebp-434h] edi +
mov esi [ebp+8] +
xor ebx ebx +
mov [ebp-414h] ebx +
mov [ebp-480h] ebx +
mov [ebp-46Ch] ebx +
mov [ebp-450h] ebx +
mov [ebp-428h] ebx +
mov [ebp-438h] ebx +
mov [ebp-424h] ebx +
mov [ebp-41Ch] ebx +
mov [ebp-420h] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-418h] ebx +
mov [ebp-430h] ebx +
lea ecx [ebp-410h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-43Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-440h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx 1FCh +
mov [ebp-448h] ecx +
lea eax [ebp-210h] +
mov [ebp-474h] eax +
cmp [ebp-448h] ebx +
jz loc_100836B  +
mov [eax] bl +
inc eax  +
mov [ebp-474h] eax +
dec dword ptr [ebp-448h]  +
jmp loc_1008352  +
mov [ebp-444h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-470h] eax +
cmp [ebp-444h] ebx +
jz loc_1008396  +
mov [eax] bl +
inc eax  +
mov [ebp-470h] eax +
dec dword ptr [ebp-444h]  +
jmp loc_100837D  +
push offset aRsop_session  +
lea ecx [ebp-454h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_10083B4  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10083B6  +
xor eax eax +
mov ecx [esi] +
lea edx [ebp-418h] +
push edx  +
push ebx  +
push 30h  +
push eax  +
push esi  +
call dword ptr [ecx+48h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-454h] +
cmp ecx ebx +
jz loc_10083E6  +
call sub_100506E  +
mov [ebp-454h] ebx +
cmp [ebp-414h] ebx +
jge loc_10083F9  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-418h]  +
call sub_100481D  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1008417  +
push eax  +
call sub_1014187  +
mov [ebp-414h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-414h] ebx +
jnz loc_10084A2  +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-450h] +
push edx  +
lea edx [ebp-41Ch] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100845C  +
push eax  +
call sub_1014187  +
cmp [ebp-450h] ebx +
jnz loc_10084AE  +
cmp [ebp-46Ch] ebx +
jnz loc_10084A2  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov dword ptr [ebp-4] 1 +
jmp loc_1008BE3  +
xor eax eax +
inc eax  +
mov [ebp-46Ch] eax +
cmp [ebp+0Ch] eax +
jnz loc_100851C  +
push 0B9h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 0B9h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-424h] eax +
cmp dword ptr [ebp-424h] 4 +
jbe loc_100857C  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-424h]  +
jmp loc_10084F9  +
push 0B8h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 0B8h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-424h] eax +
cmp dword ptr [ebp-424h] 4 +
jbe loc_100857C  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-424h]  +
jmp loc_1008559  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-464h] +
push eax  +
call ds:VariantInit  +
push offset aSecuritygroups  +
lea ecx [ebp-44Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_10085B9  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_10085BB  +
xor ecx ecx +
mov eax [ebp-41Ch] +
mov edx [eax] +
push ebx  +
push ebx  +
lea edi [ebp-464h] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-44Ch] +
cmp ecx ebx +
jz loc_10085F1  +
call sub_100506E  +
mov [ebp-44Ch] ebx +
cmp [ebp-414h] ebx +
jge loc_100861A  +
xor eax eax +
mov [ebp-464h] ax +
lea eax [ebp-464h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
cmp word ptr [ebp-464h] 1 +
jz loc_1008AE1  +
cmp [ebp-464h] bx +
jz loc_1008AE1  +
mov edi [ebp-464h] +
and edi 0DFFFh +
mov [ebp-478h] edi +
mov eax [ebp-45Ch] +
mov [ebp-440h] eax +
cmp eax ebx +
jz loc_100869C  +
lea ecx [ebp-428h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1008677  +
push eax  +
call sub_1014187  +
lea eax [ebp-438h] +
push eax  +
push 1  +
push dword ptr [ebp-440h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100869C  +
push eax  +
call sub_1014187  +
cmp [ebp+0Ch] ebx +
jnz loc_1008768  +
mov eax [ebp-438h] +
lea eax ds:4[eax*4] +
push eax  +
call sub_101521E  +
mov ecx [ebp-434h] +
mov [ecx+54h] eax +
cmp eax ebx +
jnz loc_100875D  +
lea eax [ebp-464h] +
push eax  +
call ds:VariantClear  +
push 20001h  +
call esi  +
add eax 40h +
push eax  +
call sub_101716F  +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_10086FC  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_1008712  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-42Ch] +
cmp eax ebx +
jz loc_1008728  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-42Ch] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_100873E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov eax [ebp-430h] +
cmp eax ebx +
jz loc_1008C45  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-430h] ebx +
jmp loc_1008C45  +
mov eax ecx +
mov ecx [ebp-438h] +
mov [eax+58h] ecx +
mov eax [ebp-428h] +
cmp eax [ebp-438h] +
jg loc_1008B0A  +
push edi  +
lea ecx [ebp-410h] +
push ecx  +
push eax  +
push dword ptr [ebp-440h]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_100879C  +
push 800300FDh  +
call sub_1014187  +
cmp [ebp+0Ch] ebx +
jnz loc_100880E  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
lea eax [eax+eax+14h] +
push eax  +
call sub_101521E  +
mov edi [ebp-434h] +
mov ecx [edi+54h] +
mov edx [ebp-428h] +
mov [ecx+edx*4] eax +
mov eax [edi+54h] +
mov ecx [ebp-428h] +
lea eax [eax+ecx*4] +
cmp [eax] ebx +
jz loc_10086C9  +
mov ecx [ebp-410h] +
mov [ebp-47Ch] ecx +
push dword ptr [eax]  +
call sub_10152C7  +
shr eax 1 +
push eax  +
push dword ptr [ebp-47Ch]  +
mov eax [edi+54h] +
mov ecx [ebp-428h] +
push dword ptr [eax+ecx*4]  +
call sub_101570A  +
jmp loc_1008814  +
mov edi [ebp-434h] +
push dword ptr [ebp-410h]  +
push offset aWin32_sid_sidS  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-210h] +
push eax  +
lea ecx [ebp-468h] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [eax] ebx +
jz loc_1008853  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1008855  +
xor ecx ecx +
mov eax [edi+4] +
mov edx [eax] +
push ebx  +
lea edi [ebp-420h] +
push edi  +
push ebx  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+18h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-468h] +
cmp ecx ebx +
jz loc_1008888  +
call sub_100506E  +
mov [ebp-468h] ebx +
cmp [ebp-414h] ebx +
jge loc_100889B  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aAccountname  +
push dword ptr [ebp-420h]  +
call sub_1005A1D  +
push offset String  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aBatch  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aDialup  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aInteractive  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aService  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aSystem  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aTerminalServic  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aProxy  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aNetwork  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aEnterpriseDoma  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aAuthenticatedU  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aRestricted  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aSelf  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A88  +
push offset aAdministrators  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aBackupOperator  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aGuests  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aPowerUsers  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aReplicator  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aPreWindows2000  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008A81  +
push offset aUsers  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_1008A98  +
push offset aBuiltin  +
jmp loc_1008A8D  +
push offset aNtAuthority  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset dword_1001374  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_1008AD0  +
push dword ptr [ebp-410h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-428h]  +
mov edi [ebp-478h] +
jmp loc_1008768  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
push 20h  +
pop edi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
jmp loc_1008B0D  +
push 20h  +
pop edi  +
lea eax [ebp-464h] +
push eax  +
call ds:VariantClear  +
jmp loc_1008426  +
mov eax [ebp-484h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-418h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1008B6F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov eax [ebp-430h] +
cmp eax ebx +
jz loc_1008B85  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-430h] ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_1008B9B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_1008BB1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-42Ch] +
cmp eax ebx +
jz loc_1008BC7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-42Ch] ebx +
lea eax [ebp-464h] +
push eax  +
call ds:VariantClear  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1008BE1 +
retn   +
xor ebx ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_1008BF9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov eax [ebp-430h] +
cmp eax ebx +
jz loc_1008C09  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_1008C1F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_1008C35  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-42Ch] +
cmp eax ebx +
jz loc_1008C45  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-4] bl +
lea ecx [ebp-43Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-410h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 8  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
push offset aRsop_session  +
lea ecx [ebp-1Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_1008CA7  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1008CA9  +
xor ecx ecx +
mov eax [ebp+8] +
mov edx [eax] +
lea esi [ebp-14h] +
push esi  +
push ebx  +
push 30h  +
push ecx  +
push eax  +
call dword ptr [edx+48h]  +
mov esi eax +
mov [ebp-4] bl +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1008CCE  +
call sub_100506E  +
mov [ebp-1Ch] ebx +
cmp esi ebx +
jge loc_1008CD8  +
push esi  +
call sub_1014187  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-14h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_1008CED  +
push eax  +
call sub_1014187  +
mov [ebp+8] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp+8] ebx +
jnz loc_1008D5D  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-18h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1008D1D  +
push eax  +
call sub_1014187  +
cmp [ebp-20h] ebx +
jnz loc_1008D66  +
cmp [ebp-24h] ebx +
jnz loc_1008D5D  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008E8B  +
mov dword ptr [ebp-24h] 1 +
lea eax [ebp-38h] +
push eax  +
call ds:VariantInit  +
push offset aSlowlink  +
lea ecx [ebp+0Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_1008D92  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1008D94  +
xor ecx ecx +
mov eax [ebp-18h] +
mov edx [eax] +
push ebx  +
push ebx  +
lea edi [ebp-38h] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov [ebp+8] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1008DBA  +
call sub_100506E  +
mov [ebp+0Ch] ebx +
cmp [ebp+8] ebx +
jge loc_1008DD7  +
xor eax eax +
mov [ebp-38h] ax +
lea eax [ebp-38h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp+8]  +
call sub_1014187  +
push 0BAh  +
call sub_1017157  +
push eax  +
call esi  +
push 20h  +
pop edi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp word ptr [ebp-38h] 1 +
jz loc_1008E0D  +
movsx eax word ptr [ebp-30h] +
cmp eax 0FFFFFFFFh +
jnz loc_1008E06  +
push 10Ah  +
jmp loc_1008E12  +
push 10Bh  +
jmp loc_1008E12  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-38h] +
push eax  +
call ds:VariantClear  +
jmp loc_1008CF9  +
mov eax [ebp-28h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
lea eax [ebp-38h] +
push eax  +
call ds:VariantClear  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008E89 +
retn   +
xor ebx ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1008E9B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1008EA8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov [ebp-6F4h] ecx +
mov eax [ebp+8] +
mov [ebp-6FCh] eax +
xor ebx ebx +
mov [ebp-6D0h] ebx +
mov [ebp-6D4h] ebx +
mov [ebp-724h] ebx +
mov [ebp-6E4h] ebx +
lea ecx [ebp-6CCh] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-728h] ebx +
push 30h  +
pop ecx  +
mov esi offset aSelectFromRsop +
lea edi [ebp-0D4h] +
movs   +
push offset aWql  +
call ds:SysAllocString  +
mov esi eax +
mov [ebp-6DCh] ebx +
mov [ebp-6E0h] ebx +
push 8  +
pop ecx  +
lea eax [ebp-71Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1008F33  +
push 8  +
pop ecx  +
lea eax [ebp-714h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1008F42  +
push 10h  +
pop ecx  +
lea eax [ebp-70Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1008F51  +
mov byte ptr [ebp-4] 1 +
cmp esi ebx +
jnz loc_1008F69  +
mov dword ptr [ebp-6D0h] 8007000Eh +
cmp [ebp-6D0h] ebx +
jge loc_1008F7C  +
push dword ptr [ebp-6D0h]  +
call sub_1014187  +
lea eax [ebp-0D4h] +
push eax  +
lea ecx [ebp-6D8h] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_1008F9C  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1008F9E  +
xor ecx ecx +
mov eax [ebp-6FCh] +
mov edx [eax] +
lea edi [ebp-6DCh] +
push edi  +
push ebx  +
push 30h  +
push ecx  +
push esi  +
push eax  +
call dword ptr [edx+50h]  +
mov [ebp-6D0h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-6D8h] +
cmp ecx ebx +
jz loc_1008FD5  +
call sub_100506E  +
mov [ebp-6D8h] ebx +
cmp [ebp-6D0h] ebx +
jge loc_1008FE8  +
push dword ptr [ebp-6D0h]  +
call sub_1014187  +
mov edi [ebp-6F4h] +
push dword ptr [edi+14h]  +
push dword ptr [ebp-6DCh]  +
call sub_100481D  +
mov [ebp-6D0h] eax +
cmp eax ebx +
jge loc_100900C  +
push eax  +
call sub_1014187  +
mov [ebp-6F0h] ebx +
mov eax [ebp-6DCh] +
mov ecx [eax] +
lea edx [ebp-6F0h] +
push edx  +
lea edx [ebp-6E0h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-6D0h] eax +
cmp eax ebx +
jge loc_1009040  +
push eax  +
call sub_1014187  +
cmp [ebp-6F0h] ebx +
jz loc_100916C  +
cmp [ebp-6E0h] ebx +
jz loc_100916C  +
lea eax [ebp-70Ch] +
push eax  +
push offset aBegintime  +
push dword ptr [ebp-6E0h]  +
call sub_1005C2D  +
cmp eax ebx +
jnz loc_100907D  +
push 800300FDh  +
call sub_1014187  +
lea eax [ebp-71Ch] +
push eax  +
lea eax [ebp-70Ch] +
push eax  +
call ds:SystemTimeToFileTime  +
lea eax [ebp-714h] +
push eax  +
lea eax [ebp-71Ch] +
push eax  +
call ds:FileTimeToLocalFileTime  +
lea eax [ebp-70Ch] +
push eax  +
lea eax [ebp-714h] +
push eax  +
call ds:FileTimeToSystemTime  +
lea eax [ebp-6E4h] +
push eax  +
call sub_1014EC9  +
mov esi 0FEh +
push esi  +
lea ecx [ebp-4CCh] +
push ecx  +
mov ecx [ebp-6E4h] +
dec ecx  +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx offset aMmDdYyyy +
push ecx  +
lea ecx [ebp-70Ch] +
push ecx  +
push ebx  +
push eax  +
call ds:GetDateFormatW  +
push esi  +
lea eax [ebp-6C8h] +
push eax  +
mov eax [ebp-6E4h] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp-70Ch] +
push eax  +
push ebx  +
push 400h  +
call ds:GetTimeFormatW  +
lea eax [ebp-6C8h] +
push eax  +
lea eax [ebp-4CCh] +
push eax  +
push 179h  +
call sub_1017157  +
push eax  +
push esi  +
lea eax [ebp-2D0h] +
push eax  +
call sub_1006D3F  +
add esp 14h +
lea eax [ebp-2D0h] +
push eax  +
lea ecx [ebp-6CCh] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp-6E0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1009182  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea ecx [ebp-6CCh] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov eax [ebp-6DCh] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 0BCh  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-6CCh]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset aRootDefault  +
lea ecx [ebp-6E8h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_10091F2  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-6D8h] eax +
jmp loc_10091F8  +
mov [ebp-6D8h] ebx +
mov eax [edi+18h] +
mov ecx [edi+24h] +
push ebx  +
lea edx [ebp-6D0h] +
push edx  +
push dword ptr [ebp-6D8h]  +
push ebx  +
lea edx [edi+14h] +
push edx  +
push dword ptr [edi+30h]  +
push eax  +
push ecx  +
lea eax [ebp-6D4h] +
push eax  +
push dword ptr [edi]  +
call sub_1005276  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-6E8h] +
cmp ecx ebx +
jz loc_100923D  +
call sub_100506E  +
mov [ebp-6E8h] ebx +
cmp [ebp-6D0h] ebx +
jge loc_1009250  +
push dword ptr [ebp-6D0h]  +
call sub_1014187  +
mov edi [ebp+0Ch] +
dec edi  +
neg edi  +
sbb edi edi +
add edi 80000002h +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-6CCh] +
push eax  +
push offset aDcname  +
push offset aSoftwareMicr_0  +
push edi  +
push dword ptr [ebp-6D4h]  +
call sub_1006335  +
push dword ptr [ebp-6CCh]  +
call sub_101844A  +
cmp eax 1 +
jnz loc_10092C9  +
push 2  +
lea eax [ebp-6F8h] +
push eax  +
lea ecx [ebp-6CCh] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-6CCh] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-6F8h] +
call ??1CHString@@QAE@XZ  +
push 0BDh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-6CCh]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 0FFFFFFFFh  +
lea eax [ebp-6ECh] +
push eax  +
push offset aGrouppolicymin  +
push offset aSoftwarePolici  +
push edi  +
push dword ptr [ebp-6D4h]  +
call sub_1006438  +
cmp dword ptr [ebp-6ECh] 0FFFFFFFFh +
jnz loc_1009332  +
push offset a500Kbps  +
jmp loc_1009358  +
push dword ptr [ebp-6ECh]  +
push offset aDKbps  +
push 0FEh  +
lea eax [ebp-2D0h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-2D0h] +
push eax  +
lea ecx [ebp-6CCh] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 0BBh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-6CCh]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
mov eax [ebp-6D4h] +
cmp eax ebx +
jz loc_10093A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-6D4h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-6CCh] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100947F  +
mov eax [ebp-720h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-6D4h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100940A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-6D4h] ebx +
mov [ebp-4] ebx +
mov eax offset loc_100946E +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-6D4h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1009465  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-6D4h] ebx +
mov [ebp-4] ebx +
mov eax offset loc_100946E +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-6CCh] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_101466B  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-464h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-450h] 1 +
jnz loc_1009DDD  +
push dword ptr [ebp-43Ch]  +
push ecx  +
mov ecx esp +
mov [ebp-438h] esp +
lea eax [ebp-418h] +
push eax  +
call ??0CHString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 8 +
push dword ptr [ebp-42Ch]  +
mov byte ptr [ebp-4] 7 +
call sub_1007C74  +
mov eax [ebp-430h] +
xor esi esi +
cmp eax esi +
jz loc_1009DF5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-430h] esi +
mov eax [ebp-42Ch] +
cmp eax esi +
jz loc_1009E0B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-42Ch] esi +
mov eax [ebp-428h] +
cmp eax esi +
jz loc_1009E21  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-428h] esi +
mov eax [ebp-41Ch] +
cmp eax esi +
jz loc_1009E37  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] esi +
mov eax [ebp-420h] +
cmp eax esi +
jz loc_1009E4D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] esi +
mov eax [ebp-460h] +
push dword ptr [eax+48h]  +
call ds:ReleaseMutex  +
mov [ebp-4] esi +
mov eax offset loc_1009B1B +
retn   +
***
call __EH_prolog3_catch_GS  +
mov edi ecx +
mov [ebp-238h] edi +
mov eax [ebp+8] +
mov [ebp-21Ch] eax +
xor ebx ebx +
mov [ebp-224h] ebx +
lea ecx [ebp-220h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-228h] ebx +
mov [ebp-22Ch] ebx +
mov [ebp-210h] ebx +
push 1F8h  +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp-214h] ebx +
mov byte ptr [ebp-4] 1 +
push offset word_1001370  +
lea eax [edi+5Ch] +
push eax  +
lea eax [ebp-230h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 2 +
push offset aComputer  +
push eax  +
lea eax [ebp-234h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-220h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-234h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-230h] +
call ??1CHString@@QAE@XZ  +
mov eax [edi+18h] +
mov ecx [edi+24h] +
lea esi [edi+14h] +
push ebx  +
lea edx [ebp-224h] +
push edx  +
push dword ptr [ebp-220h]  +
push ebx  +
push esi  +
push dword ptr [edi+30h]  +
push eax  +
push ecx  +
lea eax [ebp-214h] +
push eax  +
push dword ptr [edi]  +
call sub_1005276  +
cmp [ebp-224h] ebx +
jge loc_1009F69  +
push dword ptr [ebp-224h]  +
call sub_1014187  +
push 1  +
push dword ptr [ebp-21Ch]  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1007245  +
cmp eax ebx +
jnz loc_1009F8C  +
push 800300FDh  +
call sub_1014187  +
push dword ptr [ebp-21Ch]  +
mov ecx edi +
call sub_1006D9E  +
mov eax [edi+3Ch] +
cmp eax 2 +
jz loc_1009FA9  +
cmp eax ebx +
jnz loc_100A217  +
push dword ptr [esi]  +
push dword ptr [ebp-214h]  +
call sub_1008C6F  +
push 66h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
push 20h  +
pop ebx  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 66h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-218h] eax +
cmp dword ptr [ebp-218h] 1 +
jbe loc_100A016  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-218h]  +
jmp loc_1009FF3  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
mov eax [ebp-21Ch] +
push dword ptr [eax+30h]  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 1  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1008EB5  +
mov eax [ebp-21Ch] +
mov eax [eax+14h] +
push 0FEh  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 0  +
lea eax [ebp-210h] +
push eax  +
call sub_1014F43  +
test eax eax +
jz loc_100A0B5  +
push 0FEh  +
push 181h  +
call sub_1017157  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_1006891  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 6Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 6Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-228h] 0 +
jz loc_100A138  +
push 125h  +
jmp loc_100A14D  +
cmp dword ptr [ebp-22Ch] 0 +
jz loc_100A148  +
push 126h  +
jmp loc_100A14D  +
push 127h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 71h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 71h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-218h] eax +
cmp dword ptr [ebp-218h] 4 +
jbe loc_100A1C9  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-218h]  +
jmp loc_100A1A6  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset aComputer  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1007434  +
push 1  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_10082B0  +
cmp dword ptr [edi+34h] 1 +
jz loc_100A208  +
cmp dword ptr [edi+38h] 1 +
jnz loc_100A220  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_10138C0  +
jmp loc_100A220  +
push 20h  +
pop ebx  +
mov esi ds:__iob_func +
mov eax [ebp-214h] +
test eax eax +
jz loc_100A237  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-214h] 0 +
mov eax [edi+3Ch] +
cmp eax 1 +
jz loc_100A247  +
test eax eax +
jnz loc_100A5A1  +
push offset word_1001370  +
lea eax [edi+5Ch] +
push eax  +
lea eax [ebp-234h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 4 +
push offset String2  +
push eax  +
lea eax [ebp-230h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-220h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-230h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-234h] +
call ??1CHString@@QAE@XZ  +
mov eax [edi+18h] +
mov ecx [edi+24h] +
push 0  +
lea edx [ebp-224h] +
push edx  +
push dword ptr [ebp-220h]  +
push 0  +
lea edx [edi+14h] +
push edx  +
push dword ptr [edi+30h]  +
push eax  +
push ecx  +
lea eax [ebp-214h] +
push eax  +
push dword ptr [edi]  +
call sub_1005276  +
cmp dword ptr [ebp-224h] 0 +
jge loc_100A2E2  +
push dword ptr [ebp-224h]  +
call sub_1014187  +
cmp dword ptr [edi+3Ch] 1 +
jnz loc_100A2F6  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-214h]  +
call sub_1008C6F  +
push 65h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 65h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-218h] eax +
cmp dword ptr [ebp-218h] 1 +
jbe loc_100A34D  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-218h]  +
jmp loc_100A32A  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
mov eax [ebp-21Ch] +
push dword ptr [eax+2Ch]  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 0  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1008EB5  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 0  +
push dword ptr [ebp-21Ch]  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1007245  +
test eax eax +
jnz loc_100A3C8  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-21Ch] +
mov eax [eax+18h] +
push 0FEh  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 0  +
lea eax [ebp-210h] +
push eax  +
call sub_1014F43  +
test eax eax +
jz loc_100A421  +
push 0FEh  +
push 181h  +
call sub_1017157  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_1006891  +
push offset asc_1001EF4  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 176h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 177h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-228h] 0 +
jz loc_100A4A7  +
push 125h  +
jmp loc_100A4BC  +
cmp dword ptr [ebp-22Ch] 0 +
jz loc_100A4B7  +
push 126h  +
jmp loc_100A4BC  +
push 127h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 71h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 71h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-218h] eax +
cmp dword ptr [ebp-218h] 4 +
jbe loc_100A538  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-218h]  +
jmp loc_100A515  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset String2  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_1007434  +
push 0  +
push dword ptr [ebp-214h]  +
mov ecx edi +
call sub_10082B0  +
cmp dword ptr [edi+34h] 1 +
jz loc_100A577  +
cmp dword ptr [edi+38h] 1 +
jnz loc_100A58A  +
push dword ptr [ebp-214h]  +
push dword ptr [ebp-21Ch]  +
mov ecx edi +
call sub_10130F9  +
mov eax [ebp-214h] +
test eax eax +
jz loc_100A5A1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-214h] 0 +
and dword ptr [ebp-4] 0 +
mov eax [ebp-214h] +
test eax eax +
jz loc_100A5BC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-214h] 0 +
push dword ptr [edi+48h]  +
call ds:ReleaseMutex  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-220h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100A652  +
mov eax [ebp-23Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-214h] +
test eax eax +
jz loc_100A628  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-214h] 0 +
mov eax [ebp-238h] +
push dword ptr [eax+48h]  +
call ds:ReleaseMutex  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100A641 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-220h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_101466B  +
retn 4  +
***
call __EH_prolog3_catch_GS  +
mov esi ecx +
mov [ebp-0CB4h] esi +
xor ebx ebx +
mov [ebp-0C24h] ebx +
mov [ebp-0C2Ch] ebx +
mov [ebp-0C84h] ebx +
mov dword ptr [ebp-0C40h] 1 +
mov edi offset dword_1001378 +
push edi  +
lea ecx [ebp-0C10h] +
call ??0CHString@@QAE@PBG@Z  +
mov [ebp-4] ebx +
push edi  +
lea ecx [ebp-0C20h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov [ebp-0C1Ch] ebx +
mov [ebp-0C08h] ebx +
mov [ebp-0C18h] ebx +
mov [ebp-0C14h] ebx +
mov [ebp-0C0Ch] ebx +
mov [ebp-0C48h] ebx +
mov [ebp-0C30h] ebx +
mov [ebp-0C34h] ebx +
mov [ebp-0C44h] ebx +
mov edi 0FEh +
mov [ebp-0C5Ch] edi +
mov [ebp-0C6Ch] edi +
mov [ebp-0C3Ch] edi +
push 34h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-0C8Ch] eax +
mov byte ptr [ebp-4] 2 +
cmp eax ebx +
jz loc_100A724  +
mov ecx eax +
call sub_1006720  +
jmp loc_100A726  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-0C04h] eax +
mov [ebp-0C28h] ebx +
mov [ebp-0C38h] ebx +
push 4  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-0C00h] eax +
mov byte ptr [ebp-4] 3 +
mov eax 1FCh +
mov [ebp-0C68h] eax +
lea ecx [ebp-0A00h] +
mov [ebp-0CECh] ecx +
cmp [ebp-0C68h] ebx +
jz loc_100A77E  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CECh] ecx +
dec dword ptr [ebp-0C68h]  +
jmp loc_100A765  +
mov [ebp-0C70h] eax +
lea ecx [ebp-40Ch] +
mov [ebp-0CF0h] ecx +
cmp [ebp-0C70h] ebx +
jz loc_100A7A9  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CF0h] ecx +
dec dword ptr [ebp-0C70h]  +
jmp loc_100A790  +
mov [ebp-0C64h] eax +
lea ecx [ebp-210h] +
mov [ebp-0CCCh] ecx +
cmp [ebp-0C64h] ebx +
jz loc_100A7D4  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CCCh] ecx +
dec dword ptr [ebp-0C64h]  +
jmp loc_100A7BB  +
mov [ebp-0C58h] eax +
lea ecx [ebp-804h] +
mov [ebp-0CD4h] ecx +
cmp [ebp-0C58h] ebx +
jz loc_100A7FF  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CD4h] ecx +
dec dword ptr [ebp-0C58h]  +
jmp loc_100A7E6  +
mov [ebp-0C60h] eax +
lea eax [ebp-608h] +
mov [ebp-0CDCh] eax +
cmp [ebp-0C60h] ebx +
jz loc_100A82A  +
mov [eax] bl +
inc eax  +
mov [ebp-0CDCh] eax +
dec dword ptr [ebp-0C60h]  +
jmp loc_100A811  +
lea eax [esi+78h] +
push eax  +
push 162h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push offset aRootRsop  +
lea ecx [ebp-0C88h] +
call sub_1004986  +
mov [ebp-0D0Ch] eax +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_100A871  +
mov eax [eax] +
mov [ebp-0D18h] eax +
mov eax [eax] +
mov [ebp-0C28h] eax +
jmp loc_100A877  +
mov [ebp-0C28h] ebx +
mov eax [esi+18h] +
mov [ebp-0D30h] eax +
mov ecx [esi+24h] +
mov [ebp-0D38h] ecx +
push ebx  +
lea edx [ebp-0C24h] +
push edx  +
push dword ptr [ebp-0C28h]  +
push ebx  +
lea edx [esi+14h] +
push edx  +
push dword ptr [esi+30h]  +
push eax  +
push ecx  +
lea eax [ebp-0C08h] +
push eax  +
push dword ptr [esi]  +
call sub_1005276  +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-0C88h] +
cmp ecx ebx +
jz loc_100A8C8  +
call sub_100506E  +
mov [ebp-0C88h] ebx +
cmp [ebp-0C24h] ebx +
jge loc_100A8DB  +
push dword ptr [ebp-0C24h]  +
call sub_1014187  +
push offset aRsoploggingmod  +
lea ecx [ebp-0C98h] +
call sub_1004986  +
mov [ebp-0D40h] eax +
mov byte ptr [ebp-4] 5 +
cmp [eax] ebx +
jz loc_100A90B  +
mov eax [eax] +
mov [ebp-0D48h] eax +
mov eax [eax] +
mov [ebp-0C28h] eax +
jmp loc_100A911  +
mov [ebp-0C28h] ebx +
mov eax [ebp-0C08h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-0C18h] +
push edx  +
push ebx  +
push ebx  +
push dword ptr [ebp-0C28h]  +
push eax  +
call dword ptr [ecx+18h]  +
mov [ebp-0C24h] eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-0C98h] +
cmp ecx ebx +
jz loc_100A94C  +
call sub_100506E  +
mov [ebp-0C98h] ebx +
cmp [ebp-0C24h] ebx +
jge loc_100A95F  +
push dword ptr [ebp-0C24h]  +
call sub_1014187  +
lea eax [esi+78h] +
push eax  +
push 16Ah  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push offset aRsopenumerateu  +
lea ecx [ebp-0C94h] +
call sub_1004986  +
mov [ebp-0D50h] eax +
mov byte ptr [ebp-4] 6 +
cmp [eax] ebx +
jz loc_100A9A6  +
mov eax [eax] +
mov [ebp-0D58h] eax +
mov eax [eax] +
mov [ebp-0C28h] eax +
jmp loc_100A9AC  +
mov [ebp-0C28h] ebx +
mov eax [ebp-0C18h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-0C14h] +
push edx  +
push ebx  +
push dword ptr [ebp-0C28h]  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp-0C24h] eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-0C94h] +
cmp ecx ebx +
jz loc_100A9E6  +
call sub_100506E  +
mov [ebp-0C94h] ebx +
cmp [ebp-0C24h] ebx +
jge loc_100A9F9  +
push dword ptr [ebp-0C24h]  +
call sub_1014187  +
lea eax [esi+78h] +
push eax  +
push 163h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push offset aRsopenumerateu  +
lea ecx [ebp-0C7Ch] +
call sub_1004986  +
mov [ebp-0C80h] eax +
mov byte ptr [ebp-4] 7 +
push offset aRsoploggingmod  +
lea ecx [ebp-0C90h] +
call sub_1004986  +
mov [ebp-0D60h] eax +
mov byte ptr [ebp-4] 8 +
mov ecx [ebp-0C80h] +
cmp [ecx] ebx +
jz loc_100AA60  +
mov ecx [ecx] +
mov [ebp-0D54h] ecx +
mov ecx [ecx] +
mov [ebp-0C28h] ecx +
jmp loc_100AA66  +
mov [ebp-0C28h] ebx +
cmp [eax] ebx +
jz loc_100AA7C  +
mov eax [eax] +
mov [ebp-0D04h] eax +
mov eax [eax] +
mov [ebp-0C2Ch] eax +
jmp loc_100AA82  +
mov [ebp-0C2Ch] ebx +
mov eax [ebp-0C08h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-0C0Ch] +
push edx  +
push dword ptr [ebp-0C14h]  +
push ebx  +
push ebx  +
push dword ptr [ebp-0C28h]  +
push dword ptr [ebp-0C2Ch]  +
push eax  +
call dword ptr [ecx+60h]  +
mov [ebp-0C24h] eax +
mov byte ptr [ebp-4] 7 +
mov ecx [ebp-0C90h] +
cmp ecx ebx +
jz loc_100AAC9  +
call sub_100506E  +
mov [ebp-0C90h] ebx +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-0C7Ch] +
cmp ecx ebx +
jz loc_100AAE2  +
call sub_100506E  +
mov [ebp-0C7Ch] ebx +
cmp [ebp-0C0Ch] ebx +
jnz loc_100AAF4  +
mov dword ptr [ebp-0C24h] 80004005h +
cmp [ebp-0C24h] ebx +
jge loc_100ABE0  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 5Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100AB4F  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100AB65  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100AB7B  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100AB91  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100ABA7  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
mov ecx [ebp-0C04h] +
cmp ecx ebx +
jz loc_100ABBE  +
push 1  +
call sub_1006B00  +
mov [ebp-0C04h] ebx +
cmp [ebp-0C00h] ebx +
jz loc_100ABD8  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [ebp-0C00h] ebx +
mov [ebp-4] bl +
jmp loc_100BB83  +
push ebx  +
lea eax [ebp-0C48h] +
push eax  +
push offset aHresult  +
push dword ptr [ebp-0C0Ch]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100AC06  +
push 800300FDh  +
call sub_1014187  +
cmp [ebp-0C48h] ebx +
jnz loc_100AB00  +
lea eax [ebp-0CACh] +
push eax  +
call ds:VariantInit  +
push offset aUsersids  +
lea ecx [ebp-0C9Ch] +
call sub_1004986  +
mov [ebp-0D34h] eax +
mov byte ptr [ebp-4] 9 +
cmp [eax] ebx +
jz loc_100AC4F  +
mov eax [eax] +
mov [ebp-0CF8h] eax +
mov eax [eax] +
mov [ebp-0C2Ch] eax +
jmp loc_100AC55  +
mov [ebp-0C2Ch] ebx +
mov eax [ebp-0C0Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-0CACh] +
push edx  +
push ebx  +
push dword ptr [ebp-0C2Ch]  +
push eax  +
call dword ptr [ecx+10h]  +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-0C9Ch] +
cmp ecx ebx +
jz loc_100AC8A  +
call sub_100506E  +
mov [ebp-0C9Ch] ebx +
cmp [ebp-0C24h] ebx +
jge loc_100ACB3  +
xor eax eax +
mov [ebp-0CACh] ax +
lea eax [ebp-0CACh] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-0C24h]  +
call sub_1014187  +
cmp word ptr [ebp-0CACh] 1 +
jz loc_100B8E2  +
cmp [ebp-0CACh] bx +
jz loc_100B8E2  +
mov eax [ebp-0CACh] +
and eax 0DFFFh +
mov [ebp-0CE4h] eax +
mov eax [ebp-0CA4h] +
mov [ebp-0C28h] eax +
cmp eax ebx +
jz loc_100AE4B  +
lea ecx [ebp-0C34h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-0C24h] eax +
cmp eax ebx +
jge loc_100AD13  +
push eax  +
call sub_1014187  +
lea eax [ebp-0C44h] +
push eax  +
push 1  +
push dword ptr [ebp-0C28h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-0C24h] eax +
cmp eax ebx +
jge loc_100AD38  +
push eax  +
call sub_1014187  +
cmp dword ptr [ebp-0C44h] 0FFFFFFFFh +
jnz loc_100AE4B  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push 33h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 17Fh  +
call sub_1017157  +
push eax  +
xor edi edi +
inc edi  +
push edi  +
push edi  +
call esi  +
add eax 20h +
push eax  +
call sub_1017004  +
add esp 10h +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100AD9F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100ADB5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100ADCB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100ADE1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100ADF7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
mov ecx [ebp-0C04h] +
cmp ecx ebx +
jz loc_100AE0D  +
push edi  +
call sub_1006B00  +
mov [ebp-0C04h] ebx +
cmp [ebp-0C00h] ebx +
jz loc_100AE27  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [ebp-0C00h] ebx +
mov [ebp-4] bl +
lea ecx [ebp-0C20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0C10h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_100BB9F  +
cmp [esi+44h] ebx +
jnz loc_100AF10  +
mov eax [esi+24h] +
mov [ebp-0D4Ch] eax +
push edi  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
mov eax [esi+18h] +
mov [ebp-0D14h] eax +
push edi  +
push eax  +
lea eax [ebp-40Ch] +
push eax  +
call sub_101570A  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push ebx  +
push edi  +
push dword ptr [esi+30h]  +
push edi  +
lea eax [ebp-40Ch] +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_1018CCD  +
cmp eax 1 +
jz loc_100AEDD  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
jmp loc_100AB2D  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_100AEF8  +
cmp eax 50010001h +
jz loc_100AEF8  +
cmp eax 0A0010001h +
jnz loc_100AEFE  +
mov [ebp-0C40h] ebx +
mov ecx [esi+74h] +
cmp ecx ebx +
jz loc_100AF10  +
lea eax [esi+78h] +
push eax  +
push ecx  +
call ds:GetConsoleScreenBufferInfo  +
mov eax [ebp-0C34h] +
mov [ebp-0C30h] eax +
mov eax [ebp-0C44h] +
cmp [ebp-0C34h] eax +
jg loc_100B8AA  +
push dword ptr [ebp-0CE4h]  +
lea eax [ebp-0C10h] +
push eax  +
push dword ptr [ebp-0C34h]  +
push dword ptr [ebp-0C28h]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_100AF5A  +
push 800300FDh  +
call sub_1014187  +
lea eax [ebp-0C10h] +
push eax  +
mov ecx [ebp-0C04h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
lea eax [esi+78h] +
push eax  +
push 164h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push edi  +
push dword ptr [ebp-0C10h]  +
lea eax [ebp-0A00h] +
push eax  +
call sub_101570A  +
lea eax [ebp-0C38h] +
push eax  +
lea eax [ebp-0A00h] +
push eax  +
call ConvertStringSidToSidW  +
push dword ptr [ebp-0C00h]  +
lea eax [ebp-0C6Ch] +
push eax  +
lea eax [ebp-804h] +
push eax  +
lea eax [ebp-0C5Ch] +
push eax  +
lea eax [ebp-40Ch] +
push eax  +
push dword ptr [ebp-0C38h]  +
lea eax [ebp-210h] +
push eax  +
call ds:LookupAccountSidW  +
mov [ebp-0C2Ch] eax +
cmp [ebp-0C38h] ebx +
jz loc_100AFFE  +
push dword ptr [ebp-0C38h]  +
call ds:LocalFree  +
mov [ebp-0C38h] ebx +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
cmp [ebp-0C2Ch] ebx +
jnz loc_100B117  +
inc dword ptr [ebp-0C30h]  +
mov eax [ebp-0C30h] +
cmp eax [ebp-0C44h] +
jle loc_100B89F  +
push offset dword_1001374  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] ebx +
jnz loc_100B0C2  +
lea ecx [esi+28h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
mov [ebp-0D3Ch] eax +
cmp eax ebx +
jz loc_100B0B3  +
push offset word_1001370  +
lea eax [esi+28h] +
push eax  +
lea eax [ebp-0CF4h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+20h] +
push ecx  +
push eax  +
lea eax [ebp-0CB0h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@0@Z  +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-0CB0h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0CF4h] +
call ??1CHString@@QAE@XZ  +
jmp loc_100B0C2  +
lea eax [esi+20h] +
push eax  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp-0C10h]  +
push 4Bh  +
call sub_1017157  +
push eax  +
lea eax [ebp-0C20h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push 33h  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov eax [ebp-0C20h] +
mov [ebp-0D1Ch] eax +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_100B89F  +
cmp [ebp+8] ebx +
jnz loc_100B26B  +
mov eax [esi+20h] +
mov [ebp-0D5Ch] eax +
push ebx  +
push 1  +
push eax  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1014F64  +
test eax eax +
jnz loc_100B177  +
mov eax [esi+28h] +
mov [ebp-0D24h] eax +
push ebx  +
push 1  +
push eax  +
lea eax [ebp-804h] +
push eax  +
call sub_1014F64  +
test eax eax +
jz loc_100B26B  +
lea ecx [esi+28h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
mov [ebp-0D44h] eax +
cmp eax ebx +
jz loc_100B26B  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
mov [ebp-0C5Ch] edi +
mov [ebp-0C6Ch] edi +
inc dword ptr [ebp-0C30h]  +
mov eax [ebp-0C30h] +
cmp eax [ebp-0C44h] +
jle loc_100B89F  +
lea ecx [esi+28h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
mov [ebp-0D2Ch] eax +
cmp eax ebx +
jz loc_100B217  +
push offset word_1001370  +
lea eax [esi+28h] +
push eax  +
lea eax [ebp-0CBCh] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [esi+20h] +
push ecx  +
push eax  +
lea eax [ebp-0CB8h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@0@Z  +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-0CB8h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0CBCh] +
call ??1CHString@@QAE@XZ  +
jmp loc_100B226  +
lea eax [esi+20h] +
push eax  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp-0C10h]  +
push 4Bh  +
call sub_1017157  +
push eax  +
lea eax [ebp-0C20h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push 33h  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov eax [ebp-0C20h] +
mov [ebp-0CFCh] eax +
jmp loc_100B102  +
mov ecx [ebp-0C04h] +
add ecx 4 +
lea eax [ebp-40Ch] +
push eax  +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
push offset word_1001370  +
lea eax [ebp-804h] +
push eax  +
call sub_1015C73  +
mov eax [ebp-0C04h] +
add eax 4 +
mov eax [eax] +
mov [ebp-0D00h] eax +
push edi  +
push eax  +
lea eax [ebp-804h] +
push eax  +
call sub_1015C73  +
lea eax [ebp-804h] +
push eax  +
mov ecx [ebp-0C04h] +
add ecx 4 +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [esi+60h] ebx +
jnz loc_100B5EA  +
lea eax [esi+78h] +
push eax  +
push 165h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-0C04h]  +
mov ecx esi +
call sub_10070A6  +
test eax eax +
jnz loc_100B409  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push 34h  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 5Ch  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100B34C  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100B362  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100B378  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100B38E  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100B3A4  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
push 1  +
mov ecx [ebp-0C04h] +
call sub_1006B00  +
mov [ebp-0C04h] ebx +
cmp [ebp-0C00h] ebx +
jz loc_100B3D1  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [ebp-0C00h] ebx +
cmp [esi+44h] ebx +
jnz loc_100ABD8  +
cmp dword ptr [ebp-0C40h] 1 +
jnz loc_100ABD8  +
mov esi [esi+24h] +
push edi  +
push esi  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
lea eax [ebp-210h] +
push eax  +
call sub_1018AF5  +
jmp loc_100ABD8  +
cmp [ebp-0C84h] ebx +
jnz loc_100B515  +
lea eax [esi+78h] +
push eax  +
push 166h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-0C04h]  +
mov ecx esi +
call sub_1007F2C  +
test eax eax +
jz loc_100B2FB  +
cmp dword ptr [esi+44h] 1 +
jnz loc_100B467  +
mov [ebp-0C48h] edi +
lea eax [ebp-0C48h] +
push eax  +
lea eax [ebp-608h] +
push eax  +
push 1  +
call GetComputerObjectNameW  +
jmp loc_100B4F6  +
lea eax [ebp-0C3Ch] +
push eax  +
lea eax [ebp-0BFCh] +
push eax  +
push 2  +
call ds:GetComputerNameExW  +
mov eax [esi+50h] +
mov [ebp-0D08h] eax +
push edi  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push edi  +
push offset asc_1001F00  +
lea eax [ebp-210h] +
push eax  +
call sub_1015C73  +
lea eax [ebp-0BFCh] +
push eax  +
lea ecx [esi+4Ch] +
call sub_10044CF  +
test eax eax +
jnz loc_100B4DF  +
mov [ebp-0C3Ch] edi +
lea eax [ebp-0C3Ch] +
push eax  +
lea eax [ebp-608h] +
push eax  +
push 1  +
push 3  +
lea eax [ebp-210h] +
push eax  +
call TranslateNameW  +
jmp loc_100B4F6  +
lea eax [ebp-210h] +
push eax  +
push 1  +
lea eax [ebp-608h] +
push eax  +
mov ecx esi +
call sub_1006A74  +
lea eax [ebp-608h] +
push eax  +
mov ecx [ebp-0C04h] +
add ecx 30h +
call ??4CHString@@QAEABV0@PBG@Z  +
mov dword ptr [ebp-0C84h] 1 +
cmp dword ptr [esi+44h] 1 +
jz loc_100B565  +
lea eax [ebp-0BFCh] +
push eax  +
lea ecx [esi+4Ch] +
call sub_10044CF  +
test eax eax +
jz loc_100B565  +
mov eax [ebp-0C04h] +
add eax 4 +
mov eax [eax] +
mov [ebp-0D10h] eax +
push edi  +
push eax  +
lea eax [ebp-40Ch] +
push eax  +
call sub_101570A  +
lea eax [ebp-40Ch] +
push eax  +
push ebx  +
lea eax [ebp-608h] +
push eax  +
mov ecx esi +
call sub_1006A74  +
jmp loc_100B5D5  +
mov dword ptr [ebp-0C4Ch] 1FCh +
lea eax [ebp-608h] +
mov [ebp-0CD8h] eax +
cmp [ebp-0C4Ch] ebx +
jz loc_100B594  +
mov [eax] bl +
inc eax  +
mov [ebp-0CD8h] eax +
dec dword ptr [ebp-0C4Ch]  +
jmp loc_100B57B  +
mov [ebp-0C3Ch] edi +
mov eax [ebp-0C04h] +
mov eax [eax+4] +
mov [ebp-0CC4h] eax +
push edi  +
push eax  +
lea eax [ebp-40Ch] +
push eax  +
call sub_101570A  +
lea eax [ebp-0C3Ch] +
push eax  +
lea eax [ebp-608h] +
push eax  +
push 1  +
push 2  +
lea eax [ebp-40Ch] +
push eax  +
call TranslateNameW  +
lea eax [ebp-608h] +
push eax  +
mov ecx [ebp-0C04h] +
add ecx 2Ch +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [esi+78h] +
push eax  +
push 15Fh  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-0C08h]  +
push dword ptr [ebp-0C04h]  +
mov ecx esi +
call sub_100948C  +
test eax eax +
jnz loc_100B691  +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100B62E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100B644  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100B65A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100B670  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100B686  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
mov ecx [ebp-0C04h] +
jmp loc_100ABB1  +
mov ecx esi +
cmp [esi+60h] ebx +
jnz loc_100B78B  +
push dword ptr [ebp-0C04h]  +
call sub_1009E6A  +
test eax eax +
jnz loc_100B790  +
push dword ptr [ebp-0C08h]  +
lea eax [esi+5Ch] +
push ecx  +
mov ecx esp +
mov [ebp-0CC4h] esp +
push eax  +
call ??0CHString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 0Eh +
push dword ptr [esi+10h]  +
mov byte ptr [ebp-4] 3 +
call sub_1007C74  +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100B6ED  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100B703  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100B719  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100B72F  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100B745  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
push 1  +
mov ecx [ebp-0C04h] +
call sub_1006B00  +
mov [ebp-0C04h] ebx +
cmp [ebp-0C00h] ebx +
jz loc_100B772  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [ebp-0C00h] ebx +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_100ABD8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+10h] ebx +
jmp loc_100ABD8  +
call sub_1006B26  +
push dword ptr [ebp-0C08h]  +
lea eax [esi+5Ch] +
push ecx  +
mov ecx esp +
mov [ebp-0D20h] esp +
push eax  +
call ??0CHString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 0Fh +
push dword ptr [esi+10h]  +
mov byte ptr [ebp-4] 3 +
call sub_1007C74  +
cmp eax ebx +
jz loc_100B6D7  +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_100B7D0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+10h] ebx +
mov eax [esi+74h] +
cmp eax ebx +
jz loc_100B7E2  +
lea ecx [esi+78h] +
push ecx  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
mov eax 1FCh +
mov [ebp-0C78h] eax +
lea ecx [ebp-0A00h] +
mov [ebp-0CC0h] ecx +
cmp [ebp-0C78h] ebx +
jz loc_100B812  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CC0h] ecx +
dec dword ptr [ebp-0C78h]  +
jmp loc_100B7F9  +
mov [ebp-0C54h] eax +
lea ecx [ebp-40Ch] +
mov [ebp-0CE8h] ecx +
cmp [ebp-0C54h] ebx +
jz loc_100B83D  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CE8h] ecx +
dec dword ptr [ebp-0C54h]  +
jmp loc_100B824  +
mov [ebp-0C50h] eax +
lea ecx [ebp-210h] +
mov [ebp-0CC8h] ecx +
cmp [ebp-0C50h] ebx +
jz loc_100B868  +
mov [ecx] bl +
inc ecx  +
mov [ebp-0CC8h] ecx +
dec dword ptr [ebp-0C50h]  +
jmp loc_100B84F  +
mov [ebp-0C74h] eax +
lea eax [ebp-804h] +
mov [ebp-0CE0h] eax +
cmp [ebp-0C74h] ebx +
jz loc_100B893  +
mov [eax] bl +
inc eax  +
mov [ebp-0CE0h] eax +
dec dword ptr [ebp-0C74h]  +
jmp loc_100B87A  +
mov [ebp-0C5Ch] edi +
mov [ebp-0C6Ch] edi +
inc dword ptr [ebp-0C34h]  +
jmp loc_100AF1C  +
cmp [esi+44h] ebx +
jnz loc_100B9AB  +
cmp dword ptr [ebp-0C40h] 1 +
jnz loc_100B9AB  +
mov esi [esi+24h] +
push edi  +
push esi  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
lea eax [ebp-210h] +
push eax  +
call sub_1018AF5  +
jmp loc_100B9AB  +
lea eax [esi+78h] +
push eax  +
push ebx  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
lea edi [esi+28h] +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_100B955  +
push offset word_1001370  +
push edi  +
lea eax [ebp-0C8Ch] +
push eax  +
call ??H@YG?AVCHString@@ABV0@PBG@Z  +
mov byte ptr [ebp-4] 10h +
add esi 20h +
push esi  +
push eax  +
lea eax [ebp-0CD0h] +
push eax  +
call ??H@YG?AVCHString@@ABV0@0@Z  +
mov byte ptr [ebp-4] 11h +
push eax  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 10h +
lea ecx [ebp-0CD0h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-0C8Ch] +
call ??1CHString@@QAE@XZ  +
jmp loc_100B964  +
add esi 20h +
push esi  +
lea ecx [ebp-0C10h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp-0C10h]  +
push 4Bh  +
call sub_1017157  +
push eax  +
lea eax [ebp-0C20h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push 33h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-0C20h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-0CACh] +
push eax  +
mov edi ds:VariantClear +
call edi  +
xor esi esi +
inc esi  +
mov [ebp-4] esi +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100B9D6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100B9EC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100BA02  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100BA18  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100BA28  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-0C04h] +
cmp ecx ebx +
jz loc_100BA38  +
push esi  +
call sub_1006B00  +
cmp [ebp-0C00h] ebx +
jz loc_100BA4C  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
lea eax [ebp-0CACh] +
push eax  +
call edi  +
mov [ebp-4] bl +
lea ecx [ebp-0C20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0C10h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_100BB9F  +
mov eax [ebp-0CB4h] +
lea ecx [eax+78h] +
push ecx  +
xor ebx ebx +
push ebx  +
push dword ptr [eax+74h]  +
call sub_10037D1  +
mov eax [ebp-0D28h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
mov eax [ebp-0C08h] +
cmp eax ebx +
jz loc_100BADC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C08h] ebx +
mov eax [ebp-0C18h] +
cmp eax ebx +
jz loc_100BAF2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C18h] ebx +
mov eax [ebp-0C14h] +
cmp eax ebx +
jz loc_100BB08  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C14h] ebx +
mov eax [ebp-0C0Ch] +
cmp eax ebx +
jz loc_100BB1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0Ch] ebx +
mov eax [ebp-0C1Ch] +
cmp eax ebx +
jz loc_100BB34  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C1Ch] ebx +
mov ecx [ebp-0C04h] +
cmp ecx ebx +
jz loc_100BB4B  +
push 1  +
call sub_1006B00  +
mov [ebp-0C04h] ebx +
cmp [ebp-0C00h] ebx +
jz loc_100BB65  +
push dword ptr [ebp-0C00h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [ebp-0C00h] ebx +
lea eax [ebp-0CACh] +
push eax  +
call ds:VariantClear  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_100BB7F +
retn   +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-0C20h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0C10h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call sub_101466B  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-20h] 1 +
mov dword ptr [ebp-14h] 0FEh +
mov eax [esi+24h] +
lea ecx [esi+44h] +
lea ebx [esi+14h] +
lea edx [esi+18h] +
lea edi [esi+4] +
push ecx  +
push offset aRootCimv2  +
push dword ptr [esi+40h]  +
push ebx  +
lea ecx [esi+1Ch] +
push ecx  +
push edx  +
push eax  +
push edi  +
push dword ptr [esi]  +
call sub_1005728  +
test eax eax +
jnz loc_100BC27  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
xor eax eax +
jmp loc_100BF28  +
cmp dword ptr [esi+44h] 0 +
jnz loc_100BC62  +
push dword ptr [ebx]  +
push dword ptr [edi]  +
call sub_10064F9  +
cmp eax 1388h +
ja loc_100BC62  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 157Fh  +
call sub_1017157  +
jmp loc_100BC14  +
mov ebx [ebx] +
test ebx ebx +
jz loc_100BC6E  +
mov eax [ebx+10h] +
mov [esi+30h] eax +
cmp dword ptr [esi+44h] 1 +
jnz loc_100BCE4  +
lea edi [esi+18h] +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp dword ptr [eax+4] 0 +
jz loc_100BCE4  +
push 35h  +
call sub_1017157  +
push eax  +
mov ebx ds:__iob_func +
call ebx  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 41h  +
call sub_1017157  +
push eax  +
call ebx  +
add eax 40h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call ebx  +
add eax 40h +
push eax  +
call sub_1016D99  +
push offset dword_1001374  +
mov ecx edi +
call ??4CHString@@QAEABV0@PBG@Z  +
and dword ptr [esi+30h] 0 +
mov eax [esi+74h] +
test eax eax +
jz loc_100BCEA  +
lea ecx [esi+78h] +
push ecx  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
jmp loc_100BCEA  +
mov ebx ds:__iob_func +
lea edi [esi+20h] +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
xor ecx ecx +
cmp [eax+4] ecx +
jnz loc_100BDA5  +
mov [ebp-18h] ecx +
mov [ebp-4] ecx +
push dword ptr [ebp-14h]  +
mov ecx edi +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-18h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100BD65  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100BD5C +
retn   +
mov esi [ebp-1Ch] +
mov ebx ds:__iob_func +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-18h]  +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_100BD99  +
push 34h  +
call sub_1017157  +
push eax  +
call ebx  +
add eax 40h +
push eax  +
call sub_1016D99  +
push 5Ch  +
call sub_1017157  +
push eax  +
call ebx  +
jmp loc_100BC17  +
lea edi [esi+20h] +
push 0FFFFFFFFh  +
mov ecx edi +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push offset Buffer  +
mov ecx edi +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_100BF01  +
and dword ptr [ebp-20h] 0 +
push 5Ch  +
mov ecx edi +
call ?Find@CHString@@QBEHG@Z  +
mov ebx eax +
mov dword ptr [ebp-4] 2 +
mov ecx edi +
cmp ebx 0FFFFFFFFh +
jz loc_100BE1A  +
push ebx  +
lea eax [ebp-24h] +
push eax  +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [esi+28h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push eax  +
inc ebx  +
push ebx  +
lea eax [ebp-24h] +
push eax  +
mov ecx edi +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 4 +
jmp loc_100BEA0  +
push 40h  +
call ?Find@CHString@@QBEHG@Z  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_100BE7F  +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push eax  +
lea eax [ebx+1] +
push eax  +
lea eax [ebp-24h] +
push eax  +
mov ecx edi +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [esi+28h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
push ebx  +
lea eax [ebp-24h] +
push eax  +
mov ecx edi +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 6 +
push eax  +
mov ecx edi +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
lea edi [esi+28h] +
push 2Eh  +
mov ecx edi +
call ?Find@CHString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100BEB4  +
push eax  +
lea eax [ebp-24h] +
push eax  +
mov ecx edi +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 7 +
push eax  +
mov ecx edi +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100BF01  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 34h  +
call sub_1017157  +
push eax  +
mov esi ds:__iob_func +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
call sub_1014C31  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_1016D99  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100BEFE +
retn   +
mov esi [ebp-1Ch] +
lea eax [esi+78h] +
push eax  +
push 161h  +
call sub_1017157  +
push eax  +
push dword ptr [esi+74h]  +
call sub_10037D1  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call sub_100A65F  +
neg eax  +
sbb eax eax +
neg eax  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
mov eax [esi] +
xor ebx ebx +
mov [ebp+cbData] ebx +
mov [ebp+phkResult] ebx +
cmp eax ebx +
jz loc_100BF56  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov [esi] ebx +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
mov [ebp+arg_C] eax +
cmp eax ebx +
jnz loc_100BFB7  +
push edi  +
mov edi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
push [ebp+lpType]  +
push ebx  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call edi  +
mov [ebp+arg_C] eax +
cmp eax ebx +
jnz loc_100BFB6  +
mov eax [ebp+lpType] +
mov eax [eax] +
cmp eax ebx +
jbe loc_100BFAF  +
cmp eax 2 +
jbe loc_100BFED  +
cmp eax 3 +
jbe loc_100BFAF  +
cmp eax 5 +
jbe loc_100BFCE  +
cmp eax 7 +
jz loc_100BFED  +
mov [ebp+arg_C] 70Ch +
pop edi  +
cmp [ebp+phkResult] ebx +
pop esi  +
pop ebx  +
jz loc_100BFC7  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax [ebp+arg_C] +
leave   +
retn 14h  +
push [ebp+cbData]  +
push 40h  +
call ds:LocalAlloc  +
mov [esi] eax +
cmp eax ebx +
jz loc_100BFFE  +
mov eax [ebp+lpType] +
push 4  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100BFE5  +
jmp loc_100C013  +
push [ebp+cbData]  +
push 40h  +
call ds:LocalAlloc  +
mov [esi] eax +
cmp eax ebx +
jnz loc_100C007  +
mov [ebp+arg_C] 8 +
jmp loc_100BFB6  +
mov eax [ebp+lpType] +
push 4  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C00D  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi]  +
push [ebp+lpType]  +
push ebx  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call edi  +
mov ecx [ebp+cbData] +
mov [ebp+arg_C] eax +
mov [esi+ecx*4-4] ebx +
cmp eax ebx +
jz loc_100BFB6  +
push dword ptr [esi]  +
call ds:LocalFree  +
mov [esi] ebx +
jmp loc_100BFB6  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov eax [ebp+10h] +
mov [ebp-0A3Ch] esi +
mov [ebp-0A40h] eax +
xor ebx ebx +
mov [ebp-4] ebx +
xor eax eax +
push 1FAh  +
mov [ebp-20Ch] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push 8  +
mov dword ptr [ebp-0A2Ch] 0FEh +
mov [ebp-0A1Ch] ebx +
mov [ebp-0A18h] ebx +
mov [ebp-0A30h] ebx +
mov [ebp-0A14h] ebx +
mov [ebp-0A10h] ebx +
xor edi edi +
pop ecx  +
lea eax [ebp-0A38h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C0BE  +
push ebx  +
push esi  +
call sub_1014F43  +
test eax eax +
jz loc_100C0EF  +
push ebx  +
push esi  +
call sub_1014F43  +
add eax eax +
mov [ebp-0A38h] ax +
add eax 2 +
mov [ebp-0A36h] ax +
mov [ebp-0A34h] esi +
push 18h  +
pop ecx  +
lea eax [ebp-0A5Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C0F8  +
lea eax [ebp-0A1Ch] +
push eax  +
push 801h  +
lea eax [ebp-0A5Ch] +
push eax  +
lea eax [ebp-0A38h] +
push eax  +
call LsaOpenPolicy  +
cmp eax ebx +
jz loc_100C14C  +
push eax  +
call LsaNtStatusToWinError  +
push eax  +
call ds:SetLastError  +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
jmp loc_100C48A  +
lea eax [ebp-0A18h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ConvertStringSidToSidW  +
test eax eax +
jnz loc_100C18E  +
call sub_1014CC4  +
mov ecx 800h +
lea eax [ebp-0A0Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C16F  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
jmp loc_100C47F  +
mov esi ds:__iob_func +
mov [ebp-0A24h] ebx +
cmp [ebp+14h] ebx +
jbe loc_100C3CC  +
mov ecx [ebp-0A24h] +
lea eax [ebp-0A18h] +
push eax  +
mov eax [ebp-0A40h] +
push dword ptr [eax+ecx*4]  +
call ConvertStringSidToSidW  +
test eax eax +
jz loc_100C41E  +
lea eax [ebp-0A28h] +
push eax  +
lea eax [ebp-0A14h] +
push eax  +
push dword ptr [ebp-0A18h]  +
push dword ptr [ebp-0A1Ch]  +
call LsaEnumerateAccountRights  +
cmp eax ebx +
jnz loc_100C394  +
mov [ebp-0A20h] ebx +
cmp [ebp-0A28h] ebx +
jbe loc_100C394  +
mov ecx [ebp-0A20h] +
lea eax [ebp-0A44h] +
push eax  +
lea eax [ebp-0A2Ch] +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
mov eax [ebp-0A14h] +
mov dword ptr [ebp-0A2Ch] 0FEh +
push dword ptr [eax+ecx*8+4]  +
push dword ptr [ebp-0A3Ch]  +
call ds:LookupPrivilegeDisplayNameW  +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1014F43  +
lea edi [edi+eax+0Ah] +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1014F43  +
test eax eax +
jz loc_100C37C  +
cmp [ebp-0A10h] ebx +
jnz loc_100C2D5  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-20Ch] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [edi+edi] +
push eax  +
call sub_101521E  +
mov [ebp-0A10h] eax +
cmp eax ebx +
jz loc_100C440  +
push eax  +
call sub_10152C7  +
shr eax 1 +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-0A10h]  +
call sub_101570A  +
mov ecx 0FEh +
lea eax [ebp-20Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C2CA  +
jmp loc_100C37C  +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-0A10h]  +
call sub_1015B2A  +
cmp eax ebx +
jnz loc_100C37C  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-20Ch] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [edi+edi] +
push eax  +
lea eax [ebp-0A10h] +
push eax  +
call sub_101583E  +
test eax eax +
jz loc_100C440  +
push dword ptr [ebp-0A10h]  +
call sub_10152C7  +
shr eax 1 +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-0A10h]  +
call sub_1015C73  +
push dword ptr [ebp-0A10h]  +
call sub_10152C7  +
shr eax 1 +
push eax  +
push offset dword_100137C  +
push dword ptr [ebp-0A10h]  +
call sub_1015C73  +
mov ecx 0FEh +
lea eax [ebp-20Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C376  +
inc dword ptr [ebp-0A20h]  +
mov eax [ebp-0A20h] +
cmp eax [ebp-0A28h] +
jb loc_100C1FF  +
push dword ptr [ebp-0A14h]  +
call LsaFreeMemory  +
push dword ptr [ebp-0A18h]  +
call ds:LocalFree  +
inc dword ptr [ebp-0A24h]  +
mov eax [ebp-0A24h] +
mov [ebp-0A14h] ebx +
mov [ebp-0A28h] ebx +
cmp eax [ebp+14h] +
jb loc_100C1A3  +
cmp [ebp-0A10h] ebx +
jz loc_100C3E0  +
lea eax [ebp-0A10h] +
push eax  +
call sub_10157C3  +
cmp [ebp-0A14h] ebx +
jz loc_100C3F3  +
push dword ptr [ebp-0A14h]  +
call LsaFreeMemory  +
lea eax [ebp-0A18h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ConvertStringSidToSidW  +
test eax eax +
jnz loc_100C44C  +
call sub_1014CC4  +
mov ecx 800h +
lea eax [ebp-0A0Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C416  +
jmp loc_100C434  +
call sub_1014CC4  +
mov ecx 800h +
lea eax [ebp-0A0Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100C42E  +
push 20001h  +
call esi  +
jmp loc_100C180  +
push 20001h  +
call esi  +
jmp loc_100C13E  +
cmp [ebp-0A14h] ebx +
jz loc_100C45F  +
push dword ptr [ebp-0A14h]  +
call LsaFreeMemory  +
cmp [ebp-0A30h] ebx +
jz loc_100C473  +
lea eax [ebp-0A30h] +
push eax  +
call sub_10157C3  +
push dword ptr [ebp-0A18h]  +
call ds:LocalFree  +
push dword ptr [ebp-0A1Ch]  +
call LsaClose  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
call sub_1014657  +
retn 10h  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-4] ebx +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-10h] +
call ??0CHString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
jmp loc_100C4D7  +
push 1  +
lea ecx [ebp-10h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push 2Fh  +
pop ecx  +
mov [eax+esi*2] cx +
push 5Ch  +
lea ecx [ebp-10h] +
call ?Find@CHString@@QBEHG@Z  +
mov esi eax +
cmp esi ebx +
jg loc_100C4C6  +
mov eax [ebp+0Ch] +
mov esi ds:RegOpenKeyExW +
mov [eax] ebx +
lea eax [ebp-14h] +
push eax  +
mov edi 20019h +
push edi  +
push ebx  +
push offset SubKey  +
push 80000002h  +
mov dword ptr [ebp-18h] 1 +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
call esi  +
cmp eax ebx +
jnz loc_100C54A  +
lea eax [ebp-1Ch] +
push eax  +
push edi  +
push ebx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call esi  +
cmp eax ebx +
jnz loc_100C54A  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov [ebp-20h] ebx +
push offset ValueName  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call sub_100BF33  +
cmp eax ebx +
jz loc_100C54D  +
mov [ebp-18h] ebx +
mov esi ds:RegCloseKey +
cmp [ebp-14h] ebx +
jz loc_100C55D  +
push dword ptr [ebp-14h]  +
call esi  +
cmp [ebp-1Ch] ebx +
jz loc_100C567  +
push dword ptr [ebp-1Ch]  +
call esi  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-18h] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-240h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100C722 +
retn   +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+10h] +
mov [ebp-234h] eax +
xor ebx ebx +
mov [ebp-238h] ebx +
mov [ebp-240h] ebx +
mov [ebp-218h] ebx +
mov [ebp-214h] ebx +
mov [ebp-224h] ebx +
lea ecx [ebp-21Ch] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
mov dword ptr [ebp-220h] 1FCh +
lea eax [ebp-210h] +
mov [ebp-230h] eax +
cmp [ebp-220h] ebx +
jz loc_100CAF0  +
mov [eax] bl +
inc eax  +
mov [ebp-230h] eax +
dec dword ptr [ebp-220h]  +
jmp loc_100CAD7  +
push esi  +
push offset aSelectNameFrom  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-210h] +
push eax  +
lea ecx [ebp-22Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-228h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_100CB40  +
mov esi [esi] +
mov esi [esi] +
jmp loc_100CB42  +
xor esi esi +
cmp [eax] ebx +
jz loc_100CB4C  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100CB4E  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-214h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-228h] +
cmp ecx ebx +
jz loc_100CB7B  +
call sub_100506E  +
mov [ebp-228h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-22Ch] +
cmp ecx ebx +
jz loc_100CB94  +
call sub_100506E  +
mov [ebp-22Ch] ebx +
cmp esi ebx +
jge loc_100CB9E  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-234h]  +
push dword ptr [ebp-214h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_100CBB9  +
push eax  +
call sub_1014187  +
mov eax [ebp-214h] +
mov ecx [eax] +
lea edx [ebp-224h] +
push edx  +
lea edx [ebp-218h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_100CBE1  +
push eax  +
call sub_1014187  +
push 138Dh  +
cmp [ebp-224h] ebx +
jnz loc_100CC05  +
call sub_1017157  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_100CC78  +
call sub_1017157  +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
push offset aName  +
push dword ptr [ebp-218h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100CC30  +
push 800300FDh  +
call sub_1014187  +
push dword ptr [ebp-21Ch]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100CC78  +
mov eax [ebp-23Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100CC76 +
retn   +
xor ebx ebx +
mov eax [ebp-214h] +
cmp eax ebx +
jz loc_100CC8E  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-214h] ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_100CCA4  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-21Ch] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-45Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100CF1D +
retn   +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-444h] edi +
mov eax [ebp+0Ch] +
mov [ebp-410h] eax +
mov eax [ebp+10h] +
mov [ebp-434h] eax +
xor ebx ebx +
mov [ebp-424h] ebx +
mov [ebp-454h] ebx +
mov [ebp-438h] ebx +
mov [ebp-43Ch] ebx +
mov [ebp-420h] ebx +
mov [ebp-418h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-414h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_100D21F  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-42Ch] ecx +
lea eax [ebp-210h] +
mov [ebp-448h] eax +
cmp [ebp-42Ch] ebx +
jz loc_100D24F  +
mov [eax] bl +
inc eax  +
mov [ebp-448h] eax +
dec dword ptr [ebp-42Ch]  +
jmp loc_100D236  +
mov [ebp-428h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-44Ch] eax +
cmp [ebp-428h] ebx +
jz loc_100D27A  +
mov [eax] bl +
inc eax  +
mov [ebp-44Ch] eax +
dec dword ptr [ebp-428h]  +
jmp loc_100D261  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+14h] 1 +
jnz loc_100D293  +
push offset aSelectFromS  +
jmp loc_100D298  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push dword ptr [ebp-410h]  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-430h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-440h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_100D2F1  +
mov esi [esi] +
mov esi [esi] +
jmp loc_100D2F3  +
xor esi esi +
cmp [eax] ebx +
jz loc_100D2FD  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100D2FF  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-440h] +
cmp ecx ebx +
jz loc_100D32C  +
call sub_100506E  +
mov [ebp-440h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-430h] +
cmp ecx ebx +
jz loc_100D345  +
call sub_100506E  +
mov [ebp-430h] ebx +
cmp esi ebx +
jge loc_100D34F  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-434h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
cmp eax ebx +
jge loc_100D36A  +
push eax  +
call sub_1014187  +
mov [ebp-424h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-424h] ebx +
jnz loc_100D426  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-43Ch] +
push edx  +
lea edx [ebp-418h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-424h] eax +
cmp eax ebx +
jge loc_100D3B5  +
push eax  +
call sub_1014187  +
cmp [ebp-43Ch] ebx +
jnz loc_100D42E  +
cmp [ebp-438h] ebx +
jnz loc_100D426  +
push ebx  +
push ebx  +
push offset aRsop_securitye  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jz loc_100D426  +
push ebx  +
push ebx  +
push offset aRsop_securit_1  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jz loc_100D426  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100D6F9  +
mov dword ptr [ebp-438h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100D464  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-414h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-414h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-434h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aKeyname  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100D4EA  +
push 800300FDh  +
call sub_1014187  +
push 8Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
push ebx  +
push offset aRsop_securit_1  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jnz loc_100D547  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aSetting  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
jmp loc_100D55F  +
push ebx  +
lea eax [ebp-420h] +
push eax  +
push offset aSetting  +
push dword ptr [ebp-418h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100D56D  +
push 800300FDh  +
call sub_1014187  +
push 8Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
push ebx  +
push offset aRsop_securit_2  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jnz loc_100D5C0  +
push dword ptr [ebp-420h]  +
push offset aU  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-210h] +
jmp loc_100D606  +
push ebx  +
push ebx  +
push offset aRsop_securit_1  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jnz loc_100D5F3  +
push edi  +
call sub_1017157  +
push eax  +
lea ecx [ebp-414h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jz loc_100D5FC  +
push 11Ch  +
jmp loc_100D601  +
cmp dword ptr [ebp-420h] 0FFFFFFFFh +
jz loc_100D5EC  +
push 11Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
push ebx  +
push offset aRsop_securit_0  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jz loc_100D6B6  +
push ebx  +
push ebx  +
push offset aRsop_securit_1  +
push dword ptr [ebp-410h]  +
call sub_1014F64  +
test eax eax +
jz loc_100D6B6  +
push 5  +
lea eax [ebp-420h] +
push eax  +
push offset aType  +
push dword ptr [ebp-418h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100D669  +
push 800300FDh  +
call sub_1014187  +
push 0B7h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov eax [ebp-420h] +
sub eax ebx +
jz loc_100D6A0  +
dec eax  +
jz loc_100D699  +
dec eax  +
jz loc_100D692  +
push edi  +
jmp loc_100D6A5  +
push 11Bh  +
jmp loc_100D6A5  +
push 11Ah  +
jmp loc_100D6A5  +
push 119h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_100D37B  +
mov eax [ebp-450h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100D6F7 +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_100D70F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_100D725  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 10h  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-45Ch] edi +
mov eax [ebp+0Ch] +
mov [ebp-43Ch] eax +
xor ebx ebx +
mov [ebp-410h] ebx +
mov [ebp-46Ch] ebx +
mov [ebp-434h] ebx +
mov [ebp-444h] ebx +
mov [ebp-424h] ebx +
mov [ebp-438h] ebx +
mov [ebp-418h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-414h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-42Ch] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_100D7BA  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-428h] ecx +
lea eax [ebp-210h] +
mov [ebp-468h] eax +
cmp [ebp-428h] ebx +
jz loc_100D7EA  +
mov [eax] bl +
inc eax  +
mov [ebp-468h] eax +
dec dword ptr [ebp-428h]  +
jmp loc_100D7D1  +
mov [ebp-430h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-460h] eax +
cmp [ebp-430h] ebx +
jz loc_100D815  +
mov [eax] bl +
inc eax  +
mov [ebp-460h] eax +
dec dword ptr [ebp-430h]  +
jmp loc_100D7FC  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_100D82E  +
push offset aSelectFromS  +
jmp loc_100D833  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_restricte  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-420h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-448h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_100D88B  +
mov esi [esi] +
mov esi [esi] +
jmp loc_100D88D  +
xor esi esi +
cmp [eax] ebx +
jz loc_100D897  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100D899  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-448h] +
cmp ecx ebx +
jz loc_100D8CA  +
call sub_100506E  +
mov [ebp-448h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-420h] +
cmp ecx ebx +
jz loc_100D8E3  +
call sub_100506E  +
mov [ebp-420h] ebx +
cmp [ebp-410h] ebx +
jge loc_100D8F6  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
push dword ptr [ebp-43Ch]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_100D917  +
push eax  +
call sub_1014187  +
mov [ebp-410h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-410h] ebx +
jnz loc_100D9A3  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
lea edx [ebp-418h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_100D95E  +
push eax  +
call sub_1014187  +
cmp [ebp-444h] ebx +
jnz loc_100D9AB  +
cmp [ebp-434h] ebx +
jnz loc_100D9A3  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100DC99  +
mov dword ptr [ebp-434h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100D9E1  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-414h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-414h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-43Ch]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aGroupname  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100DA67  +
push 800300FDh  +
call sub_1014187  +
push 96h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantInit  +
push 97h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset aMembers  +
lea ecx [ebp-440h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_100DAD5  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-420h] eax +
jmp loc_100DADB  +
mov [ebp-420h] ebx +
mov eax [ebp-418h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-458h] +
push edx  +
push ebx  +
push dword ptr [ebp-420h]  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-440h] +
cmp ecx ebx +
jz loc_100DB16  +
call sub_100506E  +
mov [ebp-440h] ebx +
cmp [ebp-410h] ebx +
jge loc_100DB3F  +
xor eax eax +
mov [ebp-458h] ax +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
cmp word ptr [ebp-458h] 1 +
jz loc_100DC3A  +
cmp [ebp-458h] bx +
jz loc_100DC3A  +
mov eax [ebp-458h] +
and eax 0DFFFh +
mov [ebp-464h] eax +
mov eax [ebp-450h] +
mov [ebp-42Ch] eax +
cmp eax ebx +
jz loc_100DBC0  +
lea ecx [ebp-424h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_100DB9B  +
push eax  +
call sub_1014187  +
lea eax [ebp-438h] +
push eax  +
push 1  +
push dword ptr [ebp-42Ch]  +
call ds:SafeArrayGetUBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_100DBC0  +
push eax  +
call sub_1014187  +
mov eax [ebp-424h] +
cmp eax [ebp-438h] +
jg loc_100DC4C  +
push dword ptr [ebp-464h]  +
lea ecx [ebp-414h] +
push ecx  +
push eax  +
push dword ptr [ebp-42Ch]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_100DBF5  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-414h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jnz loc_100DC0E  +
push edi  +
call sub_1017157  +
push eax  +
jmp loc_100DC14  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 3Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-424h]  +
jmp loc_100DBC0  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
jmp loc_100D928  +
mov eax [ebp-470h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100DC97 +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_100DCAF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_100DCC5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-44Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100DF31 +
retn   +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-444h] edi +
mov eax [ebp+0Ch] +
mov [ebp-434h] eax +
mov eax [ebp+10h] +
mov [ebp-42Ch] eax +
xor ebx ebx +
mov [ebp-424h] ebx +
mov [ebp-450h] ebx +
mov [ebp-438h] ebx +
mov [ebp-428h] ebx +
mov [ebp-414h] ebx +
mov [ebp-418h] ebx +
lea ecx [ebp-410h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_100E17D  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-41Ch] ecx +
lea eax [ebp-210h] +
mov [ebp-448h] eax +
cmp [ebp-41Ch] ebx +
jz loc_100E1AD  +
mov [eax] bl +
inc eax  +
mov [ebp-448h] eax +
dec dword ptr [ebp-41Ch]  +
jmp loc_100E194  +
mov [ebp-420h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-440h] eax +
cmp [ebp-420h] ebx +
jz loc_100E1D8  +
mov [eax] bl +
inc eax  +
mov [ebp-440h] eax +
dec dword ptr [ebp-420h]  +
jmp loc_100E1BF  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+14h] 1 +
jnz loc_100E1F1  +
push offset aSelectFromS  +
jmp loc_100E1F6  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push dword ptr [ebp-434h]  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-430h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-43Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_100E24F  +
mov esi [esi] +
mov esi [esi] +
jmp loc_100E251  +
xor esi esi +
cmp [eax] ebx +
jz loc_100E25B  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100E25D  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-418h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-43Ch] +
cmp ecx ebx +
jz loc_100E28A  +
call sub_100506E  +
mov [ebp-43Ch] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-430h] +
cmp ecx ebx +
jz loc_100E2A3  +
call sub_100506E  +
mov [ebp-430h] ebx +
cmp esi ebx +
jge loc_100E2AD  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-42Ch]  +
push dword ptr [ebp-418h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_100E2C8  +
push eax  +
call sub_1014187  +
mov [ebp-424h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-424h] ebx +
jnz loc_100E354  +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-428h] +
push edx  +
lea edx [ebp-414h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-424h] eax +
cmp eax ebx +
jge loc_100E30F  +
push eax  +
call sub_1014187  +
cmp [ebp-428h] ebx +
jnz loc_100E35C  +
cmp [ebp-438h] ebx +
jnz loc_100E354  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100E4B0  +
mov dword ptr [ebp-438h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-414h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100E392  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-410h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-42Ch]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aPath  +
push dword ptr [ebp-414h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100E418  +
push 800300FDh  +
call sub_1014187  +
push 95h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-410h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_100E2D9  +
mov eax [ebp-44Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100E4AE +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100E4AE +
retn   +
xor ebx ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_100E4C6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov eax [ebp-414h] +
cmp eax ebx +
jz loc_100E4DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-414h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-410h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 10h  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-678h] edi +
mov eax [ebp+0Ch] +
mov [ebp-644h] eax +
xor ebx ebx +
mov [ebp-668h] ebx +
mov [ebp-664h] ebx +
mov [ebp-658h] ebx +
mov [ebp-648h] ebx +
mov [ebp-62Ch] ebx +
mov [ebp-624h] ebx +
mov [ebp-60Ch] ebx +
mov [ebp-614h] ebx +
lea ecx [ebp-610h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-620h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push offset dword_1001374  +
lea ecx [ebp-65Ch] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 2 +
mov [ebp-64Ch] ebx +
mov [ebp-634h] ebx +
mov [ebp-618h] ebx +
xor eax eax +
mov [ebp-40Ch] ax +
push 1FAh  +
push ebx  +
lea eax [ebp-40Ah] +
push eax  +
call memset  +
add esp 0Ch +
mov byte ptr [ebp-4] 3 +
cmp edi ebx +
jnz loc_100E5BE  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-638h] ecx +
lea eax [ebp-210h] +
mov [ebp-660h] eax +
cmp [ebp-638h] ebx +
jz loc_100E5EE  +
mov [eax] bl +
inc eax  +
mov [ebp-660h] eax +
dec dword ptr [ebp-638h]  +
jmp loc_100E5D5  +
mov [ebp-628h] ecx +
lea eax [ebp-608h] +
mov [ebp-670h] eax +
cmp [ebp-628h] ebx +
jz loc_100E619  +
mov [eax] bl +
inc eax  +
mov [ebp-670h] eax +
dec dword ptr [ebp-628h]  +
jmp loc_100E600  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
push offset aSelectFromSW_0  +
push eax  +
call sub_101570A  +
push offset aRsop_registryp  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-608h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
cmp dword ptr [ebp+10h] 1 +
jz loc_100E664  +
push esi  +
push offset aAndPrecedence1  +
lea eax [ebp-608h] +
push eax  +
call sub_1015C73  +
lea eax [ebp-608h] +
push eax  +
lea ecx [ebp-650h] +
call sub_1004986  +
mov esi eax +
mov [ebp-6A8h] esi +
mov byte ptr [ebp-4] 4 +
push offset aWql  +
lea ecx [ebp-640h] +
call sub_1004986  +
mov [ebp-698h] eax +
mov byte ptr [ebp-4] 5 +
cmp [esi] ebx +
jz loc_100E6AC  +
mov esi [esi] +
mov [ebp-6A0h] esi +
mov esi [esi] +
jmp loc_100E6AE  +
xor esi esi +
cmp [eax] ebx +
jz loc_100E6BE  +
mov eax [eax] +
mov [ebp-67Ch] eax +
mov eax [eax] +
jmp loc_100E6C0  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-614h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-640h] +
cmp ecx ebx +
jz loc_100E6ED  +
call sub_100506E  +
mov [ebp-640h] ebx +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-650h] +
cmp ecx ebx +
jz loc_100E706  +
call sub_100506E  +
mov [ebp-650h] ebx +
cmp esi ebx +
jge loc_100E710  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-644h]  +
push dword ptr [ebp-614h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_100E72B  +
push eax  +
call sub_1014187  +
mov eax [ebp-614h] +
mov ecx [eax] +
lea edx [ebp-62Ch] +
push edx  +
lea edx [ebp-60Ch] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_100E753  +
push eax  +
call sub_1014187  +
xor edi edi +
mov esi ds:__iob_func +
cmp edi ebx +
jnz loc_100E7A8  +
cmp [ebp-62Ch] ebx +
jnz loc_100E7B4  +
cmp [ebp-658h] ebx +
jnz loc_100E7A8  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov dword ptr [ebp-4] 2 +
jmp loc_100EBAB  +
mov dword ptr [ebp-658h] 1 +
mov edi 138Dh +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-610h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-60Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100E7EF  +
push 800300FDh  +
call sub_1014187  +
push 0FEh  +
push dword ptr [ebp-610h]  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-644h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-678h]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-610h] +
push eax  +
push offset aRegistrykey  +
push dword ptr [ebp-60Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100E860  +
push 800300FDh  +
call sub_1014187  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-620h] +
push eax  +
push offset aValuename  +
push dword ptr [ebp-60Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100E88C  +
push 800300FDh  +
call sub_1014187  +
push offset word_1001370  +
lea ecx [ebp-610h] +
call ??YCHString@@QAEABV0@PBG@Z  +
lea eax [ebp-620h] +
push eax  +
lea ecx [ebp-610h] +
call ??YCHString@@QAEABV0@ABV0@@Z  +
push 91h  +
call sub_1017157  +
push eax  +
call esi  +
push 20h  +
pop edi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov eax [ebp-610h] +
mov [ebp-69Ch] eax +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-648h] +
push eax  +
push offset aDeleted  +
push dword ptr [ebp-60Ch]  +
call sub_1005B9C  +
mov [ebp-664h] eax +
cmp eax ebx +
jnz loc_100E909  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-648h] 0FFFFFFFFh +
jnz loc_100E94D  +
push 92h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 0FEh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
jmp loc_100EB41  +
push 171h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-690h] +
push eax  +
call ds:VariantInit  +
push offset aValue  +
lea ecx [ebp-654h] +
call sub_1004986  +
mov [ebp-694h] eax +
mov byte ptr [ebp-4] 6 +
cmp [eax] ebx +
jz loc_100E999  +
mov eax [eax] +
mov [ebp-6A4h] eax +
mov ecx [eax] +
jmp loc_100E99B  +
xor ecx ecx +
mov eax [ebp-60Ch] +
mov edx [eax] +
push ebx  +
push ebx  +
lea edi [ebp-690h] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov [ebp-668h] eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-654h] +
cmp ecx ebx +
jz loc_100E9D1  +
call sub_100506E  +
mov [ebp-654h] ebx +
mov eax [ebp-688h] +
mov [ebp-63Ch] eax +
lea ecx [ebp-64Ch] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
lea eax [ebp-634h] +
push eax  +
push 1  +
push dword ptr [ebp-63Ch]  +
call ds:SafeArrayGetUBound  +
mov eax [ebp-64Ch] +
mov [ebp-618h] eax +
mov eax [ebp-618h] +
cmp eax [ebp-634h] +
jg loc_100EAFB  +
mov edi 0FEh +
mov [ebp-630h] edi +
lea eax [ebp-40Ch] +
mov [ebp-674h] eax +
cmp [ebp-630h] ebx +
jz loc_100EA50  +
mov [eax] bl +
inc eax  +
mov [ebp-674h] eax +
dec dword ptr [ebp-630h]  +
jmp loc_100EA37  +
mov [ebp-624h] ebx +
lea eax [ebp-624h] +
push eax  +
lea eax [ebp-618h] +
push eax  +
push dword ptr [ebp-63Ch]  +
call ds:SafeArrayGetElement  +
mov dword ptr [ebp-61Ch] 1FCh +
lea eax [ebp-40Ch] +
mov [ebp-66Ch] eax +
cmp [ebp-61Ch] ebx +
jz loc_100EA9F  +
mov [eax] bl +
inc eax  +
mov [ebp-66Ch] eax +
dec dword ptr [ebp-61Ch]  +
jmp loc_100EA86  +
push dword ptr [ebp-624h]  +
push offset aLd  +
push edi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov eax [ebp-618h] +
cmp eax [ebp-634h] +
jz loc_100EAF0  +
push 172h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-618h]  +
jmp loc_100EA0E  +
lea eax [ebp-690h] +
push eax  +
call ds:VariantClear  +
push 92h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 11Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov eax [ebp-614h] +
mov ecx [eax] +
lea edx [ebp-62Ch] +
push edx  +
lea edx [ebp-60Ch] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jge loc_100E75D  +
push edi  +
call sub_1014187  +
jmp loc_100E75B  +
mov eax [ebp-680h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
mov dword ptr [ebp-4] 2 +
mov eax offset loc_100EBA9 +
retn   +
xor ebx ebx +
mov eax [ebp-614h] +
cmp eax ebx +
jz loc_100EBC1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-614h] ebx +
mov eax [ebp-60Ch] +
cmp eax ebx +
jz loc_100EBD7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-60Ch] ebx +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-65Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-620h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-610h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-464h] edi +
mov eax [ebp+0Ch] +
mov [ebp-450h] eax +
xor ebx ebx +
mov [ebp-414h] ebx +
mov [ebp-474h] ebx +
mov [ebp-444h] ebx +
mov [ebp-428h] ebx +
mov [ebp-420h] ebx +
mov [ebp-438h] ebx +
mov [ebp-424h] ebx +
mov [ebp-43Ch] ebx +
mov [ebp-418h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-410h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-42Ch] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_100EC95  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-434h] ecx +
lea eax [ebp-210h] +
mov [ebp-470h] eax +
cmp [ebp-434h] ebx +
jz loc_100ECC5  +
mov [eax] bl +
inc eax  +
mov [ebp-470h] eax +
dec dword ptr [ebp-434h]  +
jmp loc_100ECAC  +
mov [ebp-430h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-468h] eax +
cmp [ebp-430h] ebx +
jz loc_100ECF0  +
mov [eax] bl +
inc eax  +
mov [ebp-468h] eax +
dec dword ptr [ebp-430h]  +
jmp loc_100ECD7  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_100ED09  +
push offset aSelectFromS  +
jmp loc_100ED0E  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_folderred  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-44Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-440h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_100ED66  +
mov esi [esi] +
mov esi [esi] +
jmp loc_100ED68  +
xor esi esi +
cmp [eax] ebx +
jz loc_100ED72  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100ED74  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-440h] +
cmp ecx ebx +
jz loc_100EDA5  +
call sub_100506E  +
mov [ebp-440h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-44Ch] +
cmp ecx ebx +
jz loc_100EDBE  +
call sub_100506E  +
mov [ebp-44Ch] ebx +
cmp [ebp-414h] ebx +
jge loc_100EDD1  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
push dword ptr [ebp-450h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100EDF2  +
push eax  +
call sub_1014187  +
mov [ebp-414h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-414h] ebx +
jnz loc_100EE7D  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-438h] +
push edx  +
lea edx [ebp-418h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100EE37  +
push eax  +
call sub_1014187  +
cmp [ebp-438h] ebx +
jnz loc_100EE85  +
cmp [ebp-444h] ebx +
jnz loc_100EE7D  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100F3A9  +
mov dword ptr [ebp-444h] 1 +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100EEBF  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-410h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-450h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-464h]  +
call sub_100CA71  +
push 91h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 9Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-420h] +
push eax  +
push offset aInstallationty  +
push dword ptr [ebp-418h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100EF68  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-420h] +
dec eax  +
jz loc_100EF82  +
dec eax  +
jz loc_100EF7B  +
push 138Dh  +
jmp loc_100EF87  +
push 109h  +
jmp loc_100EF87  +
push 107h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 9Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-428h] +
push eax  +
push offset aGranttype  +
push dword ptr [ebp-418h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_100EFD2  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-428h] 0FFFFFFFFh +
jnz loc_100EFE2  +
push 11Fh  +
jmp loc_100EFE7  +
push 120h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 9Eh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-428h] +
push eax  +
push offset aMovetype  +
push dword ptr [ebp-418h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_100F032  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-428h] 0FFFFFFFFh +
jnz loc_100F042  +
push 121h  +
jmp loc_100F047  +
push 122h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 0A1h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-420h] +
push eax  +
push offset aPolicyremoval  +
push dword ptr [ebp-418h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100F092  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-420h] +
dec eax  +
jz loc_100F0AC  +
dec eax  +
jz loc_100F0A5  +
push 138Dh  +
jmp loc_100F0B1  +
push 124h  +
jmp loc_100F0B1  +
push 123h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aRedirectinggro  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100F0F1  +
push 800300FDh  +
call sub_1014187  +
push 9Fh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset aS110  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_100F121  +
push 115h  +
jmp loc_100F192  +
push offset aS100  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_100F13C  +
push 114h  +
jmp loc_100F192  +
push offset aS120  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_100F157  +
push 116h  +
jmp loc_100F192  +
push offset aS130  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_100F172  +
push 117h  +
jmp loc_100F192  +
push offset aS131  +
lea ecx [ebp-410h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_100F18D  +
push 118h  +
jmp loc_100F192  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-460h] +
push eax  +
call ds:VariantInit  +
push offset aRedirectedpath  +
lea ecx [ebp-448h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [eax] ebx +
jz loc_100F1CD  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_100F1CF  +
xor ecx ecx +
mov eax [ebp-418h] +
mov edx [eax] +
push ebx  +
push ebx  +
lea edi [ebp-460h] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-448h] +
cmp ecx ebx +
jz loc_100F205  +
call sub_100506E  +
mov [ebp-448h] ebx +
cmp [ebp-414h] ebx +
jge loc_100F22E  +
xor eax eax +
mov [ebp-460h] ax +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
push 0A0h  +
call sub_1017157  +
push eax  +
call esi  +
push 20h  +
pop edi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp word ptr [ebp-460h] 1 +
jz loc_100F347  +
cmp [ebp-460h] bx +
jz loc_100F347  +
mov eax [ebp-460h] +
and eax 0DFFFh +
mov [ebp-46Ch] eax +
mov eax [ebp-458h] +
mov [ebp-42Ch] eax +
cmp eax ebx +
jz loc_100F2C7  +
lea ecx [ebp-424h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100F2A2  +
push eax  +
call sub_1014187  +
lea eax [ebp-43Ch] +
push eax  +
push 1  +
push dword ptr [ebp-42Ch]  +
call ds:SafeArrayGetUBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_100F2C7  +
push eax  +
call sub_1014187  +
mov eax [ebp-424h] +
cmp eax [ebp-43Ch] +
jg loc_100F35C  +
push dword ptr [ebp-46Ch]  +
lea ecx [ebp-410h] +
push ecx  +
push eax  +
push dword ptr [ebp-42Ch]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_100F300  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jnz loc_100F31D  +
push 138Dh  +
call sub_1017157  +
push eax  +
jmp loc_100F323  +
push dword ptr [ebp-410h]  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 3Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-424h]  +
jmp loc_100F2C7  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
jmp loc_100EE01  +
mov eax [ebp-478h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100F3A7 +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_100F3BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_100F3D5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-410h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-44Ch] +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100F641 +
retn   +
***
call __EH_prolog3_catch_GS  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-224h] ebx +
mov [ebp-238h] ebx +
mov [ebp-230h] ebx +
mov [ebp-22Ch] ebx +
mov [ebp-214h] ebx +
mov [ebp-218h] ebx +
lea ecx [ebp-220h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
cmp esi ebx +
jnz loc_100F98D  +
push 800300FDh  +
call sub_1014187  +
mov dword ptr [ebp-21Ch] 1FCh +
lea eax [ebp-210h] +
mov [ebp-234h] eax +
cmp [ebp-21Ch] ebx +
jz loc_100F9BC  +
mov [eax] bl +
inc eax  +
mov [ebp-234h] eax +
dec dword ptr [ebp-21Ch]  +
jmp loc_100F9A3  +
push offset aRsop_iefavorit  +
lea ecx [ebp-228h] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_100F9DA  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100F9DC  +
xor eax eax +
mov ecx [esi] +
lea edx [ebp-218h] +
push edx  +
push ebx  +
push 30h  +
push eax  +
push esi  +
call dword ptr [ecx+48h]  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-228h] +
cmp ecx ebx +
jz loc_100FA08  +
call sub_100506E  +
mov [ebp-228h] ebx +
cmp esi ebx +
jge loc_100FA12  +
push esi  +
call sub_1014187  +
push edi  +
push dword ptr [ebp-218h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_100FA28  +
push eax  +
call sub_1014187  +
mov [ebp-224h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-224h] ebx +
jnz loc_100FB4A  +
mov eax [ebp-218h] +
mov ecx [eax] +
lea edx [ebp-230h] +
push edx  +
lea edx [ebp-214h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-224h] eax +
cmp eax ebx +
jge loc_100FA71  +
push eax  +
call sub_1014187  +
cmp [ebp-230h] ebx +
jz loc_100FB4A  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-220h] +
push eax  +
push offset aUrl  +
push dword ptr [ebp-214h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_100FAAD  +
push 800300FDh  +
call sub_1014187  +
push 0A7h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-220h]  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 2  +
lea eax [ebp-22Ch] +
push eax  +
push offset aMakeavailableo  +
push dword ptr [ebp-214h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_100FAF9  +
push 800300FDh  +
call sub_1014187  +
push 0A8h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-22Ch] 0FFFFFFFFh +
jnz loc_100FB1E  +
push 10Ah  +
jmp loc_100FB23  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
jmp loc_100FA37  +
mov [ebp-4] ebx +
jmp loc_100FB7D  +
mov eax [ebp-23Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100FB7B +
retn   +
xor ebx ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_100FB93  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
mov eax [ebp-214h] +
cmp eax ebx +
jz loc_100FBA9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-214h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-220h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-214h] ebx +
mov [ebp-25Ch] ebx +
mov [ebp-240h] ebx +
mov [ebp-238h] ebx +
mov [ebp-230h] ebx +
mov [ebp-220h] ebx +
mov [ebp-234h] ebx +
mov [ebp-21Ch] ebx +
mov [ebp-218h] ebx +
lea ecx [ebp-224h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-228h] ebx +
mov byte ptr [ebp-4] 1 +
cmp esi ebx +
jnz loc_100FC38  +
push 800300FDh  +
call sub_1014187  +
mov dword ptr [ebp-22Ch] 1FCh +
lea eax [ebp-210h] +
mov [ebp-258h] eax +
cmp [ebp-22Ch] ebx +
jz loc_100FC67  +
mov [eax] bl +
inc eax  +
mov [ebp-258h] eax +
dec dword ptr [ebp-22Ch]  +
jmp loc_100FC4E  +
push offset aRsop_iesecurit  +
lea ecx [ebp-244h] +
call sub_1004986  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_100FC85  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100FC87  +
xor eax eax +
mov ecx [esi] +
lea edx [ebp-218h] +
push edx  +
push ebx  +
push 30h  +
push eax  +
push esi  +
call dword ptr [ecx+48h]  +
mov [ebp-214h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-244h] +
cmp ecx ebx +
jz loc_100FCB7  +
call sub_100506E  +
mov [ebp-244h] ebx +
cmp [ebp-214h] ebx +
jge loc_100FCCA  +
push dword ptr [ebp-214h]  +
call sub_1014187  +
push edi  +
push dword ptr [ebp-218h]  +
call sub_100481D  +
mov [ebp-214h] eax +
cmp eax ebx +
jge loc_100FCE6  +
push eax  +
call sub_1014187  +
mov [ebp-214h] ebx +
mov esi ds:__iob_func +
cmp [ebp-214h] ebx +
jnz loc_100FD73  +
mov eax [ebp-218h] +
mov ecx [eax] +
lea edx [ebp-230h] +
push edx  +
lea edx [ebp-21Ch] +
push edx  +
xor edi edi +
inc edi  +
push edi  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-214h] eax +
cmp eax ebx +
jge loc_100FD2A  +
push eax  +
call sub_1014187  +
cmp [ebp-230h] ebx +
jnz loc_100FD7B  +
cmp [ebp-240h] ebx +
jnz loc_100FD73  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_100FFF4  +
mov [ebp-240h] edi +
lea eax [ebp-254h] +
push eax  +
call ds:VariantInit  +
push 0A9h  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset aAlwaysviewable  +
lea ecx [ebp-23Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_100FDC2  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_100FDC4  +
xor ecx ecx +
mov eax [ebp-21Ch] +
mov edx [eax] +
push ebx  +
push ebx  +
lea edi [ebp-254h] +
push edi  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov [ebp-214h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-23Ch] +
cmp ecx ebx +
jz loc_100FDFA  +
call sub_100506E  +
mov [ebp-23Ch] ebx +
cmp [ebp-214h] ebx +
jge loc_100FE23  +
xor eax eax +
mov [ebp-254h] ax +
lea eax [ebp-254h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-214h]  +
call sub_1014187  +
cmp word ptr [ebp-254h] 1 +
jz loc_100FF1C  +
cmp [ebp-254h] bx +
jz loc_100FF1C  +
mov edi [ebp-254h] +
and edi 0DFFFh +
mov eax [ebp-24Ch] +
mov [ebp-228h] eax +
cmp eax ebx +
jz loc_100FE9F  +
lea ecx [ebp-220h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-214h] eax +
cmp eax ebx +
jge loc_100FE7A  +
push eax  +
call sub_1014187  +
lea eax [ebp-234h] +
push eax  +
push 1  +
push dword ptr [ebp-228h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-214h] eax +
cmp eax ebx +
jge loc_100FE9F  +
push eax  +
call sub_1014187  +
mov eax [ebp-220h] +
cmp eax [ebp-234h] +
jg loc_100FF32  +
push edi  +
lea ecx [ebp-224h] +
push ecx  +
push eax  +
push dword ptr [ebp-228h]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_100FED3  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-224h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jnz loc_100FEF0  +
push 138Dh  +
call sub_1017157  +
push eax  +
jmp loc_100FEF6  +
push dword ptr [ebp-224h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 3Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-220h]  +
jmp loc_100FE9F  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 0AAh  +
call sub_1017157  +
push eax  +
call esi  +
push 20h  +
pop edi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-238h] +
push eax  +
push offset aPasswordoverri  +
push dword ptr [ebp-21Ch]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_100FF70  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-238h] 0FFFFFFFFh +
jnz loc_100FF80  +
push 101h  +
jmp loc_100FF85  +
push 102h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-254h] +
push eax  +
call ds:VariantClear  +
jmp loc_100FCF2  +
mov eax [ebp-260h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-254h] +
push eax  +
call ds:VariantClear  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100FFF2 +
retn   +
xor ebx ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_101000A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
mov eax [ebp-21Ch] +
cmp eax ebx +
jz loc_1010020  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-21Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-224h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-444h] edi +
mov eax [ebp+0Ch] +
mov [ebp-438h] eax +
xor ebx ebx +
mov [ebp-428h] ebx +
mov [ebp-448h] ebx +
mov [ebp-44Ch] ebx +
mov [ebp-414h] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-410h] ebx +
mov [ebp-418h] ebx +
lea ecx [ebp-41Ch] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_10100A9  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-420h] ecx +
lea eax [ebp-210h] +
mov [ebp-440h] eax +
cmp [ebp-420h] ebx +
jz loc_10100D9  +
mov [eax] bl +
inc eax  +
mov [ebp-440h] eax +
dec dword ptr [ebp-420h]  +
jmp loc_10100C0  +
mov [ebp-424h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-43Ch] eax +
cmp [ebp-424h] ebx +
jz loc_1010104  +
mov [eax] bl +
inc eax  +
mov [ebp-43Ch] eax +
dec dword ptr [ebp-424h]  +
jmp loc_10100EB  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_101011D  +
push offset aSelectFromS  +
jmp loc_1010122  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_ieakpolic  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-434h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-430h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_101017A  +
mov esi [esi] +
mov esi [esi] +
jmp loc_101017C  +
xor esi esi +
cmp [eax] ebx +
jz loc_1010186  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1010188  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-418h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-430h] +
cmp ecx ebx +
jz loc_10101B5  +
call sub_100506E  +
mov [ebp-430h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-434h] +
cmp ecx ebx +
jz loc_10101CE  +
call sub_100506E  +
mov [ebp-434h] ebx +
cmp esi ebx +
jge loc_10101D8  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-438h]  +
push dword ptr [ebp-418h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_10101F3  +
push eax  +
call sub_1014187  +
mov [ebp-428h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-428h] ebx +
jnz loc_1010465  +
mov eax [ebp-418h] +
mov ecx [eax] +
lea edx [ebp-42Ch] +
push edx  +
lea edx [ebp-410h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jge loc_101023C  +
push eax  +
call sub_1014187  +
cmp [ebp-42Ch] ebx +
jz loc_1010465  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-41Ch] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1010278  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-41Ch] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-41Ch] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-438h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_100CA71  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aImportcontentr  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_10102F7  +
push 800300FDh  +
call sub_1014187  +
push 0C3h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-414h] 0FFFFFFFFh +
jnz loc_101031C  +
push 10Ah  +
jmp loc_1010321  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aImportsecurity  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_1010357  +
push 800300FDh  +
call sub_1014187  +
push 0C1h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-414h] 0FFFFFFFFh +
jnz loc_101037C  +
push 10Ah  +
jmp loc_1010381  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aImportauthenti  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_10103B7  +
push 800300FDh  +
call sub_1014187  +
push 0C4h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-414h] 0FFFFFFFFh +
jnz loc_10103DC  +
push 10Ah  +
jmp loc_10103E1  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aEnabletrustedp  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_1010417  +
push 800300FDh  +
call sub_1014187  +
push 0C5h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-414h] 0FFFFFFFFh +
jnz loc_101043C  +
push 10Ah  +
jmp loc_1010441  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
jmp loc_1010202  +
mov [ebp-4] ebx +
jmp loc_10104C6  +
mov eax [ebp-450h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10104C4 +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10104C4 +
retn   +
xor ebx ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_10104DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov eax [ebp-410h] +
cmp eax ebx +
jz loc_10104F2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-410h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-41Ch] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-444h] edi +
mov eax [ebp+0Ch] +
mov [ebp-438h] eax +
xor ebx ebx +
mov [ebp-424h] ebx +
mov [ebp-450h] ebx +
mov [ebp-428h] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-430h] ebx +
mov [ebp-410h] ebx +
mov [ebp-414h] ebx +
lea ecx [ebp-418h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_101057B  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-41Ch] ecx +
lea eax [ebp-210h] +
mov [ebp-448h] eax +
cmp [ebp-41Ch] ebx +
jz loc_10105AB  +
mov [eax] bl +
inc eax  +
mov [ebp-448h] eax +
dec dword ptr [ebp-41Ch]  +
jmp loc_1010592  +
mov [ebp-420h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-440h] eax +
cmp [ebp-420h] ebx +
jz loc_10105D6  +
mov [eax] bl +
inc eax  +
mov [ebp-440h] eax +
dec dword ptr [ebp-420h]  +
jmp loc_10105BD  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_10105EF  +
push offset aSelectFromS  +
jmp loc_10105F4  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_ieakpolic  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-43Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-434h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_101064C  +
mov esi [esi] +
mov esi [esi] +
jmp loc_101064E  +
xor esi esi +
cmp [eax] ebx +
jz loc_1010658  +
mov eax [eax] +
mov eax [eax] +
jmp loc_101065A  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-414h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-434h] +
cmp ecx ebx +
jz loc_1010687  +
call sub_100506E  +
mov [ebp-434h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-43Ch] +
cmp ecx ebx +
jz loc_10106A0  +
call sub_100506E  +
mov [ebp-43Ch] ebx +
cmp esi ebx +
jge loc_10106AA  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-438h]  +
push dword ptr [ebp-414h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_10106C5  +
push eax  +
call sub_1014187  +
mov [ebp-424h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-424h] ebx +
jnz loc_1010750  +
mov eax [ebp-414h] +
mov ecx [eax] +
lea edx [ebp-430h] +
push edx  +
lea edx [ebp-410h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-424h] eax +
cmp eax ebx +
jge loc_101070A  +
push eax  +
call sub_1014187  +
cmp [ebp-430h] ebx +
jnz loc_1010758  +
cmp [ebp-428h] ebx +
jnz loc_1010750  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_101088D  +
mov dword ptr [ebp-428h] 1 +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-418h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1010792  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-418h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-418h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-438h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_100CA71  +
push ebx  +
lea eax [ebp-42Ch] +
push eax  +
push offset aImportprograms  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_1010811  +
push 800300FDh  +
call sub_1014187  +
push 0C2h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-42Ch] 0FFFFFFFFh +
jnz loc_1010836  +
push 10Ah  +
jmp loc_101083B  +
push 10Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
jmp loc_10106D4  +
mov eax [ebp-44Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_101088B +
retn   +
xor ebx ebx +
mov eax [ebp-414h] +
cmp eax ebx +
jz loc_10108A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-414h] ebx +
mov eax [ebp-410h] +
cmp eax ebx +
jz loc_10108B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-410h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-418h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp-448h] +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1010B1F +
retn   +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-45Ch] edi +
mov eax [ebp+10h] +
mov [ebp-430h] eax +
xor ebx ebx +
mov [ebp-440h] ebx +
mov [ebp-434h] ebx +
mov [ebp-420h] ebx +
mov [ebp-424h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-414h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-458h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-444h] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-43Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov esi 0FEh +
push esi  +
push offset aSelectFromSW_1  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push offset aRsop_scriptpol  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
cmp dword ptr [ebp+14h] 1 +
jz loc_1010E1D  +
push esi  +
push offset aAndPrecedence1  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1015C73  +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-418h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 3 +
push offset aWql  +
lea ecx [ebp-428h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [esi] ebx +
jz loc_1010E53  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1010E55  +
xor esi esi +
cmp [eax] ebx +
jz loc_1010E5F  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1010E61  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-424h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-428h] +
cmp ecx ebx +
jz loc_1010E92  +
call sub_100506E  +
mov [ebp-428h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-418h] +
cmp ecx ebx +
jz loc_1010EAB  +
call sub_100506E  +
mov [ebp-418h] ebx +
cmp [ebp-410h] ebx +
jge loc_1010EBE  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
push dword ptr [ebp-430h]  +
push dword ptr [ebp-424h]  +
call sub_100481D  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1010EDF  +
push eax  +
call sub_1014187  +
mov [ebp-410h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-410h] ebx +
jnz loc_1010F6B  +
mov eax [ebp-424h] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
lea edx [ebp-420h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1010F26  +
push eax  +
call sub_1014187  +
cmp [ebp-444h] ebx +
jnz loc_1010F77  +
cmp [ebp-440h] ebx +
jnz loc_1010F6B  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov dword ptr [ebp-4] 1 +
jmp loc_10113B2  +
mov dword ptr [ebp-440h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aId  +
push dword ptr [ebp-420h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1010FAD  +
push 800300FDh  +
call sub_1014187  +
cmp [ebp+0Ch] ebx +
jz loc_1011071  +
push offset aLogon  +
lea ecx [ebp-414h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1010EF0  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-420h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1010FFB  +
push 800300FDh  +
call sub_1014187  +
push 0FEh  +
push dword ptr [ebp-414h]  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-430h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_100CA71  +
lea eax [ebp-454h] +
push eax  +
call ds:VariantInit  +
push offset aScriptlist  +
lea ecx [ebp-438h] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [eax] ebx +
jz loc_101107B  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-418h] eax +
jmp loc_1011081  +
push offset aLogoff  +
jmp loc_1010FBB  +
mov [ebp-418h] ebx +
mov eax [ebp-420h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-454h] +
push edx  +
push ebx  +
push dword ptr [ebp-418h]  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-438h] +
cmp ecx ebx +
jz loc_10110BC  +
call sub_100506E  +
mov [ebp-438h] ebx +
cmp [ebp-410h] ebx +
jge loc_10110E5  +
xor eax eax +
mov [ebp-454h] ax +
lea eax [ebp-454h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
cmp word ptr [ebp-454h] 1 +
jz loc_1011337  +
cmp [ebp-454h] bx +
jz loc_1011337  +
mov eax [ebp-454h] +
and eax 0DFFFh +
mov [ebp-428h] eax +
mov eax [ebp-44Ch] +
mov [ebp-418h] eax +
cmp eax ebx +
jz loc_1011166  +
lea ecx [ebp-42Ch] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011141  +
push eax  +
call sub_1014187  +
lea eax [ebp-43Ch] +
push eax  +
push 1  +
push dword ptr [ebp-418h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011166  +
push eax  +
call sub_1014187  +
mov eax [ebp-42Ch] +
cmp eax [ebp-43Ch] +
jg loc_1011362  +
push dword ptr [ebp-428h]  +
lea ecx [ebp-41Ch] +
push ecx  +
push eax  +
push dword ptr [ebp-418h]  +
call sub_1004470  +
cmp eax ebx +
jnz loc_101119F  +
push 800300FDh  +
call sub_1014187  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aScript  +
push dword ptr [ebp-41Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_10111CB  +
push 800300FDh  +
call sub_1014187  +
push 8Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aArguments  +
push dword ptr [ebp-41Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_101121E  +
push 800300FDh  +
call sub_1014187  +
push 8Eh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aExecutiontime  +
push dword ptr [ebp-41Ch]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011271  +
push 800300FDh  +
call sub_1014187  +
push 8Fh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset a00000000000000  +
lea ecx [ebp-414h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_10112A7  +
push 11Eh  +
call sub_1017157  +
jmp loc_1011310  +
lea eax [ebp-470h] +
push eax  +
push offset aExecutiontime  +
push dword ptr [ebp-41Ch]  +
call sub_1005C2D  +
cmp eax ebx +
jnz loc_10112CC  +
push 800300FDh  +
call sub_1014187  +
lea eax [ebp-434h] +
push eax  +
call sub_1014EC9  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
mov eax [ebp-434h] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp-470h] +
push eax  +
push ebx  +
push 400h  +
call ds:GetTimeFormatW  +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-42Ch]  +
jmp loc_1011166  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
xor eax eax +
mov [ebp-454h] ax +
lea eax [ebp-454h] +
push eax  +
call ds:VariantClear  +
jmp loc_1010EF0  +
mov eax [ebp-460h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-454h] +
push eax  +
call ds:VariantClear  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_10113B0 +
retn   +
xor ebx ebx +
mov eax [ebp-424h] +
cmp eax ebx +
jz loc_10113C8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-424h] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_10113DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_10113F4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov [ebp-4] bl +
lea ecx [ebp-458h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 10h  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-440h] edi +
mov eax [ebp+0Ch] +
mov [ebp-430h] eax +
xor ebx ebx +
mov [ebp-428h] ebx +
mov [ebp-450h] ebx +
mov [ebp-434h] ebx +
mov [ebp-410h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-418h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-42Ch] ebx +
mov [ebp-414h] ebx +
mov esi 1FCh +
mov ecx esi +
lea eax [ebp-210h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1011486  +
mov ecx esi +
lea eax [ebp-40Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1011494  +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_10114AC  +
push 800300FDh  +
call sub_1014187  +
mov [ebp-420h] esi +
lea eax [ebp-210h] +
mov [ebp-444h] eax +
cmp [ebp-420h] ebx +
jz loc_10114D7  +
mov [eax] bl +
inc eax  +
mov [ebp-444h] eax +
dec dword ptr [ebp-420h]  +
jmp loc_10114BE  +
mov [ebp-424h] esi +
lea eax [ebp-40Ch] +
mov [ebp-448h] eax +
cmp [ebp-424h] ebx +
jz loc_1011502  +
mov [eax] bl +
inc eax  +
mov [ebp-448h] eax +
dec dword ptr [ebp-424h]  +
jmp loc_10114E9  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_101151B  +
push offset aSelectFromS  +
jmp loc_1011520  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_applicati  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-43Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-438h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_1011578  +
mov esi [esi] +
mov esi [esi] +
jmp loc_101157A  +
xor esi esi +
cmp [eax] ebx +
jz loc_1011584  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1011586  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-438h] +
cmp ecx ebx +
jz loc_10115B3  +
call sub_100506E  +
mov [ebp-438h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-43Ch] +
cmp ecx ebx +
jz loc_10115CC  +
call sub_100506E  +
mov [ebp-43Ch] ebx +
cmp esi ebx +
jge loc_10115D6  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-430h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
cmp eax ebx +
jge loc_10115F1  +
push eax  +
call sub_1014187  +
mov [ebp-428h] ebx +
push 20h  +
pop edi  +
mov esi ds:__iob_func +
cmp [ebp-428h] ebx +
jnz loc_101167C  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-42Ch] +
push edx  +
lea edx [ebp-410h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jge loc_1011636  +
push eax  +
call sub_1014187  +
cmp [ebp-42Ch] ebx +
jnz loc_1011684  +
cmp [ebp-434h] ebx +
jnz loc_101167C  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_1011A0F  +
mov dword ptr [ebp-434h] 1 +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-418h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_10116BE  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-418h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-418h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-430h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-440h]  +
call sub_100CA71  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea eax [ebp-418h] +
push eax  +
push offset aName  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011747  +
push 800300FDh  +
call sub_1014187  +
push 0B3h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-418h]  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aVersionnumberh  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_1011792  +
push 800300FDh  +
call sub_1014187  +
push dword ptr [ebp-414h]  +
push offset aU  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
push 0FEh  +
push offset a_  +
lea eax [ebp-210h] +
push eax  +
call sub_1015C73  +
push 0B4h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aVersionnumberl  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_1011813  +
push 800300FDh  +
call sub_1014187  +
push dword ptr [ebp-414h]  +
push offset aU  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aDeploymenttype  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_1011869  +
push 800300FDh  +
call sub_1014187  +
push 0B5h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
mov eax [ebp-414h] +
dec eax  +
jz loc_1011898  +
dec eax  +
jz loc_1011891  +
push 138Dh  +
jmp loc_101189D  +
push 0FFh  +
jmp loc_101189D  +
push 100h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-418h] +
push eax  +
push offset aPackagelocatio  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_10118D3  +
push 800300FDh  +
call sub_1014187  +
push 0B6h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-418h]  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 2  +
lea eax [ebp-414h] +
push eax  +
push offset aDemandinstalla  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_101191F  +
push 800300FDh  +
call sub_1014187  +
push 93h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
cmp dword ptr [ebp-414h] 0FFFFFFFFh +
jnz loc_1011944  +
push 101h  +
jmp loc_1011949  +
push 102h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push 94h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-414h] +
push eax  +
push offset aEntrytype  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_1011994  +
push 800300FDh  +
call sub_1014187  +
mov eax [ebp-414h] +
dec eax  +
jz loc_10119B8  +
dec eax  +
jz loc_10119B1  +
dec eax  +
jz loc_10119AA  +
push 138Dh  +
jmp loc_10119BD  +
push 103h  +
jmp loc_10119BD  +
push 105h  +
jmp loc_10119BD  +
push 104h  +
call sub_1017157  +
push eax  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax edi +
push eax  +
call sub_1016D99  +
jmp loc_1011600  +
mov eax [ebp-44Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1011A0D +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_1011A25  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-410h] +
cmp eax ebx +
jz loc_1011A3B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-410h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-418h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-470h] edi +
mov eax [ebp+10h] +
mov [ebp-438h] eax +
xor ebx ebx +
mov [ebp-410h] ebx +
mov [ebp-478h] ebx +
mov [ebp-440h] ebx +
mov [ebp-43Ch] ebx +
mov [ebp-420h] ebx +
mov [ebp-41Ch] ebx +
mov [ebp-418h] ebx +
mov [ebp-434h] ebx +
lea ecx [ebp-414h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-46Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-44Ch] ebx +
mov [ebp-428h] ebx +
mov [ebp-448h] ebx +
mov byte ptr [ebp-4] 2 +
cmp edi ebx +
jnz loc_1011AEB  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-430h] ecx +
lea eax [ebp-210h] +
mov [ebp-474h] eax +
cmp [ebp-430h] ebx +
jz loc_1011B1B  +
mov [eax] bl +
inc eax  +
mov [ebp-474h] eax +
dec dword ptr [ebp-430h]  +
jmp loc_1011B02  +
mov [ebp-42Ch] ecx +
lea eax [ebp-40Ch] +
mov [ebp-468h] eax +
cmp [ebp-42Ch] ebx +
jz loc_1011B46  +
mov [eax] bl +
inc eax  +
mov [ebp-468h] eax +
dec dword ptr [ebp-42Ch]  +
jmp loc_1011B2D  +
lea eax [ebp-210h] +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_1011B65  +
mov esi 0FEh +
push esi  +
push offset aSelectFromSW_2  +
push eax  +
call sub_101570A  +
jmp loc_1011B7A  +
push 0FEh  +
push offset aSelectFromSW_3  +
push eax  +
call sub_101570A  +
mov esi 0FEh +
push offset aRsop_scriptpol  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
cmp dword ptr [ebp+14h] 1 +
jz loc_1011BAE  +
push esi  +
push offset aAndPrecedence1  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1015C73  +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-424h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 3 +
push offset aWql  +
lea ecx [ebp-444h] +
call sub_1004986  +
mov byte ptr [ebp-4] 4 +
cmp [esi] ebx +
jz loc_1011BE4  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1011BE6  +
xor esi esi +
cmp [eax] ebx +
jz loc_1011BF0  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1011BF2  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-444h] +
cmp ecx ebx +
jz loc_1011C23  +
call sub_100506E  +
mov [ebp-444h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-424h] +
cmp ecx ebx +
jz loc_1011C3C  +
call sub_100506E  +
mov [ebp-424h] ebx +
cmp [ebp-410h] ebx +
jge loc_1011C4F  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
push dword ptr [ebp-438h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011C70  +
push eax  +
call sub_1014187  +
mov [ebp-410h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-410h] ebx +
jnz loc_1011CFC  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-44Ch] +
push edx  +
lea edx [ebp-420h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011CB7  +
push eax  +
call sub_1014187  +
cmp [ebp-44Ch] ebx +
jnz loc_1011D08  +
cmp [ebp-440h] ebx +
jnz loc_1011CFC  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov dword ptr [ebp-4] 1 +
jmp loc_101212F  +
mov dword ptr [ebp-440h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-420h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011D3E  +
push 800300FDh  +
call sub_1014187  +
push 0FEh  +
push dword ptr [ebp-414h]  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-438h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-470h]  +
call sub_100CA71  +
lea eax [ebp-460h] +
push eax  +
call ds:VariantInit  +
push offset aScriptlist  +
lea ecx [ebp-450h] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [eax] ebx +
jz loc_1011DB4  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-424h] eax +
jmp loc_1011DBA  +
mov [ebp-424h] ebx +
mov eax [ebp-420h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-460h] +
push edx  +
push ebx  +
push dword ptr [ebp-424h]  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-410h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-450h] +
cmp ecx ebx +
jz loc_1011DF5  +
call sub_100506E  +
mov [ebp-450h] ebx +
cmp [ebp-410h] ebx +
jge loc_1011E1E  +
xor eax eax +
mov [ebp-460h] ax +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-410h]  +
call sub_1014187  +
cmp word ptr [ebp-460h] 1 +
jz loc_1012070  +
cmp [ebp-460h] bx +
jz loc_1012070  +
mov eax [ebp-460h] +
and eax 0DFFFh +
mov [ebp-464h] eax +
mov eax [ebp-458h] +
mov [ebp-434h] eax +
cmp eax ebx +
jz loc_1011E9F  +
lea ecx [ebp-428h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011E7A  +
push eax  +
call sub_1014187  +
lea eax [ebp-448h] +
push eax  +
push 1  +
push dword ptr [ebp-434h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-410h] eax +
cmp eax ebx +
jge loc_1011E9F  +
push eax  +
call sub_1014187  +
mov eax [ebp-428h] +
cmp eax [ebp-448h] +
jg loc_101209B  +
push dword ptr [ebp-464h]  +
lea ecx [ebp-418h] +
push ecx  +
push eax  +
push dword ptr [ebp-434h]  +
call sub_1004470  +
cmp eax ebx +
jnz loc_1011ED8  +
push 800300FDh  +
call sub_1014187  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aScript  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011F04  +
push 800300FDh  +
call sub_1014187  +
push 8Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aArguments  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011F57  +
push 800300FDh  +
call sub_1014187  +
push 8Eh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-414h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-414h] +
push eax  +
push offset aExecutiontime  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1011FAA  +
push 800300FDh  +
call sub_1014187  +
push 8Fh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset a00000000000000  +
lea ecx [ebp-414h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_1011FE0  +
push 11Eh  +
call sub_1017157  +
jmp loc_1012049  +
lea eax [ebp-48Ch] +
push eax  +
push offset aExecutiontime  +
push dword ptr [ebp-418h]  +
call sub_1005C2D  +
cmp eax ebx +
jnz loc_1012005  +
push 800300FDh  +
call sub_1014187  +
lea eax [ebp-43Ch] +
push eax  +
call sub_1014EC9  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
mov eax [ebp-43Ch] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp-48Ch] +
push eax  +
push ebx  +
push 400h  +
call ds:GetTimeFormatW  +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-428h]  +
jmp loc_1011E9F  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
xor eax eax +
mov [ebp-460h] ax +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
jmp loc_1011C81  +
mov eax [ebp-47Ch] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
mov eax [ebp-41Ch] +
xor ebx ebx +
cmp eax ebx +
jz loc_10120E7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_10120FD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_1012113  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
lea eax [ebp-460h] +
push eax  +
call ds:VariantClear  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_101212D +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_1012145  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-420h] +
cmp eax ebx +
jz loc_101215B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-420h] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_1012171  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
mov [ebp-4] bl +
lea ecx [ebp-46Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 10h  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-43Ch] edi +
mov eax [ebp+0Ch] +
mov [ebp-430h] eax +
xor ebx ebx +
mov [ebp-428h] ebx +
mov [ebp-44Ch] ebx +
mov [ebp-434h] ebx +
mov [ebp-418h] ebx +
lea ecx [ebp-41Ch] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-410h] ebx +
mov [ebp-414h] ebx +
mov esi 1FCh +
mov ecx esi +
lea eax [ebp-210h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10121FD  +
mov ecx esi +
lea eax [ebp-40Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101220B  +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_1012223  +
push 800300FDh  +
call sub_1014187  +
mov [ebp-420h] esi +
lea eax [ebp-210h] +
mov [ebp-440h] eax +
cmp [ebp-420h] ebx +
jz loc_101224E  +
mov [eax] bl +
inc eax  +
mov [ebp-440h] eax +
dec dword ptr [ebp-420h]  +
jmp loc_1012235  +
mov [ebp-424h] esi +
lea eax [ebp-40Ch] +
mov [ebp-444h] eax +
cmp [ebp-424h] ebx +
jz loc_1012279  +
mov [eax] bl +
inc eax  +
mov [ebp-444h] eax +
dec dword ptr [ebp-424h]  +
jmp loc_1012260  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_1012292  +
push offset aSelectFromS  +
jmp loc_1012297  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_securitys  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-42Ch] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-438h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_10122EF  +
mov esi [esi] +
mov esi [esi] +
jmp loc_10122F1  +
xor esi esi +
cmp [eax] ebx +
jz loc_10122FB  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10122FD  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-414h] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-438h] +
cmp ecx ebx +
jz loc_101232A  +
call sub_100506E  +
mov [ebp-438h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-42Ch] +
cmp ecx ebx +
jz loc_1012343  +
call sub_100506E  +
mov [ebp-42Ch] ebx +
cmp esi ebx +
jge loc_101234D  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-430h]  +
push dword ptr [ebp-414h]  +
call sub_100481D  +
cmp eax ebx +
jge loc_1012368  +
push eax  +
call sub_1014187  +
mov [ebp-428h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-428h] ebx +
jnz loc_10123F4  +
mov eax [ebp-414h] +
mov ecx [eax] +
lea edx [ebp-418h] +
push edx  +
lea edx [ebp-410h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jge loc_10123AF  +
push eax  +
call sub_1014187  +
cmp [ebp-418h] ebx +
jnz loc_10123FC  +
cmp [ebp-434h] ebx +
jnz loc_10123F4  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_101258A  +
mov dword ptr [ebp-434h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-41Ch] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1012432  +
push 800300FDh  +
call sub_1014187  +
push 0FEh  +
push dword ptr [ebp-41Ch]  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-430h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-43Ch]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-41Ch] +
push eax  +
push offset aKeyname  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_10124A3  +
push 800300FDh  +
call sub_1014187  +
push 8Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-41Ch]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-418h] +
push eax  +
push offset aSetting  +
push dword ptr [ebp-410h]  +
call sub_1005B07  +
cmp eax ebx +
jnz loc_10124F0  +
push 800300FDh  +
call sub_1014187  +
push 8Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
cmp [ebp-418h] ebx +
jnz loc_1012516  +
push edi  +
call sub_1017157  +
jmp loc_101253B  +
push dword ptr [ebp-418h]  +
push offset aU  +
push 0FEh  +
lea eax [ebp-210h] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-210h] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_1012379  +
mov eax [ebp-448h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1012588 +
retn   +
xor ebx ebx +
mov eax [ebp-414h] +
cmp eax ebx +
jz loc_10125A0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-414h] ebx +
mov eax [ebp-410h] +
cmp eax ebx +
jz loc_10125B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-410h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-41Ch] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-444h] edi +
mov eax [ebp+0Ch] +
mov [ebp-434h] eax +
xor ebx ebx +
mov [ebp-428h] ebx +
mov [ebp-454h] ebx +
mov [ebp-438h] ebx +
mov [ebp-420h] ebx +
mov [ebp-414h] ebx +
mov [ebp-43Ch] ebx +
mov [ebp-410h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-418h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov esi 1FCh +
mov ecx esi +
lea eax [ebp-210h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1012640  +
mov ecx esi +
lea eax [ebp-40Ch] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101264E  +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_1012666  +
push 800300FDh  +
call sub_1014187  +
mov [ebp-424h] esi +
lea eax [ebp-210h] +
mov [ebp-448h] eax +
cmp [ebp-424h] ebx +
jz loc_1012691  +
mov [eax] bl +
inc eax  +
mov [ebp-448h] eax +
dec dword ptr [ebp-424h]  +
jmp loc_1012678  +
mov [ebp-42Ch] esi +
lea eax [ebp-40Ch] +
mov [ebp-44Ch] eax +
cmp [ebp-42Ch] ebx +
jz loc_10126BC  +
mov [eax] bl +
inc eax  +
mov [ebp-44Ch] eax +
dec dword ptr [ebp-42Ch]  +
jmp loc_10126A3  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_10126D5  +
push offset aSelectFromS  +
jmp loc_10126DA  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_auditpoli  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-430h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-440h] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_1012732  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1012734  +
xor esi esi +
cmp [eax] ebx +
jz loc_101273E  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1012740  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-440h] +
cmp ecx ebx +
jz loc_101276D  +
call sub_100506E  +
mov [ebp-440h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-430h] +
cmp ecx ebx +
jz loc_1012786  +
call sub_100506E  +
mov [ebp-430h] ebx +
cmp esi ebx +
jge loc_1012790  +
push esi  +
call sub_1014187  +
push dword ptr [ebp-434h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
cmp eax ebx +
jge loc_10127AB  +
push eax  +
call sub_1014187  +
mov [ebp-428h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-428h] ebx +
jnz loc_1012837  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-43Ch] +
push edx  +
lea edx [ebp-410h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jge loc_10127F2  +
push eax  +
call sub_1014187  +
cmp [ebp-43Ch] ebx +
jnz loc_101283F  +
cmp [ebp-438h] ebx +
jnz loc_1012837  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_1012A74  +
mov dword ptr [ebp-438h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-418h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1012875  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-418h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-418h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-434h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_100CA71  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-418h] +
push eax  +
push offset aCategory  +
push dword ptr [ebp-410h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_10128FB  +
push 800300FDh  +
call sub_1014187  +
push 8Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-418h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 8Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push ebx  +
lea eax [ebp-420h] +
push eax  +
push offset aSuccess  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_101295E  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-420h] 0FFFFFFFFh +
jnz loc_1012979  +
push offset aSuccess  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_101297F  +
inc dword ptr [ebp-414h]  +
push ebx  +
lea eax [ebp-420h] +
push eax  +
push offset aFailure  +
push dword ptr [ebp-410h]  +
call sub_1005B9C  +
cmp eax ebx +
jnz loc_10129A5  +
push 800300FDh  +
call sub_1014187  +
cmp dword ptr [ebp-420h] 0FFFFFFFFh +
jnz loc_10129D8  +
cmp [ebp-414h] ebx +
jnz loc_10129C6  +
push offset asc_1002D18  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset aFailure  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_10129DE  +
inc dword ptr [ebp-414h]  +
cmp dword ptr [ebp-414h] 2 +
jnz loc_10129FD  +
push 0FBh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-414h] ebx +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
jmp loc_10127BC  +
mov eax [ebp-450h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1012A72 +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1012A72 +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_1012A8A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-410h] +
cmp eax ebx +
jz loc_1012AA0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-410h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-418h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov [ebp-46Ch] edi +
mov eax [ebp+0Ch] +
mov [ebp-434h] eax +
xor ebx ebx +
mov [ebp-414h] ebx +
mov [ebp-474h] ebx +
mov [ebp-448h] ebx +
mov [ebp-444h] ebx +
mov [ebp-424h] ebx +
mov [ebp-438h] ebx +
mov [ebp-418h] ebx +
mov [ebp-41Ch] ebx +
lea ecx [ebp-410h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
mov [ebp-42Ch] ebx +
mov byte ptr [ebp-4] 1 +
cmp edi ebx +
jnz loc_1012B35  +
push 800300FDh  +
call sub_1014187  +
mov ecx 1FCh +
mov [ebp-428h] ecx +
lea eax [ebp-210h] +
mov [ebp-468h] eax +
cmp [ebp-428h] ebx +
jz loc_1012B65  +
mov [eax] bl +
inc eax  +
mov [ebp-468h] eax +
dec dword ptr [ebp-428h]  +
jmp loc_1012B4C  +
mov [ebp-430h] ecx +
lea eax [ebp-40Ch] +
mov [ebp-464h] eax +
cmp [ebp-430h] ebx +
jz loc_1012B90  +
mov [eax] bl +
inc eax  +
mov [ebp-464h] eax +
dec dword ptr [ebp-430h]  +
jmp loc_1012B77  +
mov esi 0FEh +
lea eax [ebp-210h] +
push esi  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_1012BA9  +
push offset aSelectFromS  +
jmp loc_1012BAE  +
push offset aSelectFromSWhe  +
push eax  +
call sub_101570A  +
push offset aRsop_userprivi  +
lea eax [ebp-210h] +
push eax  +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
call sub_1006D3F  +
add esp 10h +
lea eax [ebp-40Ch] +
push eax  +
lea ecx [ebp-420h] +
call sub_1004986  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
push offset aWql  +
lea ecx [ebp-43Ch] +
call sub_1004986  +
mov byte ptr [ebp-4] 3 +
cmp [esi] ebx +
jz loc_1012C06  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1012C08  +
xor esi esi +
cmp [eax] ebx +
jz loc_1012C12  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1012C14  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-41Ch] +
push edx  +
push ebx  +
push 30h  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+50h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-43Ch] +
cmp ecx ebx +
jz loc_1012C45  +
call sub_100506E  +
mov [ebp-43Ch] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-420h] +
cmp ecx ebx +
jz loc_1012C5E  +
call sub_100506E  +
mov [ebp-420h] ebx +
cmp [ebp-414h] ebx +
jge loc_1012C71  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
push dword ptr [ebp-434h]  +
push dword ptr [ebp-41Ch]  +
call sub_100481D  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1012C92  +
push eax  +
call sub_1014187  +
mov [ebp-414h] ebx +
mov edi 138Dh +
mov esi ds:__iob_func +
cmp [ebp-414h] ebx +
jnz loc_1012D1E  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-444h] +
push edx  +
lea edx [ebp-418h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1012CD9  +
push eax  +
call sub_1014187  +
cmp [ebp-444h] ebx +
jnz loc_1012D26  +
cmp [ebp-448h] ebx +
jnz loc_1012D1E  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
mov [ebp-4] ebx +
jmp loc_10130B1  +
mov dword ptr [ebp-448h] 1 +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aGpoid  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1012D5C  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
push 0FEh  +
push eax  +
lea ecx [ebp-410h] +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp-210h] +
push eax  +
call sub_101570A  +
push 8Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-434h]  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [ebp-46Ch]  +
call sub_100CA71  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantInit  +
push edi  +
call sub_1017157  +
push eax  +
lea eax [ebp-410h] +
push eax  +
push offset aUserright  +
push dword ptr [ebp-418h]  +
call sub_1005A1D  +
cmp eax ebx +
jnz loc_1012DEF  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
push 65h  +
lea ecx [ebp-410h] +
call ?Find@CHString@@QBEHG@Z  +
inc eax  +
push eax  +
lea eax [ebp-45Ch] +
push eax  +
lea ecx [ebp-410h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-410h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-45Ch] +
call ??1CHString@@QAE@XZ  +
push 8Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push dword ptr [ebp-410h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 8Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset aAccountlist  +
lea ecx [ebp-440h] +
call sub_1004986  +
mov byte ptr [ebp-4] 5 +
cmp [eax] ebx +
jz loc_1012E9E  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-420h] eax +
jmp loc_1012EA4  +
mov [ebp-420h] ebx +
mov eax [ebp-418h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-458h] +
push edx  +
push ebx  +
push dword ptr [ebp-420h]  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-414h] eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-440h] +
cmp ecx ebx +
jz loc_1012EDF  +
call sub_100506E  +
mov [ebp-440h] ebx +
cmp [ebp-414h] ebx +
jge loc_1012F08  +
xor eax eax +
mov [ebp-458h] ax +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-414h]  +
call sub_1014187  +
cmp word ptr [ebp-458h] 1 +
jz loc_1013007  +
cmp [ebp-458h] bx +
jz loc_1013007  +
mov eax [ebp-458h] +
and eax 0DFFFh +
mov [ebp-460h] eax +
mov eax [ebp-450h] +
mov [ebp-42Ch] eax +
cmp eax ebx +
jz loc_1012F89  +
lea ecx [ebp-424h] +
push ecx  +
push 1  +
push eax  +
call ds:SafeArrayGetLBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1012F64  +
push eax  +
call sub_1014187  +
lea eax [ebp-438h] +
push eax  +
push 1  +
push dword ptr [ebp-42Ch]  +
call ds:SafeArrayGetUBound  +
mov [ebp-414h] eax +
cmp eax ebx +
jge loc_1012F89  +
push eax  +
call sub_1014187  +
mov eax [ebp-424h] +
cmp eax [ebp-438h] +
jg loc_1013029  +
push dword ptr [ebp-460h]  +
lea ecx [ebp-410h] +
push ecx  +
push eax  +
push dword ptr [ebp-42Ch]  +
call sub_100440E  +
cmp eax ebx +
jnz loc_1012FC2  +
push 800300FDh  +
call sub_1014187  +
lea ecx [ebp-410h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jnz loc_1012FDB  +
push edi  +
call sub_1017157  +
push eax  +
jmp loc_1012FE1  +
push dword ptr [ebp-410h]  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push 3Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
inc dword ptr [ebp-424h]  +
jmp loc_1012F89  +
push edi  +
call sub_1017157  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax 20h +
push eax  +
call sub_1016D99  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
jmp loc_1012CA3  +
mov eax [ebp-470h] +
push dword ptr [eax+4]  +
call sub_1004DC9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10130AF +
retn   +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1014CC4  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_101716F  +
lea eax [ebp-458h] +
push eax  +
call ds:VariantClear  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10130AF +
retn   +
xor ebx ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_10130C7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-418h] +
cmp eax ebx +
jz loc_10130DD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-418h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-410h] +
call ??1CHString@@QAE@XZ  +
call sub_101466B  +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov [ebp-418h] eax +
mov eax [ebp+0Ch] +
mov [ebp-410h] eax +
xor eax eax +
mov esi 1FAh +
push esi  +
mov [ebp-408h] ax +
xor ebx ebx +
lea eax [ebp-406h] +
push ebx  +
push eax  +
mov edi ecx +
call memset  +
xor eax eax +
push esi  +
mov [ebp-20Ch] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
lea ecx [ebp-414h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] ebx +
cmp [edi+44h] ebx +
jnz loc_10131CA  +
mov eax [edi+24h] +
mov esi 0FEh +
push esi  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_101570A  +
mov eax [edi+18h] +
push esi  +
push eax  +
lea eax [ebp-408h] +
push eax  +
call sub_101570A  +
push ebx  +
push esi  +
push dword ptr [edi+30h]  +
lea eax [ebp-408h] +
push esi  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1018CCD  +
cmp eax 1 +
jz loc_10131C4  +
push 138Dh  +
call sub_1017157  +
push eax  +
lea ecx [ebp-414h] +
call ??4CHString@@QAEABV0@PBG@Z  +
jmp loc_10131CA  +
call ds:GetLastError  +
push 39h  +
call sub_1017157  +
mov esi ds:__iob_func +
push eax  +
call esi  +
push 20h  +
pop ebx  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 175h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 175h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
cmp eax 4 +
jbe loc_1013244  +
add eax 0FFFFFFFCh +
mov [ebp-40Ch] eax +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_101322A  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push dword ptr [edi+58h]  +
push dword ptr [edi+54h]  +
push ecx  +
mov ecx esp +
mov [ebp-40Ch] esp +
push dword ptr [ebp-418h]  +
call ??0CHString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
mov eax [edi+24h] +
push eax  +
mov byte ptr [ebp-4] 0 +
call sub_100C047  +
push 39h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 69h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 69h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
cmp eax 4 +
jbe loc_10132EC  +
add eax 0FFFFFFFCh +
mov [ebp-40Ch] eax +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10132D2  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 74h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 74h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013362  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_1013348  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_101141E  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 173h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 173h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_10133E0  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10133C6  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push 1  +
push dword ptr [ebp-410h]  +
call sub_1010D5E  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 174h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 174h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013460  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_1013446  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push 0  +
push dword ptr [ebp-410h]  +
call sub_1010D5E  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 81h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 81h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_10134E0  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10134C6  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 83h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 83h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013583  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_1013569  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100E4F8  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 84h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 84h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013601  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10135E7  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100EC10  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 85h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 85h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_101367F  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_1013665  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100F3F1  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 89h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 89h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_10136FD  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10136E3  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100C58E  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 86h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 86h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013778  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_101375E  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_10108D5  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100F932  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 87h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 87h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013804  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_10137EA  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_100FBC5  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_101003C  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 88h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 88h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-40Ch] eax +
test eax eax +
jbe loc_1013890  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-40Ch]  +
jnz loc_1013876  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp-410h]  +
call sub_101050E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
call sub_1014657  +
retn 8  +
***
call __EH_prolog3  +
mov edi ecx +
push 68h  +
call sub_1017157  +
mov esi ds:__iob_func +
push eax  +
call esi  +
push 20h  +
pop ebx  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 37h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 68h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
cmp eax 4 +
jbe loc_101392A  +
add eax 0FFFFFFFCh +
mov [ebp-10h] eax +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013913  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 74h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 74h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_101399A  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013983  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_101141E  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Ah  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Ah  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013A09  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_10139F2  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push 1  +
push dword ptr [ebp+8]  +
call sub_1011A57  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Bh  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013A7A  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013A63  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push 0  +
push dword ptr [ebp+8]  +
call sub_1011A57  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 75h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 75h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013AEB  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013AD4  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_101219B  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 77h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 77h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013B5A  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013B43  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_10125D2  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 78h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 78h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013BC9  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013BB2  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_1012ABC  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 79h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 79h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013C38  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013C21  +
push offset aRsop_securit_0  +
lea ecx [ebp-10h] +
call sub_1004986  +
and dword ptr [ebp-4] 0 +
mov eax [eax] +
test eax eax +
jz loc_1013C53  +
mov eax [eax] +
jmp loc_1013C55  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100D1A9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013C78  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push offset aRsop_securit_1  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 1 +
mov eax [eax] +
test eax eax +
jz loc_1013C96  +
mov eax [eax] +
jmp loc_1013C98  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100D1A9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013CBB  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push offset aRsop_registryv  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 2 +
mov eax [eax] +
test eax eax +
jz loc_1013CD9  +
mov eax [eax] +
jmp loc_1013CDB  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100CCC3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013CFE  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Ch  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013D5F  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013D48  +
push offset aRsop_securit_2  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 3 +
mov eax [eax] +
test eax eax +
jz loc_1013D7D  +
mov eax [eax] +
jmp loc_1013D7F  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100D1A9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013DA2  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push offset aRsop_securitye  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 4 +
mov eax [eax] +
test eax eax +
jz loc_1013DC0  +
mov eax [eax] +
jmp loc_1013DC2  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100D1A9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013DE5  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Dh  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013E46  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013E2F  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_100D741  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Eh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Eh  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013EB5  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013E9E  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_100DCE1  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Fh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 7Fh  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013F24  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013F0D  +
push offset aRsop_registryk  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 5 +
mov eax [eax] +
test eax eax +
jz loc_1013F42  +
mov eax [eax] +
jmp loc_1013F44  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100E10D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1013F67  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 80h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 80h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1013FCE  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1013FB7  +
push offset aRsop_file  +
lea ecx [ebp-10h] +
call sub_1004986  +
mov dword ptr [ebp-4] 6 +
mov eax [eax] +
test eax eax +
jz loc_1013FEC  +
mov eax [eax] +
jmp loc_1013FEE  +
xor eax eax +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100E10D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_1014011  +
call sub_100506E  +
and dword ptr [ebp-10h] 0 +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 81h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 81h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1014078  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_1014061  +
push 3Ch  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 138Dh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push offset asc_10014C8  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 83h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 3Bh  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
push 83h  +
call sub_1017157  +
push eax  +
call sub_1015618  +
mov [ebp-10h] eax +
test eax eax +
jbe loc_1014115  +
push 36h  +
call sub_1017157  +
push eax  +
call esi  +
add eax ebx +
push eax  +
call sub_1016D99  +
dec dword ptr [ebp-10h]  +
jnz loc_10140FE  +
push dword ptr [edi+38h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+8]  +
call sub_100E4F8  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call loc_1014206  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+0Ch] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_1002E34 +
mov [esi+8] eax +
test eax eax +
jz loc_10141CD  +
cmp [ebp+arg_8] 0 +
jz loc_10141CD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_1002E34 +
test eax eax +
jz loc_10141F1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_10141FF  +
push esi  +
call ds:LocalFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
push dword ptr [ebp+8]  +
call sub_101419F  +
push offset dword_101CA48  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002E34 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov eax [eax+8] +
and dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
test eax eax +
jz loc_101425D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10141D9  +
test byte ptr [ebp+8] 1 +
jz loc_1014283  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10142AB  +
test eax eax +
jnz loc_10142B0  +
mov ecx [esi] +
test ecx ecx +
jz loc_10142A8  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101429C  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_101E098 +
push offset dword_101E088  +
push dword_101E094  +
mov dword_101E088 eax +
push offset dword_101E078  +
push offset dword_101E07C  +
push offset dword_101E074  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_101E084 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1014338  +
cmp eax esi +
jnz loc_101432B  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101433B  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1014312  +
xor esi esi +
inc esi  +
mov eax dword_101E4F0 +
cmp eax esi +
jnz loc_101434E  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1014389  +
mov eax dword_101E4F0 +
test eax eax +
jnz loc_1014383  +
mov dword_101E4F0 esi +
push offset dword_1001340  +
push offset dword_1001334  +
call sub_101428F  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1014389  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1014453  +
mov dword_101E090 esi +
mov eax dword_101E4F0 +
cmp eax esi +
jnz loc_10143AD  +
push offset dword_1001330  +
push offset dword_1001328  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101E4F0 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10143BA  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_101E4F8 ebx +
jz loc_10143DB  +
push offset dword_101E4F8  +
call sub_1014829  +
pop ecx  +
test eax eax +
jz loc_10143DB  +
push ebx  +
push 2  +
push ebx  +
call dword_101E4F8  +
push dword_101E078  +
push dword_101E07C  +
push dword_101E074  +
call sub_1004118  +
add esp 0Ch +
mov dword_101E08C eax +
cmp dword_101E080 ebx +
jnz loc_1014439  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_101E08C eax +
xor ebx ebx +
cmp dword_101E080 ebx +
jnz loc_1014439  +
push eax  +
call ds:_exit  +
cmp dword_101E090 ebx +
jnz loc_1014447  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101E08C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1014470  +
xor eax eax +
jmp loc_10144BD  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101446C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10144AA  +
cmp ecx 20Bh +
jnz loc_101446C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101446C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10144B8  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101446C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_101E080 eax +
call sub_10149C2  +
push eax  +
call ds:__set_app_type  +
or dword_101E4E8 0FFFFFFFFh +
or dword_101E4EC 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_101E0A0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101E09C +
mov [eax] ecx +
call sub_1014954  +
cmp dword_101E058 0 +
jnz loc_1014516  +
push offset sub_1014954  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101493C  +
xor eax eax +
retn   +
***
call sub_1014A01  +
jmp sub_10142F0  +
***
cmp ecx dword_101E03C +
jnz loc_1014548  +
retn 0  +
jmp loc_1014A97  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101E03C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101E03C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101E03C +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101E03C +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_101453D  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_101453D  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_10146E2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101476A  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101476A  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1014764  +
cmp eax 19930521h +
jz loc_1014764  +
cmp eax 19930522h +
jz loc_1014764  +
cmp eax 1994000h +
jnz loc_101476A  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_101472C+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10147B6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10147B2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101481D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1014815  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101481F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1014805  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10147A0  +
pop ecx  +
test eax eax +
jz loc_1014886  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10147E0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1014886  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101488F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101453D  +
push offset dword_101E03C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10149B5  +
cmp ecx 0FFFFFFFFh +
jz loc_10149B5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10149AE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10149AE  +
cmp edx 10000000h +
jnb loc_10149AE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10149AE  +
jmp loc_10149A9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10149F7  +
push eax  +
call sub_101495C  +
test eax eax +
jz loc_10149F7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10149EC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10149F7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101E03C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1014A33  +
test eax ebx +
jz loc_1014A33  +
not eax  +
mov dword_101E040 eax +
jmp loc_1014A8E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1014A7A  +
test dword_101E03C ebx +
jnz loc_1014A7F  +
mov esi 0BB40E64Fh +
mov dword_101E03C esi +
not esi  +
mov dword_101E040 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_101E1A8 eax +
mov dword_101E1A4 ecx +
mov dword_101E1A0 edx +
mov dword_101E19C ebx +
mov dword_101E198 esi +
mov dword_101E194 edi +
mov word_101E1C0 ss +
mov word_101E1B4 cs +
mov word_101E190 ds +
mov word_101E18C es +
mov word_101E188 fs +
mov word_101E184 gs +
pushf   +
pop dword_101E1B8  +
mov eax [ebp+0] +
mov dword_101E1AC eax +
mov eax [ebp+4] +
mov dword_101E1B0 eax +
lea eax [ebp+8] +
mov dword_101E1BC eax +
mov eax [ebp-320h] +
mov dword_101E0F8 10001h +
mov eax dword_101E1B0 +
mov dword_101E0B4 eax +
mov dword_101E0A8 0C0000409h +
mov dword_101E0AC 1 +
mov eax dword_101E03C +
mov [ebp-328h] eax +
mov eax dword_101E040 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp] eax +
retn   +
***
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax word ptr [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
mov word ptr [ebp+arg_8] ax +
xor eax eax +
push eax  +
push 0FFFFFFFFh  +
mov word ptr [ebp+arg_8+2] ax +
lea eax [ebp+arg_8] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
push 1  +
push [ebp+arg_0]  +
call ds:FindNLSString  +
cmp eax 0FFFFFFFFh +
jnz loc_1014BF0  +
xor eax eax +
jmp loc_1014BF3  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
push 0FFFFFFFFh  +
push [ebp+arg_8]  +
push 0FFFFFFFFh  +
push esi  +
push 1  +
push [ebp+arg_0]  +
call ds:FindNLSString  +
cmp eax 0FFFFFFFFh +
jnz loc_1014C24  +
xor eax eax +
jmp loc_1014C27  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax dword_101E3D0 +
test eax eax +
jz loc_1014C52  +
push eax  +
call sub_1018F1F  +
test eax eax +
jz loc_1014C52  +
push 0  +
push dword_101E3D0  +
call sub_10195F5  +
retn   +
mov eax offset dword_1002E48 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1014C86  +
call esi  +
test eax eax +
jnz loc_1014C82  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1014CB9  +
call sub_10160FA  +
test eax eax +
jz loc_1014C82  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_101E3D0  +
call sub_101974F  +
test eax eax +
jnz loc_1014CAF  +
call esi  +
test eax eax +
jnz loc_1014C82  +
push 8  +
jmp loc_1014C7C  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
mov [ebp+hMem] edi +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1014D14  +
cmp [ebp+hMem] edi +
jz loc_1014D2C  +
push [ebp+hMem]  +
call sub_1014C5D  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1014D38  +
cmp [ebp+hMem] edi +
jz loc_1014D2C  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1014D2C  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1014D36  +
push 8  +
call ebx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1014CC4  +
test eax eax +
jz loc_1014D64  +
call sub_1014C31  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1016D99  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_101E060 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_101E064 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_101E3D4 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101453D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1014E42  +
call ds:GetLastError  +
test eax eax +
jnz loc_1014E3E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1014EBF  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1014EB3  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1014EB3  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1014EBB  +
sub edi 0 +
jz loc_1014E8F  +
dec edi  +
jz loc_1014E8B  +
dec edi  +
jnz loc_1014EBB  +
push 0FFFFFFF4h  +
jmp loc_1014E91  +
push 0FFFFFFF5h  +
jmp loc_1014E91  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1014EBB  +
cmp eax 0FFFFFFFFh +
jz loc_1014EBB  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1014EBD  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetUserDefaultLCID  +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1014EDE  +
and dword ptr [edx] 0 +
mov ecx eax +
and ecx 3FFh +
cmp cx 1 +
jz loc_1014F0A  +
cmp cx 0Dh +
jz loc_1014F0A  +
cmp cx 1Eh +
jz loc_1014F0A  +
cmp cx 39h +
jz loc_1014F0A  +
cmp cx 49h +
jz loc_1014F0A  +
cmp cx 29h +
jnz loc_1014F19  +
test edx edx +
jz loc_1014F14  +
mov dword ptr [edx] 1 +
mov eax 409h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1014F31  +
xor eax eax +
jmp loc_1014F3A  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1014F52  +
xor eax eax +
jmp loc_1014F5B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1014FA2  +
cmp [ebp+lpString2] 0 +
jz loc_1014FA2  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1014F88  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1014FB6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1014FB4  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1014FFE  +
cmp [ebp+lpString2] 0 +
jz loc_1014FFE  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1014FE4  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1015012  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015010  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_10150DF  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_10150DF  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_101504A  +
cmp [eax] edi +
jnz loc_10150DF  +
mov eax [eax] +
cmp eax edi +
jz loc_1015058  +
cmp eax 1 +
jbe loc_10150C6  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_101506F  +
cmp esi edi +
jz loc_101506F  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1015085  +
push edi  +
push [ebp+lpString]  +
call sub_1014F22  +
cmp eax esi +
jle loc_1015085  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_10150D8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10150AD  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_10150F1  +
cmp esi edi +
jz loc_10150F1  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_10150F1  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_10150F3  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_10150D3  +
call ds:GetLastError  +
test eax eax +
jnz loc_10150F1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_10151B8  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_10151B8  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_101512E  +
cmp [eax] edi +
jnz loc_10151B8  +
mov eax [eax] +
cmp eax edi +
jz loc_101513C  +
cmp eax 1 +
jbe loc_10151A8  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1015152  +
cmp esi edi +
jz loc_1015152  +
lea eax [esi+1] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1015168  +
push edi  +
push [ebp+lpString]  +
call sub_1014F43  +
cmp eax esi +
jle loc_1015168  +
mov eax esi +
push edi  +
push edi  +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:WideCharToMultiByte  +
test eax eax +
jnz loc_10151B3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015192  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_10151CA  +
cmp esi edi +
jz loc_10151CA  +
inc esi  +
push esi  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_10151CA  +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_10151CC  +
call ds:GetLastError  +
test eax eax +
jnz loc_10151CA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10151F1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015213  +
push 57h  +
jmp loc_101520D  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1015213  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1015215  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1015244  +
call ds:GetLastError  +
test eax eax +
jnz loc_10152B8  +
push 57h  +
call ds:SetLastError  +
jmp loc_10152B8  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10152B8  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10152BA  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_101529F  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_101529F  +
push 570h  +
call ds:SetLastError  +
call sub_1014CC4  +
jmp loc_10152B1  +
call ds:GetLastError  +
test eax eax +
jnz loc_10152B1  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10152E9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10152E4  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_101530B  +
push [ebp+lpMem]  +
call sub_10151D8  +
test eax eax +
jz loc_10152E4  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10152E4  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1015344  +
cmp [ebp+arg_4] eax +
jz loc_1015340  +
mov dl [ebx] +
test dl dl +
jz loc_1015340  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1015328  +
test esi esi +
jnz loc_101534B  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1015357  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1015398  +
cmp [ebp+arg_4] eax +
jz loc_1015394  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1015394  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1015377  +
test esi esi +
jnz loc_10153A0  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10153AE  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10153E3  +
cmp eax esi +
ja loc_10153E3  +
jz loc_10153E8  +
jmp loc_10153F0  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10153F9  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_101E3C8 0 +
push esi  +
push edi  +
mov esi offset aBuffer +
lea edi [ebp+String2] +
movs   +
movs   +
movs   +
jz loc_1015482  +
push 3  +
push dword_101E3D0  +
call sub_1019588  +
cmp eax [ebp+arg_0] +
jbe loc_1015482  +
push [ebp+arg_0]  +
push 3  +
push dword_101E3D0  +
call sub_101992D  +
test eax eax +
jz loc_1015482  +
push [ebp+arg_0]  +
push 3  +
push dword_101E3D0  +
call sub_101965F  +
mov esi eax +
test esi esi +
jz loc_1015482  +
push 0  +
push 1  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_1014FC0  +
test eax eax +
jnz loc_1015482  +
mov eax [esi+0Ch] +
jmp loc_1015484  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101453D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10154B4  +
call ds:GetLastError  +
test eax eax +
jnz loc_10154FA  +
push 57h  +
jmp loc_10154F4  +
push 0  +
push esi  +
call sub_1014F43  +
test eax eax +
jz loc_10154EF  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10154EF  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10154DD  +
push 7Fh  +
call sub_1014BBB  +
jmp loc_10154E5  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10154EF  +
sub eax esi +
sar eax 1 +
jmp loc_10154FD  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_101556C  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_101556C  +
push esi  +
push edi  +
call sub_1014F43  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_1015565  +
push esi  +
push ebx  +
call sub_1014F43  +
test eax eax +
jz loc_1015565  +
push esi  +
push ebx  +
call sub_1014F43  +
cmp [ebp+arg_C] eax +
jnb loc_1015565  +
cmp [ebp+arg_0] esi +
jbe loc_1015565  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1015499  +
cmp eax 0FFFFFFFFh +
jnz loc_1015581  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1015549  +
push 490h  +
jmp loc_1015578  +
call ds:GetLastError  +
test eax eax +
jnz loc_101557E  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_10155F7  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_10155F7  +
push 0  +
push edi  +
call sub_1014F43  +
push 0  +
push ebx  +
mov esi eax +
call sub_1014F43  +
test eax eax +
jz loc_10155EA  +
test esi esi +
jz loc_10155EA  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_10155EA  +
sub esi ecx +
cmp esi eax +
jb loc_10155EA  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_10155DE  +
push 7Fh  +
call sub_1014BFD  +
jmp loc_10155E6  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10155F1  +
push 490h  +
jmp loc_1015603  +
sub eax edi +
sar eax 1 +
jmp loc_101560C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015609  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_1015647  +
push esi  +
push [ebp+lpString]  +
call sub_1014F43  +
test eax eax +
jz loc_1015647  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_1015649  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1015669  +
cmp edx 7FFFFFFFh +
jbe loc_101566E  +
mov eax 80070057h +
test eax eax +
jl loc_1015684  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1015314  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10156A3  +
cmp edx 7FFFFFFFh +
jbe loc_10156A8  +
mov eax 80070057h +
test eax eax +
jl loc_10156BE  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1015363  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10156FA  +
cmp [ebp+arg_4] 0 +
jz loc_10156FA  +
cmp [ebp+arg_8] 0 +
jle loc_10156FA  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1015653  +
test eax eax +
jge loc_1015700  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10156FC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_101573D  +
cmp [ebp+arg_4] 0 +
jz loc_101573D  +
cmp [ebp+arg_8] 0 +
jle loc_101573D  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_101568D  +
test eax eax +
jge loc_1015743  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_101573F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1015766  +
cmp edx ebx +
jbe loc_101576B  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10157A2  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_101578F  +
cmp [eax] cx +
jz loc_101578B  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1015781  +
cmp esi ecx +
jnz loc_1015798  +
mov [ebp+arg_4] 80070057h +
jmp loc_101579C  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_10157A4  +
xor ecx ecx +
test eax eax +
jl loc_10157B8  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1015363  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10157E6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10157E2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1015834  +
cmp dword ptr [esi] 0 +
jnz loc_10157F0  +
xor eax eax +
inc eax  +
jmp loc_1015834  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1015814  +
push dword ptr [esi]  +
call sub_10152C7  +
cmp eax 0FFFFFFFFh +
jnz loc_1015818  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1015833  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_1015903  +
mov eax [esi] +
cmp eax edi +
jz loc_1015903  +
cmp [ebp+dwBytes] edi +
jnz loc_1015871  +
push esi  +
call sub_10157C3  +
jmp loc_1015917  +
push eax  +
call sub_10151D8  +
test eax eax +
jnz loc_1015882  +
mov [esi] edi +
jmp loc_1015915  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_1015915  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_10158C0  +
call ds:GetLastError  +
test eax eax +
jnz loc_10158B7  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1015915  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_1015917  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_10158A5  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_10158A5  +
push 570h  +
call ds:SetLastError  +
call sub_1014CC4  +
jmp loc_10158B7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015915  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1015939  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101593E  +
mov eax 80070057h +
test eax eax +
jl loc_1015957  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10153BA  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1015975  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101597A  +
mov eax 80070057h +
test eax eax +
jl loc_1015994  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10153BA  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_10159BE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10159BA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1015A25  +
cmp [ebp+arg_0] esi +
jnz loc_10159D0  +
push [ebp+arg_4]  +
call sub_1014C5D  +
xor eax eax +
inc eax  +
jmp loc_1015A25  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_10161CB  +
mov edi eax +
test edi edi +
jz loc_1015A10  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_1015924  +
cmp eax 8007007Ah +
jz loc_10159D1  +
test eax eax +
jge loc_1015A1E  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1015A24  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015A0C  +
push 8  +
jmp loc_1015A06  +
push edi  +
call sub_1014C5D  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_101E3D0  +
call sub_1018F1F  +
cmp eax 1 +
jnz loc_1015AB7  +
push edi  +
push 3  +
push dword_101E3D0  +
call sub_1019588  +
mov edi eax +
test edi edi +
jz loc_1015AAC  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_101E3D0  +
call sub_101992D  +
cmp eax 10000h +
jnz loc_1015AA5  +
push esi  +
push 3  +
push dword_101E3D0  +
call sub_101965F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1015AA5  +
add eax 0Ch +
push eax  +
call sub_10157C3  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
push esi  +
push 3  +
push dword_101E3D0  +
call sub_1019551  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1015A5B  +
pop esi  +
push offset dword_101E3D0  +
call sub_1018FB5  +
pop edi  +
cmp dword_101E3CC 1 +
jnz loc_1015AC6  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1015499  +
cmp eax 0FFFFFFFFh +
jnz loc_1015AF0  +
xor eax eax +
jmp loc_1015AF3  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push 1  +
push [ebp+lpString]  +
push esi  +
call sub_1015507  +
cmp eax 0FFFFFFFFh +
jnz loc_1015B1D  +
xor eax eax +
jmp loc_1015B20  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_101558D  +
cmp eax 0FFFFFFFFh +
jnz loc_1015B4A  +
xor eax eax +
jmp loc_1015B4D  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1002E54 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_10] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1015C58  +
push eax  +
push ebx  +
call sub_1014F43  +
test eax eax +
jz loc_1015C58  +
cmp [ebp+var_10] 0 +
jz loc_1015BB3  +
push 0  +
push [ebp+var_10]  +
call sub_1014F43  +
test eax eax +
jnz loc_1015BB9  +
lea eax [ebp+var_C] +
mov [ebp+var_10] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1015BC8  +
cmp edi 1 +
jnz loc_1015BEC  +
cmp word ptr [ebx] 0 +
jz loc_1015BE9  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+var_10]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1015BE9  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1015BCE  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1015BF6  +
cmp edi 2 +
jnz loc_1015C3A  +
cmp edi 2 +
jnz loc_1015BFD  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1015C3A  +
push eax  +
push [ebp+var_10]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1015C20  +
cmp [ebp+var_14] 0 +
jnz loc_1015C24  +
mov [ebp+var_14] esi +
jmp loc_1015C24  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1015C05  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1015C3A  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1015C54  +
push 0  +
push [ebp+var_18]  +
call sub_1014F43  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_101570A  +
mov eax ebx +
jmp loc_1015C5D  +
mov eax offset dword_1002E48 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1015CA6  +
cmp [ebp+arg_4] 0 +
jz loc_1015CA6  +
cmp [ebp+arg_8] 0 +
jle loc_1015CA6  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_101574D  +
test eax eax +
jge loc_1015CAC  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1015CA8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_1015D15  +
call ds:GetLastError  +
test eax eax +
jnz loc_1015D0E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1015ED0  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_1015ECD  +
cmp edi 0Fh +
jz loc_1015D45  +
cmp edi 3 +
jz loc_1015D45  +
cmp edi 0FFFFFFFFh +
jz loc_1015D45  +
mov [ebp+var_40] 1 +
jmp loc_1015D61  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1015ECD  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_1015DD3  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1015ECD  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_1015EE0  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_101501B  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_1015DEB  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1015EC1  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1015EE0  +
cmp ax 8 +
jnz loc_1015E79  +
cmp [ebp+var_28] 0 +
jz loc_1015D7F  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1015960  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1015960  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1015960  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_1015D7F  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_1015E91  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_1002E64  +
jmp loc_1015EB5  +
cmp ax 0Ah +
jz loc_1015D7F  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset Buffer  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_1015D7F  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101453D  +
leave   +
retn 8  +
mov eax [ebp+var_28] +
cmp eax [ebp+arg_4] +
jnb loc_1015ECD  +
push [ebp+dwMode]  +
mov edx [ebp+var_44] +
push [ebp+hConsoleHandle]  +
xor ecx ecx +
mov [edx+eax*2] cx +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1002E5C  +
lea eax [ebp+var_18] +
push eax  +
call sub_101570A  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1015ECF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 5  +
pop ebx  +
mov ecx ebx +
mov esi offset aSetthreaduilan +
lea edi [ebp+ProcName] +
movs   +
mov esi 11Ch +
push esi  +
xor edi edi +
lea eax [ebp+var_134] +
push edi  +
push eax  +
call memset  +
mov [ebp+var_130] ebx +
add esp 0Ch +
xor ebx ebx +
inc ebx  +
push ebx  +
push 2  +
push edi  +
mov [ebp+var_134] esi +
mov esi ds:VerSetConditionMask +
xor eax eax +
push edi  +
mov [ebp+var_12C] edi +
mov [ebp+var_20] ax +
call esi  +
push ebx  +
push ebx  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_134] +
push eax  +
call ds:VerifyVersionInfoW  +
cmp eax ebx +
jnz loc_1015FC6  +
push 47Eh  +
call ds:SetLastError  +
mov eax ebx +
jmp loc_101604A  +
mov esi 105h +
push ebx  +
lea eax [esi+0Ah] +
push eax  +
push edi  +
push edi  +
call sub_10161CB  +
mov dword ptr [ebp+var_138] eax +
cmp eax edi +
jz loc_101605B  +
push esi  +
push eax  +
call ds:GetSystemDirectoryW  +
cmp eax edi +
jz loc_1016048  +
cmp eax esi +
jbe loc_1015FFE  +
cmp esi 105h +
jz loc_101606F  +
lea esi [eax+1] +
xor eax eax +
cmp eax edi +
jz loc_1015FCB  +
push offset aKernel32_dll  +
push dword ptr [ebp+var_138]  +
push offset aSS  +
push 2  +
call sub_101599B  +
add esp 10h +
test eax eax +
jz loc_101605B  +
call sub_1014C31  +
push eax  +
call ds:LoadLibraryW  +
mov esi eax +
cmp esi edi +
jz loc_1016048  +
lea eax [ebp+ProcName] +
push eax  +
push esi  +
call ds:GetProcAddress  +
cmp eax edi +
jnz loc_1016080  +
push esi  +
call ds:FreeLibrary  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016048  +
push 8  +
call ds:SetLastError  +
jmp loc_1016048  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016048  +
push 42Bh  +
jmp loc_1016067  +
push [ebp+arg_0]  +
call eax  +
push esi  +
call ds:FreeLibrary  +
jmp loc_1015FBF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_10160D8  +
cmp [ebp+arg_4] edi +
jz loc_10160D8  +
push [ebp+arg_C]  +
push offset dword_1002E48  +
push esi  +
call sub_101570A  +
cmp [ebp+arg_8] edi +
jbe loc_10160D4  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_1015C73  +
test eax eax +
jz loc_10160D4  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_10160BE  +
mov eax esi +
jmp loc_10160EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10160EA  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1002E48 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_101E3C8 edi +
jnz loc_1016133  +
push dword_101E3D0  +
call sub_1018F1F  +
test eax eax +
jnz loc_101612F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10161C2  +
push 42Bh  +
jmp loc_10161BC  +
mov eax edi +
pop edi  +
retn   +
cmp dword_101E3D0 0 +
jnz loc_1016117  +
call sub_1018F40  +
push eax  +
mov dword_101E3D0 eax +
call sub_1018F1F  +
test eax eax +
jz loc_10161B0  +
push 0  +
push offset dword_1002E48  +
push dword_101E3D0  +
call sub_1019262  +
test eax eax +
jnz loc_10161B0  +
push 3  +
push dword_101E3D0  +
call sub_101942D  +
cmp eax edi +
jnz loc_10161B0  +
push 3  +
push dword_101E3D0  +
call sub_101942D  +
cmp eax 2 +
jnz loc_10161B0  +
push 3  +
push dword_101E3D0  +
call sub_101942D  +
cmp eax 3 +
jnz loc_10161B0  +
push 0  +
mov dword_101E3C8 edi +
call sub_1015F2A  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_10161C2  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov esi offset aBuffer +
lea edi [ebp+String2] +
movs   +
movs   +
mov [ebp+lpString] eax +
movs   +
test eax eax +
jnz loc_1016201  +
cmp [ebp+arg_8] eax +
jnz loc_1016201  +
xor eax eax +
jmp loc_1016357  +
call sub_10160FA  +
test eax eax +
jz loc_10161FA  +
push ebx  +
push 3  +
pop ebx  +
push ebx  +
push dword_101E3D0  +
call sub_1019588  +
mov edi [ebp+arg_0] +
mov esi eax +
cmp esi edi +
ja loc_101624C  +
push ebx  +
push dword_101E3D0  +
call sub_10195BC  +
test eax eax +
jz loc_1016326  +
mov ecx edi +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_10194A8  +
cmp eax 0FFFFFFFFh +
jz loc_1016326  +
push edi  +
push ebx  +
push dword_101E3D0  +
call sub_101992D  +
test eax eax +
jz loc_1016277  +
push edi  +
push ebx  +
push dword_101E3D0  +
call sub_101965F  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jnz loc_10162BE  +
jmp loc_1016326  +
push 10h  +
call sub_101521E  +
mov esi eax +
mov [ebp+var_14] esi +
test esi esi +
jz loc_1016326  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_10156C7  +
push esi  +
push edi  +
push ebx  +
push dword_101E3D0  +
call sub_101985A  +
test eax eax +
jnz loc_10162BC  +
lea eax [ebp+var_14] +
push eax  +
call sub_10157C3  +
jmp loc_1016326  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_1014FC0  +
test eax eax +
jnz loc_1016326  +
cmp [ebp+lpString] ebx +
jnz loc_10162D9  +
mov edi [ebp+arg_8] +
jmp loc_10162E5  +
push ebx  +
push [ebp+lpString]  +
call sub_1014F43  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_10162FB  +
cmp edi 100h +
jbe loc_1016321  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1016321  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1016311  +
call sub_101521E  +
mov [esi+0Ch] eax +
cmp eax ebx +
jnz loc_101631E  +
jmp loc_1016326  +
lea eax [esi+0Ch] +
push eax  +
call sub_101583E  +
test eax eax +
jz loc_1016326  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jnz loc_101632A  +
xor eax eax +
jmp loc_1016356  +
cmp [ebp+lpString] ebx +
jz loc_101633D  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_101570A  +
jmp loc_1016353  +
cmp [ebp+arg_C] 1 +
jnz loc_1016353  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101453D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_10161CB  +
mov ebx eax +
test ebx ebx +
jnz loc_1016394  +
push 8  +
pop eax  +
jmp loc_10163D6  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_10161CB  +
mov esi eax +
test esi esi +
jz loc_101638F  +
push esi  +
call sub_10152C7  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_10152C7  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_10163D6  +
push ebx  +
call sub_1014C5D  +
test eax eax +
jz loc_101638F  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_101640C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016402  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1002E48 +
jmp loc_1016519  +
call sub_10160FA  +
test eax eax +
jz loc_1016402  +
push esi  +
push 1  +
push dword_101E3D0  +
call sub_1019588  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1016469  +
push 1  +
push dword_101E3D0  +
call sub_10195BC  +
cmp eax ebx +
jz loc_101644D  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_10194A8  +
cmp eax 0FFFFFFFFh +
jnz loc_1016469  +
call ds:GetLastError  +
test eax eax +
jnz loc_101645F  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1002E48 +
jmp loc_1016518  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_10161CB  +
mov edi eax +
cmp edi ebx +
jz loc_10164DD  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_10164C0  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_10164EF  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_10164EF  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_101646F  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_101E3D0  +
call sub_1019894  +
test eax eax +
jnz loc_10164F6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10164EF  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1002E48 +
jmp loc_1016517  +
cmp [ebp+lpString] ebx +
jz loc_1016507  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_101E3D0  +
call sub_1019696  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpString] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_14] eax +
mov [ebp+var_10] ebx +
cmp eax ebx +
jz loc_10166E2  +
push ebx  +
push eax  +
call sub_1014F43  +
test eax eax +
jz loc_10166E2  +
call sub_10160FA  +
test eax eax +
jz loc_10166F4  +
mov esi offset aBuffer +
lea edi [ebp+String2] +
movs   +
movs   +
movs   +
call sub_10160FA  +
test eax eax +
jz loc_1016698  +
push 3  +
pop edi  +
push edi  +
push dword_101E3D0  +
call sub_1019588  +
mov esi eax +
cmp esi ebx +
ja loc_10165BE  +
push edi  +
push dword_101E3D0  +
call sub_10195BC  +
cmp eax ebx +
jz loc_1016698  +
xor ecx ecx +
inc ecx  +
sub ecx esi +
push ecx  +
push eax  +
call sub_10194A8  +
cmp eax 0FFFFFFFFh +
jz loc_1016698  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101992D  +
test eax eax +
jz loc_1016631  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101965F  +
mov esi eax +
cmp esi ebx +
jz loc_1016698  +
push ebx  +
push 1  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_1014FC0  +
test eax eax +
jnz loc_1016698  +
push ebx  +
push [ebp+var_14]  +
call sub_1014F43  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_101661D  +
cmp edi 100h +
jbe loc_1016680  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1016680  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1016670  +
call sub_101521E  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_101667B  +
push 10h  +
call sub_101521E  +
mov esi eax +
mov [ebp+var_18] esi +
cmp esi ebx +
jz loc_1016698  +
push 7  +
lea eax [ebp+String2] +
push eax  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10156C7  +
push esi  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101985A  +
test eax eax +
jnz loc_10165E6  +
lea eax [ebp+var_18] +
push eax  +
call sub_10157C3  +
jmp loc_1016698  +
lea eax [esi+0Ch] +
push eax  +
call sub_101583E  +
test eax eax +
jz loc_1016698  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1016698  +
push edi  +
push [ebp+var_14]  +
push dword ptr [esi+0Ch]  +
call sub_101570A  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10166A6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10166F4  +
push 8  +
jmp loc_10166EE  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_10] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp+String2] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10166E2  +
cmp [ebp+var_10] ebx +
jz loc_10166DD  +
push ebx  +
push [ebp+var_10]  +
call sub_1014F43  +
test eax eax +
jnz loc_10166E2  +
fld  qword ptr [ebp+String2] +
jmp loc_10166F6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10166F4  +
push 57h  +
call ds:SetLastError  +
fldz   +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1016523  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
add ecx 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+lpString] eax +
mov [ebp+var_10] ebx +
cmp ecx 22h +
ja loc_1016912  +
cmp eax ebx +
jz loc_1016912  +
call sub_10160FA  +
test eax eax +
jz loc_1016924  +
mov esi offset aBuffer +
lea edi [ebp+String2] +
movs   +
movs   +
movs   +
call sub_10160FA  +
test eax eax +
jz loc_10168A4  +
push 3  +
pop edi  +
push edi  +
push dword_101E3D0  +
call sub_1019588  +
mov esi eax +
cmp esi ebx +
ja loc_10167CA  +
push edi  +
push dword_101E3D0  +
call sub_10195BC  +
cmp eax ebx +
jz loc_10168A4  +
xor ecx ecx +
inc ecx  +
sub ecx esi +
push ecx  +
push eax  +
call sub_10194A8  +
cmp eax 0FFFFFFFFh +
jz loc_10168A4  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101992D  +
test eax eax +
jz loc_101683D  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101965F  +
mov esi eax +
cmp esi ebx +
jz loc_10168A4  +
push ebx  +
push 1  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_1014FC0  +
test eax eax +
jnz loc_10168A4  +
push ebx  +
push [ebp+lpString]  +
call sub_1014F43  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1016829  +
cmp edi 100h +
jbe loc_101688C  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_101688C  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_101687C  +
call sub_101521E  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1016887  +
push 10h  +
call sub_101521E  +
mov esi eax +
mov [ebp+var_18] esi +
cmp esi ebx +
jz loc_10168A4  +
push 7  +
lea eax [ebp+String2] +
push eax  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10156C7  +
push esi  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101985A  +
test eax eax +
jnz loc_10167F2  +
lea eax [ebp+var_18] +
push eax  +
call sub_10157C3  +
jmp loc_10168A4  +
lea eax [esi+0Ch] +
push eax  +
call sub_101583E  +
test eax eax +
jz loc_10168A4  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10168A4  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_101570A  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10168B2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016924  +
push 8  +
jmp loc_101691E  +
push 3  +
push ebx  +
push esi  +
call sub_1015B57  +
push ebx  +
push esi  +
call sub_1014F43  +
test eax eax +
jz loc_1016912  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_10] +
push eax  +
push esi  +
jnz loc_10168EA  +
call ds:wcstol  +
jmp loc_10168F0  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1016912  +
cmp [ebp+var_10] ebx +
jz loc_101690E  +
push ebx  +
push [ebp+var_10]  +
call sub_1014F43  +
test eax eax +
jnz loc_1016912  +
mov eax esi +
jmp loc_1016926  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016924  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
add ecx 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+lpString] eax +
mov [ebp+var_10] ebx +
cmp ecx 22h +
ja loc_1016B20  +
cmp eax ebx +
jz loc_1016B20  +
mov esi offset aBuffer +
lea edi [ebp+String2] +
movs   +
movs   +
movs   +
call sub_10160FA  +
test eax eax +
jz loc_1016AA4  +
push 3  +
pop edi  +
push edi  +
push dword_101E3D0  +
call sub_1019588  +
mov esi eax +
cmp esi ebx +
ja loc_10169CA  +
push edi  +
push dword_101E3D0  +
call sub_10195BC  +
cmp eax ebx +
jz loc_1016AA4  +
xor ecx ecx +
inc ecx  +
sub ecx esi +
push ecx  +
push eax  +
call sub_10194A8  +
cmp eax 0FFFFFFFFh +
jz loc_1016AA4  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101992D  +
test eax eax +
jz loc_1016A3D  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101965F  +
mov esi eax +
cmp esi ebx +
jz loc_1016AA4  +
push ebx  +
push 1  +
lea eax [ebp+String2] +
push eax  +
push esi  +
call sub_1014FC0  +
test eax eax +
jnz loc_1016AA4  +
push ebx  +
push [ebp+lpString]  +
call sub_1014F43  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1016A29  +
cmp edi 100h +
jbe loc_1016A8C  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1016A8C  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1016A7C  +
call sub_101521E  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1016A87  +
push 10h  +
call sub_101521E  +
mov esi eax +
mov [ebp+var_18] esi +
cmp esi ebx +
jz loc_1016AA4  +
push 7  +
lea eax [ebp+String2] +
push eax  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10156C7  +
push esi  +
push ebx  +
push edi  +
push dword_101E3D0  +
call sub_101985A  +
test eax eax +
jnz loc_10169F2  +
lea eax [ebp+var_18] +
push eax  +
call sub_10157C3  +
jmp loc_1016AA4  +
lea eax [esi+0Ch] +
push eax  +
call sub_101583E  +
test eax eax +
jz loc_1016AA4  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1016AA4  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_101570A  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1016AB6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016B32  +
push 8  +
jmp loc_1016B2C  +
push 3  +
push ebx  +
push esi  +
call sub_1015B57  +
push ebx  +
push esi  +
call sub_1014F43  +
test eax eax +
jz loc_1016B32  +
cmp [ebp+arg_8] ebx +
jnz loc_1016AD5  +
cmp word ptr [esi] 2Dh +
jz loc_1016B32  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_10] +
push eax  +
push esi  +
jnz loc_1016AF9  +
call ds:wcstol  +
jmp loc_1016AFF  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1016B32  +
cmp [ebp+var_10] ebx +
jz loc_1016B1B  +
push ebx  +
push [ebp+var_10]  +
call sub_1014F43  +
test eax eax +
jnz loc_1016B32  +
xor eax eax +
inc eax  +
jmp loc_1016B34  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016B32  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_1016C08  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_1016C08  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1014F43  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_10161CB  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1016B99  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016C1A  +
push 8  +
jmp loc_1016C14  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1014F43  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_10161CB  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1016B87  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1015960  +
add esp 10h +
test eax eax +
jge loc_1016BD8  +
movzx eax ax +
push eax  +
jmp loc_1016C14  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1015960  +
add esp 10h +
test eax eax +
jl loc_1016BD2  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_101558D  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_1016C1C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016C1A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
xor ebx ebx +
push edi  +
mov dword ptr [ebp+String] 25h +
cmp esi ebx +
jz loc_1016D76  +
cmp [ebp+arg_4] ebx +
jz loc_1016D76  +
push ebx  +
push esi  +
call sub_1014F43  +
mov edi eax +
mov [ebp+var_C] edi +
cmp edi ebx +
jnz loc_1016C67  +
mov eax esi +
jmp loc_1016D8D  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push esi  +
call sub_1015AFD  +
test eax eax +
jz loc_1016C60  +
call sub_10160FA  +
test eax eax +
jz loc_1016D88  +
push 2  +
push dword_101E3D0  +
call sub_10195BC  +
mov ebx eax +
mov [ebp+var_10] ebx +
test ebx ebx +
jnz loc_1016CB1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016D88  +
push 42Bh  +
jmp loc_1016D82  +
dec [ebp+arg_4]  +
push ebx  +
call sub_1018FE0  +
cmp eax [ebp+arg_4] +
ja loc_1016CE5  +
mov esi [ebp+arg_4] +
sub esi eax +
inc esi  +
push esi  +
push ebx  +
call sub_10194A8  +
cmp eax esi +
jz loc_1016CE5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016D88  +
push 8  +
jmp loc_1016D82  +
push 1  +
lea ebx [edi+edi+2] +
push ebx  +
push 0  +
push 0  +
call sub_10161CB  +
mov edi eax +
xor esi esi +
cmp edi esi +
jz loc_1016CD0  +
mov [ebp+var_4] esi +
cmp [ebp+var_C] esi +
jbe loc_1016D47  +
dec ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+var_14] eax +
movzx eax word ptr [eax] +
push 0  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1015AD0  +
test eax eax +
jz loc_1016D2D  +
push 25h  +
pop eax  +
mov [edi+esi*2] ax +
inc esi  +
mov eax [ebp+var_14] +
mov ax [eax] +
mov [edi+esi*2] ax +
inc esi  +
cmp esi ebx +
jz loc_1016D47  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_C] +
jb loc_1016D06  +
xor eax eax +
push eax  +
push edi  +
push [ebp+arg_4]  +
mov [edi+esi*2] ax +
push [ebp+var_10]  +
call sub_101974F  +
test eax eax +
jz loc_1016CD0  +
push [ebp+arg_4]  +
push [ebp+var_10]  +
call sub_10195F5  +
test eax eax +
jnz loc_1016D8D  +
jmp loc_1016C99  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016D88  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1002E48 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1016FE4  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1016FE4  +
push [ebp+hConsoleOutput]  +
call sub_1014E1B  +
cmp eax 1 +
jnz loc_1016ECB  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1016DE2  +
push 0FFFFFFF5h  +
jmp loc_1016DF2  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1016EB3  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1014F43  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_C] eax +
call ebx  +
test eax eax +
jz loc_1016E26  +
mov eax [ebp+var_C] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1016E8B  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1016EAF  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1014F43  +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
cmp eax edi +
jbe loc_1016E8B  +
mov [ebp+lpWideCharStr] esi +
mov esi 400h +
mov eax [ebp+var_C] +
sub eax [ebp+var_8] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1016E5D  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+lpWideCharStr]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1016E93  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1016E93  +
add [ebp+var_8] esi +
mov eax [ebp+var_8] +
add [ebp+lpWideCharStr] 800h +
cmp eax [ebp+var_C] +
jb loc_1016E4D  +
xor eax eax +
inc eax  +
jmp loc_1016FF8  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1014D42  +
call sub_1015A2D  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1016E99  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016FF6  +
push 42Bh  +
jmp loc_1016FF0  +
push 1  +
push ebx  +
call sub_1016C28  +
push edi  +
push eax  +
mov [ebp+var_14] eax +
call sub_1014F43  +
push 100h  +
push edi  +
mov esi offset unk_101E3E0 +
push esi  +
mov [ebp+var_C] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_8] edi +
cmp [ebp+var_C] edi +
jbe loc_1016E8B  +
mov ebx 0FFh +
mov eax [ebp+var_C] +
mov ecx [ebp+var_8] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+lpString] ebx +
cmp eax ebx +
ja loc_1016F16  +
mov [ebp+lpString] eax +
mov eax [ebp+var_14] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+lpString]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1016F73  +
cmp eax ebx +
jbe loc_1016F81  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1016F53  +
shr eax 1 +
sub [ebp+lpString] eax +
jmp loc_1016F56  +
dec [ebp+lpString]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+lpString] edi +
jnz loc_1016F1F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016F73  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1016E9C  +
cmp eax [ebp+lpString] +
jnb loc_1016F89  +
mov [ebp+lpString] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1016F73  +
mov eax [ebp+lpString] +
add [ebp+var_8] eax +
push esi  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_8] +
add esp 0Ch +
cmp [ebp+var_C] eax +
ja loc_1016F01  +
jmp loc_1016E8B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1016FF6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_101710B  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_101710B  +
cmp [ebp+arg_4] ebx +
jnz loc_1017036  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1016D99  +
jmp loc_101711F  +
cmp [ebp+arg_8] ebx +
jnz loc_10170CB  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_10161CB  +
mov edi eax +
test edi edi +
jz loc_10170B8  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10170A8  +
call ds:GetLastError  +
test eax eax +
jz loc_10170C6  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_101711D  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1017043  +
push edi  +
jmp loc_1017029  +
call ds:GetLastError  +
test eax eax +
jnz loc_101711D  +
push 8  +
jmp loc_1017117  +
xor eax eax +
inc eax  +
jmp loc_101711F  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_10161CB  +
mov edi eax +
test edi edi +
jz loc_10170B8  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_1015924  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_10170CB  +
test eax eax +
jge loc_10170B2  +
movzx eax ax +
push eax  +
jmp loc_1017117  +
call ds:GetLastError  +
test eax eax +
jnz loc_101711D  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_101E3DC  +
mov eax dword_101E3DC +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_10163DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1017128  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10171EB  +
test [ebp+arg_4] 0F0000h +
jz loc_10171EB  +
test [ebp+arg_4] 10000h +
jz loc_1017193  +
call sub_1014CC4  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10171A5  +
push 1389h  +
jmp loc_10171C4  +
test al 4 +
jz loc_10171B0  +
push 138Ah  +
jmp loc_10171C4  +
test al 2 +
jz loc_10171BB  +
push 138Ch  +
jmp loc_10171C4  +
test al 8 +
jz loc_10171DA  +
push 138Bh  +
call sub_1017157  +
push eax  +
push offset aS_0  +
push ebx  +
push ebx  +
push esi  +
call sub_1017004  +
add esp 14h +
call sub_1014C31  +
push eax  +
push esi  +
call sub_1016D99  +
mov eax ebx +
pop ebx  +
jmp loc_10171FF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10171FD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1017237  +
call ds:GetLastError  +
test eax eax +
jnz loc_101722F  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_101722F  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1002EC0  +
call sub_1015499  +
cmp eax 0FFFFFFFFh +
jz loc_101722F  +
xor eax eax +
inc eax  +
jmp loc_1017231  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_1017285  +
movzx eax ds:byte_1017294[eax] +
jmp ds:off_101728C[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_1017287  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_1017328  +
cmp [ebp+arg_4] ebx +
jnz loc_1017328  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1015499  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_10172E2  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1014F43  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_10161CB  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_1017305  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017336  +
push 8  +
jmp loc_1017334  +
lea ecx [esi+1] +
push ecx  +
push offset dword_100136C  +
push eax  +
call sub_101570A  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1015C73  +
mov eax [ebp+arg_4] +
jmp loc_1017338  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017336  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_101737D  +
cmp ecx edi +
jnz loc_101737D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017376  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_10175E0  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1017368  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_10175DC  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_10175E6  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1014FC0  +
test eax eax +
jnz loc_1017498  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1017498  +
cmp [edi+4] ebx +
jnz loc_1017498  +
cmp [edi+8] ebx +
jnz loc_1017498  +
cmp [edi+0Ch] ebx +
jnz loc_1017498  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1017413  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1017498  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1017498  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_1017428  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_1017498  +
mov edx eax +
or edx ecx +
jz loc_1017439  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1017498  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_101744E  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1017498  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_101745A  +
xor eax eax +
or ebx eax +
jnz loc_1017498  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1017498  +
jmp ds:off_1017608[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_10174B1  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1017498  +
cmp [edi-10h] ecx +
jnz loc_1017498  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_10174D0  +
cmp eax 2 +
jnb loc_10174D0  +
call ds:GetLastError  +
test eax eax +
jnz loc_10174AA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10175DF  +
mov eax [edi-10h] +
test eax eax +
jz loc_1017498  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_10174D0  +
push dword ptr [eax]  +
call sub_1018F1F  +
test eax eax +
jz loc_1017498  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_10174E0  +
cmp [edi-14h] ecx +
jz loc_1017498  +
xor eax eax +
or ebx eax +
jnz loc_10175C6  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1017498  +
and esi 20h +
or esi eax +
jnz loc_1017498  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_10175C6  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_1017498  +
jmp loc_10175C6  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_10175FE  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1017498  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1017498  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1017498  +
mov edx [edi-10h] +
test edx edx +
jz loc_1017498  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_101756E  +
push dword ptr [edx]  +
call sub_1018F1F  +
test eax eax +
jz loc_1017498  +
jmp loc_10175C6  +
cmp dword ptr [edi-24h] 1 +
ja loc_1017498  +
and esi 20h +
xor eax eax +
jmp loc_10175BE  +
cmp dword ptr [edi-8] 0 +
jz loc_1017498  +
cmp dword ptr [edi-4] 0 +
jnz loc_10175C6  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_10175C6  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1017498  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1017498  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_1017498  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1017397  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_10174AA  +
push 42Bh  +
jmp loc_10174A4  +
push 78h  +
jmp loc_10174A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_101767B  +
call ds:GetLastError  +
test eax eax +
jnz loc_101766F  +
push 57h  +
call ebx  +
call sub_1014CC4  +
xor eax eax +
jmp loc_1017BDF  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1017BC9  +
cmp eax edi +
jz loc_1017BC9  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_101771A  +
cmp [ebp+lpString2] 0 +
jnz loc_101771A  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_101771A  +
cmp dword ptr [ebp+lpString] edx +
jz loc_10176F8  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10176F8  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1017157  +
push eax  +
push 2  +
call sub_101599B  +
add esp 10h +
jmp loc_101770E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017709  +
push 42Bh  +
call ebx  +
call sub_1014CC4  +
push 800401E4h  +
call ebx  +
jmp loc_1017BDC  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1017732  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_101773D  +
jmp loc_1017BC9  +
cmp dword ptr [esi+24h] 0 +
jz loc_1017743  +
cmp ecx 9 +
jz loc_1017743  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1017BC9  +
jmp ds:off_1017BE5[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_10177B1  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_10177B1  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_10161CB  +
test eax eax +
jnz loc_1017791  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017BD7  +
push 8  +
call ds:SetLastError  +
jmp loc_1017BD7  +
push 3  +
push offset asc_1002E54  +
push eax  +
call sub_1015B57  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_1017BD7  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_101782C  +
test ebx ebx +
jz loc_1017BC4  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_1016B4A  +
test eax eax +
jnz loc_101782C  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1017803  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1017803  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1017157  +
push eax  +
push 3  +
call sub_101599B  +
add esp 14h +
jmp loc_101781C  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1017157  +
push eax  +
push 2  +
call sub_101599B  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1017BDC  +
test ebx ebx +
jz loc_1017BC4  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1017885  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1017885  +
cmp dword ptr [ebp+lpString] eax +
jz loc_101786B  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_101786B  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_101780C  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1017157  +
push eax  +
push 1  +
call sub_101599B  +
add esp 0Ch +
jmp loc_101781C  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_10178D5  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_10178B8  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_10199F0  +
cmp eax 0FFFFFFFFh +
jnz loc_1017BC4  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1019262  +
cmp eax 0FFFFFFFFh +
jnz loc_1017BC4  +
jmp loc_1017776  +
cmp [ebp+var_C] ecx +
jz loc_1017914  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1017914  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1017905  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1017905  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_101780C  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1017873  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_101793E  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_101521E  +
test eax eax +
jz loc_1017776  +
mov [esi+2Ch] eax +
jmp loc_1017944  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_101570A  +
jmp loc_1017BC4  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1017BC4  +
push 0  +
push ebx  +
call sub_1014F43  +
test eax eax +
jz loc_1017A1D  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_101693C  +
test eax eax +
jz loc_1017A1D  +
push 0Ah  +
push ebx  +
call sub_101672F  +
cmp [ebp+var_C] 1 +
jnz loc_101799F  +
mov dword ptr [ebp+String2] eax +
jmp loc_10179A2  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1017A07  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_10179E0  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10179CD  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1019964  +
jmp loc_10179D7  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1019987  +
cmp eax 0FFFFFFFFh +
jnz loc_1017BC4  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10179F8  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_10192D9  +
jmp loc_10178C7  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_101932E  +
jmp loc_10178C7  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1017A16  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1017BC4  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1017A2F  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1017A83  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1017A51  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1017A51  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_101780C  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1017873  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1017BC4  +
push ebx  +
call sub_101670C  +
test eax eax +
jnz loc_1017ABC  +
and edi 10h +
or edi eax +
jz loc_1017A8D  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1017A8D  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1017BDE  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1017AAF  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1017AAF  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_101780C  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1017873  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1017ACD  +
call sub_1016523  +
fstp  [ebp+var_18] +
jmp loc_1017AD5  +
call sub_1016523  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1017B4B  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1017B1C  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1017B05  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_10199AA  +
jmp loc_1017B13  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_10199CD  +
cmp eax 0FFFFFFFFh +
jnz loc_1017BC4  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1017B38  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1019383  +
jmp loc_10178C7  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_10193D8  +
jmp loc_10178C7  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1017B5B  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_1017BC4  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1017BC4  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1017BDE  +
cmp [ebp+lpString2] 0 +
jz loc_1017BBB  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1017B9C  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1017B9C  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_101780C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017BB1  +
push 42Bh  +
call ds:SetLastError  +
call sub_1014CC4  +
jmp loc_101781C  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1017BDE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017BD7  +
push 57h  +
call ebx  +
call sub_1014CC4  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1017CD3  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1017CD3  +
cmp [ebp+arg_8] edi +
jz loc_1017CD3  +
push [ebp+arg_8]  +
call sub_1017209  +
test eax eax +
jnz loc_1017C58  +
push 490h  +
jmp loc_1017CDF  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1017C4E  +
add esi 20h +
jmp loc_1017C67  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_1017CB4  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_1017C7F  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1017CA4  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1017CA4  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_1016B4A  +
cmp eax 1 +
jz loc_1017CCE  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_1017C65  +
jmp loc_1017C4E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017CC5  +
push 42Bh  +
call ebx  +
call sub_1014CC4  +
xor eax eax +
jmp loc_1017CE4  +
mov eax [ebp+arg_4] +
jmp loc_1017CE4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017CE1  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1017DC8  +
cmp [ebp+arg_4] edi +
jz loc_1017DC8  +
cmp [ebp+lpString] edi +
jz loc_1017DC8  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1017DC8  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1015499  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1017DD9  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_10161CB  +
mov [esi] eax +
test eax eax +
jnz loc_1017D7F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017DD6  +
push 8  +
call ds:SetLastError  +
jmp loc_1017DD6  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_10161CB  +
mov [esi+4] eax +
test eax eax +
jz loc_1017D6B  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_101570A  +
test edi edi +
jz loc_1017DB9  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_101570A  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1017C12  +
jmp loc_1017DD9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017DD6  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_1017E64  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_1017E64  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1014C31  +
test eax eax +
jnz loc_1017E15  +
push 7  +
call sub_1015406  +
jmp loc_1017E21  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_10161CB  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1017E64  +
test ebx ebx +
jbe loc_1017E4E  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_1017E48  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_1017E48  +
push esi  +
call sub_10157C3  +
add esi 50h +
dec ebx  +
jnz loc_1017E2F  +
push [ebp+arg_0]  +
call sub_1014C5D  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_1017E66  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_10161CB  +
mov ebx eax +
cmp ebx edi +
jz loc_1017EF8  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1017F0A  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_1017EA1  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_1017F11  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1017F0A  +
call esi  +
test eax eax +
jnz loc_1017F0A  +
push 57h  +
jmp loc_1017F04  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017F0A  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10180D7  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_101521E  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1017F0A  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1017F3E  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10157C3  +
jmp loc_1017F0A  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1017F33  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_10161CB  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1017F33  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1015960  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_1017FB5  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_1017F73  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1017F33  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1014F43  +
cmp eax 4 +
ja loc_1017FED  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10157C3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1017F0A  +
push 42Bh  +
jmp loc_1017F04  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_101558D  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_1018027  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1002E44 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_1018077  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_10161CB  +
mov esi eax +
cmp esi edi +
jnz loc_101805E  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10157C3  +
jmp loc_1017EF8  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_0  +
push [ebp+dwLen]  +
push esi  +
call sub_1015960  +
add esp 14h +
jmp loc_1018097  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_1018085  +
push 7  +
call sub_1015406  +
jmp loc_1018091  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_10161CB  +
mov esi eax +
cmp esi edi +
jz loc_1018050  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_10161CB  +
mov esi eax +
cmp esi edi +
jz loc_1018050  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1017157  +
push eax  +
push 50h  +
push esi  +
call sub_1015960  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_10157C3  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1018159  +
cmp [ebp+arg_4] ebx +
jz loc_1018159  +
cmp [ebp+arg_C] ebx +
jz loc_1018159  +
cmp [ebp+dwErrCode] ebx +
jz loc_1018159  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_1018159  +
call sub_1014D6D  +
test eax eax +
jnz loc_1018139  +
push 157Fh  +
call sub_1017157  +
push eax  +
call sub_1014C5D  +
push 47Eh  +
call edi  +
jmp loc_1018162  +
call sub_10160FA  +
test eax eax +
jz loc_101815D  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_1018181  +
cmp eax [ebp+arg_C] +
jl loc_101816B  +
call ds:GetLastError  +
test eax eax +
jnz loc_101815D  +
push 57h  +
call edi  +
call sub_1014CC4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10172A3  +
mov esi eax +
cmp esi ebx +
jz loc_101815D  +
push esi  +
call sub_1017E74  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_101815D  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_1017344  +
test eax eax +
jz loc_101815D  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_10182E3  +
jmp loc_10181B8  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_10181D1  +
mov edi [ecx+4] +
jmp loc_10181D3  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017C12  +
cmp eax 0FFFFFFFFh +
jnz loc_1018218  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017CF0  +
cmp eax 0FFFFFFFFh +
jnz loc_101820B  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_1018320  +
mov edi ebx +
xor ebx ebx +
jmp loc_1018211  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1018353  +
test edi edi +
jz loc_1018273  +
cmp [ebp+arg_8] 2 +
jnz loc_1018273  +
push dword ptr [esi+8]  +
call sub_1017264  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_101826E  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017C12  +
cmp eax 0FFFFFFFFh +
jnz loc_1018265  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017CF0  +
cmp eax 0FFFFFFFFh +
jz loc_1018273  +
mov [ebp+arg_8] 1 +
jmp loc_1018271  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1017635  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_10183CC  +
mov eax [esi+18h] +
test eax eax +
jz loc_10182AE  +
cmp eax [esi+1Ch] +
jz loc_1018371  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_10182C7  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_10181B5  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_1018315  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_1018315  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_10183B6  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_101830C  +
cmp [ecx+1Ch] ebx +
jz loc_10183DC  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_10182ED  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_1018164  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1017157  +
push eax  +
push esi  +
call sub_101599B  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017DE5  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1018162  +
call ds:GetLastError  +
test eax eax +
jnz loc_101815D  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_101815D  +
test ebx ebx +
jz loc_101839E  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_101839E  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1017157  +
push eax  +
push 3  +
call sub_101599B  +
add esp 14h +
jmp loc_1018338  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1017157  +
push eax  +
push 2  +
jmp loc_1018330  +
call ds:GetLastError  +
test eax eax +
jnz loc_10183C7  +
push 42Bh  +
call edi  +
call sub_1014CC4  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1017DE5  +
jmp loc_1018162  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_10183F6  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_10183B6  +
mov edi [ecx+24h] +
jmp loc_101840E  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_101840C  +
push ebx  +
push eax  +
call sub_10172A3  +
mov edi eax +
test edi edi +
jnz loc_1018412  +
jmp loc_10183C7  +
mov edi ecx +
test edi edi +
jz loc_1018428  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018428  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_10183A9  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1017157  +
push eax  +
push 1  +
call sub_101599B  +
add esp 0Ch +
jmp loc_1018338  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_101846B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018467  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1018490  +
push 0  +
push [ebp+lpString1]  +
call sub_1014F43  +
cmp eax 2 +
jbe loc_1018467  +
push 2  +
push 1  +
push offset asc_10014CC  +
push [ebp+lpString1]  +
call sub_1014F64  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_101852A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101852A  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_10161CB  +
cmp eax esi +
jnz loc_10184D9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018535  +
push 8  +
jmp loc_101852F  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_101852A  +
push 0  +
push 0Ah  +
push ebx  +
call sub_101693C  +
test eax eax +
jz loc_1018535  +
push 0Ah  +
push ebx  +
call sub_101672F  +
cmp eax 0FFh +
ja loc_1018535  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_10184F0  +
cmp [ebp+var_4] 4 +
jnz loc_101852A  +
inc eax  +
jmp loc_1018537  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1A4h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1A4] ecx +
mov [ebp+var_1A0] esi +
mov dword ptr [ebp+addr] esi +
mov [ebp+cp] esi +
cmp edi esi +
jz loc_10186E1  +
cmp ebx esi +
jz loc_10186E1  +
mov eax [ebx] +
cmp eax esi +
jz loc_10185A5  +
cmp eax 2 +
jb loc_10186E1  +
cmp ecx esi +
jz loc_10186E1  +
cmp dword_101E3CC esi +
jnz loc_10185D9  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_10185CF  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_10186ED  +
mov dword_101E3CC 1 +
push edi  +
call ds:lstrlenW  +
add eax 5 +
push eax  +
mov [ebp+var_1A0] eax +
call sub_101521E  +
mov [ebp+cp] eax +
cmp eax esi +
jnz loc_101860E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10186F3  +
push 8  +
jmp loc_10186ED  +
lea ecx [ebp+var_1A0] +
push ecx  +
push eax  +
push edi  +
call sub_10150FF  +
test eax eax +
jz loc_10186F3  +
push [ebp+cp]  +
call ds:inet_addr  +
mov dword ptr [ebp+addr] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101865F  +
lea eax [ebp+cp] +
push eax  +
call sub_10157C3  +
call ds:GetLastError  +
test eax eax +
jnz loc_10186F3  +
push 42Bh  +
jmp loc_10186ED  +
push 2  +
push 4  +
lea eax [ebp+addr] +
push eax  +
call ds:gethostbyaddr  +
mov dword_101E4E0 eax +
cmp eax esi +
jz loc_1018647  +
lea eax [ebp+cp] +
push eax  +
call sub_10157C3  +
push esi  +
push esi  +
push edi  +
push 11h  +
call sub_10161CB  +
cmp eax esi +
jz loc_10185F9  +
mov ecx dword_101E4E0 +
cmp ecx esi +
jz loc_10186F3  +
mov eax [ecx] +
mov [ebp+cp] eax +
cmp [ebp+arg_C] esi +
jnz loc_10186C7  +
cmp eax esi +
jz loc_10186DC  +
push offset a__0  +
push dword ptr [ecx]  +
call ds:strtok  +
pop ecx  +
pop ecx  +
mov [ebp+cp] eax +
cmp eax esi +
jz loc_10186DC  +
push ebx  +
push [ebp+var_1A4]  +
push eax  +
call sub_101501B  +
test eax eax +
jz loc_10186F3  +
xor eax eax +
inc eax  +
jmp loc_10186F5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10186F3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_101875F  +
push esi  +
push edi  +
call sub_1014F43  +
test eax eax +
jz loc_101875F  +
push edi  +
call sub_101844A  +
push edi  +
test eax eax +
jnz loc_1018767  +
push offset aS_1  +
push 1  +
call sub_101599B  +
add esp 0Ch +
test eax eax +
jnz loc_101876E  +
call ds:GetLastError  +
test eax eax +
jnz loc_101875A  +
push 8  +
call ds:SetLastError  +
call sub_1014CC4  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_1014C5D  +
jmp loc_1018744  +
call sub_1014C31  +
cmp eax esi +
jnz loc_1018780  +
push 0Dh  +
call sub_1015406  +
jmp loc_101878A  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_10161CB  +
cmp eax esi +
jz loc_1018748  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_101875F  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_10187B9  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1018761  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_10188C8  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_10188C8  +
push esi  +
call sub_101844A  +
cmp eax 1 +
jnz loc_10187FE  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1018839  +
push offset aIpc  +
push esi  +
push offset aSS_1  +
push 2  +
call sub_101599B  +
add esp 10h +
test eax eax +
jnz loc_1018866  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018831  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_10188CA  +
test bl 20h +
jz loc_1018845  +
push offset aAdmin  +
jmp loc_101880B  +
test bl 40h +
jz loc_1018854  +
cmp [ebp+arg_4] edi +
jz loc_1018854  +
push [ebp+arg_4]  +
jmp loc_101880B  +
push esi  +
push offset aS_1  +
push 1  +
call sub_101599B  +
add esp 0Ch +
jmp loc_101881B  +
call sub_1014C31  +
cmp eax edi +
jnz loc_1018878  +
push 12h  +
call sub_1015406  +
jmp loc_1018882  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_10161CB  +
cmp eax edi +
jz loc_101881F  +
test ebx 10000000h +
jz loc_1018895  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_10188BB  +
cmp esi 4B8h +
jz loc_10188B4  +
call sub_1014CC4  +
jmp loc_10188C4  +
call sub_101636C  +
jmp loc_10188C4  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_10188CA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_1018A2E  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018A2E  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_101892B  +
xor eax eax +
jmp loc_1018A31  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_10161CB  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_101894F  +
call ebx  +
test eax eax +
jnz loc_1018924  +
push 8  +
call ds:SetLastError  +
jmp loc_1018924  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_1018924  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1014F64  +
test eax eax +
jz loc_1018A2E  +
push [ebp+lpString]  +
call sub_1018499  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_10189EA  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_1018543  +
test eax eax +
jz loc_1018924  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_10161CB  +
mov esi eax +
cmp esi edi +
jz loc_1018924  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_1018543  +
test eax eax +
jz loc_1018924  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1014F64  +
test eax eax +
jnz loc_10189D6  +
mov eax ebx +
jmp loc_1018A31  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1014F64  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1018A31  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_1018924  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_10161CB  +
mov ebx eax +
cmp ebx edi +
jz loc_1018924  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_1018924  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_10189DE  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101E03C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
mov [ebp+var_40] esi +
cmp ebx esi +
jz loc_1018ADC  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018ADC  +
push ebx  +
call sub_1018499  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_1018ABE  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_1018543  +
test eax eax +
jnz loc_1018A9A  +
xor eax eax +
jmp loc_1018ADF  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_10161CB  +
cmp eax esi +
jz loc_1018A96  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_1018543  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1018ADF  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1015507  +
cmp eax 0FFFFFFFFh +
jz loc_1018AD8  +
push 35h  +
call ds:SetLastError  +
jmp loc_1018A96  +
mov eax edi +
jmp loc_1018ADF  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101453D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_10187C8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1018C6D  +
push esi  +
call sub_10188D6  +
cmp eax 1 +
jz loc_1018C6D  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_101844A  +
cmp eax 1 +
jnz loc_1018B4C  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_1018A3D  +
test eax eax +
jnz loc_1018B68  +
call sub_1014CC4  +
call ds:GetLastError  +
jmp loc_1018CA1  +
cmp [ebp+lpString] ebx +
jz loc_1018B91  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018B91  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_1  +
push 2  +
call sub_101599B  +
add esp 10h +
jmp loc_1018BA3  +
push dword ptr [ebp+arg_0]  +
push offset aS_1  +
push 1  +
call sub_101599B  +
add esp 0Ch +
test eax eax +
jnz loc_1018BC6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018BB9  +
push 8  +
call ds:SetLastError  +
call sub_1014CC4  +
push 8  +
pop eax  +
jmp loc_1018CA1  +
call sub_1014C31  +
cmp eax ebx +
jnz loc_1018BD8  +
push 12h  +
call sub_1015406  +
jmp loc_1018BE2  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_10161CB  +
mov edx eax +
cmp edx ebx +
jz loc_1018BA7  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_1018C33  +
cmp esi 4B8h +
jz loc_1018C2C  +
push esi  +
call ds:SetLastError  +
call sub_1014CC4  +
jmp loc_1018C9B  +
call sub_101636C  +
jmp loc_1018C9B  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_101870B  +
push eax  +
call sub_1014E03  +
test eax eax +
jnz loc_1018C9B  +
push dword ptr [ebp+arg_0]  +
call sub_1018AF5  +
push 1580h  +
call sub_1017157  +
push eax  +
call sub_1014C5D  +
mov esi 4B8h +
jmp loc_1018C9B  +
cmp [ebp+lpUserName] ebx +
jz loc_1018C9F  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018C9F  +
push 157Eh  +
call sub_1017157  +
push eax  +
call sub_1014C5D  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_1018CA1  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_1018B12  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1018E57  +
push 0  +
push edi  +
call sub_1014F43  +
test eax eax +
jz loc_1018E57  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_1018D36  +
cmp [ebp+lpUserName] 0 +
jz loc_1018D1C  +
cmp [ebp+nSize] 2 +
jb loc_1018D1C  +
cmp [ebp+lpPassword] 0 +
jz loc_1018D1C  +
cmp [ebp+arg_10] 2 +
jnb loc_1018D36  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018D2A  +
push 57h  +
call ebx  +
call sub_1014CC4  +
xor eax eax +
jmp loc_1018E5A  +
push edi  +
mov [ebp+var_4] edi +
call sub_101844A  +
cmp eax esi +
jnz loc_1018D49  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_1018D7A  +
cmp [ebp+lpPassword] 0 +
jz loc_1018D7A  +
push 0  +
push esi  +
push offset Buffer  +
push [ebp+lpPassword]  +
call sub_1014F64  +
test eax eax +
jnz loc_1018D7A  +
push [ebp+var_4]  +
call sub_1018A3D  +
test eax eax +
jnz loc_1018E6E  +
jmp loc_1018D2A  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_1018A3D  +
test eax eax +
jz loc_1018D2A  +
cmp [ebp+lpUserName] 0 +
jz loc_1018DBF  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1018DBF  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_1018CAC  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_1018DCE  +
mov [ebp+var_8] esi +
jmp loc_1018DCE  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_1018CAC  +
mov edi eax +
cmp edi 55h +
jnz loc_1018DDE  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_1018E5A  +
test edi edi +
jnz loc_1018DEA  +
cmp [ebp+var_8] esi +
jz loc_1018DD3  +
push edi  +
jmp loc_1018DD8  +
mov eax 4C3h +
cmp edi eax +
ja loc_1018E17  +
jz loc_1018E14  +
cmp edi 34h +
jz loc_1018F06  +
cmp edi 56h +
jz loc_1018E61  +
cmp edi 4BEh +
jz loc_1018F06  +
jmp loc_1018D2A  +
push eax  +
jmp loc_1018DD8  +
cmp edi 4CFh +
jb loc_1018D2A  +
cmp edi 4D1h +
jbe loc_1018F06  +
cmp edi 52Eh +
jz loc_1018E61  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_1018D2A  +
push 157Eh  +
call sub_1017157  +
push eax  +
call sub_1014C5D  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_1018D2F  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_1018E91  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_1018D2A  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_1017157  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1017004  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_1015CB6  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_1018CAC  +
mov edi eax +
test edi edi +
jz loc_1018DDA  +
cmp edi 34h +
jz loc_1018F06  +
cmp edi 4BEh +
jz loc_1018F06  +
mov eax 4C3h +
cmp edi eax +
jz loc_1018E14  +
cmp edi 4CEh +
jbe loc_1018D2A  +
cmp edi 4D1h +
ja loc_1018E37  +
push 4C6h  +
call ebx  +
call sub_1014CC4  +
push edi  +
call ebx  +
jmp loc_1018D2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1018F35  +
cmp dword ptr [eax] 9 +
jnz loc_1018F35  +
xor eax eax +
inc eax  +
jmp loc_1018F37  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1018F50  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1018F1F  +
test eax eax +
jz loc_1018FAB  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1018F9F  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_10190AC  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10157C3  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1018F83  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_1018F1F  +
test eax eax +
jz loc_1018FD6  +
push ecx  +
call sub_1018F65  +
push esi  +
call sub_10157C3  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1018F1F  +
test eax eax +
jz loc_1018FF5  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1018F1F  +
test eax eax +
jnz loc_1019014  +
xor eax eax +
jmp loc_1019039  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_1019010  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_101902F  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1019027  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1019038  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1018F1F  +
test eax eax +
jnz loc_101905A  +
or eax 0FFFFFFFFh +
jmp loc_10190A2  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_1019055  +
push 14h  +
call sub_101521E  +
test eax eax +
jz loc_1019055  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_1019095  +
mov [esi+8] eax +
jmp loc_101909B  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1019120  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_10190EB  +
jz loc_1019107  +
cmp eax 20000h +
jz loc_1019107  +
cmp eax 30000h +
jz loc_1019107  +
cmp eax 40000h +
jz loc_1019107  +
cmp eax 50000h +
jz loc_1019107  +
cmp eax 60000h +
jz loc_1019107  +
jmp loc_1019120  +
cmp eax 80000h +
jz loc_1019112  +
cmp eax 90000h +
jz loc_1019107  +
cmp eax 0A0000h +
jz loc_1019107  +
cmp eax 0B0000h +
jnz loc_1019120  +
add edx 0Ch +
push edx  +
call sub_10157C3  +
jmp loc_1019120  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1018FB5  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_1018F1F  +
test eax eax +
jnz loc_1019144  +
or eax 0FFFFFFFFh +
jmp loc_1019253  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_101924E  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_101923E  +
mov ecx 70000h +
cmp eax ecx +
ja loc_10191D2  +
jz loc_10191C0  +
cmp eax 20000h +
jz loc_10191A4  +
cmp eax 30000h +
jz loc_1019235  +
cmp eax 40000h +
jz loc_1019235  +
cmp eax 60000h +
jnz loc_101923E  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_10191C7  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1014F64  +
test eax eax +
jz loc_1019258  +
mov edx [ebp+arg_0] +
jmp loc_101923E  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_101923E  +
mov eax edx +
jmp loc_1019251  +
cmp eax 90000h +
jz loc_1019235  +
cmp eax 0A0000h +
jz loc_10191F8  +
cmp eax 0B0000h +
jnz loc_101923E  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_101923E  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_101923C  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_101923E  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_101923E  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_101923E  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_101923E  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_101923E  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_101923C  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_10191CE  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_101915A  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1019251  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1018F1F  +
test eax eax +
jnz loc_101927D  +
or eax 0FFFFFFFFh +
jmp locret_10192D0  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1019290  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_101521E  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10192CB  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_101570A  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz loc_10192CE  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1018F1F  +
test eax eax +
jz loc_1019322  +
push 4  +
call sub_101521E  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1019322  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz locret_1019325  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1018F1F  +
test eax eax +
jz loc_1019377  +
push 4  +
call sub_101521E  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1019377  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz locret_101937A  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1018F1F  +
test eax eax +
jz loc_10193CC  +
push 4  +
call sub_101521E  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10193CC  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz locret_10193CF  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1018F1F  +
test eax eax +
jz loc_1019421  +
push 8  +
call sub_101521E  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1019421  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz locret_1019424  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_1018F1F  +
test eax eax +
jz loc_101949B  +
call sub_1018F40  +
push eax  +
mov [ebp+var_4] eax +
call sub_1018F1F  +
test eax eax +
jz loc_101949B  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1019475  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jz loc_1019475  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_101945F  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1019492  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jnz loc_101949E  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018FB5  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1018F1F  +
test eax eax +
jnz loc_10194BE  +
or eax 0FFFFFFFFh +
jmp loc_10194E2  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_10194DF  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_1019042  +
cmp eax 0FFFFFFFFh +
jz loc_10194DF  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_10194C6  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1018FFE  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1019547  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1019524  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_101952A  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1019532  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_10190AC  +
lea eax [ebp+var_4] +
push eax  +
call sub_10157C3  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_101957D  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101957D  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10194EB  +
jmp loc_101957F  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_10195B1  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10195B1  +
push dword ptr [eax+0Ch]  +
call sub_1018FE0  +
jmp loc_10195B3  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jnz loc_10195D6  +
xor eax eax +
jmp loc_10195EC  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_10195E9  +
cmp ecx 80000h +
jnz loc_10195D2  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jnz loc_101960F  +
xor eax eax +
jmp loc_101961B  +
cmp dword ptr [eax+4] 20000h +
jnz loc_101960B  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jnz loc_101963E  +
xor eax eax +
jmp loc_1019656  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_1019651  +
cmp ecx 30000h +
jnz loc_101963A  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_101968B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_101968B  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10195BC  +
jmp loc_101968D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_10196C2  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10196C2  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10195F5  +
jmp loc_10196C4  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_10196F9  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10196F9  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1019624  +
jmp loc_10196FB  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1019715  +
xor eax eax +
jmp loc_1019745  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_1019711  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1019738  +
test ecx ecx +
jz loc_101973C  +
jmp loc_1019711  +
test ecx ecx +
jnz loc_101973F  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
mov esi eax +
cmp esi edi +
jnz loc_101976E  +
xor eax eax +
jmp loc_10197ED  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_101977F  +
cmp eax edi +
jnz loc_10197D4  +
cmp [ebp+arg_C] edi +
jnz loc_1019790  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_10197B4  +
lea edi [eax+eax] +
push edi  +
call sub_101521E  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10197D4  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_10197DB  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_10197DB  +
lea edi [esi+0Ch] +
push edi  +
call sub_10157C3  +
and dword ptr [edi] 0 +
push ebx  +
call sub_101521E  +
mov [edi] eax +
test eax eax +
jnz loc_10197D8  +
xor eax eax +
jmp loc_10197EC  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_101570A  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
mov esi eax +
test esi esi +
jnz loc_1019815  +
xor eax eax +
jmp loc_1019850  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_1019825  +
test eax eax +
jz loc_1019829  +
jmp loc_1019811  +
test eax eax +
jnz loc_1019845  +
push 4  +
call sub_101521E  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1019811  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_1019889  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1019889  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1019704  +
jmp loc_101988B  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_10198C6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10198C6  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101974F  +
jmp loc_10198C8  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_1019900  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1019900  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10197F8  +
jmp loc_1019902  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_1019924  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FFE  +
test eax eax +
jz loc_1019959  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1019959  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_101990B  +
jmp loc_101995B  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1019129  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1019129  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1019129  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1019129  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1019129  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push offset aGrouppolicyLic  +
mov dword ptr [esi] 1 +
call SLGetWindowsInformationDWORD  +
test eax eax +
jl loc_1019A45  +
xor ecx ecx +
cmp [ebp+var_4] 1 +
setz cl  +
mov [esi] ecx +
pop esi  +
leave   +
retn 4  +
***
push dword ptr [ebp-10h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
lea ecx [ebp-20h] +
jmp ??1CHString@@QAE@XZ  +
***
retf 0FF9Ah  +
***
retn 1D4h  +
***
