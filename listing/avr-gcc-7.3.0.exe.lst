sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_4D95F0 1 +
mov ds:dword_4D95EC 1 +
mov ds:dword_4D95E8 1 +
mov ds:dword_4D95F8 1 +
jz loc_4010B0  +
mov ds:dword_4D7008 eax +
mov eax ds:dword_4D95FC +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_46F810  +
mov edx ds:dword_4D9600 +
mov ds:dword_4DA380 eax +
mov ds:dword_4DA384 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_46FA50  +
cmp dword_483714 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_46FAC0 +
call sub_46FAB0  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_4D9604 +
mov dword ptr [esp+10h] offset dword_4D7000 +
mov dword ptr [esp+8] offset dword_4D7014 +
mov dword ptr [esp+4] offset dword_4D7018 +
mov ds:dword_4D7000 eax +
mov eax ds:dword_4D9608 +
mov dword ptr [esp] offset dword_4D701C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_4D7010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_470810  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_4D95FC +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_4DA388 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_4DA38C +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_4DA38C +
test eax eax +
jz loc_401481  +
mov ds:dword_4D7004 1 +
mov eax ds:dword_4DA38C +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_4D4B60 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_46FDC0  +
mov [esp+88h+var_88] offset sub_46F900 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_4D960C eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_483768  +
call sub_470090  +
mov eax ds:_acmdln +
mov ds:dword_4DA370 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_4DA36C eax +
mov ebx ds:dword_4D95FC +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_483000 eax +
mov eax ds:dword_4D701C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_4D7018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_4D7018 esi +
call sub_470120  +
mov edx ds:dword_4D7014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_4D701C +
mov ecx ds:dword_4D7014 +
mov edx ds:dword_4D7018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_4820F0  +
mov ecx ds:dword_4D7008 +
test ecx ecx +
mov ds:dword_4D700C eax +
jz loc_4014AB  +
mov edx ds:dword_4D7004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_4D700C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4DA38C +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_4DA38C +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_4DD008 +
mov [esp+88h+var_88] offset unk_4DD000 +
call _initterm  +
test ebx ebx +
mov ds:dword_4DA38C 2 +
jnz loc_401261  +
xchg ebx ds:dword_4DA388 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_4DA38C 1 +
mov [esp+88h+var_84] offset unk_4DD018 +
mov [esp+88h+var_88] offset unk_4DD00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_4D95FC 1 +
call sub_470140  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_4D95FC 0 +
call sub_470140  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_4881C4 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_4881C4 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jz loc_401597  +
cmp dl 20h +
jz loc_4015B0  +
lea ecx [edx-9] +
cmp cl 1 +
jbe loc_4015B0  +
cmp dl 23h +
jnz locret_4015B9  +
lea esi [esi+0] +
mov edx eax +
cmp byte ptr [edx+1] 0Ah +
lea eax [eax+1] +
jnz loc_401580  +
lea eax [edx+2] +
movzx edx byte ptr [edx+2] +
cmp dl 0Ah +
jnz loc_401568  +
movzx edx byte ptr [eax+1] +
cmp dl 0Ah +
jnz loc_4015B4  +
cmp byte ptr [eax+2] 0Ah +
jnz loc_4015B4  +
add eax 1 +
retn   +
movzx edx byte ptr [eax+1] +
add eax 1 +
jmp loc_401563  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call sub_4529F0  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi eax +
push ebx  +
sub esp 10h +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_401631  +
xor ecx ecx +
xor ebx ebx +
cmp dl 9 +
jz loc_40161D  +
cmp dl 20h +
jnz loc_401620  +
add ecx 1 +
add ebx 1 +
movzx edx byte ptr [esi+ebx] +
test dl dl +
jnz loc_401613  +
test ecx ecx +
mov eax esi +
jnz loc_401638  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [ecx+ebx+1] +
mov [esp+14h+var_14] eax +
call sub_4529F0  +
xor edx edx +
xor ecx ecx +
mov edi eax +
lea esi [esi+0] +
movzx eax byte ptr [esi+ecx] +
cmp al 9 +
jz loc_40165C  +
cmp al 20h +
jnz loc_401663  +
mov byte ptr [edi+edx] 5Ch +
add edx 1 +
add ecx 1 +
mov [edi+edx] al +
add edx 1 +
cmp ecx ebx +
jle loc_401650  +
mov [esp+14h+var_14] esi +
call free  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_401690  +
***
push esi  +
sub esp 48h +
cmp edx 1 +
jz loc_401780  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call _access_0  +
add esp 48h +
pop ebx  +
retn   +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
test eax eax +
js loc_4017AC  +
movzx eax [esp+48h+var_32] +
mov edx [esp+48h+var_3C] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_40176B  +
add esp 48h +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
sub esp 18h +
cmp [esp+18h+arg_0] 2 +
mov ebx [esp+18h+arg_4] +
jnz loc_4017E5  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_4017F6  +
cmp al 2Fh +
jz loc_4017F6  +
test al al +
jnz loc_4017F0  +
mov eax [ebx+4] +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [edx+1] 3Ah +
jnz loc_4017E2  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] edx +
call _access_0  +
test eax eax +
jnz loc_4017E2  +
mov eax [ebx] +
add esp 18h +
pop ebx  +
retn   +
***
jmp sub_401820  +
***
sub esp 1Ch +
cmp [esp+1Ch+arg_0] 1 +
jz loc_401830  +
xor eax eax +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_401850  +
cmp al 2Fh +
jz loc_401850  +
test al al +
jz loc_40182A  +
cmp byte ptr [edx+1] 3Ah +
jnz loc_40182A  +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edx +
call _access_0  +
test eax eax +
jnz loc_40182A  +
mov eax [esp+1Ch+arg_4] +
mov eax [eax] +
jmp loc_40182C  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp ds:dword_4D70E4 +
shl edi 4 +
mov [esp+34h+var_20] edi +
lea ebx [ebp+edi+0] +
mov ecx [ebx] +
mov [esp+34h+var_24] ecx +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_401920  +
cmp edx 1 +
jbe loc_4019C0  +
mov ecx [esp+34h+var_24] +
movzx edx byte ptr [ecx] +
lea ecx [edx-4Fh] +
cmp cl 1Eh +
mov [esp+34h+var_19] dl +
ja loc_401908  +
mov esi 1 +
shl esi cl +
test esi 41800100h +
jnz loc_401937  +
and esi 1 +
jz loc_401908  +
mov esi ds:dword_4D70E0 +
add eax 1 +
cmp eax esi +
jge loc_401908  +
mov edx [esp+34h+var_20] +
mov edx [ebp+edx+10h] +
cmp byte ptr [edx] 4Fh +
jz loc_401A50  +
mov ecx [esp+34h+var_20] +
lea edx [ebp+ecx+20h] +
jmp loc_401901  +
mov ecx [edx] +
add edx 10h +
cmp byte ptr [ecx] 4Fh +
jz loc_401A50  +
add eax 1 +
cmp eax esi +
jnz loc_4018F3  +
mov dword ptr [ebx+8] 1 +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
and eax 0Bh +
cmp eax 1 +
setz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+34h+var_24] +
mov edi offset aNo_2 +
lea esi [ecx+1] +
mov ecx 3 +
mov [esp+34h+var_18] esi +
cmps   +
mov edi ds:dword_4D70E0 +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
lea esi [eax+1] +
jnz loc_4019D0  +
cmp esi edi +
jge loc_401908  +
mov eax [esp+34h+var_20] +
mov [esp+34h+var_20] ebx +
movzx ebx [esp+34h+var_19] +
lea ebp [ebp+eax+10h] +
mov eax [esp+34h+var_24] +
add eax 4 +
mov [esp+34h+var_24] eax +
jmp loc_401995  +
add esi 1 +
add ebp 10h +
cmp esi edi +
jz loc_401A43  +
mov eax [ebp+0] +
cmp bl [eax] +
jnz loc_401987  +
mov edx [esp+34h+var_24] +
add eax 1 +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_30] edx +
call strcmp  +
test eax eax +
jnz loc_401987  +
mov ebx [esp+34h+var_20] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_401A33  +
jmp loc_401A37  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edi +
jge loc_401908  +
mov eax [esp+34h+var_20] +
movzx edx [esp+34h+var_19] +
lea ebp [ebp+eax+10h] +
jmp loc_4019F5  +
add esi 1 +
add ebp 10h +
cmp esi edi +
jz loc_401908  +
mov eax [ebp+0] +
cmp dl [eax] +
jnz loc_4019E7  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_4019E7  +
cmp byte ptr [eax+2] 6Fh +
jnz loc_4019E7  +
cmp byte ptr [eax+3] 2Dh +
jnz loc_4019E7  +
mov [esp+34h+var_24] edx +
mov edx [esp+34h+var_18] +
add eax 4 +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_30] edx +
call strcmp  +
mov edx [esp+34h+var_24] +
test eax eax +
jnz loc_4019E7  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_401A37  +
mov byte ptr [ebx+0Dh] 1 +
mov dword ptr [ebx+8] 2 +
jmp loc_401914  +
mov ebx [esp+34h+var_20] +
jmp loc_401908  +
mov byte ptr [ebx+0Dh] 1 +
xor eax eax +
mov dword ptr [ebx+8] 2 +
jmp loc_401914  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax off_4835AC +
mov [esp+20h+var_1C] offset aTargetS +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
call sub_423FF0  +
mov [esp+20h+var_18] offset a__GccConfigure +
mov [esp+20h+var_1C] offset aConfiguredWith +
mov [esp+20h+var_20] ebx +
call sub_423FF0  +
mov [esp+20h+var_18] offset aSingle +
mov [esp+20h+var_1C] offset aThreadModelS +
mov [esp+20h+var_20] ebx +
call sub_423FF0  +
test ds:byte_4C670B 0DFh +
jz loc_401B57  +
xor edx edx +
add edx 1 +
test ds:byte_4C670B[edx] 0DFh +
jnz loc_401AD0  +
mov esi ds:dword_4D7230 +
mov edi edx +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_20] offset byte_4C670B +
mov [esp+20h+var_1C] esi +
call strncmp  +
test eax eax +
jnz loc_401B02  +
cmp byte ptr [esi+edi] 0 +
jz loc_401B30  +
mov [esp+20h+var_10] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] offset aGcc +
mov [esp+20h+var_18] offset byte_4C670B +
mov [esp+20h+var_1C] offset aGccDriverVersi +
call sub_423FF0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] offset aGcc +
mov [esp+20h+var_18] offset byte_4C670B +
mov [esp+20h+var_1C] offset aGccVersionSS +
call sub_423FF0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi ds:dword_4D7230 +
xor edi edi +
jmp loc_401AFC  +
***
jmp sub_401B70  +
***
push esi  +
mov esi eax +
push ebx  +
movzx eax dl +
sub esp 2Ch +
movzx edx byte ptr [esi] +
mov [esp+30h+var_19] al +
mov [esp+30h+var_1B] 0 +
mov [esp+30h+var_1A] 0 +
mov [esp+30h+var_14] eax +
cmp dl 9 +
jz loc_401C82  +
cmp dl 20h +
jz loc_401C82  +
cmp dl 21h +
jz loc_401D43  +
and edx 0FFFFFFFDh +
cmp dl 2Ch +
jnz loc_401BBC  +
add esi 1 +
mov [esp+30h+var_1A] 1 +
mov ebx esi +
jmp loc_401BC3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_4D0620[edx+edx] 204h +
jnz loc_401BC0  +
lea edx [eax-2Bh] +
cmp dl 3 +
jbe loc_401BC0  +
cmp al 3Dh +
jz loc_401BC0  +
cmp al 40h +
jz loc_401BC0  +
cmp al 2Ah +
mov edi ebx +
jz loc_401D66  +
cmp al 20h +
jnz loc_401D7A  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_401BF7  +
cmp al 20h +
jz loc_401BF7  +
cmp [esp+30h+var_1A] 0 +
jnz loc_401C71  +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_401C71  +
mov ebp ds:dword_4D70E4 +
shl eax 4 +
sub edi esi +
mov [esp+30h+var_18] ebx +
add eax ebp +
mov ebx ebp +
mov [esp+30h+var_20] eax +
mov ebp esi +
nop   +
mov esi [ebx] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] esi +
call strncmp  +
test eax eax +
jnz loc_401C64  +
cmp [esp+30h+var_1B] 0 +
jnz loc_401C53  +
cmp byte ptr [esi+edi] 0 +
jnz loc_401C64  +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_401C60  +
cmp [esp+30h+var_19] 0 +
jz loc_401C64  +
mov byte ptr [ebx+0Dh] 1 +
add ebx 10h +
cmp ebx [esp+30h+var_20] +
jnz loc_401C30  +
mov ebx [esp+30h+var_18] +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_401C8E  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [esi+1] +
add esi 1 +
jmp loc_401B91  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
test dl dl +
jz loc_401CCC  +
cmp cl 26h +
jz loc_401CD8  +
cmp cl 7Ch +
jz loc_401CD8  +
cmp cl 3Ah +
jnz loc_401CCC  +
cmp dl 3Bh +
jz loc_401CC8  +
test dl dl +
nop   +
jz loc_401CC8  +
cmp dl 7Dh +
jz loc_401CDF  +
cmp dl 25h +
jz loc_401D03  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 3Bh +
jnz loc_401CAD  +
test dl dl +
jnz loc_401CDF  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
jmp loc_401B91  +
movzx edx byte ptr [eax+1] +
lea esi [eax+1] +
test dl dl +
jz loc_401DA5  +
cmp byte ptr [eax] 3Bh +
jz loc_401B91  +
add esp 2Ch +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
lea ecx [eax+1] +
cmp dl 3Ch +
jz loc_401D1D  +
cmp dl 7Bh +
jz loc_401D1D  +
cmp dl 57h +
jz loc_401D31  +
mov eax ecx +
jmp loc_401CA8  +
mov edx [esp+30h+var_14] +
add eax 2 +
call sub_401B70  +
movzx edx byte ptr [eax] +
jmp loc_401CA8  +
cmp byte ptr [eax+2] 7Bh +
jz loc_401D87  +
mov eax ecx +
mov edx 57h +
jmp loc_401CA8  +
movzx edx byte ptr [esi+1] +
lea eax [esi+1] +
mov esi eax +
cmp dl 20h +
jnz loc_401D9B  +
add esi 1 +
movzx edx byte ptr [esi] +
cmp dl 9 +
jz loc_401D51  +
cmp dl 20h +
jz loc_401D51  +
jmp loc_401BAC  +
movzx eax byte ptr [edi+1] +
add ebx 1 +
mov [esp+30h+var_1B] 1 +
cmp al 20h +
jz loc_401BF7  +
cmp al 9 +
jz loc_401BF7  +
jmp loc_401C05  +
mov edx [esp+30h+var_14] +
add eax 3 +
call sub_401B70  +
movzx edx byte ptr [eax] +
jmp loc_401CA8  +
cmp dl 9 +
jz loc_401D51  +
jmp loc_401BAC  +
mov eax esi +
mov ebx eax +
jmp loc_401CCE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp ds:dword_4D7060 +
mov [esp+1Ch+var_10] eax +
test ebp ebp +
jle loc_401E07  +
mov edi edx +
mov ebx ds:dword_4D7064 +
xor esi esi +
jmp loc_401DDB  +
add esi 1 +
add ebx 8 +
cmp esi ebp +
jz loc_401E07  +
cmp [ebx+4] edi +
jnz loc_401DD1  +
mov [esp+1Ch+var_14] edi +
mov eax [ebx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_401DD1  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_401E20  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_2C] offset asc_4890EA +
call sub_452AC0  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jle loc_401EEA  +
xor ebx ebx +
jmp loc_401E6E  +
mov [esp+2Ch+var_2C] ebp +
mov esi offset a_a +
call strlen  +
mov ecx 3 +
lea edi [ebp+eax-2] +
cmps   +
jz loc_401EF6  +
add ebx 1 +
cmp [esp+2Ch+arg_0] ebx +
jle loc_401EEA  +
mov edx [esp+2Ch+arg_4] +
lea eax ds:0[ebx*4] +
mov ebp [edx+ebx*4] +
cmp byte ptr [ebp+0] 2Dh +
jnz loc_401E47  +
cmp byte ptr [ebp+1] 6Ch +
jnz loc_401E47  +
cmp byte ptr [ebp+2] 0 +
jnz loc_401F22  +
add ebx 1 +
cmp [esp+2Ch+arg_0] ebx +
jle loc_401EEA  +
mov ecx [esp+2Ch+arg_4] +
mov ebp [ecx+eax+4] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] offset asc_4890EA +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aPluginOptPassT +
mov [esp+2Ch+var_2C] eax +
call sub_452BE0  +
mov esi eax +
mov eax [esp+2Ch+var_10] +
cmp esi eax +
jz loc_401E65  +
mov [esp+2Ch+var_2C] eax +
add ebx 1 +
call free  +
cmp [esp+2Ch+arg_0] ebx +
mov [esp+2Ch+var_10] esi +
jg loc_401E6E  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] offset asc_4890EA +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aPluginOptPas_0 +
mov [esp+2Ch+var_2C] eax +
call sub_452BE0  +
mov esi eax +
jmp loc_401ECD  +
add ebp 2 +
jmp loc_401EA3  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
test eax eax +
jz loc_40200A  +
cmp eax 1 +
jnz loc_401FF5  +
mov eax ds:dword_4D703C +
test eax eax +
jns loc_401F90  +
mov eax [esp+10h+arg_4] +
mov esi [eax] +
mov [esp+10h+var_10] esi +
call strlen  +
cmp eax 2 +
jle loc_401FE0  +
lea ebx [eax-3] +
mov edi offset a_gk +
add esi ebx +
mov ecx 4 +
cmps   +
jnz loc_401FE0  +
mov edx ds:dword_4D705C +
test edx edx +
jz loc_401FA0  +
add esp 10h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
retn   +
add eax 7 +
mov [esp+10h+var_10] eax +
call sub_4529F0  +
mov dword ptr [eax] 7875612Dh +
mov esi eax +
mov dword ptr [eax+4] 65736162h +
mov byte ptr [eax+8] 20h +
mov eax [esp+10h+arg_4] +
mov edx [eax] +
lea eax [esi+9] +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call memcpy  +
mov edx esi +
mov byte ptr [esi+ebx+9] 0 +
jmp loc_401F84  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aArgumentToComp +
mov [esp+10h+var_10] eax +
call sub_4255A0  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aTooManyArgumen +
mov [esp+10h+var_10] eax +
call sub_4255A0  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aTooFewArgument +
mov [esp+10h+var_10] eax +
call sub_4255A0  +
nop   +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+2Ch+var_C] +
mov ebx [esp+2Ch+var_8] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov edx [ebx] +
mov ecx [ebx+8] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_24] ecx +
mov edi eax +
lea eax [esi+eax] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add edi [ebx+8] +
test eax eax +
jnz loc_402080  +
add edi esi +
mov byte ptr [edi] 0 +
mov edx [ebx+10h] +
mov eax esi +
call sub_401760  +
xor edx edx +
test eax eax +
cmovz edx esi +
add esp 10h +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+4] +
add eax 1 +
add edi esi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov edx [ebx+10h] +
mov eax esi +
call sub_401760  +
mov edx esi +
test eax eax +
jnz loc_40205C  +
add esp 10h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_4020C0  +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call strlen  +
mov ebx ds:dword_4D711C +
test ebx ebx +
mov ebp eax +
jnz loc_4020EF  +
jmp loc_4021B2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_402137  +
cmp [ebx+10h] ebp +
jnz loc_4020E8  +
mov [esp+24h+var_20] esi +
mov eax [ebx] +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_4020E8  +
mov esi [ebx+8] +
cmp byte ptr [edi] 2Bh +
mov ebp [esi] +
jnz loc_402182  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_4D0620[eax+eax] 40h +
jz loc_402182  +
add edi 1 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebp +
call sub_452BE0  +
jmp loc_40218A  +
mov [esp+24h+var_24] 1Ch +
call sub_4529F0  +
mov [esp+24h+var_24] esi +
mov ebx eax +
call sub_452AC0  +
lea esi [ebx+4] +
mov [ebx+10h] ebp +
mov ebp offset unk_489040 +
mov [ebx+8] esi +
mov byte ptr [ebx+15h] 0 +
mov dword ptr [ebx+4] offset unk_489040 +
mov dword ptr [ebx+18h] 0 +
mov [ebx] eax +
mov eax ds:dword_4D711C +
mov ds:dword_4D711C ebx +
mov [ebx+0Ch] eax +
cmp byte ptr [edi] 2Bh +
jz loc_402110  +
mov [esp+24h+var_24] edi +
call sub_452AC0  +
test ebp ebp +
mov [esi] eax +
jz loc_40219E  +
cmp byte ptr [ebx+15h] 0 +
jz loc_40219E  +
mov [esp+24h+var_24] ebp +
call free  +
movzx eax byte ptr [esp+24h+var_18] +
mov byte ptr [ebx+15h] 1 +
mov [ebx+14h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset off_4834D4 +
jmp loc_4021C2  +
mov ebx eax +
mov [edx+0Ch] ebx +
mov eax edx +
sub edx 1Ch +
cmp edx offset unk_483004 +
jnz loc_4021C0  +
mov ds:dword_4D711C offset off_483020 +
mov ebx offset off_483020 +
jmp loc_4020EF  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_58] eax +
mov [ebp+var_4C] edx +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+58h+var_3D] +
and ebx 0FFFFFFF0h +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] edi +
mov [esp+58h+var_58] ebx +
call memcpy  +
lea eax [ebx+esi] +
mov edx [ebp+var_4C] +
movzx ecx byte ptr [eax-1] +
cmp cl 5Ch +
jz loc_402240  +
cmp cl 2Fh +
jnz loc_4022A0  +
test dl dl +
mov byte ptr [eax] 2Eh +
mov byte ptr [eax+1] 0 +
jz loc_402266  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jnz loc_4022A8  +
add eax 1 +
sub eax ebx +
cmp eax 6 +
jz loc_402302  +
cmp eax 0Ah +
jz loc_4022B0  +
lea eax [ebp+var_48] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] ebx +
call ds:_stati64  +
test eax eax +
js loc_40228F  +
movzx edx [ebp+var_42] +
mov eax 1 +
and dx 0F000h +
cmp dx 4000h +
jz loc_402291  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [eax] 2Fh +
add eax 1 +
jmp loc_402240  +
cmp dl 2Fh +
jnz loc_402266  +
jmp loc_402253  +
lea eax [ebx+1] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aUsr +
mov [esp+58h+var_58] eax +
call sub_452D60  +
test eax eax +
jnz loc_402266  +
movzx eax byte ptr [ebx+4] +
cmp al 5Ch +
jz loc_4022DB  +
cmp al 2Fh +
jnz loc_402266  +
lea eax [ebx+5] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aLib_0 +
mov [esp+58h+var_58] eax +
call sub_452D60  +
test eax eax +
jnz loc_402266  +
xor eax eax +
jmp loc_402291  +
lea eax [ebx+1] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aLib_0 +
mov [esp+58h+var_58] eax +
call sub_452D60  +
test eax eax +
jnz loc_402266  +
xor eax eax +
jmp loc_402291  +
***
sub esp 14h +
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 9Ch +
mov [esp+0A0h+var_A0] 2000h +
call sub_4529F0  +
mov [esp+0A0h+var_A0] ebx +
mov [esp+0A0h+var_9C] 0 +
mov ebp eax +
call _open_0  +
mov [esp+0A0h+var_9C] 0 +
mov [esp+0A0h+var_A0] esi +
mov ebx eax +
call _open_0  +
mov [esp+0A0h+var_88] eax +
shr eax 1Fh +
test al al +
jnz loc_402912  +
mov eax ebx +
shr eax 1Fh +
test al al +
jz loc_402940  +
mov [esp+0A0h+var_A0] ebp +
call free  +
mov [esp+0A0h+var_A0] ebx +
call _close_0  +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _close_0  +
xor eax eax +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+0A0h+var_70] +
mov esi ds:_fstati64 +
mov [esp+0A0h+var_9C] eax +
mov [esp+0A0h+var_A0] ebx +
call esi  +
test eax eax +
js loc_402912  +
lea eax [esp+0A0h+var_40] +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call esi  +
test eax eax +
js loc_402912  +
mov esi [esp+0A0h+var_58] +
mov edi [esp+0A0h+var_54] +
mov edx [esp+0A0h+var_24] +
mov eax [esp+0A0h+var_28] +
xor edx edi +
xor eax esi +
or edx eax +
jnz loc_402912  +
mov eax edi +
or eax esi +
jz loc_402A52  +
lea eax [ebp+1000h] +
mov [esp+0A0h+var_74] eax +
mov [esp+0A0h+var_84] ebp +
mov [esp+0A0h+var_78] ebx +
cmp esi 1000h +
mov ebp esi +
jg loc_4029E0  +
mov ebx esi +
mov [esp+0A0h+var_80] esi +
mov [esp+0A0h+var_7C] edi +
mov eax [esp+0A0h+var_84] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_78] +
mov [esp+0A0h+var_A0] eax +
call _read_0  +
cmp eax ebp +
jz loc_402A00  +
mov ebp [esp+0A0h+var_84] +
mov ebx [esp+0A0h+var_78] +
jmp loc_402912  +
mov ebp 1000h +
mov ebx 1000h +
mov [esp+0A0h+var_80] 1000h +
mov [esp+0A0h+var_7C] 0 +
jmp loc_4029B4  +
mov eax [esp+0A0h+var_74] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _read_0  +
cmp ebp eax +
jnz loc_4029D0  +
mov eax [esp+0A0h+var_74] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_84] +
mov [esp+0A0h+var_A0] eax +
call memcmp  +
test eax eax +
jnz loc_4029D0  +
sub esi [esp+0A0h+var_80] +
sbb edi [esp+0A0h+var_7C] +
mov eax edi +
or eax esi +
jnz loc_4029A0  +
mov ebp [esp+0A0h+var_84] +
mov ebx [esp+0A0h+var_78] +
mov [esp+0A0h+var_A0] ebp +
call free  +
mov [esp+0A0h+var_A0] ebx +
call _close_0  +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _close_0  +
mov eax 1 +
jmp loc_402930  +
***
push esi  +
mov esi 1 +
push ebx  +
mov ebx edx +
sub esp 11Ch +
mov [esp+120h+var_11C] offset aRb_2 +
mov [esp+120h+var_120] eax +
call fopen  +
mov [esp+120h+var_120] ebx +
lea ebx [esp+120h+var_110] +
mov [esp+120h+var_11C] offset aWb_1 +
mov ebp eax +
call fopen  +
mov edi eax +
jmp loc_402AE3  +
mov [esp+120h+var_11C] edi +
mov [esp+120h+var_120] ebx +
call fputs  +
mov [esp+120h+var_11C] 0Ah +
mov [esp+120h+var_120] ebx +
call strchr  +
test eax eax +
setnz al  +
mov esi eax +
mov [esp+120h+var_118] ebp +
mov [esp+120h+var_11C] 100h +
mov [esp+120h+var_120] ebx +
call fgets  +
test eax eax +
jz loc_402B23  +
mov eax esi +
test al al +
jz loc_402AC0  +
mov [esp+120h+var_114] edi +
mov [esp+120h+var_118] 3 +
mov [esp+120h+var_11C] 1 +
mov [esp+120h+var_120] offset asc_4892E5 +
call fwrite  +
jmp loc_402AC0  +
mov [esp+120h+var_120] ebp +
call fclose  +
mov [esp+120h+var_120] edi +
call fclose  +
add esp 11Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov ebx [eax] +
mov edi [esp+28h+arg_0] +
test ebx ebx +
jz loc_402B6F  +
cmp edi [ebx+0Ch] +
jge loc_402B65  +
jmp loc_402B6F  +
cmp [ebx+0Ch] edi +
jg loc_402B6F  +
lea esi [ebx+4] +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_402B60  +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call sub_41ED50  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
cmp eax [ebp+4] +
jle loc_402B8D  +
mov [ebp+4] eax +
mov [esp+28h+var_28] 14h +
call sub_4529F0  +
mov edx [esp+28h+arg_4] +
mov [eax+8] edx +
mov edx [esp+28h+arg_8] +
mov [eax] ebx +
mov [eax+0Ch] edi +
mov [eax+10h] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
test ecx ecx +
mov [esp+30h+var_1C] eax +
mov [esp+30h+var_20] edx +
jz loc_402CB0  +
lea esi [esi+0] +
cmp byte ptr [esi] 2Ah +
jz loc_402C40  +
mov eax ds:dword_4D7148 +
mov edi ds:dword_4D714C +
lea eax [eax+eax*4] +
lea ebx [edi+eax*4-14h] +
cmp edi ebx +
jbe loc_402C2F  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] offset aLanguageSNotRe +
call sub_4251D0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+1] +
mov [esp-0Ch+arg_0] esi +
mov [esp+0] eax +
call strcmp  +
test eax eax +
jz loc_402C4A  +
sub ebx 14h +
cmp edi ebx +
ja loc_402BFB  +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 40h +
jnz loc_402C28  +
jmp loc_402C15  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp-0Ch+arg_10] +
test esi esi +
jz loc_402E1E  +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jnz loc_402E1E  +
mov edi offset a@cHeader +
mov ecx 0Ah +
mov esi ebp +
cmps   +
jz loc_402C8C  +
mov edi offset a@cHeader_0 +
mov ecx 0Ch +
mov esi ebp +
cmps   +
jnz loc_402E1E  +
mov eax ds:dword_4D7108 +
test eax eax +
jnz loc_402E1E  +
mov eax ds:dword_4D9188 +
mov [esp-0Ch+arg_0] offset aCannotUseAsInp +
mov [esp+0] eax +
call sub_4255A0  +
nop   +
mov eax ds:dword_4D714C +
mov [esp-0Ch+arg_14] eax +
mov eax ds:dword_4D7148 +
mov ecx [esp-0Ch+arg_14] +
lea eax [eax+eax*4] +
lea eax [ecx+eax*4-14h] +
cmp ecx eax +
mov [esp-0Ch+arg_18] eax +
ja loc_402C40  +
mov ebp eax +
mov ebx [ebp+0] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_402D00  +
mov esi [esp-0Ch+arg_10] +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jz loc_402E02  +
mov [esp+0] ebx +
call strlen  +
cmp eax [esp-0Ch+arg_C] +
jnb loc_402D2E  +
mov edx [esp-0Ch+arg_C] +
mov [esp+0] ebx +
sub edx eax +
mov eax [esp-0Ch+arg_10] +
add eax edx +
mov [esp-0Ch+arg_0] eax +
call strcmp  +
test eax eax +
jz loc_402E02  +
sub ebp 14h +
cmp [esp-0Ch+arg_14] ebp +
jbe loc_402CD7  +
mov ebp [esp-0Ch+arg_18] +
jmp loc_402D63  +
mov [esp-0Ch+arg_0] offset aAbcdefghijklmn +
mov [esp+0] ebx +
call strpbrk  +
test eax eax +
jz loc_402DB0  +
sub ebp 14h +
cmp ds:dword_4D714C ebp +
ja loc_402C40  +
mov ebx [ebp+0] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_402D88  +
mov esi [esp-0Ch+arg_10] +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jz loc_402DC1  +
mov [esp+0] ebx +
call strlen  +
cmp eax [esp-0Ch+arg_C] +
jnb loc_402D54  +
mov esi [esp-0Ch+arg_C] +
mov [esp+0] ebx +
sub esi eax +
add esi [esp-0Ch+arg_10] +
mov [esp-0Ch+arg_0] esi +
call strcmp  +
test eax eax +
jnz loc_402D40  +
mov [esp-0Ch+arg_0] esi +
mov [esp+0] ebx +
call ds:_stricmp  +
test eax eax +
jnz loc_402D54  +
mov eax ds:dword_4D714C +
mov [esp-0Ch+arg_18] ebp +
mov [esp-0Ch+arg_14] eax +
mov eax [esp-0Ch+arg_14] +
cmp [esp-0Ch+arg_18] eax +
jb loc_402C40  +
mov esi [ebp+4] +
cmp byte ptr [esi] 40h +
jnz loc_402E14  +
add esi 1 +
mov [esp-0Ch+arg_10] 0 +
jnz loc_402BE0  +
mov [esp-0Ch+arg_C] 0 +
jmp loc_402CB9  +
cmp [esp-0Ch+arg_14] ebp +
ja loc_402D37  +
mov esi [ebp+4] +
cmp byte ptr [esi] 40h +
jz loc_402DE4  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
jmp loc_402C42  +
***
sub esp 1Ch +
mov eax ds:dword_4D9094 +
test eax eax +
jnz loc_402E64  +
mov eax offset off_4834D4 +
xor edx edx +
jmp loc_402E47  +
mov edx ecx +
mov [eax+0Ch] edx +
mov ecx eax +
sub eax 1Ch +
cmp eax offset unk_483004 +
jnz loc_402E45  +
mov ds:dword_4D711C offset off_483020 +
add esp 1Ch +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_18] offset aUsingBuiltInSp +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_423FF0  +
jmp loc_402E3C  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax] +
test ebx ebx +
jnz loc_402E95  +
jmp loc_402EAE  +
mov ebx esi +
mov eax [ebx] +
mov esi [ebx+4] +
mov [esp+28h+var_28] eax +
call free  +
mov [esp+28h+var_28] ebx +
call free  +
test esi esi +
jnz loc_402E93  +
mov dword ptr [edi] 0 +
mov dword ptr [ebp+0] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 1 +
mov edi [esp+10h+arg_4] +
jnz loc_402F35  +
mov eax ds:dword_4D7030 +
xor ebx ebx +
test eax eax +
jle loc_402F2C  +
lea esi [esi+0] +
mov eax ds:dword_4D702C +
lea esi ds:0[ebx*4] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_402F21  +
mov edx [edi] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call sub_452D10  +
test eax eax +
jnz loc_402F21  +
mov eax ds:dword_4D702C +
mov dword ptr [eax+esi] 0 +
add ebx 1 +
cmp ds:dword_4D7030 ebx +
jg loc_402EF0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_8] offset aRemove_outfile +
mov [esp+10h+var_C] 24B5h +
mov [esp+10h+var_10] offset a____GccGccGcc_ +
call sub_424080  +
jmp sub_402F60  +
***
push ebx  +
sub esp 1Ch +
mov eax ds:dword_4D70DC +
test eax eax +
jz loc_403008  +
cmp eax ds:dword_4D70E0 +
jz loc_403027  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 100h +
mov ds:dword_4D70DC 10h +
call sub_4529F0  +
mov ds:dword_4D70E4 eax +
add esp 1Ch +
retn   +
lea edx [eax+eax] +
shl eax 5 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70DC edx +
mov [esp+1Ch+var_1C] eax +
call sub_452A70  +
mov ds:dword_4D70E4 eax +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_20] eax +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_1C] ecx +
mov esi [esp+38h+arg_4] +
call sub_402FF0  +
mov ecx ds:dword_4D70E0 +
mov eax [esp+38h+var_20] +
mov ebx ecx +
shl ebx 4 +
add eax 1 +
add ebx ds:dword_4D70E4 +
test ebp ebp +
mov [ebx] eax +
jnz loc_4030C0  +
mov dword ptr [ebx+4] 0 +
mov eax edi +
add ecx 1 +
mov [ebx+0Dh] al +
mov eax esi +
mov dword ptr [ebx+8] 0 +
mov [ebx+0Ch] al +
mov byte ptr [ebx+0Eh] 0 +
mov ds:dword_4D70E0 ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp ds:4[ebp*4] +
mov [esp+38h+var_38] ebp +
call sub_4529F0  +
mov ecx ds:dword_4D70E0 +
mov [esp+38h+var_20] ecx +
mov [ebx+4] eax +
mov ebx ecx +
shl ebx 4 +
add ebx ds:dword_4D70E4 +
lea eax [ebp-4] +
mov edx [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+var_1C] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebx+4] +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax+ebp-4] 0 +
jmp loc_403093  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
cmp byte ptr [eax+1] 57h +
jz loc_403141  +
cmp dword ptr [edx] 500h +
mov eax 1 +
jz loc_403180  +
add esp 1Ch +
retn   +
cmp byte ptr [eax+2] 6Eh +
jnz loc_403130  +
cmp byte ptr [eax+3] 6Fh +
jnz loc_403130  +
cmp byte ptr [eax+4] 2Dh +
jnz loc_403130  +
test byte ptr [edx+28h] 20h +
jnz loc_403130  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] 0 +
sub edx 1 +
call sub_403050  +
xor eax eax +
jmp loc_40313D  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
sub edx 1 +
call sub_403050  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_4D70B4 +
test eax eax +
jz loc_4031C8  +
cmp eax ds:dword_4D7030 +
jz loc_4031E7  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 100h +
mov ds:dword_4D70B4 10h +
call sub_4529F0  +
mov ds:dword_4D70B8 eax +
add esp 1Ch +
retn   +
lea edx [eax+eax] +
shl eax 5 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D70B8 +
mov ds:dword_4D70B4 edx +
mov [esp+1Ch+var_1C] eax +
call sub_452A70  +
mov ds:dword_4D70B8 eax +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
call sub_4031B0  +
mov ebx ds:dword_4D7030 +
mov ecx ebx +
add ebx 1 +
shl ecx 4 +
add ecx ds:dword_4D70B8 +
mov [ecx] esi +
mov [ecx+4] edi +
mov ds:dword_4D7030 ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [edx] +
shl eax 6 +
test ds:byte_4A8CA8[eax] 40h +
jnz loc_403273  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 0 +
sub edx 1 +
jmp sub_403050  +
***
mov eax [edx+0Ch] +
mov dword ptr [esp+4] offset aUnrecognized_5 +
mov [esp+8] eax +
jmp sub_4251D0  +
***
push esi  +
push ebx  +
sub esp 5Ch +
test cl cl +
mov [esp+5Ch+var_14] eax +
mov eax ds:dword_4D7138 +
mov [esp+5Ch+var_10] edx +
mov [esp+5Ch+var_40] eax +
mov eax ds:dword_4D7134 +
mov [esp+5Ch+var_1C] eax +
jz loc_40332D  +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_4036C0  +
mov ecx 2 +
mov edi offset a__1 +
mov esi eax +
cmps   +
mov [esp+5Ch+var_34] 0 +
setnbe cl  +
setb dl  +
cmp cl dl +
jnz loc_4036CD  +
mov eax ds:dword_4D7124 +
test eax eax +
jz loc_403335  +
mov ecx 2 +
mov edi offset a__1 +
mov esi eax +
cmps   +
mov [esp+5Ch+var_30] 0 +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40333D  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_452BE0  +
mov [esp+5Ch+var_30] eax +
jmp loc_40333D  +
mov [esp+5Ch+var_34] 0 +
mov [esp+5Ch+var_30] 0 +
mov eax ds:dword_4D7120 +
mov [esp+5Ch+var_2C] 0 +
test eax eax +
jz loc_40336A  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_452BE0  +
mov [esp+5Ch+var_2C] eax +
mov eax [esp+5Ch+var_34] +
test eax eax +
jz loc_403728  +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov [esp+5Ch+var_20] eax +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_403745  +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call strlen  +
mov byte ptr [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_35] 0 +
mov [esp+5Ch+var_24] eax +
mov eax [esp+5Ch+var_2C] +
test eax eax +
jz loc_403664  +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov edi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov ebx eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
test ebp ebp +
mov [esp+5Ch+var_18] eax +
jz loc_40367F  +
mov eax [esp+5Ch+var_14] +
mov esi [eax] +
test esi esi +
jz loc_4035E2  +
lea eax [ebx+1] +
mov [esp+5Ch+var_3C] eax +
mov eax edi +
mov edi esi +
add eax 1 +
mov [esp+5Ch+var_28] eax +
jmp loc_403458  +
mov eax [edi+8] +
test eax eax +
jnz loc_40344D  +
mov esi [edi+10h] +
test esi esi +
jz loc_403566  +
cmp [esp+5Ch+var_35] 0 +
jnz loc_40344D  +
mov eax [esp+5Ch+var_24] +
mov ecx [esp+5Ch+var_30] +
test eax eax +
jnz loc_403581  +
mov byte ptr [ebp+ebx+0] 0 +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jnz loc_4034FE  +
mov edi [edi+4] +
test edi edi +
jz loc_4035E2  +
mov esi [edi] +
mov [esp+5Ch+var_5C] esi +
call strlen  +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_54] eax +
mov ebx eax +
call memcpy  +
cmp byte ptr [esp+5Ch+var_48] 0 +
jnz loc_403408  +
mov eax [esp+5Ch+var_3C] +
lea ecx [ebp+ebx+0] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
mov ecx [esp+5Ch+var_44] +
test eax eax +
jnz loc_4034FE  +
mov eax [edi+8] +
cmp eax 2 +
jz loc_4035A0  +
test eax eax +
jnz loc_40344D  +
mov eax ds:dword_4D7120 +
test eax eax +
jz loc_403735  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jz loc_403408  +
mov ebx [esp+5Ch+var_34] +
test ebx ebx +
jz loc_403532  +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_48] +
mov edx [esp+5Ch+var_30] +
test edx edx +
jz loc_40354A  +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_48] eax +
call free  +
mov eax [esp+5Ch+var_48] +
cmp ebp eax +
jz loc_40355E  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_48] eax +
call free  +
mov eax [esp+5Ch+var_48] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+5Ch+var_48] 0 +
jnz loc_40344D  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jz loc_403431  +
add ebx ebp +
add eax 1 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] ebx +
call memcpy  +
jmp loc_403436  +
mov eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_44] ecx +
add eax 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jnz loc_4034FE  +
mov eax [edi+8] +
mov ecx [esp+5Ch+var_44] +
jmp loc_4034BE  +
mov ecx [esp+5Ch+var_30] +
test ecx ecx +
jz loc_4036AC  +
mov eax [esp+5Ch+var_34] +
test eax eax +
jz loc_40366B  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax ds:dword_4D7138 +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax ds:dword_4D7134 +
mov [esp+5Ch+var_1C] eax +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_403678  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_24] 0 +
mov [esp+5Ch+var_20] 0 +
mov [esp+5Ch+var_30] 0 +
test eax eax +
mov [esp+5Ch+var_34] 0 +
jnz loc_4033B6  +
xor edi edi +
jmp loc_4033C0  +
mov eax [esp+5Ch+var_30] +
mov byte ptr [esp+5Ch+var_48] 1 +
test eax eax +
jnz loc_403630  +
mov [esp+5Ch+var_35] 1 +
jmp loc_403638  +
mov eax [esp+5Ch+var_10] +
mov ecx [esp+5Ch+var_24] +
mov edx [esp+5Ch+arg_0] +
add edx [eax] +
cmp ebx edi +
mov eax edi +
cmovnb eax ebx +
cmp eax ecx +
cmovb eax ecx +
lea eax [edx+eax+1] +
mov [esp+5Ch+var_5C] eax +
call sub_4529F0  +
mov ebp eax +
jmp loc_4033E6  +
mov edx [esp+5Ch+var_34] +
test edx edx +
jnz loc_4035EE  +
xor eax eax +
jmp loc_40354A  +
mov [esp+5Ch+var_34] 0 +
jmp loc_4032E6  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_452BE0  +
mov [esp+5Ch+var_54] 0 +
mov ebx eax +
mov [esp+5Ch+var_34] eax +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call sub_452BE0  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call sub_452BE0  +
mov [esp+5Ch+var_1C] eax +
jmp loc_4032E6  +
mov [esp+5Ch+var_20] 0 +
jmp loc_403386  +
mov eax [edi+10h] +
test eax eax +
jnz loc_40341A  +
jmp loc_403571  +
xor ebp ebp +
mov byte ptr [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_35] 0 +
mov [esp+5Ch+var_24] 0 +
jmp loc_4033AA  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] offset unk_4D71C0 +
mov [esp+38h+var_1C] cl +
mov [esp+38h+var_1B] 1 +
call strlen  +
mov edx ds:dword_4D71CC +
mov ebx eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp ebx eax +
ja loc_403866  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ebp +
call memcpy  +
add ebx ds:dword_4D71CC +
cmp ds:dword_4D71D0 ebx +
mov edx ebx +
mov ds:dword_4D71CC ebx +
jz loc_403890  +
lea eax [edx+1] +
mov ds:dword_4D71CC eax +
mov eax edi +
movzx ecx al +
lea eax [esp+38h+var_20] +
mov byte ptr [edx] 3Dh +
lea edx [esi+4] +
mov [esp+38h+var_30] eax +
mov eax esi +
mov [esp+38h+var_34] offset sub_403A50 +
mov [esp+38h+var_38] 0 +
call sub_403290  +
mov eax ds:dword_4D71CC +
cmp ds:dword_4D71D0 eax +
jz loc_4038B0  +
lea edx [eax+1] +
mov ds:dword_4D71CC edx +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D71C8 +
mov edx ds:dword_4D71CC +
cmp edx eax +
jz loc_403881  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add edx ecx +
not ecx  +
and edx ecx +
mov ecx ds:dword_4D71D0 +
mov esi edx +
sub esi ebx +
mov ds:dword_4D71CC edx +
mov edi ecx +
sub edi ebx +
cmp esi edi +
jbe loc_403858  +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov ds:dword_4D71C8 edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edx ds:dword_4D71CC +
jmp loc_40379F  +
or ds:byte_4D71E8 2 +
jmp loc_403826  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edx ds:dword_4D71CC +
jmp loc_4037C9  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_40380B  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 3Ch +
movzx edx byte ptr [edx] +
mov ecx [esp+48h+arg_0] +
cmp dl 5Ch +
jz loc_403966  +
cmp dl 2Fh +
jz loc_403966  +
test dl dl +
mov edi eax +
jnz loc_403960  +
test ebp 1 +
mov eax offset unk_489040 +
mov esi offset a_exe +
cmovz esi eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] ecx +
mov [esp+48h+var_2C] ebx +
mov [esp+48h+var_28] esi +
call strlen  +
mov [esp+48h+var_48] esi +
lea esi [esp+48h+var_2C] +
mov ebx eax +
mov [esp+48h+var_24] eax +
call strlen  +
mov ecx [esp+48h+var_3C] +
lea edx [edi+4] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] offset loc_402020 +
mov [esp+48h+var_1C] ebp +
movzx ecx cl +
add ebx eax +
mov [esp+48h+var_20] eax +
mov eax edi +
mov [esp+48h+var_48] ebx +
call sub_403290  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_4038F2  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call _access_0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_403955  +
mov [esp+48h+var_48] ebx +
call sub_452AC0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp [esp+18h+arg_0] 1 +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
cmp byte ptr [ebx+4] 0 +
jnz loc_403AB7  +
cmp byte ptr [ebx+5] 0 +
jnz loc_403A7E  +
mov esi [ebx] +
mov eax [esi+0Ch] +
cmp [esi+10h] eax +
jz loc_403AE1  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
mov byte ptr [eax] 3Bh +
mov esi [ebx] +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov edx [esi+0Ch] +
mov edi eax +
mov eax [esi+10h] +
sub eax edx +
cmp edi eax +
ja loc_403AD0  +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edx +
call memcpy  +
xor eax eax +
add [esi+0Ch] edi +
mov byte ptr [ebx+5] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edx edx +
mov eax ebp +
call sub_4021F0  +
test eax eax +
jnz loc_403A65  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call sub_458E00  +
mov edx [esi+0Ch] +
jmp loc_403A96  +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] esi +
call sub_458E00  +
mov eax [esi+0Ch] +
jmp loc_403A75  +
***
cmp [esp+28h+arg_0] 1 +
sub esp 48h +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
test eax eax +
js loc_403BAC  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_403BB1  +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
test eax eax +
jns loc_403BAC  +
mov eax ds:dword_4D9094 +
test eax eax +
jz loc_403BAC  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aSM +
call sub_4251D0  +
jmp loc_403BAC  +
***
mov ebx ds:dword_4D70E8 +
test ebx ebx +
jz loc_403BFE  +
nop   +
mov eax [ebx] +
call sub_403B80  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_403BF0  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx ds:dword_4D70EC +
test ebx ebx +
jz loc_403C2E  +
nop   +
mov eax [ebx] +
call sub_403B80  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_403C20  +
mov ds:dword_4D70EC 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call signal  +
call sub_403BE0  +
call sub_403C10  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp loc_47CB98  +
***
sub esp 0Ch +
call sub_423FD0  +
xor edx edx +
test al al +
jz loc_403C8E  +
mov eax ds:dword_4D9058 +
mov dl 1 +
test eax eax +
cmovnz edx dword_4835A4 +
mov eax edx +
add esp 0Ch +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_403CB7  +
cmp al 2Fh +
jnz loc_403D40  +
mov eax ds:dword_4D724C +
test eax eax +
jz loc_403D14  +
mov [esp+10h+var_10] eax +
call sub_452AC0  +
mov edi ds:dword_4D724C +
mov [esp+10h+var_10] edi +
mov esi eax +
call strlen  +
test eax eax +
jnz loc_403D67  +
mov eax ds:dword_4D7244 +
test eax eax +
jz loc_403D84  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] esi +
call sub_452BE0  +
mov ebx eax +
mov [esp+10h+var_10] esi +
call free  +
mov edx offset off_489406 +
mov [esp+10h+var_8] 1 +
mov ecx edx +
mov eax offset unk_483508 +
mov [esp+10h+var_C] 0 +
mov edx ebx +
mov [esp+10h+var_10] 1 +
call sub_402B40  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test al al +
jz loc_403D4E  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_403CB7  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] offset aSystemPathQsIs +
mov [esp+10h+var_10] eax +
call sub_4255A0  +
cmp byte ptr [edi+eax-1] 2Fh +
jnz loc_403CE0  +
mov byte ptr [esi+eax-1] 0 +
mov eax ds:dword_4D7244 +
test eax eax +
jnz loc_403CED  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_10] esi +
call sub_452BE0  +
mov ebx eax +
jmp loc_403D07  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D713C +
test ebx ebx +
mov edi eax +
jz loc_403EE0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_403E69  +
cmp byte ptr [ebx+3] 0 +
jns loc_403E80  +
mov ds:dword_4D713C 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452A70  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D713C eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_403EF1  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D713C +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41EFE0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D713C +
test eax eax +
jz loc_403EFA  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452A70  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D713C eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_403E69  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_403DEB  +
mov ebx eax +
xor edx edx +
jmp loc_403E69  +
xor esi esi +
jmp loc_403EAB  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D7140 +
test ebx ebx +
mov edi eax +
jz loc_404040  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_403FC9  +
cmp byte ptr [ebx+3] 0 +
jns loc_403FE0  +
mov ds:dword_4D7140 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452A70  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7140 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_404051  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D7140 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41EFE0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7140 +
test eax eax +
jz loc_40405A  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452A70  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D7140 eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_403FC9  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_403F4B  +
mov ebx eax +
xor edx edx +
jmp loc_403FC9  +
xor esi esi +
jmp loc_40400B  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D7144 +
test ebx ebx +
mov edi eax +
jz loc_4041A0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_404129  +
cmp byte ptr [ebx+3] 0 +
jns loc_404140  +
mov ds:dword_4D7144 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452A70  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7144 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_4041B1  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D7144 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41EFE0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7144 +
test eax eax +
jz loc_4041BA  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452A70  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D7144 eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_404129  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_4040AB  +
mov ebx eax +
xor edx edx +
jmp loc_404129  +
xor esi esi +
jmp loc_40416B  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset aAssemblerOptio +
call sub_47D0D0  +
mov [esp+1Ch+var_1C] offset aUseWaOptionToP +
call sub_47D0D0  +
mov eax ds:_iob +
add eax 20h +
mov [esp+1Ch+var_1C] eax +
call fflush  +
xor eax eax +
add esp 1Ch +
retn   +
***
jmp sub_404200  +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call getenv  +
cmp byte ptr [edi+1] 0 +
mov esi eax +
jz loc_40500C  +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aEnv_managerGet +
add eax 40h +
mov [esp+18h+var_18] eax +
call sub_47D120  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
push edi  +
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 13h +
jbe loc_4057E2  +
mov dword ptr [eax] 4C4C4F43h +
mov edi ds:dword_4D70E0 +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 5F434347h +
mov dword ptr [eax+0Ch] 4954504Fh +
mov dword ptr [eax+10h] 3D534E4Fh +
mov eax ds:dword_4D71CC +
mov [ebp+var_24] 0 +
add eax 14h +
test edi edi +
mov ds:dword_4D71CC eax +
jle loc_40572A  +
mov edi [ebp+var_24] +
mov ecx ds:dword_4D70E4 +
shl edi 4 +
add ecx edi +
mov edx [ecx+8] +
mov [ebp+var_20] edi +
and edx 14h +
cmp edx 4 +
jz loc_405493  +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 1 +
jbe loc_40579D  +
mov esi 2D27h +
mov [eax] si +
mov eax ds:dword_4D71CC +
mov ebx [ecx] +
lea edx [eax+2] +
mov ds:dword_4D71CC edx +
jmp loc_40542F  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] edx +
call memcpy  +
mov eax ds:dword_4D71D0 +
add esi ds:dword_4D71CC +
sub eax esi +
cmp eax 3 +
mov ds:dword_4D71CC esi +
jbe loc_405475  +
mov dword ptr [esi] 27275C27h +
mov eax ds:dword_4D71CC +
lea ebx [edi+1] +
lea edx [eax+4] +
mov ds:dword_4D71CC edx +
mov [esp+38h+var_34] 27h +
mov [esp+38h+var_38] ebx +
mov [ebp+var_1C] edx +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
mov edi eax +
jz loc_4054C7  +
mov eax ds:dword_4D71D0 +
mov esi edi +
sub esi ebx +
sub eax edx +
cmp esi eax +
jbe loc_4053F0  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edx ds:dword_4D71CC +
jmp loc_4053F0  +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov esi ds:dword_4D71CC +
jmp loc_405418  +
mov eax edx +
add [ebp+var_24] 1 +
mov ebx [ebp+var_24] +
cmp ds:dword_4D70E0 ebx +
jle loc_40572A  +
cmp ds:dword_4D71D0 eax +
jz loc_4057C4  +
mov byte ptr [eax] 20h +
mov eax ds:dword_4D71CC +
add eax 1 +
mov ds:dword_4D71CC eax +
jmp loc_4053A3  +
mov [esp+38h+var_38] ebx +
call strlen  +
mov edx [ebp+var_1C] +
mov esi eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp esi eax +
ja loc_4056F0  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] edx +
call memcpy  +
add esi ds:dword_4D71CC +
cmp ds:dword_4D71D0 esi +
mov ds:dword_4D71CC esi +
jz loc_40570B  +
mov byte ptr [esi] 27h +
mov eax ds:dword_4D71CC +
mov ebx [ebp+var_20] +
lea edx [eax+1] +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D71CC edx +
mov eax [eax+ebx+4] +
test eax eax +
mov [ebp+var_20] eax +
jz loc_405491  +
mov ebx [eax] +
test ebx ebx +
jz loc_405491  +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp eax 1 +
jbe loc_405697  +
lea esi [esi+0] +
mov ecx 2720h +
mov [edx] cx +
mov eax ds:dword_4D71CC +
lea ecx [eax+2] +
mov eax [ebp+var_20] +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov ebx [eax] +
jmp loc_4055B1  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ecx +
call memcpy  +
mov eax ds:dword_4D71D0 +
add esi ds:dword_4D71CC +
sub eax esi +
cmp eax 3 +
mov ds:dword_4D71CC esi +
jbe loc_405600  +
mov dword ptr [esi] 27275C27h +
mov eax ds:dword_4D71CC +
lea ebx [edi+1] +
lea ecx [eax+4] +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov [esp+38h+var_34] 27h +
mov [esp+38h+var_38] ebx +
mov [ebp+var_1C] edx +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
mov edi eax +
jz loc_405620  +
mov eax ds:dword_4D71D0 +
mov esi edi +
mov ecx edx +
sub esi ebx +
sub eax edx +
cmp esi eax +
jbe loc_405570  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov ecx ds:dword_4D71CC +
jmp loc_405570  +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov esi ds:dword_4D71CC +
jmp loc_405598  +
mov [esp+38h+var_38] ebx +
call strlen  +
mov edx [ebp+var_1C] +
mov ecx edx +
mov esi eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp esi eax +
ja loc_4056B6  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ecx +
call memcpy  +
add esi ds:dword_4D71CC +
cmp ds:dword_4D71D0 esi +
mov ds:dword_4D71CC esi +
jz loc_4056D1  +
mov byte ptr [esi] 27h +
mov eax ds:dword_4D71CC +
add eax 1 +
add [ebp+var_20] 4 +
mov ds:dword_4D71CC eax +
jz loc_405493  +
mov edi [ebp+var_20] +
mov edx [edi] +
test edx edx +
jz loc_405493  +
mov edx eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp eax 1 +
ja loc_405550  +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edx ds:dword_4D71CC +
jmp loc_405550  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov ecx ds:dword_4D71CC +
jmp loc_40563A  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov esi ds:dword_4D71CC +
jmp loc_40565E  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edx ds:dword_4D71CC +
jmp loc_4054E3  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov esi ds:dword_4D71CC +
jmp loc_40550B  +
cmp ds:dword_4D71D0 eax +
jz loc_40580C  +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D71CC +
mov ecx ds:dword_4D71C8 +
add eax 1 +
cmp eax ecx +
jz loc_405800  +
mov edx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_405780  +
mov ds:dword_4D71CC edx +
mov eax edx +
mov [esp+38h+var_38] ecx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov ecx [ebp+var_20] +
mov eax ds:dword_4D71CC +
add ecx ds:dword_4D70E4 +
jmp loc_4053D4  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_4054B2  +
mov [esp+38h+var_34] 14h +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_40535F  +
or ds:byte_4D71E8 2 +
jmp loc_40574F  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_405736  +
***
mov ebp esp +
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov [esp+10h+var_10] eax +
call sub_452AC0  +
test ebx ebx +
mov esi eax +
jz loc_40676C  +
mov ebx ds:dword_4D70EC +
test ebx ebx +
jnz loc_4067AF  +
lea esi [esi+0] +
mov [esp+10h+var_10] 8 +
call sub_4529F0  +
mov edx ds:dword_4D70EC +
mov [eax] esi +
mov [eax+4] edx +
mov ds:dword_4D70EC eax +
test edi edi +
jz loc_4067CD  +
mov ebx ds:dword_4D70E8 +
test ebx ebx +
jnz loc_406787  +
jmp loc_4067D4  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_4067D4  +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_452D10  +
test eax eax +
jnz loc_406780  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_406750  +
mov eax [ebx] +
mov [esp+0] esi +
mov [esp-0Ch+arg_0] eax +
call sub_452D10  +
test eax eax +
jnz loc_4067A8  +
mov [esp+0] esi +
call free  +
test edi edi +
jnz loc_406770  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 8 +
call sub_4529F0  +
mov edx ds:dword_4D70E8 +
mov [eax] esi +
mov [eax+4] edx +
mov ds:dword_4D70E8 eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx ds:dword_4D7114 +
mov [esp+38h+var_24] edx +
test ebx ebx +
jz loc_406985  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_4068D2  +
cmp byte ptr [ebx+3] 0 +
jns loc_406905  +
mov ds:dword_4D7114 0 +
lea eax [esi+1] +
mov [esp+38h+var_1D] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax ds:8[edx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [esp+38h+var_1C] edx +
call sub_452A70  +
mov edx [esp+38h+var_1C] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7114 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+38h+var_1D] 0 +
mov [eax+3] dl +
jz loc_406996  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call memcpy  +
mov ebx ds:dword_4D7114 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov eax [esp+38h+var_24] +
mov [ebx+edx*4+8] edi +
or eax ebp +
jz loc_4068FD  +
cmp byte ptr [edi] 2Dh +
jz loc_406968  +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_30] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] eax +
call sub_406720  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+38h+var_34] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41EFE0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40699F  +
mov ebx [eax+4] +
mov [esp+38h+var_34] edx +
and esi 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_452A70  +
mov edx [eax] +
mov ds:dword_4D7114 eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_4068D2  +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 3Dh +
call strrchr  +
lea edx [eax+1] +
test eax eax +
cmovnz edi edx +
jmp loc_4068E9  +
mov [esp+38h+var_1D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_40684C  +
mov ebx eax +
xor edx edx +
jmp loc_4068D2  +
xor ebx ebx +
jmp loc_406930  +
***
push ebx  +
sub esp 10h +
mov eax ds:dword_4D720C +
cmp ds:dword_4D7210 eax +
jz loc_406AE0  +
lea edx [eax+1] +
mov ds:dword_4D720C edx +
mov byte ptr [eax] 0 +
mov ebx ds:dword_4D7208 +
mov ecx ds:dword_4D720C +
cmp ebx ecx +
jz loc_406AD4  +
mov eax ds:dword_4D7218 +
mov edx ds:dword_4D7204 +
add ecx eax +
not eax  +
and ecx eax +
mov eax ds:dword_4D7210 +
mov esi ecx +
sub esi edx +
mov ds:dword_4D720C ecx +
mov edi eax +
sub edi edx +
cmp esi edi +
jbe loc_406A16  +
mov ds:dword_4D720C eax +
mov ecx eax +
mov ds:dword_4D7208 ecx +
mov ecx ds:dword_4D7074 +
test ecx ecx +
jnz loc_406AA0  +
mov edx ds:dword_4D7070 +
test edx edx +
jz loc_406A5E  +
mov [esp+10h+var_10] 1 +
mov ecx 4 +
mov edx ebx +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
mov esi eax +
jz loc_406AC2  +
xor ecx ecx +
xor edx edx +
mov eax offset aScript +
mov ebx esi +
call sub_406800  +
mov ecx ds:dword_4D7078 +
mov eax ebx +
mov edx ds:dword_4D707C +
call sub_406800  +
mov eax ds:dword_4D7078 +
test eax eax +
jnz loc_406A90  +
mov ds:dword_4D7080 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D702C +
mov edx ds:dword_4D709C +
mov [eax+edx*4] ebx +
jmp loc_406A7A  +
mov edx ebx +
mov ecx 4 +
mov [esp+10h+var_10] 1 +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
cmovnz ebx eax +
jmp loc_406A26  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] offset aUnableToLocate +
call sub_4251D0  +
jmp loc_406A84  +
or ds:byte_4D7228 2 +
jmp loc_4069E7  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset unk_4D7200 +
call sub_458E00  +
mov eax ds:dword_4D720C +
jmp loc_4069C7  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
mov ds:dword_4D70A0 ebx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov ds:dword_4D7028 eax +
call sub_459A70  +
mov [esp+18h+var_18] eax +
mov ebx eax +
mov ds:dword_4D7090 eax +
call strlen  +
lea edx [ebx+eax] +
cmp ebx edx +
mov ds:dword_4D7098 eax +
mov ds:dword_4D7094 eax +
jnz loc_406B4C  +
jmp loc_406B73  +
sub edx 1 +
cmp ebx edx +
jz loc_406B73  +
cmp byte ptr [edx] 2Eh +
nop   +
jnz loc_406B45  +
mov eax edx +
add edx 1 +
sub eax ebx +
mov ds:dword_4D7098 eax +
mov ds:dword_4D708C edx +
mov ds:dword_4D7088 0 +
add esp 18h +
pop ebx  +
retn   +
mov ds:dword_4D708C offset unk_489040 +
mov ds:dword_4D7088 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov ds:byte_4D7268 al +
mov eax [esp+arg_4] +
mov ds:byte_4D7269 al +
retn 8  +
***
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [edi+4] +
mov [esp+18h+var_18] eax +
call free  +
mov esi [edi+0Ch] +
test esi esi +
jz loc_406C1E  +
mov eax [esi] +
test eax eax +
jz loc_406C16  +
mov edx [eax+4] +
test edx edx +
jz loc_406C25  +
xor edx edx +
xor ebx ebx +
jmp loc_406BFC  +
cmp ebx [eax+4] +
jnb loc_406C25  +
mov eax [eax+edx*4+8] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov esi [edi+0Ch] +
mov edx ebx +
mov eax [esi] +
test eax eax +
jnz loc_406BF7  +
mov [esp+18h+var_18] esi +
call sub_480B00  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_406C40  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi] 0 +
jmp loc_406C16  +
mov dword ptr [eax+4] 0 +
jmp loc_406C16  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strlen  +
add eax ebx +
cmp ebx eax +
jnz loc_406C74  +
jmp loc_406C7D  +
cmp dl 2Fh +
jz loc_406C7D  +
sub eax 1 +
cmp ebx eax +
jz loc_406C7D  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_406C68  +
mov [esp+18h+var_18] eax +
mov ds:dword_4D91A0 eax +
call sub_452990  +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov eax [esp+20h] +
mov esi [ebx] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_459E10  +
cmp [ebx] esi +
jz loc_406CC6  +
mov ds:byte_4D7264 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 28h +
call sub_41FE60  +
call sub_41FEB0  +
call sub_419230  +
mov [esp+28h+var_24] offset unk_4D7740 +
mov [esp+28h+var_28] offset unk_4D8400 +
call sub_419270  +
lea eax [ebx+8] +
add ebx 4 +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] 80000h +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_41C8F0  +
add esp 28h +
pop ebx  +
retn 8  +
***
sub esp 2Ch +
mov edi offset off_48EA44 +
push esi  +
mov esi offset a_MmcuAvr2MmcuA +
push ebx  +
mov ebx 0EBh +
sub esp 2Ch +
mov [esp+34h+var_24] offset loc_425700 +
mov [esp+34h+var_28] offset loc_4256C0 +
mov [esp+34h+var_2C] 0 +
mov [esp+34h+var_30] 0 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458DA0  +
mov ebp ds:dword_4D718C +
jmp loc_406EE2  +
mov [esp+34h+var_2C] ebx +
add edi 4 +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] ebp +
call memcpy  +
mov esi [edi-4] +
add ebx ds:dword_4D718C +
test esi esi +
mov ebp ebx +
mov ds:dword_4D718C ebx +
jz loc_406F05  +
mov [esp+34h+var_34] esi +
call strlen  +
mov ebx eax +
mov eax ds:dword_4D7190 +
sub eax ebp +
cmp ebx eax +
jbe loc_406EB0  +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov ebp ds:dword_4D718C +
jmp loc_406EB0  +
cmp ds:dword_4D7190 ebx +
jz loc_407270  +
lea eax [ebp+1] +
mov ds:dword_4D718C eax +
mov byte ptr [ebp+0] 0 +
mov eax ds:dword_4D7188 +
mov edi ds:dword_4D718C +
cmp edi eax +
jz loc_407240  +
mov edx ds:dword_4D7198 +
mov ecx ds:dword_4D7184 +
add edi edx +
not edx  +
and edi edx +
mov edx ds:dword_4D7190 +
mov ebx edi +
sub ebx ecx +
mov ds:dword_4D718C edi +
mov esi edx +
sub esi ecx +
cmp ebx esi +
jbe loc_406F62  +
mov ds:dword_4D718C edx +
mov edi edx +
mov ds:dword_4D7188 edi +
mov ebx 14h +
mov esi offset aMmcuAvr2MmcuAv +
mov ds:dword_4D7168 eax +
mov ebp offset off_48DAC4 +
jmp loc_406FB8  +
mov [esp+34h+var_30] esi +
add ebp 4 +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_2C] ebx +
call memcpy  +
mov edi ds:dword_4D718C +
mov esi [ebp-4] +
add edi ebx +
test esi esi +
mov ds:dword_4D718C edi +
jz loc_406FD6  +
mov [esp+34h+var_34] esi +
call strlen  +
mov edx ds:dword_4D7190 +
mov ebx eax +
sub edx edi +
cmp edx ebx +
jnb loc_406F80  +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov edi ds:dword_4D718C +
jmp loc_406F80  +
cmp ds:dword_4D7190 edi +
jz loc_407290  +
lea eax [edi+1] +
mov ds:dword_4D718C eax +
mov byte ptr [edi] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407250  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_407208  +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D7164 ecx +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407260  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4071F0  +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D715C ecx +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407220  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
ja loc_4071C0  +
sub edx eax +
cmp edx 8 +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7158 ecx +
jbe loc_4071D2  +
mov dword ptr [eax] 75636D6Dh +
mov dword ptr [eax+4] 7276613Dh +
mov byte ptr [eax+8] 32h +
mov eax ds:dword_4D718C +
add eax 9 +
cmp ds:dword_4D7190 eax +
mov ds:dword_4D718C eax +
jz loc_4072B0  +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407230  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4071AB  +
mov ds:dword_4D718C edx +
mov eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7160 ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D7158 ecx +
mov [esp+34h+var_30] 9 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
jmp loc_407131  +
cmp eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D715C ecx +
jnz loc_4070CF  +
jmp loc_4070B6  +
cmp eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7164 ecx +
jnz loc_407058  +
jmp loc_40703F  +
or ds:byte_4D71A8 2 +
jmp loc_4070EE  +
or ds:byte_4D71A8 2 +
jmp loc_40717A  +
or ds:byte_4D71A8 2 +
jmp loc_406F30  +
or ds:byte_4D71A8 2 +
jmp loc_407000  +
or ds:byte_4D71A8 2 +
jmp loc_407077  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov ebp ds:dword_4D718C +
jmp loc_406F11  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov edi ds:dword_4D718C +
jmp loc_406FE2  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
jmp loc_40715B  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [ebp+arg_0] +
mov [esp+38h+var_28] offset loc_425700 +
mov [esp+38h+var_2C] offset loc_4256C0 +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458DA0  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 0Bh +
jbe loc_4073D0  +
mov dword ptr [eax] 4C4C4F43h +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 3D434347h +
mov eax ds:dword_4D71CC +
mov [esp+38h+var_38] esi +
lea edi [eax+0Ch] +
mov ds:dword_4D71CC edi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax edi +
cmp ebx eax +
ja loc_4073F0  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov ecx ds:dword_4D71C8 +
add eax ebx +
cmp eax ecx +
jz loc_407410  +
mov edx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4073B0  +
mov ds:dword_4D71CC edx +
mov eax edx +
mov [ebp+arg_0] ecx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4050E0  +
mov [esp+38h+var_34] 0Ch +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_40731E  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_458E00  +
mov edi ds:dword_4D71CC +
jmp loc_40735A  +
or ds:byte_4D71E8 2 +
jmp loc_40737F  +
***
mov eax ds:dword_4D7110 +
test eax eax +
jz loc_407430  +
retn   +
push ebp  +
mov ecx 1 +
mov ebp esp +
mov edx offset aLtoWrapper +
push edi  +
mov eax offset unk_483514 +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+3Ch+var_3C] 0 +
call sub_4038D0  +
test eax eax +
jz loc_40755F  +
call sub_401600  +
mov [esp+3Ch+var_2C] offset loc_425700 +
mov [esp+3Ch+var_30] offset loc_4256C0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
mov off_483560 eax +
call sub_458DA0  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 13h +
jbe loc_407588  +
mov dword ptr [eax] 4C4C4F43h +
mov edi off_483560 +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 5F4F544Ch +
mov dword ptr [eax+0Ch] 50415257h +
mov dword ptr [eax+10h] 3D524550h +
mov eax ds:dword_4D71CC +
mov [esp+3Ch+var_3C] edi +
lea esi [eax+14h] +
mov ds:dword_4D71CC esi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax esi +
cmp ebx eax +
ja loc_407567  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71C8 +
add eax ebx +
cmp eax edx +
jz loc_4075A6  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71D0 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D71C4 +
mov edi ebx +
mov esi eax +
mov ds:dword_4D71CC eax +
sub esi ecx +
sub edi ecx +
cmp esi edi +
jbe loc_40754A  +
mov ds:dword_4D71CC ebx +
mov eax ebx +
mov [esp+3Ch+var_3C] edx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
call sub_458E00  +
mov edi off_483560 +
mov esi ds:dword_4D71CC +
jmp loc_4074F4  +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
jmp loc_4074A8  +
or ds:byte_4D71E8 2 +
jmp loc_407519  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx ds:dword_4D722C +
test edx edx +
jz loc_407731  +
cmp byte ptr [edx] 0 +
mov eax edx +
jz loc_4076B0  +
mov eax ds:dword_4D71CC +
mov edi edx +
mov ecx ds:dword_4D71D0 +
sub ecx eax +
cmp ecx 14h +
jbe loc_407701  +
mov dword ptr [eax] 4C46464Fh +
mov dword ptr [eax+4] 5F44414Fh +
mov dword ptr [eax+8] 47524154h +
mov dword ptr [eax+0Ch] 4E5F5445h +
mov dword ptr [eax+10h] 53454D41h +
mov byte ptr [eax+14h] 3Dh +
mov eax ds:dword_4D71CC +
mov [esp+28h+var_28] edi +
lea esi [eax+15h] +
mov ds:dword_4D71CC esi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax esi +
cmp ebx eax +
ja loc_4076E0  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71C8 +
add eax ebx +
cmp eax edx +
jz loc_407725  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi ecx +
sub edi ebx +
cmp esi edi +
ja loc_4076D0  +
mov [esp+28h+var_28] edx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
mov eax ds:dword_4D722C +
sub esp 4 +
mov [esp+28h+var_28] eax +
call free  +
mov ds:dword_4D722C 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4D71CC ecx +
mov eax ecx +
jmp loc_407696  +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] offset unk_4D71C0 +
call sub_458E00  +
mov edi ds:dword_4D722C +
mov esi ds:dword_4D71CC +
jmp loc_407648  +
mov [esp+28h+var_24] 15h +
mov [esp+28h+var_28] offset unk_4D71C0 +
call sub_458E00  +
mov eax ds:dword_4D71CC +
mov edi ds:dword_4D722C +
jmp loc_4075FA  +
or ds:byte_4D71E8 2 +
jmp loc_40766D  +
xor eax eax +
jmp loc_4076B0  +
***
mov edi ecx +
sub esp 18h +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax ds:dword_4D70E0 +
test eax eax +
jg loc_4079E3  +
jmp loc_407A30  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_407A30  +
mov eax ds:dword_4D70E4 +
mov esi ebx +
shl esi 4 +
add eax esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4079D8  +
mov eax [eax] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_407970  +
sub esp 4 +
test eax eax +
jz loc_407A38  +
mov edx ds:dword_4D70E4 +
add ebx 1 +
mov edx [edx+esi] +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_28] offset aUnrecognizedCo +
mov [esp+28h+var_24] edx +
call sub_4251D0  +
cmp ebx ds:dword_4D70E0 +
jl loc_4079E3  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D70E4 +
mov eax [eax+esi] +
mov [esp+28h+var_28] offset aUnrecognized_0 +
mov [esp+28h+var_24] eax +
call sub_4251D0  +
jmp loc_4079D8  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp ds:dword_4D907C +
test ebp ebp +
jz loc_407AF7  +
mov eax ds:dword_4D7130 +
mov edx offset unk_489040 +
test eax eax +
jz loc_407B94  +
mov [esp+4Ch+var_44] edx +
xor ebp ebp +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aInstallSS +
call sub_47D0D0  +
xor ecx ecx +
mov edx offset unk_489040 +
mov [esp+4Ch+var_4C] 0 +
mov eax offset unk_483514 +
call sub_403760  +
mov [esp+4Ch+var_4C] offset aProgramsS +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
xor ecx ecx +
mov edx offset unk_489040 +
mov [esp+4Ch+var_4C] 1 +
mov eax offset unk_483508 +
call sub_403760  +
mov [esp+4Ch+var_4C] offset aLibrariesS +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx ds:dword_4D9064 +
test ebx ebx +
jz loc_407B38  +
mov edx ebx +
mov ecx 4 +
mov [esp+4Ch+var_4C] 1 +
mov eax offset unk_483508 +
call sub_4038D0  +
mov [esp+4Ch+var_4C] offset aS_1 +
test eax eax +
cmovz eax ebx +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_4D9078 +
test edx edx +
jz loc_407BC1  +
mov eax ds:dword_4D7250 +
test eax eax +
jz loc_407B5B  +
mov edi offset aLd_0 +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_407BA4  +
mov [esp+4Ch+var_4C] 0 +
mov ecx 1 +
mov eax offset unk_483514 +
call sub_4038D0  +
mov [esp+4Ch+var_4C] offset aS_1 +
test eax eax +
cmovz eax ds:dword_4D9078 +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_4D7138 +
mov eax offset aHomeJenkinsM_0 +
jmp loc_407A87  +
mov [esp+4Ch+var_4C] edx +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
call sub_452BE0  +
mov ds:dword_4D9078 eax +
mov edx eax +
jmp loc_407B5B  +
mov eax ds:dword_4D906C +
test eax eax +
jnz loc_407C1D  +
mov edx ds:dword_4D9068 +
test edx edx +
jz loc_407BF6  +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_407E42  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_1 +
call sub_47D0D0  +
jmp loc_407AED  +
mov eax ds:dword_4D9074 +
test eax eax +
jz loc_407DDB  +
mov eax ds:dword_4D7120 +
test eax eax +
jnz loc_407BE1  +
mov [esp+4Ch+var_4C] offset asc_489B09 +
call sub_47D0D0  +
jmp loc_407AED  +
mov eax ds:dword_4D7168 +
mov [esp+4Ch+var_18] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_10] ebp +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+var_2C] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40883F  +
cmp dl 0Ah +
jz loc_407E22  +
mov eax [esp+4Ch+var_2C] +
cmp dl 20h +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_28] +
jnz loc_407C70  +
jmp loc_40885D  +
test cl cl +
jz loc_407DBD  +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 20h +
jnz loc_407C68  +
cmp dl 2Eh +
mov [esp+4Ch+var_28] eax +
mov [esp+4Ch+var_24] 0 +
jz loc_407E93  +
mov eax ds:dword_4D715C +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_30] eax +
mov eax [esp+4Ch+var_30] +
movzx eax byte ptr [eax] +
test al al +
jz loc_40886A  +
cmp al 0Ah +
mov edx 1 +
jz loc_407E18  +
cmp al 3Bh +
jz loc_407F03  +
test al al +
jz loc_408010  +
test edx edx +
nop   +
lea esi [esi+0] +
jz loc_407DA4  +
cmp al 20h +
mov edi [esp+4Ch+var_30] +
jnz loc_407CF6  +
nop   +
jmp loc_407F92  +
cmp al 20h +
jz loc_407D00  +
test al al +
nop   +
lea esi [esi+0] +
jz loc_408010  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 3Bh +
jnz loc_407CE5  +
mov [esp+4Ch+var_1D] al +
mov eax [esp+4Ch+var_28] +
mov ebp edi +
sub ebp [esp+4Ch+var_30] +
add eax 1 +
movzx ebx byte ptr [eax] +
cmp bl 3Bh +
jz loc_407DB9  +
test bl bl +
jz loc_407DBD  +
cmp bl 20h +
jz loc_407DAB  +
mov esi eax +
jmp loc_407D3F  +
cmp bl 20h +
jz loc_407D4A  +
test bl bl +
jz loc_407DBD  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jnz loc_407D32  +
mov edx esi +
sub edx eax +
mov ecx [esp+4Ch+var_30] +
cmp edx ebp +
cmovl edx ebp +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call strncmp  +
test eax eax +
jz loc_407D83  +
mov eax [esp+4Ch+var_30] +
mov edx ebp +
call sub_401DB0  +
test eax eax +
jnz loc_407D83  +
cmp bl 20h +
jz loc_407DB1  +
mov eax esi +
jmp loc_407D11  +
mov edx 1 +
xor eax eax +
cmp [esp+4Ch+var_1D] 20h +
setz al  +
add eax edi +
mov [esp+4Ch+var_30] eax +
mov eax [esp+4Ch+var_30] +
movzx eax byte ptr [eax] +
jmp loc_407CB9  +
add [esp+4Ch+var_30] 1 +
jmp loc_407D98  +
xor edx edx +
mov esi eax +
jmp loc_407D4E  +
lea eax [esi+1] +
jmp loc_407D11  +
xor edx edx +
jmp loc_407D88  +
mov eax ds:dword_4D7168 +
mov [esp+4Ch+var_48] offset aMultilibSele_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_4C] eax +
call sub_4255A0  +
mov eax ds:dword_4D9080 +
test eax eax +
jz loc_407E2C  +
mov eax ds:dword_4D724C +
test eax eax +
jz loc_407AED  +
mov edx ds:dword_4D7244 +
test edx edx +
jz loc_407BE1  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aSS_3 +
call sub_47D0D0  +
jmp loc_407AED  +
add [esp+4Ch+var_30] 1 +
jmp loc_407C9D  +
add [esp+4Ch+var_2C] 1 +
jmp loc_407C3A  +
mov eax ds:dword_4D9070 +
test eax eax +
jz loc_407E55  +
mov eax ds:dword_4D7124 +
test eax eax +
jnz loc_407BE1  +
mov [esp+4Ch+var_4C] offset a_ +
xor ebp ebp +
call sub_47D0D0  +
jmp loc_407AED  +
mov eax ds:dword_4D9084 +
test eax eax +
jz loc_407EB4  +
mov eax off_483540 +
cmp byte ptr [eax] 0 +
jz loc_408848  +
mov edx ds:dword_4D7240 +
mov eax offset unk_489040 +
mov [esp+4Ch+var_4C] offset aS_1 +
test edx edx +
cmovnz eax edx +
xor ebp ebp +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
jmp loc_407AED  +
mov eax [esp+4Ch+var_2C] +
cmp byte ptr [eax+1] 3Ah +
jnz loc_407C90  +
cmp byte ptr [eax+2] 3Ah +
setnz al  +
movzx eax al +
mov [esp+4Ch+var_24] eax +
jmp loc_407C90  +
mov eax ds:dword_4D7260 +
test eax eax +
jnz loc_4080C9  +
mov esi ds:dword_4D725C +
test esi esi +
jnz loc_40802D  +
mov ecx ds:dword_4D9094 +
mov ebp 1 +
test ecx ecx +
jz loc_407AED  +
mov eax ds:_iob +
add eax 40h +
call sub_401A70  +
mov edx ds:dword_4D7030 +
xor eax eax +
test edx edx +
setnz al  +
mov ebp eax +
jmp loc_407AED  +
test edx edx +
jz loc_407E18  +
mov ebp [esp+4Ch+var_28] +
mov eax [esp+4Ch+var_1C] +
add ebp 1 +
mov [esp+4Ch+var_2C] eax +
mov edi [esp+4Ch+var_18] +
mov [esp+4Ch+var_24] 1 +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jz loc_407F9C  +
test al al +
jz loc_407DBD  +
mov ebx [esp+4Ch+var_24] +
test ebx ebx +
jnz loc_407F8D  +
xor ebx ebx +
cmp al 21h +
setnz bl  +
jnz loc_407F75  +
cmp al 20h +
jnz loc_407F67  +
jmp loc_407F8D  +
add ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jz loc_407F89  +
cmp al 20h +
jz loc_407F89  +
test al al +
jz loc_407DBD  +
test ebx ebx +
jz loc_407F50  +
mov [esp+4Ch+var_4C] eax +
call putchar  +
jmp loc_407F50  +
mov [esp+4Ch+var_4C] 40h +
call putchar  +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jnz loc_407F5B  +
cmp al 20h +
jnz loc_407F26  +
add ebp 1 +
jmp loc_407F26  +
mov [esp+4Ch+var_1D] 20h +
jmp loc_407D04  +
mov ecx [esp+4Ch+var_24] +
test ecx ecx +
jnz loc_407FF1  +
mov ebx off_4835B4 +
test ebx ebx +
jz loc_407FE5  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_407FE5  +
mov edx 1 +
cmp al 20h +
jz loc_408009  +
test edx edx +
jz loc_407FCE  +
mov [esp+4Ch+var_4C] 40h +
call putchar  +
movsx eax byte ptr [ebx] +
mov [esp+4Ch+var_4C] eax +
call putchar  +
xor edx edx +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_407FBA  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_18] edi +
mov [esp+4Ch+var_1C] eax +
lea eax [ebp+1] +
mov [esp+4Ch+var_2C] eax +
jmp loc_407C3A  +
mov edx 1 +
jmp loc_407FDB  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] offset aMultilibExcl_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_4C] eax +
call sub_4255A0  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_40] offset byte_4C670B +
mov [esp+4Ch+var_44] offset aGcc +
mov [esp+4Ch+var_4C] offset aSSS_1 +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
mov [esp+4Ch+var_48] offset aC +
mov [esp+4Ch+var_4C] offset aCopyrightS2017 +
call sub_47D0D0  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 98h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aThisIsFreeSoft +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov ebx ds:dword_4D9094 +
test ebx ebx +
jz loc_407AED  +
mov eax ds:_iob +
mov [esp+4Ch+var_4C] 0Ah +
add eax 20h +
mov [esp+4Ch+var_48] eax +
call fputc  +
mov eax ds:_iob +
add eax 20h +
mov [esp+4Ch+var_4C] eax +
call fflush  +
jmp loc_407ECF  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_4C] offset aUsageSOptionsF +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 9 +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aOptions +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 46h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPassExitCodesE +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 35h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aHelpDisplayThi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 49h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aTargetHelpDisp +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 5Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aHelpCommonOpti +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDisplaySpecifi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:dword_4D9094 +
test eax eax +
jnz loc_4081FF  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 46h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aUseVHelpToDisp +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 41h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aVersionDisplay +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpspecsDispl +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 40h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpversionDis +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 44h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpmachineDis +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 52h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSearchDir +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintLibgccFil +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 43h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintFileNameL +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Fh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintProgNameP +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 8Ch +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiarch +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiDire +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 90h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiLibD +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 47h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiOsDi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 43h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSysrootDi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSysrootHe +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Fh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWaOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 52h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWpOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Ch +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWlOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXassemblerArgP +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXpreprocessorA +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 38h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXlinkerArgPass +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSaveTempsDoNot +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSaveTempsArgDo +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 89h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aNoCanonicalPre +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPipeUsePipesRa +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aTimeTimeTheExe +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 50h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSpecsFileOverr +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aStdStandardAss +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 77h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSysrootDirecto +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aBDirectoryAddD +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 49h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aVDisplayThePro +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aLikeVButOption +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aEPreprocessOnl +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSCompileOnlyDo +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aCCompileAndAss +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 39h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aOFilePlaceTheO +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPieCreateAPosi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 34h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSharedCreateAS +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 137h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXLanguageSpeci +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_4C] offset aOptionsStartin +
mov [esp+4Ch+var_48] eax +
call sub_47D0D0  +
mov edi ds:dword_4D9094 +
test edi edi +
jz loc_40893B  +
mov eax ds:_iob +
mov [esp+4Ch+var_4C] 0Ah +
add eax 20h +
mov [esp+4Ch+var_48] eax +
call fputc  +
mov eax ds:_iob +
add eax 20h +
mov [esp+4Ch+var_4C] eax +
call fflush  +
jmp loc_407EC1  +
mov ebp [esp+4Ch+var_10] +
jmp loc_407AED  +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_48] offset aNotConfiguredW +
mov [esp+4Ch+var_4C] eax +
call sub_4255A0  +
mov [esp+4Ch+var_24] 0 +
jmp loc_407C90  +
mov edi [esp+4Ch+var_24] +
test edi edi +
jnz loc_407F0B  +
mov esi [esp+4Ch+var_1C] +
mov edi [esp+4Ch+var_28] +
sub edi [esp+4Ch+var_2C] +
test esi esi +
jz loc_408890  +
cmp edi [esp+4Ch+var_18] +
jz loc_408962  +
mov eax [esp+4Ch+var_28] +
lea ebp [eax+1] +
mov esi ebp +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jz loc_4088FD  +
test bl bl +
jz loc_407DBD  +
cmp bl 21h +
jz loc_4088F0  +
cmp bl 20h +
mov eax esi +
jnz loc_4088C6  +
jmp loc_4088D5  +
cmp bl 20h +
jz loc_4088D1  +
test bl bl +
nop   +
jz loc_407DBD  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jnz loc_4088B7  +
test eax eax +
jz loc_4088E2  +
mov edx esi +
sub edx eax +
call sub_401DB0  +
test eax eax +
jnz loc_4088F4  +
cmp bl 20h +
jnz loc_408899  +
add esi 1 +
jmp loc_408899  +
xor eax eax +
jmp loc_4088C6  +
mov [esp+4Ch+var_18] edi +
jmp loc_407F1A  +
mov ecx [esp+4Ch+var_28] +
mov ebx [esp+4Ch+var_2C] +
cmp ebx ecx +
jnb loc_40892A  +
movsx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_408919  +
jmp loc_40892A  +
movsx eax byte ptr [ebx] +
cmp al 3Ah +
jz loc_40892A  +
mov [esp+4Ch+var_4C] eax +
add ebx 1 +
call putchar  +
cmp ebx [esp+4Ch+var_28] +
jnz loc_408912  +
mov [esp+4Ch+var_4C] 3Bh +
call putchar  +
jmp loc_407F26  +
mov [esp+4Ch+var_4C] offset aForBugReportin +
xor ebp ebp +
call sub_47D0D0  +
mov [esp+4Ch+var_48] offset aHttpsGcc_gnu_o +
mov [esp+4Ch+var_4C] offset aS_ +
call sub_47D0D0  +
jmp loc_407AED  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_1C] +
mov [esp+4Ch+var_4C] eax +
call sub_452D60  +
test eax eax +
jnz loc_408890  +
mov ebp [esp+4Ch+var_28] +
add ebp 1 +
jmp loc_407F1A  +
***
push esi  +
sub esp 1Ch +
call sub_423FD0  +
test al al +
jnz loc_408B90  +
call sub_403C10  +
mov eax ds:dword_4D7260 +
test eax eax +
jz loc_408B8A  +
mov [esp+1Ch+var_1C] offset aForBugReportin +
call sub_47D0D0  +
mov [esp+1Ch+var_18] offset aHttpsGcc_gnu_o +
mov [esp+1Ch+var_1C] offset aS_1 +
call sub_47D0D0  +
add esp 1Ch +
retn   +
call sub_403BE0  +
jmp loc_408B5C  +
***
mov eax ds:dword_4D70F8 +
test eax eax +
jz loc_408BB0  +
mov eax 2 +
retn   +
***
jmp sub_403C70  +
***
sub esp 1Ch +
push esi  +
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi ds:dword_4D70A0 +
test esi esi +
jz loc_4096A2  +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
mov edx eax +
jz loc_4096A2  +
mov eax [eax] +
test eax eax +
jz loc_4096A2  +
mov [ebp+var_40] 0 +
xor ebx ebx +
mov [ebp+var_44] 0FFFFFFFFh +
mov [ebp+var_3C] edx +
jmp loc_409656  +
mov edi offset aFtimeReport +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_4096A2  +
mov eax [ebp+var_3C] +
lea esi [ebx+1] +
lea ecx ds:0[esi*4] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_409698  +
mov ebx esi +
mov esi eax +
mov ecx 3 +
mov edi offset aE +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4096A2  +
cmp byte ptr [eax] 2Dh +
jz loc_4096B0  +
mov ecx 7 +
mov edi offset aQuiet +
mov esi eax +
cmps   +
setnbe dl  +
setb cl  +
cmp dl cl +
jnz loc_409630  +
mov [ebp+var_40] 1 +
jmp loc_409640  +
mov eax [ebp+var_40] +
mov edx [ebp+var_3C] +
test eax eax +
jnz loc_4096C4  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [eax+1] 6Fh +
jnz loc_409677  +
cmp [ebp+var_44] 0FFFFFFFFh +
jnz loc_4096A2  +
mov [ebp+var_44] ebx +
jmp loc_409640  +
cmp [ebp+var_44] 0FFFFFFFFh +
jz loc_4096A2  +
xor eax eax +
mov [ebp+eax+var_30] 0 +
add eax 4 +
cmp eax 18h +
jb loc_4096CC  +
lea edi ds:14h[ebx*4] +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
mov [ebp+var_3C] ecx +
call sub_470810  +
sub esp eax +
lea esi [esp+68h+var_4D] +
and esi 0FFFFFFF0h +
lea eax [edi-0Ch] +
mov [esp+68h+var_64] edx +
mov [esp+68h+var_60] eax +
mov [esp+68h+var_68] esi +
mov [ebp+var_4D+1] eax +
call memcpy  +
mov edx [ebp+var_44] +
lea eax [ebx+3] +
mov ecx [ebp+var_3C] +
mov [ebp+var_40] eax +
lea eax [esi+edi-8] +
mov [ebp-50h] eax +
shl edx 2 +
mov dword ptr [esi+ecx] offset aFrandomSeed0 +
mov dword ptr [esi+edi-0Ch] offset aFdumpNoaddr +
mov dword ptr [eax] 0 +
lea eax [esi+edx] +
mov ecx [eax] +
cmp byte ptr [ecx+2] 0 +
jnz loc_4097F6  +
mov dword ptr [esi+edx+4] offset asc_4892E9 +
xor ebx ebx +
mov [esp+68h+var_68] offset a_out +
call sub_45BDB0  +
mov [esp+68h+var_68] offset a_err +
mov [ebp+ebx*4+var_30] eax +
call sub_45BDB0  +
mov edx [ebp+ebx*4+var_30] +
mov ecx eax +
mov [ebp+ebx*4+var_24] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] eax +
mov eax esi +
call sub_409490  +
cmp eax 2 +
jnz loc_409932  +
add ebx 1 +
cmp ebx 3 +
jnz loc_409754  +
mov ebx [ebp+var_30] +
mov edx [ebp+var_2C] +
mov eax ebx +
call sub_4028C0  +
test al al +
jnz loc_409801  +
mov eax ds:_iob +
mov [esp+68h+var_64] offset aTheBugIsNotRep +
add eax 40h +
mov [esp+68h+var_68] eax +
call sub_423FF0  +
lea esi [ebp+var_30] +
lea edi [ebp+var_18] +
jmp loc_4097D4  +
mov ebx [esi] +
test ebx ebx +
jz loc_4097EA  +
mov ebx [esi] +
mov [esp+68h+var_68] ebx +
call _unlink  +
mov [esp+68h+var_68] ebx +
call free  +
add esi 4 +
cmp esi edi +
jnz loc_4097D2  +
jmp loc_4096A2  +
mov dword ptr [eax] offset aO +
jmp loc_409752  +
mov edx [ebp+var_20] +
mov eax [ebp+var_24] +
call sub_4028C0  +
test al al +
jz loc_4097B2  +
mov eax [ebp+var_28] +
mov edx eax +
mov edi eax +
mov [ebp+var_48] eax +
mov eax [ebp+var_1C] +
call sub_402A80  +
mov [esp+68h+var_64] 0Ah +
mov [esp+68h+var_68] edi +
call _open_0  +
test eax eax +
mov [ebp+var_44] eax +
js loc_4097CA  +
mov eax [ebp+var_44] +
xor edi edi +
mov [esp+68h+var_60] 3 +
mov [esp+68h+var_64] offset asc_48AE8C +
mov [esp+68h+var_68] eax +
call _write  +
mov [ebp+var_54] ebx +
mov ebx [ebp+var_44] +
mov [ebp+var_3C] esi +
nop   +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_64] offset asc_4890EA +
mov [esp+68h+var_68] ebx +
call _write  +
mov eax [ebp+var_3C] +
mov esi [eax+edi*4] +
add edi 1 +
mov [esp+68h+var_68] esi +
call strlen  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_60] eax +
call _write  +
cmp [ebp+var_40] edi +
jg loc_409860  +
mov edi [ebp+var_44] +
mov [esp+68h+var_60] 2 +
mov esi [ebp+var_3C] +
mov [esp+68h+var_64] offset asc_48AE90 +
mov ebx [ebp+var_54] +
mov [esp+68h+var_68] edi +
call _write  +
mov [esp+68h+var_68] edi +
call _close_0  +
mov eax [ebp-50h] +
mov edx [ebp+var_48] +
mov dword ptr [eax] offset aE +
mov eax [ebp+var_4D+1] +
mov ecx edx +
mov dword ptr [esi+eax+8] 0 +
mov eax esi +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] 0 +
call sub_409490  +
cmp eax 1 +
jnz loc_4097CA  +
mov eax ds:_iob +
mov edi [ebp+var_48] +
mov [esp+68h+var_64] offset aPreprocessedSo +
add eax 40h +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_60] edi +
call sub_423FF0  +
mov [esp+68h+var_68] edi +
call free  +
mov [ebp+var_28] 0 +
jmp loc_4097CA  +
mov eax ds:_iob +
mov [esp+68h+var_64] offset aTheBugIsNotRep +
add eax 40h +
mov [esp+68h+var_68] eax +
call sub_423FF0  +
mov ebx [ebp+var_30] +
jmp loc_4097CA  +
***
push edi  +
push edi  +
sub esp 1Ch +
mov edx ds:dword_4D7114 +
test edx edx +
jz loc_40C004  +
mov dword ptr [edx+4] 0 +
xor edx edx +
xor ecx ecx +
mov ds:dword_4D7080 0 +
mov ds:dword_4D707C 0 +
mov ds:dword_4D7078 0 +
mov ds:dword_4D7074 0 +
mov ds:dword_4D7070 0 +
mov ds:dword_4D706C 0 +
mov ds:dword_4D7068 0 +
call sub_40A640  +
mov edx ds:dword_4D7080 +
test edx edx +
jz loc_40C06A  +
mov [esp+1Ch+var_10] eax +
call sub_4069B0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
test eax eax +
jz loc_40C1CC  +
mov eax [eax+4] +
test eax eax +
jz loc_40C1CC  +
mov eax [esi+8] +
xor ecx ecx +
mov edx 1 +
mov ebx 1 +
call sub_40A640  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
jmp loc_40C1C7  +
mov eax [esi+ebx*4+8] +
xor ecx ecx +
mov edx 1 +
add ebx 1 +
call sub_40A640  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
cmp [esi+4] ebx +
ja loc_40C1A6  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax ds:dword_4D70E4 +
shl ebp 4 +
add eax ebp +
test byte ptr [eax+8] 4 +
jnz loc_40C298  +
test edx edx +
jz loc_40C2C0  +
mov edi [eax+4] +
test edi edi +
jz loc_40C280  +
mov ebx [edi] +
test ebx ebx +
jz loc_40C280  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov eax ds:dword_4D7068 +
test eax eax +
jz loc_40C2B0  +
mov [esp+28h+var_28] ebx +
call strlen  +
test eax eax +
jz loc_40C2A0  +
sub eax 1 +
movzx edx byte ptr [ebx+eax] +
lea esi [ebx+eax] +
cmp dl 5Ch +
jz loc_40C2A0  +
cmp dl 2Fh +
jz loc_40C2A0  +
cmp dl 2Eh +
jnz loc_40C235  +
mov byte ptr [esi] 0 +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
mov byte ptr [esi] 2Eh +
mov eax ds:dword_4D7068 +
xor ecx ecx +
mov edx 1 +
call sub_40A640  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_40C212  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
mov byte ptr [eax+ebp+0Dh] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
jmp loc_40C266  +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
jmp loc_40C277  +
xor ecx ecx +
mov eax offset asc_4892E9 +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
xor ecx ecx +
mov edx 1 +
mov eax [eax+ebp] +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
add eax ebp +
jmp loc_40C205  +
***
push esi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 6Ch +
mov [esp+74h+var_44] eax +
mov [esp+74h+var_3E] 0 +
mov byte ptr [esp+74h+var_58] 0 +
mov [esp+74h+var_3F] 1 +
mov byte ptr [esp+74h+var_54] 0 +
mov byte ptr [esp+74h+var_5C] 0 +
mov [esp+74h+var_40] 0 +
mov [esp+74h+var_48] 0 +
mov [esp+74h+var_50] 0 +
mov byte ptr [esp+74h+var_15] 0 +
movzx eax byte ptr [edi] +
cmp al 20h +
jnz loc_40C8AB  +
nop   +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40C6F0  +
cmp al 20h +
jz loc_40C6F0  +
cmp al 21h +
mov byte ptr [esp+74h+var_64] 0 +
jz loc_40C9C1  +
movzx eax byte ptr [edi] +
cmp al 20h +
jnz loc_40C9D4  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40C716  +
cmp al 20h +
jz loc_40C716  +
cmp al 25h +
jz loc_40C984  +
cmp al 2Eh +
nop   +
jz loc_40C9F2  +
xor ebx ebx +
cmp al 2Ch +
mov byte ptr [esp+74h+var_60] 0 +
jz loc_40C8B8  +
mov esi edi +
jmp loc_40C753  +
add esi 1 +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:word_4D0620[edx+edx] 204h +
jnz loc_40C750  +
lea edx [eax-2Bh] +
cmp dl 3 +
jbe loc_40C750  +
cmp al 3Dh +
jz loc_40C750  +
cmp al 40h +
jz loc_40C750  +
xor ecx ecx +
cmp al 2Ah +
mov ebp esi +
jz loc_40C9E1  +
cmp al 20h +
jnz loc_40C9B4  +
lea esi [esi+0] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 9 +
jz loc_40C790  +
cmp al 20h +
jz loc_40C790  +
cmp al 3Ah +
jz loc_40C8C5  +
jle loc_40C97A  +
cmp al 7Ch +
nop   +
jz loc_40C8C5  +
cmp al 7Dh +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_5C] 0 +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_58] 0 +
jnz loc_40C955  +
test bl bl +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_64] 0 +
jnz loc_40C955  +
cmp edi esi +
jz loc_40C955  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40C955  +
movzx eax cl +
mov ecx 0FFFFFFFFh +
sub esi edi +
test eax eax +
mov [esp+74h+var_60] eax +
mov eax ecx +
cmovnz eax esi +
xor ebx ebx +
mov [esp+74h+var_5C] eax +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_40C87F  +
mov [esp+74h+var_64] edi +
mov [esp+74h+var_58] ebp +
mov ebp ebx +
mov eax [esp+74h+var_64] +
shl ebp 4 +
add ebp ds:dword_4D70E4 +
mov edi [ebp+0] +
mov [esp+74h+var_6C] esi +
mov [esp+74h+var_70] eax +
mov [esp+74h+var_74] edi +
call strncmp  +
test eax eax +
jnz loc_40C870  +
mov eax [esp+74h+var_60] +
test eax eax +
jnz loc_40C85A  +
cmp byte ptr [edi+esi] 0 +
jnz loc_40C870  +
mov edx [esp+74h+var_5C] +
mov eax ebx +
call sub_401870  +
test eax eax +
jz loc_40C870  +
mov byte ptr [ebp+0Eh] 1 +
lea esi [esi+0] +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jl loc_40C826  +
mov ebp [esp+74h+var_58] +
cmp byte ptr [ebp+0] 7Dh +
jz loc_40CB9B  +
lea edi [ebp+1] +
mov byte ptr [esp+74h+var_15] 0 +
movzx eax byte ptr [edi] +
mov byte ptr [esp+74h+var_58] 0 +
mov [esp+74h+var_40] 1 +
mov byte ptr [esp+74h+var_5C] 0 +
cmp al 20h +
jz loc_40C6F0  +
cmp al 9 +
jz loc_40C6F0  +
jmp loc_40C6FE  +
add edi 1 +
mov byte ptr [esp+74h+var_60] 1 +
jmp loc_40C745  +
cmp [esp+74h+var_40] 0 +
jnz loc_40C955  +
cmp edi esi +
setz byte ptr [esp+74h+var_5C]  +
test edi edi +
setnz dl  +
and dl byte ptr [esp+74h+var_5C] +
mov byte ptr [esp+74h+var_5C] dl +
jz loc_40CA04  +
cmp byte ptr [esp+74h+var_58] 0 +
jz loc_40C955  +
cmp byte ptr [esp+74h+var_54] 0 +
jnz loc_40C955  +
cmp al 7Ch +
jz loc_40C955  +
test bl bl +
nop   +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_64] 0 +
jnz loc_40C955  +
test cl cl +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40C955  +
movzx eax [esp+74h+var_3E] +
mov [esp+74h+var_3F] 0 +
mov byte ptr [esp+74h+var_4C] 1 +
xor eax 1 +
mov byte ptr [esp+74h+var_54] al +
movzx ecx byte ptr [ebp+0] +
mov byte ptr [esp+74h+var_5C] 1 +
cmp cl 3Ah +
jz loc_40CB3B  +
cmp cl 7Dh +
lea edi [ebp+1] +
jz loc_40CD5A  +
cmp byte ptr [esp+74h+var_4C] 0 +
jz loc_40C6DB  +
mov ebp edi +
movsx eax byte ptr [ebp+0] +
mov [esp+74h+var_70] offset aBracedSpecQsIs +
mov [esp+74h+var_68] eax +
mov eax [esp+74h+var_44] +
mov [esp+74h+var_6C] eax +
mov eax ds:dword_4D9188 +
mov [esp+74h+var_74] eax +
call sub_4255A0  +
cmp al 26h +
jz loc_40C7BE  +
jmp loc_40C955  +
xor ebx ebx +
cmp byte ptr [edi+1] 3Ah +
mov byte ptr [esp+74h+var_60] 0 +
jnz loc_40C745  +
lea eax [edi+2] +
xor esi esi +
lea edx [esp+74h+var_15] +
xor edi edi +
call sub_40C2F0  +
xor ecx ecx +
mov ebp eax +
movzx eax byte ptr [eax] +
cmp al 20h +
jz loc_40C790  +
cmp al 9 +
jz loc_40C790  +
jmp loc_40C79F  +
add edi 1 +
movzx eax byte ptr [edi] +
mov byte ptr [esp+74h+var_64] 1 +
cmp al 20h +
jz loc_40C716  +
cmp al 9 +
jz loc_40C716  +
jmp loc_40C724  +
lea ebp [esi+1] +
movzx eax byte ptr [esi+1] +
mov ecx 1 +
jmp loc_40C781  +
add edi 1 +
mov ebx 1 +
mov byte ptr [esp+74h+var_60] 0 +
jmp loc_40C745  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40CA13  +
test bl bl +
jz loc_40CAAF  +
test cl cl +
jnz loc_40C955  +
mov [esp+74h+var_3F] 0 +
movzx edx [esp+74h+var_3E] +
movzx eax byte ptr [esp+74h+var_54] +
mov byte ptr [esp+74h+var_4C] 0 +
xor edx 1 +
xor eax 1 +
and dl al +
mov [esp+74h+var_3D] dl +
jz loc_40C92A  +
test edi edi +
jz loc_40CEB1  +
test bl bl +
jnz loc_40CAC2  +
cmp byte ptr [esp+74h+var_60] 0 +
jz loc_40CD64  +
mov eax ds:dword_4D7084 +
test eax eax +
jz loc_40CEBF  +
mov edx [eax] +
xor ebx ebx +
test edx edx +
jz loc_40CAA5  +
cmp byte ptr [edx] 0 +
jz loc_40CAA5  +
mov ecx esi +
sub ecx edi +
lea eax [edx+1] +
mov [esp+74h+var_6C] ecx +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] eax +
mov [esp+74h+var_5C] ecx +
mov [esp+74h+var_60] edx +
call strncmp  +
mov edx [esp+74h+var_60] +
mov ecx [esp+74h+var_5C] +
test eax eax +
jnz loc_40CAA5  +
cmp byte ptr [edx+ecx+1] 0 +
setz bl  +
mov byte ptr [esp+74h+var_15] bl +
mov byte ptr [esp+74h+var_5C] bl +
jmp loc_40CB01  +
movzx eax [esp+74h+var_3F] +
test cl cl +
cmovz eax ebx +
mov [esp+74h+var_3F] al +
jmp loc_40CA20  +
mov ebx ds:dword_4D708C +
test ebx ebx +
jz loc_40CF25  +
mov ecx esi +
sub ecx edi +
mov [esp+74h+var_6C] ecx +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] ebx +
mov [esp+74h+var_60] ecx +
call strncmp  +
xor edx edx +
mov ecx [esp+74h+var_60] +
test eax eax +
jnz loc_40CAF9  +
cmp byte ptr [ebx+ecx] 0 +
setz dl  +
mov byte ptr [esp+74h+var_15] dl +
mov byte ptr [esp+74h+var_5C] dl +
movzx eax byte ptr [esp+74h+var_5C] +
movzx ecx byte ptr [esp+74h+var_64] +
mov byte ptr [esp+74h+var_4C] 0 +
mov byte ptr [esp+74h+var_5C] 1 +
cmp cl al +
movzx ecx byte ptr [ebp+0] +
cmovz esi [esp+74h+var_48] +
cmovz edi [esp+74h+var_50] +
setnz byte ptr [esp+74h+var_54]  +
cmp cl 3Ah +
mov [esp+74h+var_48] esi +
mov [esp+74h+var_50] edi +
jnz loc_40C93C  +
movzx eax [esp+74h+var_3E] +
lea edi [ebp+1] +
xor ebx ebx +
movzx edx byte ptr [ebp+1] +
mov ecx 1 +
mov ebp edi +
mov esi 1 +
xor eax 1 +
and al byte ptr [esp+74h+var_54] +
jmp loc_40CB8D  +
cmp dl 7Dh +
jz loc_40CC00  +
cmp dl 3Bh +
jz loc_40CC50  +
cmp dl 25h +
jz loc_40CC60  +
test dl dl +
lea esi [esi+0] +
jz loc_40CEF1  +
movzx edx byte ptr [ebp+1] +
add ebp 1 +
cmp dl 7Bh +
jnz loc_40CB60  +
add ecx 1 +
movzx edx byte ptr [ebp+1] +
jmp loc_40CB8A  +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_40CF1A  +
xor ebx ebx +
jmp loc_40CBB7  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_40CBE0  +
mov eax ebx +
shl eax 4 +
add eax ds:dword_4D70E4 +
cmp byte ptr [eax+0Eh] 0 +
jz loc_40CBAC  +
mov byte ptr [eax+0Eh] 0 +
xor edx edx +
mov eax ebx +
call sub_40C1E0  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jl loc_40CBB7  +
movzx ecx byte ptr [ebp+0] +
mov byte ptr [esp+74h+var_58] 0 +
mov byte ptr [esp+74h+var_5C] 0 +
mov [esp+74h+var_40] 1 +
mov byte ptr [esp+74h+var_4C] 0 +
jmp loc_40C93C  +
sub ecx 1 +
jnz loc_40CB86  +
mov esi 7Dh +
movzx edx byte ptr [ebp-1] +
cmp dl 20h +
jnz loc_40CF0A  +
mov edx ebp +
sub edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 9 +
jz loc_40CC19  +
cmp cl 20h +
jz loc_40CC19  +
test bl bl +
jnz loc_40CEE6  +
test al al +
mov ecx esi +
jnz loc_40CC78  +
cmp cl 3Bh +
jz loc_40CD25  +
mov byte ptr [esp+74h+var_5C] 1 +
jmp loc_40C93C  +
cmp ecx 1 +
jnz loc_40CB86  +
mov esi 3Bh +
jmp loc_40CC0A  +
movzx edx byte ptr [ebp+1] +
cmp dl 2Ah +
jnz loc_40CB8A  +
cmp ecx 1 +
cmovz ebx esi +
jmp loc_40CB8A  +
sub edx edi +
mov eax edi +
call sub_4015C0  +
test bl bl +
mov edi eax +
jz loc_40CEC6  +
mov eax ds:dword_4D70E0 +
mov esi [esp+74h+var_48] +
sub esi [esp+74h+var_50] +
test eax eax +
jle loc_40CD14  +
xor ebx ebx +
mov [esp+74h+var_64] ebp +
jmp loc_40CCAF  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_40CD10  +
mov eax [esp+74h+var_50] +
mov ebp ebx +
shl ebp 4 +
add ebp ds:dword_4D70E4 +
mov [esp+74h+var_6C] esi +
mov [esp+74h+var_70] eax +
mov eax [ebp+0] +
mov [esp+74h+var_74] eax +
call strncmp  +
test eax eax +
jnz loc_40CCA4  +
mov edx esi +
mov eax ebx +
call sub_401870  +
test eax eax +
jz loc_40CCA4  +
mov ecx [ebp+0] +
xor edx edx +
mov eax edi +
add ecx esi +
call sub_40A640  +
test eax eax +
js loc_40CED7  +
mov edx 1 +
mov eax ebx +
call sub_40C1E0  +
mov ds:dword_4D7068 0 +
jmp loc_40CCA4  +
mov ebp [esp+74h+var_64] +
mov [esp+74h+var_74] edi +
call free  +
movzx ecx byte ptr [ebp+0] +
jmp loc_40CC38  +
movzx eax byte ptr [esp+74h+var_54] +
lea edi [ebp+1] +
or [esp+74h+var_3E] al +
mov byte ptr [esp+74h+var_58] 1 +
mov [esp+74h+var_3F] 1 +
mov byte ptr [esp+74h+var_54] 0 +
mov byte ptr [esp+74h+var_5C] 1 +
mov [esp+74h+var_48] 0 +
mov [esp+74h+var_50] 0 +
jmp loc_40C948  +
mov eax edi +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax cl +
mov ebx 0FFFFFFFFh +
mov ecx eax +
mov [esp+74h+var_4C] eax +
mov eax esi +
sub eax edi +
test ecx ecx +
mov ecx ebx +
mov ebx ds:dword_4D70E4 +
cmovnz ecx eax +
mov [esp+74h+var_3C] ecx +
mov ecx ds:dword_4D70E0 +
mov [esp+74h+var_54] eax +
sub eax 1 +
mov [esp+74h+var_34] eax +
lea eax [edi+1] +
mov [esp+74h+var_60] 0 +
test ecx ecx +
mov [esp+74h+var_38] ecx +
mov [esp+74h+var_30] eax +
jg loc_40CDCA  +
jmp loc_40CEA3  +
add [esp+74h+var_60] 1 +
add ebx 10h +
mov eax [esp+74h+var_38] +
cmp [esp+74h+var_60] eax +
jz loc_40CEA3  +
mov edx [ebx] +
mov eax [esp+74h+var_54] +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] edx +
mov [esp+74h+var_6C] eax +
mov [esp+74h+var_2C] edx +
call strncmp  +
mov edx [esp+74h+var_2C] +
test eax eax +
jnz loc_40CE13  +
mov eax [esp+74h+var_4C] +
test eax eax +
jnz loc_40CDFE  +
mov eax [esp+74h+var_54] +
cmp byte ptr [edx+eax] 0 +
jnz loc_40CE13  +
mov edx [esp+74h+var_3C] +
mov eax [esp+74h+var_60] +
call sub_401870  +
test eax eax +
jnz loc_40CE9A  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_40CDB4  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
cmp al 55h +
jz loc_40CE27  +
cmp al 44h +
jnz loc_40CDB4  +
cmp al [edi] +
jnz loc_40CDB4  +
mov eax [esp+74h+var_34] +
mov ecx [ecx] +
mov [esp+74h+var_28] edx +
mov [esp+74h+var_6C] eax +
mov eax [esp+74h+var_30] +
mov [esp+74h+var_74] ecx +
mov [esp+74h+var_2C] ecx +
mov [esp+74h+var_70] eax +
call strncmp  +
mov ecx [esp+74h+var_2C] +
mov edx [esp+74h+var_28] +
test eax eax +
jnz loc_40CDB4  +
mov eax [esp+74h+var_4C] +
test eax eax +
jnz loc_40CE84  +
cmp byte ptr [edx+1] 0 +
jnz loc_40CDB4  +
mov eax [esp+74h+var_54] +
mov edx 0FFFFFFFFh +
cmp byte ptr [ecx+eax-1] 0 +
jz loc_40CE89  +
jmp loc_40CDB4  +
mov edx 1 +
mov eax [esp+74h+var_60] +
call sub_401870  +
test eax eax +
jz loc_40CDB4  +
movzx eax [esp+74h+var_3D] +
mov byte ptr [esp+74h+var_5C] al +
movzx eax byte ptr [esp+74h+var_5C] +
mov byte ptr [esp+74h+var_15] al +
jmp loc_40CB01  +
movzx eax byte ptr [esp+74h+var_15] +
mov byte ptr [esp+74h+var_5C] al +
jmp loc_40CB01  +
xor ebx ebx +
jmp loc_40CAA5  +
xor ecx ecx +
xor edx edx +
call sub_40A640  +
test eax eax +
jns loc_40CD14  +
mov [esp+74h+var_74] edi +
call free  +
xor eax eax +
jmp loc_40CD5C  +
cmp [esp+74h+var_3F] 1 +
jz loc_40CC32  +
mov eax ds:dword_4D9188 +
mov [esp+74h+var_6C] edi +
mov [esp+74h+var_70] offset aBracedSpecBody +
mov [esp+74h+var_74] eax +
call sub_4255A0  +
cmp dl 9 +
jz loc_40CC17  +
mov edx ebp +
jmp loc_40CC2A  +
lea eax [ebp+1] +
lea esi [esi+0] +
jmp loc_40CD5C  +
xor edx edx +
jmp loc_40CAF9  +
***
sub esp 1Ch +
push ebx  +
push ebx  +
sub esp 50h +
call sub_40BFF0  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov edx ds:dword_4D70E0 +
mov eax ds:dword_4D70E4 +
mov ecx edx +
shl ecx 4 +
add ecx eax +
test edx edx +
jle loc_40D295  +
nop   +
mov edx [eax+8] +
test dl 4 +
jz loc_40D28E  +
or edx 8 +
mov [eax+8] edx +
add eax 10h +
cmp eax ecx +
jnz loc_40D280  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40D430  +
mov eax [eax+4] +
test eax eax +
jz loc_40D430  +
lea eax ds:4[eax*4] +
mov [esp+50h+var_50] eax +
call sub_4529F0  +
mov esi ds:dword_4D7114 +
test esi esi +
mov ebx eax +
mov dword ptr [eax] offset unk_489040 +
jz loc_40D487  +
mov edi [esi+4] +
lea edx [esi+8] +
lea eax [eax+4] +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
lea ecx ds:0[edi*4] +
mov [esp+50h+var_48] ecx +
call memcpy  +
mov edx [esi+4] +
add edx 1 +
lea eax [esp+50h+var_2C] +
mov esi 1 +
mov [esp+50h+var_40] eax +
lea eax [esp+50h+var_30] +
mov [esp+50h+var_44] eax +
mov [esp+50h+var_4C] ebx +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_48] 80000h +
call sub_41C8F0  +
mov [esp+50h+var_50] ebx +
mov ebx 2Ch +
call free  +
cmp [esp+50h+var_2C] 1 +
mov [esp+50h+var_28] offset sub_403120 +
mov [esp+50h+var_24] offset loc_403240 +
mov [esp+50h+var_1C] 3 +
mov [esp+50h+var_18] offset sub_404200 +
mov [esp+50h+var_14] 80000h +
mov [esp+50h+var_10] offset sub_41A4B0 +
mov [esp+50h+var_C] 200000h +
mov [esp+50h+var_8] offset loc_4191B0 +
mov [esp+50h+var_4] 100000h +
jbe loc_40D40A  +
mov edx [esp+50h+var_30] +
add edx ebx +
mov eax [edx] +
cmp eax 4A1h +
jz loc_40D3DA  +
jbe loc_40D3D0  +
cmp eax 503h +
jnz loc_40D437  +
mov eax [edx+8] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_40D472  +
mov [esp+50h+var_48] eax +
mov eax ds:dword_4D9188 +
mov [esp+50h+var_4C] offset aSwitchQsDoesNo +
mov [esp+50h+var_50] eax +
call sub_4255A0  +
lea esi [esi+0] +
sub eax 221h +
cmp eax 2 +
ja loc_40D437  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+50h+var_4C] 1 +
mov [esp+50h+var_50] 0 +
sub edx 1 +
call sub_403050  +
add esi 1 +
add ebx 2Ch +
cmp [esp+50h+var_2C] esi +
ja loc_40D381  +
mov eax [esp+50h+var_30] +
mov [esp+50h+var_50] eax +
call free  +
call sub_402FF0  +
mov eax ds:dword_4D70E0 +
shl eax 4 +
add eax ds:dword_4D70E4 +
mov dword ptr [eax] 0 +
nop   +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax off_483600 +
mov [esp+50h+var_40] 80000h +
mov [esp+50h+var_44] 0 +
mov [esp+50h+var_48] edx +
mov [esp+50h+var_38] eax +
lea eax [esp+50h+var_28] +
mov [esp+50h+var_3C] eax +
mov [esp+50h+var_4C] offset unk_4D7740 +
mov [esp+50h+var_50] offset unk_4D8400 +
call sub_41E570  +
jmp loc_40D3FA  +
mov eax ds:dword_4D9188 +
mov [esp+50h+var_4C] offset aSpecGeneratedS +
mov [esp+50h+var_50] eax +
call sub_4255A0  +
mov edx 1 +
jmp loc_40D2F8  +
***
jmp sub_40D4A0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
call sub_40BFF0  +
test eax eax +
jnz loc_40D504  +
mov edx ds:dword_4D7114 +
test edx edx +
jz loc_40D4E6  +
mov ebx [edx+4] +
test ebx ebx +
jz loc_40D4E6  +
lea ebp [ebx-1] +
mov ecx 2 +
mov esi [edx+ebp*4+8] +
mov edi offset asc_48AEE4 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_40D520  +
mov [esp+1Ch+var_10] eax +
call sub_405340  +
mov edx ds:dword_4D7114 +
mov eax [esp+1Ch+var_10] +
test edx edx +
jz loc_40D504  +
mov edx [edx+4] +
test edx edx +
jnz loc_40D510  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_409960  +
mov [edx+4] ebp +
jmp loc_40D4E6  +
***
push edi  +
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov [ebp+var_2C] ecx +
mov ecx [ecx] +
test ecx ecx +
jz loc_40DCB3  +
mov eax [ebp+var_2C] +
mov esi [eax+4] +
test esi esi +
jle loc_40DCA7  +
mov eax [ebp+var_2C] +
mov edx esi +
xor edi edi +
mov esi [ebp+arg_4] +
mov ebx [eax] +
jmp loc_40DC74  +
add edi 1 +
add ebx 10h +
cmp edi edx +
jz loc_40DCA7  +
cmp [ebx+8] esi +
jnz loc_40DC6A  +
mov [esp+48h+var_40] esi +
mov eax [ebx] +
mov [ebp+var_1C] edx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call strncmp  +
mov edx [ebp+var_1C] +
test eax eax +
jnz loc_40DC6A  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov edi ds:dword_4D7164 +
movzx edx byte ptr [edi] +
test dl dl +
jz loc_40DF58  +
mov ebx edx +
mov eax edi +
mov [ebp+var_1C] 0 +
xor ecx ecx +
cmp bl 3Bh +
setz cl  +
add eax 1 +
movzx ebx byte ptr [eax] +
add [ebp+var_1C] ecx +
test bl bl +
jnz loc_40DCCF  +
mov eax [ebp+var_1C] +
shl eax 4 +
add eax 10h +
call sub_470810  +
sub esp eax +
mov esi edx +
lea eax [esp+1Bh] +
mov ecx esi +
mov [ebp+var_20] eax +
mov edx edi +
and [ebp+var_20] 0FFFFFFF0h +
test cl cl +
mov ebx [ebp+var_20] +
jz loc_40DD99  +
cmp cl 20h +
mov eax edx +
mov [ebx] edx +
jnz loc_40DD28  +
jmp loc_40DF51  +
test cl cl +
jz loc_40DF66  +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 20h +
jnz loc_40DD20  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
lea ecx [eax+1] +
movzx eax byte ptr [eax+1] +
mov [ebx+8] edx +
mov [ebx+4] ecx +
test al al +
jz loc_40DF48  +
cmp al 3Bh +
jz loc_40DF48  +
cmp al 20h +
jz loc_40DF66  +
mov edx ecx +
jmp loc_40DD6E  +
cmp al 3Bh +
jz loc_40DD78  +
cmp al 20h +
jz loc_40DF66  +
add edx 1 +
movzx eax byte ptr [edx] +
test al al +
jnz loc_40DD62  +
mov esi edx +
sub esi ecx +
mov ecx esi +
cmp al 3Bh +
setz al  +
add ebx 10h +
movzx eax al +
add edx eax +
mov [ebx-4] ecx +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_40DD10  +
mov edx ds:dword_4D70E0 +
mov eax 1 +
test edx edx +
cmovnz eax edx +
add eax ds:dword_4D7060 +
shl eax 4 +
mov [esp+48h+var_48] eax +
call sub_4529F0  +
mov edx ds:dword_4D70E0 +
mov ecx [ebp+var_2C] +
mov esi ds:dword_4D70E4 +
mov [ebp+var_28] eax +
mov [ecx] eax +
mov eax edx +
shl eax 4 +
add eax esi +
test edx edx +
mov [ebp+var_24] eax +
jle loc_40DE6B  +
test byte ptr [esi+8] 4 +
jnz loc_40DE5F  +
mov eax [esi] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] eax +
call strlen  +
mov ecx eax +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40DE5F  +
mov ebx [ebp+var_20] +
xor edi edi +
jmp loc_40DE0E  +
add edi 1 +
add ebx 10h +
cmp edi [ebp+var_1C] +
jz loc_40DE5F  +
cmp [ebx+8] ecx +
jnz loc_40DE03  +
mov [esp+48h+var_40] ecx +
mov eax [ebx] +
mov [ebp+var_34] ecx +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_30] +
mov [esp+48h+var_48] eax +
call strncmp  +
mov ecx [ebp+var_34] +
test eax eax +
jnz loc_40DE03  +
mov edi [ebp+var_2C] +
mov edx [ebx+4] +
mov ebx [ebx+0Ch] +
mov ecx [edi+4] +
mov eax ecx +
add ecx 1 +
shl eax 4 +
add eax [ebp+var_28] +
mov [eax] edx +
mov [eax+8] ebx +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [edi+4] ecx +
add esi 10h +
cmp esi [ebp+var_24] +
jnz loc_40DDE0  +
mov edx ds:dword_4D7060 +
mov [ebp+var_30] 0 +
test edx edx +
jle loc_40DC52  +
mov eax off_4835B0 +
mov [ebp+var_20] eax +
mov eax [ebp+var_30] +
shl eax 3 +
mov [ebp+var_34] eax +
add eax ds:dword_4D7064 +
mov [ebp+var_28] eax +
mov eax [ebp+var_20] +
movzx eax byte ptr [eax] +
test al al +
mov byte ptr [ebp+var_24] al +
jz loc_40DFF0  +
cmp al 20h +
mov edx [ebp+var_20] +
jnz loc_40DEC2  +
add edx 1 +
movzx eax byte ptr [edx] +
cmp al 20h +
jz loc_40DEB2  +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_24] al +
mov eax [ebp+var_28] +
movzx ebx byte ptr [ebp+var_24] +
mov edi [ebp+var_20] +
mov esi [eax+4] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_44] eax +
call strncmp  +
test eax eax +
jnz loc_40DF07  +
movsx eax byte ptr [edi+esi] +
mov [esp+48h+var_48] offset asc_48B7B7 +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jnz loc_40DF8E  +
cmp bl 20h +
jz loc_40DF80  +
cmp bl 2Fh +
nop   +
jz loc_40DF80  +
test bl bl +
jz loc_40DFF0  +
mov eax edi +
lea esi [esi+0] +
jmp loc_40DF2F  +
cmp dl 20h +
jz loc_40DF3A  +
test dl dl +
jz loc_40DFF0  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 2Fh +
jnz loc_40DF22  +
cmp dl 2Fh +
jnz loc_40DF89  +
lea edi [eax+1] +
movzx ebx byte ptr [eax+1] +
jmp loc_40DED4  +
mov edx ecx +
xor ecx ecx +
jmp loc_40DD7E  +
xor edx edx +
jmp loc_40DD39  +
xor eax eax +
mov [ebp+var_1C] 0 +
jmp loc_40DCEA  +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aMultilibSpecQs +
mov [esp+48h+var_48] eax +
call sub_4255A0  +
nop   +
mov edx ebx +
mov eax edi +
cmp dl 2Fh +
jz loc_40DF3F  +
movzx ebx byte ptr [eax] +
mov edi eax +
test bl 0DFh +
jz loc_40E058  +
test byte ptr [ebp+var_24] 0DFh +
jz loc_40DFF0  +
mov edx [ebp+var_20] +
movzx eax byte ptr [ebp+var_24] +
cmp al 2Fh +
mov ebx edx +
jz loc_40E008  +
test al 0DFh +
jnz loc_40DFB4  +
jmp loc_40E008  +
test al 0DFh +
jz loc_40DFBE  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_40DFB0  +
mov eax ebx +
sub eax edx +
mov [esp+48h+var_44] eax +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_48] edx +
call sub_40DC40  +
sub esp 8 +
test eax eax +
jnz loc_40DFF0  +
cmp byte ptr [ebx] 2Fh +
jnz loc_40E00C  +
movzx eax byte ptr [ebx+1] +
lea edx [ebx+1] +
test al 0DFh +
jnz loc_40DFA4  +
lea esi [esi+0] +
add [ebp+var_30] 1 +
mov eax [ebp+var_30] +
cmp ds:dword_4D7060 eax +
jg loc_40DE80  +
jmp loc_40DC52  +
xor eax eax +
jmp loc_40DFC2  +
mov edi [ebp+var_2C] +
mov ecx [ebp+var_34] +
add ecx ds:dword_4D7064 +
add [ebp+var_30] 1 +
mov edx [edi+4] +
mov ebx [ecx] +
mov ecx [ecx+4] +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [edi] +
mov [eax] ebx +
mov [eax+8] ecx +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [ebp+var_30] +
cmp ds:dword_4D7060 eax +
mov [edi+4] edx +
jg loc_40DE80  +
jmp loc_40DC52  +
test bl bl +
jz loc_40DFF0  +
lea eax [edi+1] +
mov [ebp+var_20] eax +
jmp loc_40DE9A  +
***
push edi  +
push esi  +
mov esi offset off_48D100 +
push ebx  +
sub esp 3Ch +
mov edx [ecx+4] +
mov eax [ecx+8] +
call sub_405830  +
mov [esp+48h+var_48] 5A0h +
call sub_4529F0  +
mov edi eax +
test edi 1 +
mov ds:dword_4D714C eax +
mov eax 5A0h +
jnz loc_40EF36  +
test edi 2 +
jnz loc_40EF21  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_40E0D1  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_40E0DC  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_38] offset asc_48D8F1 +
mov [esp+48h+var_3C] offset unk_489040 +
mov [esp+48h+var_40] offset a7_3_0 +
mov [esp+48h+var_44] offset asc_48D8F1 +
mov [esp+48h+var_48] offset aAvr +
mov ds:dword_4D7148 47h +
call sub_452BE0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] offset asc_48D8F1 +
mov ds:dword_4D7138 eax +
mov eax off_4835AC +
mov [esp+48h+var_48] eax +
call sub_452BE0  +
mov ecx 4 +
mov edx offset aSpecs +
mov [esp+48h+var_48] 1 +
mov ds:dword_4D7134 eax +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
jz loc_40E174  +
mov edi offset aSpecs +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_40EF10  +
mov eax ds:dword_4D711C +
test eax eax +
jz loc_40EF52  +
mov edx ds:dword_4D7134 +
mov [esp+48h+var_48] edx +
mov [ebp+var_1C] edx +
call strlen  +
sub eax 0FFFFFF80h +
and eax 0FFFFFFF0h +
call sub_470810  +
mov esi offset aHomeJenkinsM_0 +
mov ecx 17h +
mov edx [ebp+var_1C] +
sub esp eax +
lea ebx [esp+2Bh] +
and ebx 0FFFFFFF0h +
mov edi ebx +
movs   +
lea eax [ebx+5Ch] +
mov edi 73h +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_45C210  +
mov dword ptr [eax] 63657073h +
mov [eax+4] di +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
call _access_0  +
test eax eax +
jz loc_40E9D5  +
xor ebx ebx +
mov eax ds:off_48D788[ebx*4] +
add ebx 1 +
call sub_40D250  +
cmp ebx 6 +
jnz loc_40E1EF  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40EC45  +
mov eax off_483544 +
cmp byte ptr [eax] 0 +
jz loc_40E229  +
mov esi ds:dword_4D84B4 +
test esi esi +
jz loc_40EBF3  +
mov ebx ds:dword_4D724C +
test ebx ebx +
jz loc_40E30E  +
mov eax ds:dword_4D720C +
mov edx ds:dword_4D7210 +
sub edx eax +
cmp edx 0Fh +
jbe loc_40EE3B  +
mov dword ptr [eax] 79732825h +
mov edi off_483580 +
mov dword ptr [eax+4] 6F6F7273h +
mov dword ptr [eax+8] 70735F74h +
mov dword ptr [eax+0Ch] 20296365h +
mov eax ds:dword_4D720C +
mov [esp+48h+var_48] edi +
lea ebx [eax+10h] +
mov ds:dword_4D720C ebx +
call strlen  +
lea edx [eax+1] +
mov esi eax +
mov eax ds:dword_4D7210 +
sub eax ebx +
cmp eax edx +
jb loc_40EE1A  +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call memcpy  +
add esi ds:dword_4D720C +
lea eax [esi+1] +
mov ds:dword_4D720C eax +
mov byte ptr [esi] 0 +
mov edx ds:dword_4D7208 +
mov eax ds:dword_4D720C +
cmp eax edx +
jz loc_40EE59  +
mov ecx ds:dword_4D7218 +
mov ebx ds:dword_4D7204 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D7210 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D720C eax +
mov edi ecx +
sub edi ebx +
cmp esi edi +
jbe loc_40E2FD  +
mov ds:dword_4D720C ecx +
mov eax ecx +
mov ds:dword_4D7208 eax +
xor ecx ecx +
mov eax offset aLink +
call sub_4020C0  +
mov eax off_483540 +
cmp byte ptr [eax] 0 +
jz loc_40E326  +
mov ecx ds:dword_4D84B4 +
test ecx ecx +
jz loc_40EB40  +
mov eax off_48354C +
cmp byte ptr [eax] 0 +
jnz loc_40EB88  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40E348  +
mov edi ds:dword_4D724C +
test edi edi +
jz loc_40E390  +
mov eax off_4834F4 +
cmp byte ptr [eax] 0 +
jnz loc_40EB21  +
mov eax off_4834F0 +
cmp byte ptr [eax] 0 +
jnz loc_40EB07  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40EAAB  +
mov edx offset aBinutils +
mov eax offset aLib +
call sub_403CA0  +
mov edx offset aBinutils +
mov eax offset aUsrLib +
call sub_403CA0  +
mov ebx ds:dword_4D7154 +
test ebx ebx +
jnz loc_40E3B2  +
jmp loc_40E3D4  +
xor edx edx +
mov ecx 1 +
call sub_408BF0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_40E3D4  +
mov edx [ebx+4] +
mov ecx 4 +
mov eax offset unk_483508 +
mov [esp+48h+var_48] 1 +
call sub_4038D0  +
test eax eax +
jnz loc_40E3A0  +
mov eax [ebx+4] +
jmp loc_40E3A0  +
mov ebx ds:dword_4D711C +
test ebx ebx +
jnz loc_40E3E7  +
jmp loc_40E40E  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40E40E  +
cmp dword ptr [ebx+10h] 9 +
jnz loc_40E3E0  +
mov esi [ebx] +
mov edi offset aSelf_spec +
mov ecx 0Ah +
cmps   +
jnz loc_40E3E0  +
mov eax [ebx+8] +
mov eax [eax] +
call sub_40D250  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40E3E7  +
mov eax ds:dword_4D703C +
test eax eax +
jz loc_40E45A  +
mov esi ds:dword_4D7038 +
test esi esi +
jz loc_40EA2A  +
mov ebx ds:dword_4D723C +
neg eax  +
mov ds:dword_4D703C eax +
mov eax offset aCompareDebugSe +
mov ds:dword_4D723C 0 +
call sub_40D250  +
mov ds:dword_4D723C ebx +
mov ebx ds:dword_4D7038 +
test ebx ebx +
jz loc_40E9E8  +
mov eax ds:dword_4D7130 +
test eax eax +
jz loc_40E4A0  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] offset asc_48D8F1 +
mov [esp+48h+var_38] offset unk_489040 +
mov [esp+48h+var_3C] offset a7_3_0 +
mov [esp+48h+var_40] offset asc_48D8F1 +
mov [esp+48h+var_44] offset aAvr +
mov [esp+48h+var_48] eax +
call sub_452BE0  +
mov ds:dword_4D7130 eax +
mov ebx ds:dword_4D714C +
mov eax [ebx+4] +
test eax eax +
jz loc_40E4E0  +
lea esi [esi+0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
test dl dl +
jz loc_40E4D6  +
lea esi [esi+0] +
cmp dl 25h +
movzx edx byte ptr [eax+1] +
jz loc_40E828  +
mov eax ecx +
test dl dl +
lea ecx [eax+1] +
jnz loc_40E4C0  +
add ebx 14h +
mov eax [ebx+4] +
test eax eax +
jnz loc_40E4B0  +
mov ebx ds:dword_4D711C +
test ebx ebx +
jz loc_40E51D  +
mov eax [ebx+8] +
movzx esi byte ptr [ebx+14h] +
mov eax [eax] +
movzx ecx byte ptr [eax] +
lea edx [eax+1] +
test cl cl +
jz loc_40E516  +
lea esi [esi+0] +
cmp cl 25h +
movzx ecx byte ptr [eax+1] +
jz loc_40E860  +
mov eax edx +
test cl cl +
lea edx [eax+1] +
jnz loc_40E500  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40E4EA  +
mov eax off_483554 +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
test dl dl +
jz loc_40E546  +
lea esi [esi+0] +
cmp dl 25h +
movzx edx byte ptr [eax+1] +
jz loc_40E892  +
mov eax ecx +
test dl dl +
lea ecx [eax+1] +
jnz loc_40E530  +
mov eax ds:dword_4D7160 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jnz loc_40EEFD  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jz loc_40E557  +
cmp dl 20h +
jz loc_40E557  +
xor ecx ecx +
test dl dl +
jz loc_40E5B5  +
add ecx 1 +
cmp dl 9 +
jz loc_40E598  +
cmp dl 20h +
jnz loc_40E58D  +
jmp loc_40E598  +
cmp dl 20h +
jz loc_40E598  +
test dl dl +
jz loc_40E8C5  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jnz loc_40E580  +
cmp dl 20h +
jnz loc_40EF5C  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jz loc_40E5A1  +
cmp dl 20h +
jz loc_40E5A1  +
test dl dl +
jnz loc_40E56D  +
test ecx ecx +
mov ds:dword_4D7060 ecx +
jnz loc_40EC91  +
mov ecx ds:dword_4D715C +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_40E665  +
cmp dl 0Ah +
mov eax 1 +
jz loc_40E657  +
nop   +
cmp dl 3Bh +
jz loc_40E64F  +
test dl dl +
jz loc_40E9B7  +
test eax eax +
nop   +
jz loc_40E8D0  +
cmp dl 20h +
mov ebx ecx +
jnz loc_40E60E  +
lea esi [esi+0] +
jmp loc_40E621  +
cmp al 20h +
jz loc_40E618  +
test al al +
jz loc_40E9B7  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Bh +
jnz loc_40E602  +
cmp dl 21h +
jz loc_40E8E0  +
mov eax ebx +
sub eax ecx +
mov [esp+48h+var_48] ecx +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] eax +
call sub_40DC40  +
mov ecx ebx +
sub esp 8 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jnz loc_40E5E0  +
movzx edx byte ptr [ebx+1] +
lea ecx [ebx+1] +
cmp dl 3Bh +
jnz loc_40E5E5  +
test eax eax +
jnz loc_40E9AF  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jnz loc_40E5D4  +
mov eax ds:dword_4D7168 +
mov [ebp+var_1C] eax +
mov eax ds:dword_4D7158 +
cmp byte ptr [eax] 0 +
jnz loc_40EFD0  +
mov [ebp+var_2C] 1 +
mov eax [ebp+var_1C] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40E993  +
cmp dl 0Ah +
jz loc_40EEA3  +
cmp dl 20h +
mov eax [ebp+var_1C] +
jnz loc_40E6AE  +
jmp loc_40EFBC  +
test dl dl +
jz loc_40EED6  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jnz loc_40E6A6  +
mov esi eax +
sub esi [ebp+var_1C] +
mov [ebp+var_28] esi +
movzx edx byte ptr [eax+1] +
lea esi [eax+1] +
mov edi 1 +
mov ecx 1 +
cmp dl 3Bh +
jz loc_40E77C  +
test dl dl +
jz loc_40EED6  +
test ecx ecx +
jz loc_40EE65  +
cmp dl 20h +
mov ebx esi +
jnz loc_40E706  +
jmp loc_40E719  +
cmp al 20h +
jz loc_40E710  +
test al al +
lea esi [esi+0] +
jz loc_40EED6  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Bh +
jnz loc_40E6F4  +
cmp dl 21h +
jz loc_40EE71  +
mov edx ebx +
mov ecx offset dword_4D7020 +
sub edx esi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] esi +
mov [ebp+var_20] edx +
call sub_40DC40  +
mov edx [ebp+var_20] +
mov [ebp+var_24] esi +
mov esi ebx +
sub esp 8 +
mov ecx eax +
test ecx ecx +
mov eax 0 +
cmovz edi eax +
mov eax [ebp+var_24] +
mov [ebp+var_20] ecx +
call sub_401DB0  +
mov ecx [ebp+var_20] +
movzx edx byte ptr [ebx] +
test eax eax +
mov eax 1 +
cmovnz ecx eax +
cmp dl 20h +
jnz loc_40E6D2  +
movzx edx byte ptr [ebx+1] +
lea esi [ebx+1] +
cmp dl 3Bh +
jnz loc_40E6DB  +
test ecx ecx +
jz loc_40E7ED  +
mov ecx [ebp+var_2C] +
test ecx ecx +
jz loc_40E7ED  +
cmp [ebp+var_28] 1 +
jnz loc_40E79C  +
mov eax [ebp+var_1C] +
mov [ebp+var_2C] 0 +
cmp byte ptr [eax] 2Eh +
jz loc_40E7ED  +
mov eax [ebp+var_28] +
add eax 1 +
mov [esp+48h+var_48] eax +
call sub_4529F0  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] ecx +
mov ebx eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call strncpy  +
mov eax [ebp+var_28] +
mov byte ptr [ebx+eax] 0 +
mov [esp+48h+var_44] 3Ah +
mov [esp+48h+var_48] ebx +
call strchr  +
test eax eax +
jz loc_40E7E0  +
mov byte ptr [eax] 0 +
mov ds:dword_4D7128 ebx +
mov [ebp+var_2C] 0 +
test edi edi +
jz loc_40E81D  +
mov edi [ebp+var_1C] +
mov eax [ebp+var_28] +
add eax edi +
cmp edi eax +
jnb loc_40E81D  +
cmp byte ptr [edi] 3Ah +
jz loc_40EFC8  +
mov edx edi +
jmp loc_40E816  +
cmp byte ptr [edx] 3Ah +
lea esi [esi+0] +
jz loc_40EEAC  +
add edx 1 +
cmp edx eax +
jnz loc_40E80A  +
lea eax [esi+1] +
mov [ebp+var_1C] eax +
jmp loc_40E682  +
cmp dl 3Ch +
jz loc_40E84B  +
cmp dl 7Bh +
jz loc_40E84B  +
cmp dl 57h +
jnz loc_40E4CD  +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
cmp dl 7Bh +
jnz loc_40E4CD  +
lea eax [ecx+1] +
xor edx edx +
call sub_401B70  +
jmp loc_40E4B0  +
cmp cl 3Ch +
jz loc_40E883  +
cmp cl 7Bh +
jz loc_40E883  +
cmp cl 57h +
jnz loc_40E50D  +
movzx ecx byte ptr [eax+2] +
lea edx [eax+2] +
cmp cl 7Bh +
jnz loc_40E50D  +
lea eax [edx+1] +
mov edx esi +
call sub_401B70  +
jmp loc_40E4F3  +
cmp dl 3Ch +
jz loc_40E8B6  +
cmp dl 7Bh +
jz loc_40E8B6  +
cmp dl 57h +
nop   +
jnz loc_40E53D  +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
cmp dl 7Bh +
jnz loc_40E53D  +
lea eax [ecx+1] +
xor edx edx +
call sub_401B70  +
jmp loc_40E522  +
xor edx edx +
jmp loc_40E569  +
movzx edx byte ptr [ecx+1] +
add ecx 1 +
jmp loc_40E5E0  +
add ecx 1 +
mov eax ebx +
sub eax ecx +
mov [esp+48h+var_48] ecx +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] eax +
call sub_40DC40  +
mov ecx ebx +
sub esp 8 +
test eax eax +
setz al  +
movzx eax al +
jmp loc_40E63B  +
cmp byte ptr [ebx] 3Ah +
jz loc_40E91B  +
add ebx 1 +
cmp ebx eax +
jnz loc_40E90A  +
cmp byte ptr [ebx] 3Ah +
jnz loc_40E91D  +
mov eax ebx +
sub eax [ebp+var_1C] +
cmp eax 1 +
mov esi eax +
jz loc_40EF6B  +
mov [esp+48h+var_48] eax +
call sub_4529F0  +
mov [esp+48h+var_44] edi +
mov ecx eax +
lea eax [esi-1] +
mov [esp+48h+var_48] ecx +
mov [esp+48h+var_40] eax +
mov [ebp+var_1C] ecx +
call memcpy  +
mov ecx [ebp+var_1C] +
mov byte ptr [ecx+esi-1] 0 +
mov ds:dword_4D7124 ecx +
cmp ebx [ebp+var_20] +
jnb loc_40E993  +
cmp byte ptr [ebx] 3Ah +
jnz loc_40E993  +
mov esi [ebp+var_20] +
sub esi ebx +
add ebx 1 +
mov [esp+48h+var_48] esi +
call sub_4529F0  +
mov [esp+48h+var_44] ebx +
mov edi eax +
lea eax [esi-1] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+esi-1] 0 +
mov ds:dword_4D7120 edi +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_40EF81  +
mov edx ds:dword_4D7124 +
test edx edx +
jnz loc_40E9AF  +
mov ds:dword_4D7124 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D715C +
mov [esp+48h+var_44] offset aMultilibExclus +
mov [esp+48h+var_40] eax +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_48] eax +
call sub_4255A0  +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_408BF0  +
jmp loc_40E1ED  +
mov eax ds:dword_4D70E0 +
neg ds:dword_4D703C  +
mov ds:dword_4D70D0 eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C8 eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70D8 eax +
mov eax ds:dword_4D70CC +
mov ds:dword_4D70E0 eax +
mov ds:dword_4D70DC eax +
mov eax ds:dword_4D70D4 +
mov ds:dword_4D70E4 eax +
jmp loc_40E45A  +
mov eax ds:dword_4D70E0 +
mov ds:dword_4D70D0 eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C8 eax +
shl eax 4 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] eax +
mov eax ds:dword_4D70E4 +
mov [esp+48h+var_48] eax +
call sub_45C250  +
mov ds:dword_4D70D8 eax +
mov eax offset aCompareDebugSe +
call sub_40D250  +
mov eax ds:dword_4D70E0 +
mov ds:dword_4D70CC eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C4 eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70D4 eax +
mov eax ds:dword_4D70D0 +
mov ds:dword_4D70E0 eax +
mov eax ds:dword_4D70C8 +
mov ds:dword_4D70DC eax +
mov eax ds:dword_4D70D8 +
mov ds:dword_4D70E4 eax +
mov eax ds:dword_4D703C +
jmp loc_40E425  +
mov edx ds:dword_4D7130 +
mov eax offset aHomeJenkinsM_0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] offset a______ +
test edx edx +
cmovnz eax edx +
mov edx ds:dword_4D7138 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_452BE0  +
xor ecx ecx +
mov [esp+48h+var_40] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 1 +
mov edx eax +
mov eax offset unk_483508 +
call sub_402B40  +
jmp loc_40E372  +
mov edx offset off_489406 +
call sub_403CA0  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jnz loc_40E372  +
jmp loc_40EAAB  +
mov edx offset off_489406 +
call sub_403CA0  +
mov eax off_4834F0 +
cmp byte ptr [eax] 0 +
jz loc_40E364  +
jmp loc_40EB07  +
call sub_40BFF0  +
test eax eax +
jnz loc_40E326  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E326  +
cmp dword ptr [eax+4] 1 +
ja loc_40EC80  +
jnz loc_40E326  +
mov eax [eax+8] +
mov [esp+48h+var_48] eax +
call sub_452AC0  +
mov ds:dword_4D7240 eax +
mov eax off_48354C +
cmp byte ptr [eax] 0 +
jz loc_40E334  +
call sub_40BFF0  +
test eax eax +
jnz loc_40E334  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
test eax eax +
jnz loc_40E334  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E390  +
mov edx [eax+4] +
test edx edx +
jz loc_40E390  +
xor edx edx +
xor ebx ebx +
jmp loc_40EBD2  +
cmp ebx [eax+4] +
jnb loc_40E390  +
mov eax [eax+edx*4+8] +
mov edx offset aBinutils +
add ebx 1 +
call sub_403CA0  +
mov eax ds:dword_4D7114 +
mov edx ebx +
test eax eax +
jnz loc_40EBC9  +
jmp loc_40E390  +
call sub_40BFF0  +
test eax eax +
lea esi [esi+0] +
jnz loc_40E229  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E229  +
cmp dword ptr [eax+4] 1 +
ja loc_40EC34  +
jnz loc_40E229  +
mov eax [eax+8] +
mov [esp+48h+var_48] eax +
call sub_452AC0  +
mov ds:dword_4D7244 eax +
jmp loc_40E229  +
mov [esp+48h+var_48] offset aSpecFailureMor +
call sub_4251D0  +
jmp loc_40E229  +
mov edx off_4834F8 +
cmp byte ptr [edx] 0 +
jz loc_40E211  +
mov [esp+48h+var_40] 0 +
mov ecx offset off_489406 +
mov eax offset unk_483514 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 1 +
call sub_402B40  +
jmp loc_40E211  +
mov [esp+48h+var_48] offset aSpecFailureM_0 +
call sub_4251D0  +
jmp loc_40E326  +
shl ecx 3 +
mov [esp+48h+var_48] ecx +
call sub_4529F0  +
mov edi ds:dword_4D7160 +
mov ds:dword_4D7064 eax +
movzx eax byte ptr [edi] +
test al al +
jz loc_40E5C3  +
cmp al 20h +
mov [ebp+var_1C] 0 +
jnz loc_40EDC9  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40ECC1  +
cmp al 20h +
jz loc_40ECC1  +
test al al +
jz loc_40E5C3  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 9 +
jnz loc_40ECEE  +
jmp loc_40ECF2  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_40ECF2  +
test al 0DFh +
jnz loc_40ECE4  +
mov eax ds:dword_4D718C +
mov esi ebx +
mov edx ds:dword_4D7190 +
sub esi edi +
sub edx eax +
cmp esi edx +
ja loc_40EDD6  +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call memcpy  +
mov eax ds:dword_4D718C +
add eax esi +
cmp ds:dword_4D7190 eax +
mov ds:dword_4D718C eax +
jz loc_40EDFC  +
lea edx [eax+1] +
mov ecx [ebp+var_1C] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D7188 +
add ecx ds:dword_4D7064 +
mov edi eax +
mov [ebp+var_24] eax +
mov eax ds:dword_4D718C +
mov [ebp+var_20] ecx +
cmp edi eax +
jz loc_40EDF0  +
mov edx ds:dword_4D7198 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov ecx eax +
sub ecx ds:dword_4D7184 +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ds:dword_4D7184 +
cmp ecx edi +
jbe loc_40ED95  +
mov ds:dword_4D718C edx +
mov eax edx +
mov ds:dword_4D7188 eax +
mov edi [ebp+var_24] +
mov eax [ebp+var_20] +
mov [eax] edi +
mov [eax+4] esi +
cmp byte ptr [ebx] 0 +
jz loc_40E5C3  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
add [ebp+var_1C] 8 +
test al al +
jz loc_40E5C3  +
cmp al 20h +
jz loc_40ECC1  +
cmp al 9 +
jz loc_40ECC1  +
jmp loc_40ECCF  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
jmp loc_40ED0B  +
or ds:byte_4D71A8 2 +
jmp loc_40ED62  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] offset unk_4D7180 +
call sub_458E00  +
mov eax ds:dword_4D718C +
jmp loc_40ED33  +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] offset unk_4D7200 +
call sub_458E00  +
mov edi off_483580 +
mov ebx ds:dword_4D720C +
jmp loc_40E298  +
mov [esp+48h+var_44] 10h +
mov [esp+48h+var_48] offset unk_4D7200 +
call sub_458E00  +
mov eax ds:dword_4D720C +
jmp loc_40E24D  +
or ds:byte_4D7228 2 +
jmp loc_40E2CC  +
movzx edx byte ptr [esi+1] +
add esi 1 +
jmp loc_40E6D2  +
lea eax [esi+1] +
mov edx ebx +
sub edx eax +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] edx +
mov esi ebx +
mov [esp+48h+var_48] eax +
mov [ebp+var_20] edx +
mov [ebp+var_24] eax +
call sub_40DC40  +
xor ecx ecx +
mov edx [ebp+var_20] +
sub esp 8 +
test eax eax +
setz cl  +
jmp loc_40E73E  +
add [ebp+var_1C] 1 +
jmp loc_40E682  +
mov [ebp+var_1C] edx +
mov [ebp+var_20] eax +
mov esi [ebp+var_1C] +
lea edi [esi+1] +
cmp edi eax +
mov ebx edi +
jnb loc_40E916  +
mov esi [ebp+var_1C] +
mov ebx edi +
cmp byte ptr [esi+1] 3Ah +
jnz loc_40E90F  +
jmp loc_40E91B  +
mov eax ds:dword_4D7158 +
mov [esp+48h+var_44] offset aMultilibSelect +
mov [esp+48h+var_3C] eax +
mov eax ds:dword_4D7168 +
mov [esp+48h+var_40] eax +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_48] eax +
call sub_4255A0  +
cmp dl 9 +
jz loc_40E557  +
jmp loc_40E567  +
xor ecx ecx +
mov edx 1 +
call sub_408BF0  +
jmp loc_40E181  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_40E0B9  +
movzx eax byte ptr ds:off_48D100 +
add edi 1 +
mov esi 48D101h +
mov [edi-1] al +
mov eax 59Fh +
jmp loc_40E0AD  +
call sub_402E30  +
jmp loc_40E181  +
cmp dl 9 +
nop   +
jz loc_40E5A1  +
jmp loc_40E569  +
mov [esp+48h+var_48] offset a__1 +
call sub_452AC0  +
mov ds:dword_4D7124 eax +
jmp loc_40E959  +
mov eax ds:dword_4D7124 +
test eax eax +
jz loc_40E9AF  +
mov edi offset a__1 +
mov ecx 2 +
mov esi eax +
cmps   +
jnz loc_40E9AF  +
mov [esp+48h+var_48] eax +
call free  +
mov ds:dword_4D7124 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_28] 0 +
jmp loc_40E6C1  +
mov [ebp+var_20] eax +
jmp loc_40EEB2  +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] eax +
call sub_452BE0  +
mov [ebp+var_1C] eax +
jmp loc_40E67B  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [ecx] +
mov [esp] eax +
call free  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
mov ecx offset byte_4D7268 +
push edi  +
push esi  +
mov esi 47h +
push ebx  +
sub esp 1Ch +
call loc_406640  +
call sub_41FEC0  +
mov eax off_483600 +
mov [esp] eax +
call sub_423A40  +
mov dword ptr [esp] offset unk_4D8400 +
mov ds:dword_4D7044 0 +
mov ds:byte_4D7264 0 +
mov ds:dword_4D7260 0 +
mov ds:dword_4D725C 0 +
mov ds:dword_4D7258 0 +
mov ds:dword_4D7254 0 +
mov ds:dword_4D7250 0 +
mov ds:dword_4D7040 0 +
mov ds:dword_4D724C 0 +
mov ds:dword_4D7248 0 +
mov ds:dword_4D7244 0 +
mov ds:dword_4D7240 0 +
mov ds:dword_4D723C 0 +
mov ds:dword_4D7238 0 +
mov ds:dword_4D7234 0 +
mov off_4835AC offset aAvr +
mov dword_4835A4 1 +
call loc_4193D0  +
mov dword ptr [esp] offset unk_4D7740 +
call loc_4193D0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_458F10  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset dword_4D90C0 +
call sub_458F10  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D71C0 +
call sub_458F10  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7180 +
mov off_483554 offset aFsyntaxOnlyCMM +
call sub_458F10  +
mov edi ds:dword_4D7148 +
mov ebp ds:dword_4D714C +
mov ds:dword_4D7154 0 +
mov ds:dword_4D7150 0 +
cmp edi 47h +
mov ebx ebp +
jle loc_40F1AE  +
mov eax [ebx+58Ch] +
add esi 1 +
add ebx 14h +
mov [esp] eax +
call free  +
mov eax [ebx+57Ch] +
mov [esp] eax +
call free  +
cmp esi edi +
jnz loc_40F188  +
mov [esp] ebp +
call free  +
mov eax ds:dword_4D7144 +
mov ds:dword_4D714C 0 +
mov ds:dword_4D7148 0 +
test eax eax +
jz loc_40F1DA  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D7140 +
test eax eax +
jz loc_40F1EA  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D713C +
test eax eax +
jz loc_40F1FA  +
mov dword ptr [eax+4] 0 +
mov edx offset unk_483518 +
mov eax offset unk_483514 +
call sub_402E80  +
mov edx offset unk_48350C +
mov eax offset unk_483508 +
call sub_402E80  +
mov edx offset unk_483500 +
mov eax offset unk_4834FC +
call sub_402E80  +
mov ebx ds:dword_4D711C +
mov ds:dword_4D7138 0 +
mov ds:dword_4D7134 0 +
mov ds:dword_4D7130 0 +
test ebx ebx +
mov ds:dword_4D712C 0 +
mov off_4834F8 offset unk_489040 +
mov off_4834F4 offset unk_489040 +
mov off_4834F0 offset unk_489040 +
mov ds:dword_4D7128 0 +
mov ds:dword_4D7124 0 +
mov ds:dword_4D7120 0 +
jz loc_40F2CF  +
cmp ebx offset off_483020 +
jnz loc_40F2A2  +
jmp loc_40F2C5  +
mov ebx esi +
mov eax [ebx] +
mov esi [ebx+0Ch] +
mov [esp] eax +
call free  +
mov [esp] ebx +
call free  +
cmp esi offset off_483020 +
mov ds:dword_4D711C esi +
jnz loc_40F2A0  +
mov ds:dword_4D711C 0 +
mov eax offset unk_483035 +
cmp byte ptr [eax] 0 +
jz loc_40F2DC  +
mov byte ptr [eax] 0 +
mov edx [eax-0Dh] +
add eax 1Ch +
mov ecx [eax-19h] +
cmp eax offset unk_483505 +
mov [edx] ecx +
jnz loc_40F2D4  +
mov eax ds:dword_4D7114 +
mov ds:dword_4D7118 0 +
test eax eax +
jz loc_40F308  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D7110 0 +
mov ds:dword_4D710C 0 +
mov ds:dword_4D7100 0 +
mov [esp] eax +
mov ds:dword_4D70FC 0 +
mov ds:dword_4D70F8 0 +
mov ds:dword_4D70F4 0 +
mov ds:dword_4D70F0 0 +
mov ds:dword_4D70EC 0 +
mov ds:dword_4D70E8 0 +
call free  +
mov eax ds:dword_4D70B8 +
mov ds:dword_4D70E4 0 +
mov ds:dword_4D70E0 0 +
mov ds:dword_4D70DC 0 +
mov [esp] eax +
mov ds:dword_4D703C 0 +
mov ds:dword_4D7038 0 +
mov ds:dword_4D7034 0 +
mov ds:dword_4D70D4 0 +
mov ds:dword_4D70CC 0 +
mov ds:dword_4D70C4 0 +
mov ds:dword_4D70BC 0 +
mov ds:dword_4D70D8 0 +
mov ds:dword_4D70D0 0 +
mov ds:dword_4D70C8 0 +
mov ds:dword_4D70C0 0 +
call free  +
mov eax ds:dword_4D702C +
mov ds:dword_4D70B8 0 +
mov ds:dword_4D7030 0 +
mov ds:dword_4D70B4 0 +
mov [esp] eax +
mov ds:byte_4D70B0 0 +
mov ds:dword_4D70AC 0 +
call free  +
mov eax ds:dword_4D7020 +
mov ds:dword_4D702C 0 +
mov ds:dword_4D70A8 0 +
mov ds:dword_4D70A4 0 +
mov [esp] eax +
mov ds:dword_4D70A0 0 +
mov ds:dword_4D709C 0 +
mov ds:dword_4D7028 0 +
mov ds:dword_4D7098 0 +
mov ds:dword_4D7094 0 +
mov ds:dword_4D7090 0 +
mov ds:dword_4D708C 0 +
mov ds:dword_4D7088 0 +
mov ds:dword_4D7084 0 +
mov ds:dword_4D7080 0 +
mov ds:dword_4D707C 0 +
mov ds:dword_4D7078 0 +
mov ds:dword_4D7074 0 +
mov ds:dword_4D7070 0 +
mov ds:dword_4D706C 0 +
mov ds:dword_4D7068 0 +
mov ds:dword_4D7064 0 +
mov ds:dword_4D7060 0 +
mov ds:dword_4D705C 0 +
call free  +
mov ds:dword_4D7020 0 +
mov ds:dword_4D7024 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov dword ptr [esp+10h] offset loc_425700 +
mov dword ptr [esp+0Ch] offset loc_4256C0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_458DA0  +
call sub_419230  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset dword_4D90C0 +
mov ds:dword_4D70E0 0 +
call sub_458F10  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_458F10  +
mov ds:dword_4D70E0 0 +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_40F643  +
mov [esp+1Ch+arg_4] 1 +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
jmp sub_452A20  +
mov [esp+1Ch+var_14] offset aGgc_internal_c +
mov [esp+1Ch+var_18] 37h +
mov [esp+1Ch+var_1C] offset a____GccGccGgcN +
call sub_424080  +
nop   +
jmp sub_452A70  +
***
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test edi edi +
jz loc_40F7B0  +
cmp edi 1 +
jnz loc_40F760  +
mov edi [ebp+0] +
mov esi offset aDeviceSpecs +
mov ecx 0Dh +
mov eax offset aNodevicelib +
cmps   +
mov esi offset aAvr2 +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40F756  +
movzx eax byte ptr [esi] +
test al al +
jz loc_40F726  +
mov edx esi +
lea esi [esi+0] +
movzx ecx al +
movsx ebx al +
test byte ptr ds:word_4D0620[ecx+ecx] 8Ch +
jnz loc_40F71C  +
cmp al 2Dh +
jz loc_40F71C  +
cmp al 5Fh +
jnz loc_40F7D0  +
add edx 1 +
movzx eax byte ptr [edx] +
test al al +
jnz loc_40F700  +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] offset aSMmcuAvrNodevi +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] offset aSpecs_0 +
mov [esp+2Ch+var_28] offset asc_48F9DA +
mov [esp+2Ch+var_2C] offset aSpecsDeviceSpe +
call sub_452BE0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov esi [ebp+4] +
jle loc_40F6F3  +
mov ebx 2 +
jmp loc_40F77B  +
add ebx 1 +
cmp ebx edi +
jz loc_40F6F3  +
mov eax [ebp+ebx*4+0] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
call strcmp  +
test eax eax +
jz loc_40F770  +
mov [esp+2Ch+var_28] offset aMmcu +
mov [esp+2Ch+var_2C] offset aSpecifiedOptio +
call sub_4251D0  +
add esp 2Ch +
mov eax offset aNodevicelib +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D9188 +
mov [esp+2Ch+var_24] offset aDeviceSpecsFil +
mov [esp+2Ch+var_28] offset aBadUsageOfSpec +
mov [esp+2Ch+var_2C] eax +
call sub_4255A0  +
lea esi [esi+0] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] offset aMmcu_0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aStrangeDeviceN +
call sub_4251D0  +
mov eax offset aNodevicelib +
jmp loc_40F756  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx [eax] +
mov eax [esp+arg_4] +
movzx edx byte ptr [ebx] +
mov esi [eax] +
test dl dl +
movsx ecx byte ptr [esi] +
jz loc_40F878  +
test cl cl +
jnz loc_40F837  +
jmp loc_40F89B  +
add ebx 1 +
movzx edx byte ptr [ebx] +
lea eax [esi+1] +
movsx ecx byte ptr [esi+1] +
test dl dl +
jz loc_40F878  +
test cl cl +
jz loc_40F880  +
mov esi eax +
movzx edi dl +
movsx eax dl +
movzx edi ds:word_4D0620[edi+edi] +
test di 88h +
jz loc_40F859  +
movzx ebp cl +
test byte ptr ss:word_4D0620[ebp+ebp] 4 +
jnz loc_40F887  +
test di 4 +
jz loc_40F86D  +
movzx edi cl +
test byte ptr ds:word_4D0620[edi+edi] 88h +
jnz loc_40F891  +
cmp dl cl +
jz loc_40F820  +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_40F871  +
movsx eax dl +
xor ecx ecx +
jmp loc_40F871  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax dl +
jmp loc_40F871  +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 24h +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_48F9E5 +
call sub_452BE0  +
mov ecx offset aAvr2_0 +
mov edx offset off_491A40 +
mov ebx [edx+0Ch] +
test ebx ebx +
jz loc_40F8D6  +
mov ds:dword_4D72A0[esi*4] ecx +
add esi 1 +
add edx 20h +
mov ecx [edx] +
test ecx ecx +
jnz loc_40F8C5  +
mov dword ptr [esp+0Ch] offset sub_40F800 +
mov dword ptr [esp+8] 4 +
mov [esp+4] esi +
mov dword ptr [esp] offset dword_4D72A0 +
mov [esp+1Ch] eax +
call qsort  +
test esi esi +
mov eax [esp+1Ch] +
jz loc_40F93A  +
xor ebx ebx +
lea esi [esi+0] +
mov edx ds:dword_4D72A0[ebx*4] +
add ebx 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] offset asc_48F9E6 +
mov [esp] eax +
mov [esp+8] edx +
call sub_452BE0  +
cmp ebx esi +
jnz loc_40F910  +
mov edx ds:dword_4D9188 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aDevicesNativel +
mov [esp+1Ch] eax +
mov [esp] edx +
call sub_424EB0  +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx offset off_491A40 +
sub esp 14h +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_48F9E5 +
call sub_452BE0  +
mov esi eax +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_40F9C7  +
add ebx 20h +
mov eax [ebx] +
test eax eax +
jnz loc_40F990  +
mov eax ds:dword_4D9188 +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aSupportedCoreA +
mov [esp] eax +
call sub_424EB0  +
mov [esp] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
imul eax [ebx+4] +
mov [esp] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] offset asc_48F9E6 +
mov eax ds:off_493F18[eax] +
mov [esp+8] eax +
call sub_452BE0  +
mov esi eax +
jmp loc_40F997  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
mov [eax] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_1C] +
cmp dword ptr [eax+20h] 2 +
mov ecx [eax] +
mov edi [eax+24h] +
ja loc_410846  +
cmp ecx 15Bh +
jz loc_4101E0  +
jle loc_40FDC1  +
cmp ecx 197h +
jz loc_410180  +
cmp ecx 19Ch +
jz loc_410012  +
cmp ecx 161h +
jz loc_40FE30  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0E0h +
jz loc_40FE90  +
cmp ecx 143h +
jnz loc_40FDB4  +
mov eax [ebx+1C8h] +
test eax eax +
jnz loc_40FDB4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0DFh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov eax [ebx+380h] +
test eax eax +
jnz loc_40FDB4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 15Fh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov eax [ebx+14Ch] +
test eax eax +
jz loc_410380  +
mov eax [ebx+1B8h] +
test eax eax +
jz loc_410422  +
mov eax [ebx+1C8h] +
test eax eax +
jz loc_4103D1  +
mov eax [ebx+218h] +
test eax eax +
jz loc_4107F5  +
mov eax [ebx+2A0h] +
test eax eax +
jz loc_4107A4  +
mov ecx [ebx+2A8h] +
test ecx ecx +
jz loc_410753  +
mov edx [ebx+2F0h] +
test edx edx +
jz loc_410702  +
mov eax [ebx+308h] +
test eax eax +
jz loc_4106B1  +
mov eax [ebx+398h] +
test eax eax +
jz loc_410660  +
mov eax [ebx+3A4h] +
test eax eax +
jz loc_410608  +
mov eax [ebx+438h] +
test eax eax +
jz loc_4105B7  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_410473  +
mov eax [ebx+460h] +
test eax eax +
jnz loc_40FF9C  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410250  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E4E0  +
mov ecx [ebx+480h] +
test ecx ecx +
jnz loc_40FDB4  +
mov eax [esi+45Ch] +
test eax eax +
jz loc_40FFC1  +
mov edx [esi+1CCh] +
xor eax eax +
test edx edx +
setnz al  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A6h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov ecx [ebx+460h] +
test ecx ecx +
jnz loc_410076  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410274  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E4E0  +
mov eax [ebx+464h] +
test eax eax +
jz loc_410286  +
mov eax [ebx+470h] +
test eax eax +
jz loc_410328  +
mov eax [ebx+474h] +
test eax eax +
jz loc_4102D7  +
mov eax [ebx+478h] +
test eax eax +
jz loc_4104C4  +
mov eax [ebx+480h] +
test eax eax +
jnz loc_410112  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410262  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A6h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E4E0  +
mov edx [ebx+488h] +
test edx edx +
jz loc_410566  +
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_40FDB4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A9h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov eax [ebx+288h] +
test eax eax +
jnz loc_40FDB4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 118h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov eax [ebx+37Ch] +
test eax eax +
jz loc_410515  +
mov eax [ebx+384h] +
test eax eax +
jnz loc_40FDB4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 161h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FDB4  +
mov edi [esi+1CCh] +
xor eax eax +
test edi edi +
setnz al  +
jmp loc_40FF50  +
mov ecx [esi+1CCh] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_4100C6  +
mov edx [esi+1CCh] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_41002A  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Eh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_410084  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A3h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_4100A0  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A2h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_410092  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0BDh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FE9E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0DFh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FEBA  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0D9h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FEAC  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 197h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FF38  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A4h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_4100AE  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 15Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_4101EE  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A8h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_410120  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 192h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FF2A  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 16Ah +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FF1C  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 167h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FF0E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 13Ch +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FF00  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 136h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FEF2  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 122h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FEE4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 11Eh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FED6  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0F7h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E4E0  +
jmp loc_40FEC8  +
mov [esp+3Ch+var_34] offset aCommon_handle_ +
mov [esp+3Ch+var_38] 2E78h +
mov [esp+3Ch+var_3C] offset aOptions_c +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0F0h +
mov ebp [esp+74h] +
jz loc_410E17  +
jle loc_410970  +
cmp eax 143h +
jz loc_4112A0  +
jle loc_410D43  +
cmp eax 19Ch +
jz loc_410A00  +
cmp eax 1A9h +
jz loc_4113A0  +
cmp eax 18Eh +
jnz loc_410A10  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
cmp eax 0AFh +
jz loc_410DB8  +
nop   +
lea esi [esi+0] +
jle loc_410A86  +
cmp eax 0C2h +
jz loc_410A20  +
cmp eax 0E0h +
jz loc_411337  +
cmp eax 0B6h +
jnz loc_410A10  +
mov eax [ebx+27Ch] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 115h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
mov eax [ebx+48Ch] +
test eax eax +
jz loc_411857  +
nop   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+1D4h] +
test eax eax +
jz loc_4115C8  +
mov eax [ebx+39Ch] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 168h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
cmp eax 93h +
jz loc_411240  +
cmp eax 9Eh +
jnz loc_410A10  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_411CD3  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_411D75  +
mov edx [ebx+10Ch] +
test edx edx +
jz loc_411D24  +
mov eax [ebx+110h] +
test eax eax +
jz loc_411F21  +
mov eax [ebx+140h] +
test eax eax +
jz loc_411ED0  +
mov eax [ebx+148h] +
test eax eax +
jz loc_411E78  +
mov eax [ebx+150h] +
test eax eax +
jz loc_411E27  +
mov eax [ebx+1A8h] +
test eax eax +
jz loc_412065  +
mov eax [ebx+1C0h] +
test eax eax +
jz loc_412014  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_411570  +
mov eax [ebx+204h] +
test eax eax +
jz loc_411C82  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_4121B0  +
mov eax [ebx+248h] +
test eax eax +
jz loc_412158  +
mov ecx [ebx+274h] +
test ecx ecx +
jz loc_412107  +
mov edx [ebx+284h] +
test edx edx +
jz loc_411510  +
mov eax [ebx+288h] +
test eax eax +
jz loc_411C31  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_411BE0  +
mov eax [ebx+290h] +
test eax eax +
jz loc_411B88  +
mov eax [ebx+294h] +
test eax eax +
jz loc_411B37  +
mov eax [ebx+298h] +
test eax eax +
jz loc_411AE6  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_411A95  +
mov ecx [ebx+2DCh] +
test ecx ecx +
jz loc_411A44  +
mov edx [ebx+2F8h] +
test edx edx +
jz loc_4119F3  +
mov eax [ebx+31Ch] +
test eax eax +
jz loc_411713  +
mov eax [ebx+334h] +
test eax eax +
jz loc_4116C2  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_411671  +
mov eax [ebx+374h] +
test eax eax +
jz loc_411620  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_4120B6  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_410C82  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_4114B8  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_411FC3  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_4117B5  +
mov eax [ebx+434h] +
test eax eax +
jz loc_411764  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_411F72  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_411460  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_411806  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
cmp eax 0F8h +
jz loc_4111D0  +
cmp eax 142h +
jnz loc_410A10  +
mov eax [ebx+174h] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [ebx+1C0h] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_410E80  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_410E38  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_410EE9  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_410EA1  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_410F51  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_410F09  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_410FBA  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_410F72  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_411022  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_410FDA  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_41108B  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411043  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_4110F3  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4110AB  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_41115C  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411114  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_410A10  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411181  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [ebx+224h] +
test eax eax +
jz loc_4118A8  +
mov eax [ebx+228h] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [ebx+348h] +
test eax eax +
jnz loc_410A10  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [ebx+1BCh] +
test eax eax +
jz loc_411900  +
mov eax [ebx+284h] +
test eax eax +
jz loc_411406  +
mov ecx [ebx+300h] +
test ecx ecx +
jz loc_4119A2  +
mov edx [ebx+32Ch] +
test edx edx +
jz loc_411951  +
mov eax [ebx+334h] +
test eax eax +
jnz loc_41090E  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41090E  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_410A10  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov ecx [ebx+468h] +
test ecx ecx +
jnz loc_410A10  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 1A0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4112BC  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410CD6  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410C90  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B6E  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B28  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A2E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410C16  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410C08  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BFA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BEC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410CBA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410CAC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410CE4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410A10  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4111DE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4112AE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4112D8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4112CA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 138h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BDE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BD0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BC2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BB4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410BA6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B98  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B8A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B7C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B36  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AAA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AC6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+0F8h] +
test eax eax +
jnz loc_410AB8  +
mov eax [esp+68h] +
mov ecx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AB8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AFE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AF0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AE2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410AD4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410CC8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410C9E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B1A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0D5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B0C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410C24  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B60  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B52  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_410B44  +
***
jmp loc_412210  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0D8h +
mov ebp [esp+74h] +
jz loc_412AB7  +
jle loc_412300  +
cmp eax 142h +
jz loc_412623  +
jle loc_412682  +
cmp eax 18Eh +
jz loc_4122A2  +
cmp eax 19Ch +
jz loc_412B24  +
cmp eax 143h +
jnz loc_412332  +
mov edx [ebx+1BCh] +
test edx edx +
jz loc_4132F5  +
mov eax [ebx+284h] +
test eax eax +
jz loc_412DB8  +
mov eax [ebx+300h] +
test eax eax +
jz loc_413397  +
mov eax [ebx+32Ch] +
test eax eax +
jz loc_412E70  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
cmp eax 0B1h +
jz loc_412C50  +
nop   +
lea esi [esi+0] +
jle loc_412340  +
cmp eax 0B4h +
jz loc_412BF0  +
cmp eax 0C2h +
jnz loc_412332  +
mov eax [ebx+1D4h] +
test eax eax +
jz loc_4132A4  +
***
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 93h +
jz loc_412B83  +
cmp eax 9Eh +
jnz loc_412332  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_413253  +
mov ecx [ebx+0DCh] +
test ecx ecx +
jz loc_412E11  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_4131A1  +
mov eax [ebx+10Ch] +
test eax eax +
jz loc_413B44  +
mov ecx [ebx+110h] +
test ecx ecx +
jz loc_413AF3  +
mov edx [ebx+120h] +
test edx edx +
jz loc_413AA2  +
mov eax [ebx+124h] +
test eax eax +
jz loc_413A51  +
mov eax [ebx+128h] +
test eax eax +
jz loc_413A00  +
mov eax [ebx+140h] +
test eax eax +
jz loc_4139A8  +
mov eax [ebx+148h] +
test eax eax +
jz loc_413957  +
mov eax [ebx+150h] +
test eax eax +
jz loc_413906  +
mov eax [ebx+184h] +
test eax eax +
jz loc_413346  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_412D60  +
mov eax [ebx+204h] +
test eax eax +
jz loc_413771  +
mov eax [ebx+23Ch] +
test eax eax +
jz loc_413720  +
mov eax [ebx+248h] +
test eax eax +
jz loc_4138B5  +
mov ecx [ebx+274h] +
test ecx ecx +
jz loc_413864  +
mov edx [ebx+288h] +
test edx edx +
jz loc_413813  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_4137C2  +
mov eax [ebx+290h] +
test eax eax +
jz loc_413626  +
mov eax [ebx+294h] +
test eax eax +
jz loc_4135D5  +
mov eax [ebx+2C0h] +
test eax eax +
jz loc_413584  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_413533  +
mov eax [ebx+2DCh] +
test eax eax +
jz loc_4134E2  +
mov ecx [ebx+2F8h] +
test ecx ecx +
jz loc_413491  +
mov edx [ebx+31Ch] +
test edx edx +
jz loc_413440  +
mov eax [ebx+360h] +
test eax eax +
jz loc_4133E8  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_4130A7  +
mov eax [ebx+374h] +
test eax eax +
jz loc_413056  +
mov eax [ebx+398h] +
test eax eax +
jz loc_413005  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_412FB4  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_412562  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_412D08  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_4136C8  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_413677  +
mov eax [ebx+434h] +
test eax eax +
jz loc_412F63  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_412F12  +
***
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_412CB0  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_412EC1  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_412332  +
mov eax [esp-4Ch+arg_B0] +
mov [esp-4Ch+arg_70] ebp +
mov [esp-4Ch+arg_6C] 1 +
mov [esp-4Ch+arg_68] edi +
mov [esp-4Ch+arg_60] eax +
mov eax [esp-4Ch+arg_AC] +
mov [esp-4Ch+arg_64] esi +
mov [esp-4Ch+arg_54] 0 +
mov [esp-4Ch+arg_50] 1B3h +
mov [esp-4Ch+arg_5C] eax +
mov eax [esp-4Ch+arg_A8] +
mov [esp-4Ch+arg_4C] ebx +
mov [esp-4Ch+arg_58] eax +
mov eax [esp-4Ch+arg_98] +
mov [esp-4Ch+arg_48] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+174h] +
test eax eax +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
cmp eax 0E0h +
jz loc_412A50  +
cmp eax 0F0h +
jnz loc_412332  +
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_412701  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4126B9  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_41276A  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412722  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_4127D2  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_41278A  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_41283B  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4127F3  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_4128A3  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_41285B  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_41290C  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4128C4  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_412974  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_41292C  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_4129DD  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412995  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_412332  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412A02  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_412332  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+184h] +
test eax eax +
jz loc_413150  +
mov ecx [ebx+2D4h] +
test ecx ecx +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+2CCh] +
test eax eax +
jz loc_4130F8  +
mov ecx [ebx+348h] +
test ecx ecx +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov edx [ebx+2CCh] +
test edx edx +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [ebx+2C0h] +
test eax eax +
jnz loc_412332  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [esp-4Ch+arg_B0] +
mov edx [esp-4Ch+arg_A8] +
mov [esp-4Ch+arg_70] ebp +
mov [esp-4Ch+arg_6C] 1 +
mov [esp-4Ch+arg_60] eax +
mov eax [esp-4Ch+arg_AC] +
mov [esp-4Ch+arg_68] edi +
mov [esp-4Ch+arg_64] esi +
mov [esp-4Ch+arg_54] 0 +
mov [esp-4Ch+arg_5C] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp-4Ch+arg_58] eax +
mov eax [esp-4Ch+arg_98] +
mov [esp-4Ch+arg_50] 198h +
mov [esp-4Ch+arg_4C] ebx +
mov [esp-4Ch+arg_48] eax +
call sub_41E4E0  +
jmp loc_4125B6  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412570  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412408  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412286  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 9Dh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41236E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4122A2  +
***
mov eax [esp-4Ch+arg_B0] +
mov [esp-4Ch+arg_70] ebp +
mov [esp-4Ch+arg_6C] 1 +
mov [esp-4Ch+arg_68] edi +
mov [esp-4Ch+arg_60] eax +
mov eax [esp-4Ch+arg_AC] +
mov [esp-4Ch+arg_64] esi +
mov [esp-4Ch+arg_54] 0 +
mov [esp-4Ch+arg_50] 19Ch +
mov [esp-4Ch+arg_5C] eax +
mov eax [esp-4Ch+arg_A8] +
mov [esp-4Ch+arg_4C] ebx +
mov [esp-4Ch+arg_58] eax +
mov eax [esp-4Ch+arg_98] +
mov [esp-4Ch+arg_48] eax +
call sub_41E4E0  +
jmp loc_4125C4  +
***
mov [esp-4Ch+arg_58] eax +
mov eax [esp-4Ch+arg_98] +
mov [esp-4Ch+arg_48] eax +
call sub_41E4E0  +
jmp loc_4125A8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41259A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412504  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 167h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124F6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124E8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124DA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412B91  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412AC5  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+0F8h] +
test ecx ecx +
jnz loc_41237C  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41237C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412360  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412332  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412278  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123FA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412294  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 154h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124CC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124BE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 138h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124B0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4124A2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412494  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412486  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412478  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41246A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41258C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41257E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 102h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412424  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412416  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41245C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41244E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412440  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412432  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123EC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123DE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123D0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B4h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123C2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123B4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4123A6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_412398  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41238A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0E0h +
mov ebp [esp+74h] +
jz loc_413DD0  +
jle loc_413C60  +
cmp eax 143h +
jz loc_413BF5  +
cmp eax 151h +
jnz loc_413BE8  +
mov eax [ebx+350h] +
test eax eax +
jz loc_413E30  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+0F0h] +
test eax eax +
jz loc_414492  +
mov ecx [ebx+414h] +
test ecx ecx +
jnz loc_413BE8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 189h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413BE8  +
***
cmp eax 9Eh +
jnz loc_413BE8  +
mov eax [ebx+0D4h] +
test eax eax +
jz loc_414441  +
mov eax [ebx+0F0h] +
test eax eax +
jz loc_4143F0  +
mov eax [ebx+12Ch] +
test eax eax +
jz loc_414398  +
mov eax [ebx+144h] +
test eax eax +
jz loc_414347  +
mov eax [ebx+15Ch] +
test eax eax +
jz loc_4142F6  +
mov ecx [ebx+250h] +
test ecx ecx +
jz loc_4142A5  +
mov edx [ebx+254h] +
test edx edx +
jz loc_414254  +
mov eax [ebx+258h] +
test eax eax +
jz loc_414203  +
mov eax [ebx+26Ch] +
test eax eax +
jz loc_4141B2  +
mov eax [ebx+288h] +
test eax eax +
jz loc_414161  +
mov eax [ebx+34Ch] +
test eax eax +
jz loc_414110  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_4140B8  +
mov eax [ebx+3F0h] +
test eax eax +
jz loc_414067  +
mov ecx [ebx+414h] +
test ecx ecx +
jz loc_414016  +
mov edx [ebx+418h] +
test edx edx +
jz loc_413FC5  +
mov eax [ebx+444h] +
test eax eax +
jz loc_413F74  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_413F23  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_413ED2  +
mov eax [ebx+46Ch] +
test eax eax +
jz loc_413E81  +
mov eax [ebx+4C0h] +
test eax eax +
jnz loc_413BE8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B6h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413BE8  +
***
mov edx [ebx+154h] +
test edx edx +
jnz loc_413BE8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C0h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413BE8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 150h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413BE8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D71  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D63  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D55  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 195h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D47  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D39  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 189h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D2B  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 180h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D1D  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D0F  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413D01  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CF3  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 111h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CE5  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 109h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CD7  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 108h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CC9  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 107h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CBB  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413CAD  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413C9F  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413C91  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413C83  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 9Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413C75  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_413C03  +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0F0h +
mov ebp [esp+74h] +
jz loc_414A60  +
jle loc_4145D0  +
cmp eax 143h +
jz loc_414EE3  +
jle loc_414987  +
cmp eax 19Ch +
jz loc_414660  +
cmp eax 1A9h +
jz loc_414FE7  +
cmp eax 18Eh +
jnz loc_414670  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
cmp eax 0AFh +
jz loc_414A00  +
nop   +
lea esi [esi+0] +
jle loc_4146E6  +
cmp eax 0C2h +
jz loc_414680  +
cmp eax 0E0h +
jz loc_414F80  +
cmp eax 0B6h +
jnz loc_414670  +
mov eax [ebx+27Ch] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 115h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
mov eax [ebx+48Ch] +
test eax eax +
jz loc_415B71  +
nop   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+1D4h] +
test eax eax +
jz loc_415830  +
mov eax [ebx+39Ch] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 168h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
cmp eax 93h +
jz loc_414E84  +
cmp eax 9Eh +
jnz loc_414670  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_415881  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_415923  +
mov edx [ebx+10Ch] +
test edx edx +
jz loc_4158D2  +
mov eax [ebx+110h] +
test eax eax +
jz loc_415AC8  +
mov eax [ebx+140h] +
test eax eax +
jz loc_415A77  +
mov eax [ebx+148h] +
test eax eax +
jz loc_415A26  +
mov eax [ebx+150h] +
test eax eax +
jz loc_4159D5  +
mov eax [ebx+1A8h] +
test eax eax +
jz loc_415CB5  +
mov eax [ebx+1C0h] +
test eax eax +
jz loc_415C64  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_4151C0  +
mov eax [ebx+204h] +
test eax eax +
jz loc_415B20  +
mov ecx [ebx+21Ch] +
test ecx ecx +
jz loc_415405  +
mov edx [ebx+248h] +
test edx edx +
jz loc_4153B4  +
mov eax [ebx+274h] +
test eax eax +
jz loc_415363  +
mov eax [ebx+284h] +
test eax eax +
jz loc_415160  +
mov eax [ebx+288h] +
test eax eax +
jz loc_4157D8  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_415787  +
mov eax [ebx+290h] +
test eax eax +
jz loc_415736  +
mov eax [ebx+298h] +
test eax eax +
jz loc_4156E5  +
mov ecx [ebx+2D8h] +
test ecx ecx +
jz loc_415694  +
mov edx [ebx+2DCh] +
test edx edx +
jz loc_415643  +
mov eax [ebx+31Ch] +
test eax eax +
jz loc_4155F2  +
mov eax [ebx+334h] +
test eax eax +
jz loc_4155A1  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_4152C1  +
mov eax [ebx+374h] +
test eax eax +
jz loc_415270  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_415312  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_4148C6  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_415108  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_4154A7  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_415550  +
mov eax [ebx+434h] +
test eax eax +
jz loc_4154F8  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_415456  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_4150B0  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_415218  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
cmp eax 0F8h +
jz loc_414E17  +
cmp eax 142h +
jnz loc_414670  +
mov eax [ebx+174h] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [ebx+1C0h] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_414AC9  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414A81  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_414B32  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414AEA  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_414B9A  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_414B52  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_414C03  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414BBB  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_414C6B  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_414C23  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_414CD4  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414C8C  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_414D3C  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_414CF4  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_414DA5  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414D5D  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_414670  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414DCA  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [ebx+224h] +
test eax eax +
jz loc_415D06  +
mov eax [ebx+228h] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [ebx+348h] +
test eax eax +
jnz loc_414670  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [ebx+1BCh] +
test eax eax +
jz loc_415D57  +
mov eax [ebx+284h] +
test eax eax +
jz loc_415050  +
mov ecx [ebx+300h] +
test ecx ecx +
jz loc_415C13  +
mov edx [ebx+32Ch] +
test edx edx +
jz loc_415BC2  +
mov eax [ebx+334h] +
test eax eax +
jnz loc_41456E  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41456E  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_414670  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov ecx [ebx+468h] +
test ecx ecx +
jnz loc_414670  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 1A0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414EFF  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41491A  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4148D4  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147CE  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414788  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414928  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41485A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41484C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414868  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147C0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147B2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147A4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41490C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4148E2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4148FE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4148F0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41483E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414830  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414822  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414814  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414806  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147F8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147EA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4147DC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41468E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41470A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414726  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+0F8h] +
test eax eax +
jnz loc_414718  +
mov eax [esp+68h] +
mov ecx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414718  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41475E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414750  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414742  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414734  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414796  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414670  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414F1B  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414F0D  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41477A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0D5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41476C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414E25  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_414EF1  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0D8h +
mov ebp [esp+74h] +
jz loc_416640  +
jle loc_415EA0  +
cmp eax 142h +
jz loc_4161A7  +
jle loc_416206  +
cmp eax 18Eh +
jz loc_415E42  +
cmp eax 19Ch +
jz loc_4166B0  +
cmp eax 143h +
jnz loc_415ED2  +
mov edx [ebx+1BCh] +
test edx edx +
jz loc_417590  +
mov eax [ebx+284h] +
test eax eax +
jz loc_416948  +
mov eax [ebx+300h] +
test eax eax +
jz loc_416AF3  +
mov eax [ebx+32Ch] +
test eax eax +
jz loc_416A00  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
cmp eax 0B1h +
jz loc_4167E0  +
nop   +
lea esi [esi+0] +
jle loc_415EE0  +
cmp eax 0B4h +
jz loc_416780  +
cmp eax 0C2h +
jnz loc_415ED2  +
mov eax [ebx+1D4h] +
test eax eax +
jz loc_417538  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 93h +
jz loc_416710  +
cmp eax 9Eh +
jnz loc_415ED2  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_416BF6  +
mov ecx [ebx+0DCh] +
test ecx ecx +
jz loc_4169A1  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_416B44  +
mov eax [ebx+10Ch] +
test eax eax +
jz loc_4173A3  +
mov ecx [ebx+110h] +
test ecx ecx +
jz loc_417352  +
mov edx [ebx+120h] +
test edx edx +
jz loc_417301  +
mov eax [ebx+124h] +
test eax eax +
jz loc_4172B0  +
mov eax [ebx+128h] +
test eax eax +
jz loc_417258  +
mov eax [ebx+140h] +
test eax eax +
jz loc_417207  +
mov eax [ebx+148h] +
test eax eax +
jz loc_4171B6  +
mov eax [ebx+150h] +
test eax eax +
jz loc_417165  +
mov eax [ebx+184h] +
test eax eax +
jz loc_416AA2  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_4168F0  +
mov eax [ebx+204h] +
test eax eax +
jz loc_417632  +
mov ecx [ebx+23Ch] +
test ecx ecx +
jz loc_4175E1  +
mov edx [ebx+248h] +
test edx edx +
jz loc_4174E7  +
mov eax [ebx+274h] +
test eax eax +
jz loc_417496  +
mov eax [ebx+288h] +
test eax eax +
jz loc_417445  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_4173F4  +
mov eax [ebx+290h] +
test eax eax +
jz loc_417114  +
mov eax [ebx+2C0h] +
test eax eax +
jz loc_4170C3  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_417072  +
mov ecx [ebx+2DCh] +
test ecx ecx +
jz loc_417021  +
mov edx [ebx+31Ch] +
test edx edx +
jz loc_416FD0  +
mov eax [ebx+360h] +
test eax eax +
jz loc_416F78  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_416F27  +
mov eax [ebx+374h] +
test eax eax +
jz loc_416ED6  +
mov eax [ebx+398h] +
test eax eax +
jz loc_416D41  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_416CF0  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_4160E6  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_416898  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_416E85  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_416E34  +
mov eax [ebx+434h] +
test eax eax +
jz loc_416DE3  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_416D92  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_416840  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_416A51  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+174h] +
test eax eax +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
cmp eax 0E0h +
jz loc_4165D3  +
cmp eax 0F0h +
jnz loc_415ED2  +
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_416285  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_41623D  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_4162EE  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4162A6  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_416356  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_41630E  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_4163BF  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416377  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_416427  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4163DF  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_416490  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416448  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_4164F8  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4164B0  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_416561  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416519  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_415ED2  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416586  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_415ED2  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+184h] +
test eax eax +
jz loc_416C98  +
mov ecx [ebx+2D4h] +
test ecx ecx +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+2CCh] +
test eax eax +
jz loc_416C47  +
mov ecx [ebx+348h] +
test ecx ecx +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov edx [ebx+2CCh] +
test edx edx +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [ebx+2C0h] +
test eax eax +
jnz loc_415ED2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41613A  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_4160F4  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FA8  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415E26  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 9Dh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F0E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415E42  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416148  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F9A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415E34  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
mov ecx [ebx+0F8h] +
test ecx ecx +
jnz loc_415F1C  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F1C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F00  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41671E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41664E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416088  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 167h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41607A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41612C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41611E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416110  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416102  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41606C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41605E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 154h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416050  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416042  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416034  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416026  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_416018  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_41600A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F8C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F7E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F70  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B4h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F62  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F54  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F46  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F38  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415F2A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FFC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FEE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FE0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FD2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415ED2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415E18  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 102h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FC4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E4E0  +
jmp loc_415FB6  +
***
mov eax [esp+8] +
cmp eax 10Ch +
jz loc_4178C0  +
jle loc_4176F0  +
cmp eax 132h +
jz loc_417854  +
lea esi [esi+0] +
jle loc_417736  +
cmp eax 191h +
jz loc_4178D5  +
jg loc_4177A5  +
cmp eax 143h +
jz loc_417900  +
cmp eax 18Eh +
jnz locret_417884  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+428h] +
mov [edx+1Ah] al +
retn   +
***
cmp eax 0BEh +
jz loc_4178A8  +
jg loc_417770  +
cmp eax 0AFh +
jz loc_417830  +
jle loc_417810  +
cmp eax 0B1h +
jz loc_417912  +
cmp eax 0B6h +
jnz locret_417882  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+130h] +
mov [edx+4Ah] al +
retn   +
***
cmp eax 115h +
jz loc_417842  +
jle loc_4177D0  +
cmp eax 120h +
jz loc_417896  +
cmp eax 126h +
jnz loc_417886  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+2B4h] +
mov [ecx+19h] al +
retn   +
***
cmp eax 0CDh +
jz loc_417866  +
jle loc_4177F0  +
cmp eax 0DAh +
jz loc_417927  +
cmp eax 0DFh +
jnz locret_417892  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+1C8h] +
mov [ecx+26h] al +
retn   +
***
cmp eax 194h +
jz loc_4178E7  +
cmp eax 1ADh +
jnz locret_417878  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+49Ch] +
mov [ecx+1Eh] al +
retn   +
***
cmp eax 112h +
jnz loc_41787C  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+270h] +
mov [edx+32h] al +
retn   +
***
cmp eax 0C9h +
jnz locret_41787A  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+178h] +
mov [edx+16h] al +
retn   +
***
cmp eax 0AEh +
jnz locret_417894  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+118h] +
mov [edx+1Fh] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+11Ch] +
mov [ecx+2Fh] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+27Ch] +
mov [ecx+1Bh] al +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+2E0h] +
mov [edx+44h] eax +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+188h] +
mov [ecx+14h] al +
retn   +
***
retn   +
***
retn   +
***
lea esi [esi+0] +
retn   +
***
retn   +
***
retn   +
***
lea esi [esi+0] +
lea edi [edi+0] +
retn   +
***
retn   +
***
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+2A4h] +
mov [edx+17h] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+150h] +
mov [ecx+15h] al +
retn   +
***
mov eax [esp+4] +
mov eax [eax+264h] +
test eax eax +
mov eax [esp+0Ch] +
setnz byte ptr [eax+48h]  +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+434h] +
mov [ecx+18h] al +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+440h] +
mov [edx+25h] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+320h] +
mov [ecx+2Ah] al +
retn   +
***
mov eax [esp+4] +
mov edx [eax+120h] +
mov eax [esp+0Ch] +
test edx edx +
setnz byte ptr [eax+4Bh]  +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+1BCh] +
mov [edx+1Ch] al +
retn   +
***
cmp dword ptr [edx+54Ch] 0 +
jnz loc_417A1F  +
mov [eax+54Ch] ecx +
cmp dword ptr [edx+968h] 0 +
jnz loc_417A2E  +
mov [eax+968h] ecx +
cmp dword ptr [edx+0BA0h] 0 +
jnz loc_417A3D  +
mov [eax+0BA0h] ecx +
cmp dword ptr [edx+914h] 0 +
jnz loc_417A4C  +
mov [eax+914h] ecx +
cmp dword ptr [edx+0AF0h] 0 +
jnz loc_417A5B  +
mov [eax+0AF0h] ecx +
cmp dword ptr [edx+0BE0h] 0 +
jnz loc_417A6A  +
mov [eax+0BE0h] ecx +
cmp dword ptr [edx+798h] 0 +
jnz loc_417A79  +
mov [eax+798h] ecx +
cmp dword ptr [edx+7B4h] 0 +
jnz loc_417A88  +
mov [eax+7B4h] ecx +
cmp dword ptr [edx+7B8h] 0 +
jnz loc_417B21  +
test ecx ecx +
jnz loc_417B68  +
cmp dword ptr [edx+938h] 0 +
jnz loc_417AAC  +
mov [eax+938h] ecx +
cmp dword ptr [edx+0A78h] 0 +
jnz loc_417ABB  +
mov [eax+0A78h] ecx +
cmp dword ptr [edx+0BA8h] 0 +
jnz loc_417ACA  +
mov [eax+0BA8h] ecx +
cmp dword ptr [edx+71Ch] 0 +
jnz loc_417AD9  +
mov [eax+71Ch] ecx +
cmp dword ptr [edx+0B48h] 0 +
jnz loc_417AEB  +
cmp dword ptr [edx+0B88h] 0 +
jz loc_417B60  +
cmp dword ptr [edx+0B70h] 0 +
jnz loc_417AFD  +
cmp dword ptr [edx+0B88h] 0 +
jz loc_417B52  +
cmp dword ptr [edx+0BD0h] 0 +
jnz loc_417B10  +
mov dword ptr [eax+0BD0h] 2 +
mov edx [edx+0B30h] +
test edx edx +
jnz locret_417B50  +
mov [eax+0B30h] ecx +
retn   +
cmp dword ptr [edx+7B0h] 0 +
jnz loc_417A9D  +
test ecx ecx +
jz loc_417A9D  +
cmp dword ptr [eax+7B4h] 0 +
jz loc_417A9D  +
mov [eax+7B0h] ecx +
jmp loc_417A9D  +
retn   +
mov [eax+0B70h] ecx +
jmp loc_417AFD  +
mov [eax+0B48h] ecx +
jmp loc_417AEB  +
cmp dword ptr [eax+7B4h] 0 +
jz loc_417B77  +
mov [eax+7B8h] ecx +
cmp dword ptr [edx+7B0h] 0 +
jz loc_417B36  +
jmp loc_417A9D  +
***
push esi  +
test bl bl +
jnz sub_417C61  +
mov ebx [ecx+8] +
test ebx ebx +
jz loc_417D60  +
***
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp al 1 +
jz loc_417C36  +
cmp [esp+arg_5C] 1 +
jle loc_417C36  +
***
mov edi [esp+arg_78] +
mov esi [esp+arg_70] +
mov ebx [ecx+0Ch] +
mov eax [ecx+8] +
mov [esp+arg_24] edi +
mov edi [esp+arg_74] +
mov [esp+arg_1C] esi +
mov esi [esp+arg_6C] +
mov [esp+arg_20] 1 +
mov [esp+arg_14] 0 +
mov [esp+arg_18] edi +
mov [esp+arg_10] esi +
mov [esp+arg_C] ebx +
mov [esp+arg_8] eax +
***
mov eax [esp-5Ch+arg_94] +
mov [esp-5Ch+arg_60] ebp +
mov [esp-5Ch+arg_5C] eax +
mov eax [esp-5Ch+arg_90] +
mov [esp-5Ch+arg_58] eax +
call sub_41E4E0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_5C] +
test eax eax +
setnle bl  +
jmp sub_417C32  +
***
cmp al 1 +
jz loc_417C36  +
mov eax [esp+arg_5C] +
test eax eax +
jle loc_417C36  +
jmp loc_417C5B  +
***
cmp [esp+arg_5C] 2 +
setnle bl  +
jmp sub_417C32  +
***
cmp [esp+arg_5C] 2 +
setnle bl  +
or ebx eax +
jmp sub_417C32  +
***
mov edi [esp+arg_5C] +
cmp [esp+arg_5C] 1 +
mov eax [esp+arg_5C] +
test eax eax +
setz bl  +
jmp sub_417C32  +
***
mov dword ptr [esp+8] offset aMaybe_default_ +
mov dword ptr [esp+4] 18Fh +
mov dword ptr [esp+0] offset a____GccGccOpts +
call sub_424080  +
lea esi [esi+0] +
mov eax ebp +
shl eax 6 +
cmp ds:byte_4A8CA8[eax] 0 +
js loc_417C41  +
mov eax [esp+7Ch] +
mov edx [ecx+0Ch] +
mov dword ptr [esp+24h] 1 +
mov [esp-0B8h+arg_CC] 0 +
mov [esp+28h] eax +
mov eax [esp+74h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp-0B8h+arg_D4] eax +
mov eax [esp+78h] +
mov [esp-0B8h+arg_D0] eax +
mov eax [esp+70h] +
mov [esp-0B8h+arg_C8] eax +
xor eax eax +
test edx edx +
setz al  +
mov [esp+10h] eax +
jmp loc_417C9F  +
***
push ebx  +
sub esp 20h +
test edx edx +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
setnz byte ptr [ebx+18h]  +
test eax eax +
jnz loc_417E20  +
mov esi [ebx+30h] +
test esi esi +
jz loc_417E90  +
cmp byte ptr [ecx] 0 +
jnz loc_417E6A  +
cmp dword ptr [ebx+2Ch] 1 +
jle loc_417EA0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi] +
test edx edx +
jz loc_417E60  +
mov edx [ebx+30h] +
test edx edx +
jz loc_417E60  +
cmp eax edx +
jz loc_417E60  +
mov edx ds:off_4BF954[eax*4] +
mov [esp+20h+var_1C] offset aDebugFormatQsC +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_4] ecx +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_8] eax +
call sub_425230  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
lea esi [esi+0] +
mov [ebx+30h] eax +
mov [esi] eax +
cmp byte ptr [ecx] 0 +
jz loc_417E0C  +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_8] ecx +
call sub_41C040  +
mov ecx [esp+20h+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_417ED0  +
cmp eax 3 +
jg loc_417EB0  +
mov [ebx+2Ch] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+30h] 3 +
jmp loc_417E07  +
mov dword ptr [ebx+2Ch] 2 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+arg_8] ecx +
mov [esp+20h+arg_4] offset aDebugOutputLev +
mov [esp+20h+arg_0] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_425230  +
mov [esp+20h+arg_8] ecx +
mov [esp+20h+arg_4] offset aUnrecognizedDe +
jmp loc_417EBC  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [eax] +
mov [esp+3Ch+var_1C] eax +
test edi edi +
jz loc_4181FC  +
mov [esp+3Ch+var_3C] edx +
call sub_452AC0  +
mov esi eax +
mov ebp eax +
mov edx eax +
jmp loc_417F0D  +
mov [edx] al +
add esi 1 +
add edx 1 +
movzx eax byte ptr [esi] +
test al al +
jz loc_417F33  +
cmp al 2Ch +
jz loc_417F50  +
cmp al 5Ch +
jnz loc_417F05  +
cmp byte ptr [esi+1] 2Ch +
jnz loc_417F05  +
add esi 2 +
add edx 1 +
mov byte ptr [edx-1] 2Ch +
movzx eax byte ptr [esi] +
test al al +
jnz loc_417F14  +
cmp byte ptr [ebp+0] 0 +
jnz loc_4180B0  +
mov eax [esp+3Ch+var_1C] +
mov [eax] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [edx] 0 +
mov ebx [edi] +
lea eax [edx+1] +
mov [esp+3Ch+var_24] eax +
lea eax [esi+1] +
mov [esp+3Ch+var_20] eax +
test ebx ebx +
jz loc_418180  +
mov ecx [ebx] +
mov edx [ebx+4] +
and ecx 7FFFFFFFh +
cmp ecx edx +
jnz loc_418025  +
cmp byte ptr [ebx+3] 0 +
jns loc_418042  +
mov dword ptr [edi] 0 +
lea edx [ecx+1] +
mov [esp+3Ch+var_D] 1 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_18] edx +
call sub_452A70  +
mov edx [esp+3Ch+var_18] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+3Ch+var_14] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+3Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_418263  +
lea edx ds:0[ecx*4] +
add eax 8 +
add ebx 8 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_18] ecx +
call memcpy  +
mov ecx [esp+3Ch+var_18] +
mov ebx [edi] +
mov edx ecx +
mov [ebx+4] ecx +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov ebp [esp+3Ch+var_24] +
movzx eax byte ptr [esi+1] +
mov esi [esp+3Ch+var_20] +
mov edx ebp +
jmp loc_417F18  +
lea eax [ecx+1] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41EFE0  +
mov ebx eax +
lea ecx ds:8[eax*4] +
mov eax [edi] +
test eax eax +
jz loc_41826C  +
mov edx [eax+4] +
mov [esp+3Ch+var_38] ecx +
and ebx 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_18] edx +
call sub_452A70  +
mov edx [esp+3Ch+var_18] +
mov ecx [eax] +
mov [edi] eax +
mov [eax+4] edx +
and ecx 80000000h +
or ecx ebx +
mov ebx eax +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_418025  +
mov ebx [edi] +
test ebx ebx +
jz loc_41824B  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_418164  +
cmp byte ptr [ebx+3] 0 +
jns loc_418191  +
mov dword ptr [edi] 0 +
lea eax [esi+1] +
mov byte ptr [esp+3Ch+var_24] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax ds:8[edx*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_20] edx +
call sub_452A70  +
mov edx [esp+3Ch+var_20] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+3Ch+var_24] 0 +
mov [eax+3] dl +
jz loc_418275  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
mov ebx [edi] +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov eax [esp+3Ch+var_1C] +
mov [eax] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_D] 0 +
xor ecx ecx +
mov edx 1 +
jmp loc_417F96  +
add esi 1 +
mov [esp+3Ch+var_38] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41EFE0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [edi] +
test eax eax +
jz loc_41825C  +
mov ebx [eax+4] +
mov [esp+3Ch+var_38] edx +
and esi 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_452A70  +
mov edx [eax] +
mov [edi] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
jmp loc_41816E  +
mov [esp+3Ch+var_3C] 4 +
mov [esp+3Ch+var_24] edx +
call loc_480BB0  +
mov dword ptr [eax] 0 +
mov edi eax +
mov [esp+3Ch+var_38] 0Ch +
mov [esp+3Ch+var_3C] 0 +
call sub_452A70  +
mov edx [esp+3Ch+var_24] +
mov ecx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx 1 +
mov [eax] ecx +
mov byte ptr [eax+3] 0 +
jmp loc_417EF5  +
mov byte ptr [esp+3Ch+var_24] 0 +
xor esi esi +
mov eax 1 +
jmp loc_4180E5  +
xor ebx ebx +
jmp loc_4181BD  +
mov ebx eax +
xor edx edx +
jmp loc_418025  +
xor edx edx +
nop   +
jmp loc_41806E  +
mov ebx eax +
xor edx edx +
jmp loc_418164  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_14] edx +
mov [esp+40h+var_1C] ecx +
call strlen  +
mov edi eax +
mov eax [esp+40h+arg_0] +
sub eax 3 +
mov [esp+40h+var_18] eax +
mov ecx [esp+40h+var_1C] +
mov eax 1Bh +
mov ebx edi +
mov ebp [esp+40h+var_18] +
cmp ecx 1Ah +
cmova eax ecx +
sub ebp eax +
mov eax 0 +
cmp [esp+40h+arg_0] ebp +
cmovb ebp eax +
cmp edi ebp +
jbe loc_418326  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_418390  +
mov al 1 +
cmp dl 20h +
lea ecx [eax-1] +
jz loc_41831C  +
and edx 0FFFFFFFDh +
cmp dl 2Dh +
movzx edx byte ptr [esi+eax] +
jnz loc_418307  +
cmp dl 20h +
jz loc_41830B  +
test ecx ecx +
jz loc_418307  +
movzx ecx byte ptr [esi+eax-2] +
test byte ptr ds:word_4D0620[ecx+ecx] 88h +
cmovnz ebx eax +
test dl dl +
jz loc_418326  +
cmp edi ebx +
lea ecx [eax+1] +
jnz loc_418380  +
mov eax ecx +
cmp dl 20h +
lea ecx [eax-1] +
jnz loc_4182E2  +
movzx edx byte ptr [esi+eax] +
mov ebx ecx +
test dl dl +
jnz loc_41830B  +
mov eax [esp+40h+var_14] +
mov [esp+40h+var_2C] esi +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_3C] 1Bh +
mov [esp+40h+var_34] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_40] offset a_S_S +
mov [esp+40h+var_38] eax +
call sub_47D0D0  +
lea eax [esi+ebx] +
cmp byte ptr [eax] 20h +
jnz loc_41836C  +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [esi+ebx] 20h +
lea eax [esi+ebx] +
jz loc_418360  +
sub edi ebx +
jz loc_418388  +
mov [esp+40h+var_1C] 0 +
mov esi eax +
jmp loc_4182A6  +
cmp ebp eax +
jbe loc_418326  +
mov eax ecx +
jmp loc_418314  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
jmp loc_418326  +
***
push edi  +
push esi  +
push ebx  +
sub esp 15Ch +
cmp eax 10000h +
mov [esp+168h+var_14C] edx +
mov [esp+168h+var_150] ecx +
jz loc_4187D7  +
mov eax [esp+168h+arg_4] +
mov eax [eax+20h] +
test eax eax +
jz loc_418A27  +
mov esi ds:dword_4BCC44 +
mov eax [esp+168h+arg_4] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4189FE  +
mov eax ds:dword_4BD9A0 +
mov [esp+168h+var_140] eax +
test esi esi +
jz loc_418752  +
mov eax [esp+168h+var_14C] +
mov ebx offset off_4A8C80 +
xor edi edi +
mov byte ptr [esp+168h+var_144] 0 +
mov byte ptr [esp+168h+var_148] 0 +
and eax 1000000h +
mov [esp+168h+var_13C] eax +
test ebp ebp +
mov eax [ebx+24h] +
jz loc_418427  +
mov edx eax +
and edx ebp +
cmp edx ebp +
jz loc_418431  +
test [esp+168h+var_150] eax +
jz loc_418623  +
test [esp+168h+var_14C] eax +
jnz loc_418623  +
test eax 80000h +
jz loc_418460  +
mov ecx ds:dword_4BCC40 +
mov edx 1 +
shl edx cl +
sub edx 1 +
or edx 300000h +
test edx eax +
jz loc_418623  +
mov ecx [esp+168h+arg_4] +
mov byte ptr [esp+168h+var_148] 1 +
mov eax [ecx+20h] +
add eax edi +
cmp byte ptr [eax] 0 +
jnz loc_418623  +
mov byte ptr [eax] 1 +
mov edx [ebx+4] +
test edx edx +
jz loc_4189A5  +
movzx eax word ptr [ebx+18h] +
cmp ax 4FEh +
ja loc_418573  +
shl eax 6 +
mov ecx ds:dword_4A8C84[eax] +
test ecx ecx +
jz loc_418573  +
cmp edx offset aThisOptionLack +
mov eax ds:off_4A8C80[eax] +
jz loc_418A4E  +
lea ecx [esp+168h+var_118] +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_158] eax +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] offset aSSameAsS_ +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D260  +
mov ecx [esp+168h+var_148] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4185B2  +
mov edx ecx +
mov [esp+168h+var_148] ebx +
mov ebx [edx] +
add edx 4 +
lea eax [ebx-1010101h] +
not ebx  +
and eax ebx +
and eax 80808080h +
jz loc_4184F6  +
mov ebx [esp+168h+var_148] +
mov [esp+168h+var_148] edx +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_15C] offset aUsesOfThisOpti +
mov [esp+168h+var_160] offset aS_2 +
lea edx [edx+2] +
cmovnz edx [esp+168h+var_148] +
add al al +
mov eax 100h +
mov [esp+168h+var_148] edx +
sbb [esp+168h+var_148] 3 +
sub [esp+168h+var_148] ecx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_148] ecx +
sub eax edx +
mov [esp+168h+var_164] eax +
mov eax edx +
add eax ecx +
mov [esp+168h+var_168] eax +
call sub_47D260  +
mov ecx [esp+168h+var_148] +
mov edx ecx +
jmp loc_4185B4  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4185B4  +
lea ecx [esp+168h+var_118] +
cmp edx ecx +
jz loc_4184F0  +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_158] offset aUsesOfThisOpti +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] offset aSS_1 +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D260  +
mov ecx [esp+168h+var_148] +
mov edx ecx +
mov [esp+168h+var_168] edx +
mov [esp+168h+var_164] 9 +
mov [esp+168h+var_148] edx +
call strchr  +
mov edx [esp+168h+var_148] +
test eax eax +
jz loc_4189BB  +
mov ecx eax +
add eax 1 +
sub ecx edx +
mov [esp+168h+var_144] ecx +
mov [esp+168h+var_148] eax +
mov eax [esp+168h+arg_4] +
mov ecx [eax+0C88h] +
test ecx ecx +
jz loc_41887E  +
mov eax [esp+168h+arg_0] +
mov ecx [esp+168h+var_144] +
mov [esp+168h+var_168] eax +
mov eax [esp+168h+var_148] +
call sub_418280  +
cmp dword ptr [ebx+30h] 5 +
mov byte ptr [esp+168h+var_144] 1 +
mov byte ptr [esp+168h+var_148] 1 +
jz loc_418972  +
add edi 1 +
add ebx 40h +
cmp edi esi +
jnz loc_418418  +
cmp byte ptr [esp+168h+var_148] 0 +
jz loc_418752  +
cmp byte ptr [esp+168h+var_144] 0 +
jz loc_4189ED  +
mov [esp+168h+var_168] 0Ah +
call putchar  +
mov edx [esp+168h+var_140] +
mov [esp+168h+var_148] offset unk_4BDD20 +
mov [esp+168h+var_144] 0 +
test edx edx +
jnz loc_41868A  +
jmp loc_4187CC  +
add [esp+168h+var_144] 1 +
mov eax [esp+168h+var_144] +
add [esp+168h+var_148] 18h +
cmp ds:dword_4BD9A0 eax +
jbe loc_4187CC  +
mov eax [esp+168h+arg_4] +
mov ecx [esp+168h+var_144] +
mov eax [eax+1Ch] +
cmp byte ptr [eax+ecx] 1 +
jnz loc_418670  +
mov edi [esp+168h+var_148] +
mov eax [edi] +
test eax eax +
jz loc_418670  +
mov [esp+168h+var_164] eax +
xor ebp ebp +
mov esi 0Ch +
mov [esp+168h+var_168] offset aS_3 +
mov ebx 4 +
call sub_47D0D0  +
mov edx [edi+8] +
mov edi [edx] +
test edi edi +
jnz loc_41871A  +
jmp loc_418796  +
mov [esp+168h+var_168] offset asc_4BE214 +
mov ebx 4 +
call sub_47D0D0  +
mov eax [esp+168h+var_148] +
mov edx [eax+8] +
mov eax [edx+ebp] +
mov [esp+168h+var_168] offset aS_4 +
mov [esp+168h+var_164] eax +
call sub_47D0D0  +
add ebx [esp+168h+var_150] +
mov eax [esp+168h+var_148] +
mov edx [eax+8] +
lea eax [esi+0Ch] +
mov edi [edx+esi] +
test edi edi +
jz loc_418796  +
mov ebp esi +
mov esi eax +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_14C] edx +
call strlen  +
cmp ebx 4 +
mov edx [esp+168h+var_14C] +
mov [esp+168h+var_150] eax +
jbe loc_4186EA  +
lea ebx [ebx+eax+1] +
cmp [esp+168h+arg_0] ebx +
jb loc_4186D2  +
mov [esp+168h+var_164] edi +
mov [esp+168h+var_168] offset aS_9 +
call sub_47D0D0  +
jmp loc_418701  +
mov esi ebp +
and esi 7FFh +
jz loc_4189DC  +
xor eax eax +
xor ebx ebx +
jmp loc_418774  +
add ebx 1 +
cmp ebx 0Bh +
mov eax ebx +
jz loc_418647  +
bt esi eax +
jnb loc_418766  +
mov eax ds:off_4BCCA0[ebx*4] +
mov [esp+168h+var_168] offset aNoneFound_UseH +
mov [esp+168h+var_160] eax +
mov [esp+168h+var_164] eax +
call sub_47D0D0  +
jmp loc_418766  +
mov [esp+168h+var_168] offset asc_4BE20D +
call sub_47D0D0  +
mov eax [esp+168h+arg_4] +
mov ecx [esp+168h+var_144] +
mov eax [eax+1Ch] +
mov byte ptr [eax+ecx] 2 +
jmp loc_418670  +
mov [esp+168h+var_168] 0Ah +
call putchar  +
add esp 15Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
xor esi esi +
mov ebp [esp+168h+arg_4] +
and edi 1000000h +
mov [esp+168h+var_150] edi +
jmp loc_418818  +
mov [esp+168h+var_168] edi +
call strlen  +
mov ecx [esp+168h+arg_0] +
mov edx edi +
mov [esp+168h+var_168] ecx +
mov ecx eax +
mov eax ebx +
call sub_418280  +
add esi 18h +
cmp esi 1278h +
jz loc_4187C0  +
mov eax ds:dword_4D9140 +
add eax esi +
mov ebx [eax+10h] +
mov edi [eax] +
test ebx ebx +
jz loc_41882D  +
cmp byte ptr [ebx] 0 +
jnz loc_41883A  +
mov ecx [esp+168h+var_150] +
test ecx ecx +
jnz loc_41880D  +
mov ebx offset aThisOptionLack +
mov edx [ebp+0C88h] +
test edx edx +
jnz loc_4187F0  +
mov ebx [eax+0Ch] +
mov ecx [eax+8] +
mov eax [eax+4] +
mov [esp+168h+var_160] offset aDefaultDMinimu +
mov [esp+168h+var_154] ebx +
lea ebx [esp+168h+var_118] +
mov [esp+168h+var_158] ecx +
mov [esp+168h+var_15C] eax +
lea eax [esp+168h+var_118] +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_168] eax +
call sub_47D260  +
jmp loc_4187F0  +
mov [esp+168h+var_164] eax +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_148] edx +
call sub_41E6C0  +
lea ecx [esp+168h+var_118] +
mov edx [esp+168h+var_148] +
cmp [esp+168h+var_144] 1Ch +
mov [esp+168h+var_138] eax +
jbe loc_418991  +
mov eax 9 +
mov word ptr [esp+168h+var_118] ax +
mov eax [esp+168h+var_138] +
test eax eax +
jz loc_418ABA  +
mov eax [ebx+30h] +
mov [esp+168h+var_148] ecx +
cmp eax 6 +
jz loc_4185F8  +
test byte ptr [ebx+26h] 40h +
jz loc_418A7B  +
cmp eax 4 +
jz loc_418AC3  +
cmp eax 5 +
jz loc_418B70  +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_134] ebx +
mov ebx edx +
mov [esp+168h+var_148] ecx +
mov eax [eax] +
mov [esp+168h+var_138] eax +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4188FB  +
mov [esp+168h+var_130] ebx +
mov ebx [esp+168h+var_134] +
mov [esp+168h+var_134] ecx +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
mov ecx [esp+168h+var_148] +
mov [esp+168h+var_164] offset aD +
lea edx [ecx+2] +
cmovz ecx edx +
add al al +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_148] ecx +
sbb [esp+168h+var_148] 3 +
mov [esp+168h+var_160] eax +
mov eax [esp+168h+var_148] +
mov [esp+168h+var_168] eax +
call sub_47D150  +
mov ecx [esp+168h+var_134] +
mov edx [esp+168h+var_130] +
mov [esp+168h+var_148] ecx +
jmp loc_4185F8  +
mov ecx [esp+168h+arg_4] +
movzx eax word ptr [ebx+2Ch] +
add eax [ecx+1Ch] +
cmp byte ptr [eax] 2 +
jz loc_418623  +
mov byte ptr [eax] 1 +
jmp loc_418623  +
mov eax 909h +
mov word ptr [esp+168h+var_118] ax +
mov byte ptr [esp+168h+var_118+2] 0 +
jmp loc_4188AF  +
mov eax [esp+168h+var_13C] +
test eax eax +
jnz loc_418623  +
mov edx offset aThisOptionLack +
jmp loc_418488  +
mov ecx [ebx] +
mov [esp+168h+var_148] edx +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_138] ecx +
call strlen  +
mov ecx [esp+168h+var_138] +
mov edx ecx +
mov [esp+168h+var_144] eax +
jmp loc_4185E3  +
mov [esp+168h+var_168] offset aNoOptionsWithT +
call sub_47D0D0  +
jmp loc_418647  +
mov [esp+168h+var_168] offset aAllOptionsWith +
call sub_47D0D0  +
jmp loc_418647  +
mov ebx ds:dword_4BD9A0 +
mov [esp+168h+var_168] 1 +
mov [esp+168h+var_164] ebx +
call sub_452A20  +
mov ecx [esp+168h+arg_4] +
mov [esp+168h+var_140] ebx +
mov [ecx+1Ch] eax +
jmp loc_4183F2  +
mov ebx ds:dword_4BCC44 +
mov [esp+168h+var_168] 1 +
mov [esp+168h+var_164] ebx +
mov esi ebx +
call sub_452A20  +
mov ecx [esp+168h+arg_4] +
mov [ecx+20h] eax +
jmp loc_4183D7  +
lea ecx [esp+168h+var_118] +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_15C] eax +
mov [esp+168h+var_160] offset aSameAsS_UseThe +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D260  +
mov ecx [esp+168h+var_148] +
jmp loc_4184E5  +
mov eax [esp+168h+arg_4] +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_138] edx +
mov [esp+168h+var_164] eax +
call sub_41E6F0  +
mov ecx offset aEnabled +
test eax eax +
mov eax offset aDisabled +
cmovz ecx eax +
mov eax [esp+168h+var_148] +
mov [esp+168h+var_164] ecx +
mov [esp+168h+var_168] eax +
call strcat  +
mov edx [esp+168h+var_138] +
jmp loc_4185F8  +
mov [esp+168h+var_148] ecx +
jmp loc_4185F8  +
mov eax [esp+168h+var_138] +
mov eax [eax] +
test eax eax +
mov [esp+168h+var_134] eax +
jz loc_4185F8  +
mov [esp+168h+var_138] ebx +
mov ebx edx +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_418ADB  +
mov edx eax +
shr edx 10h +
test eax 8080h +
mov [esp+168h+var_130] ebx +
mov ebx [esp+168h+var_138] +
mov [esp+168h+var_138] eax +
mov eax edx +
mov edx [esp+168h+var_148] +
cmovnz eax [esp+168h+var_138] +
mov [esp+168h+var_160] offset aS_4 +
mov [esp+168h+var_138] eax +
lea eax [edx+2] +
cmovz edx eax +
movzx eax byte ptr [esp+168h+var_138] +
add byte ptr [esp+168h+var_138] al +
mov eax [esp+168h+var_134] +
mov [esp+168h+var_148] edx +
sbb [esp+168h+var_148] 3 +
sub [esp+168h+var_148] ecx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_15C] eax +
mov eax 100h +
mov [esp+168h+var_148] ecx +
sub eax edx +
mov [esp+168h+var_164] eax +
mov eax edx +
add eax ecx +
mov [esp+168h+var_168] eax +
call sub_47D260  +
mov edx [esp+168h+var_130] +
jmp loc_4185F8  +
mov [esp+168h+var_12C] ecx +
movzx ecx word ptr [ebx+2Ch] +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_130] edx +
mov [esp+168h+var_11C] 0 +
lea ecx [ecx+ecx*2] +
lea ecx ds:4BDD20h[ecx*8] +
mov edx [ecx+14h] +
mov [esp+168h+var_148] ecx +
mov [esp+168h+var_168] eax +
call edx  +
mov ecx [esp+168h+var_148] +
mov edx [esp+168h+arg_8] +
mov ecx [ecx+8] +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] eax +
lea eax [esp+168h+var_11C] +
mov [esp+168h+var_164] eax +
mov [esp+168h+var_168] ecx +
call sub_41C150  +
mov eax [esp+168h+var_11C] +
mov edx [esp+168h+var_130] +
mov ecx [esp+168h+var_12C] +
test eax eax +
mov [esp+168h+var_134] eax +
jz loc_418C03  +
mov [esp+168h+var_138] ebx +
mov ebx edx +
mov [esp+168h+var_148] ecx +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_418BE2  +
jmp loc_418AF7  +
mov [esp+168h+var_11C] offset aDefault +
mov [esp+168h+var_134] offset aDefault +
jmp loc_418BD8  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax 1 +
sub esp 2Ch +
mov [esp+30h+var_1C] ecx +
movzx ecx byte ptr ds:dword_4BCC40 +
mov [esp+30h+var_20] edx +
mov edi [esp+30h+arg_0] +
shl eax cl +
lea ebx [eax-1] +
cmp eax 10000h +
mov [esp+30h+var_14] ebx +
ja loc_418E2B  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_418DD0  +
mov edx [esp+30h+var_20] +
mov ebx 1 +
xor ecx ecx +
and edx [esp+30h+var_14] +
mov ebp offset unk_4BE21A +
xor eax eax +
mov [esp+30h+var_18] edx +
jmp loc_418CCA  +
cmp edx 10000h +
jz loc_418D60  +
cmp edx 20000h +
jz loc_418D50  +
test edx edx +
jz loc_418CC0  +
cmp ds:dword_4BCC40 ecx +
jbe loc_418CC0  +
mov edx [esp+30h+var_18] +
mov eax offset aTheFollowingOp +
mov ebp ds:off_4BCCA0[ecx*4] +
test edx edx +
mov edx offset aTheFollowing_0 +
cmovz eax edx +
nop   +
add ecx 1 +
add ebx ebx +
cmp ecx 16h +
jz loc_418D06  +
mov edx ebx +
and edx esi +
cmp edx 40000h +
jz loc_418D70  +
jbe loc_418C80  +
cmp edx 100000h +
jz loc_418D90  +
cmp edx 200000h +
jz loc_418D80  +
cmp edx 80000h +
jnz loc_418C9C  +
add ecx 1 +
add ebx ebx +
cmp ecx 16h +
jnz loc_418CCA  +
test eax eax +
jz loc_418DA0  +
mov [esp+30h+var_28] ebp +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] offset aSS_0 +
call sub_47D0D0  +
mov edx [esp+30h+arg_4] +
mov eax [edi+0A0h] +
mov ecx [esp+30h+var_1C] +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_28] edx +
mov edx [esp+30h+var_20] +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_4183A0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax offset aTheFollowing_1 +
jmp loc_418CC0  +
mov eax offset aTheParamOption +
jmp loc_418CC0  +
mov eax offset aTheFollowing_2 +
jmp loc_418CC0  +
mov eax offset aTheFollowing_3 +
jmp loc_418CC0  +
mov eax offset aTheFollowing_4 +
jmp loc_418CC0  +
mov eax [esp+30h+var_1C] +
test eax eax +
jnz loc_418DED  +
test esi 1000000h +
jnz loc_418E07  +
test esi 800000h +
jnz loc_418E11  +
test esi 400000h +
jz loc_418E1B  +
mov eax offset aTheFollowing_5 +
jmp loc_418D0E  +
call sub_4237D0  +
mov edx 50h +
cmp eax 7FFFFFFFh +
cmovnz edx eax +
mov [edi+0A0h] edx +
jmp loc_418C63  +
mov ebx [esp+30h+var_14] +
mov eax offset aTheFollowing_6 +
mov edx offset aTheFollowing_3 +
test [esp+30h+var_1C] ebx +
cmovz eax edx +
jmp loc_418D0E  +
mov eax offset aTheFollowing_7 +
jmp loc_418D0E  +
mov eax offset aTheFollowing_8 +
jmp loc_418D0E  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] offset aUnrecognizedIn +
call sub_425330  +
mov [esp+30h+var_28] offset aPrint_specific +
mov [esp+30h+var_2C] 54Dh +
mov [esp+30h+var_30] offset a____GccGccOpts +
call sub_424080  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp 4 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_24] +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+var_28] +
mov ebx edx +
mov [esp+6Ch+var_54] eax +
jmp loc_418EFF  +
add ebx 4 +
mov [esp+6Ch+var_60] 0 +
mov esi offset aOrd +
mov edi ebx +
mov ecx ebp +
cmps   +
jnz loc_418F50  +
add ebx 4 +
xor edx edx +
mov [esp+6Ch+var_5C] 1 +
mov esi offset aNone_0 +
mov ecx ebp +
mov edi ebx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_418F73  +
add ebx 4 +
xor ecx ecx +
cmp [esp+6Ch+var_60] 3 +
jz loc_418FF4  +
mov eax [esp+6Ch+var_5C] +
test eax eax +
jz loc_418EE1  +
mov eax [esp+6Ch+var_58] +
mov edi [esp+6Ch+var_60] +
mov [eax+edi*4+40h] ecx +
test edx edx +
jz loc_418EF1  +
mov eax [esp+6Ch+var_58] +
mov edx [esp+6Ch+var_60] +
mov [eax+edx*4+34h] ecx +
movzx eax byte ptr [ebx] +
cmp al 2Ch +
jnz loc_419030  +
add ebx 1 +
mov esi offset aDfn +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_418E77  +
mov esi offset aDir +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419070  +
mov esi offset aInd +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_4190B2  +
mov [esp+6Ch+var_60] 3 +
mov esi offset aOrd +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_418E93  +
nop   +
lea esi [esi+0] +
mov esi offset aGen +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419090  +
mov edx 1 +
mov [esp+6Ch+var_5C] 1 +
jmp loc_418EA0  +
mov ecx 3 +
mov esi offset aAny +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_419080  +
mov ecx 3 +
mov esi offset aSys +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_4190A5  +
mov ecx ebp +
mov esi offset aBase +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_4190C2  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_68] offset aArgumentQsToFe +
mov [esp+6Ch+var_50] edx +
mov [esp+6Ch+var_6C] eax +
call sub_425230  +
mov ecx 3 +
mov edx [esp+6Ch+var_50] +
cmp [esp+6Ch+var_60] 3 +
jnz loc_418ECD  +
mov esi [esp+6Ch+var_5C] +
test esi esi +
jz loc_419009  +
mov eax [esp+6Ch+var_58] +
mov [eax+40h] ecx +
mov [eax+44h] ecx +
mov [eax+48h] ecx +
test edx edx +
jz loc_418EF1  +
mov eax [esp+6Ch+var_58] +
mov [eax+34h] ecx +
mov [eax+38h] ecx +
mov [eax+3Ch] ecx +
movzx eax byte ptr [ebx] +
cmp al 2Ch +
jz loc_418EFC  +
lea esi [esi+0] +
test al al +
jnz loc_4190D8  +
mov eax [esp+6Ch+var_58] +
mov edx [eax+48h] +
cmp [eax+44h] edx +
jl loc_419050  +
mov edx [eax+3Ch] +
cmp [eax+38h] edx +
jge loc_4190D0  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_28] offset aFemitStructDeb +
mov [esp+6Ch+var_2C] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425230  +
add ebx 4 +
mov [esp+6Ch+var_60] 1 +
jmp loc_418E82  +
add ebx 3 +
mov ecx 3 +
jmp loc_418EC2  +
add ebx 4 +
mov edx 1 +
mov [esp+6Ch+var_5C] 0 +
jmp loc_418EA0  +
add ebx 3 +
mov ecx 2 +
jmp loc_418EC2  +
add ebx 4 +
mov [esp+6Ch+var_60] 2 +
jmp loc_418E82  +
add ebx 4 +
mov ecx 1 +
jmp loc_418EC2  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_68] offset aArgumentQsTo_0 +
mov [esp+6Ch+var_6C] eax +
call sub_425230  +
jmp loc_419038  +
***
push ebx  +
mov ecx [esp+0Ch] +
mov eax [esp+8] +
cmp ecx 2 +
jle loc_419139  +
lea ebx [eax+ecx-2] +
cmp byte ptr [ebx] 2Eh +
lea edx [eax+ecx-3] +
mov eax 2 +
jnz loc_419132  +
jmp loc_419140  +
cmp eax 5 +
jg loc_419139  +
mov ebx edx +
sub edx 1 +
cmp byte ptr [edx+1] 2Eh +
jz loc_419140  +
add eax 1 +
cmp ecx eax +
jg loc_419122  +
pop ebx  +
retn   +
***
mov byte ptr [ebx] 0 +
pop ebx  +
retn   +
***
push ebx  +
mov edi [esp+arg_0] +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_4191A9  +
lea edx [edi+1] +
xor ebx ebx +
jmp loc_419175  +
movzx ecx byte ptr [edx] +
mov edi edx +
mov eax edx +
xor ebx ebx +
add edx 1 +
test cl cl +
jz loc_419194  +
cmp cl 5Ch +
lea esi [edx-1] +
jz loc_419165  +
cmp cl 2Fh +
jz loc_419165  +
cmp cl 2Eh +
movzx ecx byte ptr [edx] +
mov eax edx +
cmovz ebx esi +
add edx 1 +
test cl cl +
jnz loc_419175  +
mov edx ebx +
sub eax edi +
sub edx edi +
test ebx ebx +
cmovnz eax edx +
mov edx [esp+arg_4] +
mov [edx] edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_41919F  +
***
mov [esp+2Ch] ebx +
mov [esp+20h] eax +
mov eax off_4835E0 +
mov [esp+28h] ecx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
sub esp 2Ch +
mov [esp+2Ch+var_1C] offset loc_425700 +
mov [esp+2Ch+var_20] offset loc_4256C0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 10000h +
mov [esp+2Ch+var_2C] offset dword_4D90C0 +
call sub_458DA0  +
add esp 2Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
call sub_420340  +
mov esi ds:dword_4D90C0 +
test esi esi +
jz loc_4193B1  +
test ebp ebp +
mov esi offset unk_4BCCE0 +
mov ecx 330h +
mov edi ebx +
mov edx eax +
movs   +
jz loc_419380  +
test ebp 1 +
mov edi ebp +
mov esi 0CC0h +
jnz loc_4193A1  +
test edi 2 +
jnz loc_419390  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jnz loc_419368  +
and esi 1 +
jnz loc_419360  +
lea eax ds:0[edx*4] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_4529F0  +
mov edx [esp+1Ch+var_10] +
mov [ebx+54h] eax +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edx +
call sub_452A20  +
mov [ebp+54h] eax +
mov eax [ebx+54h] +
mov [esp+1Ch+var_1C] eax +
call sub_4202E0  +
mov eax dword_4835F0 +
mov dword ptr [ebx+0A60h] 1 +
mov dword ptr [ebx+0A40h] 2 +
mov [ebx+94h] eax +
movzx eax byte_4835FC +
mov [ebx+0BACh] eax +
mov eax off_4835E4 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov byte ptr [edi] 0 +
jmp loc_4192E3  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_4192E3  +
jmp loc_419360  +
shl edx 2 +
mov [esp+1Ch+var_1C] edx +
call sub_4529F0  +
mov [ebx+54h] eax +
jmp loc_419313  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_4192C9  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov si 0CBFh +
jmp loc_4192BD  +
mov [esp+1Ch+var_14] offset aInit_options_s +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____GccGccOpts +
call sub_424080  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] eax +
jmp free  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+5Ch] +
mov ebp [esp+50h] +
cmp edi 1 +
jbe loc_419854  +
mov ebx [esp+58h] +
mov esi 1 +
mov ecx 1 +
mov byte ptr [esp+2Fh] 0 +
mov edx 0FFh +
jmp loc_419452  +
cmp eax 7Fh +
jz loc_4196D8  +
add eax 0FFFFFF80h +
jnz loc_419448  +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+80h] 3 +
mov dword ptr [ebp+88h] 1 +
mov dword ptr [ebp+84h] 0 +
add esi 1 +
add ebx 2Ch +
cmp esi edi +
jz loc_419490  +
mov eax [ebx+2Ch] +
cmp eax 81h +
jz loc_419740  +
jbe loc_419412  +
cmp eax 82h +
jz loc_419711  +
cmp eax 33Ch +
jnz loc_419448  +
mov eax [ebx+50h] +
test eax eax +
movzx eax byte ptr [esp+2Fh] +
cmovnz eax ecx +
add esi 1 +
add ebx 2Ch +
cmp esi edi +
mov [esp+2Fh] al +
jnz loc_419452  +
nop   +
mov eax [ebp+84h] +
mov esi [ebp+80h] +
test eax eax +
mov eax [ebp+88h] +
setnz cl  +
test eax eax +
mov eax [ebp+8Ch] +
setnz dl  +
test eax eax +
setnz al  +
movzx edi cl +
movzx eax al +
mov [esp+24h] edi +
mov ebx offset unk_4BF070 +
movzx edi dl +
mov [esp+28h] eax +
mov ecx offset unk_4BF060 +
mov eax [esp+6Ch] +
mov edx [esp+54h] +
mov [esp+8] edi +
mov [esp] esi +
mov [esp+1Ch] eax +
mov eax [esp+60h] +
mov [esp+18h] eax +
mov eax [esp+68h] +
mov [esp+14h] eax +
mov eax [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax ebp +
call sub_417B90  +
mov ecx ebx +
add ebx 10h +
mov eax [ebx-10h] +
test eax eax +
jnz loc_4194D2  +
cmp byte ptr [esp+2Fh] 0 +
mov eax [ebp+80h] +
jz loc_41953F  +
mov edx [esp+54h] +
mov ebx [edx+7CCh] +
test ebx ebx +
jz loc_4197A0  +
mov edx [esp+54h] +
cmp eax 1 +
mov ebx [ebp+54h] +
mov esi [edx+54h] +
jle loc_4197BD  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp+4] 64h +
mov dword ptr [esp] 6Dh +
call sub_420220  +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
mov esi [eax+54h] +
mov dword ptr [esp] 86h +
call loc_4202C0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] eax +
mov dword ptr [esp] 86h +
call sub_420220  +
mov ecx [ebp+88h] +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
test ecx ecx +
mov esi [eax+54h] +
mov eax 1 +
jz loc_419843  +
mov [esp+4] eax +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 0A2h +
call sub_420220  +
mov edx [ebp+8Ch] +
mov eax [esp+54h] +
test edx edx +
jz loc_419770  +
mov edx [eax+54h] +
mov eax [ebp+54h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 43h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov eax [ebp+84h] +
test eax eax +
jz loc_41963B  +
mov eax [esp+54h] +
mov edx [eax+54h] +
mov eax [ebp+54h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] 68h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov eax [ebp+84h] +
test eax eax +
mov eax [ebp+88h] +
mov ecx off_4835E8 +
setnz bl  +
mov esi [ebp+80h] +
test eax eax +
mov eax [ebp+8Ch] +
mov edi [ecx] +
setnz dl  +
test eax eax +
setnz al  +
test edi edi +
jz loc_4196D0  +
movzx edi bl +
movzx eax al +
mov [esp+28h] edi +
lea ebx [ecx+10h] +
movzx edi dl +
mov [esp+50h] ebp +
mov ebp [esp+28h] +
mov [esp+24h] eax +
mov eax [esp+6Ch] +
mov edx [esp+54h] +
mov [esp+0Ch] ebp +
mov [esp+8] edi +
mov [esp+1Ch] eax +
mov eax [esp+60h] +
mov [esp] esi +
mov [esp+18h] eax +
mov eax [esp+68h] +
mov [esp+14h] eax +
mov eax [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
call sub_417B90  +
mov ecx ebx +
add ebx 10h +
mov eax [ebx-10h] +
test eax eax +
jnz loc_419684  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+34h] +
cmp byte ptr [eax] 0 +
jnz loc_4197F5  +
mov dword ptr [ebp+80h] 1 +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419448  +
***
mov dword ptr [ebp+8Ch] 1 +
mov dword ptr [ebp+80h] 2 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419448  +
***
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+80h] 1 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 1 +
jmp loc_419448  +
***
mov esi [eax+54h] +
mov ebx [ebp+54h] +
mov dword ptr [esp] 43h +
call loc_4202C0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 43h +
mov [esp+4] eax +
call sub_420220  +
jmp loc_419605  +
***
mov edx [esp+54h] +
cmp eax 1 +
mov dword ptr [ebp+7CCh] 1 +
mov ebx [ebp+54h] +
mov esi [edx+54h] +
jg loc_419552  +
mov dword ptr [esp] 6Dh +
call loc_4202C0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 6Dh +
mov [esp+4] eax +
call sub_420220  +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
mov esi [eax+54h] +
mov eax 3E8h +
jmp loc_419584  +
***
mov [esp] eax +
mov [esp+28h] edx +
mov [esp+24h] ecx +
call sub_41C040  +
mov ecx [esp+24h] +
mov edx [esp+28h] +
cmp eax 0FFFFFFFFh +
jz loc_419885  +
cmp eax 0FFh +
cmova eax edx +
mov [ebp+80h] eax +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419448  +
***
mov dword ptr [esp] 0A2h +
call loc_4202C0  +
jmp loc_4195B9  +
***
mov eax [ebp+84h] +
mov edx [ebp+88h] +
mov ebx [ebp+8Ch] +
mov esi [ebp+80h] +
test eax eax +
setnz cl  +
test edx edx +
setnz dl  +
test ebx ebx +
setnz al  +
mov byte ptr [esp+2Fh] 0 +
jmp loc_4194B7  +
***
mov eax [esp+60h] +
mov dword ptr [esp+4] offset aArgumentToOSho +
mov [esp] eax +
call sub_425230  +
mov ecx [esp+24h] +
mov edx [esp+28h] +
jmp loc_419448  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov ebp [esp+54h] +
mov eax [ebx+4CCh] +
test eax eax +
jz loc_419914  +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_419914  +
cmp dl 2Fh +
jz loc_419914  +
test dl dl +
jz loc_4198E2  +
cmp byte ptr [eax+1] 3Ah +
nop   +
jz loc_419914  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_419914  +
mov edx [ebx+4D0h] +
test edx edx +
jz loc_41A069  +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] edx +
call sub_41C5E0  +
mov [ebx+4CCh] eax +
mov byte ptr [ebx+10h] 1 +
mov esi [ebx+0B98h] +
test esi esi +
jnz loc_419957  +
mov ecx [ebx+0A20h] +
test ecx ecx +
jz loc_419936  +
mov edx [ebp+0A20h] +
test edx edx +
jnz loc_419F69  +
cmp dword ptr [ebx+0AECh] 1 +
mov dword ptr [ebx+0A20h] 0 +
jz loc_419FBF  +
mov dword ptr [ebx+0AECh] 0 +
mov eax [ebx+0A38h] +
test eax eax +
jz loc_41996B  +
mov dword ptr [ebx+0AC8h] 1 +
mov eax [ebx+738h] +
test eax eax +
jz loc_419983  +
mov eax [ebx+8B4h] +
test eax eax +
jnz loc_419EC5  +
mov eax [ebx+80h] +
test eax eax +
mov eax [ebx+0AECh] +
jnz loc_41999C  +
cmp eax 2 +
jz loc_419F03  +
test eax eax +
jz loc_419D50  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_4199CB  +
mov eax [ebx+4D8h] +
cmp eax 0FFFFFFFFh +
jz loc_419ED6  +
test eax eax +
jz loc_41A036  +
mov [ebx+4D4h] eax +
mov byte ptr [ebx+14h] 1 +
cmp dword ptr [ebx+0A98h] 0FFFFFFFFh +
jz loc_419E50  +
mov ecx [ebx+80h] +
test ecx ecx +
jnz loc_4199F6  +
mov dword ptr [ebx+240h] 0 +
mov dword ptr [ebx+790h] 1 +
mov [esp] ebx +
call off_4835F4  +
mov edx [ebx+6C8h] +
test edx edx +
mov edx [ebx+9A0h] +
jz loc_419A17  +
test edx edx +
jnz loc_419DB9  +
mov esi [ebx+0BACh] +
test esi esi +
jz loc_419C00  +
cmp byte_4835FC 0 +
jnz loc_419C00  +
test edx edx +
jnz loc_419F34  +
lea esi [esi+0] +
mov edi [ebx+0A24h] +
test edi edi +
jnz loc_419A54  +
mov dword ptr [ebx+0A28h] 0 +
mov esi [ebx+5E8h] +
test esi esi +
jnz loc_419E04  +
mov ecx [ebx+864h] +
test ecx ecx +
jz loc_419A8B  +
mov edx [ebx+6E4h] +
mov dword ptr [ebx+68h] 1 +
mov dword ptr [ebx+0BF8h] 0 +
test edx edx +
jz loc_419C84  +
mov eax [ebx+0A80h] +
cmp eax 0FFFFFFFFh +
jz loc_419CC7  +
test eax eax +
jnz loc_419E7C  +
cmp dword ptr [ebx+0BD0h] 1 +
jz loc_419CDE  +
mov eax [ebx+0B48h] +
test eax eax +
jnz loc_419C40  +
mov eax [ebx+0B70h] +
test eax eax +
jnz loc_419C40  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0A0h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov edi [ebx+0C24h] +
test edi edi +
jz loc_419B01  +
mov dword ptr [ebx+0C1Ch] 2 +
mov eax [ebx+98h] +
mov edx eax +
and edx 6 +
cmp edx 6 +
jz loc_41A017  +
mov edx eax +
and edx 9 +
cmp edx 9 +
jz loc_419FD8  +
and eax 18h +
cmp eax 18h +
jz loc_419FFE  +
mov esi offset dword_4BF784 +
mov eax offset aAddress +
mov edi [esp+58h] +
jmp loc_419B4A  +
add esi 10h +
mov eax [esi-4] +
test eax eax +
jz loc_419B78  +
mov edx [esi] +
test [ebx+9Ch] edx +
jz loc_419B40  +
cmp byte ptr [esi+8] 0 +
jnz loc_419B40  +
mov [esp+8] eax +
add esi 10h +
mov dword ptr [esp+4] offset aFsanitizeRecov +
mov [esp] edi +
call sub_425230  +
mov eax [esi-4] +
test eax eax +
jnz loc_419B4A  +
mov eax [ebx+98h] +
test eax 180400h +
jz loc_419B8F  +
mov dword ptr [ebx+650h] 0 +
test eax 0FFFFFEEFh +
jz loc_419BAA  +
mov dword ptr [ebx+4F0h] 0 +
mov dword ptr [ebx+0AB8h] 0 +
mov edx eax +
and edx 2 +
jz loc_419BBF  +
mov esi [ebp+9C8h] +
test esi esi +
jz loc_419C53  +
mov ecx [ebx+9C8h] +
test ecx ecx +
jnz loc_419C5D  +
test edx edx +
jz loc_419BDF  +
mov ecx [ebx+738h] +
test ecx ecx +
jnz loc_419EAE  +
test al 4 +
jz loc_419BF1  +
mov edx [ebx+738h] +
test edx edx +
jnz loc_419DF0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test edx edx +
jz loc_419A40  +
cmp byte_4835FD 0 +
jnz loc_419D77  +
mov eax [ebp+9A0h] +
test eax eax +
jnz loc_41A041  +
mov dword ptr [ebx+9A0h] 0 +
mov dword ptr [ebx+998h] 1 +
jmp loc_419A40  +
***
mov eax [ebx+0B38h] +
test eax eax +
jnz loc_419AED  +
jmp loc_419ACB  +
***
mov dword ptr [ebx+9C8h] 1 +
mov edi [ebx+0A9Ch] +
test edi edi +
jz loc_419C75  +
mov esi [ebp+0A9Ch] +
test esi esi +
jnz loc_419F82  +
mov dword ptr [ebx+0A9Ch] 0 +
jmp loc_419BCD  +
***
mov eax [ebp+0BB8h] +
test eax eax +
jz loc_419A8B  +
mov eax [ebx+0BB8h] +
test eax eax +
jnz loc_419A8B  +
mov eax [ebp+6E4h] +
test eax eax +
jnz loc_41A180  +
mov eax [ebx+0A80h] +
mov dword ptr [ebx+6E4h] 1 +
cmp eax 0FFFFFFFFh +
jnz loc_419A9A  +
cmp dword ptr [ebx+0BD0h] 1 +
mov dword ptr [ebx+0A80h] 0 +
jnz loc_419AAF  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 6 +
mov dword ptr [esp] 52h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 51h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 53h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
jmp loc_419AAF  +
***
mov edi [ebx+0A20h] +
test edi edi +
jz loc_419D68  +
mov esi [ebp+0A20h] +
test esi esi +
jnz loc_419FA6  +
mov dword ptr [ebx+0A20h] 0 +
jmp loc_4199A4  +
***
mov edx [ebx+0BACh] +
test edx edx +
jz loc_419D9C  +
cmp byte_4835FC 0 +
jz loc_419D9C  +
cmp eax 2 +
jg loc_419C15  +
cmp eax 1 +
jz loc_419C15  +
mov eax [ebp+964h] +
test eax eax +
jnz loc_419E5F  +
mov dword ptr [ebx+9A0h] 0 +
jmp loc_419A40  +
***
cmp eax 2 +
jg loc_419DC7  +
cmp eax 1 +
jnz loc_419A17  +
mov edi [ebp+9A0h] +
test edi edi +
jnz loc_41A15F  +
mov dword ptr [ebx+9A0h] 0 +
xor edx edx +
mov dword ptr [ebx+998h] 1 +
jmp loc_419A17  +
***
mov dword ptr [esp] offset aTransactionalM +
call sub_4252D0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 64h +
mov dword ptr [esp] 18h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 28h +
mov dword ptr [esp] 19h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420220  +
jmp loc_419A62  +
***
mov dword ptr [ebx+0A98h] 0 +
jmp loc_4199D8  +
***
mov eax [ebp+9A4h] +
test eax eax +
jnz loc_419A40  +
mov dword ptr [ebx+9A4h] 1 +
jmp loc_419A40  +
***
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call off_4835F8  +
test al al +
jnz loc_419AA2  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsplitStackIsN +
mov [esp] eax +
call sub_425230  +
jmp loc_419CC7  +
***
mov dword ptr [esp] offset aTransactiona_0 +
call sub_4252D0  +
mov eax [ebx+98h] +
jmp loc_419BDF  +
***
mov dword ptr [esp] offset aTransactiona_1 +
call sub_4252D0  +
jmp loc_419983  +
***
mov eax [ebx+4D4h] +
mov dword ptr [ebx+4D8h] 0 +
cmp eax 0FFFFFFFFh +
jz loc_41A05A  +
test eax eax +
jz loc_4199C7  +
mov dword ptr [ebx+78h] 1 +
jmp loc_4199C7  +
***
mov eax [ebx+0A20h] +
test eax eax +
jz loc_419F1B  +
mov eax [ebp+0A20h] +
test eax eax +
jnz loc_4199A4  +
mov dword ptr [ebx+0AECh] 0 +
mov dword ptr [ebx+0A20h] 0 +
jmp loc_4199A4  +
***
cmp eax 2 +
jg loc_419F42  +
cmp eax 1 +
jnz loc_419C08  +
mov ecx [ebp+9A0h] +
test ecx ecx +
jz loc_419C23  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBlocks +
mov [esp] eax +
call sub_424EB0  +
jmp loc_419C23  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aSectionAnchors +
mov [esp] eax +
call sub_425230  +
jmp loc_419936  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAddre +
mov [esp] eax +
call sub_425230  +
mov eax [ebx+98h] +
mov edx eax +
and edx 2 +
jmp loc_419C75  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aSectionAncho_0 +
mov [esp] eax +
call sub_425230  +
jmp loc_419D68  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aToplevelReorde +
mov [esp] eax +
call sub_425230  +
jmp loc_41994D  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAdd_0 +
mov [esp] eax +
call sub_425230  +
mov eax [ebx+98h] +
and eax 18h +
cmp eax 18h +
jnz loc_419B2F  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeLeakI +
mov [esp] eax +
call sub_425230  +
jmp loc_419B2F  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAdd_1 +
mov [esp] eax +
call sub_425230  +
mov eax [ebx+98h] +
jmp loc_419B15  +
***
mov eax [ebx+4D4h] +
jmp loc_419EE6  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBloc_0 +
mov [esp] eax +
call sub_424EB0  +
jmp loc_419C23  +
***
mov dword ptr [ebx+4D4h] 0 +
jmp loc_4199C7  +
***
mov eax [ebx+4C8h] +
test eax eax +
jz loc_419910  +
mov edi offset aNul_0 +
mov ecx 4 +
mov esi eax +
cmps   +
jz loc_419910  +
lea edx [esp+2Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_419150  +
mov edi [ebx+4C8h] +
mov esi [esp+2Ch] +
cmp edi esi +
jz loc_419910  +
mov eax [ebx+4CCh] +
sub esi edi +
mov [esp] eax +
call strlen  +
mov edx ds:dword_4D90D0 +
mov [esp+14h] esi +
mov ecx edx +
lea esi [esi+eax+1] +
mov eax ds:dword_4D90CC +
sub ecx eax +
cmp esi ecx +
ja loc_41A1A5  +
mov ecx ds:dword_4D90C8 +
add eax esi +
cmp eax ecx +
mov [esp+18h] ecx +
jz loc_41A199  +
mov ecx ds:dword_4D90D8 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D90C4 +
mov esi eax +
mov ds:dword_4D90CC eax +
sub esi ecx +
mov [esp+1Ch] esi +
mov esi edx +
sub esi ecx +
cmp [esp+1Ch] esi +
jbe loc_41A121  +
mov ds:dword_4D90CC edx +
mov eax edx +
mov esi [esp+14h] +
mov [esp+4] edi +
mov edi [esp+18h] +
mov ds:dword_4D90C8 eax +
mov [esp+8] esi +
mov [esp] edi +
call memcpy  +
mov eax [ebx+4CCh] +
mov [esp+4] eax +
mov eax esi +
add eax edi +
mov [esp] eax +
call strcpy  +
mov [ebx+4CCh] edi +
jmp loc_419910  +
***
mov [esp+14h] eax +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBloc_1 +
mov [esp] eax +
call sub_424EB0  +
mov eax [esp+14h] +
jmp loc_419DD5  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFnoFatLtoObjec +
mov [esp] eax +
call sub_425230  +
jmp loc_419CAE  +
***
or ds:byte_4D90E8 2 +
jmp loc_41A0F0  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset dword_4D90C0 +
call sub_458E00  +
mov eax ds:dword_4D90CC +
mov edx ds:dword_4D90D0 +
mov edi [ebx+4C8h] +
jmp loc_41A0DC  +
***
push esi  +
push ebx  +
sub esp 4Ch +
movzx eax [esp+4Ch+arg_14] +
mov ebp [esp+4Ch+arg_0] +
mov [esp+4Ch+var_D] al +
cmp byte ptr [ebp+0] 0 +
jz loc_41A21B  +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] ebp +
call strchr  +
mov esi eax +
sub esi ebp +
test eax eax +
mov [esp+4Ch+var_24] eax +
jz loc_41A3E1  +
test esi esi +
jnz loc_41A227  +
mov ebp [esp+4Ch+var_24] +
add ebp 1 +
cmp byte ptr [ebp+0] 0 +
jnz loc_41A1EA  +
mov eax [esp+4Ch+arg_C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax offset aAddress +
xor ebx ebx +
jmp loc_41A23D  +
mov eax ds:off_4BF790[edi] +
add ebx 1 +
test eax eax +
jz loc_41A286  +
mov edi ebx +
shl edi 4 +
cmp ds:dword_4BF788[edi] esi +
jnz loc_41A230  +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call memcmp  +
test eax eax +
jnz loc_41A230  +
mov edx [esp+4Ch+arg_10] +
mov eax ds:dword_4BF784[edi] +
test edx edx +
jnz loc_41A3F0  +
not eax  +
and [esp+4Ch+arg_C] eax +
mov ebp [esp+4Ch+var_24] +
test ebp ebp +
jz loc_41A21B  +
add ebp 1 +
jmp loc_41A1E4  +
cmp [esp+4Ch+var_D] 0 +
jz loc_41A276  +
mov eax esi +
mov ebx offset dword_4BF784 +
shr eax 1 +
mov edi offset aAddress +
mov [esp+4Ch+var_20] eax +
mov eax 0FFFFFFFFh +
mov [esp+4Ch+arg_0] ebp +
mov ebp eax +
mov [esp+4Ch+var_18] 0 +
jmp loc_41A32E  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41A2CC  +
cmp [esp+4Ch+arg_8] 392h +
jnz loc_41A2CC  +
mov eax [esp+4Ch+arg_10] +
test eax eax +
jnz loc_41A324  +
mov [esp+4Ch+var_4C] edi +
call strlen  +
mov edx eax +
mov ecx eax +
sub edx esi +
mov eax edx +
sar eax 1Fh +
xor edx eax +
sub edx eax +
cmp edx ebp +
jnb loc_41A324  +
mov eax ecx +
shr eax 1 +
cmp esi ecx +
cmova eax [esp+4Ch+var_20] +
cmp eax edx +
jb loc_41A324  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_1C] ecx +
call sub_420490  +
cmp eax ebp +
jnb loc_41A324  +
mov ecx [esp+4Ch+var_1C] +
mov ebp eax +
mov [esp+4Ch+var_18] edi +
mov [esp+4Ch+var_14] ecx +
add ebx 10h +
mov edi [ebx-4] +
test edi edi +
jz loc_41A357  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_41A2B4  +
cmp [esp+4Ch+arg_8] 395h +
jnz loc_41A2B4  +
mov eax [esp+4Ch+arg_10] +
test eax eax +
jz loc_41A2B4  +
add ebx 10h +
mov edi [ebx-4] +
test edi edi +
jnz loc_41A32E  +
mov edi [esp+4Ch+var_18] +
mov edx ebp +
mov ebp [esp+4Ch+arg_0] +
test edi edi +
jz loc_41A37C  +
mov ecx [esp+4Ch+var_14] +
mov eax ecx +
shr eax 1 +
cmp esi ecx +
cmova eax [esp+4Ch+var_20] +
cmp edx eax +
ja loc_41A408  +
test edx edx +
jz loc_41A408  +
mov ecx [esp+4Ch+var_18] +
test ecx ecx +
jz loc_41A408  +
mov ebx [esp+4Ch+arg_10] +
mov eax offset aRecover +
mov edx offset unk_4BE21A +
cmp [esp+4Ch+arg_8] 395h +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_38] ebp +
cmovnz edx eax +
test ebx ebx +
mov eax offset aNo +
mov ebx offset unk_4BE21A +
cmovnz eax ebx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_3C] esi +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aUnrecognizedAr +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
jmp loc_41A276  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
mov esi eax +
jmp loc_41A20A  +
cmp eax 0FFFFFFFFh +
jz loc_41A459  +
cmp [esp+4Ch+arg_8] 392h +
jz loc_41A470  +
or [esp+4Ch+arg_C] eax +
jmp loc_41A276  +
cmp [esp+4Ch+arg_8] 395h +
mov eax offset aRecover +
mov edx offset unk_4BE21A +
mov ecx offset unk_4BE21A +
mov [esp+4Ch+var_38] ebp +
cmovnz edx eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_3C] esi +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aUnrecognized_1 +
test eax eax +
mov eax offset aNo +
cmovnz eax ecx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
jmp loc_41A276  +
cmp [esp+4Ch+arg_8] 395h +
jz loc_41A484  +
or [esp+4Ch+arg_C] 0FFFFF6E7h +
jmp loc_41A276  +
cmp eax 7E7FE0h +
jnz loc_41A3FF  +
or [esp+4Ch+arg_C] 7E76E0h +
jmp loc_41A276  +
cmp [esp+4Ch+var_D] 0 +
jz loc_41A276  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] offset aFsanitizeAllOp +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
jmp loc_41A276  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ecx [esp+5Ch+arg_8] +
mov eax [esp+5Ch+arg_8] +
cmp dword ptr [ecx+20h] 2 +
mov eax [eax] +
mov ebp [ecx+8] +
mov ebx [ecx+24h] +
ja loc_41BC7C  +
cmp eax 342h +
jg loc_41A604  +
cmp eax 341h +
jge loc_41A552  +
cmp eax 1F0h +
jz loc_41B80C  +
jg loc_41A5B0  +
cmp eax 0F2h +
jz loc_41B988  +
nop   +
jle loc_41A6F0  +
cmp eax 188h +
jz loc_41B669  +
jg loc_41A8E0  +
cmp eax 16Eh +
jz loc_41AC98  +
jle loc_41B2F5  +
cmp eax 16Fh +
jz loc_41B4A4  +
cmp eax 172h +
jnz loc_41B090  +
cmp ebx 1 +
mov esi [esp+5Ch+arg_0] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esi+3C0h] eax +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_10] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_40FD60  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 25Bh +
jz loc_41A552  +
jle loc_41A823  +
cmp eax 2DBh +
jz loc_41B8ED  +
jle loc_41A9A5  +
cmp eax 31Eh +
jz loc_41B8C0  +
jg loc_41AA70  +
cmp eax 30Ah +
jz loc_41B633  +
cmp eax 315h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_1C] +
mov [eax+70h] ebx +
jmp loc_41A552  +
cmp eax 3D6h +
jz loc_41B9A2  +
jg loc_41A677  +
cmp eax 391h +
jz loc_41B7F1  +
lea esi [esi+0] +
jle loc_41A770  +
cmp eax 3A5h +
jz loc_41B832  +
jg loc_41AF50  +
cmp eax 395h +
jz loc_41ACAE  +
jle loc_41B2A6  +
cmp eax 3A3h +
jz loc_41B495  +
cmp eax 3A4h +
jnz loc_41B090  +
mov esi [esp+5Ch+arg_0] +
mov eax 0FFFFFFFFh +
test ebx ebx +
cmovnz eax ebx +
mov [esi+0A00h] eax +
jmp loc_41A552  +
cmp eax 45Bh +
jz loc_41B7C1  +
jg loc_41A871  +
cmp eax 434h +
jle loc_41AFA0  +
cmp eax 456h +
jz loc_41B851  +
jg loc_41AA10  +
cmp eax 44Fh +
jz loc_41B64E  +
cmp eax 454h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
mov edx 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_417DE0  +
jmp loc_41A552  +
cmp eax 67h +
jz loc_41B55A  +
lea esi [esi+0] +
jg loc_41AF10  +
cmp eax 1Ch +
jz loc_41ABF1  +
nop   +
jle loc_41B31B  +
cmp eax 3Dh +
jz loc_41B4C3  +
cmp eax 5Dh +
jnz loc_41B090  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41A552  +
call [esp+5Ch+arg_20]  +
mov eax [esp+7Ch] +
xor ecx ecx +
mov edx 1000000h +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
mov eax 100000h +
call sub_418C20  +
lea esi [esi+0] +
mov eax [esp+70h] +
mov byte ptr [eax+11h] 1 +
jmp loc_41A552  +
cmp eax 365h +
jz loc_41B892  +
jle loc_41AFF4  +
cmp eax 36Dh +
jz loc_41AB88  +
lea esi [esi+0] +
jg loc_41B281  +
cmp eax 369h +
jz loc_41A7C9  +
cmp eax 36Ah +
jnz loc_41B090  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452AC0  +
mov esi [esp+5Ch+arg_0] +
mov dword ptr [esi+964h] 1 +
mov [esi+954h] eax +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
mov edx [esp+5Ch+arg_4] +
call sub_417A10  +
mov eax [esp+5Ch+arg_4] +
mov esi [eax+958h] +
test esi esi +
jnz loc_41A7F0  +
mov eax [esp+5Ch+arg_0] +
mov [eax+958h] ebx +
mov eax [esp+5Ch+arg_4] +
mov ecx [eax+65Ch] +
test ecx ecx +
jnz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov edx [eax+0BE0h] +
test edx edx +
jz loc_41A552  +
mov dword ptr [eax+65Ch] 0 +
jmp loc_41A552  +
cmp eax 23Bh +
jz loc_41A552  +
jle loc_41B06F  +
cmp eax 253h +
jz loc_41B621  +
nop   +
jg loc_41A9E1  +
cmp eax 250h +
jz loc_41B839  +
cmp eax 252h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+0A3h]  +
jmp loc_41A552  +
cmp eax 46Dh +
jg loc_41B034  +
cmp eax 46Ch +
jge loc_41AD9E  +
cmp eax 468h +
jg loc_41B0C4  +
cmp eax 467h +
jge loc_41B774  +
cmp eax 466h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_14] +
mov ecx offset unk_4BE21A +
mov edx 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_417DE0  +
jmp loc_41A552  +
cmp eax 1C4h +
jz loc_41A980  +
nop   +
lea esi [esi+0] +
jg loc_41B215  +
cmp eax 1BCh +
jz loc_41B56D  +
cmp eax 1BFh +
jnz loc_41B090  +
mov [esp+5Ch+var_5C] ebp +
call sub_452AC0  +
mov [esp+5Ch+var_5C] eax +
mov esi eax +
call strlen  +
cmp eax 2 +
mov ebx eax +
jle loc_41A95B  +
lea eax [esi+eax-2] +
mov edx 2 +
cmp byte ptr [eax] 2Eh +
lea ecx [esi+ebx-3] +
jnz loc_41A954  +
jmp loc_41BA66  +
cmp edx 5 +
jg loc_41A95B  +
mov eax ecx +
sub ecx 1 +
cmp byte ptr [ecx+1] 2Eh +
jz loc_41BA66  +
add edx 1 +
cmp ebx edx +
jg loc_41A940  +
cmp byte ptr [esi] 0 +
jz loc_41B755  +
mov eax [esp+5Ch+arg_0] +
mov [eax+4C8h] esi +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+13h] 1 +
nop   +
lea esi [esi+0] +
movsx eax byte ptr [ebp+0] +
test al al +
jz loc_41A552  +
lea edx [eax-41h] +
add ebp 1 +
cmp dl 37h +
ja loc_41ADD6  +
movzx edx dl +
jmp ds:off_4BEE30[edx*4]  +
cmp eax 2CDh +
jz loc_41AB97  +
jle loc_41B0FB  +
cmp eax 2D2h +
jz loc_41B7AC  +
cmp eax 2D3h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov edx ebp +
add eax 0ACh +
call sub_417EE0  +
jmp loc_41A552  +
cmp eax 254h +
jz loc_41B881  +
cmp eax 255h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+63h]  +
jmp loc_41A552  +
cmp eax 458h +
jz loc_41B902  +
cmp eax 459h +
jnz loc_41B090  +
lea eax [ebx-2] +
cmp eax 3 +
ja loc_41BA03  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0C14h] ebx +
mov eax [esp+5Ch+arg_14] +
mov ecx offset unk_4BE21A +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 3 +
call sub_417DE0  +
jmp loc_41A552  +
cmp eax 339h +
jz loc_41B53E  +
cmp eax 33Ah +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+12h] 1 +
cmp byte ptr [ebp+0] 0 +
jz loc_41A552  +
mov ebx offset aDisable_0 +
jmp loc_41AABA  +
cmp dl 2Ch +
jz loc_41AB04  +
test eax eax +
jz loc_41A552  +
cmp byte ptr [eax+1] 0 +
lea ebp [eax+1] +
jz loc_41A552  +
mov [esp+5Ch+var_58] 2Ch +
mov esi ebp +
mov edi ebx +
mov [esp+5Ch+var_5C] ebp +
call strchr  +
mov ecx 7 +
cmps   +
jnz loc_41AAEC  +
movzx edx byte ptr [ebp+7] +
test dl dl +
jz loc_41BB19  +
cmp dl 2Ch +
jz loc_41BB19  +
mov edi offset aHsa +
mov esi ebp +
mov ecx 3 +
cmps   +
jnz loc_41AAA5  +
movzx edx byte ptr [ebp+3] +
test dl dl +
jnz loc_41AAA0  +
mov [esp+5Ch+var_5C] offset aHsaHasNotBeenE +
mov [esp+5Ch+var_28] eax +
call sub_4252D0  +
mov eax [esp+5Ch+var_28] +
jmp loc_41AAA5  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+90h] 1 +
jmp loc_41A980  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+74h] 1 +
jmp loc_41A980  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+60h] 1 +
mov dword ptr [eax+74h] 1 +
jmp loc_41A980  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 16h +
call signal  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+64h] 1 +
jmp loc_41A980  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+5Ch] 1 +
jmp loc_41A980  +
xor eax eax +
test ebx ebx +
jz loc_41A552  +
jmp loc_41A5A7  +
mov eax [esp+5Ch+arg_4] +
mov ecx ebx +
shr ecx 1Fh +
add ebx ecx +
sar ebx 1 +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] offset aMaxInlineInsns +
mov [esp+5Ch+var_54] eax +
call sub_420120  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] offset aMaxInlineIns_0 +
mov [esp+5Ch+var_54] eax +
call sub_420120  +
jmp loc_41A552  +
cmp [esp+5Ch+arg_C] 80000h +
mov [esp+5Ch+var_14] 0 +
mov esi ds:_strnicmp +
mov [esp+5Ch+var_10] 0 +
jz loc_41A552  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_41AC64  +
lea ecx [esp+5Ch+var_14] +
cmp al 5Eh +
mov [esp+5Ch+var_24] ecx +
jz loc_41AEB0  +
mov [esp+5Ch+var_58] 2Ch +
mov [esp+5Ch+var_5C] ebp +
call strchr  +
mov ebx eax +
sub ebx ebp +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_41B060  +
test ebx ebx +
jnz loc_41AE00  +
mov ebp [esp+5Ch+var_28] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_41AC1D  +
mov ebx [esp+5Ch+var_14] +
test ebx ebx +
jz loc_41A760  +
call [esp+5Ch+arg_20]  +
mov eax [esp+7Ch] +
xor ecx ecx +
mov edx [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
mov eax ebx +
call sub_418C20  +
jmp loc_41A760  +
mov eax [esp+5Ch+arg_0] +
cmp ebx 0FFFFFFFFh +
mov [eax+3B4h] ebx +
setnz byte ptr [eax+15h]  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+98h] +
mov [esp+5Ch+var_48] 1 +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_54] 395h +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_41A1D0  +
mov esi [esp+5Ch+arg_0] +
test al 4 +
mov [esi+98h] eax +
jz loc_41A552  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esi+54h] +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0B1h +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_54] eax +
call sub_420220  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0ACh +
mov [esp+5Ch+var_54] eax +
call sub_420220  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0ABh +
mov [esp+5Ch+var_54] eax +
call sub_420220  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0B0h +
mov [esp+5Ch+var_54] eax +
call sub_420220  +
jmp loc_41A552  +
xor edx edx +
cmp eax 46Dh +
mov eax [esp+5Ch+arg_14] +
setz dl  +
mov ecx ebp +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 4 +
call sub_417DE0  +
jmp loc_41A552  +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] offset aUnrecognizedGc +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] eax +
call sub_424FC0  +
jmp loc_41A980  +
mov eax offset aOptimizers +
xor edi edi +
jmp loc_41AE22  +
add edi 1 +
mov eax ds:off_4BEF80[edi*8] +
test eax eax +
jz loc_41AFE7  +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
call esi  +
test eax eax +
jnz loc_41AE10  +
mov eax ds:dword_4BEF84[edi*8] +
mov [esp+3Ch] eax +
mov eax ds:dword_4BCC40 +
test eax eax +
jz loc_41AED0  +
xor edi edi +
jmp loc_41AE5B  +
add edi 1 +
cmp edi ds:dword_4BCC40 +
jz loc_41AED0  +
mov eax ds:off_4BCCA0[edi*4] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] ebp +
mov [esp-10h+arg_0] eax +
call esi  +
test eax eax +
jnz loc_41AE50  +
mov ecx edi +
mov edi [esp+3Ch] +
mov edx 1 +
shl edx cl +
test edi edi +
jz loc_41AF01  +
test edx edx +
jnz loc_41B9B7  +
mov eax [esp+38h] +
mov ecx [esp+3Ch] +
or [eax] ecx +
mov ebp [esp+34h] +
test ebp ebp +
jz loc_41AC64  +
add ebp 1 +
jmp loc_41AC15  +
cmp byte ptr [ebp+1] 0 +
lea eax [ebp+1] +
jz loc_41BB57  +
mov ebp eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_24] eax +
jmp loc_41AC2D  +
mov eax [esp+3Ch] +
test eax eax +
jnz loc_41AE8C  +
mov eax [esp+84h] +
mov [esp-10h+arg_C] ebp +
mov [esp-10h+arg_8] ebx +
mov [esp-10h+arg_4] offset aUnrecognized_2 +
mov [esp-10h+arg_0] 0 +
mov [esp+0] eax +
call sub_424FC0  +
jmp loc_41AE96  +
test edx edx +
jz loc_41AED8  +
mov eax [esp+38h] +
or [eax] edx +
jmp loc_41AE96  +
cmp eax 0DCh +
jz loc_41B762  +
jle loc_41BB8B  +
cmp eax 0DEh +
jz loc_41B67B  +
cmp eax 0E1h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+6Ch]  +
jmp loc_41A552  +
cmp eax 3CEh +
jz loc_41AB88  +
jg loc_41BBAC  +
cmp eax 3B7h +
jz loc_41B8AE  +
cmp eax 3CDh +
jnz loc_41B090  +
mov edi offset aNo_1 +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_41BA23  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+50h] 0 +
jmp loc_41A552  +
cmp eax 432h +
jge loc_41A552  +
cmp eax 422h +
jz loc_41B5E8  +
cmp eax 42Bh +
jz loc_41B57D  +
cmp eax 3F7h +
jnz loc_41B090  +
test ebx ebx +
jz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+0C04h] 0 +
jmp loc_41A552  +
mov [esp+5Ch+var_20] 0 +
jmp loc_41AE3E  +
cmp eax 358h +
jg loc_41B405  +
cmp eax 357h +
jge loc_41A552  +
cmp eax 349h +
jnz loc_41B090  +
lea eax [ebx-1] +
cmp eax 0Fh +
ja loc_41B9E3  +
test ebx eax +
jnz loc_41B9E3  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0A4h] ebx +
jmp loc_41A552  +
cmp eax 4A5h +
jz loc_41B91F  +
jle loc_41BB7B  +
cmp eax 4FBh +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+6Dh] 1 +
jmp loc_41A552  +
mov [esp+5Ch+var_5C] ebp +
call strlen  +
mov ebx eax +
jmp loc_41AC4D  +
cmp eax 237h +
jz loc_41A760  +
jg loc_41BBBC  +
lea edx [eax-1FFh] +
cmp edx 1 +
jbe loc_41A552  +
nop   +
mov esi [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_58] esi +
call sub_41E6C0  +
test eax eax +
jnz loc_41A552  +
mov [esp+5Ch+var_54] offset aCommon_handl_0 +
mov [esp+5Ch+var_58] 931h +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424080  +
cmp eax 46Bh +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 5 +
call sub_417DE0  +
jmp loc_41A552  +
cmp eax 281h +
jnz loc_41BB9C  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CBAh] 0 +
jnz loc_41B177  +
cmp byte ptr [eax+0CB9h] 0 +
mov [eax+0BA4h] ebx +
jnz loc_41B133  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0AF8h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB8h] 0 +
jnz loc_41B151  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0A64h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB0h] 0 +
jnz loc_41B164  +
mov [eax+520h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB5h] 0 +
jnz loc_41B177  +
mov [eax+980h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB3h] 0 +
jnz loc_41B18A  +
mov [eax+6E8h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB4h] 0 +
jnz loc_41B1A8  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+870h] eax +
test ebx ebx +
jz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB2h] 0 +
jnz loc_41B1C7  +
mov dword ptr [eax+6CCh] 1 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB7h] 0 +
jnz loc_41B1DE  +
mov dword ptr [eax+0A58h] 0 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB6h] 0 +
jnz loc_41B1F5  +
mov dword ptr [eax+9C0h] 0 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB1h] 0 +
jnz loc_41A552  +
mov dword ptr [eax+60Ch] 1 +
jmp loc_41A552  +
cmp eax 1EAh +
jz loc_41A552  +
cmp eax 1EFh +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
mov edx [esp+5Ch+arg_4] +
call sub_417A10  +
mov eax [esp+5Ch+arg_4] +
mov eax [eax+950h] +
test eax eax +
jnz loc_41B252  +
mov eax [esp+5Ch+arg_0] +
mov [eax+950h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0Ah +
mov [esp+5Ch+var_5C] 9 +
mov [esp+5Ch+var_54] eax +
call sub_420220  +
jmp loc_41A552  +
cmp eax 36Eh +
jz loc_41A552  +
cmp eax 38Fh +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov [eax+9C8h] ebx +
jmp loc_41A552  +
cmp eax 392h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+9Ch] +
mov [esp+5Ch+var_48] 1 +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_54] 392h +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_41A1D0  +
mov esi [esp+5Ch+arg_0] +
mov [esi+9Ch] eax +
jmp loc_41A552  +
cmp eax 110h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
sar ecx 1Fh +
cmp ebx 0FFFFFFFFh +
mov [eax+8] ebx +
mov [eax+0Ch] ecx +
setnz byte ptr [eax+1Ah]  +
jmp loc_41A552  +
cmp eax 1Bh +
jnz loc_41B090  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov edi 1 +
mov esi [esp+5Ch+arg_0] +
movzx ecx byte ptr ds:dword_4BCC40 +
mov eax [eax+1CCh] +
or eax [esi+0C94h] +
mov esi 1 +
cmp eax 1 +
sbb ebp ebp +
xor ebx ebx +
shl esi cl +
and ebp 1000000h +
call [esp+5Ch+arg_20]  +
mov eax ds:dword_4BCC40 +
sub esi 1 +
test eax eax +
jz loc_41B3AF  +
lea esi [esi+0] +
mov ecx ebx +
mov eax edi +
shl eax cl +
mov ecx [esp+7Ch] +
add ebx 1 +
mov edx eax +
not edx  +
and edx esi +
mov [esp-10h+arg_0] ecx +
mov ecx [esp+70h] +
or edx ebp +
mov [esp+0] ecx +
xor ecx ecx +
call sub_418C20  +
cmp ebx ds:dword_4BCC40 +
jnz loc_41B380  +
mov eax [esp+7Ch] +
mov ecx esi +
mov edx ebp +
mov ebx 10000h +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
xor eax eax +
call sub_418C20  +
mov esi [esp+70h] +
mov edi [esp+7Ch] +
cmp ebx 80000h +
mov eax 100000h +
cmovz ebx eax +
mov edx ebp +
xor ecx ecx +
mov eax ebx +
mov [esp-10h+arg_0] edi +
add ebx ebx +
mov [esp+0] esi +
call sub_418C20  +
cmp ebx 200000h +
jbe loc_41B3D6  +
jmp loc_41A760  +
cmp eax 364h +
jnz loc_41B090  +
mov eax [esp+5Ch+arg_4] +
mov eax [eax+94Ch] +
test eax eax +
jnz loc_41B428  +
mov eax [esp+5Ch+arg_0] +
mov [eax+94Ch] ebx +
mov eax [esp+5Ch+arg_4] +
mov ebp [eax+968h] +
test ebp ebp +
jnz loc_41B440  +
mov eax [esp+5Ch+arg_0] +
mov [eax+968h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edi [eax+798h] +
test edi edi +
jnz loc_41B458  +
mov eax [esp+5Ch+arg_0] +
mov [eax+798h] ebx +
mov eax [esp+5Ch+arg_4] +
mov esi [eax+7B0h] +
test esi esi +
jnz loc_41B470  +
mov eax [esp+5Ch+arg_0] +
mov [eax+7B0h] ebx +
mov eax [esp+5Ch+arg_4] +
mov ebx [eax+7D8h] +
test ebx ebx +
jnz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+7D8h] 0 +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0A04h] ebx +
jmp loc_41A552  +
cmp ebx 1 +
ja loc_41BC98  +
mov esi [esp+5Ch+arg_0] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esi+3B8h] eax +
jmp loc_41A552  +
mov [esp+5Ch+var_5C] ebp +
call sub_452AC0  +
mov [esp+5Ch+var_58] 3Dh +
mov [esp+5Ch+var_5C] eax +
mov ebx eax +
call strchr  +
test eax eax +
mov esi eax +
jz loc_41BBCC  +
mov byte ptr [eax] 0 +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
call sub_41FEF0  +
test al al +
jnz loc_41BA6E  +
mov [esp+5Ch+var_5C] ebx +
call sub_41FF50  +
test eax eax +
jz loc_41BC38  +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aInvalidParamNa +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
mov [esp+5Ch+var_5C] ebx +
call free  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_58] offset aFoffloadAbiOpt +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41A552  +
cmp [esp+5Ch+arg_C] 80000h +
jnz loc_41A760  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+64h] 1 +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB9h] 0 +
jnz loc_41B59B  +
mov esi [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [esi+0AF8h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB8h] 0 +
jnz loc_41B5B9  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0A64h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB0h] 0 +
jnz loc_41B5CC  +
mov [eax+520h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB5h] 0 +
jnz loc_41A552  +
mov [eax+980h] ebx +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_4] +
mov ecx [eax+0B48h] +
test ecx ecx +
jnz loc_41B600  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0B48h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+0B70h] +
test edx edx +
jnz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0B70h] ebx +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+58h]  +
jmp loc_41A552  +
mov esi [esp+5Ch+arg_0] +
xor eax eax +
mov edx offset unk_4BE21A +
test ebx ebx +
cmovnz eax edx +
mov [esi+864h] eax +
jmp loc_41A552  +
test ebx ebx +
jz loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+0AFCh] 0 +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+6Eh]  +
jmp loc_41A552  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41A552  +
mov [esp+5Ch+var_5C] ebp +
call strlen  +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call sub_4529F0  +
mov byte ptr [eax] 57h +
mov esi eax +
lea eax [eax+1] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call strcpy  +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_41BE50  +
cmp eax 500h +
mov ecx eax +
jz loc_41BC58  +
mov edx eax +
shl edx 6 +
mov eax ds:dword_4A8CA4[edx] +
test eax 20000h +
jz loc_41BBEC  +
cmp ebx 1 +
sbb edi edi +
xor ebp ebp +
and edi 2 +
add edi 4 +
test eax 400000h +
jz loc_41B701  +
movzx eax ds:byte_4A8C9C[edx] +
lea ebp [esi+eax] +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_38] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] eax +
xor eax eax +
test ebx ebx +
setnz al  +
mov [esp+5Ch+var_50] eax +
call sub_41E900  +
mov [esp+5Ch+var_5C] esi +
call free  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+3Ch]  +
jmp loc_41A552  +
xor edx edx +
cmp eax 468h +
mov eax [esp+5Ch+arg_14] +
setz dl  +
mov ecx ebp +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 1 +
call sub_417DE0  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov edx ebp +
add eax 0A8h +
call sub_417EE0  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
mov edx 2 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_417DE0  +
jmp loc_41A552  +
test ebx ebx +
mov eax [esp+5Ch+arg_0] +
jz loc_41BA57  +
or dword ptr [eax+9Ch] 0FFF6E0h +
jmp loc_41A552  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452AC0  +
mov esi [esp+5Ch+arg_0] +
mov dword ptr [esi+52Ch] 1 +
mov [esi+530h] eax +
jmp loc_41B22B  +
xor eax eax +
jmp loc_41A5A7  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_423A10  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 2 +
call sub_417DE0  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_1C] +
mov eax [eax] +
mov [eax+18h] ebx +
jmp loc_41A552  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452AC0  +
mov esi [esp+5Ch+arg_0] +
mov [esi+954h] eax +
jmp loc_41B410  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+65h]  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_1C] +
mov eax [eax] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_425A40  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_423800  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov [eax+7C0h] ebx +
mov [eax+7C4h] ebx +
jmp loc_41A552  +
test ebp ebp +
jz loc_41B910  +
cmp byte ptr [ebp+0] 0 +
jnz loc_41BAF1  +
mov eax [esp+5Ch+arg_0] +
mov ebx [eax+0C14h] +
jmp loc_41AA26  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+66h] 1 +
mov [esp+5Ch+var_38] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] 4 +
mov [esp+5Ch+var_5C] 143h +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] eax +
xor eax eax +
test ebx ebx +
setnz al  +
mov [esp+5Ch+var_50] eax +
call sub_41E900  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov esi ebx +
sar esi 1Fh +
cmp ebx 0FFFFFFFFh +
mov [eax] ebx +
mov [eax+4] esi +
setnz byte ptr [eax+19h]  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
test ebx ebx +
mov [eax+0AA0h] ebx +
setnz byte ptr [eax+15h]  +
jmp loc_41A552  +
mov [esp+3Ch] edx +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] offset aC_1 +
mov [esp+0] ebp +
call esi  +
test eax eax +
jnz loc_41BAC5  +
mov eax [esp+38h] +
mov edx [esp+3Ch] +
or [eax] edx +
jmp loc_41AE96  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aStructureAlign +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aDwarfVersionDI +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41AA3C  +
mov edi offset aGeneric +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_41BA47  +
mov edi offset aSpecific +
mov ecx 9 +
mov esi ebp +
cmps   +
jnz loc_41BC10  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+50h] 1 +
jmp loc_41A552  +
and dword ptr [eax+9Ch] 0FF00001Fh +
jmp loc_41A552  +
mov byte ptr [eax] 0 +
jmp loc_41A95B  +
lea eax [esp+5Ch+var_14] +
add esi 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] eax +
call sub_4200A0  +
test al al +
jz loc_41BB46  +
mov eax [esp+5Ch+var_14] +
cmp eax 0FFFFFFFFh +
jz loc_41BB26  +
mov esi [esp+5Ch+arg_4] +
mov ecx [esi+54h] +
mov esi [esp+5Ch+arg_0] +
mov edx [esi+54h] +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_54] edx +
call sub_420120  +
jmp loc_41B531  +
mov eax [esp+84h] +
mov [esp-10h+arg_C] ebp +
mov [esp-10h+arg_8] ebx +
mov [esp-10h+arg_4] offset aHelpArgumentQ_ +
mov [esp-10h+arg_0] 0 +
mov [esp+0] eax +
call sub_424FC0  +
jmp loc_41AE96  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] ebp +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aGdwarfSIsAmbig +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+12h] 1 +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] offset aInvalidParamVa +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41B531  +
mov [esp+5Ch+var_5C] esi +
call sub_41C040  +
mov [esp+5Ch+var_14] eax +
jmp loc_41BA95  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] offset aHelp_0 +
mov [esp+5Ch+var_58] offset aMissingArgumen +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41AC64  +
cmp eax 46Fh +
jle loc_41A552  +
jmp loc_41B090  +
lea edx [eax-7Fh] +
cmp edx 3 +
jbe loc_41A552  +
jmp loc_41B090  +
cmp eax 284h +
jz loc_41A552  +
jmp loc_41B090  +
cmp eax 3D0h +
jle loc_41A552  +
jmp loc_41B090  +
cmp eax 238h +
jz loc_41A552  +
jmp loc_41B090  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aSParamArgument +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41B531  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aWerrorSSIsNotA +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41B755  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] offset aUnknownStackCh +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] eax +
call sub_424FC0  +
jmp loc_41A552  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aInvalidParam_0 +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41B531  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aWerrorSNoOptio +
mov [esp+5Ch+var_5C] eax +
call sub_425230  +
jmp loc_41B755  +
mov [esp+5Ch+var_54] offset aCommon_handl_0 +
mov [esp+5Ch+var_58] 699h +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424080  +
mov [esp+5Ch+var_54] offset aSet_wstrict_al +
mov [esp+5Ch+var_58] 96Eh +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
mov edx [esp+5Ch+var_58] +
xor eax eax +
mov ecx [edx+0AF8h] +
test ecx ecx +
jnz locret_41BD02  +
mov ecx [edx+0BA4h] +
test ecx ecx +
jz locret_41BD02  +
mov ecx [edx+6E8h] +
test ecx ecx +
jz locret_41BD02  +
mov ecx [edx+0A64h] +
test ecx ecx +
jnz locret_41BD02  +
mov ecx [edx+870h] +
test ecx ecx +
jnz locret_41BD02  +
cmp dword ptr [edx+6CCh] 1 +
setz al  +
retn   +
***
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+8] +
mov edx [esp+10h] +
mov ecx [esp+14h] +
test eax eax +
jz loc_41BD82  +
cmp edx 0Ah +
jnz loc_41BDB0  +
cmp ecx 4 +
jz loc_41BDB7  +
shl eax 6 +
mov eax ds:off_4A8C80[eax] +
mov [esp+8] eax +
pop ebx  +
jmp sub_452AC0  +
***
cmp edx 6 +
jnz loc_41BDA0  +
cmp byte ptr [ebx+3Ch] 0 +
jz loc_41BDAA  +
mov eax ds:off_4AC380 +
mov [esp+8] eax +
pop ebx  +
jmp sub_452AC0  +
***
cmp edx 0Ah +
jz loc_41BD87  +
cmp ecx 6 +
jz loc_41BD87  +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 6 +
jz loc_41BD6A  +
jmp loc_41BD6F  +
***
shl eax 6 +
mov eax ds:off_4A8C80[eax] +
mov dword ptr [esp+10h] 0 +
add eax 2 +
mov [esp+0Ch] eax +
mov eax ds:off_4AC400 +
mov [esp+8] eax +
pop ebx  +
jmp sub_452BE0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] ecx +
mov ecx [eax] +
test ecx ecx +
jz loc_41BE40  +
mov edi [esp+1Ch+arg_0] +
mov esi edx +
mov ebx eax +
lea ebp [eax+0Ch] +
and edi 80000h +
jmp loc_41BE16  +
test byte ptr [ebx+8] 2 +
jz loc_41BE2A  +
mov ebx ebp +
add ebp 0Ch +
mov ecx [ebp-0Ch] +
test ecx ecx +
jz loc_41BE40  +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] esi +
call strcmp  +
test eax eax +
jnz loc_41BE0A  +
test edi edi +
jz loc_41BE04  +
mov eax [ebx+4] +
mov edx [esp+1Ch+var_10] +
mov [edx] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 2Ch +
mov ebp ds:dword_4BCC44 +
mov edi [esp+2Ch+arg_0] +
jmp loc_41BE98  +
lea esi [ebp+ebx+0] +
shr esi 1 +
mov eax esi +
shl eax 6 +
movzx edx ds:byte_4A8C9C[eax] +
mov eax ds:off_4A8C80[eax] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
add eax 1 +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
cmovs ebp esi +
cmovns ebx esi +
mov eax ebp +
sub eax ebx +
cmp eax 1 +
ja loc_41BE65  +
mov [esp+2Ch+var_14] ebx +
mov [esp+2Ch+var_18] 500h +
lea esi [esi+0] +
mov eax ebx +
shl eax 6 +
lea esi off_4A8C80[eax] +
mov eax ds:off_4A8C80[eax] +
movzx ebp byte ptr [esi+1Ch] +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_41BF02  +
cmp byte ptr [edi+ebp] 0 +
mov eax [esi+24h] +
jz loc_41BEEC  +
test eax 400000h +
jz loc_41BF02  +
test [esp+2Ch+arg_4] eax +
jnz loc_41BF1C  +
mov eax [esp+2Ch+var_18] +
cmp eax 500h +
cmovnz ebx eax +
mov [esp+2Ch+var_18] ebx +
movzx ebx word ptr [esi+1Ah] +
cmp ds:dword_4BCC44 ebx +
jnz loc_41BEB0  +
mov esi [esp+2Ch+var_18] +
cmp esi 500h +
mov ebx esi +
jz loc_41BF26  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi] 2Dh +
jnz loc_41BF1C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov ebp eax +
mov [esp+2Ch+var_18] eax +
call strlen  +
cmp ds:dword_4BCC44 ebp +
mov [esp+2Ch+var_10] eax +
mov eax ebp +
jbe loc_41BF1C  +
shl eax 6 +
mov ebx ebp +
lea ecx off_4A8C80[eax] +
mov eax [esp+2Ch+var_14] +
mov ebp ecx +
mov [esp+2Ch+arg_0] edi +
add eax 2 +
mov [esp+2Ch+var_14] eax +
jmp loc_41BFE5  +
cmp ebx [esp+2Ch+var_18] +
jz loc_41C025  +
mov edx [esp+2Ch+var_14] +
cmp edx ebx +
jnz loc_41C012  +
cmp esi [esp+2Ch+var_18] +
jnz loc_41C012  +
shl edx 6 +
test byte ptr [edx+4A8CA6h] 40h +
jz loc_41C012  +
mov eax esi +
movzx esi ds:byte_4A8C9C[edx] +
shl eax 6 +
movzx edx ds:byte_4A8C9C[eax] +
lea ecx [edx+1] +
cmp esi ecx +
jnz loc_41C012  +
mov eax ds:off_4A8C80[eax] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_41C012  +
add ebx 1 +
add ebp 40h +
cmp ds:dword_4BCC44 ebx +
jbe loc_41C01C  +
mov esi [esp+2Ch+var_18] +
mov eax [ebp+0] +
lea edi [eax+1] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call strncmp  +
test eax eax +
jz loc_41BF70  +
mov ebx esi +
jmp loc_41BF1C  +
mov ebx 500h +
jmp loc_41BF1C  +
mov ebx [esp+2Ch+var_18] +
jmp loc_41BF1C  +
mov eax ebx +
shl eax 6 +
test byte ptr [eax+4A8CA6h] 40h +
jz loc_41BFD3  +
jmp loc_41BF7A  +
***
mov ecx [esp+18h+arg_0] +
movzx ebx byte ptr [ecx] +
test bl bl +
jz loc_41C074  +
movzx eax bl +
test byte ptr ds:word_4D0620[eax+eax] 4 +
jz loc_41C081  +
mov eax ecx +
jmp loc_41C06A  +
test byte ptr ds:word_4D0620[edx+edx] 4 +
jz loc_41C081  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_41C060  +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp atoi  +
cmp bl 30h +
jnz loc_41C0E5  +
movzx eax byte ptr [ecx+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jnz loc_41C0E5  +
movzx eax byte ptr [ecx+2] +
lea ebx [ecx+2] +
test al al +
jz loc_41C0E5  +
test byte ptr [eax+eax+4D0621h] 1 +
jz loc_41C0E5  +
mov eax ebx +
jmp loc_41C0BA  +
test byte ptr [edx+edx+4D0621h] 1 +
jz loc_41C0E5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_41C0B0  +
cmp ebx eax +
jz loc_41C0E5  +
mov [esp+18h+var_10] 10h +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ecx +
call strtol  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
movzx eax word ptr [eax+2Ch] +
mov [esp+20h] ebx +
lea eax [eax+eax*2] +
mov eax ds:off_4BDD28[eax*8] +
add esp 18h +
pop ebx  +
jmp sub_41BDE0  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_0] +
mov ebx [esp+4+arg_8] +
mov esi [edi] +
test esi esi +
jz loc_41C1F0  +
mov ebp [esp+4+arg_C] +
lea eax [edi+0Ch] +
mov ecx esi +
mov [esp+4+var_4] eax +
mov edx edi +
and ebp 80000h +
jmp loc_41C18C  +
mov edx eax +
add eax 0Ch +
mov ecx [eax-0Ch] +
test ecx ecx +
jz loc_41C1B5  +
cmp [edx+4] ebx +
jnz loc_41C180  +
mov edx [edx+8] +
test dl 1 +
jz loc_41C180  +
test ebp ebp +
jnz loc_41C1A2  +
and edx 2 +
jnz loc_41C180  +
mov eax [esp+4+arg_4] +
mov [eax] ecx +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+4+arg_C] +
mov eax [esp+4+var_4] +
and edx 80000h +
jmp loc_41C1D0  +
mov edi eax +
add eax 0Ch +
mov esi [eax-0Ch] +
test esi esi +
jz loc_41C1F0  +
cmp ebx [edi+4] +
jnz loc_41C1C4  +
test edx edx +
jnz loc_41C1E0  +
test byte ptr [edi+8] 2 +
jnz loc_41C1C4  +
nop   +
mov eax [esp+4+arg_4] +
mov [eax] esi +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+arg_4] +
mov dword ptr [eax] 0 +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
test ecx ecx +
jz loc_41C5A9  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_41C58D  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_41C571  +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_452AC0  +
mov ebp eax +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax] +
test ebx ebx +
jz loc_41C55A  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_41C30B  +
cmp byte ptr [ebx+3] 0 +
jns loc_41C4F1  +
mov eax [esp+2Ch+arg_0] +
mov ecx 1 +
mov dword ptr [eax] 0 +
lea eax [esi+1] +
cmp eax 4 +
mov edi 4 +
cmovnb edi eax +
lea eax ds:8[edi*4] +
and edi 7FFFFFFFh +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_14] ecx +
call sub_452A70  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov ecx [esp+2Ch+var_14] +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx edi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
test cl cl +
mov [eax+3] dl +
jz loc_41C568  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx esi +
mov ebx [eax] +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov ebp offset off_4BFC60 +
jmp loc_41C32F  +
add ebp 10h +
cmp ebp offset unk_4BFD70 +
jz loc_41C461  +
mov esi [ebp+8] +
mov ebx [ebp+0] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov edi eax +
mov eax [esp+2Ch+arg_4] +
cmp byte ptr [eax+28h] 0 +
jns loc_41C34F  +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_41C320  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call strncmp  +
test eax eax +
jnz loc_41C320  +
add edi [esp+2Ch+arg_8] +
add ebx 1 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
call sub_452BE0  +
mov edi eax +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax] +
test ebx ebx +
jz loc_41C4E0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_41C448  +
cmp byte ptr [ebx+3] 0 +
jns loc_41C470  +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+1] +
mov [esp+2Ch+var_D] 1 +
mov dword ptr [eax] 0 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_14] edx +
call sub_452A70  +
mov ecx [esp+2Ch+arg_0] +
mov edx [esp+2Ch+var_14] +
mov [ecx] eax +
mov ecx edx +
mov edx [eax] +
and ecx 7FFFFFFFh +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+2Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_41C5CC  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx esi +
mov ebx [eax] +
mov [ebx+4] esi +
add ebp 10h +
lea eax [edx+1] +
cmp ebp offset unk_4BFD70 +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
jnz loc_41C32F  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+2Ch+var_28] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_41EFE0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_41C5C5  +
mov ebx [eax+4] +
mov [esp+2Ch+var_28] edx +
and esi 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_452A70  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_41C448  +
mov [esp+2Ch+var_D] 0 +
xor esi esi +
mov edx 1 +
jmp loc_41C3C1  +
add esi 1 +
mov [esp+2Ch+var_28] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_41EFE0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_41C5D5  +
mov ebx [eax+4] +
mov [esp+2Ch+var_28] edx +
and esi 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_452A70  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_41C30B  +
xor ecx ecx +
xor esi esi +
mov eax 1 +
jmp loc_41C289  +
mov ebx eax +
xor edx edx +
jmp loc_41C30B  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Ch +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424080  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Bh +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424080  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Ah +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424080  +
xor ebx ebx +
jmp loc_41C4A0  +
mov ebx eax +
xor edx edx +
jmp loc_41C448  +
xor ebx ebx +
jmp loc_41C521  +
***
push esi  +
push esi  +
push esi  +
mov edi 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov ebx [esp+24h+arg_10] +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_8] +
mov esi eax +
shl esi 6 +
mov [ebx] eax +
mov dword ptr [ebx+4] 0 +
mov [ebx+8] edx +
mov [ebx+24h] ecx +
mov esi ds:dword_4A8CA4[esi] +
mov ebp esi +
and ebp [esp+24h+arg_C] +
jz loc_41DA46  +
test esi 100000h +
jz loc_41DAB0  +
and esi 807FFh +
jz loc_41DAB0  +
and ebp 0FFCFFFFFh +
jnz loc_41DAB0  +
mov [ebx+28h] edi +
mov [esp+24h+var_24] ebx +
call sub_41C700  +
mov eax [ebx+20h] +
cmp eax 1 +
jz loc_41DAB4  +
cmp eax 2 +
jnz loc_41DA90  +
mov edx [ebx+14h] +
mov eax [ebx+10h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] offset asc_4BF99D +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] eax +
call sub_41C5E0  +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+24h+var_1C] offset aGenerate_optio +
mov [esp+24h+var_20] 41Bh +
mov [esp+24h+var_24] offset a____GccGccOp_0 +
call sub_424080  +
lea esi [esi+0] +
xor edi edi +
jmp loc_41DA46  +
mov eax [ebx+10h] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+4] +
mov dword ptr [eax] 503h +
mov dword ptr [eax+4] 0 +
mov [eax+8] edx +
mov [eax+0Ch] edx +
mov dword ptr [eax+20h] 1 +
mov [eax+10h] edx +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+24h] 1 +
mov dword ptr [eax+28h] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mov edi [eax] +
mov [esp+2Ch+var_1C] eax +
test edi edi +
jz loc_41DC12  +
mov eax [edi+4] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_41DC12  +
mov eax [edi+8] +
mov ebx 1 +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_10] esi +
mov esi edi +
mov edi [esp+2Ch+var_14] +
lea ebp [eax+1] +
mov eax 1 +
jmp loc_41DB8D  +
mov eax [esi+eax*4+8] +
add ebx 1 +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebp [ebp+eax+1] +
mov eax ebx +
cmp edi eax +
ja loc_41DB78  +
mov esi [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] ebp +
call sub_4529F0  +
mov [esi] eax +
mov ebx eax +
mov eax [esp+2Ch+var_1C] +
mov eax [eax] +
test eax eax +
jz loc_41DBF2  +
mov edx [eax+4] +
test edx edx +
jz loc_41DBF2  +
xor edx edx +
xor edi edi +
jmp loc_41DBBD  +
cmp edi [eax+4] +
jnb loc_41DBF2  +
mov ebp [eax+edx*4+8] +
add edi 1 +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call memcpy  +
mov eax [esp+2Ch+var_1C] +
mov edx edi +
mov byte ptr [ebx+esi] 20h +
lea ebx [ebx+esi+1] +
mov eax [eax] +
test eax eax +
jnz loc_41DBB8  +
mov eax [esp+2Ch+var_1C] +
mov byte ptr [ebx-1] 0 +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_420510  +
xor ebp ebp +
jmp loc_41DB95  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+4Ch+var_2C] edx +
mov edx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_30] eax +
test dl 1 +
jnz loc_41DE70  +
test dl 2 +
jz loc_41DC71  +
mov eax [esp+4Ch+var_2C] +
mov eax [eax+8] +
mov [esp+4Ch+var_44] ecx +
test eax eax +
jz loc_41DF40  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dl 8 +
jnz loc_41DF07  +
xor eax eax +
and edx 10h +
jz loc_41DC69  +
mov eax [esp+4Ch+var_2C] +
movzx eax word ptr [eax+2Ch] +
lea eax [eax+eax*2] +
lea eax ds:4BDD20h[eax*8] +
mov [esp+4Ch+var_28] eax +
mov eax [eax+4] +
test eax eax +
jz loc_41DF60  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
mov eax [esp+4Ch+var_28] +
mov ebp 0Ch +
mov edi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_10] 0 +
mov eax [eax+8] +
and edi 80000h +
mov [esp+4Ch+var_34] edi +
mov esi [eax] +
mov ebx eax +
test esi esi +
jnz loc_41DDCB  +
jmp loc_41DDED  +
mov esi [esp+4Ch+var_10] +
test esi esi +
jz loc_41DEF6  +
mov edi [esi] +
mov edx [esi+4] +
and edi 7FFFFFFFh +
cmp edi edx +
jnz loc_41DDAC  +
cmp byte ptr [esi+3] 0 +
jns loc_41DE91  +
mov [esp+4Ch+var_10] 0 +
lea edx [edi+1] +
mov [esp+4Ch+var_1D] 1 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_24] edx +
call sub_452A70  +
mov edx [esp+4Ch+var_24] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [esp+4Ch+var_10] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+4Ch+var_1D] 0 +
mov [eax+3] dl +
jz loc_41DFB2  +
lea edx ds:0[edi*4] +
add eax 8 +
add esi 8 +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov esi [esp+4Ch+var_10] +
mov edx edi +
mov [esi+4] edi +
mov eax [ebx] +
lea ecx [edx+1] +
mov [esi+4] ecx +
mov [esi+edx*4+8] eax +
mov eax [esp+4Ch+var_28] +
mov eax [eax+8] +
lea ebx [eax+ebp] +
add ebp 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_41DDED  +
mov ecx [esp+4Ch+var_34] +
test ecx ecx +
jnz loc_41DCF0  +
test byte ptr [ebx+8] 2 +
jz loc_41DCF0  +
lea ebx [eax+ebp] +
add ebp 0Ch +
mov edx [ebx] +
test edx edx +
jnz loc_41DDCB  +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_41DB20  +
test eax eax +
jz loc_41DF80  +
mov edi [esp+4Ch+var_2C] +
mov edx [edi] +
mov [esp+4Ch+var_3C] eax +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] offset aValidArguments +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_424EB0  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_41DE61  +
cmp byte ptr [eax+3] 0 +
js loc_41DF30  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] offset aCommandLineOpt +
call sub_425230  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
mov [esp+4Ch+var_48] edi +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call sub_41EFE0  +
mov edi eax +
lea edx ds:8[eax*4] +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_41DFAB  +
mov esi [eax+4] +
mov [esp+4Ch+var_48] edx +
and edi 7FFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call sub_452A70  +
mov edx [eax] +
mov [esp+4Ch+var_10] eax +
mov [eax+4] esi +
and edx 80000000h +
or edx edi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx esi +
mov esi eax +
jmp loc_41DDAC  +
mov [esp+4Ch+var_1D] 0 +
xor edi edi +
mov edx 1 +
jmp loc_41DD29  +
mov eax [esp+4Ch+var_2C] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aArgumentToQsSh +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
mov eax 1 +
jmp loc_41DC69  +
mov dword ptr [eax+4] 0 +
jmp loc_41DE61  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] offset aMissingArgum_0 +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
mov eax 1 +
jmp loc_41DC69  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] offset aUnrecognized_3 +
mov [esp+4Ch+var_4C] eax +
call sub_425230  +
jmp loc_41DCBA  +
mov eax [esp+4Ch+var_2C] +
mov edx [esp+4Ch+var_14] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aValidArgumen_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_424EB0  +
jmp loc_41DE3B  +
xor esi esi +
jmp loc_41DEBF  +
mov esi eax +
xor edx edx +
jmp loc_41DDAC  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebp [esp+3Ch+arg_8] +
mov edx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov ebx ebp +
mov ecx [esp+3Ch+arg_14] +
shl ebx 6 +
mov edi [esp+3Ch+arg_1C] +
add ebx offset off_4A8C80 +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_20] eax +
movzx eax word ptr [ebx+2Ah] +
cmp ax 0FFFFh +
jz loc_41E077  +
add edx eax +
jz loc_41E077  +
test ecx ecx +
jnz loc_41E080  +
test esi esi +
jz loc_41E0AC  +
movzx eax word ptr [ebx+2Ah] +
xor edi edi +
cmp ax 0FFFFh +
jz loc_41E029  +
movzx edi ax +
add edi esi +
mov eax [ebx+30h] +
cmp eax 6 +
ja loc_41E077  +
jmp ds:off_4BFAA4[eax*4]  +
mov ecx [esp+3Ch+var_24] +
test ecx ecx +
setz cl  +
cmp eax 3 +
setz al  +
cmp cl al +
jz loc_41E266  +
test byte ptr [ebx+29h] 4 +
mov eax [ebx+38h] +
jnz loc_41E350  +
or [edx] eax +
test edi edi +
jz loc_41E077  +
test byte ptr [ebx+29h] 4 +
mov eax [ebx+38h] +
jz loc_41E370  +
or [edi] eax +
mov eax [ebx+3Ch] +
or [edi+4] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_41E010  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_18] edx +
call sub_423CD0  +
test esi esi +
mov edx [esp+3Ch+var_18] +
jnz loc_41E018  +
xor edi edi +
jmp loc_41E029  +
movzx eax word ptr [ebx+2Ch] +
mov esi [esp+3Ch+var_24] +
lea eax [eax+eax*2] +
lea ebx ds:4BDD20h[eax*8] +
mov eax [ebx+10h] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] edx +
call eax  +
test edi edi +
jz loc_41E077  +
mov eax [ebx+10h] +
mov [esp+3Ch+arg_0] edi +
mov [esp+3Ch+arg_4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov esi [edx] +
test esi esi +
jz loc_41E38E  +
mov ebx [esi] +
test ebx ebx +
jz loc_41E377  +
mov eax [ebx] +
mov ecx [ebx+4] +
mov [esp+3Ch+var_20] eax +
and [esp+3Ch+var_20] 7FFFFFFFh +
cmp [esp+3Ch+var_20] ecx +
jnz loc_41E1D4  +
cmp byte ptr [ebx+3] 0 +
jns loc_41E2A2  +
mov eax [esp+3Ch+var_20] +
mov dword ptr [esi] 0 +
mov byte ptr [esp+3Ch+var_18] 1 +
add eax 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
call sub_452A70  +
mov ecx [esp+3Ch+var_14] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [esi] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [esp+3Ch+var_10] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [esp+3Ch+var_18] 0 +
mov [eax+3] cl +
jz loc_41E3BE  +
lea ecx [eax+8] +
mov eax [esp+3Ch+var_20] +
add ebx 8 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_18] edx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+3Ch+var_34] eax +
call memcpy  +
mov eax [esp+3Ch+var_20] +
mov ebx [esi] +
mov edx [esp+3Ch+var_18] +
mov ecx eax +
mov [ebx+4] eax +
lea eax [ecx+1] +
test edi edi +
mov [ebx+4] eax +
lea eax [ecx+ecx*2] +
lea ecx [ebx+eax*4] +
mov [ecx+8] ebp +
lea eax [ecx+8] +
mov ecx [esp+3Ch+var_1C] +
mov [eax+4] ecx +
mov ecx [esp+3Ch+var_24] +
mov [eax+8] ecx +
mov [edx] esi +
jz loc_41E077  +
mov [edi] esi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
test edi edi +
mov [edx] eax +
jz loc_41E077  +
mov dword ptr [edi] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
test edi edi +
mov [edx] eax +
jz loc_41E077  +
mov dword ptr [edi] offset unk_4BF99C +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+29h] 4 +
jz loc_41E284  +
mov ebp [esp+3Ch+var_24] +
test ebp ebp +
jnz loc_41E340  +
mov eax [ebx+38h] +
xor ecx ecx +
or eax [ebx+3Ch] +
setz cl  +
xor ebx ebx +
mov [edx] ecx +
mov [edx+4] ebx +
jmp loc_41E295  +
test byte ptr [ebx+29h] 4 +
jz loc_41E360  +
mov ecx [ebx+38h] +
mov eax [ebx+3Ch] +
not ecx  +
not eax  +
and [edx] ecx +
and [edx+4] eax +
jmp loc_41E05E  +
mov esi [esp+3Ch+var_24] +
mov eax [ebx+38h] +
test esi esi +
jz loc_41E330  +
mov [edx] eax +
test edi edi +
jnz loc_41E216  +
jmp loc_41E077  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_18] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41EFE0  +
mov edx [esp+3Ch+var_18] +
mov ebx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+3Ch+var_14] eax +
mov eax [esi] +
test eax eax +
jz loc_41E3B1  +
mov ecx [eax+4] +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_18] edx +
mov edx [esp+3Ch+var_14] +
and ebx 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_452A70  +
mov edx [esp+3Ch+var_20] +
mov ecx [eax] +
mov [esi] eax +
mov [eax+4] edx +
and ecx 80000000h +
or ecx ebx +
mov ebx eax +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
mov ecx edx +
mov edx [esp+3Ch+var_18] +
jmp loc_41E1D4  +
or eax [ebx+3Ch] +
setz al  +
movzx eax al +
jmp loc_41E293  +
mov ecx [ebx+38h] +
mov ebx [ebx+3Ch] +
jmp loc_41E25F  +
or [edx] eax +
mov eax [ebx+3Ch] +
or [edx+4] eax +
jmp loc_41E05E  +
mov eax [ebx+38h] +
not eax  +
and [edx] eax +
jmp loc_41E05E  +
or [edi] eax +
jmp loc_41E077  +
mov byte ptr [esp+3Ch+var_18] 0 +
mov eax 1 +
mov [esp+3Ch+var_20] 0 +
jmp loc_41E13B  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_20] edx +
call sub_452A20  +
mov edx [esp+3Ch+var_20] +
mov esi eax +
jmp loc_41E0FA  +
mov [esp+3Ch+var_20] 0 +
jmp loc_41E2E5  +
mov ebx eax +
xor ecx ecx +
jmp loc_41E1D4  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov [esp+54h+var_24] eax +
mov eax [ecx] +
mov [esp+54h+var_20] edx +
mov edx [edi+24h] +
mov [esp+54h+var_1C] ecx +
mov ebp [esp+54h+arg_C] +
mov esi [esp+54h+arg_10] +
mov [esp+54h+var_18] eax +
shl eax 6 +
mov ecx [ecx+8] +
lea edi off_4A8C80[eax] +
movzx eax ds:word_4A8CAA[eax] +
cmp ax 0FFFFh +
jz loc_41E458  +
add eax ebx +
jz loc_41E458  +
mov ebx esi +
mov esi [esp+54h+arg_14] +
xor eax eax +
test bl bl +
cmovz eax [esp+54h+var_20] +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+var_18] +
mov [esp+54h+var_38] esi +
mov esi [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
mov eax [esp+54h+var_24] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_3C] esi +
mov esi [esp+54h+arg_4] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_40] esi +
call sub_41DFC0  +
mov eax [ebp+0Ch] +
xor esi esi +
mov ebx ebp +
test eax eax +
jnz loc_41E470  +
jmp loc_41E4D0  +
add esi 1 +
add ebx 8 +
cmp [ebp+0Ch] esi +
jbe loc_41E4D0  +
mov eax [ebx+14h] +
test [edi+24h] eax +
jz loc_41E465  +
mov edx [ebp+8] +
mov ecx [esp+54h+arg_14] +
mov eax [ebx+10h] +
mov [esp+54h+var_3C] ebp +
mov [esp+54h+var_34] edx +
mov edx [esp+54h+arg_8] +
mov [esp+54h+var_38] ecx +
mov ecx [esp+54h+arg_4] +
mov [esp+54h+var_40] edx +
mov edx [esp+54h+arg_0] +
mov [esp+54h+var_44] ecx +
mov ecx [esp+54h+var_1C] +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+var_20] +
mov [esp+54h+var_4C] ecx +
mov ecx [esp+54h+var_24] +
mov [esp+54h+var_50] edx +
mov [esp+54h+var_54] ecx +
call eax  +
test al al +
jnz loc_41E465  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_10] +
lea esi [esp+50h+var_2C] +
mov ebx [esp+50h+arg_14] +
mov [esp+50h+var_40] esi +
mov edi [esp+50h+arg_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_44] ebx +
mov [esp+50h+var_4C] eax +
mov eax [esp+50h+arg_8] +
mov [esp+50h+var_50] eax +
call sub_41D9F0  +
mov eax [esp+50h+arg_28] +
mov ecx esi +
mov edx [esp+50h+arg_4] +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_3C] eax +
mov eax edi +
movzx edi al +
mov eax [esp+50h+arg_20] +
mov [esp+50h+var_40] edi +
mov [esp+50h+var_44] eax +
mov eax [esp+50h+arg_1C] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+arg_18] +
mov [esp+50h+var_4C] eax +
mov eax [esp+50h+arg_0] +
call sub_41E3D0  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_41E570  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_C] +
mov edi [esp+3Ch+arg_10] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_14] +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+0Ch] +
mov ecx eax +
mov [esp+3Ch+var_10] eax +
mov eax [ebx+4] +
test eax eax +
jz loc_41E5C7  +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_424FC0  +
mov edx [ebx] +
cmp edx 500h +
jz loc_41E670  +
cmp edx 501h +
jz loc_41E61A  +
mov eax [ebx+28h] +
test eax eax +
jnz loc_41E622  +
mov eax [esp+3Ch+var_14] +
mov ecx ebx +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_41E3D0  +
test al al +
jz loc_41E681  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+8] +
shl edx 6 +
add edx offset off_4A8C80 +
mov [esp+3Ch+var_38] eax +
mov eax esi +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] ecx +
mov ecx [esp+3Ch+var_10] +
call sub_41DC20  +
test al al +
jnz loc_41E61A  +
mov eax [ebx+28h] +
test al 4 +
jnz loc_41E6A1  +
test eax eax +
jz loc_41E5E4  +
mov [esp+3Ch+var_34] offset aRead_cmdline_o +
mov [esp+3Ch+var_38] 4C0h +
mov [esp+3Ch+var_3C] offset a____GccGccOp_0 +
call sub_424080  +
nop   +
mov eax [ebp+0] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test al al +
jz loc_41E61A  +
mov eax [ebx+8] +
jmp loc_41E685  +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] esi +
mov [esp+3Ch+arg_8] eax +
mov [esp+3Ch+arg_4] offset aUnrecognized_4 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425230  +
mov eax [ebp+4] +
mov [esp+3Ch+arg_4] edi +
mov [esp+3Ch+arg_0] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
mov eax [esp+arg_0] +
shl eax 6 +
movzx eax ds:word_4A8CAA[eax] +
cmp ax 0FFFFh +
jz loc_41E6E0  +
add eax [esp+arg_4] +
retn   +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFFh +
shl ecx 6 +
add ecx offset off_4A8C80 +
movzx edx word ptr [ecx+2Ah] +
cmp dx 0FFFFh +
jz loc_41E746  +
add edx [esp+arg_4] +
jz loc_41E746  +
mov eax [ecx+30h] +
cmp eax 1 +
jz loc_41E780  +
jle loc_41E748  +
cmp eax 2 +
jz loc_41E760  +
cmp eax 3 +
jnz loc_41E757  +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jnz loc_41E7D0  +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
and ebx [ecx+38h] +
and eax edx +
or ebx eax +
setnz al  +
movzx eax al +
pop ebx  +
retn   +
test eax eax +
jnz loc_41E757  +
mov edx [edx] +
xor eax eax +
pop ebx  +
test edx edx +
setnz al  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jz loc_41E7A0  +
mov eax [edx+4] +
and ebx [ecx+38h] +
and eax [ecx+3Ch] +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jz loc_41E7B5  +
mov eax [edx+4] +
xor ebx [ecx+38h] +
xor eax [ecx+3Ch] +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
and ebx [ecx+38h] +
and eax edx +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
xor ebx [ecx+38h] +
xor eax edx +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax [edx+4] +
and ebx [ecx+38h] +
and eax [ecx+3Ch] +
or ebx eax +
setnz al  +
movzx eax al +
pop ebx  +
retn   +
***
shl esi 6 +
movzx eax ds:word_4A8CAC[esi] +
mov [ebx] ecx +
lea eax [eax+eax*2] +
mov eax ds:dword_4BDD2C[eax*8] +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
shl esi 6 +
mov [ebx] ecx +
movzx eax ds:byte_4A8CA9[esi] +
shr al 2 +
and eax 1 +
cmp al 1 +
sbb eax eax +
and eax 0FFFFFFFCh +
add eax 8 +
mov [ebx+4] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_1C] +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call sub_41E6F0  +
mov dword ptr [ebx+4] 1 +
mov [ebx+8] al +
lea eax [ebx+8] +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ecx] +
test eax eax +
mov [ebx] eax +
jz loc_41E8D8  +
mov [esp+0] eax +
call strlen  +
add eax 1 +
jmp loc_41E847  +
mov dword ptr [ebx] offset unk_4BF99C +
mov eax 1 +
jmp loc_41E847  +
***
mov eax 1 +
jmp loc_41E84F  +
***
push esi  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx eax byte ptr [eax] +
cmp al 24h +
mov byte ptr [ebp+var_20] al +
jnz loc_41ED3B  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
test al al +
jz loc_41ECA0  +
cmp al 2Fh +
jz loc_41ECA0  +
cmp al 5Ch +
jz loc_41ECA0  +
lea edx [esi+2] +
xor eax eax +
movzx ebx byte ptr [edx] +
add eax 1 +
mov edi eax +
mov [ebp+var_1C] edx +
test bl bl +
jnz loc_41ECC0  +
mov ebx eax +
lea eax [eax+1] +
add eax 1Eh +
mov edi 10h +
xor edx edx +
div  edi +
shl eax 4 +
call sub_470810  +
sub esp eax +
lea edi [esp+1Bh] +
and edi 0FFFFFFF0h +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] ecx +
mov [esp+38h+var_38] edi +
call strncpy  +
cmp byte ptr [ebp+var_20] 40h +
mov byte ptr [edi+ebx] 0 +
jz loc_41ECE0  +
mov [esp+38h+var_38] edi +
call getenv  +
mov edx offset aHomeJenkinsM_2 +
test eax eax +
cmovz eax edx +
mov edx [ebp+var_1C] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_452BE0  +
mov [esp+38h+var_38] esi +
mov ebx eax +
call free  +
movzx eax byte ptr [ebx] +
cmp al 24h +
mov byte ptr [ebp+var_20] al +
jnz loc_41ECB0  +
mov esi ebx +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
test al al +
jnz loc_41EBE8  +
nop   +
mov [ebp+var_1C] ecx +
mov eax 1 +
xor ebx ebx +
jmp loc_41EC15  +
cmp al 40h +
jz loc_41EC8D  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
cmp bl 5Ch +
jz loc_41ECD1  +
cmp bl 2Fh +
jnz loc_41EBFD  +
mov ebx edi +
add eax 1 +
jmp loc_41EC15  +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] offset a_root +
call sub_452BE0  +
mov [esp+38h+var_38] eax +
mov edi eax +
call getenv  +
test eax eax +
jz loc_41ED19  +
mov [esp+38h+var_38] edi +
mov [ebp+var_20] eax +
call free  +
mov eax [ebp+var_20] +
jmp loc_41EC62  +
mov eax off_4835C0 +
mov [esp+38h+var_38] edi +
mov [ebp+var_20] eax +
call free  +
mov eax [ebp+var_20] +
mov edx offset aHomeJenkinsM_2 +
test eax eax +
cmovz eax edx +
jmp loc_41EC62  +
cmp al 40h +
jz loc_41EBD9  +
lea esp [ebp-0Ch] +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp off_4835C0 +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov edi eax +
call sub_452D60  +
test eax eax +
jnz loc_41EEF9  +
add edi esi +
movzx eax byte ptr [edi] +
cmp al 2Fh +
jnz loc_41EEE9  +
test ebx ebx +
jz loc_41EEF9  +
cmp byte ptr [ebx] 24h +
jz loc_41EF81  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_1C] offset a@ +
call sub_452BE0  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
mov ebx eax +
call sub_452BE0  +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
call sub_41EBC0  +
mov ebx eax +
mov edx ebx +
jmp loc_41EDF3  +
lea edx [esi+1] +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] edx +
call strchr  +
test eax eax +
mov esi eax +
jz loc_41EF23  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_41EDF0  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_41EE1F  +
cmp al 2Fh +
jnz loc_41EDF0  +
cmp esi ebx +
jz loc_41EDF0  +
movzx eax byte ptr [esi-1] +
cmp al 5Ch +
jz loc_41EE2F  +
cmp al 2Fh +
jnz loc_41EDF0  +
mov byte ptr [esi] 0 +
cmp byte_4835FE 0 +
jz loc_41EF08  +
mov edx esi +
jmp loc_41EE4B  +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jnz loc_41EEA4  +
lea eax [edx-1] +
cmp ebx eax +
jz loc_41EF62  +
movzx edx byte ptr [edx-1] +
cmp dl 5Ch +
jz loc_41EF40  +
cmp dl 2Fh +
jz loc_41EF40  +
mov edx eax +
nop   +
movzx ecx byte ptr [edx-1] +
cmp cl 2Fh +
jz loc_41EE43  +
cmp cl 5Ch +
jz loc_41EE43  +
sub edx 1 +
cmp ebx edx +
jz loc_41EE98  +
movzx eax byte ptr [edx-1] +
cmp al 5Ch +
jz loc_41EE43  +
cmp al 2Fh +
jz loc_41EE43  +
sub edx 1 +
cmp ebx edx +
jnz loc_41EE85  +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_41EF20  +
cmp cl 5Ch +
jz loc_41EF20  +
cmp cl 2Fh +
jz loc_41EF20  +
movzx ecx byte ptr [esi+3] +
lea eax [esi+3] +
cmp cl 2Fh +
jnz loc_41EF73  +
nop   +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jz loc_41EEC0  +
cmp cl 2Fh +
jz loc_41EEC0  +
mov esi edx +
jmp loc_41EED7  +
movzx ecx byte ptr [eax] +
add esi 1 +
add eax 1 +
test cl cl +
mov [esi-1] cl +
jnz loc_41EED4  +
jmp loc_41EDF3  +
cmp al 5Ch +
jz loc_41ED94  +
test al al +
jz loc_41ED94  +
mov [esp+1Ch+var_1C] esi +
call sub_452AC0  +
mov ebx eax +
jmp loc_41EDEA  +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] ebx +
call _access_0  +
test eax eax +
jnz loc_41EE3F  +
mov byte ptr [esi] 2Eh +
lea eax [ebx+1] +
jmp loc_41EF2F  +
test dl dl +
jz loc_41EF69  +
add eax 1 +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_41EF28  +
mov byte ptr [eax-1] 2Fh +
jmp loc_41EF2C  +
mov edx eax +
sub edx 1 +
cmp ebx edx +
jz loc_41EE98  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jz loc_41EF42  +
cmp cl 2Fh +
jnz loc_41EE70  +
nop   +
jmp loc_41EF42  +
mov edx ebx +
jmp loc_41EE98  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 5Ch +
jz loc_41EEC0  +
jmp loc_41EED0  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call sub_452BE0  +
jmp loc_41EDE3  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
lea eax [ebx+1] +
mov [esp+14h+var_14] eax +
call sub_4529F0  +
mov [esp+14h+var_C] ebx +
mov esi eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
mov off_4835C0 esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_4] +
cmp edx eax +
jnb loc_41F01E  +
test edx edx +
mov ecx 4 +
jz loc_41F000  +
cmp edx 0Fh +
ja loc_41F010  +
lea ecx [edx+edx] +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
lea ecx [edx+edx*2] +
shr ecx 1 +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aCalculate_allo +
mov [esp+1Ch+var_18] 0A7h +
mov [esp+1Ch+var_1C] offset a____GccGccVec_ +
call sub_424080  +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_4BFE4D +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D120  +
mov edx ds:dword_4D9138 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_452A20  +
mov [ebp-4Ch] eax +
mov eax ds:dword_4D9138 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_41F0A1  +
jmp loc_41F415  +
add ecx 8 +
cmp edx ecx +
jbe loc_41F415  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F096  +
cmp ebx 1 +
jz loc_41F096  +
xor esi esi +
test eax eax +
jz loc_41F403  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_41F3E3  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_41F0E4  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F0DD  +
cmp ebx 1 +
jnz loc_41F0B0  +
add ecx 8 +
cmp edx ecx +
ja loc_41F0D0  +
mov [ebp-48h] esi +
mov eax [ebp-48h] +
mov [esp+98h+var_8C] offset loc_4803C0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] eax +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call qsort  +
mov edx ds:dword_4D9138 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_452A20  +
mov [ebp-50h] eax +
mov eax ds:dword_4D9138 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_41F14B  +
jmp loc_41F41E  +
add ecx 8 +
cmp edx ecx +
jbe loc_41F41E  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F140  +
cmp ebx 1 +
jz loc_41F140  +
xor edi edi +
lea esi [esi+0] +
test eax eax +
jz loc_41F3F6  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_41F3D0  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_41F194  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F18D  +
cmp ebx 1 +
jnz loc_41F160  +
add ecx 8 +
cmp edx ecx +
ja loc_41F180  +
mov esi [ebp-50h] +
mov [esp+98h+var_8C] offset loc_4803C0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call qsort  +
test edi edi +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
jz loc_41F240  +
lea eax [esi+edi*8] +
mov edx esi +
mov [ebp-44h] eax +
xor edi edi +
xor esi esi +
mov dword ptr [ebp-40h] 0 +
xor ebx ebx +
xor ecx ecx +
jmp loc_41F206  +
mov ecx [ebp-3Ch] +
mov [ebp-40h] eax +
mov eax [edx+4] +
add edx 8 +
add ecx [eax+14h] +
add edi [eax+4] +
add esi [eax+8] +
mov [ebp-3Ch] ecx +
mov ecx [ebp-40h] +
add ecx [eax] +
add ebx [eax+10h] +
cmp edx [ebp-44h] +
mov eax ecx +
mov [ebp-30h] ecx +
mov ecx [ebp-3Ch] +
mov [ebp-2Ch] edi +
mov [ebp-28h] esi +
mov dword ptr [ebp-24h] 0 +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ecx +
jnz loc_41F200  +
mov eax [ebp-50h] +
mov ebx 8Ch +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_7C] offset aPeakItems +
mov [esp+98h+var_80] offset aLeakItems +
mov [esp+98h+var_84] offset aTimes +
add eax 40h +
mov [esp+98h+var_88] offset aPeak +
mov [esp+98h+var_8C] offset aLeak +
mov [esp+98h+var_90] offset aHeapVectors +
mov [esp+98h+var_94] offset a48s11s15s10s17 +
mov [esp+98h+var_98] eax +
call sub_47D120  +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F298  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov ebx [ebp-48h] +
sub ebx 1 +
js loc_41F2FB  +
mov edi [ebp-4Ch] +
lea esi [ebp-30h] +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*8] +
mov ecx [edi+ebx*8+4] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_4807E0  +
sub esp 8 +
sub ebx 1 +
jns loc_41F2E0  +
mov ebx 8Ch +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F300  +
mov eax ds:_iob +
mov ebx 8Ch +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-20h] +
mov [esp+98h+var_90] offset aTotal +
mov [esp+98h+var_94] offset aS55li25li17li +
mov [esp+98h+var_84] eax +
mov eax [ebp-2Ch] +
mov [esp+98h+var_88] eax +
mov eax [ebp-30h] +
mov [esp+98h+var_8C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D120  +
nop   +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F370  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_4BFE4D +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D120  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp-50h] +
lea esi [esi+edi*8] +
add edi 1 +
mov [esi] ecx +
mov [esi+4] ebx +
jmp loc_41F177  +
mov edi [ebp-4Ch] +
lea edi [edi+esi*8] +
add esi 1 +
mov [edi] ecx +
mov [edi+4] ebx +
jmp loc_41F0C7  +
test edx edx +
jnz loc_41F168  +
jmp loc_41F194  +
test edx edx +
jnz loc_41F0B8  +
nop   +
lea esi [esi+0] +
jmp loc_41F0E4  +
xor edx edx +
xor eax eax +
jmp loc_41F0AE  +
xor edx edx +
xor eax eax +
jmp loc_41F158  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
mov ecx ds:dword_4D913C +
mov esi ebx +
mov [ebp-3Ch] eax +
sar esi 3 +
lea eax [ebp-38h] +
mov [esp+4] esi +
mov [esp] eax +
mov [ebp-38h] ebx +
call sub_47F200  +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41F4F0  +
mov ecx ds:dword_4D913C +
lea edi [ebp-1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [ebp-1Ch] ebx +
call sub_47F200  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_41F4A6  +
mov eax [eax+4] +
mov edx [eax] +
cmp [ebp+0Ch] edx +
ja loc_41F79F  +
sub edx [ebp+0Ch] +
cmp byte ptr [ebp-3Ch] 0 +
mov [eax] edx +
jnz loc_41F4B0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [ebp-1Ch] ebx +
mov ebx ds:dword_4D913C +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] edi +
mov ecx ebx +
call sub_47F300  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_41F4A6  +
mov dword ptr [eax] 1 +
add dword ptr [ebx+0Ch] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] 14h +
call loc_480BB0  +
mov dword ptr [eax] 0 +
mov edi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov [ebp-30h] eax +
mov eax ds:dword_4D9138 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-34h] ebx +
mov [ebp-40h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_45CF40  +
mov edx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_45CF40  +
mov ecx [edi+8] +
mov edx eax +
mov eax 9E3779B9h +
sub eax ecx +
mov edi edx +
sub eax edx +
sub ecx edx +
shr edi 0Dh +
xor edi eax +
mov eax edi +
sub ecx edi +
shl eax 8 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shr ecx 0Dh +
sub edi eax +
xor ecx edx +
mov edx ecx +
sub edi ecx +
shr edx 0Ch +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shl edi 10h +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
sub edx edi +
shr ecx 5 +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 3 +
sub edi ecx +
xor eax edx +
mov edx eax +
sub edi eax +
shl edx 0Ah +
sub ecx eax +
xor edx edi +
mov eax ecx +
mov ecx [ebp-40h] +
sub eax edx +
shr edx 0Fh +
xor edx eax +
lea edi [ebp-30h] +
mov [esp] edi +
mov [esp+4] edx +
call sub_47E600  +
mov edi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41F67D  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_480B00  +
mov edx [edi+4] +
add dword ptr [edx+0Ch] 1 +
mov eax [ebp-34h] +
lea edi [ebp-34h] +
mov ecx ds:dword_4D913C +
mov [esp] edi +
mov [ebp-40h] edx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F200  +
mov edx [ebp-40h] +
mov eax [eax] +
sub esp 8 +
test eax eax +
jnz loc_41F46C  +
mov eax [ebp-34h] +
mov ecx ds:dword_4D913C +
mov dword ptr [esp+8] 1 +
mov [esp] edi +
sar eax 3 +
mov [esp+4] eax +
mov [ebp-40h] edx +
call sub_47F300  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
mov edx [ebp-40h] +
jnz loc_41F66E  +
mov ecx [ebp-34h] +
mov [eax] ecx +
mov [eax+4] edx +
mov dword ptr [eax+8] 0 +
jmp loc_41F46C  +
***
mov dword ptr [esp] 18h +
call loc_480BB0  +
mov edi [ebp-30h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [ebp-44h] eax +
mov eax ds:dword_4D9138 +
mov [ebp-40h] eax +
mov eax [edi] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_45CF40  +
mov ecx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-24h] ecx +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
call sub_45CF40  +
mov edi [edi+8] +
mov ecx 9E3779B9h +
mov dword ptr [esp+8] 1 +
sub ecx edi +
mov edx eax +
sub ecx eax +
shr eax 0Dh +
sub edi edx +
xor eax ecx +
mov ecx edi +
mov edi eax +
sub ecx eax +
shl edi 8 +
xor edi ecx +
mov ecx edx +
sub ecx eax +
mov edx edi +
sub ecx edi +
sub eax edi +
shr edx 0Dh +
xor edx ecx +
mov ecx edx +
sub eax edx +
shr ecx 0Ch +
sub edi edx +
xor ecx eax +
mov eax edx +
mov edx ecx +
sub edi ecx +
shl edx 10h +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shr edi 5 +
sub ecx edx +
xor edi eax +
mov eax edi +
sub ecx edi +
shr eax 3 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shl ecx 0Ah +
sub edi eax +
xor ecx edx +
sub edi ecx +
shr ecx 0Fh +
xor ecx edi +
mov [esp+4] ecx +
mov ecx [ebp-40h] +
lea edi [ebp-30h] +
mov [esp] edi +
call sub_47E720  +
mov edx [ebp-44h] +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_41F797  +
mov ecx [ebp-30h] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_41F60C  +
***
call sub_482150  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp] 14h +
call loc_480BB0  +
mov esi ds:dword_4D9138 +
mov dword ptr [eax] 0 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov eax [ebp+8] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-30h] ebx +
mov [ebp-34h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_45CF40  +
mov edx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_45CF40  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-30h] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_47E600  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41F9A0  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_480B00  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-34h] +
lea ebx [ebp-34h] +
mov ecx ds:dword_4D913C +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F200  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_41F960  +
mov eax [ebp+8] +
mov ecx ds:dword_4D913C +
mov [ebp-1Ch] eax +
sar eax 3 +
mov [esp+4] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_47F200  +
mov ebx [eax] +
sub esp 8 +
test ebx ebx +
jz loc_41F957  +
mov eax [eax+4] +
mov edx [ebp+0Ch] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
ja loc_41F952  +
mov edx [ebp+10h] +
add edx [eax+10h] +
cmp edx [eax+14h] +
mov [eax+10h] edx +
jbe loc_41F948  +
mov [eax+14h] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [eax+8] edx +
jmp loc_41F937  +
***
xor eax eax +
jmp loc_41F937  +
***
mov eax [ebp-34h] +
mov ecx ds:dword_4D913C +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F300  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_41F98E  +
mov edx [ebp-34h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
jmp loc_41F8FD  +
***
mov dword ptr [esp] 18h +
call loc_480BB0  +
mov edx [ebp-30h] +
mov [ebp-40h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax ds:dword_4D9138 +
mov [ebp-3Ch] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_45CF40  +
mov edx [ebp-40h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
mov [ebp-24h] ecx +
call sub_45CF40  +
mov edx [ebp-40h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-3Ch] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_47E720  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_41FAB1  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_41F8D9  +
***
push edi  +
sub esp 14h +
sub esp 1Ch +
mov ds:byte_4D9144 1 +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_4D9140 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_4D9140 0 +
mov ds:dword_4D9148 0 +
mov ds:byte_4D9144 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:dword_4D9148 +
mov ebp [esp+1Ch+arg_0] +
test edi edi +
jz loc_41FF40  +
mov esi ds:dword_4D9140 +
xor ebx ebx +
jmp loc_41FF1A  +
add ebx 1 +
add esi 18h +
cmp ebx edi +
jz loc_41FF40  +
mov [esp+1Ch+var_18] ebp +
mov eax [esi] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_41FF10  +
mov eax [esp+1Ch+arg_4] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx ds:dword_4D9140 +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov ebx [eax+14h] +
test ebx ebx +
jz loc_420110  +
mov eax [ebx] +
mov dword ptr [edi] 0FFFFFFFFh +
test eax eax +
jz loc_420100  +
xor ebp ebp +
jmp loc_4200E0  +
add ebp 1 +
mov eax [ebx+ebp*4] +
test eax eax +
jz loc_420100  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_4200D6  +
mov [edi] ebp +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_C] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_420246  +
cmp ds:byte_4D9144 0 +
jz loc_42024A  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+arg_4] +
mov [edx+eax*4] ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aSet_param_va_0 +
mov [esp+1Ch+var_18] 7Bh +
mov [esp+1Ch+var_1C] offset a____GccGccPara +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
cmp ds:byte_4D9144 0 +
mov eax [esp+38h+var_18] +
jnz loc_420297  +
mov edx ds:dword_4D9140 +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov edx [esp+38h+var_14] +
mov [eax+4] edx +
add esp 1Ch +
retn   +
mov [esp+38h+var_30] offset aSet_default_pa +
mov [esp+38h+var_34] 0EBh +
mov [esp+38h+var_38] offset a____GccGccPara +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+38h+var_34] +
mov edx ds:dword_4D9140 +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov eax [eax+4] +
retn   +
***
cmp ds:byte_4D9144 0 +
retn   +
***
push edi  +
push esi  +
push ebx  +
lea edi [edx+1] +
sub esp 2Ch +
cmp edi 1FC00000h +
mov [esp+38h+var_20] eax +
mov [esp+38h+var_1C] ecx +
ja loc_420472  +
lea ebx ds:0[edi*4] +
mov [esp+38h+var_38] ebx +
call sub_480B20  +
mov esi eax +
mov [esp+38h+var_38] ebx +
call sub_480B20  +
test ebp ebp +
mov ebx eax +
js loc_42039B  +
xor eax eax +
mov [esi+eax*4] eax +
add eax 1 +
cmp edi eax +
jnz loc_420391  +
mov eax [esp+38h+arg_0] +
test eax eax +
jle loc_42043B  +
mov [esp+38h+var_28] 0 +
nop   +
add [esp+38h+var_28] 1 +
cmp ebp 0 +
mov eax [esp+38h+var_28] +
mov [ebx] eax +
jle loc_420460  +
xor eax eax +
mov [esp+38h+var_2C] ebx +
mov [esp+38h+var_24] ebp +
nop   +
mov ebx [esp+38h+var_2C] +
mov edx [esp+38h+var_1C] +
mov ebp [esp+38h+var_20] +
mov edi [ebx+eax*4] +
mov ebx [esp+38h+var_28] +
lea ecx [edi+1] +
mov edi [esi+eax*4+4] +
movzx edx byte ptr [edx+ebx-1] +
mov ebx [esp+38h+var_2C] +
add edi 1 +
cmp [ebp+eax+0] dl +
setnz dl  +
movzx edx dl +
add edx [esi+eax*4] +
cmp edi ecx +
cmovbe ecx edi +
cmp ecx edx +
cmova ecx edx +
mov [ebx+eax*4+4] ecx +
add eax 1 +
cmp eax [esp+38h+var_24] +
jnz loc_4203D0  +
mov ebp [esp+38h+var_24] +
xor eax eax +
mov edx [ebx+eax*4] +
mov [esi+eax*4] edx +
add eax 1 +
cmp ebp eax +
jge loc_420420  +
mov eax [esp+38h+var_28] +
cmp eax [esp+38h+arg_0] +
jnz loc_4203B0  +
test esi esi +
mov edi [ebx+ebp*4] +
jz loc_42044A  +
mov [esp+38h+var_38] esi +
call sub_480AF0  +
test ebx ebx +
jz loc_420456  +
mov [esp+38h+var_38] ebx +
call sub_480AF0  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_42041E  +
mov eax [esp+38h+var_28] +
cmp eax [esp+38h+arg_0] +
jnz loc_4203B0  +
jmp loc_42043B  +
mov [esp+38h+var_38] 0FFFFFFFFh +
mov ebx 0FFFFFFFFh +
call sub_480B20  +
mov esi eax +
jmp loc_420381  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov ebx [esp+arg_C] +
test edx edx +
jz loc_4204B7  +
test ebx ebx +
jz loc_4204B3  +
mov [esp+arg_0] ebx +
pop ebx  +
jmp sub_420350  +
mov eax edx +
pop ebx  +
retn   +
mov eax ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+24h] +
mov ebx [esp+20h] +
mov [esp] edi +
call strlen  +
mov [esp] ebx +
mov esi eax +
call strlen  +
test eax eax +
mov edx eax +
jz loc_420504  +
test esi esi +
jnz loc_4204F1  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+20h] esi +
add esp 10h +
mov ecx edi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_420350  +
***
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
xor eax eax +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
jmp loc_4206A9  +
lea eax [edx+1] +
cmp eax ecx +
jz loc_4206DE  +
mov edx ecx +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ebx ds:dword_4C64E0[esi] +
ja loc_4206A2  +
cmp eax edx +
mov ecx edx +
jz loc_4206DE  +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ds:dword_4C64E0[esi] ebx +
jnb loc_4206BE  +
lea eax [edx+1] +
cmp eax ecx +
jnz loc_4206A9  +
mov edx eax +
shl edx 4 +
cmp ebx ds:dword_4C64E0[edx] +
ja loc_4206F1  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset aHash_table_hig +
mov [esp+18h+var_14] 60h +
mov [esp+18h+var_18] offset a____GccGccHash +
call sub_424080  +
lea esi [esi+0] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_4D9178 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_42074B  +
jmp loc_42086B  +
add eax 8 +
cmp esi eax +
jbe loc_42086B  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_420740  +
cmp edx 1 +
jz loc_420740  +
test ebx ebx +
jz loc_42085E  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_480B00  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_480B00  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_420794  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_42078D  +
cmp edx 1 +
jnz loc_420758  +
add eax 8 +
cmp esi eax +
ja loc_420780  +
mov ebx ds:dword_4D9178 +
test ebx ebx +
jz loc_4207D5  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_4207AF  +
sub eax 1 +
cmp edx eax +
ja loc_4207A8  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420995  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_4209A4  +
mov [esp+38h+var_38] ebx +
call sub_480B00  +
mov ebx ds:dword_4D917C +
test ebx ebx +
jz loc_42081D  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_4207F7  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_4207F0  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420901  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_420910  +
mov [esp+38h+var_38] ebx +
call sub_480B00  +
mov ebx ds:dword_4D9160 +
test ebx ebx +
jz loc_420856  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_420838  +
sub eax 1 +
cmp edx eax +
ja loc_420831  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420875  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_420880  +
mov [esp+38h+var_38] ebx +
call sub_480B00  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_420760  +
jmp loc_420794  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_420758  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_42084E  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_47EC80  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_42084E  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420A26  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_47ED80  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_42084E  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_42084E  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_420815  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_47EC80  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_420815  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420A26  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_47ED80  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_420815  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_420815  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_4207CD  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_47EC80  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_4207CD  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420A26  +
sub ecx esi +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_47ED80  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_4207CD  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_4207CD  +
call sub_482190  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax 2 +
retn   +
***
mov eax 2 +
retn   +
***
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
or eax [esp+10h] +
setz al  +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset aHook_int_rtx_i +
mov dword ptr [esp+4] 0D5h +
mov dword ptr [esp] offset a____GccGccHook +
call sub_424080  +
nop   +
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+4] +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+14h] +
test eax eax +
jz loc_420EE3  +
cmp eax [ebx+10h] +
jz loc_420EE3  +
sub eax 1 +
cmp [ebx+18h] eax +
jnb loc_420EE3  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call feof  +
test eax eax +
jnz loc_420EDB  +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
test eax eax +
jnz loc_420EDB  +
mov ecx [ebx+10h] +
mov edx [ebx+14h] +
cmp ecx edx +
jz loc_420F12  +
mov eax [ebx+0Ch] +
mov esi ecx +
jmp loc_420F37  +
lea eax [ecx+ecx] +
test ecx ecx +
mov esi 1000h +
cmovnz esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_452A70  +
mov edx [ebx+14h] +
mov [ebx+10h] esi +
mov [ebx+0Ch] eax +
mov ecx [ebx+8] +
sub esi edx +
add edx eax +
mov [esp+14h+var_14] edx +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_8] ecx +
call fread  +
mov esi eax +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_420EDD  +
add [ebx+14h] esi +
test esi esi +
setnz al  +
jmp loc_420EDD  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
mov eax edx +
sub esp 30h +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_420FC5  +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] eax +
call sub_42B590  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_38] eax +
call sub_42B5B0  +
mov ecx [esp+38h+var_1C] +
mov esi eax +
cmp esi 1 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
jbe loc_421040  +
xor eax eax +
test cl cl +
jz loc_421060  +
mov [esp+38h+var_30] eax +
mov eax ds:dword_4D9184 +
lea edx [esp+38h+var_C] +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_42C5F0  +
mov [esp+38h+var_38] ebx +
mov esi eax +
mov [esp+38h+var_2C] eax +
mov eax [esp+38h+var_C] +
mov [esp+38h+var_30] eax +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] eax +
call sub_42CD20  +
cmp esi 1 +
mov [ebx+0Ch] edi +
jbe loc_421043  +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
xor eax eax +
mov edx offset aBuiltIn +
test esi esi +
cmovnz eax edx +
mov [ebx] eax +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_42CC20  +
mov esi eax +
mov eax 1 +
jmp loc_420FF2  +
***
sub esp 14h +
mov [esp+14h+var_14] 2C4h +
call sub_480B20  +
lea ecx [eax+4] +
mov dword ptr [eax] 10h +
lea esi [eax+2C4h] +
mov edx ecx +
lea ebx [eax+2Ch] +
mov dword ptr [edx] 0 +
mov eax edx +
add edx 2Ch +
mov dword ptr [edx-28h] 0 +
sub eax ecx +
mov dword ptr [edx-24h] 0 +
mov dword ptr [edx-20h] 0 +
mov dword ptr [edx-1Ch] 0 +
mov dword ptr [edx-18h] 0 +
mov dword ptr [edx-14h] 0 +
mov dword ptr [edx-10h] 0 +
mov dword ptr [edx-0Ch] 0 +
mov byte ptr [edx-8] 1 +
cmp edx esi +
mov dword ptr [ebx+eax] 0 +
jnz loc_4210B5  +
mov ds:dword_4D918C ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_421176  +
mov ebx ds:dword_4D918C +
test ebx ebx +
jz loc_421180  +
mov esi 10h +
xor ebp ebp +
nop   +
mov eax [ebx+4] +
test eax eax +
jz loc_42115C  +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_42115C  +
add dword ptr [ebx] 1 +
mov ebp ebx +
add ebx 2Ch +
sub esi 1 +
jnz loc_421140  +
test ebp ebp +
jz loc_421176  +
add dword ptr [ebp+0] 1 +
add esp 1Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_421090  +
mov ebx ds:dword_4D918C +
jmp loc_421137  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+48h+var_34] ecx +
call sub_420EC0  +
mov edi [ebx+18h] +
mov eax [ebx+14h] +
sub eax edi +
jz loc_421430  +
add edi [ebx+0Ch] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] edi +
call memchr  +
test eax eax +
mov esi eax +
jz loc_4213F9  +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
mov eax [ebx+8] +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_48] eax +
call ferror  +
mov ecx [esp+48h+var_30] +
test eax eax +
jnz loc_421430  +
mov eax esi +
sub eax edi +
mov [esp+48h+var_30] eax +
mov eax [ebx+18h] +
cmp eax [ebx+14h] +
mov [esp+48h+var_2C] eax +
jnb loc_42138C  +
mov [ebp+0] edi +
mov eax [ebx+1Ch] +
lea ebp [eax+1] +
mov eax [ebx+20h] +
mov [ebx+1Ch] ebp +
cmp ebp eax +
mov [esp+48h+var_28] eax +
jbe loc_421440  +
test ecx ecx +
jz loc_421668  +
sub ecx [ebx+0Ch] +
mov [ebx+18h] ecx +
mov eax [esp+48h+var_34] +
mov esi [esp+48h+var_30] +
mov [eax] esi +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+18h] +
mov edi [ebx+0Ch] +
mov eax [ebx+14h] +
mov [esp-4+arg_0] 0Ah +
add edi edx +
sub eax edx +
mov [esp-4+arg_4] eax +
mov [esp+0] edi +
call memchr  +
test eax eax +
jnz loc_421673  +
mov eax ebx +
call sub_420EC0  +
test al al +
jnz loc_4213D0  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
mov byte ptr [ebx+24h] 1 +
add esi [ebx+14h] +
mov [esp+0] eax +
call ferror  +
test eax eax +
jnz loc_421430  +
test esi esi +
jz loc_42178F  +
xor ecx ecx +
jmp loc_421375  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+28h] +
test edi edi +
jz loc_4217BB  +
cmp dword ptr [edi+4] 63h +
ja loc_4213A4  +
cmp [esp+48h+var_28] 64h +
ja loc_42155B  +
mov eax [edi+4] +
cmp ebp eax +
jbe loc_4213A4  +
sub esi [ebx+0Ch] +
test edi edi +
mov [esp+48h+var_28] esi +
jz loc_4216F7  +
mov esi [edi] +
mov edx [edi+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_421539  +
cmp byte ptr [edi+3] 0 +
jns loc_421681  +
mov dword ptr [ebx+28h] 0 +
lea eax [esi+1] +
mov byte ptr [esp+48h+var_1C] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax [edx+edx*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
mov [esp+48h+var_20] ecx +
mov [esp+48h+var_24] edx +
call sub_452A70  +
mov edx [esp+48h+var_24] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [ebx+28h] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_20] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+48h+var_1C] 0 +
mov [eax+3] dl +
jz loc_4217EE  +
lea edx [eax+8] +
add edi 8 +
lea eax [esi+esi*2] +
shl eax 2 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_24] ecx +
call memcpy  +
mov edi [ebx+28h] +
mov edx esi +
mov ecx [esp+48h+var_24] +
mov [edi+4] esi +
mov esi [esp+48h+var_2C] +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
mov [edx+8] ebp +
mov [edx+0Ch] esi +
mov esi [esp+48h+var_28] +
mov [edx+10h] esi +
jmp loc_4213A4  +
mov eax [edi+4] +
test eax eax +
mov [esp+48h+var_24] eax +
jz loc_421579  +
imul eax ebp +
xor edx edx +
div  [esp+48h+var_28] +
cmp eax [esp+48h+var_24] +
jb loc_4213A4  +
mov eax [edi] +
mov edx [esp+48h+var_24] +
sub esi [ebx+0Ch] +
and eax 7FFFFFFFh +
cmp edx eax +
jnz loc_421647  +
cmp byte ptr [edi+3] 0 +
jns loc_421708  +
mov eax [esp+48h+var_24] +
mov dword ptr [ebx+28h] 0 +
mov byte ptr [esp+48h+var_28] 1 +
add eax 1 +
cmp eax 4 +
mov [esp+48h+var_1C] ecx +
mov ecx 4 +
cmovb eax ecx +
mov [esp+48h+var_20] eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
call sub_452A70  +
mov edx eax +
mov [ebx+28h] eax +
mov eax [esp+48h+var_20] +
mov dword ptr [edx+4] 0 +
and eax 7FFFFFFFh +
mov ecx eax +
mov eax [edx] +
and eax 80000000h +
or eax ecx +
mov ecx [esp+48h+var_1C] +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [esp+48h+var_28] 0 +
mov [edx+3] al +
jz loc_4217AB  +
mov eax [esp+48h+var_24] +
add edx 8 +
add edi 8 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_28] ecx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+var_24] +
mov edi [ebx+28h] +
mov ecx [esp+48h+var_28] +
mov edx eax +
mov [edi+4] eax +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
lea eax [edx+8] +
mov [edx+8] ebp +
mov edx [esp+48h+var_2C] +
mov [eax+8] esi +
mov [eax+4] edx +
jmp loc_4213A4  +
mov eax [ebx+14h] +
mov [ebx+18h] eax +
jmp loc_4213B2  +
mov esi eax +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
jmp loc_42135A  +
lea eax [esi+1] +
mov [esp+48h+var_44] eax +
mov eax [edi] +
mov [esp+48h+var_24] ecx +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_41EFE0  +
mov ecx [esp+48h+var_24] +
mov esi eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_4217B4  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
and esi 7FFFFFFFh +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_24] ecx +
call sub_452A70  +
mov ecx [esp+48h+var_24] +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_421539  +
mov byte ptr [esp+48h+var_1C] 0 +
xor esi esi +
mov eax 1 +
jmp loc_4214A6  +
test edi edi +
jz loc_4217C5  +
mov eax [edi+4] +
mov [esp+48h+var_28] ecx +
add eax 1 +
mov [esp+48h+var_44] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_41EFE0  +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_24] eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_4217E7  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] ecx +
call sub_452A70  +
mov ecx [esp+48h+var_24] +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_28] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_421647  +
mov [esp-4+arg_4] offset aGet_next_line +
mov [esp-4+arg_0] 221h +
mov dword ptr [esp+0] offset a____GccGccInpu +
call sub_424080  +
mov edi edx +
xor edx edx +
jmp loc_421647  +
xor edi edi +
jmp loc_4216B9  +
cmp [esp+48h+var_28] 64h +
jbe loc_4217E0  +
sub esi [ebx+0Ch] +
mov byte ptr [esp+48h+var_28] 0 +
mov eax 1 +
mov [esp+48h+var_24] 0 +
jmp loc_4215AC  +
xor eax eax +
jmp loc_421463  +
xor edi edi +
jmp loc_42174D  +
mov edi eax +
xor edx edx +
jmp loc_421539  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx 1 +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_2C] 20h +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_34] offset aC_2 +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_1C] eax +
call sub_47D120  +
mov [esp+38h+var_34] offset asc_4C6781 +
mov [esp+38h+var_38] esi +
call sub_47D120  +
cmp edi 1 +
jle loc_42189B  +
mov [esp+38h+var_34] esi +
movzx ecx byte ptr [ebp+19h] +
mov eax ebx +
xor edx edx +
add ebx 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+38h+var_20] +
add eax ecx +
div  [esp+38h+var_1C] +
mov ecx eax +
mov eax 66666667h +
imul  ecx +
mov eax ecx +
sar eax 1Fh +
sar edx 2 +
sub edx eax +
lea eax [edx+edx*4] +
add eax eax +
sub ecx eax +
add ecx 30h +
mov [esp+38h+var_38] ecx +
call fputc  +
cmp ebx edi +
jnz loc_421855  +
mov [esp+38h+arg_0] esi +
mov [esp+38h+arg_4] offset asc_4C6783 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D120  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] offset aS_10 +
mov [esp+18h+var_18] eax +
call sub_47D120  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset aSource_locatio +
mov [esp+18h+var_C] eax +
call sub_47D120  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset asc_4C6783 +
call sub_47D120  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
test eax eax +
jz loc_42197D  +
call sub_421120  +
test eax eax +
mov ebx eax +
jz loc_421978  +
mov dword ptr [eax+4] 0 +
mov eax [eax+8] +
test eax eax +
jz loc_42193D  +
mov [esp] eax +
call fclose  +
mov eax [ebx+28h] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
test eax eax +
mov dword ptr [ebx+1Ch] 0 +
jz loc_421967  +
mov dword ptr [eax+4] 0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+20h] 0 +
mov byte ptr [ebx+24h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp+8] offset aDiagnostics_fi +
mov dword ptr [esp+4] 113h +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424080  +
nop   +
lea esi [esi+0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov byte ptr [ecx+24h] 1 +
mov dword ptr [ecx+28h] 0 +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
test eax eax +
jz loc_421A0C  +
mov [esp+18h+var_18] eax +
call fclose  +
mov dword ptr [ebx+8] 0 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_421A22  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+28h] +
test eax eax +
jz loc_421A3E  +
cmp byte ptr [eax+3] 0 +
js loc_421A43  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D918C +
test eax eax +
jz locret_421A9F  +
push esi  +
push ebx  +
sub esp 14h +
imul ebx [eax-4] +
add ebx eax +
cmp eax ebx +
jz loc_421A85  +
sub ebx 2Ch +
nop   +
lea esi [esi+0] +
mov ecx ebx +
mov esi ebx +
call sub_4219F0  +
mov eax ds:dword_4D918C +
sub ebx 2Ch +
cmp eax esi +
jnz loc_421A70  +
sub eax 4 +
mov [esp+1Ch+var_1C] eax +
call sub_480AF0  +
mov ds:dword_4D918C 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_421AB0  +
***
push esi  +
sub esp 0Ch +
mov eax [esp+0Ch+arg_0] +
call sub_421120  +
test eax eax +
jz loc_421C58  +
movzx eax byte ptr [eax+24h] +
add esp 0Ch +
retn   +
mov eax [esp+0Ch+arg_0] +
call sub_421190  +
test eax eax +
jnz loc_421C50  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 2Ch +
lea eax [esp+1Ch] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42C5F0  +
cmp eax 1 +
setz al  +
add esp 2Ch +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_420F80  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
xor ecx ecx +
sub esp 8 +
mov ebx [esp+10h] +
mov edx [esp+14h] +
mov eax ebx +
call sub_420F80  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_420F80  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4D9184 +
mov ebx [esp+20h] +
mov [esp] eax +
mov [esp+4] ebx +
call sub_42C530  +
test eax eax +
jz loc_421D50  +
mov eax ds:dword_4D9184 +
mov [esp+4] ebx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_42C5F0  +
mov ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42C5F0  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C240  +
mov ebx eax +
mov eax [esp+24h+arg_4] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C160  +
mov esi eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C160  +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call sub_42BF40  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
xor eax eax +
push esi  +
mov ecx 0Dh +
push ebx  +
sub esp 50h +
lea edx [esp+1Ch] +
mov edi edx +
stos   +
mov eax ds:dword_4D9184 +
mov [esp+4] edx +
mov [esp] eax +
call sub_42D1D0  +
mov eax [esp+40h] +
mov esi [esp+3Ch] +
mov ebx [esp+24h] +
mov dword ptr [esp+4] offset aNumberOfExpand +
lea edi [esi+eax] +
add esi [esp+28h] +
add ebx eax +
add ebx [esp+38h] +
add esi eax +
mov eax [esp+2Ch] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov ecx [esp+2Ch] +
test ecx ecx +
jnz loc_4222F0  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset aLineTableAlloc +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+20h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421EA8  +
cmp eax 9FFFFFh +
jg loc_4222E0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdina +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+28h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421EEB  +
cmp eax 9FFFFFh +
jg loc_4222D0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapUse +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+1Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421F2E  +
cmp eax 9FFFFFh +
jg loc_4222C0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdi_0 +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+24h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421F71  +
cmp eax 9FFFFFh +
jg loc_4222B0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapsAl +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+34h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421FB4  +
cmp eax 9FFFFFh +
jg loc_4222A0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfMacroM +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+3Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_421FF7  +
cmp eax 9FFFFFh +
jg loc_422290  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsUsedS +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+40h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_42203A  +
cmp eax 9FFFFFh +
jg loc_422280  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsLocat +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
cmp edi 27FFh +
mov eax 20h +
jle loc_42207B  +
cmp edi 9FFFFFh +
jg loc_422270  +
sar edi 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] edi +
mov dword ptr [esp+4] offset aMacroMapsSize5 +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+44h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_4220BE  +
cmp eax 9FFFFFh +
jg loc_422260  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aDuplicatedMaps +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
cmp ebx 27FFh +
mov eax 20h +
jle loc_4220FF  +
cmp ebx 9FFFFFh +
jg loc_422250  +
sar ebx 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTotalAllocated +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
cmp esi 27FFh +
mov edx 20h +
jle loc_422140  +
cmp esi 9FFFFFh +
jg loc_422240  +
sar esi 0Ah +
mov edx 6Bh +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aTotalUsedMapsS +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+48h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_422183  +
cmp eax 9FFFFFh +
jg loc_422230  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aAdHocTableSize +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+4Ch] +
mov dword ptr [esp+4] offset aAdHocTableEntr +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax ds:dword_4D9184 +
mov eax [eax+58h] +
mov dword ptr [esp+4] offset aOptimized_rang +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax ds:dword_4D9184 +
mov eax [eax+5Ch] +
mov dword ptr [esp+4] offset aUnoptimized_ra +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset asc_4C6783 +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_422183  +
***
sar esi 14h +
mov edx 4Dh +
jmp loc_422140  +
***
sar ebx 14h +
mov eax 4Dh +
jmp loc_4220FF  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_4220BE  +
***
sar edi 14h +
mov eax 4Dh +
jmp loc_42207B  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_42203A  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421FF7  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421FB4  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421F71  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421F2E  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421EEB  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_421EA8  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aAverageNumberO +
cdq   +
idiv  ecx +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
jmp loc_421E6D  +
***
jmp loc_4225B2  +
mov eax ds:dword_4D9184 +
mov [esp+0Ch] ebx +
mov [esp+8] esi +
mov [esp+4] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sub_42CD20  +
mov eax [esp+44h] +
mov ebp [esp+3Ch] +
mov edi [esp+40h] +
test eax eax +
jnz loc_422460  +
lea eax [esp+38h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] ebp +
call sub_421AB0  +
test eax eax +
jz loc_4225B2  +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+0Ch] edi +
mov edi 1 +
mov [esp+8] ebp +
mov [esp+10h] ebx +
mov [esp+14h] eax +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aS3iLoc5i_S +
mov [esp] eax +
call sub_47D120  +
movzx ecx byte ptr [esi+18h] +
mov eax [esp+38h] +
mov [esp] ebp +
shl edi cl +
sub edi 1 +
cmp edi eax +
lea edx [eax+1] +
cmovg edi edx +
call strlen  +
cmp dword ptr [esp+24h] 3E7h +
lea ebp [eax+0Eh] +
ja loc_422578  +
cmp dword ptr [esp+24h] 63h +
ja loc_422594  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421800  +
mov eax [esp+70h] +
mov ecx esi +
mov dword ptr [esp+8] 1 +
mov edx ebp +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421800  +
jmp loc_422460  +
***
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 3E8h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421800  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 64h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421800  +
jmp loc_42253B  +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_4C6783 +
mov [esp] eax +
call sub_47D120  +
mov eax ds:dword_4D9184 +
add dword ptr [esp+28h] 1 +
add dword ptr [esp+2Ch] 1Ch +
mov edx [eax+8] +
cmp [esp+28h] edx +
jb loc_422364  +
mov ebp [esp+70h] +
mov edx [eax+18h] +
mov ebx 7FFFFFFFh +
test edx edx +
jnz loc_42281E  +
mov ecx [eax+28h] +
mov edx offset aUnallocatedLoc +
mov eax ebp +
mov [esp] ebx +
call sub_4218C0  +
mov eax ds:dword_4D9184 +
mov dword ptr [esp+28h] 0 +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_4227AD  +
mov [esp+70h] ebp +
mov eax [eax+10h] +
sub ebx 1 +
sub ebx [esp+28h] +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*8] +
mov edi [esi+0Ch] +
mov [esp] esi +
call sub_42C520  +
mov [esp+8] ebx +
xor ebx ebx +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aMacroISUTokens +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_47D120  +
mov eax [esi] +
mov edx [esi+0Ch] +
mov dword ptr [esp+4] offset aSource_locatio +
mov [esp+8] eax +
add edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp] eax +
call sub_47D120  +
mov eax [esi+14h] +
mov dword ptr [esp+4] offset aExpansionPoint +
mov [esp+8] eax +
mov [esp] eax +
call sub_424EB0  +
mov eax [esi] +
mov dword ptr [esp+4] offset aMapStart_locat +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aMacro_location +
mov [esp] eax +
call sub_47D120  +
mov eax [esi+0Ch] +
mov dword ptr [esp+24h] 4 +
test eax eax +
jnz loc_422710  +
jmp loc_42277E  +
mov eax [esi] +
cmp ebp eax +
jnb loc_4227E5  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset unk_4C6C50 +
mov [esp] ebp +
call sub_424EB0  +
add ebx 1 +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
jbe loc_42277E  +
mov eax [esi+10h] +
mov edx [esp+24h] +
mov ebp [eax+ebx*8] +
mov edi [eax+edx] +
mov eax [esp+70h] +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aUUU +
mov [esp] eax +
call sub_47D120  +
cmp ebp edi +
jz loc_4226E1  +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov dword ptr [esp+4] offset aTokenUHasXLoca +
mov [esp] ebp +
call sub_424EB0  +
mov [esp+8] ebx +
add ebx 1 +
mov [esp+0Ch] edi +
mov dword ptr [esp+4] offset aTokenUHasYLoca +
mov [esp] ebp +
call sub_424EB0  +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
ja loc_422710  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_4C6783 +
mov [esp] eax +
call sub_47D120  +
mov eax ds:dword_4D9184 +
add dword ptr [esp+28h] 1 +
mov ebx [eax+18h] +
cmp [esp+28h] ebx +
jb loc_422624  +
mov ebp [esp+70h] +
mov eax ebp +
mov ecx 7FFFFFFFh +
mov dword ptr [esp] 80000000h +
mov edx offset aMax_source_loc +
call sub_4218C0  +
mov eax ebp +
mov ecx 80000000h +
mov dword ptr [esp] 0FFFFFFFFh +
mov edx offset aAdHocLocations +
call sub_4218C0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
sub edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aXLocationYLoca +
mov [esp] eax +
call sub_47D120  +
jmp loc_422703  +
***
mov edx [eax+28h] +
mov esi [eax] +
mov [esp+24h] edx +
jmp loc_42237F  +
***
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ebx [edx] +
jmp loc_4225F6  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
lea eax ds:0[ebx*4] +
mov [ecx] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call sub_40F5E0  +
xor edx edx +
test ebx ebx +
mov [edi+4] eax +
jle loc_42289F  +
mov ecx [esi+edx*4] +
mov [eax+edx*4] ecx +
add edx 1 +
cmp edx ebx +
jnz loc_422892  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D9184 +
mov [esp+1Ch+var_1C] eax +
call sub_42C5F0  +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D9184 +
mov [esp+1Ch+var_1C] eax +
call sub_42C160  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_422A2F  +
mov ebx [esp+2Ch+arg_8] +
test ebx ebx +
jz loc_422A13  +
mov eax [esp+2Ch+arg_0] +
mov ebx ecx +
mov [esp+2Ch+var_2C] eax +
call sub_4228B0  +
mov esi [ebx] +
mov edx [esi+18h] +
add dword ptr [esi+10h] 1 +
mov ecx eax +
mov ebp [esi+4] +
mov [esp+2Ch+var_18] eax +
shl edx 4 +
mov edi ds:dword_4C64EC[edx] +
lea eax dword_4C64E0[edx] +
mov [esp+2Ch+var_1C] eax +
mov ebx edi +
mov [esp+2Ch+var_10] edi +
mov edi ds:dword_4C64E0[edx] +
mov [esp+2Ch+var_14] edi +
mov edi eax +
mov eax ecx +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+var_18] +
mov edi [esi] +
mov ecx edx +
mov edx eax +
sub edx ecx +
shr edx 1 +
add edx ecx +
mov ecx ebx +
shr edx cl +
mov ebx eax +
imul edx [esp+2Ch+var_14] +
sub ebx edx +
lea edx [edi+ebx*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_4229E3  +
cmp eax [edx] +
jz loc_4229F0  +
mov ecx [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_18] +
mul  dword ptr [ecx+8] +
mov ecx edx +
mov edx [esp+2Ch+var_18] +
mov eax edx +
sub edx ecx +
shr edx 1 +
add eax 1 +
add edx ecx +
movzx ecx byte ptr [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] eax +
mov eax [esi+14h] +
shr edx cl +
mov ecx [esp+2Ch+var_14] +
sub ecx 2 +
imul edx ecx +
sub [esp+2Ch+var_1C] edx +
lea ecx [eax+1] +
mov eax [esp+2Ch+var_18] +
jmp loc_4229CB  +
add ecx 1 +
cmp eax [edx] +
jz loc_4229F0  +
add ebx [esp+2Ch+var_1C] +
mov [esi+14h] ecx +
mov edx ebx +
sub edx ebp +
cmp ebp ebx +
cmovbe ebx edx +
lea edx [edi+ebx*8] +
cmp dword ptr [edx] 0 +
jnz loc_4229C4  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [edx+4] +
mov esi [esp+2Ch+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
mov [esi] edx +
mov esi [esp+2Ch+arg_8] +
mov [esi] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E5h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_424080  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E4h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_424080  +
nop   +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+24h] +
mov esi [ebp+10h] +
test eax eax +
jz loc_423188  +
lea ecx [ebp-58h] +
call sub_42F2C0  +
mov edi [ebp+8] +
mov [ebp-6Ch] esi +
test edi edi +
jz loc_42316C  +
test esi esi +
mov ebx offset aUnknownLocatio +
jnz loc_422AA0  +
lea ecx [ebp-58h] +
call sub_42F2F0  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+8] +
mov ebx offset aTrack_macro_ex +
mov [esp+0E8h+var_E8] eax +
call sub_437A10  +
cmp byte ptr [eax+2Dh] 2 +
jnz loc_422A89  +
mov eax ds:dword_4D9184 +
mov ebx offset aSeenLineDirect +
cmp byte ptr [eax+50h] 0 +
jnz loc_422A89  +
mov ebx [ebp+0Ch] +
lea eax [ebp-6Ch] +
mov dword ptr [ebp-68h] 1 +
mov [ebp-64h] eax +
test ebx ebx +
jz loc_422C20  +
lea eax [ebp-64h] +
mov ecx [ebp+0Ch] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp-68h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp-6Ch] +
mov [esp+0E8h+var_E8] eax +
call sub_4228F0  +
mov ecx [ebp-68h] +
mov ebx ecx +
sub esp 0Ch +
test ecx ecx +
jnz loc_422C25  +
xor edi edi +
xor esi esi +
xor edx edx +
test esi esi +
jnz loc_422BD4  +
lea ebx [edi+8] +
xor eax eax +
test edi edi +
cmovnz eax ebx +
mov ebx [ebp+14h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+8] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ebx +
lea ebx [ebp-58h] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_434200  +
mov ebx eax +
lea esi [esi+0] +
test esi esi +
jz loc_422B66  +
cmp byte ptr [esi+3] 0 +
js loc_422C10  +
mov [esp+0E8h+var_E8] esi +
call free  +
test edi edi +
jz loc_422BAC  +
mov eax [edi+4] +
test eax eax +
jz loc_422B9E  +
mov eax [edi+0Ch] +
mov esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax 1 +
jmp loc_422B99  +
mov eax [edi+eax*8+0Ch] +
add esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax esi +
cmp eax [edi+4] +
jb loc_422B88  +
cmp byte ptr [edi+3] 0 +
js loc_422C00  +
mov [esp+0E8h+var_E8] edi +
call free  +
test ebx ebx +
jnz loc_422A89  +
mov eax [ebp-54h] +
cmp eax [ebp+18h] +
jle loc_422BE0  +
cmp eax [ebp+1Ch] +
jle loc_422BF0  +
cmp eax [ebp+20h] +
jg loc_42313C  +
mov ebx offset aEnd_idxOutOfRa +
jmp loc_422A89  +
lea edx [esi+8] +
jmp loc_422B18  +
mov ebx offset aCaret_idxOutOf +
jmp loc_422A89  +
mov ebx offset aStart_idxOutOf +
jmp loc_422A89  +
mov dword ptr [edi+4] 0 +
jmp loc_422BAC  +
mov dword ptr [esi+4] 0 +
jmp loc_422B66  +
mov ebx 1 +
lea eax ds:8[ebx*8] +
and ebx 7FFFFFFFh +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_452A70  +
mov edi eax +
mov eax [eax] +
mov dword ptr [edi+4] 0 +
and eax 80000000h +
or eax ebx +
mov ebx [ebp-68h] +
mov [edi] eax +
shr eax 18h +
and eax 7Fh +
mov [edi+3] al +
test ebx ebx +
jz loc_4231A4  +
lea eax [ebx+ebx*2] +
and ebx 7FFFFFFFh +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_452A70  +
mov ecx [ebp-68h] +
mov esi eax +
mov eax [eax] +
mov dword ptr [esi+4] 0 +
and eax 80000000h +
or eax ebx +
mov [esi] eax +
shr eax 18h +
and eax 7Fh +
test ecx ecx +
mov [esi+3] al +
jle loc_422B0E  +
mov dword ptr [ebp-84h] 0 +
jmp loc_422ECF  +
lea eax [edx+1] +
mov byte ptr [ebp-94h] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*8] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-9Ch] edx +
mov [ebp-98h] ecx +
call sub_452A70  +
mov ecx [ebp-98h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov [ebp-90h] eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov ecx edx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-94h] 0 +
mov [edx+3] al +
mov edx [ebp-9Ch] +
jz loc_4231AD  +
mov eax [ebp-90h] +
lea ecx ds:0[edx*8] +
add edi 8 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edi +
mov [ebp-94h] edx +
add eax 8 +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [ebp-90h] +
mov edx [ebp-94h] +
mov edi eax +
mov [eax+4] edx +
mov ecx edx +
lea eax [ecx+1] +
mov [edi+4] eax +
lea eax [edi+ecx*8] +
mov [eax+8] ebx +
mov ebx [ebp-8Ch] +
mov [eax+0Ch] ebx +
lea eax [ebp-5Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-7Ch] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42C5F0  +
mov eax [ebp-80h] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-88h] +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp-5Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42BD90  +
mov edx ds:dword_4D9184 +
lea ecx [ebp-4Ch] +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_434B70  +
sub esp 8 +
test esi esi +
jz loc_4230C3  +
mov ebx [esi] +
mov eax [esi+4] +
and ebx 7FFFFFFFh +
cmp ebx eax +
jnz loc_422E9B  +
cmp byte ptr [esi+3] 0 +
jns loc_423064  +
lea eax [ebx+1] +
mov byte ptr [ebp-7Ch] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-80h] ecx +
call sub_452A70  +
mov ecx [ebp-80h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-7Ch] 0 +
mov [edx+3] al +
jz loc_4231B6  +
lea ecx [ebx+ebx*2] +
add esi 8 +
lea eax [edx+8] +
shl ecx 2 +
mov [esp+0E8h+var_E4] esi +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
mov [ebp-7Ch] edx +
call memcpy  +
mov edx [ebp-7Ch] +
mov eax ebx +
mov [edx+4] ebx +
mov esi edx +
lea edx [eax+1] +
mov ecx [ebp-68h] +
mov [esi+4] edx +
mov edx [ebp-4Ch] +
lea eax [eax+eax*2] +
lea eax [esi+eax*4] +
add dword ptr [ebp-84h] 1 +
cmp [ebp-84h] ecx +
mov [eax+8] edx +
mov edx [ebp-48h] +
mov [eax+0Ch] edx +
mov edx [ebp-44h] +
mov [eax+10h] edx +
jge loc_422BD4  +
mov ebx [ebp-84h] +
mov eax [ebp-64h] +
mov eax [eax+ebx*4] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42C160  +
mov ebx ds:dword_4D9184 +
mov ecx 7FFFFFFFh +
mov [ebp-7Ch] edx +
mov edx [ebx+18h] +
test edx edx +
jz loc_422F0D  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_4230E6  +
cmp eax 5FFFFFFFh +
ja loc_4230F0  +
cmp dword ptr [ebp-7Ch] 5FFFFFFFh +
ja loc_423100  +
xor ecx ecx +
mov edx eax +
lea eax [ebp-40h] +
call sub_420F80  +
mov eax [ebp-3Ch] +
xor ecx ecx +
mov edx [ebp-7Ch] +
mov ebx [ebp-40h] +
mov [ebp-88h] eax +
mov eax [ebp-38h] +
mov [ebp-80h] eax +
lea eax [ebp-2Ch] +
call sub_420F80  +
mov edx [ebp-24h] +
cmp ebx [ebp-2Ch] +
jnz loc_42310A  +
mov ecx [ebp-88h] +
cmp ecx [ebp-28h] +
jnz loc_423114  +
cmp [ebp-80h] edx +
mov [ebp-8Ch] edx +
jg loc_42311E  +
lea eax [ebp-60h] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebx +
call sub_421AB0  +
test eax eax +
jz loc_423128  +
mov ebx [ebp-80h] +
mov edx [ebp-8Ch] +
lea ecx [ebx-1] +
sub edx ebx +
add eax ecx +
lea ebx [edx+1] +
add ecx ebx +
cmp ecx [ebp-60h] +
jg loc_423132  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_45C250  +
test edi edi +
mov [ebp-8Ch] eax +
jz loc_4230D3  +
mov edx [edi] +
mov ecx [edi+4] +
and edx 7FFFFFFFh +
cmp edx ecx +
jnz loc_422D79  +
cmp byte ptr [edi+3] 0 +
js loc_422CC1  +
mov eax ecx +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_41EFE0  +
mov ecx [edi+4] +
mov [esp+0E8h+var_E8] edi +
mov [ebp-94h] ecx +
mov edx eax +
lea eax ds:8[eax*8] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-90h] edx +
call sub_452A70  +
mov edx [ebp-90h] +
mov ecx [ebp-94h] +
mov edi eax +
mov eax edx +
mov edx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] ecx +
and edx 80000000h +
or edx eax +
mov [edi] edx +
shr edx 18h +
and edx 7Fh +
mov [edi+3] dl +
jmp loc_422D79  +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_41EFE0  +
mov ebx [esi+4] +
mov [esp+0E8h+var_E8] esi +
mov edx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-7Ch] edx +
call sub_452A70  +
mov edx [ebp-7Ch] +
mov esi eax +
mov eax edx +
mov edx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] ebx +
and edx 80000000h +
or edx eax +
mov eax ebx +
mov [esi] edx +
shr edx 18h +
and edx 7Fh +
mov [esi+3] dl +
jmp loc_422E9B  +
xor ebx ebx +
mov eax 1 +
mov byte ptr [ebp-7Ch] 0 +
jmp loc_422E1A  +
mov byte ptr [ebp-94h] 0 +
xor edx edx +
mov eax 1 +
jmp loc_422CCB  +
mov ebx offset aMacroExpansion +
jmp loc_422B50  +
mov ebx offset aRangeStartsAft +
jmp loc_422B50  +
mov ebx offset aRangeEndsAfter +
jmp loc_422B50  +
mov ebx offset aRangeEndpoints +
jmp loc_422B50  +
mov ebx offset aRangeEndpoin_0 +
jmp loc_422B50  +
mov ebx offset aRangeEndpoin_1 +
jmp loc_422B50  +
mov ebx offset aUnableToReadSo +
jmp loc_422B50  +
mov ebx offset aLineIsNotWideE +
jmp loc_422B50  +
mov eax [ebp-58h] +
mov edi [ebp+20h] +
mov ecx [eax+edi*8+4] +
mov edi [ebp+1Ch] +
mov edx [eax+edi*8] +
mov edi [ebp+18h] +
mov eax [eax+edi*8] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_421D90  +
mov edi [ebp+24h] +
mov [edi] eax +
jmp loc_422A89  +
mov [esp+0E8h+var_E0] offset aGet_substring_ +
mov [esp+0E8h+var_E4] 528h +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_424080  +
mov [esp+0E8h+var_E0] offset aGet_source_loc +
mov [esp+0E8h+var_E4] 5BBh +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_424080  +
xor ecx ecx +
xor esi esi +
jmp loc_422B0E  +
mov edi ecx +
xor ecx ecx +
jmp loc_422D79  +
mov esi edx +
xor eax eax +
jmp loc_422E9B  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+8] +
mov edi [ebp+0Ch] +
cmp ebx 1 +
jle loc_42332A  +
test edi edi +
jz loc_423346  +
mov eax [edi] +
mov esi ecx +
mov [esp] eax +
call sub_4228B0  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 8 +
mov [ebp-1Ch] eax +
call sub_40F5E0  +
test eax eax +
mov [ebp-28h] eax +
jz loc_42322B  +
mov [esp+4] edi +
mov ecx eax +
mov [esp] ebx +
call sub_422850  +
sub esp 8 +
mov ebx [esi] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx+ecx*2] +
shl eax 2 +
cmp edx eax +
mov [ebp-2Ch] ecx +
jbe loc_423306  +
mov eax [ebx+18h] +
mov esi [ebp-1Ch] +
add dword ptr [ebx+10h] 1 +
shl eax 4 +
lea edi dword_4C64E0[eax] +
mov ecx ds:dword_4C64EC[eax] +
mov eax ds:dword_4C64E0[eax] +
mov [ebp-24h] ecx +
mov [ebp-20h] eax +
mov [ebp-30h] eax +
mov eax esi +
mul  dword ptr [edi+4] +
mov eax esi +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [ebp-20h] +
sub esi eax +
mov eax [edi+8] +
mov edi [ebx] +
lea edx [edi+esi*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_4232ED  +
mov ecx [ebp-1Ch] +
cmp ecx [edx] +
jz loc_4232F6  +
mul  ecx +
lea eax [ecx+1] +
mov [ebp-20h] eax +
mov eax ecx +
movzx ecx byte ptr [ebp-24h] +
mov [ebp-24h] edi +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp-30h] +
shr eax cl +
mov ecx [ebp-2Ch] +
sub edx 2 +
imul eax edx +
sub [ebp-20h] eax +
mov eax [ebx+14h] +
lea edx [eax+1] +
jmp loc_4232D0  +
mov edi [ebp-1Ch] +
add edx 1 +
cmp edi [eax] +
jz loc_423318  +
add esi [ebp-20h] +
mov [ebx+14h] edx +
mov eax esi +
sub eax ecx +
cmp esi ecx +
cmovnb esi eax +
mov eax [ebp-24h] +
lea eax [eax+esi*8] +
mov edi [eax] +
test edi edi +
jnz loc_4232C6  +
mov edx eax +
mov eax [ebp-1Ch] +
add dword ptr [ebx+8] 1 +
mov [edx] eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_47D890  +
mov eax [ebx+4] +
mov [ebp-2Ch] eax +
jmp loc_423244  +
***
mov edx eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CDh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424080  +
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CEh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_47D180 +
mov dword ptr [esp] 20h +
call sub_40F5E0  +
test eax eax +
mov ebx eax +
jz loc_4233CD  +
mov dword ptr [esp+0Ch] 1 +
mov ecx eax +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 40h +
call sub_47DB50  +
sub esp 10h +
mov [esi] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+14h] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] eax +
call sub_429200  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call sub_425CD0  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_425B00  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_8] +
mov ebx [esp+2Ch+arg_10] +
test edi edi +
jz loc_423560  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_423476  +
mov esi [esp+2Ch+arg_8] +
test esi esi +
jz loc_42347F  +
mov eax [esp+2Ch+arg_8] +
mov edi offset aDiagnostic_c +
mov [esp+2Ch+var_2C] eax +
call sub_459A70  +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_423470  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
cmp eax 13h +
jg loc_423584  +
mov ecx [esp+2Ch+arg_0] +
add eax 1 +
test ebx ebx +
mov [ecx] eax +
jz loc_423591  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 400Bh +
call sub_466240  +
test eax eax +
cmovnz ebx eax +
xor edi edi +
mov [esp+2Ch+var_10] eax +
mov ebp ds:off_4C7538[edi*4] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call strncmp  +
test eax eax +
jnz loc_4234E4  +
movzx eax byte ptr [ebx+esi] +
cmp al 28h +
jz loc_423570  +
test al al +
jz loc_423570  +
add edi 1 +
cmp edi 4 +
jnz loc_4234AB  +
mov edx [esp+2Ch+arg_8] +
mov eax offset a???_0 +
mov ebp eax +
mov [esp+2Ch+var_28] offset a0xLxSSD +
test edx edx +
cmovnz ebp [esp+2Ch+arg_8] +
test ebx ebx +
cmovz ebx eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_47D120  +
mov edx [esp+2Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_423467  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call free  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jnz loc_423437  +
jmp loc_423465  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_423584  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_10] 0 +
jmp loc_4234EC  +
***
sub esp 2Ch +
mov edx [esp+2Ch+arg_8] +
test edx edx +
js loc_4235DC  +
mov eax offset unk_4C7002 +
mov ecx eax +
jnz loc_4235E0  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] offset aSSS_0 +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_47D120  +
add esp 2Ch +
retn   +
mov [esp+2Ch+var_2C] edx +
call sub_466320  +
mov ecx offset asc_4C7003 +
jmp loc_4235B4  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_466370  +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+30h+var_28] 5 +
mov [esp+30h+var_2C] offset aLocus +
movzx eax byte ptr [eax+27h] +
mov [esp+30h+var_14] edx +
mov [esp+30h+var_30] eax +
call sub_429CD0  +
mov ebp eax +
movzx eax byte ptr [esi+27h] +
mov [esp+30h+var_30] eax +
call sub_429D40  +
test ebx ebx +
jz loc_4236E2  +
mov edi offset aBuiltIn_0 +
mov ecx 0Bh +
mov esi ebx +
cmps   +
jz loc_4236C2  +
mov edi [esp+30h+var_14] +
cmp byte ptr [edi] 0 +
jnz loc_423692  +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDS +
mov [esp+30h+var_24] eax +
call sub_4235F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_1C] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDDS +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_24] eax +
call sub_4235F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_24] eax +
mov [esp+30h+var_30] offset aSSS +
call sub_4235F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_24] eax +
mov eax ds:dword_4D91A0 +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSS +
mov [esp+30h+var_28] eax +
call sub_4235F0  +
jmp loc_42368A  +
***
jmp sub_423710  +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_C] +
mov eax [ebx] +
lea edx [ebx+65h] +
mov [esp+18h+var_14] ecx +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ecx +
mov ecx [esp+18h+arg_4] +
call sub_423610  +
mov edx [ebx] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_425CA0  +
mov eax [ebx] +
mov [esp+18h+var_14] offset unk_4C7002 +
mov [esp+18h+var_18] eax +
call sub_4262D0  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_425E10  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+8] 5 +
mov dword ptr [esp+4] offset aLocus +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_429CD0  +
mov esi eax +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_429D40  +
mov [esp+4] esi +
mov dword ptr [esp] offset aSSS_2 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_4235F0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] offset aColumns +
call getenv  +
test eax eax +
jz loc_4237F6  +
mov [esp+18h+var_18] eax +
call atoi  +
test eax eax +
cmovg ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
mov [esp+28h+var_28] 28h +
mov ebx [ebp+arg_4] +
call sub_4529F0  +
test eax eax +
mov [esi] eax +
jz loc_42388A  +
mov [esp+28h+var_24] 0 +
mov ecx eax +
mov [esp+28h+var_28] 0 +
call sub_425D00  +
sub esp 8 +
lea edi [esi+4] +
mov edx 38h +
test edi 1 +
jnz loc_4239DF  +
test edi 2 +
jnz loc_4239F4  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4238C1  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4238C9  +
mov byte ptr [edi] 0 +
lea edi ds:0[ebx*4] +
mov byte ptr [esi+3Ch] 0 +
mov [esi+40h] ebx +
mov [esp+28h+var_28] edi +
call sub_4529F0  +
test ebx ebx +
mov [esi+44h] eax +
lea edx [eax+edi] +
jle loc_4238FD  +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_4238F0  +
mov eax [esi] +
mov byte ptr [esi+58h] 0 +
mov eax [eax+1Ch] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call sub_423800  +
mov byte ptr [esi+60h] 5Eh +
mov byte ptr [esi+61h] 5Eh +
mov byte ptr [esi+62h] 5Eh +
mov byte ptr [esi+63h] 0 +
mov byte ptr [esi+64h] 0 +
mov byte ptr [esi+65h] 0 +
mov byte ptr [esi+66h] 0 +
mov byte ptr [esi+67h] 0 +
mov dword ptr [esi+68h] 0 +
mov byte ptr [esi+6Ch] 0 +
mov byte ptr [esi+6Dh] 0 +
mov byte ptr [esi+6Eh] 0 +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+74h] offset sub_424420 +
mov dword ptr [esi+78h] offset sub_423710 +
mov dword ptr [esi+7Ch] offset sub_4233E0 +
mov dword ptr [esi+84h] 0 +
mov dword ptr [esi+88h] 0 +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+94h] 0 +
mov dword ptr [esi+98h] 0 +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+9Ch] 0 +
mov byte ptr [esi+0A0h] 0 +
mov byte ptr [esi+0A1h] 0 +
mov byte ptr [esi+0A2h] 0 +
mov byte ptr [esi+0A3h] 0 +
mov dword ptr [esi+0A4h] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+5] +
mov dl 37h +
test edi 2 +
mov byte ptr [esi+4] 0 +
jz loc_4238AA  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4238AA  +
***
sub esp 18h +
mov edx [esp+18h+arg_4] +
test edx edx +
cmovns eax edx +
mov edx [esp+18h+arg_0] +
mov ebx [edx] +
mov [esp+18h+var_18] eax +
call sub_429D60  +
mov [ebx+27h] al +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+34h] +
test eax eax +
jz loc_423A7C  +
mov edx ds:dword_4D91A0 +
cmp byte ptr [ebx+3Ch] 0 +
mov eax [ebx] +
mov [esp+14h+var_C] edx +
jnz loc_423AD6  +
mov [esp+14h+var_10] offset aSSomeWarningsB +
mov [esp+14h+var_14] eax +
call sub_427750  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call sub_427810  +
call sub_421A50  +
mov eax [ebx+44h] +
mov [esp+14h+var_14] eax +
call free  +
mov ecx [ebx] +
mov dword ptr [ebx+44h] 0 +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call free  +
mov esi [ebx+0A4h] +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_423AD0  +
mov eax [esi+4] +
mov [esp+14h+var_14] eax +
call sub_466620  +
mov [esp+14h+var_14] esi +
call sub_480B00  +
mov dword ptr [ebx+0A4h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] offset aSAllWarningsBe +
mov [esp+14h+var_14] eax +
call sub_427750  +
jmp loc_423A72  +
***
mov eax [esp+arg_0] +
mov eax ds:dword_4C7560[eax*4] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov eax [edi] +
cmp byte ptr [eax+25h] 0 +
jnz loc_423C60  +
cmp ebx 1 +
jbe loc_423C53  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_4D9184 +
mov [esp+3Ch+var_34] 2 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42C5F0  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_423C53  +
cmp eax [edi+98h] +
jz loc_423C53  +
mov [edi+98h] eax +
mov eax [eax+10h] +
test eax eax +
js loc_423C53  +
mov edx ds:dword_4D9184 +
imul eax eax +
add eax [edx] +
cmp byte ptr [edi+65h] 0 +
mov [esp+3Ch+var_10] eax +
jnz loc_423C73  +
mov ebx [eax+1Ch] +
mov edx 0FFFFFFFFh +
movzx ecx byte ptr [eax+18h] +
mov ebp [eax+8] +
mov esi [edi] +
sub ebx 1 +
sub ebx [eax] +
shl edx cl +
and edx ebx +
shr edx cl +
add edx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aInFileIncluded +
mov [esp+3Ch+var_3C] esi +
call sub_427750  +
mov eax [esp+3Ch+var_10] +
mov esi 1 +
mov edx [eax+10h] +
test edx edx +
js loc_423C37  +
nop   +
mov eax ds:dword_4D9184 +
imul edx edx +
add edx [eax] +
mov eax esi +
mov ebx [edx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov ebp [edx+8] +
mov [esp+3Ch+var_10] edx +
sub ebx 1 +
sub ebx [edx] +
shl eax cl +
neg eax  +
and eax ebx +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_38] offset aFromRSDR +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_427750  +
mov eax [esp+3Ch+var_10] +
mov edx [eax+10h] +
test edx edx +
jns loc_423BE0  +
mov eax [edi] +
mov [esp+3Ch+var_38] offset asc_4C70F0 +
mov [esp+3Ch+var_3C] eax +
call sub_427750  +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_425E10  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] eax +
call sub_425E10  +
mov eax [edi] +
mov byte ptr [eax+25h] 0 +
jmp loc_423B23  +
movzx esi byte ptr [eax+18h] +
mov edx 1 +
mov ebp [eax+8] +
mov ecx esi +
shl edx cl +
mov ecx [eax+1Ch] +
mov ebx edx +
sub edx 1 +
neg ebx  +
sub ecx 1 +
sub ecx [eax] +
and ebx ecx +
movzx ecx byte ptr [eax+19h] +
and edx ebx +
shr edx cl +
mov ecx esi +
mov [esp+3Ch+var_28] edx +
shr ebx cl +
add ebx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] ebx +
mov [esp+3Ch+var_38] offset aInFileInclud_0 +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_427750  +
jmp loc_423BCE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_4] +
mov esi [esp+28h+arg_0] +
test ebx ebx +
js loc_423D86  +
cmp ebx [esi+40h] +
jge loc_423D86  +
cmp [esp+28h+arg_8] 0Dh +
jg loc_423D86  +
mov eax [esi+44h] +
mov edx [esp+28h+arg_C] +
lea eax [eax+ebx*4] +
test edx edx +
mov ebp [eax] +
jz loc_423D90  +
test ebp ebp +
jz loc_423DA5  +
mov eax [esi+4Ch] +
mov ecx eax +
sub ecx 1 +
mov [esp+28h+var_1C] eax +
mov eax [esi+48h] +
js loc_423D52  +
lea edx [ecx+ecx*2] +
shl edx 2 +
lea edi [eax+edx] +
cmp [edi+4] ebx +
lea edx [eax+edx-0Ch] +
jnz loc_423D4A  +
jmp loc_423DA0  +
mov edi edx +
sub edx 0Ch +
cmp [edx+10h] ebx +
jz loc_423DA0  +
sub ecx 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_423D40  +
mov edi [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
lea edi [edi+edi*2+3] +
shl edi 2 +
mov [esp+28h+var_24] edi +
call sub_452A70  +
mov [esi+48h] eax +
lea eax [eax+edi-0Ch] +
mov edi [esp+28h+arg_C] +
mov [eax+4] ebx +
mov [eax] edi +
mov edi [esp+28h+arg_8] +
mov [eax+8] edi +
mov eax ebp +
add dword ptr [esi+4Ch] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+28h+arg_8] +
mov [eax] esi +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [edi+8] +
jmp loc_423D52  +
mov edx [esi+88h] +
mov bp 1 +
mov eax [esi+84h] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] edx +
call eax  +
test eax eax +
jz loc_423DCE  +
cmp byte ptr [esi+3Ch] 1 +
sbb ebp ebp +
and ebp 2 +
add ebp 4 +
mov eax [esi+44h] +
mov [eax+ebx*4] ebp +
jmp loc_423D19  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [ebx+54h] +
mov eax [ebx+50h] +
lea edx ds:4[edx*4] +
mov [esp+4] edx +
mov [esp] eax +
call sub_452A70  +
mov edx [ebx+54h] +
lea ecx [edx+1] +
mov [ebx+54h] ecx +
mov ecx [ebx+4Ch] +
mov [ebx+50h] eax +
mov [eax+edx*4] ecx +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [ebx+54h] +
test eax eax +
jz loc_423E3F  +
mov edx [ebx+50h] +
sub eax 1 +
mov [ebx+54h] eax +
mov edi [edx+eax*4] +
mov eax [ebx+4Ch] +
lea esi [eax+eax*2+3] +
mov eax [ebx+48h] +
shl esi 2 +
mov [esp+4] esi +
mov [esp] eax +
call sub_452A70  +
mov edx [esp+24h] +
mov [ebx+48h] eax +
lea eax [eax+esi-0Ch] +
mov [eax] edx +
mov [eax+4] edi +
mov dword ptr [eax+8] 0Fh +
add dword ptr [ebx+4Ch] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
movzx edx byte ptr [ebp+0] +
cmp dl 2Eh +
jnz loc_423F66  +
cmp byte ptr [ebp+1] 2Eh +
jnz loc_423F5A  +
movzx eax byte ptr [ebp+2] +
cmp al 5Ch +
jnz loc_423F52  +
mov eax ebp +
jmp loc_423EBF  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_423ED5  +
movzx edx byte ptr [eax+2] +
cmp dl 5Ch +
jnz loc_423ED0  +
add eax 3 +
movzx edx byte ptr [eax] +
cmp dl 2Eh +
jz loc_423EB0  +
mov edi edx +
jmp loc_423EDA  +
cmp dl 2Fh +
jz loc_423EBF  +
mov edi 2Eh +
mov edx offset a____GccGccDiag +
jmp loc_423EF2  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_423EFD  +
movzx esi byte ptr [edx+2] +
mov ebx esi +
cmp bl 5Ch +
jnz loc_423F47  +
add edx 3 +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_423EE1  +
mov ebx edi +
cmp bl cl +
jnz loc_423F21  +
mov ebx edi +
test bl bl +
jnz loc_423F14  +
jmp loc_423F21  +
test cl cl +
jz loc_423F21  +
add eax 1 +
add edx 1 +
movzx ecx byte ptr [eax] +
cmp cl [edx] +
jz loc_423F10  +
cmp ebp eax +
jb loc_423F39  +
jmp loc_423F42  +
cmp dl 2Fh +
lea esi [esi+0] +
jz loc_423F42  +
sub eax 1 +
cmp eax ebp +
jz loc_423F42  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_423F27  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 2Fh +
jz loc_423EF2  +
lea esi [esi+0] +
jmp loc_423EFD  +
cmp al 2Fh +
jz loc_423EAB  +
mov eax ebp +
mov edi 2Eh +
jmp loc_423EDA  +
mov edi edx +
mov eax ebp +
jmp loc_423EDA  +
***
sub esp 3Ch +
lea eax [esp+44h] +
mov [esp+18h] eax +
call ds:__imp__errno  +
lea edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+28h] 0 +
mov [esp+24h] eax +
lea eax [esp+18h] +
mov [esp+20h] eax +
mov eax [esp+40h] +
mov [esp+1Ch] eax +
mov eax off_483600 +
mov eax [eax] +
mov [esp+4] edx +
mov [esp] eax +
call sub_427700  +
mov eax off_483600 +
mov eax [eax] +
mov [esp] eax +
call sub_427810  +
add esp 3Ch +
retn   +
***
mov edx off_483600 +
mov eax 1 +
mov ecx [edx+14h] +
test ecx ecx +
jnz locret_423FEA  +
mov eax [edx+18h] +
test eax eax +
setnz al  +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4740A0  +
add esp 1Ch +
retn   +
***
sub esp 14h +
sub esp 1Ch +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
cmp eax 0Dh +
ja loc_424175  +
jmp ds:off_4C7260[eax*4]  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_424170  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+6Ch] 0 +
jnz loc_424221  +
add esp 3Ch +
retn   +
cmp eax 3 +
jz loc_4241C0  +
mov [esp+3Ch+var_10] 0 +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_424170  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseSubmitAF +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_423FF0  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jle loc_42413A  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseIncludeT +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_423FF0  +
mov eax ds:_iob +
mov [esp+3Ch+var_34] offset aHttpsGcc_gnu_o +
mov [esp+3Ch+var_38] offset aSeeSForInstruc +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_423FF0  +
mov [esp+3Ch+var_3C] 4 +
call exit  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jz loc_424191  +
call abort  +
mov [esp+3Ch+var_34] offset aDiagnostic_act +
mov [esp+3Ch+var_38] 215h +
mov [esp+3Ch+var_3C] offset a____GccGccDi_0 +
call sub_424080  +
mov [esp+3Ch+var_3C] eax +
call sub_423A40  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationTer +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_423FF0  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] offset sub_4235A0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] 0 +
call sub_44CD40  +
mov [esp+3Ch+var_10] 0 +
test eax eax +
jz loc_4240F8  +
lea edx [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_30] offset sub_4235A0 +
mov [esp+3Ch+var_34] offset sub_423420 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] eax +
call sub_44CE90  +
jmp loc_4240F8  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationT_0 +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_423FF0  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_423A40  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
jmp sub_424260  +
***
sub esp 14h +
sub esp 14h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [ebp+arg_4] +
mov [esp+18h+var_18] 0 +
mov ebx [ebp+arg_0] +
mov ecx esi +
call sub_4258F0  +
sub esp 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ebx +
call sub_423B00  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_424320  +
mov edx [ebx] +
mov [ebp+arg_0] edx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp sub_425CA0  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [ebp+0Ch] +
lea esi [ebp-74h] +
mov ebx [ebp+8] +
mov ecx esi +
lea edi [ebp-98h] +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42D810  +
lea eax [ebp+14h] +
mov [ebp-9Ch] eax +
lea eax [ebp-9Ch] +
sub esp 8 +
mov [esp+8] eax +
mov eax [ebp+10h] +
mov dword ptr [esp+10h] 8 +
mov [esp+0Ch] esi +
mov [esp] edi +
mov [esp+4] eax +
call sub_4242C0  +
cmp byte ptr [ebx+0A0h] 0 +
jnz loc_424547  +
mov eax [ebx] +
mov edx [eax+8] +
mov [esp+4] edi +
mov [esp] ebx +
mov [ebp-0ACh] edx +
call sub_424320  +
mov ecx [ebx] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_425CA0  +
mov eax [ebx] +
mov [esp+4] edi +
mov [esp] eax +
call sub_426320  +
mov eax [ebx] +
mov [esp] eax +
call sub_427650  +
mov eax [ebx] +
mov [esp] eax +
call sub_425CD0  +
mov eax [ebx] +
mov edx [ebp-0ACh] +
mov [esp] eax +
mov [esp+4] edx +
call sub_425CA0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_429200  +
mov ecx esi +
call sub_42D4F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 24h +
test eax eax +
jz loc_424679  +
test edx edx +
mov ebx edx +
jz loc_424695  +
mov [esp+28h+var_24] 22h +
mov [esp+28h+var_28] eax +
call sub_425E60  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_4245BC  +
jmp loc_4245E2  +
cmp cl 22h +
jz loc_424630  +
cmp cl 5Ch +
nop   +
jnz loc_424610  +
mov [esp+28h+var_24] offset asc_4C72A2 +
mov [esp+28h+var_28] esi +
call sub_4262D0  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_4245E2  +
cmp cl 0Ah +
jz loc_4245F8  +
jg loc_424592  +
cmp cl 9 +
jnz loc_424610  +
add ebx 1 +
mov [esp+28h+var_24] offset aT +
mov [esp+28h+var_28] esi +
call sub_4262D0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_4245BC  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 22h +
call sub_425E60  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+28h+var_24] offset aN +
mov [esp+28h+var_28] esi +
call sub_4262D0  +
jmp loc_4245B2  +
movzx eax cl +
movsx edx cl +
test byte ptr ds:word_4D0620[eax+eax] 10h +
jz loc_424645  +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] esi +
call sub_425E60  +
jmp loc_4245B2  +
mov [esp+28h+var_24] offset asc_4C72AB +
mov [esp+28h+var_28] esi +
call sub_4262D0  +
jmp loc_4245B2  +
mov eax ecx +
and eax 7 +
mov [esp+28h+var_18] eax +
mov eax ecx +
shr al 3 +
shr cl 6 +
and eax 7 +
movzx ecx cl +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] offset aOOO +
mov [esp+28h+var_28] esi +
call sub_427790  +
jmp loc_4245B2  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C1h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_424080  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C2h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_424080  +
jmp sub_4246C0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [ebp+arg_4] +
mov [esp+88h+var_88] 0 +
mov esi [ebp+arg_0] +
mov ecx edi +
call sub_4258F0  +
mov edx [edi+1Ch] +
sub esp 4 +
cmp edx 0Ah +
mov [ebp+var_4C] eax +
jz loc_424750  +
cmp edx 6 +
jz loc_424750  +
mov eax edx +
cmp eax 8 +
jz loc_424960  +
mov ecx [esi+9Ch] +
test ecx ecx +
jle loc_424774  +
cmp eax 0Dh +
jz loc_42470F  +
cmp eax 3 +
jnz loc_424714  +
cmp ecx 1 +
jz loc_424764  +
cmp ecx 2 +
jle loc_424D8D  +
mov eax ds:_iob +
mov [esp+88h+var_84] offset aInternalCompil +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_423FF0  +
mov [esp+88h+var_84] 3 +
mov [esp+88h+var_88] esi +
call sub_4240B0  +
call abort  +
lea esi [esi+0] +
cmp byte ptr [esi+6Dh] 0 +
jz loc_424980  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
call sub_427810  +
mov edx [ebp+var_50] +
cmp byte ptr [esi+3Ch] 0 +
jz loc_424784  +
cmp dword ptr [edi+1Ch] 6 +
jz loc_4249D8  +
mov eax [edi+20h] +
test eax eax +
jnz loc_4248B1  +
mov eax [edi+1Ch] +
cmp eax 8 +
jz loc_424950  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] esi +
mov [ebp+var_4C] edx +
call sub_424020  +
mov eax [edi+1Ch] +
add dword ptr [esi+9Ch] 1 +
mov edx [ebp+var_4C] +
cmp eax 0Dh +
jnz loc_424CF1  +
mov ebx [esi+14h] +
test ebx ebx +
jle loc_4249E4  +
cmp byte ptr [esi+64h] 0 +
jz loc_424D05  +
mov ecx [esi+80h] +
test ecx ecx +
jz loc_4247FE  +
mov eax [edi] +
mov ebx [edi+4] +
mov [ebp+var_4C] edx +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ebx +
call ecx  +
mov eax [edi+1Ch] +
mov edx [ebp+var_4C] +
cmp eax 4 +
jnz loc_42480C  +
cmp edx 6 +
jz loc_424CD4  +
add dword ptr [esi+eax*4+4] 1 +
mov ebx [edi] +
cmp byte ptr [esi+63h] 0 +
mov [ebp+var_54] ebx +
jnz loc_4249F4  +
lea eax [edi+18h] +
mov [edi+0Ch] eax +
mov eax [esi] +
mov dword ptr [edi+18h] 0 +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] eax +
call sub_426320  +
mov eax [esi+74h] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_427650  +
mov eax [esi+7Ch] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
cmp byte ptr [esi+0A3h] 0 +
jnz loc_424B00  +
mov eax [edi+1Ch] +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call sub_4240B0  +
mov ecx [esi+0A4h] +
mov eax [ebp+var_54] +
mov dword ptr [edi+18h] 0 +
test ecx ecx +
mov [edi] eax +
jz loc_42489D  +
mov eax [edi+14h] +
mov [esp+88h+var_88] eax +
call sub_42AFF0  +
sub esp 4 +
sub dword ptr [esi+9Ch] 1 +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esi+68h] +
jz loc_42478F  +
mov ebx [esi+88h] +
mov ecx [esi+84h] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ebx +
call ecx  +
test eax eax +
jz loc_42475A  +
mov ebx [esi+4Ch] +
mov edx [ebp+var_50] +
test ebx ebx +
jle loc_424CB6  +
sub ebx 1 +
mov [ebp+arg_4] edi +
jmp loc_424910  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_424CE5  +
mov edx [ebp+arg_4] +
cmp [edx+20h] ecx +
jz loc_424CE5  +
sub ebx 1 +
js loc_424CB0  +
mov ecx [esi+48h] +
lea eax [ebx+ebx*2] +
lea edi ds:0[eax*4] +
mov edx [ebp+var_4C] +
mov eax [ecx+eax*4] +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42C890  +
test eax eax +
js loc_424907  +
add edi [esi+48h] +
mov eax [edi+8] +
cmp eax 0Fh +
jnz loc_4248F0  +
mov ebx [edi+4] +
jmp loc_424907  +
add dword ptr [esi+9Ch] 1 +
jmp loc_42480C  +
cmp byte ptr [esi+0A0h] 0 +
jnz loc_42475A  +
mov ecx [esi+9Ch] +
test ecx ecx +
jg loc_424705  +
jmp loc_424774  +
mov eax [ebp+var_4C] +
mov [ebp+var_50] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42C530  +
mov edx [ebp+var_50] +
test eax eax +
jz loc_4249A8  +
cmp byte ptr [esi+6Eh] 0 +
jz loc_42475A  +
mov eax [edi+1Ch] +
cmp eax 0Ah +
jnz loc_4246F2  +
cmp byte ptr [esi+66h] 1 +
mov ecx [esi+9Ch] +
sbb edx edx +
and edx 2 +
add edx 4 +
test ecx ecx +
mov [edi+1Ch] edx +
mov eax edx +
jg loc_424705  +
jmp loc_424774  +
mov dword ptr [edi+1Ch] 4 +
jmp loc_424784  +
mov ecx [esi+18h] +
test ecx ecx +
jg loc_4247CF  +
jmp loc_4247D9  +
mov ebx [edi+20h] +
mov ecx [esi+8Ch] +
mov [esp+88h+var_7C] eax +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] esi +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_424820  +
mov eax [edi+1Ch] +
mov edx ds:dword_4C7560[eax*4] +
mov [esp+88h+var_88] edx +
mov [ebp+var_4C] edx +
call strlen  +
mov edx [ebp+var_4C] +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_80] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_429CD0  +
mov [ebp+var_4C] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_429D40  +
mov edx [ebp+var_4C] +
mov ecx eax +
mov eax [edi] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_4C7328 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 4C732Ah +
mov [esp+88h+var_84] 4C732Ch +
mov [esp+88h+var_88] eax +
mov [ebp+var_50] ecx +
call sub_452B00  +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_470810  +
mov ecx [ebp+var_50] +
sub esp eax +
mov eax [edi] +
lea edx [esp+88h+var_59] +
and edx 0FFFFFFF0h +
mov ds:dword_4DA374 edx +
mov edx [ebp+var_4C] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_4C7328 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 4C732Ah +
mov [esp+88h+var_84] 4C732Ch +
mov [esp+88h+var_88] eax +
call sub_452B80  +
mov [edi] eax +
mov [esp+88h+var_88] ebx +
call free  +
jmp loc_424820  +
mov eax [edi+14h] +
mov [ebp+var_50] eax +
mov eax [esi] +
test eax eax +
mov ebx eax +
jz loc_424D71  +
mov eax [ebp+var_50] +
test eax eax +
jz loc_424D55  +
mov eax [eax+44h] +
test eax eax +
jz loc_424C34  +
mov eax [ebp+var_50] +
mov [ebp+arg_0] esi +
mov esi ebx +
mov dword ptr [ebp-5Ch] 0FFFFFFF8h +
mov [ebp+var_4C] 0 +
add eax 44h +
mov [ebp+var_60] eax +
mov [ebp+arg_4] edi +
cmp [ebp+var_4C] 1 +
jle loc_424CA0  +
mov ebx [ebp+var_50] +
mov eax [ebp-5Ch] +
add eax [ebx+54h] +
mov ebx [eax] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [esp+88h+var_84] eax +
lea eax [ebp+var_40] +
mov [esp+88h+var_88] eax +
call sub_421CB0  +
mov eax [ebp+var_3C] +
mov [esp+88h+var_84] offset aFixIt +
mov edi [ebp+var_38] +
mov [esp+88h+var_88] esi +
mov [ebp+var_59+1] eax +
call sub_4262D0  +
mov edx [ebp+var_40] +
mov eax esi +
call sub_424560  +
mov eax [ebx] +
lea ecx [ebp+var_44] +
mov eax [eax+14h] +
mov [esp+88h+var_88] ecx +
mov ecx ebx +
call eax  +
sub esp 4 +
test al al +
jz loc_424C41  +
mov eax [ebp+var_44] +
mov [esp+8Ch+var_88] eax +
lea eax [ebp+var_2C] +
mov [esp+8Ch+var_8C] eax +
call sub_421CB0  +
mov eax [ebp+var_24] +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_8C] esi +
add eax 1 +
mov [esp+8Ch+var_78] eax +
mov eax [ebp+var_28] +
mov [esp+8Ch+var_7C] eax +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_84] eax +
call sub_427790  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jz loc_424C6F  +
cmp eax 1 +
jnz loc_424C80  +
mov edx [ebx+0Ch] +
mov eax esi +
call sub_424560  +
mov [esp+8Ch+var_8C] esi +
call sub_425E10  +
mov eax [ebp+var_50] +
add [ebp+var_4C] 1 +
mov ebx [ebp+var_4C] +
add dword ptr [ebp-5Ch] 4 +
cmp ebx [eax+44h] +
jb loc_424B47  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov eax [esi] +
mov ebx eax +
mov [esp+8Ch+var_8C] ebx +
call sub_425B00  +
jmp loc_42486A  +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] esi +
call sub_427790  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_424BF8  +
mov edx [ebx+8] +
mov eax esi +
call sub_424560  +
jmp loc_424C0B  +
mov [esp+8Ch+var_84] offset aPrint_parseabl +
mov [esp+8Ch+var_88] 31Bh +
mov [esp+8Ch+var_8C] offset a____GccGccDi_0 +
call sub_424080  +
lea esi [esi+0] +
mov eax [ebp+var_60] +
mov ebx [ebp+var_4C] +
lea eax [eax+ebx*4+4] +
jmp loc_424B5A  +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
mov ecx [edi+20h] +
mov eax [esi+44h] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_424CE0  +
mov [edi+1Ch] eax +
cmp eax 1 +
jnz loc_424792  +
jmp loc_42475A  +
add dword ptr [esi+34h] 1 +
jmp loc_424811  +
mov eax [edi+1Ch] +
jmp loc_424CC6  +
test eax eax +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
jnz loc_424CC3  +
jmp loc_424CB6  +
cmp eax 3 +
jz loc_4247C4  +
lea esi [esi+0] +
jmp loc_4247FE  +
mov ecx edi +
mov [esp+88h+var_88] 0 +
call sub_4258F0  +
push edx  +
lea edx [ebp+var_2C] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edx +
call sub_421CB0  +
mov eax [ebp+var_28] +
mov [esp+88h+var_84] offset aSDConfusedByEa +
mov [esp+88h+var_7C] eax +
mov eax [ebp+var_2C] +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_423FF0  +
mov [esp+88h+var_88] 4 +
call exit  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EFh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424080  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EEh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424080  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_427810  +
jmp loc_42471D  +
***
sub esp 54h +
mov ebx [esp+54h+arg_10] +
cmp ebx 0Bh +
jz loc_424E00  +
mov eax [esp+54h+arg_0] +
lea esi [esp+54h+var_28] +
mov [esp+54h+var_44] ebx +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_4242C0  +
cmp ebx 0Ah +
jnz loc_424E47  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_8] eax +
mov eax off_483600 +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
call sub_4246C0  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax off_483600 +
lea esi [esp+54h+var_28] +
cmp byte ptr [eax+67h] 1 +
mov [esp+54h+var_54] esi +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 6 +
mov [esp+54h+var_44] eax +
mov eax [esp+54h+arg_0] +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_4242C0  +
mov eax off_483600 +
mov edx [eax+68h] +
mov [esp+54h+var_8] edx +
jmp loc_424DE8  +
cmp ebx 6 +
jz loc_424DDB  +
jmp loc_424DE3  +
***
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 8 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_424DA0  +
mov ecx ebx +
call sub_42D4F0  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_424DA0  +
add esp 3Ch +
retn   +
***
push esi  +
push ebx  +
lea eax [ebp+arg_8] +
add esp 0FFFFFF80h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 6 +
mov [esp+88h+var_80] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_84] eax +
call sub_424DA0  +
mov ecx ebx +
mov esi eax +
call sub_42D4F0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
lea eax [ebp+arg_C] +
add esp 0FFFFFF80h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_8] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 6 +
mov [esp+88h+var_80] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_84] eax +
call sub_424DA0  +
mov ecx ebx +
mov esi eax +
call sub_42D4F0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_425030  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_424DA0  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42D810  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_424DA0  +
mov ecx ebx +
mov esi eax +
call sub_42D4F0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_4250E0  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_424DA0  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42D810  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_424DA0  +
mov ecx ebx +
mov esi eax +
call sub_42D4F0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_424DA0  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 4 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_424DA0  +
mov ecx ebx +
call sub_42D4F0  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_424DA0  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 3 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_424DA0  +
mov [esp+88h+var_80] offset aInternal_error +
mov [esp+88h+var_84] 576h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424080  +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_74] +
mov esi [ebp+arg_18] +
mov ecx ebx +
lea edi [ebp+var_98] +
mov [esp+144h+var_140] eax +
mov eax ds:dword_4D9184 +
mov [esp+144h+var_144] eax +
call sub_42D810  +
mov eax [ebp+arg_8] +
sub esp 8 +
mov [esp+144h+var_13C] eax +
mov eax [ebp+arg_10] +
mov [esp+144h+var_140] eax +
mov eax [ebp+arg_C] +
mov [esp+144h+var_144] eax +
call sub_42B200  +
mov edx [ebp+arg_14] +
mov [esp+144h+var_134] esi +
mov [esp+144h+var_138] ebx +
mov [esp+144h+var_144] edi +
mov [esp+144h+var_13C] edx +
mov [esp+144h+var_140] eax +
call sub_424260  +
cmp esi 6 +
jnz loc_425410  +
mov eax [ebp+arg_4] +
mov [ebp+var_78] eax +
mov eax off_483600 +
mov [esp+144h+var_140] edi +
mov [esp+144h+var_144] eax +
call sub_4246C0  +
mov ecx ebx +
mov esi eax +
call sub_42D4F0  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_4253A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+54h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+18h] 6 +
mov [esp+10h] eax +
mov eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_4253A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_4253A0  +
add esp 3Ch +
retn   +
***
push ebx  +
sub esp 58h +
lea eax [esp+74h] +
mov [esp+28h] eax +
mov eax [esp+68h] +
lea ebx [esp+2Ch] +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp+4] eax +
mov eax [esp+6Ch] +
mov [esp] eax +
call sub_42B200  +
mov edx [esp+60h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_424260  +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp+4Ch] eax +
mov eax off_483600 +
mov [esp] eax +
call sub_4246C0  +
add esp 58h +
pop ebx  +
retn   +
***
lea eax [ebp+arg_8] +
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42D810  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 0Dh +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_424DA0  +
mov [esp+88h+var_80] offset aInternal_err_0 +
mov [esp+88h+var_84] 585h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424080  +
mov dword ptr [ecx] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [ecx] +
test eax eax +
jnz loc_4256A2  +
jmp loc_4256B2  +
mov eax ebx +
mov ebx [eax] +
mov [esp] eax +
call free  +
test ebx ebx +
mov [esi] ebx +
jnz loc_4256A0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
cmp eax 10000h +
jz loc_4256D4  +
mov [esp+4] eax +
jmp sub_4529F0  +
***
mov eax ds:dword_4D9280 +
test eax eax +
jz loc_4256E6  +
mov edx [eax] +
mov ds:dword_4D9280 edx +
retn   +
***
mov dword ptr [esp+4] 10000h +
jmp sub_4529F0  +
***
mov eax [esp+4] +
mov edx [eax] +
sub edx eax +
cmp edx 10000h +
jz loc_425720  +
mov [esp+4] eax +
jmp free  +
***
mov edx ds:dword_4D9280 +
mov [eax] edx +
mov ds:dword_4D9280 eax +
retn   +
***
push edi  +
mov ebx eax +
sub esp 14h +
mov esi [eax+1Ch] +
test esi esi +
jle loc_42588C  +
cmp dword ptr [eax+18h] 1 +
jbe loc_42588C  +
mov eax [eax+8] +
test eax eax +
jz loc_4258A1  +
mov [esp+14h+var_14] eax +
call strlen  +
mov edx esi +
sub edx eax +
cmp edx 1Fh +
jle loc_425895  +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 20h +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_425883  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ecx+10h] +
movzx eax byte ptr [ebp+10h] +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42D880  +
sub esp 10h +
leave   +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
mov ebx ecx +
mov edi ebx +
mov ecx 0Bh +
sub esp 20h +
stos   +
lea esi [ebx+2Ch] +
mov edi esi +
lea edx [ebx+0E8h] +
mov cl 0Bh +
stos   +
mov eax ds:_iob +
mov [ebx+58h] ebx +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+64h] 0 +
add eax 40h +
mov [ebx+60h] eax +
lea eax [ebx+68h] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_425951  +
mov [esp+28h+var_28] ebx +
mov byte ptr [ebx+0E8h] 1 +
mov [esp+28h+var_18] offset loc_425700 +
mov [esp+28h+var_1C] offset loc_4256C0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_458DA0  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_18] offset loc_425700 +
mov [esp+28h+var_1C] offset loc_4256C0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_458DA0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 18h +
lea eax [ecx+2Ch] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] 0 +
call sub_458F10  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 0 +
call sub_458F10  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5880 +
mov ecx [ecx+4] +
call sub_4259C0  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
call sub_4259F0  +
mov [esp+18h+var_18] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ebx [esp+18h+arg_0] +
mov edx [ebx+4] +
mov eax [edx+58h] +
mov ecx [eax+8] +
cmp ecx [eax+4] +
jbe loc_425A6B  +
cmp ecx [eax+10h] +
jb loc_425A86  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call sub_458F10  +
mov edx [ebx+4] +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [eax+0Ch] ecx +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+4] +
mov ebx [edi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_425AE8  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [edi+58h] +
mov edx [esi+4] +
mov eax [eax+8] +
mov edx [edx+60h] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call fputs  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_425A50  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] ebx +
call sub_458E00  +
mov eax [ebx+0Ch] +
jmp loc_425AB8  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+4] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp byte ptr [eax+0E8h] 0 +
jnz loc_425B24  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call sub_425AA0  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
mov [esp] ebx +
call sub_425AA0  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+20h] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
movzx esi byte ptr [esp+34h] +
mov ebp [edi+4] +
mov ebx [ebp+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_425C85  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [ebp+58h] +
mov ebp [eax+8] +
mov eax [edi+4] +
mov ebx [eax+60h] +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_425BE5  +
jmp loc_425C75  +
cmp al 20h +
jz loc_425BF8  +
cmp al 22h +
lea esi [esi+0] +
jz loc_425C02  +
cmp al 0Ah +
jz loc_425C14  +
mov [esp+4] ebx +
movsx eax byte ptr [ebp+0] +
add ebp 1 +
mov [esp] eax +
call fputc  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_425C75  +
cmp al 3Ch +
jz loc_425BF8  +
jle loc_425BB4  +
cmp al 5Ch +
lea esi [esi+0] +
jz loc_425C46  +
jg loc_425C68  +
cmp al 3Eh +
jnz loc_425BC6  +
mov eax esi +
test al al +
lea esi [esi+0] +
jz loc_425BC6  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_425BC6  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_4C75BD +
call fwrite  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_425BC6  +
***
cmp byte ptr [ebp+1] 0 +
jnz loc_425C02  +
mov dword ptr [esp+8] offset aPp_write_text_ +
mov dword ptr [esp+4] 0BEh +
mov dword ptr [esp] offset a____GccGccPret +
call sub_424080  +
sub eax 7Bh +
cmp al 2 +
ja loc_425BC6  +
jmp loc_425BF8  +
***
mov [esp+30h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425A50  +
***
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_458E00  +
mov eax [ebx+0Ch] +
jmp loc_425B92  +
***
mov ebx [esp+8+arg_0] +
mov eax [esp+8+arg_4] +
mov [ebx+8] eax +
mov eax ebx +
call sub_425860  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_425CEE  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov dword ptr [ecx] offset off_4D5880 +
mov [esp+14h+var_10] 0ECh +
mov [esp+14h+var_14] 1 +
call sub_452A20  +
test eax eax +
mov esi eax +
jz loc_425D2E  +
mov ecx eax +
call sub_425910  +
mov eax [esp+14h+arg_4] +
mov [ebx+4] esi +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov [ebx+1Ch] eax +
mov eax [esp+14h+arg_0] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax ebx +
mov byte ptr [ebx+24h] 0 +
mov byte ptr [ebx+25h] 0 +
mov byte ptr [ebx+26h] 1 +
mov byte ptr [ebx+27h] 0 +
call sub_425860  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov esi [eax+4] +
mov ebx [esi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_425DC0  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [esi+58h] +
mov eax [eax+8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_458E00  +
mov eax [ebx+0Ch] +
jmp loc_425DA7  +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov edx [eax+58h] +
mov eax [edx+0Ch] +
cmp [edx+8] eax +
jz loc_425DF6  +
sub eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax [eax+10h] +
sub eax [edx+64h] +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+4] +
mov ebx [eax+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_425E44  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0Ah +
mov eax [esi+4] +
mov byte ptr [esi+25h] 0 +
mov dword ptr [eax+64h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_458E00  +
mov eax [ebx+0Ch] +
jmp loc_425E27  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+1Ch] +
mov edx [esi+4] +
test eax eax +
jle loc_425E82  +
mov eax [esi+10h] +
sub eax [edx+64h] +
test eax eax +
jle loc_425EA3  +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jz loc_425EC6  +
lea edx [eax+1] +
mov [edi+0Ch] edx +
mov [eax] bl +
mov eax [esi+4] +
add dword ptr [eax+64h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] esi +
call sub_425E10  +
movzx eax bl +
test byte ptr ds:word_4D0620[eax+eax] 40h +
jnz loc_425E9C  +
mov edx [esi+4] +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jnz loc_425E8D  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edi +
call sub_458E00  +
mov eax [edi+0Ch] +
jmp loc_425E8D  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+20h] +
mov esi [edi+14h] +
test esi esi +
jle loc_425F0A  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] edi +
call sub_425E60  +
cmp ebx esi +
jnz loc_425EF3  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_425F20  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [edi+8] +
test esi esi +
jz loc_425FA4  +
mov eax [edi+18h] +
test eax eax +
jz loc_425FB0  +
cmp eax 2 +
jnz loc_425FA4  +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx [edi+4] +
mov edx [ebx+58h] +
mov ebp eax +
mov ecx [edx+0Ch] +
mov eax [edx+10h] +
sub eax ecx +
cmp ebp eax +
ja loc_425FF0  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_10] edx +
call memcpy  +
mov edx [esp+1Ch+var_10] +
add [edx+0Ch] ebp +
xor edx edx +
test ebp ebp +
jg loc_425F8C  +
jmp loc_425FA0  +
add edx 1 +
add dword ptr [ebx+64h] 1 +
cmp ebp edx +
jz loc_425FA0  +
cmp byte ptr [esi+edx] 0Ah +
jnz loc_425F81  +
add edx 1 +
cmp ebp edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_425F8C  +
mov byte ptr [edi+24h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+24h] 0 +
jz loc_425FE0  +
mov esi [edi+14h] +
test esi esi +
jle loc_425FA4  +
xor ebx ebx +
nop   +
mov [esp+1Ch+var_18] 20h +
add ebx 1 +
mov [esp+1Ch+var_1C] edi +
call sub_425E60  +
cmp ebx esi +
jnz loc_425FC0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [edi+14h] 3 +
jmp loc_425F3E  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_10] edx +
call sub_458E00  +
mov edx [esp+1Ch+var_10] +
mov ecx [edx+0Ch] +
jmp loc_425F5E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [ebp+4] +
mov edx [ebx+64h] +
test edx edx +
jz loc_426086  +
mov ebp [ebx+58h] +
sub edi esi +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
sub eax edx +
cmp edi eax +
ja loc_4260B4  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] esi +
call memcpy  +
mov eax esi +
add [ebp+0Ch] edi +
test edi edi +
lea edx [esi+edi] +
jg loc_42606B  +
jmp loc_42607E  +
add eax 1 +
add dword ptr [ebx+64h] 1 +
cmp eax edx +
jz loc_42607E  +
cmp byte ptr [eax] 0Ah +
jnz loc_426060  +
add eax 1 +
cmp eax edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_42606B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] ebp +
call sub_425F20  +
mov eax [ebp+1Ch] +
test eax eax +
jle loc_4260AC  +
cmp esi edi +
jnz loc_4260A7  +
jmp loc_4260AC  +
add esi 1 +
cmp edi esi +
jz loc_4260AC  +
cmp byte ptr [esi] 20h +
jz loc_4260A0  +
mov ebx [ebp+4] +
jmp loc_42602D  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call sub_458E00  +
mov edx [ebp+0Ch] +
jmp loc_42603E  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1Ch] +
cmp edx ecx +
mov [esp+28h+var_1C] eax +
jz loc_426160  +
mov ebx edi +
lea esi [esi+0] +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 1 +
jnz loc_42610B  +
cmp al 0Ah +
jz loc_42610B  +
add ebx 1 +
cmp esi ebx +
jnz loc_4260F0  +
mov eax [esp+28h+var_1C] +
test eax eax +
jle loc_42612C  +
mov ecx [ebp+4] +
mov edx ebx +
mov eax [ebp+10h] +
sub edx edi +
sub eax [ecx+64h] +
cmp edx eax +
jl loc_42612C  +
mov [esp+28h+var_28] ebp +
call sub_425E10  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
call sub_426010  +
cmp ebx esi +
jz loc_426160  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 1 +
jnz loc_426168  +
cmp al 0Ah +
jz loc_426189  +
cmp esi ebx +
jz loc_426160  +
mov edi ebx +
jmp loc_4260E8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 20h +
mov [esp+28h+var_28] ebp +
call sub_425E60  +
lea edx [ebx+1] +
cmp esi edx +
jz loc_426160  +
movzx eax byte ptr [ebx+1] +
mov ebx edx +
cmp al 0Ah +
jnz loc_426154  +
mov [esp+28h+var_28] ebp +
add ebx 1 +
call sub_425E10  +
jmp loc_426154  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
cmp ecx 0FFFFFFFFh +
mov [esp+44h+var_2C] edx +
mov [esp+44h+var_28] ecx +
jz loc_4262B5  +
mov esi [esp+44h+var_28] +
mov eax [esp+44h+var_2C] +
test esi esi +
jz loc_4262C6  +
lea ebx [eax+1] +
mov [esp+44h+var_30] eax +
lea ebp [esp+44h+var_1F] +
jmp loc_4261EC  +
mov edx ebp +
mov eax edi +
call sub_4260D0  +
mov [esp+44h+var_30] ebx +
add ebx 1 +
sub esi 1 +
jz loc_426252  +
movzx eax byte ptr [ebx-1] +
lea ecx [ebx-1] +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 10h +
jnz loc_4261E4  +
cmp ecx [esp+44h+var_30] +
ja loc_426237  +
mov [esp+44h+var_3C] eax +
mov [esp+44h+var_40] offset aX02x +
mov [esp+44h+var_44] ebp +
call sub_47D150  +
mov edx [edi+1Ch] +
test edx edx +
lea ecx [ebp+eax+0] +
jg loc_4261D7  +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
call sub_426010  +
jmp loc_4261E0  +
mov eax [edi+1Ch] +
lea ecx [ebx-2] +
test eax eax +
jle loc_426278  +
mov edx [esp+44h+var_30] +
mov eax edi +
call sub_4260D0  +
movzx eax byte ptr [ebx-1] +
jmp loc_426206  +
mov eax [esp+44h+var_28] +
add [esp+44h+var_2C] eax +
mov eax [edi+1Ch] +
test eax eax +
jle loc_426295  +
mov ecx [esp+44h+var_2C] +
mov eax edi +
mov edx [esp+44h+var_30] +
call sub_4260D0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_426010  +
movzx eax byte ptr [ebx-1] +
jmp loc_426206  +
mov eax [esp+44h+var_2C] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_40] eax +
call sub_426010  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_44] edx +
call strlen  +
mov [esp+44h+var_28] eax +
jmp loc_4261BA  +
mov [esp+44h+var_30] eax +
jmp loc_42625A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea ecx [ebx+eax] +
mov eax [esi+1Ch] +
test eax eax +
jle loc_426300  +
add esp 14h +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
jmp sub_4260D0  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] ecx +
call sub_426010  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edi [ebx+18h] +
mov esi [ebx+1Ch] +
mov dword ptr [ebx+18h] 1 +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ebx +
call sub_426320  +
mov [esp+10h+var_10] ebx +
call sub_427650  +
mov [ebx+18h] edi +
mov [ebx+1Ch] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_24] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-30h+arg_50] eax +
lea eax [esp-30h+arg_44] +
mov [esp-30h+arg_4C] eax +
mov eax [esp-30h+arg_70] +
mov [esp-30h+arg_48] eax +
lea eax [esp-30h+arg_48] +
mov [esp-30h+arg_30] eax +
mov eax [esp-30h+arg_6C] +
mov [esp-30h+arg_2C] eax +
call sub_427700  +
add esp 3Ch +
retn   +
***
lea eax [esp+38h+arg_8] +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-34h+arg_2C] ebx +
mov [esp-34h+arg_50] eax +
lea eax [esp-34h+arg_44] +
mov [esp-34h+arg_4C] eax +
mov eax [esp-34h+arg_70] +
mov [esp-34h+arg_48] eax +
lea eax [esp-34h+arg_48] +
mov [esp-34h+arg_30] eax +
call sub_426320  +
mov [esp-34h+arg_2C] ebx +
call sub_427650  +
add esp 38h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_427806  +
mov dword ptr [esp+4] 20h +
mov [esp] ebx +
call sub_425E60  +
mov dword ptr [ebx+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_425E10  +
mov [esp+18h+var_18] ebx +
call sub_425B00  +
mov byte ptr [ebx+25h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
jmp loc_427840  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esp+24h] +
add [esi+14h] eax +
mov [esp] esi +
call sub_425E10  +
mov edi [esi+14h] +
test edi edi +
jle loc_427879  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] esi +
call sub_425E60  +
cmp ebx edi +
jnz loc_427862  +
mov byte ptr [esi+25h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movsx eax byte ptr [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425E60  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] 20h +
add esp 18h +
pop ebx  +
jmp sub_425E60  +
***
push ebp  +
xor ebp ebp +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov eax [esp+50h] +
mov [esp] eax +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_427904  +
jmp loc_42798F  +
mov edx [esp+2Ch] +
cmp edx 1Fh +
jbe loc_42791B  +
sub edx 7Fh +
cmp edx 20h +
jbe loc_42791B  +
cmp eax 1 +
cmovnz edi ebp +
add ebx eax +
cmp esi ebx +
jbe loc_427980  +
mov eax [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add eax ebx +
call sub_425730  +
test eax eax +
jnz loc_4278E7  +
lea eax ds:1[esi*4] +
mov [esp] eax +
call off_483608  +
mov ebx [esp+50h] +
add esi ebx +
mov edi eax +
mov ebp eax +
jmp loc_427944  +
add ebx 1 +
add ebp 1 +
mov [ebp-1] al +
cmp ebx esi +
jz loc_42796D  +
movzx eax byte ptr [ebx] +
lea edx [eax-20h] +
cmp dl 5Eh +
jbe loc_427937  +
mov [esp] ebp +
add ebx 1 +
add ebp 4 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a03o_0 +
call sub_47D150  +
cmp ebx esi +
jnz loc_427944  +
mov byte ptr [ebp+0] 0 +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
test al al +
jnz loc_42798F  +
cmp ds:byte_4D9284 0 +
jz loc_4279A0  +
mov eax [esp+50h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esi+esi*4] +
xor ebx ebx +
lea eax [eax+eax+1] +
mov [esp] eax +
call off_483608  +
mov [esp+1Ch] eax +
mov ebp eax +
jmp loc_4279CF  +
movzx eax byte ptr [edi] +
add ebx edx +
add ebp 1 +
mov [ebp-1] al +
cmp esi ebx +
jbe loc_427A14  +
mov edi [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add edi ebx +
mov eax edi +
call sub_425730  +
cmp eax 1 +
mov edx eax +
jz loc_4279C0  +
mov [esp+18h] eax +
mov eax [esp+2Ch] +
mov [esp] ebp +
add ebp 0Ah +
mov dword ptr [esp+4] offset aU08x +
mov [esp+8] eax +
call sub_47D150  +
mov edx [esp+18h] +
add ebx edx +
cmp esi ebx +
ja loc_4279CF  +
mov byte ptr [ebp+0] 0 +
mov eax [esp+1Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov ebx ecx +
push ebx  +
mov ebx ecx +
sub esp 14h +
lea ecx [ecx+20h] +
mov [esp+18h+var_18] 0FFFFFFFFh +
call sub_427D00  +
mov eax [ebx+4] +
sub esp 4 +
mov [esp+18h+var_18] eax +
call sub_425E10  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov eax [ebx] +
cmp eax esi +
jle loc_427E52  +
jmp loc_427E5F  +
mov eax [edi+4] +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] eax +
call sub_425E60  +
mov eax [ebx] +
add eax 1 +
mov [ebx] eax +
cmp esi eax +
jg loc_427E38  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
call sub_427DF0  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_427E52  +
***
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 0 +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
jz loc_429D28  +
mov edx off_483620 +
test edx edx +
jz loc_429D28  +
mov ebx offset off_483620 +
jmp loc_429D09  +
add ebx 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_429D30  +
movzx eax byte ptr [ebx+8] +
cmp eax edi +
jnz loc_429D00  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call memcmp  +
test eax eax +
jnz loc_429D00  +
mov eax [ebx+4] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax offset unk_4C7920 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp [esp+arg_0] 0 +
mov edx offset unk_4C7920 +
mov eax offset aMK +
cmovz eax edx +
retn   +
***
retn   +
***
mov eax [esp+4] +
sub eax [esp+8] +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_429DA4  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call sub_466620  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov eax [esp+14h+arg_0] +
lea esi [eax+eax+2] +
mov eax [ecx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_452A70  +
mov [ebx+0Ch] esi +
mov [ebx+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [esp+8] offset sub_429D80 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset strcmp +
mov byte ptr [ecx] 1 +
call sub_466530  +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
mov eax [esp+2Ch+arg_4] +
jnz loc_429E22  +
add esp 2Ch +
retn 8  +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_18] al +
lea eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_10] eax +
mov eax [ecx+4] +
mov [esp+2Ch+var_28] offset sub_47F840 +
mov [esp+2Ch+var_1C] edx +
lea edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] offset sub_47F7B0 +
call sub_4669C0  +
add esp 2Ch +
retn 8  +
***
sub esp 1Ch +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_429F35  +
mov [esp+28h+var_28] ebx +
mov esi ecx +
call sub_429E60  +
sub esp 4 +
test eax eax +
jz loc_429EE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 0Ch +
call loc_480BB0  +
mov [eax] ebx +
mov edi eax +
mov [esp+28h+var_20] offset sub_42A7A0 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] offset loc_429D70 +
call sub_466530  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov [edi+4] eax +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_466710  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_20] offset aGet_or_insert_ +
mov [esp+28h+var_24] 169h +
mov [esp+28h+var_28] offset a____GccGccEdit +
call sub_424080  +
nop   +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_3C] offset sub_42A7A0 +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_44] offset loc_429D70 +
mov [ecx] eax +
call sub_466530  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 9 +
mov ebx [ebp+arg_4] +
mov [esp+48h+var_44] offset aDiffHunk +
mov edi [ebp+arg_8] +
movzx eax byte ptr [eax+27h] +
sub edi ebx +
add edi 1 +
mov [esp+48h+var_48] eax +
call sub_429CD0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] offset a@@IIII@@ +
mov [esp+48h+var_48] eax +
call sub_427790  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429D40  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
cmp [ebp+arg_8] ebx +
jl loc_42A2A5  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466880  +
test eax eax +
jz loc_42A261  +
mov edx [eax+4] +
test edx edx +
jz loc_42A261  +
mov edi ebx +
jmp loc_42A0BE  +
mov eax [eax+4] +
test eax eax +
jz loc_42A0D1  +
add edi 1 +
mov eax [esi+4] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call sub_466880  +
test eax eax +
jnz loc_42A0B4  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffDelete +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429CD0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
cmp edi ebx +
jle loc_42A210  +
mov [ebp+arg_4] ebx +
lea esi [esi+0] +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
call sub_421AB0  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] 2Dh +
mov [esp+48h+var_3C] ecx +
mov ecx esi +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_429FA0  +
sub esp 10h +
cmp ebx edi +
jnz loc_42A110  +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429D40  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429CD0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov [ebp+var_2C] edi +
mov edi [ebp+arg_0] +
jmp loc_42A1DC  +
mov eax [eax+4] +
test eax eax +
jz loc_42A1EF  +
mov edx [eax+8] +
mov ecx esi +
add ebx 1 +
mov eax [eax+4] +
mov [esp+48h+var_44] 2Bh +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
call sub_429FA0  +
sub esp 10h +
cmp ebx [ebp+var_2C] +
jz loc_42A067  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466880  +
test eax eax +
jnz loc_42A1A6  +
mov [esp+48h+var_40] offset aPrint_diff_hun +
mov [esp+48h+var_44] 250h +
mov [esp+48h+var_48] offset a____GccGccEdit +
call sub_424080  +
nop   +
lea esi [esi+0] +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429D40  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429CD0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
jmp loc_42A067  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_48] eax +
call sub_421AB0  +
mov edx [ebp+var_1C] +
mov ecx esi +
mov [esp+48h+var_44] 20h +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_429FA0  +
sub esp 10h +
cmp [ebp+arg_8] ebx +
jge loc_42A08E  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
sub esp 1Ch +
mov eax [ecx+4] +
mov edx [esp+20h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_466880  +
test eax eax +
jz loc_42A2D3  +
mov eax [eax+4] +
add esp 1Ch +
retn 4  +
***
xor eax eax +
jmp loc_42A2CD  +
***
push ebx  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 3Ch +
mov esi [ebp+arg_0] +
lea eax [ebp+var_1E+1] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] ecx +
call sub_42A2E0  +
sub esp 4 +
test eax eax +
mov [ebp+var_2C] eax +
jg loc_42A3C3  +
jmp loc_42A422  +
mov eax [eax+4] +
test eax eax +
jz loc_42A3D9  +
mov eax [eax+4] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] eax +
call sub_4262D0  +
cmp [ebp+var_2C] ebx +
jle loc_42A3BB  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
call sub_425E60  +
add ebx 1 +
cmp [ebp+var_2C] ebx +
jl loc_42A422  +
mov eax [ebp+var_30] +
mov eax [eax+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466880  +
test eax eax +
jnz loc_42A390  +
mov eax [ebp+var_30] +
lea ecx [ebp+var_1E+2] +
mov eax [eax] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_421AB0  +
test eax eax +
jz loc_42A44D  +
mov edx [ebp+var_1E+2] +
xor edi edi +
test edx edx +
jle loc_42A3A6  +
mov [ebp+var_34] ebx +
mov ebx edi +
mov edi eax +
movsx edx byte ptr [edi+ebx] +
add ebx 1 +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edx +
call sub_425E60  +
cmp [ebp+var_1E+2] ebx +
jg loc_42A405  +
mov ebx [ebp+var_34] +
jmp loc_42A3A6  +
cmp byte ptr [ebp+var_1E+1] 0 +
mov eax 1 +
jnz loc_42A443  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
mov [ebp+var_2C] eax +
call sub_425E60  +
mov eax [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
cmp [ebp+arg_4] 0 +
jnz loc_42A53C  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_4668E0  +
test eax eax +
jz loc_42A5CD  +
mov esi [eax+4] +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_42A2E0  +
sub esp 4 +
test esi esi +
mov [ebp+var_30] eax +
jz loc_42A532  +
mov edx [esi] +
mov ecx 1 +
lea eax [edx-3] +
test eax eax +
cmovg ecx eax +
mov [ebp+var_2C] ecx +
jmp loc_42A4D7  +
mov eax [eax+4] +
test eax eax +
jz loc_42A4EA  +
mov edi [esi] +
mov edx [eax] +
lea ecx [edi+3] +
lea edi [edx-3] +
cmp ecx edi +
jl loc_42A4EF  +
mov esi eax +
mov eax [ebx+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_466960  +
test eax eax +
jnz loc_42A4C0  +
mov eax [esi] +
lea ecx [eax+3] +
mov eax [ebp+var_30] +
cmp ecx eax +
cmovg ecx eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] ecx +
mov ecx ebx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_42A000  +
mov edx [esi] +
mov eax [ebx+4] +
sub esp 0Ch +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_466960  +
test eax eax +
jz loc_42A532  +
mov esi [eax+4] +
test esi esi +
jnz loc_42A4A6  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Dh +
mov [esp+48h+var_44] offset aDiffFilename +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429CD0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_5 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_427790  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_6 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_427790  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_429D40  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4262D0  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_4668E0  +
test eax eax +
jnz loc_42A488  +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_42A2E0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebx  +
push ebx  +
sub esp 14h +
mov eax [ecx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+10h] +
test eax eax +
jz loc_42A6D4  +
mov edx [eax+4] +
test edx edx +
jz loc_42A6E0  +
xor edx edx +
xor ebx ebx +
jmp loc_42A6BB  +
cmp ebx [eax+4] +
jnb loc_42A6E0  +
mov ecx [eax+edx*4+8] +
test ecx ecx +
jz loc_42A6CB  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
add ebx 1 +
test eax eax +
mov edx ebx +
jnz loc_42A6B6  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_42A700  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+10h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [ecx+4] +
mov ebx [ebp+arg_0] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] ebx +
call sub_466880  +
test eax eax +
jz loc_42A742  +
mov eax [eax+4] +
test eax eax +
jz loc_42A742  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 14h +
call loc_480BB0  +
mov [esp+28h+var_24] ebx +
mov edi eax +
mov eax [esi] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_42A5F0  +
mov eax [edi+4] +
sub esp 8 +
test eax eax +
jz loc_42A781  +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_466710  +
mov eax edi +
jmp loc_42A738  +
mov ecx edi +
call sub_42A690  +
mov [esp+28h+var_28] edi +
call sub_480B00  +
xor eax eax +
jmp loc_42A738  +
***
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_42A7C0  +
mov ecx ebx +
call sub_42A690  +
mov [esp+8+arg_0] ebx +
add esp 8 +
pop ebx  +
jmp sub_480B00  +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov edx [ecx+10h] +
mov eax [ebp+arg_0] +
test edx edx +
jz loc_42A813  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_42A813  +
xor ecx ecx +
xor ebx ebx +
jmp loc_42A7F6  +
cmp ebx [edx+4] +
jnb loc_42A813  +
mov ecx [edx+ecx*4+8] +
add ebx 1 +
mov edx [ecx] +
mov edx [edx+8] +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [esi+10h] +
mov ecx ebx +
sub esp 4 +
test edx edx +
jnz loc_42A7F1  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_466880  +
test eax eax +
jz loc_42A855  +
mov ecx [eax+4] +
mov eax [ebp+arg_4] +
test ecx ecx +
jz locret_42A851  +
mov [esp+18h+var_18] eax +
call sub_42A7D0  +
sub esp 4 +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_429E60  +
mov ecx eax +
sub esp 4 +
mov eax [ebp+10h] +
test ecx ecx +
jz locret_42A88F  +
mov [esp+4] eax +
mov eax [ebp+0Ch] +
mov [esp] eax +
call sub_42A820  +
sub esp 8 +
leave   +
retn 0Ch  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_42A7D0  +
mov esi eax +
sub esp 4 +
sub esi 1 +
mov edi eax +
js loc_42AACC  +
mov eax [ebx+8] +
cmp esi eax +
jg loc_42AA11  +
mov edx [ebp+arg_8] +
add edx eax +
cmp edx [ebx+0Ch] +
mov [ebp+var_1C] edx +
jge loc_42AA20  +
mov edx [ebx+4] +
lea ecx [edx+esi] +
add eax edx +
cmp ecx eax +
ja loc_42AAE8  +
sub eax ecx +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_8] +
mov [esp+38h+var_34] ecx +
add eax esi +
add eax edx +
mov [esp+38h+var_38] eax +
call memmove  +
mov eax [ebp+arg_8] +
add esi [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_4] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebp+var_1C] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_42AB04  +
mov eax [ebx+4] +
mov ecx [ebp+var_1C] +
mov byte ptr [eax+ecx] 0 +
mov [esp+38h+var_38] 0Ch +
call loc_480BB0  +
mov [eax+4] edi +
mov edi [ebx+10h] +
mov esi eax +
mov dword ptr [eax] offset off_4D5808 +
mov eax [ebp+arg_8] +
test edi edi +
mov [esi+8] eax +
jz loc_42A97C  +
mov edx [edi] +
and edx 7FFFFFFFh +
cmp edx [edi+4] +
jnz loc_42A9F5  +
cmp byte ptr [edi+3] 0 +
js loc_42AA35  +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AB12  +
mov edi [eax+4] +
lea edx [edi+1] +
mov [esp+38h+var_34] edx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41EFE0  +
mov ecx eax +
lea edi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AB1F  +
mov edx [eax+4] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_452A70  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov edi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] edx +
and ecx 80000000h +
or ecx eax +
mov [edi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [edi+3] cl +
jmp loc_42A9F8  +
mov edx [edi+4] +
lea eax [edx+1] +
mov [edi+4] eax +
mov eax 1 +
mov [edi+edx*4+8] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+38h+var_38] edx +
mov ecx ebx +
call sub_429DB0  +
mov eax [ebx+8] +
sub esp 4 +
jmp loc_42A8E2  +
mov dword ptr [ebx+10h] 0 +
lea eax [edx+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_452A70  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_42AB09  +
lea ecx ds:0[edx*4] +
add eax 8 +
add edi 8 +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov edi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [edi+4] edx +
jmp loc_42A9F8  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2E6h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2EFh +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
call sub_482200  +
mov edi eax +
xor edx edx +
jmp loc_42A9F8  +
mov byte ptr [ebp+var_1C] 0 +
xor edx edx +
mov al 1 +
jmp loc_42AA43  +
xor edx edx +
jmp loc_42A9B7  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_42A710  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_42AB68  +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42A8A0  +
sub esp 0Ch +
leave   +
retn 10h  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_2C] +
mov edx [ebx+4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_421CB0  +
mov esi [ebp+var_24] +
test esi esi +
jnz loc_42ABA3  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov eax [ebp+var_2C] +
mov ecx edi +
mov [esp+48h+var_48] eax +
call sub_429EB0  +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_42AB97  +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_40] edx +
mov edx [ebp+var_28] +
mov [esp+48h+var_3C] ecx +
mov ecx eax +
mov [esp+48h+var_48] edx +
call sub_42AB30  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_42A7D0  +
mov ecx ebx +
mov esi eax +
mov eax [ebp+arg_4] +
sub esp 4 +
mov [esp+38h+var_38] eax +
call sub_42A7D0  +
mov edx esi +
sub esp 4 +
sub edx 1 +
mov edi eax +
mov [ebp+var_1C] edx +
lea eax [eax-1] +
js loc_42AE7B  +
test eax eax +
js loc_42AE97  +
cmp esi edi +
jg loc_42ADB6  +
mov edx [ebx+8] +
cmp [ebp+var_1C] edx +
jge loc_42ADB6  +
cmp eax edx +
jge loc_42ADB6  +
mov ecx [ebp+arg_C] +
add ecx edx +
mov [ebp+var_20] ecx +
mov ecx eax +
sub ecx [ebp+var_1C] +
add ecx 1 +
sub [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
cmp ecx [ebx+0Ch] +
jge loc_42ADC2  +
mov ecx [ebx+4] +
lea eax [ecx+eax+1] +
add edx ecx +
cmp eax edx +
ja loc_42AEB8  +
sub edx eax +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_1C] +
add eax [ebp+arg_C] +
mov [esp+38h+var_30] edx +
add ecx eax +
mov [esp+38h+var_38] ecx +
call memmove  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_1C] +
add eax [ebx+4] +
mov [esp+38h+var_30] edx +
mov edx [ebp+arg_8] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call memcpy  +
mov eax [ebp+var_20] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_42AEB3  +
mov edx [ebp+var_20] +
mov eax [ebx+4] +
mov byte ptr [eax+edx] 0 +
mov [esp+38h+var_38] 10h +
call loc_480BB0  +
mov [eax+8] edi +
not edi  +
mov edx eax +
mov [eax+4] esi +
add esi edi +
add esi [ebp+arg_C] +
mov dword ptr [eax] offset off_4D5868 +
mov [eax+0Ch] esi +
mov esi [ebx+10h] +
test esi esi +
jz loc_42ADE0  +
mov edi [esi] +
and edi 7FFFFFFFh +
cmp edi [esi+4] +
jnz loc_42AE76  +
cmp byte ptr [esi+3] 0 +
jns loc_42ADE0  +
mov dword ptr [ebx+10h] 0 +
lea eax [edi+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_452A70  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_42AED4  +
add eax 8 +
add esi 8 +
lea ecx ds:0[edi*4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov esi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [esi+4] edi +
jmp loc_42AE5D  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+38h+var_38] ecx +
mov ecx ebx +
mov [ebp+var_24] eax +
call sub_429DB0  +
mov edx [ebx+8] +
mov eax [ebp+var_24] +
sub esp 4 +
jmp loc_42AC71  +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AEE1  +
mov edi [eax+4] +
mov [ebp+var_1C] edx +
lea ecx [edi+1] +
mov [esp+38h+var_34] ecx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41EFE0  +
mov edx [ebp+var_1C] +
mov ecx eax +
lea esi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AEDA  +
mov edi [eax+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_452A70  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov esi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] edi +
and ecx 80000000h +
or ecx eax +
mov [esi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [esi+3] cl +
lea eax [edi+1] +
mov [esi+4] eax +
mov eax 1 +
mov [esi+edi*4+8] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov edi [esi+4] +
jmp loc_42AE5D  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 318h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 319h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
call sub_482200  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 329h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
mov esi eax +
xor edi edi +
jmp loc_42AE5D  +
xor edi edi +
jmp loc_42AE21  +
mov byte ptr [ebp+var_1C] 0 +
xor edi edi +
mov al 1 +
jmp loc_42AD29  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_42A710  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_42AF2F  +
mov eax [ebp+arg_10] +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42ABF0  +
sub esp 10h +
leave   +
retn 14h  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [ebp+arg_0] +
mov [ebp+var_54] ecx +
lea eax [ebp+var_40] +
mov ecx [ebx+4] +
mov edi [ebx+8] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ecx +
call sub_421CB0  +
mov eax [ebp+var_3C] +
mov [esp+68h+var_64] edi +
mov esi [ebp+var_40] +
mov [ebp+var_4C] eax +
mov eax [ebp+var_38] +
mov [ebp+var_50] eax +
lea eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call sub_421CB0  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_24] +
cmp eax esi +
jz loc_42AF98  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov esi [ebp+var_28] +
cmp esi [ebp+var_4C] +
jnz loc_42AF8C  +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_42AF8C  +
test edx edx +
jz loc_42AF8C  +
mov edi [ebp+var_54] +
mov [esp+68h+var_68] eax +
mov [ebp+var_4C] edx +
mov ecx edi +
call sub_429EB0  +
mov edx [ebp+var_4C] +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_42AF8C  +
mov ecx [ebx+0Ch] +
mov ebx [ebx+10h] +
mov [esp+68h+var_60] edx +
mov edx [ebp+var_50] +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] ecx +
mov ecx eax +
mov [esp+68h+var_58] ebx +
mov [esp+68h+var_64] edx +
call sub_42AEF0  +
sub esp 14h +
jmp loc_42AF8E  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
jz loc_42B066  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+58h] 0 +
jnz loc_42B085  +
add eax 44h +
xor ebx ebx +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov edi 0FFFFFFF8h +
mov eax [eax+44h] +
test eax eax +
jz loc_42B066  +
mov [ebp+var_1C] ecx +
cmp ebx 1 +
jle loc_42B0B0  +
mov edx [ebp+arg_0] +
mov eax [edx+54h] +
add eax edi +
mov esi [eax] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_42B070  +
cmp eax 1 +
jnz loc_42B092  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_42AF40  +
sub esp 4 +
test al al +
jz loc_42B082  +
mov eax [ebp+arg_0] +
add ebx 1 +
add edi 4 +
cmp ebx [eax+44h] +
jb loc_42B023  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_42AB70  +
sub esp 4 +
test al al +
jnz loc_42B058  +
mov esi [ebp+var_1C] +
mov byte ptr [esi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+38h+var_30] offset aAdd_fixits +
mov [esp+38h+var_34] 0F3h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424080  +
nop   +
mov eax [ebp+var_20] +
lea eax [eax+ebx*4+4] +
jmp loc_42B034  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp [ecx+0Ch] eax +
jle locret_42B0D0  +
leave   +
retn 4  +
***
leave   +
jmp sub_429DB0  +
***
mov edx [ecx+4] +
mov byte ptr [edx+eax] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 40h +
lea ebx [ebp+var_30] +
mov ecx ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 0 +
call sub_425D00  +
mov ecx esi +
xor esi esi +
sub esp 8 +
mov [esp+48h+var_48] ebx +
call sub_42A360  +
sub esp 4 +
test al al +
jz loc_42B1BB  +
mov [esp+48h+var_48] ebx +
call sub_425D90  +
mov [esp+48h+var_48] eax +
call sub_452AC0  +
mov esi eax +
mov ecx ebx +
call sub_4259F0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp byte ptr [ecx] 0 +
jz locret_42B1F3  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_429EB0  +
sub esp 4 +
mov ecx eax +
call sub_42B170  +
leave   +
retn 4  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_8] 1 +
cmovz eax [esp+arg_0] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h] +
mov [esp] eax +
call strlen  +
mov esi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_4529F0  +
mov [esp+8] esi +
mov dword ptr [esp+4] 20h +
mov ebx eax +
mov [esp] eax +
call memset  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_42B273  +
pop ebx  +
retn   +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jnz loc_42B271  +
mov ebx [edx+8] +
cmp [ecx+8] ebx +
jnz loc_42B271  +
mov eax [edx+0Ch] +
cmp [ecx+0Ch] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
jmp loc_42B2A0  +
mov edx [esp+8] +
mov eax [esp+4] +
mov edx [edx] +
add [eax] edx +
mov eax 1 +
retn   +
***
retn 10h  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
cmp edx 4 +
setz dl  +
jnz loc_42B2F8  +
mov eax [eax+18h] +
cmp [ebx+14h] eax +
jz loc_42B320  +
mov edx [ebx+10h] +
lea ecx [eax+eax*2] +
lea esi [edx+ecx*8] +
add ebx 18h +
jmp loc_42B308  +
mov eax [eax+8] +
cmp [ebx+4] eax +
jz loc_42B320  +
imul esi eax +
add esi [ebx] +
add ebx 8 +
add eax 1 +
mov [ebx] eax +
mov eax edi +
mov [esi+4] al +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi [ebx+34h] +
mov eax offset sub_452A70 +
test esi esi +
cmovz esi eax +
test dl dl +
mov eax [ebx+38h] +
jz loc_42B398  +
mov edx [ebx+14h] +
lea edx [edx+edx*2+180h] +
shl edx 4 +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [ebx+10h] +
shr edx 4 +
mov [ebx+14h] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call esi  +
mov edx [ebx+18h] +
lea ecx [edx+edx*2] +
mov [ebx+10h] eax +
lea esi [eax+ecx*8] +
mov eax [ebx+14h] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+18h] +
jmp loc_42B2F3  +
mov ecx [ebx+4] +
lea edx [ecx+80h] +
imul edx edx +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 24924925h +
mov ecx [ebx] +
shr eax 2 +
mul  edx +
mov [ebx+4] edx +
imul edx edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] edx +
call esi  +
mov edx [ebx+8] +
imul esi edx +
mov [ebx] eax +
add esi eax +
mov eax [ebx+4] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
imul eax eax +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+8] +
jmp loc_42B305  +
***
sub esp 3Ch +
mov edx [ecx+4] +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_421CF0  +
mov edx [esp+3Ch+arg_0] +
xor eax eax +
cmp [esp+3Ch+var_20] edx +
jz loc_42B428  +
add esp 3Ch +
retn 8  +
mov eax [esp+3Ch+arg_4] +
cmp [esp+3Ch+var_1C] eax +
setz al  +
add esp 3Ch +
retn 8  +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_4D57C8 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_4D5768 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_4D57C8 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_4D5768 +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_4D5828 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_4D5768 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_4D5828 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_4D5768 +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx+3Ch] +
mov [esp] eax +
call sub_45C870  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 14h +
mov esi [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_42B260 +
mov dword ptr [esp+4] offset loc_42B250 +
mov dword ptr [esp] 64h +
call sub_45C7D0  +
mov edx [esi+40h] +
test edx edx +
mov [esi+3Ch] eax +
jnz loc_42B563  +
jmp loc_42B587  +
mov eax [esi+3Ch] +
mov edx ebx +
add ebx 1 +
mov dword ptr [esp+8] 1 +
shl edx 4 +
add edx [esi+48h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_45CD20  +
cmp [esi+40h] ebx +
ja loc_42B560  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax] +
retn   +
***
jmp loc_42B5D0  +
push edi  +
mov edx 60h +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test bl 1 +
mov edi ebx +
jnz loc_42B650  +
test edi 2 +
jnz loc_42B660  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_42B604  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_42B60C  +
mov byte ptr [edi] 0 +
mov dword ptr [ebx+28h] 1 +
mov dword ptr [ebx+2Ch] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_42B260 +
mov dword ptr [esp+4] offset loc_42B250 +
mov dword ptr [esp] 64h +
call sub_45C7D0  +
mov [ebx+3Ch] eax +
mov eax [esp+24h] +
mov [ebx+4Ch] eax +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
***
lea edi [ebx+1] +
mov dl 5Fh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_42B5ED  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_42B5ED  +
***
jmp loc_42B680  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+8] +
lea ebx [eax-1] +
imul ebx ebx +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
js loc_42B6D0  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aLineMap_cFileS +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [ebx+10h] +
xor ebx ebx +
cmp eax 0FFFFFFFFh +
jz loc_42B694  +
imul ebx eax +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
jns loc_42B69B  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+28h] +
cmp eax 5FFFFFFFh +
lea edi [eax+1] +
ja loc_42B711  +
mov ecx [ebx+54h] +
mov edx 1 +
shl edx cl +
test ecx ecx +
lea edi [edx+eax] +
jnz loc_42B820  +
cmp esi 1 +
jz loc_42B82D  +
mov edx esi +
mov eax ebx +
call sub_42B2D0  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_42B736  +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
jz loc_42B7B5  +
cmp esi 3 +
jz loc_42B890  +
cmp esi 1 +
jz loc_42B7CF  +
movzx eax byte ptr [esp+1Ch+arg_8] +
mov [ebp+0] edi +
mov [ebp+14h] al +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_10] +
mov [ebp+0Ch] eax +
mov eax [ebx+8] +
sub eax 1 +
test esi esi +
mov [ebx+0Ch] eax +
mov byte ptr [ebp+18h] 0 +
mov byte ptr [ebp+19h] 0 +
mov [ebx+28h] edi +
mov [ebx+2Ch] edi +
mov dword ptr [ebx+30h] 0 +
jnz loc_42B877  +
mov esi [ebx+20h] +
test esi esi +
jz loc_42B916  +
mov eax [ebx+8] +
sub eax 2 +
cmp byte ptr [ebx+24h] 0 +
mov [ebp+10h] eax +
lea eax [esi+1] +
mov [ebx+20h] eax +
jnz loc_42B8A0  +
mov eax ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 3 +
jz loc_42B890  +
cmp esi 1 +
mov [esp+1Ch+arg_C] offset aStdin +
jnz loc_42B748  +
mov ecx [ebp-0Ch] +
xor eax eax +
cmp ecx 0FFFFFFFFh +
jz loc_42B7DE  +
imul eax ecx +
add eax [ebx] +
mov edx [esp+1Ch+arg_C] +
test edx edx +
jnz loc_42B748  +
mov ecx [eax+8] +
mov [esp+1Ch+arg_C] ecx +
mov ecx [eax+1Ch] +
mov [esp+1Ch+arg_10] ecx +
mov ecx [eax] +
sub [esp+1Ch+arg_10] ecx +
movzx ecx byte ptr [eax+18h] +
shr [esp+1Ch+arg_10] cl +
mov ecx [eax+0Ch] +
movzx eax byte ptr [eax+14h] +
add [esp+1Ch+arg_10] ecx +
mov [esp+1Ch+arg_8] eax +
jmp loc_42B748  +
neg edx  +
and edi edx +
cmp esi 1 +
jnz loc_42B71A  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov ebp [eax+10h] +
test ebp ebp +
jns loc_42B71A  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jz loc_42B931  +
mov edx 1 +
mov eax ebx +
call sub_42B2D0  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
mov eax offset aStdin +
cmovnz eax [esp+1Ch+arg_C] +
mov [esp+1Ch+arg_C] eax +
jmp loc_42B7CF  +
cmp esi 2 +
jz loc_42B8E6  +
cmp esi 1 +
mov eax ebp +
jz loc_42B8F6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 2 +
jmp loc_42B748  +
mov eax ds:_iob +
mov [esp+1Ch+var_1C] 2Eh +
add eax 40h +
mov [esp+1Ch+var_18] eax +
call putc  +
sub esi 1 +
jnz loc_42B8A0  +
mov eax [ebp+8] +
mov [esp+1Ch+var_18] offset aS_7 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_47D120  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-0Ch] +
mov [ebp+10h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
mov ecx [ebp-0Ch] +
cmp ecx 0FFFFFFFFh +
jz loc_42B909  +
imul eax ecx +
add eax [ebx] +
mov eax [eax+10h] +
mov [ebp+10h] eax +
mov eax ebp +
jmp loc_42B883  +
cmp byte ptr [ebx+24h] 0 +
mov dword ptr [ebp+10h] 0FFFFFFFFh +
mov dword ptr [ebx+20h] 1 +
jnz loc_42B8BD  +
mov eax ebp +
jmp loc_42B7AD  +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
jmp loc_42B883  +
***
mov eax [esp+4] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [ebx+34h] +
test esi esi +
cmovz esi eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_42B9F4  +
mov ebp 7FFFFFFFh +
xor eax eax +
sub ebp [esp+1Ch+arg_C] +
mov edx 7FFFFFFFh +
cmp ebp [ebx+2Ch] +
jbe loc_42B9EC  +
xor eax eax +
cmp edx ebp +
jb loc_42B9EC  +
mov edx 4 +
mov eax ebx +
call sub_42B2D0  +
mov [eax] ebp +
mov edi eax +
mov eax [esp+1Ch+arg_4] +
mov [edi+8] eax +
mov eax [esp+1Ch+arg_C] +
mov [edi+0Ch] eax +
lea ebp ds:0[eax*4] +
shl eax 3 +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call esi  +
mov ecx [esp+1Ch+arg_8] +
mov [edi+14h] ecx +
mov [edi+10h] eax +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [ebx+18h] +
sub eax 1 +
mov [ebx+1Ch] eax +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10h] +
lea eax [eax+eax*2-3] +
lea eax [edx+eax*8] +
mov edx [eax] +
xor eax eax +
mov ebp edx +
sub ebp [esp+1Ch+arg_C] +
cmp [ebx+2Ch] ebp +
jb loc_42B988  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ebx [esp+arg_8] +
mov ecx [edx+10h] +
mov [ecx+eax*8] ebx +
mov ebx [esp+arg_C] +
mov ecx [edx+10h] +
mov [ecx+eax*8+4] ebx +
add eax [edx] +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_0] +
mov edx [esp+4Ch+arg_8] +
mov eax [ebx+8] +
mov edi [ebx+28h] +
mov ebp [ebx+2Ch] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov [esp+4Ch+var_28] edi +
mov edi [eax] +
mov esi [eax+0Ch] +
mov ecx edi +
mov [esp+4Ch+var_18] edi +
movzx edi byte ptr [eax+18h] +
mov [esp+4Ch+var_2C] esi +
mov esi ebp +
sub esi ecx +
mov ecx edi +
shr esi cl +
movzx ecx byte ptr [eax+19h] +
add esi [esp+4Ch+var_2C] +
mov [esp+4Ch+var_13] cl +
mov [esp+4Ch+var_20] ecx +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_1C] esi +
sub ecx esi +
mov [esp+4Ch+var_24] ecx +
js loc_42BAC7  +
cmp ecx 0Ah +
jle loc_42BB91  +
imul ecx edi +
cmp ecx 3E8h +
jle loc_42BB91  +
cmp edx 1000h +
ja loc_42BADD  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42BBE0  +
cmp [esp+4Ch+var_28] 70000000h +
ja loc_42BBD1  +
mov [esp+4Ch+var_12] 0 +
xor ebp ebp +
xor esi esi +
mov [esp+4Ch+var_11] 0 +
mov [esp+4Ch+var_10] 0 +
mov edx [esp+4Ch+var_24] +
test edx edx +
js loc_42BB17  +
mov edx [esp+4Ch+var_1C] +
cmp [esp+4Ch+var_2C] edx +
jz loc_42BC40  +
mov edx [eax+8] +
mov edi [esp+4Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_3C] edi +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] ebx +
call sub_42B6E0  +
mov edi [eax] +
mov ecx [eax+0Ch] +
movzx edx [esp+4Ch+var_11] +
mov [eax+18h] dl +
movzx edx [esp+4Ch+var_12] +
mov [eax+19h] dl +
mov eax [esp+4Ch+arg_4] +
sub eax ecx +
mov ecx ebp +
shl eax cl +
add eax edi +
mov edx [ebx+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42BB77  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_42BBD1  +
cmp eax [ebx+28h] +
mov [ebx+2Ch] eax +
jbe loc_42BB86  +
mov [ebx+28h] eax +
mov [ebx+30h] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edi +
mov esi 1 +
sub ecx [esp+4Ch+var_20] +
shl esi cl +
cmp esi edx +
jbe loc_42BAC7  +
cmp ecx 9 +
jle loc_42BBB4  +
cmp edx 50h +
jbe loc_42BAC7  +
cmp [esp+4Ch+var_28] 50000000h +
ja loc_42BC88  +
mov esi [ebx+30h] +
mov eax [esp+4Ch+var_24] +
mov ecx edi +
shl eax cl +
add eax ebp +
jmp loc_42BB5F  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+4Ch+var_28] 50000000h +
jbe loc_42BC30  +
mov [esp+4Ch+var_12] 0 +
mov [esp+4Ch+var_10] 0 +
cmp edx 7Fh +
jbe loc_42BCE0  +
mov ecx 7 +
mov ebp 1 +
lea esi [esi+0] +
add ecx 1 +
mov esi ebp +
shl esi cl +
cmp edx esi +
jnb loc_42BC10  +
mov edx [esp+4Ch+var_10] +
lea ebp [ecx+edx] +
mov edx ebp +
mov [esp+4Ch+var_11] dl +
jmp loc_42BB01  +
mov esi [ebx+54h] +
mov ecx esi +
mov [esp+4Ch+var_10] esi +
mov [esp+4Ch+var_12] cl +
jmp loc_42BBF7  +
mov ecx edi +
mov edx 1 +
shl edx cl +
mov ecx [esp+4Ch+var_28] +
sub ecx [esp+4Ch+var_18] +
sub edx 1 +
and edx ecx +
movzx ecx [esp+4Ch+var_13] +
shr edx cl +
mov ecx ebp +
sub ecx [esp+4Ch+var_10] +
shr edx cl +
test edx edx +
jnz loc_42BB17  +
mov edi [esp+4Ch+var_20] +
cmp [esp+4Ch+var_10] edi +
jl loc_42BB17  +
mov ecx [esp+4Ch+var_2C] +
mov edi [esp+4Ch+var_18] +
jmp loc_42BB43  +
cmp [esp+4Ch+var_13] 0 +
jnz loc_42BCBD  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42BBC2  +
mov ecx [ebx+30h] +
test ecx ecx +
jnz loc_42BADD  +
cmp [esp+4Ch+var_28] 6FFFFFFFh +
ja loc_42BADD  +
xor esi esi +
jmp loc_42BBC5  +
cmp edx 1000h +
ja loc_42BADD  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42BBEA  +
jmp loc_42BADD  +
mov esi 80h +
mov ecx 7 +
jmp loc_42BC1B  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
cmp [ebx+30h] esi +
mov edx [ebx+2Ch] +
jbe loc_42BD27  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+19h] +
shl esi cl +
lea eax [edx+esi] +
cmp eax [ebx+28h] +
jb loc_42BD21  +
mov [ebx+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 1000h +
jbe loc_42BD37  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp edx 60000000h +
ja loc_42BD2F  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+18h] +
sub edx [eax] +
shr edx cl +
add edx [eax+0Ch] +
lea eax [esi+32h] +
mov [esp+14h+var_C] eax +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ebx +
call sub_42BA50  +
mov edx eax +
mov eax [ebx+8] +
lea ecx [eax-1] +
mov eax edx +
imul ecx ecx +
add ecx [ebx] +
cmp byte ptr [ecx+18h] 0 +
jz loc_42BD21  +
mov eax ecx +
jmp loc_42BD10  +
***
jmp sub_42BD90  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
mov ebx [esp+arg_0] +
movzx ecx byte ptr [edx+18h] +
sub eax [edx+0Ch] +
shl eax cl +
add eax [edx] +
cmp eax 60000000h +
ja loc_42BDC6  +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi [esp+arg_C] +
shl esi cl +
add eax esi +
mov ecx [ebx+18h] +
mov edx 7FFFFFFFh +
test ecx ecx +
jz loc_42BDDE  +
lea edx [ecx+ecx*2-3] +
mov ecx [ebx+10h] +
lea edx [ecx+edx*8] +
mov edx [edx] +
cmp eax edx +
lea ecx [edx-1] +
cmovnb eax ecx +
cmp eax [ebx+28h] +
jbe loc_42BDEE  +
mov [ebx+28h] eax +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_42BE00  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42BE80  +
mov ecx [esi+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42BE80  +
shl eax 4 +
mov edx [ecx+eax] +
cmp edx [esi+28h] +
ja loc_42BE90  +
cmp edx 1 +
jbe loc_42BF31  +
test esi esi +
jz loc_42BF31  +
mov ecx [esi+0Ch] +
mov ebx [esi] +
mov ebp [esi+8] +
imul edi ecx +
add edi ebx +
cmp edx [edi] +
jb loc_42BEF5  +
lea eax [ecx+1] +
mov [esp+4+var_4] eax +
mov eax edi +
cmp ebp [esp+4+var_4] +
jz loc_42BEB0  +
cmp edx [edi+1Ch] +
jb loc_42BEB0  +
mov eax ecx +
mov ecx ebp +
jmp loc_42BF11  +
xor eax eax +
test esi esi +
jz loc_42BEB0  +
cmp [esi+28h] edx +
jnb loc_42BE39  +
nop   +
lea esi [esi+0] +
mov ecx [esi+1Ch] +
mov edi [esi+10h] +
mov ebx [esi+18h] +
lea eax [ecx+ecx*2] +
lea ebp [edi+eax*8] +
cmp [ebp+0] edx +
ja loc_42BECD  +
test ecx ecx +
mov eax ebp +
jz loc_42BEB0  +
cmp [ebp-18h] edx +
jbe loc_42BF2A  +
nop   +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx eax +
mov ebx eax +
jnb loc_42BEE4  +
add eax ecx +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp [edi+ebp*8] edx +
jbe loc_42BEB8  +
lea ecx [eax+1] +
cmp ebx ecx +
jbe loc_42BEE4  +
lea eax [ecx+ebx] +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp edx [edi+ebp*8] +
jb loc_42BECA  +
cmp ecx eax +
mov ebx eax +
jb loc_42BEBE  +
mov [esi+1Ch] ebx +
lea eax [ebx+ebx*2] +
add esp 4 +
pop ebx  +
lea eax [edi+eax*8] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_42BF11  +
lea edi [ecx+eax] +
shr edi 1 +
imul ebp edi +
cmp edx [ebx+ebp] +
cmovb ecx edi +
cmovnb eax edi +
mov edi ecx +
sub edi eax +
cmp edi 1 +
ja loc_42BF00  +
mov [esi+0Ch] eax +
imul eax eax +
add esp 4 +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx-1] +
xor ecx ecx +
jmp loc_42BECD  +
xor eax eax +
jmp loc_42BEB0  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_8] +
mov ebp [esp+3Ch+arg_C] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42BF6A  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov eax [esp+3Ch+arg_10] +
test eax eax +
setz dl  +
test ebx ebx +
jz loc_42BFE1  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_42BFEF  +
cmp ebx edi +
jz loc_42C054  +
test dl dl +
jnz loc_42C0C6  +
mov eax [esp+3Ch+arg_10] +
lea edx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_18] edi +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
mov eax [esi+3Ch] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_45CD20  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_42C070  +
mov ecx [esi+48h] +
mov eax edx +
sub eax ecx +
sar eax 4 +
or eax 80000000h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test dl dl +
jnz loc_42BFD9  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_42BF7F  +
cmp ebx edi +
jnz loc_42BF87  +
cmp ebx ebp +
ja loc_42C054  +
cmp ebx 1 +
jbe loc_42C054  +
cmp ebx 4FFFFFFFh +
ja loc_42C054  +
mov eax [esi+18h] +
test eax eax +
jz loc_42C141  +
mov ecx [esi+10h] +
lea eax [eax+eax*2-3] +
lea eax [ecx+eax*8] +
mov eax [eax] +
cmp ebx eax +
jnb loc_42C054  +
cmp ebp eax +
jnb loc_42C054  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] edx +
call sub_42BE00  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebp +
sub eax ebx +
shl edx cl +
shr eax cl +
cmp eax edx +
mov edx [esp+3Ch+var_30] +
jnb loc_42C054  +
add dword ptr [esi+58h] 1 +
or eax ebx +
jmp loc_42BFD9  +
cmp ebx ebp +
jnz loc_42BF87  +
test dl dl +
jz loc_42BF8F  +
mov eax ebx +
jmp loc_42BFD9  +
mov edi [esi+40h] +
mov eax [esi+44h] +
cmp edi eax +
jb loc_42C0D0  +
mov edx [esi+34h] +
mov ecx offset sub_452A70 +
mov edi [esi+48h] +
test edx edx +
cmovz edx ecx +
test eax eax +
jnz loc_42C110  +
mov dword ptr [esi+44h] 80h +
mov ax 800h +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call edx  +
mov edx eax +
sub edx edi +
mov [esp+3Ch+var_24] edx +
sar edx 1Fh +
cmp dword ptr [esi+44h] 80h +
mov [esi+48h] eax +
mov [esp+3Ch+var_20] edx +
ja loc_42C11E  +
mov edi [esi+40h] +
jmp loc_42C0D3  +
add dword ptr [esi+5Ch] 1 +
jmp loc_42BF8F  +
mov eax [esi+48h] +
mov edx edi +
add edi 1 +
shl edx 4 +
add eax edx +
mov [ebx] eax +
mov eax [esp+3Ch+var_1C] +
mov ecx [esi+48h] +
mov [esi+40h] edi +
mov [ecx+edx] eax +
mov eax [esp+3Ch+var_18] +
mov [ecx+edx+4] eax +
mov eax [esp+3Ch+var_14] +
mov [ecx+edx+8] eax +
mov eax [esp+3Ch+var_10] +
mov [ecx+edx+0Ch] eax +
mov edx [ebx] +
jmp loc_42BFCD  +
lea ecx [eax+eax] +
mov [esi+44h] ecx +
shl eax 5 +
jmp loc_42C09D  +
mov eax [esi+3Ch] +
lea edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset loc_42B2A0 +
mov [esp+3Ch+var_3C] eax +
call sub_45CE80  +
mov eax [esi+48h] +
jmp loc_42C0C1  +
cmp ebx 7FFFFFFEh +
ja loc_42C054  +
mov eax 7FFFFFFFh +
jmp loc_42C01F  +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C190  +
shl edx 4 +
add edx [eax+48h] +
mov eax [edx+4] +
mov edx [edx+8] +
add esp 8 +
pop ebx  +
retn   +
cmp ebx 1 +
jbe loc_42C1E0  +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42C1AD  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_42C1E0  +
cmp ebx 50000000h +
ja loc_42C1E0  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42BE00  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebx +
shl edx cl +
sub edx 1 +
and edx ebx +
sub eax edx +
shl edx cl +
add edx eax +
jmp loc_42C184  +
add esp 8 +
mov eax ebx +
mov edx ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C210  +
add esp 8 +
pop ebx  +
retn   +
mov eax [esp+8+arg_0] +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42BE00  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test eax ebx +
setz al  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C260  +
shl edx 4 +
add edx [eax+48h] +
mov ebx [edx] +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42C278  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_42C29A  +
cmp ebx 1 +
jbe loc_42C29A  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42BE00  +
movzx ecx byte ptr [eax+19h] +
mov eax 0FFFFFFFFh +
shl eax cl +
and ebx eax +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
jmp sub_42C2B0  +
***
push esi  +
mov esi eax +
mov eax edx +
push ebx  +
and eax 7FFFFFFFh +
sub esp 8 +
cmp edx eax +
mov ebx edx +
jz loc_42C2DA  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_42C2DA  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C2EA  +
mov ebx [eax+14h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42BE00  +
test eax eax +
jnz loc_42C2D1  +
test edi edi +
jz loc_42C2F0  +
mov [edi] eax +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov ebp [ebx+8] +
mov eax [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edx ebp +
and edx 7FFFFFFFh +
mov edi eax +
cmp ebp edx +
mov [esp+2Ch+var_14] ecx +
jz loc_42C332  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42C348  +
mov eax edx +
shl eax 4 +
add eax [esi+48h] +
mov edi [eax] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_42BE00  +
test eax eax +
mov edx eax +
jz loc_42C370  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C370  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_42BE00  +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_42C38E  +
cmp byte ptr [eax+4] 4 +
jz loc_42C360  +
cmp edx eax +
jnz loc_42C360  +
mov eax [edx] +
movzx ecx byte ptr [edx+18h] +
sub edi eax +
sub ebp eax +
mov eax ebp +
mov esi edi +
shr eax cl +
shr esi cl +
add eax [edx+0Ch] +
add esi [edx+0Ch] +
cmp eax esi +
jnz loc_42C360  +
mov eax 1 +
shl eax cl +
movzx ecx byte ptr [edx+19h] +
sub eax 1 +
and edi eax +
and eax ebp +
shr eax cl +
shr edi cl +
add eax 1 +
cmp edi eax +
jnz loc_42C360  +
mov eax [esp+2Ch+var_14] +
mov [ebx+8] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edx [ebx+10h] +
mov esi eax +
mov eax [ebx+0Ch] +
lea edx [esi+edx+1] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_452A70  +
mov edi [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [ebx+0Ch] eax +
add eax [ebx+10h] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add esi [ebx+10h] +
mov [ebx+10h] esi +
mov byte ptr [eax+esi] 0 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_42C440  +
cmp byte ptr [eax+4] 4 +
setz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov ecx eax +
and ecx 7FFFFFFFh +
cmp eax ecx +
jz loc_42C472  +
mov eax ecx +
mov ecx [esp+arg_0] +
shl eax 4 +
add eax [ecx+48h] +
mov eax [eax] +
sub eax [edx] +
mov edx [edx+10h] +
mov eax [edx+eax*8] +
retn   +
***
mov edx [esp+10h+arg_4] +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] 0 +
mov ecx edx +
and ecx 7FFFFFFFh +
cmp edx ecx +
jz loc_42C4F9  +
mov edx [eax+48h] +
shl ecx 4 +
add edx ecx +
mov edx [edx] +
cmp edx 1 +
jbe loc_42C512  +
lea ecx [esp+10h+var_4] +
call sub_42C2B0  +
mov eax [esp+10h+var_4] +
mov eax [eax+8] +
add esp 10h +
retn   +
xor eax eax +
jmp loc_42C50E  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov eax [eax] +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov esi [esp+8+arg_0] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42C550  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
cmp ebx 1 +
jbe loc_42C5A0  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] esi +
call sub_42BE00  +
test eax eax +
jz loc_42C5A0  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C5A8  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C57F  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
mov edx [eax+10h] +
sub ebx [eax] +
mov ebx [edx+ebx*8] +
cmp ebx 1 +
ja loc_42C555  +
mov ebx [eax+14h] +
mov [esp+8+var_8] esi +
mov [esp+8+var_4] ebx +
call sub_42BE00  +
test eax eax +
jnz loc_42C565  +
nop   +
add esp 8 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [eax+14h] +
add esp 8 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+8] +
mov ecx [esp+4] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42C5E2  +
shl eax 4 +
add eax [ecx+48h] +
mov edx [eax] +
cmp [ecx+28h] edx +
setb al  +
retn   +
***
xor eax eax +
test ecx ecx +
jnz loc_42C5DB  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov ecx [esp+10h+arg_8] +
mov edi [esp+10h+arg_C] +
mov eax ebx +
mov edx ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42C61D  +
mov edx eax +
shl edx 4 +
add edx [esi+48h] +
mov edx [edx] +
cmp edx 1 +
jbe loc_42C693  +
cmp ecx 1 +
jz loc_42C674  +
cmp ecx 2 +
jz loc_42C6A6  +
test ecx ecx +
nop   +
jz loc_42C6D5  +
mov [esp+10h+var_8] offset aLinemap_resolv +
mov [esp+10h+var_C] 631h +
mov [esp+10h+var_10] offset a____GccLibcppL +
call sub_424080  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C684  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C66C  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42BE00  +
test eax eax +
jnz loc_42C652  +
test edi edi +
jz loc_42C68A  +
mov [edi] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_42C68A  +
mov dword ptr [edi] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ebx eax +
jz loc_42C6C3  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_42C6C3  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C684  +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8+4] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42BE00  +
test eax eax +
jnz loc_42C6B4  +
jmp loc_42C684  +
add esp 10h +
mov ecx edi +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_42C2B0  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42C830  +
mov ecx [ebx+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42C830  +
shl eax 4 +
mov ecx [ecx+eax] +
cmp [ebx+28h] ecx +
mov eax edx +
jb loc_42C742  +
cmp edx 1 +
ja loc_42C750  +
mov eax edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_42C740  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] ebx +
call sub_42C5F0  +
mov edx [esp+3Ch+var_10] +
movzx ebp byte ptr [edx+19h] +
mov edi [edx] +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov ecx ebp +
shl eax cl +
mov ecx eax +
mov eax esi +
add ecx esi +
cmp edi ecx +
jnb loc_42C742  +
movzx ecx byte ptr [edx+18h] +
sub eax edi +
mov edi eax +
mov [esp+3Ch+arg_0] ebx +
shr edi cl +
mov [esp+3Ch+var_20] edi +
mov edi [edx+0Ch] +
add [esp+3Ch+var_20] edi +
mov edi 1 +
shl edi cl +
mov ecx ebp +
sub edi 1 +
and edi eax +
mov eax [ebx+8] +
shr edi cl +
sub eax 1 +
imul eax eax +
add eax [ebx] +
cmp eax edx +
jz loc_42C85A  +
nop   +
mov ebx [esp+3Ch+arg_8] +
movzx ebp cl +
shl ebx cl +
mov ecx ebx +
add ecx esi +
cmp ecx [edx+1Ch] +
jnb loc_42C840  +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] edx +
movzx ecx byte ptr [edx+18h] +
mov eax esi +
add edi [esp+3Ch+arg_8] +
sub ecx ebp +
mov ebp 1 +
shl ebp cl +
cmp edi ebp +
jnb loc_42C742  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] eax +
call sub_42BD90  +
cmp eax [ebx+28h] +
mov edi eax +
jbe loc_42C869  +
mov eax esi +
jmp loc_42C742  +
test ebx ebx +
jz loc_42C73B  +
mov ecx edx +
jmp loc_42C734  +
mov ebx [esp+3Ch+var_20] +
lea ebp [edx+1Ch] +
cmp [edx+28h] ebx +
ja loc_42C824  +
movzx ecx byte ptr [edx+35h] +
mov edx ebp +
cmp eax edx +
jnz loc_42C7D0  +
mov ebx [esp+3Ch+arg_0] +
movzx ebp cl +
mov edx eax +
mov [esp+3Ch+var_10] eax +
jmp loc_42C7EA  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
call sub_42BE00  +
cmp eax [esp+3Ch+var_10] +
jnz loc_42C824  +
mov eax edi +
jmp loc_42C742  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_8] +
mov eax edi +
mov esi edi +
and eax 7FFFFFFFh +
cmp edi eax +
jz loc_42C8B8  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax ebp +
mov edx ebp +
and eax 7FFFFFFFh +
cmp ebp eax +
jz loc_42C8CD  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
cmp esi edx +
jz loc_42CAD0  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42CA26  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
xor ecx ecx +
cmp eax [ebx+28h] +
ja loc_42C9D0  +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_42CA0A  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
cmp eax [ebx+28h] +
ja loc_42C945  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42C926  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_42C939  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
add esp 2Ch +
mov eax edx +
pop ebx  +
sub eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_42C5F0  +
mov ecx [esp+2Ch+var_10] +
cmp eax esi +
mov edx eax +
jnz loc_42C913  +
test cl cl +
jz loc_42C913  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_42BE00  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] eax +
call sub_42BE00  +
mov edx [esp+2Ch+var_10] +
test edx edx +
mov esi eax +
jz loc_42CA77  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CA77  +
test eax eax +
jz loc_42CA86  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CA77  +
cmp edx eax +
jnz loc_42CA48  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
sub eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
call sub_42C5F0  +
mov edx [esp+2Ch+var_10] +
mov ecx 1 +
mov esi eax +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_42C906  +
test ebx ebx +
jnz loc_42C90E  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jnz loc_42C91E  +
jmp loc_42C926  +
test ebx ebx +
jnz loc_42CAA2  +
mov eax edx +
xor ecx ecx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_42C906  +
jmp loc_42C913  +
cmp esi edx +
jz loc_42C9C1  +
mov eax [esi] +
cmp [edx] eax +
lea esi [esi+0] +
jnb loc_42CAB0  +
mov edi [edx+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] edi +
call sub_42BE00  +
test eax eax +
mov edx eax +
jz loc_42CA77  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CA77  +
test esi esi +
jz loc_42CA86  +
cmp byte ptr [esi+4] 4 +
jz loc_42CA40  +
cmp edx esi +
jnz loc_42CA86  +
test edx edx +
lea esi [esi+0] +
jnz loc_42C9C1  +
mov [esp+2Ch+var_24] offset aLinemap_compar +
mov [esp+2Ch+var_28] 557h +
mov [esp+2Ch+var_2C] offset a____GccLibcppL +
call sub_424080  +
mov eax esi +
jmp loc_42C8EC  +
mov ebp [esi+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
mov [esp+2Ch+var_28] ebp +
call sub_42BE00  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
jmp loc_42CA67  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov ebx [esp+20h] +
mov esi [esp+1Ch] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42CB80  +
mov edx [esi+48h] +
shl eax 4 +
mov ebx [edx+eax] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42CB80  +
shl eax 4 +
mov edx [edx+eax] +
xor eax eax +
cmp [esi+28h] edx +
jb loc_42CB23  +
jmp loc_42CB73  +
mov ebx eax +
mov [esp+4] ebx +
mov ebp ebx +
mov [esp] esi +
call sub_42BE00  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42CB45  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov ecx [eax] +
mov edi [eax+10h] +
sub ebp ecx +
mov eax [edi+ebp*8] +
mov edx eax +
mov ebp eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42CB65  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
cmp [esi+28h] ebp +
jb loc_42CB21  +
sub ebx ecx +
cmp eax [edi+ebx*8+4] +
setz al  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
test esi esi +
jz loc_42CB73  +
mov edx ebx +
jmp loc_42CB18  +
***
push esi  +
push ebx  +
sub esp 8 +
mov eax [esp+8+arg_4] +
mov esi [esp+8+arg_8] +
mov ebx [esp+8+arg_0] +
mov edx eax +
and edx 7FFFFFFFh +
mov ebp [esi] +
cmp eax edx +
jz loc_42CBCC  +
mov ecx [ebx+48h] +
shl edx 4 +
mov eax [ecx+edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42CBCC  +
shl edx 4 +
mov eax [ecx+edx] +
mov edx [ebp+10h] +
sub eax [ebp+0] +
mov edi [edx+eax*8] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_42BE00  +
test eax eax +
jz loc_42CBF7  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CBF7  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebp+14h] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_42BE00  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42CC52  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_42BE00  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_42CC6C  +
cmp byte ptr [eax+4] 4 +
jz loc_42CC76  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_42C5F0  +
cmp eax 1 +
jbe loc_42CCA1  +
mov edx [esp+2Ch+var_10] +
cmp byte ptr [edx+14h] 0 +
jz loc_42CC6C  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jz loc_42CCF2  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CCF2  +
lea ebp [esp+2Ch+var_14] +
jmp loc_42CCBB  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CCF2  +
cmp eax 1 +
ja loc_42CD10  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_42CB90  +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
mov ebx eax +
call sub_42C5F0  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jnz loc_42CCB5  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_42CC6C  +
mov eax [esp+2Ch+arg_8] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
cmp byte ptr [eax+14h] 0 +
jnz loc_42CCC0  +
jmp loc_42CCF2  +
***
sub esp 14h +
mov edx [esp+14h+arg_C] +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
mov ebx [esp+14h+arg_8] +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jz loc_42CD73  +
mov edx esi +
shl edx 4 +
add edx [ecx+48h] +
mov esi [edx+0Ch] +
mov edx [edx] +
mov [eax+0Ch] esi +
cmp edx 1 +
jbe loc_42CDC7  +
test ebx ebx +
jz loc_42CDF4  +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
jz loc_42CDD0  +
shl esi 4 +
add esi [ecx+48h] +
mov esi [esi] +
cmp [ecx+28h] esi +
jb loc_42CDD8  +
mov ecx [ebx+8] +
sub edx [ebx] +
mov [eax] ecx +
movzx ecx byte ptr [ebx+18h] +
mov esi edx +
shr esi cl +
add esi [ebx+0Ch] +
mov [eax+4] esi +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [ebx+19h] +
sub esi 1 +
and esi edx +
shr esi cl +
cmp byte ptr [ebx+14h] 0 +
mov [eax+8] esi +
setnz byte ptr [eax+10h]  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_42CD95  +
mov esi edx +
jmp loc_42CD90  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6D5h +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_424080  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6CDh +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_424080  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+70h+var_10] +
mov edi [esp+70h+var_C] +
mov eax [esp+70h+var_8] +
mov edx [esp+70h+var_4] +
test esi esi +
mov [esp+70h+var_44] offset aLc_enter +
mov [esp+70h+var_40] offset aLc_leave +
mov [esp+70h+var_3C] offset aLc_rename +
mov [esp+70h+var_38] offset aLc_rename_verb +
mov [esp+70h+var_34] offset aLc_enter_macro +
jz loc_42CFD0  +
test dl dl +
jnz loc_42CF20  +
imul ebx eax +
add ebx [edi] +
movzx ebp byte ptr [ebx+4] +
mov [esp+70h+var_54] offset a??? +
mov ecx ebp +
cmp cl 4 +
ja loc_42CE82  +
movzx ebp cl +
mov ecx [esp+ebp*4+70h+var_44] +
mov [esp+70h+var_54] ecx +
test dl dl +
jnz loc_42CF30  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_42CF96  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aNo_0 +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_5C] ecx +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_47D120  +
mov ebp [ebx+10h] +
cmp ebp [edi+8] +
jnb loc_42CFA5  +
mov ecx [ebx+0Ch] +
imul edx ebp +
mov eax [ebx+8] +
add edx [edi] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_64] ecx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_54] edx +
call sub_47D120  +
mov edx [esp+70h+var_54] +
test edx edx +
jz loc_42CFDE  +
mov eax [edx+8] +
mov [esp+70h+var_64] eax +
mov [esp+70h+var_68] ebp +
mov [esp+70h+var_6C] offset aIncludedFromDS +
mov [esp+70h+var_70] esi +
call sub_47D120  +
jmp loc_42CF7E  +
mov ecx [edi+10h] +
lea ebx [eax+eax*2] +
lea ebx [ecx+ebx*8] +
jmp loc_42CE64  +
mov edx [ebx] +
mov edi [esp+70h+var_54] +
mov [esp+70h+var_58] offset aNo_0 +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_5C] edi +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_47D120  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov eax [eax] +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_6C] offset aMacroSUTokens +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_68] eax +
call sub_47D120  +
mov [esp+70h+var_10] esi +
mov [esp+70h+var_C] offset asc_4C7B99 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D120  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aYes +
jmp loc_42CE9E  +
mov edx [ebx+0Ch] +
mov eax [ebx+8] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_68] eax +
call sub_47D120  +
mov eax offset aNone_1 +
jmp loc_42CF04  +
mov ecx ds:_iob +
lea esi [ecx+40h] +
jmp loc_42CE57  +
mov eax offset aNone_1 +
jmp loc_42CF04  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+74h] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42D012  +
mov edi [esp+70h] +
shl eax 4 +
add eax [edi+48h] +
mov ebx [eax] +
test ebx ebx +
jnz loc_42D020  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov dword ptr [esp+8] 2 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_42C5F0  +
mov edx [esp+4Ch] +
test edx edx +
jz loc_42D100  +
mov esi [edx+8] +
mov ebp eax +
movzx ecx byte ptr [edx+18h] +
sub ebp [edx] +
mov [esp+38h] esi +
mov esi 1 +
mov edi ebp +
shr edi cl +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi ebp +
add edi [edx+0Ch] +
shr esi cl +
xor ecx ecx +
cmp byte ptr [edx+14h] 0 +
setnz cl  +
cmp ebx eax +
mov [esp+3Ch] ecx +
jnz loc_42D0E6  +
mov ecx [edx+10h] +
cmp ecx 0FFFFFFFFh +
jz loc_42D0F2  +
mov ebp [esp+70h] +
imul ecx ecx +
add ecx [ebp+0] +
jz loc_42D0F2  +
mov ecx [ecx+8] +
xor ebp ebp +
mov [esp+28h] eax +
mov eax [esp+3Ch] +
mov [esp+24h] ebx +
mov [esp+20h] ebp +
mov [esp+14h] esi +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+10h] edi +
mov [esp+1Ch] edx +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
mov eax [esp+78h] +
mov dword ptr [esp+4] offset aPSFSLDCDSDMPED +
mov [esp] eax +
call sub_47D120  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp 1 +
mov ecx offset off_4C7BEB +
jmp loc_42D09E  +
***
xor ebp ebp +
mov ecx offset aNull_1 +
jmp loc_42D09E  +
***
mov ecx offset unk_4C7BEA +
mov ebp 0FFFFFFFFh +
mov dword ptr [esp+3Ch] 0FFFFFFFFh +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+38h] ecx +
jmp loc_42D09E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
test ebp ebp +
jz loc_42D1B0  +
mov esi [ebp+8] +
test esi esi +
jz loc_42D1B0  +
mov ebx esi +
sub ebx 1 +
js loc_42D1B0  +
imul esi esi +
sub esi 1Ch +
jmp loc_42D168  +
sub esi 1Ch +
sub ebx 1 +
js loc_42D1B0  +
mov eax [ebp+0] +
mov eax [eax+esi+8] +
test eax eax +
jz loc_42D160  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_452D10  +
test eax eax +
jnz loc_42D160  +
mov eax [ebp+8] +
sub eax 1 +
cmp eax ebx +
jz loc_42D1C0  +
add ebx 1 +
imul ebx ebx +
add ebx [ebp+0] +
mov edx [ebx] +
sub edx 1 +
mov eax [esp+1Ch+arg_8] +
mov [eax] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+28h] +
jmp loc_42D19B  +
***
push esi  +
push ebx  +
sub esp 20h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov eax [eax+4] +
mov [esp+20h+var_18] eax +
imul eax eax +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+8] +
mov [esp+20h+var_14] eax +
imul eax eax +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+14h] +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+20h+var_8] eax +
mov eax [esp+20h+arg_0] +
mov ebp [eax+10h] +
test ebp ebp +
jz loc_42D2FF  +
mov eax [eax+18h] +
mov [esp+20h+var_4] eax +
lea eax [eax+eax*2-3] +
lea eax [ebp+eax*8+0] +
cmp ebp eax +
mov [esp+20h+var_1C] eax +
ja loc_42D28A  +
xor edx edx +
mov [esp+20h+var_20] 0 +
nop   +
mov esi [ebp+0Ch] +
mov eax [esp+20h+var_20] +
lea eax [eax+esi*8] +
add esi esi +
mov [esp+20h+var_20] eax +
jz loc_42D279  +
mov eax [ebp+10h] +
xor ecx ecx +
mov [esp+20h+arg_4] edi +
lea esi [esi+0] +
mov edi [eax+4] +
lea ebx [edx+4] +
cmp [eax] edi +
cmovz edx ebx +
add ecx 2 +
add eax 8 +
cmp ecx esi +
jb loc_42D260  +
mov edi [esp+20h+arg_4] +
add ebp 18h +
jz loc_42D284  +
cmp ebp [esp+20h+var_1C] +
jbe loc_42D240  +
mov eax [esp+20h+var_4] +
jmp loc_42D297  +
mov eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov esi [esp+20h+var_18] +
mov [edi+18h] eax +
lea eax [eax+eax*2] +
mov ecx ds:dword_4D9290 +
shl eax 3 +
mov [edi+20h] eax +
mov eax [esp+20h+arg_0] +
mov [edi] esi +
mov esi [esp+20h+var_14] +
mov [edi+10h] ecx +
mov ecx ds:dword_4D928C +
mov [edi+28h] edx +
mov eax [eax+44h] +
mov [edi+4] esi +
mov esi [esp+20h+var_10] +
mov [edi+14h] ecx +
shl eax 4 +
mov [edi+8] esi +
mov esi [esp+20h+var_C] +
mov [edi+2Ch] eax +
mov eax [esp+20h+arg_0] +
mov [edi+0Ch] esi +
mov esi [esp+20h+var_8] +
mov eax [eax+40h] +
mov [edi+1Ch] esi +
mov esi [esp+20h+var_20] +
mov [edi+30h] eax +
mov [edi+24h] esi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+20h+arg_0] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov eax [eax+18h] +
jmp loc_42D297  +
***
jmp loc_42D320  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov esi [esp+40h] +
mov edi [esp+48h] +
mov ebp [esp+4Ch] +
test ebx ebx +
jz loc_42D3A7  +
test esi esi +
jz loc_42D471  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aOfOrdinaryMaps +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D120  +
mov eax [ebx+18h] +
mov dword ptr [esp+4] offset aOfMacroMapsD +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D120  +
mov eax [ebx+20h] +
mov dword ptr [esp+4] offset aIncludeStackDe +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D120  +
mov eax [ebx+28h] +
mov dword ptr [esp+4] offset aHighestLocatio +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D120  +
test edi edi +
jnz loc_42D410  +
test ebp ebp +
jnz loc_42D3B0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] offset aMacroLineMaps +
mov [esp] esi +
call sub_47D120  +
mov eax [ebx+18h] +
test eax eax +
jz loc_42D3F4  +
xor edi edi +
lea esi [esi+0] +
mov [esp+8] edi +
add edi 1 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] esi +
call loc_42CE10  +
cmp edi ebp +
jz loc_42D3F4  +
cmp edi [ebx+18h] +
jb loc_42D3D0  +
mov [esp+40h] esi +
mov dword ptr [esp+44h] offset asc_4C7B99 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D120  +
***
mov dword ptr [esp+4] offset aOrdinaryLineMa +
mov [esp] esi +
call sub_47D120  +
mov edx [ebx+8] +
test edx edx +
jz loc_42D45C  +
xor eax eax +
lea esi [esi+0] +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+1Ch] eax +
call loc_42CE10  +
mov eax [esp+1Ch] +
add eax 1 +
cmp eax edi +
jz loc_42D45C  +
cmp eax [ebx+8] +
jb loc_42D430  +
mov dword ptr [esp+4] offset asc_4C7B99 +
mov [esp] esi +
call sub_47D120  +
jmp loc_42D3A3  +
***
mov eax ds:_iob +
lea esi [eax+40h] +
jmp loc_42D343  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 44h +
mov edx [ecx] +
lea eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_421CF0  +
mov ebx [esp+48h+var_30] +
cmp ebx [esp+48h+arg_0] +
jz loc_42D4B0  +
xor eax eax +
add esp 44h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebp esp +
leave   +
jmp loc_42D480  +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [ecx+44h] +
lea edi [ecx+44h] +
test eax eax +
jz loc_42D534  +
lea esi [esi+0] +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_42D51E  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_42D529  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_42D510  +
mov eax [ebp+54h] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [ebp+24h] +
mov [esp+28h+var_28] eax +
call free  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_42D575  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
mov eax [eax] +
retn 4  +
lea eax [ecx+eax*8+8] +
mov eax [eax] +
retn 4  +
***
mov eax [esp+4] +
cmp eax 2 +
jle loc_42D593  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
***
lea eax [ecx+eax*8+8] +
retn 4  +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_42D5B3  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
lea eax [ecx+eax*8+8] +
retn 4  +
***
sub esp 38h +
mov edx [esp+38h+arg_4] +
mov ebx [esp+38h+arg_0] +
test edx edx +
jnz loc_42D600  +
cmp byte ptr [ebx+2Ch] 0 +
jz loc_42D636  +
mov edx [ebx+30h] +
mov [eax] edx +
mov edx [ebx+34h] +
mov [eax+4] edx +
mov edx [ebx+38h] +
mov [eax+8] edx +
mov edx [ebx+3Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+40h] +
mov [eax+10h] edx +
add esp 38h +
pop ebx  +
retn 8  +
cmp edx 2 +
jle loc_42D630  +
mov ecx [ebx+24h] +
lea edx [ecx+edx*8-18h] +
mov edx [edx] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_34] edx +
call sub_421CF0  +
mov eax [esp+38h+var_2C] +
add esp 38h +
pop ebx  +
retn 8  +
lea edx [ebx+edx*8+8] +
jmp loc_42D60C  +
mov [esp+38h+var_2C] ecx +
mov ecx [ebx+8] +
lea edx [esp+38h+var_28] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ecx +
call sub_421CF0  +
mov edx [esp+38h+var_28] +
mov eax [esp+38h+var_2C] +
mov [ebx+30h] edx +
mov edx [esp+38h+var_24] +
mov [ebx+34h] edx +
mov edx [esp+38h+var_20] +
mov [ebx+38h] edx +
mov edx [esp+38h+var_1C] +
mov [ebx+3Ch] edx +
mov edx [esp+38h+var_18] +
mov [ebx+40h] edx +
mov edx [ebx+28h] +
test edx edx +
jz loc_42D67E  +
mov [ebx+38h] edx +
mov byte ptr [ebx+2Ch] 1 +
jmp loc_42D5D8  +
***
mov eax [esp+arg_0] +
mov byte ptr [ecx+2Ch] 0 +
mov [ecx+28h] eax +
retn 4  +
***
mov eax [ecx+44h] +
test eax eax +
jz loc_42D6C7  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_42D6C0  +
mov edx [ecx+54h] +
lea eax [edx+eax*4-0Ch] +
mov eax [eax] +
retn   +
***
lea eax [ecx+edx*4+48h] +
mov eax [eax] +
retn   +
***
xor eax eax +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 0Ch +
mov eax [ecx+44h] +
mov byte ptr [ecx+58h] 1 +
lea edi [ecx+44h] +
test eax eax +
jz loc_42D714  +
nop   +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_42D6FE  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_42D709  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_42D6F0  +
mov dword ptr [ebp+44h] 0 +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ecx+58h] +
test al al +
jnz locret_42D748  +
sub esp 0Ch +
cmp dword ptr [esp+10h] 60000000h +
ja loc_42D750  +
add esp 0Ch +
retn 4  +
***
call sub_42D6D0  +
mov eax 1 +
jmp loc_42D745  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_4D57C8 +
mov [esp+14h+var_14] esi +
mov [ecx+4] eax +
call sub_452AC0  +
mov [esp+14h+var_14] esi +
mov [ebx+8] eax +
call strlen  +
mov [ebx+0Ch] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_8] +
mov edx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_4D5828 +
mov [esp+14h+var_14] esi +
mov [ecx+8] edx +
mov [ecx+4] eax +
call sub_452AC0  +
mov [esp+14h+var_14] esi +
mov [ebx+0Ch] eax +
call strlen  +
mov [ebx+10h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 0Ch  +
***
push ebp  +
add ecx 4 +
mov ebp esp +
sub esp 28h +
mov eax [ebp+8] +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] al +
lea eax [ebp-10h] +
mov [esp] eax +
call sub_47F870  +
sub esp 4 +
leave   +
retn 8  +
***
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov [ecx-4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [ecx+24h] 0 +
mov byte ptr [ecx+28h] 0 +
mov dword ptr [ecx+40h] 0 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov dword ptr [ecx+4Ch] 0 +
mov dword ptr [ecx+50h] 0 +
mov byte ptr [ecx+54h] 0 +
mov [esp+28h+var_28] eax +
mov [ebp+var_C] 1 +
call sub_47F870  +
sub esp 4 +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
cmp ebx [ecx+4] +
mov edx [ebp+arg_C] +
jz loc_42D8C0  +
cmp ebx 2 +
lea eax [ecx+ebx*8+8] +
jg loc_42D8B7  +
mov ecx [ebp+arg_8] +
mov [eax+4] dl +
mov [eax] ecx +
test ebx ebx +
jnz loc_42D8AE  +
mov byte ptr [esi+2Ch] 0 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [ecx+24h] +
lea eax [eax+ebx*8-18h] +
jmp loc_42D89E  +
mov eax [ebp+arg_8] +
lea ecx [ecx+4] +
mov [ebp+var_C] dl +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov [esp+28h+var_28] eax +
call sub_47F870  +
sub esp 4 +
jmp loc_42D8A6  +
***
push ebp  +
add ecx 44h +
mov ebp esp +
sub esp 18h +
lea eax [ebp+8] +
mov [esp] eax +
call sub_47F910  +
sub esp 4 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_42C160  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42D949  +
cmp eax 60000000h +
mov esi eax +
ja loc_42D942  +
mov eax [ebp+arg_4] +
mov [esp+38h+var_34] 0Ah +
mov [esp+38h+var_38] eax +
call strchr  +
test eax eax +
jz loc_42D953  +
mov ecx ebx +
call sub_42D6D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov [esp+38h+var_38] 10h +
call loc_480BB0  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_42D760  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_47F910  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42D900  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_42C160  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42DA42  +
cmp edx 60000000h +
ja loc_42DA50  +
mov eax [ebx] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_30] 1 +
mov [ebp+var_2C] edx +
mov [esp+38h+var_38] eax +
call sub_42C6F0  +
mov edx [ebp+var_2C] +
cmp eax edx +
mov esi eax +
jz loc_42DA50  +
mov [esp+38h+var_38] 10h +
call loc_480BB0  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_42D760  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_47F910  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_42D6D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42D9C0  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_42C240  +
mov [esp+48h+var_44] esi +
mov edi eax +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_42C240  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42DAF4  +
cmp edi 60000000h +
ja loc_42DAED  +
cmp eax 60000000h +
mov esi eax +
ja loc_42DAED  +
mov eax [ebp+arg_8] +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] eax +
call strchr  +
test eax eax +
jz loc_42DB00  +
mov ecx ebx +
call sub_42D6D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx+44h] +
test eax eax +
jz loc_42DB48  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_42DB90  +
mov edx [ebx+54h] +
lea eax [edx+eax*4-0Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_42DB48  +
mov edx [ebx] +
mov eax [ecx] +
mov [ebp+var_2C] edx +
mov edx [ebp+arg_8] +
mov eax [eax+18h] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_3C] edx +
mov edx [ebp+var_2C] +
mov [esp+48h+var_48] edx +
call eax  +
sub esp 10h +
test al al +
jnz loc_42DAF4  +
mov [esp+58h+var_58] 14h +
call loc_480BB0  +
mov edx [ebp+arg_8] +
mov [esp+58h+var_58] edi +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_50] edx +
mov ecx eax +
mov [ebp+var_2C] eax +
call sub_42D7A0  +
mov eax [ebp+var_2C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
sub esp 0Ch +
mov [esp+58h+var_58] eax +
call sub_47F910  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea eax [ebx+edx*4+48h] +
jmp loc_42DB1A  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov dword ptr [esp+8] offset unk_4C7BEA +
mov [esp] eax +
mov [esp+4] edx +
call sub_42DA90  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42C160  +
mov ecx ebx +
mov [esp+18h+var_10] offset unk_4C7BEA +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42DA90  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov [esp] eax +
call sub_42DBD0  +
sub esp 4 +
leave   +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42C160  +
mov ecx [ebp+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42DA90  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42DC30  +
sub esp 8 +
leave   +
retn 4  +
***
sub ecx 39h +
cmp ecx 9 +
ja loc_42DD20  +
jmp ds:off_4C7D00[ecx*4]  +
mov ecx [edx+124h] +
mov [eax] ecx +
mov ecx [edx+128h] +
mov edx [edx+12Ch] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+13Ch] +
mov [eax] ecx +
mov ecx [edx+140h] +
mov edx [edx+144h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+130h] +
mov [eax] ecx +
mov ecx [edx+134h] +
mov edx [edx+138h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+148h] +
mov [eax] ecx +
mov ecx [edx+14Ch] +
mov edx [edx+150h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+118h] +
mov [eax] ecx +
mov ecx [edx+11Ch] +
mov edx [edx+120h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov esi [esp+28h] +
mov ecx [ebx+8] +
lea edx [esi+ecx] +
cmp edx [ebx+4] +
ja loc_42DD90  +
mov eax [ebx] +
add ecx eax +
mov eax [esp+24h] +
mov [esp+8] esi +
mov [esp] ecx +
mov [esp+4] eax +
call memcpy  +
mov eax 1 +
add [ebx+8] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax edx +
shr eax 2 +
add edx eax +
mov eax [ebx] +
mov [ebx+4] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_452A70  +
mov ecx [ebx+8] +
mov [ebx] eax +
jmp loc_42DD6A  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax ecx +
mov [ebp+var_20] ecx +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] eax +
mov eax ds:_stricmp +
mov [ebp+var_28] edx +
mov [esp+48h+var_44] ecx +
mov [ebp+var_24] eax +
call eax  +
test eax eax +
jnz loc_42DE00  +
mov dword ptr [ebx] offset loc_42DD50 +
mov eax ebx +
mov dword ptr [ebx+4] 0FFFFFFFFh +
mov dword ptr [ebx+8] 0FFFFFFFFh +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_20] +
mov [esp+48h+var_48] eax +
call strlen  +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] ecx +
mov esi eax +
call strlen  +
mov edi eax +
lea eax [esi+eax+20h] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ecx [esp+48h+var_28+3] +
mov [ebp+var_1C] ecx +
mov ecx [ebp+arg_0] +
and [ebp+var_1C] 0FFFFFFF0h +
mov esi [ebp+var_1C] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] esi +
call memcpy  +
mov edx [ebp+var_20] +
lea eax [esi+edi+1] +
mov byte ptr [esi+edi] 2Fh +
xor edi edi +
mov esi offset off_4CC4A0 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call strcpy  +
mov [ebp+var_2C] ebx +
mov ebx edi +
mov edi [ebp+var_24] +
nop   +
mov eax [esi] +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
call edi  +
test eax eax +
jz loc_42DEC0  +
add ebx 1 +
add esi 0Ch +
cmp ebx 8 +
jnz loc_42DE70  +
mov eax [ebp+var_20] +
mov [esp+48h+var_40] offset aNoIconvImpleme +
mov ebx [ebp+var_2C] +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_38] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] eax +
call sub_43C650  +
jmp loc_42DDDB  +
mov edi ebx +
mov ebx [ebp+var_2C] +
lea eax [edi+edi*2] +
lea eax ds:4CC4A0h[eax*4] +
mov edx [eax+4] +
mov eax [eax+8] +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx] edx +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_C] +
mov eax [ebx+8] +
mov edi [ebx] +
mov esi [ebx+4] +
add edi eax +
sub esi eax +
cmp esi 3 +
ja loc_42E050  +
cmp [esp+1Ch+arg_8] 0 +
jnz loc_42E1C6  +
mov eax [ebx+4] +
sub eax esi +
mov [ebx+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1Ch+arg_8] +
test ecx ecx +
jz loc_42E037  +
mov eax [esp+1Ch+arg_4] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov byte ptr [esp+1Ch+var_14] al +
jbe loc_42E0A8  +
mov [esp+1Ch+var_10] edi +
mov ebp ecx +
movzx ecx ds:byte_4C8A16[edx] +
movzx edi byte ptr [edx+4C8A10h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_42E101  +
add edx 1 +
cmp edx 7 +
jnz loc_42E076  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_42E044  +
sub [esp+1Ch+arg_8] 1 +
add [esp+1Ch+arg_4] 1 +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jnz loc_42E0EC  +
movzx eax ch +
mov [edi+1] al +
mov eax ecx +
shr eax 10h +
mov [edi+2] al +
mov eax 3 +
mov [edi] cl +
mov edx [esp+1Ch+arg_8] +
shr ecx 18h +
sub esi 4 +
mov [edi+eax] cl +
test edx edx +
jz loc_42E037  +
add edi 4 +
jmp loc_42E027  +
movzx eax ch +
mov [edi+2] al +
mov eax ecx +
shr eax 10h +
mov [edi+1] al +
xor eax eax +
mov [edi+3] cl +
jmp loc_42E0CF  +
cmp [esp+1Ch+arg_8] edx +
mov edi [esp+1Ch+var_10] +
jnb loc_42E112  +
mov ebx 16h +
jmp loc_42E09C  +
mov eax [esp+1Ch+arg_4] +
and cl byte ptr [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] edi +
mov edi edx +
movzx ecx cl +
lea ebp [eax+1] +
jmp loc_42E13A  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax [esp+1Ch+arg_4] +
cmp eax edi +
jnb loc_42E150  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov edx eax +
and edx 0FFFFFFC0h +
cmp dl 80h +
jz loc_42E128  +
jmp loc_42E097  +
lea eax [ecx-80h] +
mov edx edi +
mov edi [esp+1Ch+var_14] +
cmp eax 7FFFFF7Fh +
ja loc_42E097  +
cmp ecx 7FFh +
ja loc_42E175  +
cmp edx 2 +
ja loc_42E097  +
cmp ecx 0FFFFh +
ja loc_42E186  +
cmp edx 3 +
ja loc_42E097  +
cmp ecx 1FFFFFh +
ja loc_42E197  +
cmp edx 4 +
ja loc_42E097  +
cmp ecx 3FFFFFFh +
ja loc_42E1A8  +
cmp edx 5 +
ja loc_42E097  +
lea eax [ecx-0D800h] +
cmp eax 7FFh +
jbe loc_42E097  +
sub [esp+1Ch+arg_8] edx +
mov [esp+1Ch+arg_4] ebp +
jmp loc_42E0B2  +
mov eax [ebx+4] +
add esi 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edx +
call sub_452A70  +
mov edi [ebx+4] +
mov [ebx] eax +
sub eax esi +
add edi eax +
jmp loc_42E027  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax [esp+28h] +
mov ecx [eax] +
mov eax [esp+2Ch] +
test ecx ecx +
mov ebp [eax] +
mov eax 16h +
jnz loc_42E230  +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx] +
mov dword ptr [esp] 2 +
movzx esi al +
cmp esi 7Fh +
mov [esp+4] al +
jbe loc_42E280  +
mov edx [esp] +
mov [esp+8] ebx +
movzx ebx ds:byte_4C8A16[edx] +
movzx edi byte ptr [edx+4C8A10h] +
movzx eax bl +
not eax  +
and eax esi +
cmp eax edi +
jz loc_42E350  +
add edx 1 +
cmp edx 7 +
jnz loc_42E24D  +
add esp 0Ch +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [esp+28h] +
lea eax [ecx-1] +
mov [edi] eax +
mov edi [esp+24h] +
lea eax [ebx+1] +
mov [edi] eax +
cmp esi 0FFFFh +
mov eax [esp+30h] +
ja loc_42E2D8  +
cmp dword ptr [eax] 1 +
jbe loc_42E2DD  +
mov ebx [esp+20h] +
xor eax eax +
mov ecx esi +
test ebx ebx +
setnz al  +
mov [ebp+eax+0] cl +
setz al  +
mov ecx esi +
movzx eax al +
movzx edx ch +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_42E222  +
***
cmp dword ptr [eax] 3 +
ja loc_42E2F6  +
mov eax [esp+24h] +
mov [eax] ebx +
mov eax [esp+28h] +
mov [eax] ecx +
add esp 0Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+20h] +
lea eax [esi-10000h] +
and esi 3FFh +
shr eax 0Ah +
mov edx esi +
add eax 0D800h +
add edx 0DC00h +
test ecx ecx +
jz loc_42E460  +
mov [ebp+1] al +
movzx eax ah +
mov [ebp+0] al +
mov eax 2 +
mov [ebp+3] dl +
movzx edx dh +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42E222  +
***
cmp ecx edx +
mov edi ebx +
mov ebx [esp+8] +
mov [esp] edx +
mov eax 16h +
jb loc_42E222  +
mov eax edi +
and al [esp+4] +
lea edi [ebx+1] +
mov [esp+4] ecx +
movzx esi al +
add edi 1 +
movzx eax byte ptr [edi-1] +
mov ecx eax +
and ecx 0FFFFFFC0h +
cmp cl 80h +
jnz loc_42E272  +
and eax 3Fh +
shl esi 6 +
add esi eax +
mov eax edi +
sub eax ebx +
cmp eax edx +
jb loc_42E376  +
lea eax [esi-80h] +
mov ecx [esp+4] +
mov [esp] edx +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFFFF7Fh +
ja loc_42E222  +
cmp esi 7FFh +
ja loc_42E3CA  +
cmp dword ptr [esp] 2 +
ja loc_42E222  +
cmp esi 0FFFFh +
ja loc_42E3E1  +
cmp dword ptr [esp] 3 +
mov eax 2Ah +
ja loc_42E222  +
cmp esi 1FFFFFh +
ja loc_42E3F8  +
cmp dword ptr [esp] 4 +
mov eax 2Ah +
ja loc_42E222  +
cmp esi 3FFFFFFh +
ja loc_42E40F  +
cmp dword ptr [esp] 5 +
mov eax 2Ah +
ja loc_42E222  +
lea eax [esi-0D800h] +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFh +
jbe loc_42E222  +
mov edx [esp+24h] +
mov [edx] edi +
mov edi ecx +
sub edi [esp] +
cmp esi 10FFFFh +
mov edx edi +
mov edi [esp+28h] +
mov [edi] edx +
jbe loc_42E292  +
mov edi [esp+24h] +
mov esi [esp+28h] +
mov [edi] ebx +
mov [esi] ecx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [ebp+0] al +
movzx eax ah +
mov [ebp+1] al +
mov eax 3 +
mov [ebp+2] dl +
jmp loc_42E32F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+3Ch] +
mov eax [ebx+8] +
mov esi ebx +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
mov eax [esp+38h] +
test eax eax +
jnz loc_42E4C0  +
mov eax [esi+4] +
sub eax ebp +
mov [esi+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov [esp+0Fh] al +
jbe loc_42E510  +
movzx ebx ds:byte_4C8A16[edx] +
movzx edi byte ptr [edx+4C8A10h] +
movzx eax bl +
not eax  +
and eax ecx +
cmp eax edi +
jz loc_42E5A0  +
add edx 1 +
cmp edx 7 +
jnz loc_42E4D8  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_42E4B2  +
***
mov eax [esp+38h] +
lea ebx [eax-1] +
mov eax [esp+34h] +
add eax 1 +
cmp ecx 0FFFFh +
ja loc_42E566  +
cmp ebp 1 +
jbe loc_42E56B  +
mov edi [esp+30h] +
xor edx edx +
test edi edi +
mov edi [esp+8] +
setnz dl  +
mov [edi+edx] cl +
setz dl  +
movzx ecx ch +
add dword ptr [esp+8] 2 +
movzx edx dl +
sub ebp 2 +
mov [edi+edx] cl +
test ebx ebx +
jz loc_42E4A5  +
mov [esp+34h] eax +
mov [esp+38h] ebx +
jmp loc_42E49D  +
***
cmp ebp 3 +
ja loc_42E5B0  +
mov eax [esi+4] +
add ebp 100h +
mov edx [esi] +
add eax 100h +
mov [esi+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_452A70  +
mov [esi] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [esi+4] +
add [esp+8] eax +
jmp loc_42E49D  +
***
cmp edx [esp+38h] +
jbe loc_42E616  +
mov ebx 16h +
jmp loc_42E502  +
***
mov edi [esp+30h] +
lea edx [ecx-10000h] +
and ecx 3FFh +
shr edx 0Ah +
add ecx 0DC00h +
add edx 0D800h +
test edi edi +
jz loc_42E600  +
mov edi [esp+8] +
mov [edi+1] dl +
movzx edx dh +
mov [edi] dl +
mov edx 2 +
mov [edi+3] cl +
mov edi [esp+8] +
movzx ecx ch +
sub ebp 4 +
add dword ptr [esp+8] 4 +
mov [edi+edx] cl +
jmp loc_42E551  +
***
mov edi [esp+8] +
mov [edi] dl +
movzx edx dh +
mov [edi+1] dl +
mov edx 3 +
mov [edi+2] cl +
jmp loc_42E5E7  +
***
mov eax [esp+34h] +
mov edi edx +
and bl [esp+0Fh] +
add eax 1 +
movzx ecx bl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 0FFFFFFC0h +
cmp dl 80h +
jnz loc_42E4FD  +
mov edx eax +
and ebx 3Fh +
sub edx [esp+34h] +
shl ecx 6 +
add ecx ebx +
cmp edx edi +
jb loc_42E626  +
lea ebx [ecx-80h] +
mov edx edi +
cmp ebx 7FFFFF7Fh +
ja loc_42E4FD  +
cmp ecx 7FFh +
ja loc_42E66F  +
cmp edi 2 +
ja loc_42E4FD  +
cmp ecx 0FFFFh +
ja loc_42E680  +
cmp edx 3 +
ja loc_42E4FD  +
cmp ecx 1FFFFFh +
ja loc_42E691  +
cmp edx 4 +
ja loc_42E4FD  +
cmp ecx 3FFFFFFh +
ja loc_42E6A2  +
cmp edx 5 +
ja loc_42E4FD  +
lea ebx [ecx-0D800h] +
cmp ebx 7FFh +
jbe loc_42E4FD  +
mov ebx [esp+38h] +
sub ebx edx +
cmp ecx 10FFFFh +
ja loc_42E4FD  +
jmp loc_42E51E  +
***
push ebp  +
mov eax 7 +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov esi [esp+2Ch] +
cmp dword ptr [esi] 3 +
ja loc_42E6F0  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov edi [eax] +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax 16h +
test ebx ebx +
jz loc_42E6E5  +
movzx eax byte ptr [edi] +
mov edx 2 +
movzx ecx al +
cmp ecx 7Fh +
mov [esp] al +
jbe loc_42E746  +
mov [esp+4] edi +
mov ebp ecx +
movzx ecx ds:byte_4C8A16[edx] +
movzx edi byte ptr [edx+4C8A10h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_42E7AA  +
add edx 1 +
cmp edx 7 +
jnz loc_42E71E  +
mov eax 2Ah +
jmp loc_42E6E5  +
***
mov eax [esp+24h] +
sub ebx 1 +
add edi 1 +
mov [eax] ebx +
mov eax [esp+20h] +
mov [eax] edi +
mov edx [esp+1Ch] +
mov eax [esp+28h] +
test edx edx +
mov eax [eax] +
jz loc_42E793  +
movzx edx ch +
mov [eax+2] dl +
mov edx ecx +
shr edx 10h +
mov [eax+1] dl +
xor edx edx +
mov [eax+3] cl +
shr ecx 18h +
mov [eax+edx] cl +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
xor eax eax +
sub dword ptr [esi] 4 +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx ch +
mov [eax+1] dl +
mov edx ecx +
shr edx 10h +
mov [eax+2] dl +
mov edx 3 +
mov [eax] cl +
jmp loc_42E779  +
***
cmp ebx edx +
mov edi [esp+4] +
mov eax 16h +
jb loc_42E6E5  +
and cl [esp] +
lea ebp [edi+1] +
mov [esp] ebx +
movzx ecx cl +
jmp loc_42E7E0  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax edi +
cmp eax edx +
jnb loc_42E7F6  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ebx eax +
and ebx 0FFFFFFC0h +
cmp bl 80h +
jz loc_42E7D0  +
jmp loc_42E73F  +
***
lea edi [ecx-80h] +
mov ebx [esp] +
mov eax 2Ah +
cmp edi 7FFFFF7Fh +
ja loc_42E6E5  +
cmp ecx 7FFh +
ja loc_42E81E  +
cmp edx 2 +
ja loc_42E6E5  +
cmp ecx 0FFFFh +
ja loc_42E834  +
cmp edx 3 +
mov eax 2Ah +
ja loc_42E6E5  +
cmp ecx 1FFFFFh +
ja loc_42E84A  +
cmp edx 4 +
mov eax 2Ah +
ja loc_42E6E5  +
cmp ecx 3FFFFFFh +
ja loc_42E860  +
cmp edx 5 +
mov eax 2Ah +
ja loc_42E6E5  +
lea edi [ecx-0D800h] +
mov eax 2Ah +
cmp edi 7FFh +
jbe loc_42E6E5  +
mov eax [esp+20h] +
sub ebx edx +
mov [eax] ebp +
mov eax [esp+24h] +
mov [eax] ebx +
jmp loc_42E758  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+4Ch] +
mov eax [ebx+8] +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
cmp dword ptr [esp+48h] 3 +
mov esi 16h +
ja loc_42E8D4  +
mov eax [esp+48h] +
test eax eax +
jnz loc_42E930  +
mov eax [ebx+4] +
sub eax ebp +
mov [ebx+8] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+40h] +
test edx edx +
jz loc_42E943  +
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax] +
movzx eax byte ptr [eax+1] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+2] +
shl edx 8 +
add eax edx +
mov edx 3 +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx+edx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_42E968  +
mov esi 2Ah +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_42E8CC  +
***
test esi esi +
jz loc_42E8AB  +
cmp esi 7 +
jz loc_42EA26  +
jmp loc_42E91E  +
***
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax+3] +
movzx eax byte ptr [eax+2] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+1] +
shl edx 8 +
add eax edx +
xor edx edx +
jmp loc_42E901  +
***
cmp eax 7FFFFFFEh +
ja loc_42E919  +
cmp eax 7Fh +
jbe loc_42EA15  +
lea edx [esp+20h] +
mov ecx 1 +
mov [esp+0Ch] ebp +
mov [esp+4Ch] ebx +
jmp loc_42E994  +
mov ecx edi +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
lea esi [edx-1] +
mov [edx-1] bl +
lea edi [ecx+1] +
ja loc_42E990  +
movzx ebp ds:byte_4C8A22[edi] +
test eax ebp +
jnz loc_42E990  +
mov ebp [esp+0Ch] +
lea esi [edx-2] +
or al ds:byte_4C8A1D[ecx] +
mov ebx [esp+4Ch] +
cmp edi ebp +
mov [edx-2] al +
ja loc_42EA26  +
lea eax [esp+20h] +
cmp esi eax +
jnb loc_42EA02  +
mov ecx [esp+8] +
mov edx esi +
nop   +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ecx 1 +
mov [ecx-1] al +
lea eax [esp+20h] +
cmp edx eax +
jnz loc_42E9E0  +
add esi 1 +
lea eax [esp+21h] +
sub eax esi +
add [esp+8] eax +
sub ebp edi +
xor esi esi +
add dword ptr [esp+44h] 4 +
sub dword ptr [esp+48h] 4 +
jmp loc_42E8B7  +
***
test ebp ebp +
mov edi 1 +
mov [esp+1Fh] al +
lea esi [esp+1Fh] +
jnz loc_42E9D8  +
mov eax [ebx+4] +
add ebp 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_452A70  +
mov [ebx] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [ebx+4] +
add [esp+8] eax +
jmp loc_42E8AB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+4Ch] +
mov eax [ebp+8] +
mov edi [ebp+0] +
mov esi [ebp+4] +
add edi eax +
mov [esp+8] edi +
sub esi eax +
cmp dword ptr [esp+48h] 1 +
jbe loc_42EAD0  +
mov edx [esp+40h] +
mov ebx [esp+44h] +
test edx edx +
setz al  +
setnz dl  +
movzx eax al +
movzx ecx dl +
movzx eax byte ptr [ebx+eax] +
movzx ecx byte ptr [ebx+ecx] +
shl eax 8 +
lea ebp [eax+ecx] +
lea eax [ebp-0DC00h] +
cmp eax 3FFh +
ja loc_42EB00  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx 16h +
mov eax [esp+48h] +
test eax eax +
jnz loc_42EC86  +
mov ebp [esp+4Ch] +
mov eax [ebp+4] +
sub eax esi +
mov [ebp+8] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [ebp-0D800h] +
cmp eax 3FFh +
ja loc_42EB20  +
cmp dword ptr [esp+48h] 3 +
ja loc_42EB83  +
mov ebx 16h +
jmp loc_42EAB9  +
***
cmp ebp 7Fh +
ja loc_42EBC3  +
mov eax ebp +
test esi esi +
mov [esp+1Fh] al +
lea edi [esp+1Fh] +
mov ecx 1 +
jnz loc_42EC1C  +
mov eax [esp+4Ch] +
add esi 100h +
mov edx [esp+4Ch] +
mov eax [eax+4] +
mov [esp+8] eax +
add eax 100h +
mov [edx+4] eax +
mov edx [edx] +
mov [esp+4] eax +
mov [esp] edx +
call sub_452A70  +
mov edx [esp+4Ch] +
mov [edx] eax +
sub eax esi +
mov [esp+8] eax +
mov eax [edx+4] +
add [esp+8] eax +
jmp loc_42EA7C  +
***
test dl dl +
jnz loc_42EC60  +
mov eax [esp+44h] +
mov edx 2 +
movzx eax byte ptr [eax+3] +
shl eax 8 +
mov ebx [esp+44h] +
movzx edx byte ptr [ebx+edx] +
add eax edx +
lea edx [eax-0DC00h] +
cmp edx 3FFh +
ja loc_42EAB4  +
mov edx ebp +
shl edx 0Ah +
lea ebp [eax+edx-35FDC00h] +
mov eax ebp +
mov ebx 1 +
lea edx [esp+20h] +
mov [esp+0Ch] ebp +
jmp loc_42EBD8  +
mov ebx ecx +
mov edx edi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea edi [edx-1] +
lea ecx [ebx+1] +
ja loc_42EBD4  +
movzx ebp ds:byte_4C8A22[ecx] +
test eax ebp +
jnz loc_42EBD4  +
or al ds:byte_4C8A1D[ebx] +
cmp ecx esi +
mov ebp [esp+0Ch] +
lea edi [edx-2] +
mov [edx-2] al +
ja loc_42EB40  +
lea eax [esp+20h] +
cmp edi eax +
jnb loc_42EC44  +
mov edx [esp+8] +
mov eax edi +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+20h] +
cmp eax ebx +
jnz loc_42EC22  +
add edi 1 +
lea eax [esp+21h] +
sub eax edi +
add [esp+8] eax +
sub esi ecx +
cmp ebp 0FFFFh +
jbe loc_42EC75  +
add dword ptr [esp+44h] 4 +
xor ebx ebx +
sub dword ptr [esp+48h] 4 +
jmp loc_42EAD5  +
***
mov eax [esp+44h] +
mov edx 3 +
movzx eax byte ptr [eax+2] +
shl eax 8 +
jmp loc_42EB9B  +
***
add dword ptr [esp+44h] 2 +
xor ebx ebx +
sub dword ptr [esp+48h] 2 +
jmp loc_42EAD5  +
***
test ebx ebx +
jz loc_42EA7C  +
cmp ebx 7 +
jz loc_42EB40  +
jmp loc_42EAB9  +
***
push ebp  +
mov eax 16h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+2Ch] +
cmp dword ptr [edi] 3 +
ja loc_42ECC0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+24h] +
mov eax [esp+28h] +
test ecx ecx +
mov edx [eax] +
jnz loc_42ED10  +
movzx eax byte ptr [edx+3] +
movzx ecx byte ptr [edx+2] +
shl eax 18h +
shl ecx 10h +
add eax ecx +
movzx ecx byte ptr [edx+1] +
shl ecx 8 +
add eax ecx +
xor ecx ecx +
movzx edx byte ptr [edx+ecx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_42ED30  +
add esp 10h +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
shl ecx 18h +
shl eax 10h +
add eax ecx +
movzx ecx byte ptr [edx+2] +
shl ecx 8 +
add eax ecx +
mov ecx 3 +
jmp loc_42ECE9  +
***
cmp eax 7FFFFFFEh +
ja loc_42ECFD  +
mov esi [esp+30h] +
cmp eax 7Fh +
mov ebp [esi] +
jbe loc_42EDF0  +
lea edx [esp+10h] +
mov ebx 1 +
jmp loc_42ED55  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_42ED51  +
movzx edi ds:byte_4C8A22[ecx] +
test eax edi +
jnz loc_42ED51  +
or al ds:byte_4C8A1D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+34h] +
mov eax [eax] +
cmp ecx eax +
ja loc_42EE07  +
lea ebx [esp+10h] +
cmp esi ebx +
jnb loc_42EDC6  +
mov edx esi +
mov ebx ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ebx 1 +
mov [ebx-1] al +
lea eax [esp+10h] +
cmp edx eax +
jnz loc_42EDA0  +
lea eax [esp+11h] +
add esi 1 +
sub eax esi +
add ebp eax +
mov eax [esp+34h] +
mov eax [eax] +
mov esi [esp+34h] +
sub eax ecx +
mov [esi] eax +
mov eax [esp+30h] +
mov [eax] ebp +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
mov eax [esp+2Ch] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42ECB5  +
***
mov [esp+0Fh] al +
mov eax [esp+34h] +
lea esi [esp+0Fh] +
mov ecx 1 +
mov eax [eax] +
test eax eax +
jnz loc_42ED97  +
mov eax 7 +
jmp loc_42ECB5  +
***
jmp loc_42EE20  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+2Ch] +
mov ebx [esp+28h] +
mov edx [eax] +
mov eax [esp+30h] +
mov ecx [eax] +
mov eax 16h +
cmp ecx 1 +
jbe loc_42EE70  +
xor eax eax +
test ebx ebx +
setz al  +
movzx eax byte ptr [edx+eax] +
shl eax 8 +
test ebx ebx +
setnz bl  +
movzx esi bl +
movzx edi byte ptr [edx+esi] +
add edi eax +
mov eax 2Ah +
lea esi [edi-0DC00h] +
cmp esi 3FFh +
ja loc_42EE78  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [edi-0D800h] +
cmp eax 3FFh +
ja loc_42EF30  +
cmp ecx 3 +
mov eax 16h +
jbe loc_42EE70  +
test bl bl +
jz loc_42EFC0  +
movzx eax byte ptr [edx+2] +
mov ecx 3 +
shl eax 8 +
movzx edx byte ptr [edx+ecx] +
add edx eax +
mov eax 2Ah +
lea ecx [edx-0DC00h] +
cmp ecx 3FFh +
ja loc_42EE70  +
mov eax [esp+34h] +
shl edi 0Ah +
lea edi [edx+edi-35FDC00h] +
mov eax [eax] +
mov [esp] eax +
mov eax edi +
mov ebx 1 +
lea edx [esp+14h] +
jmp loc_42EEE4  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_42EEE0  +
movzx ebp ds:byte_4C8A22[ecx] +
test eax ebp +
jnz loc_42EEE0  +
or al ds:byte_4C8A1D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+38h] +
mov eax [eax] +
cmp ecx eax +
jbe loc_42EFB5  +
mov eax 7 +
jmp loc_42EE70  +
***
mov eax [esp+34h] +
cmp edi 7Fh +
mov eax [eax] +
mov [esp] eax +
ja loc_42EED3  +
mov eax edi +
mov ecx 1 +
mov [esp+13h] al +
mov eax [esp+38h] +
lea esi [esp+13h] +
mov eax [eax] +
test eax eax +
jz loc_42EF22  +
mov edx [esp] +
mov eax esi +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+14h] +
cmp eax ebx +
jnz loc_42EF60  +
lea eax [esp+15h] +
add esi 1 +
sub eax esi +
add [esp] eax +
mov eax [esp+38h] +
mov eax [eax] +
mov esi [esp+38h] +
sub eax ecx +
cmp edi 0FFFFh +
mov [esi] eax +
mov eax [esp+34h] +
mov esi [esp] +
mov [eax] esi +
mov eax [esp+2Ch] +
jbe loc_42EFD1  +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42EE70  +
***
lea edx [esp+14h] +
cmp esi edx +
jb loc_42EF57  +
jmp loc_42EF87  +
***
movzx eax byte ptr [edx+3] +
mov ecx 2 +
shl eax 8 +
jmp loc_42EEA7  +
***
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_42EE70  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edx [ebx+2A0h] +
mov ecx [ebx+278h] +
mov esi [ebx+27Ch] +
movzx edi byte ptr [ebx+2A6h] +
cmp edx 1Fh +
jbe loc_42F150  +
mov edx edi +
mov eax offset aUtf32be +
test dl dl +
mov edx offset aUtf32le +
cmovz eax edx +
mov edx offset aUtf8 +
test ecx ecx +
cmovz ecx edx +
test esi esi +
cmovz esi eax +
mov [esp] edx +
lea eax [esp+10h] +
mov edx ebx +
call sub_42DDB0  +
mov eax [esp+10h] +
mov ecx offset aUtf8 +
mov edx ebx +
mov [ebx+118h] eax +
mov eax [esp+14h] +
mov [ebx+11Ch] eax +
mov eax [ebx+298h] +
mov [ebx+120h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42DDB0  +
mov eax [esp+10h] +
mov [ebx+124h] eax +
mov eax [esp+14h] +
mov [ebx+128h] eax +
mov eax [ebx+298h] +
mov [ebx+12Ch] eax +
mov eax edi +
test al al +
jz loc_42F174  +
mov ecx offset aUtf16be +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42DDB0  +
mov eax [esp+10h] +
mov ecx offset aUtf32be +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42DDB0  +
mov eax [esp+10h] +
mov ecx esi +
mov edx ebx +
mov [ebx+13Ch] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+144h] 20h +
mov [ebx+140h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42DDB0  +
mov eax [esp+10h] +
mov [ebx+148h] eax +
mov eax [esp+14h] +
mov [ebx+14Ch] eax +
mov eax [ebx+2A0h] +
mov [ebx+150h] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp edx 0Fh +
mov eax offset aUtf8 +
jbe loc_42F02D  +
mov edx edi +
mov eax offset aUtf16be +
test dl dl +
mov edx offset aUtf16le +
cmovz eax edx +
jmp loc_42F02D  +
***
mov ecx offset aUtf16le +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42DDB0  +
mov eax [esp+10h] +
mov ecx offset aUtf32le +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
jmp loc_42F0E5  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+34h] +
mov esi [esp+30h] +
cmp ebx 7Eh +
ja loc_42F260  +
mov dword ptr [esp] 1 +
mov [esp+13h] bl +
mov dword ptr [esp+18h] 1 +
call sub_4529F0  +
mov edx [esi+11Ch] +
lea ecx [esp+14h] +
mov dword ptr [esp+1Ch] 0 +
mov [esp+14h] eax +
mov eax [esi+118h] +
mov [esp+0Ch] ecx +
lea ecx [esp+13h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
test al al +
jz loc_42F284  +
cmp dword ptr [esp+1Ch] 1 +
jz loc_42F2A4  +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xLxI +
mov dword ptr [esp+4] 4 +
call sub_43C650  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xL_0 +
mov dword ptr [esp+4] 4 +
call sub_43C650  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aConvertingToEx +
mov dword ptr [esp+4] 4 +
call sub_43C950  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+14h] +
movzx ebx byte ptr [edx] +
mov [esp] edx +
call free  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] 40h +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 8 +
call sub_4529F0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
retn   +
***
sub esp 18h +
mov edx [ecx+4] +
mov eax [ecx+8] +
cmp edx eax +
jge loc_42F340  +
mov eax [ecx] +
lea ecx [edx+1] +
mov [ebx+4] ecx +
mov ebx [esp+18h+arg_4] +
mov ecx [esp+18h+arg_0] +
mov [eax+edx*8+4] ebx +
mov [eax+edx*8] ecx +
add esp 18h +
pop ebx  +
retn 8  +
lea edx [eax+eax] +
mov [ecx+8] edx +
mov edx [ecx] +
shl eax 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_452A70  +
mov edx [ebx+4] +
mov [ebx] eax +
jmp loc_42F322  +
***
push edi  +
mov edi ecx +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
test eax eax +
jle loc_42F3A0  +
mov eax [ebx] +
cmp eax 60000000h +
ja loc_42F387  +
mov ecx [ebx+4] +
add ecx eax +
mov [ebx] ecx +
mov [esp+28h+var_28] eax +
mov ecx edi +
add esi 1 +
mov [esp+28h+var_24] eax +
call sub_42F310  +
sub esp 8 +
cmp esi [ebp+arg_0] +
jnz loc_42F377  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_18] +
mov ebx [esp+2Ch+arg_1C] +
mov eax [eax] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+248h] 0 +
jnz loc_42F4E0  +
cmp byte ptr [eax+268h] 0 +
jz loc_42F603  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+28Ah] 0 +
jle loc_42F4E0  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aC99SUniversalC +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
mov eax [esp+2Ch+var_10] +
movzx edx byte ptr [eax-1] +
mov eax 4 +
cmp dl 75h +
jz loc_42F44E  +
cmp dl 55h +
mov al 8 +
jz loc_42F44E  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aIn_cpp_valid_u +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
mov eax 4 +
mov ebp [esp+2Ch+var_10] +
xor edi edi +
mov [esp+2Ch+var_14] eax +
movzx edx byte ptr [ebp+0] +
test byte ptr [edx+edx+4D0621h] 1 +
jz loc_42F4A6  +
add ebp 1 +
test ebx ebx +
jz loc_42F489  +
test esi esi +
jz loc_42F7EE  +
mov ecx [ebx] +
cmp ecx 60000000h +
ja loc_42F486  +
mov eax [ebx+4] +
add eax ecx +
mov [ebx] eax +
mov [esi+4] ecx +
movzx edx ds:byte_4D2FE0[edx] +
shl edi 4 +
add edi edx +
sub [esp+2Ch+var_14] 1 +
jz loc_42F530  +
cmp ebp [esp+2Ch+arg_8] +
jb loc_42F458  +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
setnz cl  +
test ebx ebx +
setnz dl  +
test cl cl +
mov eax edx +
jz loc_42F98D  +
test dl dl +
jz loc_42F98D  +
mov eax [esp+2Ch+arg_14] +
mov dword ptr [eax] 0 +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jz loc_42F414  +
mov edi [esp+2Ch+arg_C] +
test edi edi +
jnz loc_42F414  +
mov eax [esp+2Ch+var_10] +
movzx eax byte ptr [eax-1] +
mov [esp+2Ch+var_24] offset aTheMeaningOfCI +
mov [esp+2Ch+var_28] 6 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43C690  +
jmp loc_42F414  +
mov eax [esp+2Ch+arg_C] +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
test eax eax +
setnz al  +
sub esi 2 +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
cmp edi 9Fh +
jbe loc_42F5A6  +
test edi edi +
js loc_42F564  +
lea edx [edi-0D800h] +
cmp edx 7FFh +
ja loc_42F5C2  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset a_SIsNotAValidU +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_20] ebp +
mov eax [esp+2Ch+arg_0] +
mov edi 1 +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
mov eax [esp+2Ch+arg_14] +
mov [eax] edi +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+248h] 0 +
jnz loc_42F552  +
cmp edi 24h +
jz loc_42F552  +
cmp edi 40h +
jz loc_42F552  +
cmp edi 60h +
jnz loc_42F564  +
cmp edi 24h +
jz loc_42F620  +
test al al +
jz loc_42F593  +
cmp edi 10FFFFh +
jbe loc_42F660  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalChara +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
jmp loc_42F593  +
mov [esp+2Ch+var_24] offset aUniversalCha_0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
jmp loc_42F414  +
test al al +
jz loc_42F593  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+262h] 0 +
jz loc_42F660  +
cmp byte ptr [eax+264h] 0 +
jz loc_42F648  +
cmp byte ptr [eax+0Ah] 0 +
jz loc_42F82D  +
mov eax [esp+2Ch+arg_10] +
mov edi 24h +
mov dword ptr [eax] 24h +
mov byte ptr [eax+4] 0 +
jmp loc_42F593  +
xor edx edx +
mov ecx 73Ch +
lea eax [edx+ecx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
cmp ds:dword_4C8A44[eax*8] edi +
jb loc_42F760  +
cmp edx eax +
mov ecx eax +
jnz loc_42F667  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_42F775  +
mov eax [esp+2Ch+arg_0] +
mov ecx 8 +
cmp byte ptr [eax+274h] 0 +
jnz loc_42F6C3  +
cmp byte ptr [eax+268h] 0 +
mov cl 1 +
jnz loc_42F6C3  +
cmp byte ptr [eax+248h] 0 +
jz loc_42F775  +
mov cl 4 +
movzx eax ds:word_4C8A40[edx*8] +
test ax cx +
jz loc_42F5D7  +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+274h] 0 +
jnz loc_42F7E4  +
mov ebx [esp+2Ch+arg_0] +
mov ecx eax +
xor esi esi +
and ecx 2 +
cmp byte ptr [ebx+268h] 0 +
cmovnz esi ecx +
movzx ebx ds:byte_4C8A42[edx*8] +
test bl bl +
jz loc_42F77F  +
mov ecx [esp+2Ch+arg_10] +
cmp bl [ecx+4] +
jnb loc_42F77F  +
mov dword ptr [ecx+8] 3 +
mov eax [esp+2Ch+arg_10] +
test si si +
mov [eax+4] bl +
jz loc_42F593  +
cmp [esp+2Ch+arg_C] 1 +
jnz loc_42F593  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalCha_1 +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
jmp loc_42F593  +
lea edx [eax+1] +
cmp ecx edx +
jnz loc_42F667  +
nop   +
lea esi [esi+0] +
jmp loc_42F686  +
mov ecx 0Dh +
jmp loc_42F6C3  +
test ah 1 +
jz loc_42F80A  +
mov eax [esp+2Ch+arg_10] +
mov ecx [eax] +
lea eax [edi-1161h] +
cmp eax 14h +
mov [esp+2Ch+var_10] eax +
ja loc_42F851  +
sub ecx 1100h +
cmp ecx 12h +
lea eax [edi-11A8h] +
ja loc_42F7D1  +
cmp eax 1Ah +
jbe loc_42F885  +
cmp [esp+2Ch+var_10] 14h +
jbe loc_42F885  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
test bl bl +
jnz loc_42F716  +
mov eax [esp+2Ch+arg_10] +
mov [eax] edi +
jmp loc_42F716  +
mov esi eax +
and esi 10h +
jmp loc_42F6FA  +
mov [esp+2Ch+var_24] offset a_cpp_valid_ucn +
mov [esp+2Ch+var_28] 434h +
mov [esp+2Ch+var_2C] offset a____GccLibcppC +
call sub_424080  +
test al 80h +
jnz loc_42F7D1  +
test al 40h +
jz loc_42F89E  +
mov ecx [esp+2Ch+arg_10] +
mov eax 1 +
mov edx [ecx+8] +
test edx edx +
cmovg eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42F7D1  +
mov byte ptr [eax+264h] 0 +
mov [esp+2Ch+var_24] offset aInIdentifierOr +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
jmp loc_42F648  +
lea eax [edi-11A8h] +
cmp eax 1Ah +
ja loc_42F8BF  +
sub ecx 0AC00h +
cmp ecx 2BA3h +
ja loc_42F7D1  +
mov eax ecx +
mov edx 24924925h +
shr eax 2 +
mul  edx +
imul edx edx +
cmp ecx edx +
jnz loc_42F7D1  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42F7D1  +
test al 20h +
jz loc_42F97D  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42F7D1  +
cmp edi 338h +
jz loc_42F7D1  +
ja loc_42FE2F  +
cmp edi 311h +
jz loc_42FE1C  +
lea esi [esi+0] +
ja loc_42FD3C  +
cmp edi 307h +
jz loc_42FCF5  +
ja loc_430CC5  +
cmp edi 302h +
jz loc_430C7C  +
jbe loc_431767  +
cmp edi 304h +
jz loc_42FC93  +
jb loc_42FB51  +
cmp edi 306h +
jnz loc_42FAAB  +
cmp ecx 3A5h +
jz loc_42F7B2  +
ja loc_42FA15  +
cmp ecx 65h +
jz loc_42F7B2  +
ja loc_42F9DF  +
cmp ecx 49h +
lea esi [esi+0] +
jz loc_42F7B2  +
ja loc_42F9BF  +
cmp ecx 45h +
nop   +
lea esi [esi+0] +
jz loc_42F7B2  +
cmp ecx 47h +
jz loc_42F7B2  +
cmp ecx 41h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
jmp loc_42F7D1  +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
sub esi 2 +
test cl cl +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
jz loc_42F54A  +
mov eax ebp +
sub eax esi +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_24] offset aIncompleteUniv +
jmp loc_42F57A  +
cmp ecx 55h +
jz loc_42F7B2  +
cmp ecx 61h +
jz loc_42F7B2  +
cmp ecx 4Fh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 75h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
ja loc_42FA5E  +
cmp ecx 69h +
jz loc_42F7B2  +
cmp ecx 6Fh +
nop   +
jz loc_42F7B2  +
cmp ecx 67h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 430h +
jz loc_42F7B2  +
ja loc_42FAD0  +
cmp ecx 410h +
jz loc_42F7B2  +
ja loc_42FA85  +
cmp ecx 3B9h +
jz loc_42F7B2  +
cmp ecx 3C5h +
jz loc_42F7B2  +
cmp ecx 3B1h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jz loc_42F7B2  +
ja loc_42FB06  +
sub ecx 228h +
cmp ecx 1 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 418h +
jz loc_42F7B2  +
ja loc_42FB9B  +
sub ecx 415h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] offset aCharacterXMigh +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
jmp loc_42F7D1  +
cmp ecx 443h +
jz loc_42F7B2  +
lea esi [esi+0] +
jbe loc_42FB28  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
nop   +
ja loc_42FB17  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 399h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FBCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 435h +
jb loc_42F7D1  +
cmp ecx 436h +
jbe loc_42F7B2  +
cmp ecx 438h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 76h +
ja loc_42FBE5  +
cmp ecx 75h +
lea esi [esi+0] +
jnb loc_42F7B2  +
cmp ecx 56h +
ja loc_42FBBD  +
cmp ecx 55h +
nop   +
jnb loc_42F7B2  +
cmp ecx 49h +
jz loc_42F7B2  +
nop   +
ja loc_42FBAC  +
cmp ecx 41h +
jz loc_42F7B2  +
cmp ecx 45h +
nop   +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 423h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 65h +
jz loc_42F7B2  +
ja loc_42FC2B  +
cmp ecx 59h +
nop   +
lea esi [esi+0] +
jz loc_42F7B2  +
cmp ecx 61h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 0F4h +
jz loc_42F7B2  +
ja loc_42FC67  +
cmp ecx 0CAh +
jz loc_42F7B2  +
nop   +
jbe loc_42FC4D  +
cmp ecx 0E2h +
jz loc_42F7B2  +
cmp ecx 0EAh +
jz loc_42F7B2  +
cmp ecx 0D4h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 69h +
nop   +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 79h +
jz loc_42F7B2  +
cmp ecx 0C2h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1A1h +
ja loc_4317EB  +
cmp ecx 1A0h +
jnb loc_42F7B2  +
sub ecx 102h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0F6h +
ja loc_4313F0  +
cmp ecx 0F5h +
jnb loc_42F7B2  +
cmp ecx 69h +
jz loc_42F7B2  +
ja loc_4313B5  +
cmp ecx 4Fh +
lea esi [esi+0] +
jz loc_42F7B2  +
jbe loc_43138C  +
cmp ecx 61h +
nop   +
jz loc_42F7B2  +
ja loc_431375  +
cmp ecx 55h +
nop   +
jz loc_42F7B2  +
cmp ecx 59h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 70h +
ja loc_42FEAF  +
cmp ecx 6Dh +
jnb loc_42F7B2  +
cmp ecx 54h +
ja loc_42FDF9  +
cmp ecx 52h +
jnb loc_42F7B2  +
cmp ecx 41h +
jb loc_42F7D1  +
cmp ecx 49h +
jbe loc_42F7B2  +
sub ecx 4Dh +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 326h +
jz loc_4316EC  +
ja loc_431689  +
cmp edi 31Bh +
jz loc_432625  +
jbe loc_431305  +
cmp edi 324h +
jz loc_430BF5  +
lea esi [esi+0] +
ja loc_430BA1  +
cmp edi 323h +
jnz loc_42FAAB  +
cmp ecx 17Eh +
ja loc_4307A8  +
cmp ecx 174h +
jnb loc_42F7B2  +
cmp ecx 0F6h +
ja loc_43074C  +
cmp ecx 0F1h +
jnb loc_42F7B2  +
cmp ecx 69h +
ja loc_42FF38  +
cmp ecx 68h +
jnb loc_42F7B2  +
cmp ecx 4Fh +
ja loc_42FF19  +
cmp ecx 4Bh +
jnb loc_42F7B2  +
cmp ecx 45h +
ja loc_42FEE6  +
cmp ecx 44h +
jnb loc_42F7B2  +
sub ecx 41h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 57h +
jb loc_42F7D1  +
cmp ecx 5Ah +
jbe loc_42F7B2  +
sub ecx 61h +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 41h +
cmp ecx 34h +
ja loc_42F7D1  +
jmp ds:off_4C8018[ecx*4]  +
cmp edi 0C56h +
jz loc_430484  +
nop   +
lea esi [esi+0] +
ja loc_430431  +
cmp edi 9BEh +
jz loc_4306A6  +
ja loc_430035  +
cmp edi 653h +
jz loc_4300E5  +
jbe loc_43007C  +
cmp edi 655h +
jz loc_430177  +
jb loc_42FFFA  +
cmp edi 93Ch +
jnz loc_42FAAB  +
sub ecx 915h +
cmp ecx 1Eh +
ja loc_42F7D1  +
mov edx 1 +
shl edx cl +
and edx 4C483087h +
jz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 15Bh +
ja loc_42FEF7  +
cmp ecx 15Ah +
jnb loc_42F7B2  +
cmp ecx 72h +
jb loc_42F7D1  +
cmp ecx 74h +
jbe loc_42F7B2  +
sub ecx 77h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 48h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 17Fh +
jz loc_42F7B2  +
ja loc_42FF6F  +
sub ecx 160h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 5Ah +
ja loc_42FF85  +
cmp ecx 59h +
jnb loc_42F7B2  +
sub ecx 52h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0CFh +
ja loc_42FFCE  +
cmp ecx 0C8h +
jnb loc_42F7B2  +
cmp ecx 77h +
ja loc_42FFA8  +
cmp ecx 72h +
jnb loc_42F7B2  +
sub ecx 6Bh +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1E62h +
cmp ecx 1 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 61h +
jb loc_42F7D1  +
cmp ecx 62h +
jbe loc_42F7B2  +
sub ecx 64h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 79h +
jb loc_42F7D1  +
cmp ecx 7Ah +
jbe loc_42F7B2  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0DDh +
ja loc_43019B  +
cmp ecx 0D9h +
jnb loc_42F7B2  +
sub ecx 0D1h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 64Ah +
jz loc_42F7B2  +
jbe loc_4306B7  +
cmp ecx 6D2h +
jz loc_42F7B2  +
cmp ecx 6D5h +
jz loc_42F7B2  +
cmp ecx 6C1h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 0B56h +
jz loc_43072A  +
jbe loc_430705  +
cmp edi 0BBEh +
jz loc_4306F1  +
cmp edi 0BD7h +
jz loc_4306D4  +
cmp edi 0B57h +
jnz loc_42FAAB  +
cmp ecx 0B47h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp edi 342h +
jz loc_4301C7  +
cmp edi 345h +
jnz loc_42FAAB  +
cmp ecx 1F0Fh +
ja loc_430136  +
cmp ecx 1F00h +
jnb loc_42F7B2  +
cmp ecx 3AEh +
jz loc_42F7B2  +
ja loc_430107  +
cmp ecx 397h +
jz loc_42F7B2  +
jbe loc_4300F6  +
cmp ecx 3A9h +
jz loc_42F7B2  +
cmp ecx 3ACh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 627h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 391h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B7h +
jz loc_42F7B2  +
jbe loc_43022F  +
cmp ecx 3C9h +
jz loc_42F7B2  +
cmp ecx 3CEh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F74h +
jz loc_42F7B2  +
jbe loc_4303C5  +
cmp ecx 1FB6h +
jz loc_42F7B2  +
jbe loc_4303B3  +
cmp ecx 1FC6h +
jz loc_42F7B2  +
cmp ecx 1FF6h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 622h +
cmp ecx 5 +
ja loc_42F7D1  +
mov edx 1 +
shl edx cl +
and edx 23h +
jz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0E0h +
jb loc_42F7D1  +
cmp ecx 0E5h +
jbe loc_42F7B2  +
sub ecx 0E8h +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F59h +
jz loc_42F7B2  +
ja loc_4302C6  +
cmp ecx 1F09h +
ja loc_430282  +
cmp ecx 1F08h +
jnb loc_42F7B2  +
cmp ecx 3C5h +
jz loc_42F7B2  +
ja loc_430256  +
cmp ecx 3B1h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
jbe loc_430245  +
cmp ecx 3B7h +
jz loc_42F7B2  +
cmp ecx 3B9h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B1h +
jnz loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 0A8h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3C9h +
jb loc_42F7D1  +
cmp ecx 3CBh +
jbe loc_42F7B2  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F31h +
ja loc_43031E  +
cmp ecx 1F30h +
jnb loc_42F7B2  +
cmp ecx 1F20h +
jb loc_42F7D1  +
cmp ecx 1F21h +
jbe loc_42F7B2  +
sub ecx 1F28h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F99h +
ja loc_430376  +
cmp ecx 1F98h +
jnb loc_42F7B2  +
cmp ecx 1F81h +
ja loc_43034A  +
cmp ecx 1F80h +
jnb loc_42F7B2  +
cmp ecx 1F60h +
jb loc_42F7D1  +
cmp ecx 1F61h +
jbe loc_42F7B2  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F38h +
jb loc_42F7D1  +
cmp ecx 1F39h +
jbe loc_42F7B2  +
sub ecx 1F50h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F88h +
jb loc_42F7D1  +
cmp ecx 1F89h +
jbe loc_42F7B2  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
jbe loc_430405  +
cmp ecx 1FC3h +
jz loc_42F7B2  +
jbe loc_4303F1  +
cmp ecx 1FF3h +
jz loc_42F7B2  +
cmp ecx 1FFEh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F7Ch +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 1F20h +
jb loc_42F7D1  +
cmp ecx 1F2Fh +
jbe loc_42F7B2  +
sub ecx 1F60h +
cmp ecx 10h +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FBFh +
jnz loc_42F7D1  +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 1FA0h +
jb loc_42F7D1  +
cmp ecx 1FA1h +
jbe loc_42F7B2  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 0DCFh +
jz loc_430607  +
lea esi [esi+0] +
jbe loc_4305C9  +
cmp edi 3099h +
jz loc_430519  +
ja loc_4304BC  +
cmp edi 102Eh +
jz loc_4304AB  +
cmp edi 1B35h +
jz loc_430495  +
cmp edi 0DDFh +
jnz loc_42FAAB  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0C46h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
sub ecx 1B05h +
cmp ecx 3Dh +
ja loc_42F7D1  +
jmp ds:off_4C80EC[ecx*4]  +
cmp ecx 1025h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp edi 110BAh +
jz loc_430585  +
cmp edi 11127h +
jz loc_430570  +
cmp edi 309Ah +
jnz loc_42FAAB  +
cmp ecx 307Bh +
jz loc_42F7B2  +
ja loc_430545  +
cmp ecx 3072h +
jz loc_42F7B2  +
jbe loc_430532  +
cmp ecx 3075h +
jz loc_42F7B2  +
cmp ecx 3078h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 3046h +
cmp ecx 0B7h +
ja loc_42F7D1  +
jmp ds:off_4C81E4[ecx*4]  +
cmp ecx 306Fh +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 30D5h +
jz loc_42F7B2  +
ja loc_4305AC  +
cmp ecx 30CFh +
jz loc_42F7B2  +
cmp ecx 30D2h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 11131h +
cmp ecx 1 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
sub ecx 11099h +
cmp ecx 0Ch +
ja loc_42F7D1  +
mov edx 1 +
shl edx cl +
and edx 1005h +
jz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 30D8h +
jz loc_42F7B2  +
cmp ecx 30DBh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 0CD6h +
jz loc_430684  +
jbe loc_430649  +
cmp edi 0D57h +
jz loc_430638  +
cmp edi 0DCAh +
jz loc_43061B  +
cmp edi 0D3Eh +
jnz loc_42FAAB  +
sub ecx 0D46h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0DD9h +
jz loc_42F7B2  +
cmp ecx 0DDCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0D46h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp edi 0CC2h +
jz loc_430695  +
cmp edi 0CD5h +
jnz loc_42FAAB  +
sub ecx 0CBFh +
cmp ecx 0Bh +
ja loc_42F7D1  +
mov edx 1 +
shl edx cl +
and edx 881h +
jz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0CC6h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 0CC6h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 9C7h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 627h +
jz loc_42F7B2  +
cmp ecx 648h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0B92h +
jz loc_42F7B2  +
cmp ecx 0BC6h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0BC6h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 9D7h +
jz loc_43073B  +
cmp edi 0B3Eh +
jnz loc_42FAAB  +
cmp ecx 0B47h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 0B47h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 9C7h +
jz loc_42F7B2  +
jmp loc_42F7D1  +
cmp ecx 13Eh +
ja loc_430AFD  +
cmp ecx 13Dh +
jnb loc_42F7B2  +
cmp ecx 11Bh +
ja loc_430AD5  +
cmp ecx 11Ah +
jnb loc_42F7B2  +
cmp ecx 103h +
ja loc_430814  +
cmp ecx 0FFh +
jnb loc_42F7B2  +
sub ecx 0F9h +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E45h +
ja loc_4308C5  +
cmp ecx 1E44h +
jnb loc_42F7B2  +
cmp ecx 227h +
ja loc_430881  +
cmp ecx 226h +
jnb loc_42F7B2  +
cmp ecx 1E1h +
ja loc_430855  +
cmp ecx 1DEh +
jnb loc_42F7B2  +
cmp ecx 1B0h +
ja loc_430840  +
cmp ecx 1AFh +
jnb loc_42F7B2  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 10Eh +
jb loc_42F7D1  +
cmp ecx 10Fh +
jbe loc_42F7B2  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 1FBh +
ja loc_430919  +
cmp ecx 1F8h +
jnb loc_42F7B2  +
sub ecx 1E8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E17h +
ja loc_430A55  +
cmp ecx 1E14h +
jnb loc_42F7B2  +
cmp ecx 1E03h +
ja loc_430A41  +
cmp ecx 1E02h +
jnb loc_42F7B2  +
sub ecx 22Ah +
cmp ecx 9 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E99h +
ja loc_430981  +
cmp ecx 1E97h +
jnb loc_42F7B2  +
cmp ecx 1E67h +
ja loc_430959  +
cmp ecx 1E64h +
jnb loc_42F7B2  +
cmp ecx 1E59h +
ja loc_430945  +
cmp ecx 1E58h +
jnb loc_42F7B2  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 200h +
jb loc_42F7D1  +
cmp ecx 217h +
jbe loc_42F7B2  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E7Dh +
ja loc_4309C1  +
cmp ecx 1E78h +
jnb loc_42F7B2  +
sub ecx 1E6Ah +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1ED7h +
ja loc_430A19  +
cmp ecx 1ECEh +
jnb loc_42F7B2  +
cmp ecx 1EB5h +
ja loc_4309ED  +
cmp ecx 1EAEh +
jnb loc_42F7B2  +
sub ecx 1EA2h +
cmp ecx 9 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E80h +
jb loc_42F7D1  +
cmp ecx 1E87h +
jbe loc_42F7B2  +
sub ecx 1E8Eh +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EBAh +
jb loc_42F7D1  +
cmp ecx 1EC5h +
jbe loc_42F7B2  +
sub ecx 1EC8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EEFh +
ja loc_430A7D  +
cmp ecx 1EE6h +
jnb loc_42F7B2  +
sub ecx 1EDAh +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E27h +
ja loc_430AA9  +
cmp ecx 1E26h +
jnb loc_42F7B2  +
sub ecx 1E22h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EF2h +
jb loc_42F7D1  +
cmp ecx 1EF3h +
jbe loc_42F7B2  +
sub ecx 1EF6h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E2Eh +
jb loc_42F7D1  +
cmp ecx 1E31h +
jbe loc_42F7B2  +
sub ecx 1E3Eh +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 12Dh +
ja loc_430B39  +
cmp ecx 128h +
jnb loc_42F7B2  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 155h +
ja loc_430B75  +
cmp ecx 154h +
jnb loc_42F7B2  +
cmp ecx 148h +
ja loc_430B5F  +
cmp ecx 147h +
jnb loc_42F7B2  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 130h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 139h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 161h +
ja loc_430C3C  +
cmp ecx 160h +
jnb loc_42F7B2  +
sub ecx 158h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E1h +
ja loc_4315B5  +
cmp ecx 1DEh +
jnb loc_42F7B2  +
cmp ecx 0E5h +
ja loc_431589  +
cmp ecx 0E0h +
jnb loc_42F7B2  +
cmp ecx 61h +
jz loc_42F7B2  +
ja loc_430C68  +
cmp ecx 41h +
jnz loc_42F7D1  +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 171h +
ja loc_431609  +
cmp ecx 168h +
jnb loc_42F7B2  +
cmp ecx 0DCh +
ja loc_4315F5  +
cmp ecx 0D9h +
jnb loc_42F7B2  +
cmp ecx 55h +
jz loc_42F7B2  +
cmp ecx 75h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 164h +
jb loc_42F7D1  +
cmp ecx 165h +
jbe loc_42F7B2  +
sub ecx 168h +
cmp ecx 9 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 65h +
jz loc_42F7B2  +
ja loc_432125  +
cmp ecx 53h +
nop   +
jz loc_42F7B2  +
ja loc_4312DA  +
cmp ecx 45h +
nop   +
jz loc_42F7B2  +
ja loc_430D35  +
cmp ecx 41h +
nop   +
jz loc_42F7B2  +
cmp ecx 43h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp edi 30Ah +
jz loc_430F4C  +
jbe loc_430DD2  +
cmp edi 30Ch +
jz loc_430E35  +
jb loc_430D9D  +
cmp edi 30Fh +
jnz loc_42FAAB  +
cmp ecx 61h +
jz loc_42F7B2  +
nop   +
ja loc_430D6C  +
cmp ecx 49h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
jbe loc_430D55  +
cmp ecx 52h +
jz loc_42F7B2  +
cmp ecx 55h +
nop   +
jz loc_42F7B2  +
cmp ecx 4Fh +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 47h +
jb loc_42F7D1  +
cmp ecx 4Ah +
jbe loc_42F7B2  +
cmp ecx 4Fh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 41h +
jz loc_42F7B2  +
cmp ecx 45h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 72h +
nop   +
jz loc_42F7B2  +
ja loc_430E75  +
cmp ecx 69h +
nop   +
jz loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
cmp ecx 65h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
jbe loc_430F5F  +
cmp ecx 423h +
jz loc_42F7B2  +
cmp ecx 443h +
jz loc_42F7B2  +
cmp ecx 75h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 308h +
jz loc_431013  +
cmp edi 309h +
jnz loc_42FAAB  +
cmp ecx 79h +
jz loc_42F7B2  +
ja loc_430FCD  +
cmp ecx 59h +
lea esi [esi+0] +
jz loc_42F7B2  +
ja loc_430FA5  +
cmp ecx 49h +
nop   +
jz loc_42F7B2  +
ja loc_430F8B  +
cmp ecx 41h +
nop   +
jz loc_42F7B2  +
cmp ecx 45h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 61h +
jz loc_42F7B2  +
nop   +
jbe loc_430EDF  +
cmp ecx 75h +
jbe loc_430EB7  +
cmp ecx 0FCh +
jz loc_42F7B2  +
ja loc_430E9A  +
cmp ecx 7Ah +
jz loc_42F7B2  +
cmp ecx 0DCh +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 75h +
jz loc_42F7B2  +
nop   +
jb loc_42F7D1  +
sub ecx 474h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1B7h +
jz loc_42F7B2  +
cmp ecx 292h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 72h +
jnb loc_42F7B2  +
cmp ecx 6Ch +
ja loc_430F0B  +
cmp ecx 67h +
jnb loc_42F7B2  +
sub ecx 63h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 4Ch +
ja loc_430F2D  +
cmp ecx 4Bh +
jnb loc_42F7B2  +
cmp ecx 45h +
ja loc_430F1C  +
cmp ecx 43h +
jnb loc_42F7B2  +
cmp ecx 41h +
nop   +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 47h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 55h +
ja loc_430F7B  +
cmp ecx 52h +
jnb loc_42F7B2  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 41h +
cmp ecx 38h +
ja loc_42F7D1  +
jmp ds:off_4C84C4[ecx*4]  +
cmp ecx 4Fh +
jz loc_42F7B2  +
cmp ecx 55h +
nop   +
lea esi [esi+0] +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 5Ah +
nop   +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 4Fh +
nop   +
jz loc_42F7B2  +
cmp ecx 55h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 69h +
jz loc_42F7B2  +
nop   +
ja loc_431065  +
cmp ecx 61h +
jz loc_42F7B2  +
cmp ecx 65h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0F4h +
jz loc_42F7B2  +
ja loc_43110D  +
cmp ecx 0D4h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
ja loc_4310F0  +
cmp ecx 0C2h +
jz loc_42F7B2  +
cmp ecx 0CAh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B9h +
jz loc_42F7B2  +
nop   +
ja loc_431139  +
cmp ecx 69h +
ja loc_4310B5  +
cmp ecx 68h +
jnb loc_42F7B2  +
cmp ecx 4Fh +
jz loc_42F7B2  +
jbe loc_431095  +
cmp ecx 59h +
ja loc_43107C  +
cmp ecx 57h +
nop   +
lea esi [esi+0] +
jnb loc_42F7B2  +
cmp ecx 55h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
cmp ecx 75h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 61h +
nop   +
jz loc_42F7B2  +
cmp ecx 65h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 45h +
jz loc_42F7B2  +
nop   +
ja loc_4311AB  +
cmp ecx 41h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 0D5h +
jz loc_42F7B2  +
jbe loc_4311D0  +
cmp ecx 16Bh +
ja loc_43118E  +
cmp ecx 16Ah +
jnb loc_42F7B2  +
cmp ecx 0F5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0E2h +
jz loc_42F7B2  +
cmp ecx 0EAh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1A1h +
ja loc_4311BC  +
cmp ecx 1A0h +
jnb loc_42F7B2  +
sub ecx 102h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 430h +
jz loc_42F7B2  +
ja loc_431239  +
cmp ecx 418h +
ja loc_43120E  +
cmp ecx 415h +
jnb loc_42F7B2  +
cmp ecx 3D2h +
jz loc_42F7B2  +
jbe loc_4311EC  +
cmp ecx 406h +
jz loc_42F7B2  +
cmp ecx 410h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 399h +
jz loc_42F7B2  +
cmp ecx 3A5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 48h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 75h +
ja loc_4311FD  +
cmp ecx 74h +
jnb loc_42F7B2  +
cmp ecx 6Fh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3C5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 77h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 427h +
jz loc_42F7B2  +
ja loc_431272  +
cmp ecx 41Eh +
jz loc_42F7B2  +
cmp ecx 423h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 44Bh +
jz loc_42F7B2  +
ja loc_4312A5  +
cmp ecx 43Eh +
jz loc_42F7B2  +
jbe loc_43128F  +
cmp ecx 443h +
jz loc_42F7B2  +
cmp ecx 447h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 42Bh +
jz loc_42F7B2  +
cmp ecx 42Dh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 435h +
cmp ecx 3 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 4D9h +
ja loc_432165  +
cmp ecx 4D8h +
jnb loc_42F7B2  +
cmp ecx 44Dh +
jz loc_42F7B2  +
cmp ecx 456h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 5Ah +
ja loc_433271  +
cmp ecx 59h +
jnb loc_42F7B2  +
cmp ecx 55h +
nop   +
jz loc_42F7B2  +
cmp ecx 57h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp edi 313h +
jz loc_432423  +
cmp edi 314h +
jnz loc_42FAAB  +
cmp ecx 3B7h +
jz loc_42F7B2  +
ja loc_4323E6  +
cmp ecx 39Fh +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
ja loc_432494  +
cmp ecx 395h +
jz loc_42F7B2  +
jbe loc_432236  +
cmp ecx 397h +
jz loc_42F7B2  +
cmp ecx 399h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 65h +
jz loc_42F7B2  +
cmp ecx 67h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 45h +
nop   +
jz loc_42F7B2  +
jbe loc_43143F  +
cmp ecx 47h +
nop   +
jz loc_42F7B2  +
cmp ecx 49h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 0C6h +
jz loc_42F7B2  +
ja loc_431535  +
cmp ecx 75h +
jz loc_42F7B2  +
jbe loc_431526  +
cmp ecx 79h +
jz loc_42F7B2  +
cmp ecx 0C4h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B9h +
jz loc_42F7B2  +
lea esi [esi+0] +
ja loc_431494  +
cmp ecx 22Fh +
ja loc_431469  +
cmp ecx 22Eh +
jnb loc_42F7B2  +
cmp ecx 1EBh +
ja loc_431455  +
cmp ecx 1EAh +
jnb loc_42F7B2  +
cmp ecx 0FCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 41h +
jnz loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
sub ecx 226h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 399h +
jz loc_42F7B2  +
jbe loc_4314D3  +
cmp ecx 3A5h +
jz loc_42F7B2  +
cmp ecx 3B1h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E37h +
ja loc_431502  +
cmp ecx 1E36h +
jnb loc_42F7B2  +
cmp ecx 423h +
jz loc_42F7B2  +
ja loc_4314E5  +
cmp ecx 3C5h +
jz loc_42F7B2  +
cmp ecx 418h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 438h +
jz loc_42F7B2  +
cmp ecx 443h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
nop   +
ja loc_431560  +
sub ecx 1E5Ah +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 6Fh +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 0DCh +
jz loc_42F7B2  +
jbe loc_431575  +
cmp ecx 0E4h +
jz loc_42F7B2  +
cmp ecx 0E6h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FBCh +
jnz loc_42F7D1  +
lea esi [esi+0] +
jmp loc_42F7B2  +
sub ecx 0D5h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 100h +
jb loc_42F7D1  +
cmp ecx 103h +
jbe loc_42F7B2  +
sub ecx 1CDh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 227h +
ja loc_431631  +
cmp ecx 226h +
jnb loc_42F7B2  +
cmp ecx 1FAh +
jb loc_42F7D1  +
cmp ecx 1FBh +
jbe loc_42F7B2  +
sub ecx 200h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 217h +
ja loc_43165D  +
cmp ecx 214h +
jnb loc_42F7B2  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EA2h +
jb loc_42F7D1  +
cmp ecx 1EABh +
jbe loc_42F7B2  +
sub ecx 1EAEh +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E78h +
jb loc_42F7D1  +
cmp ecx 1E7Bh +
jbe loc_42F7B2  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 32Dh +
jz loc_432F9A  +
jbe loc_4321B6  +
cmp edi 330h +
jz loc_433007  +
cmp edi 331h +
jz loc_432384  +
cmp edi 32Eh +
jnz loc_42FAAB  +
cmp ecx 21Fh +
ja loc_43173B  +
cmp ecx 21Eh +
jnb loc_42F7B2  +
cmp ecx 68h +
jz loc_42F7B2  +
ja loc_431727  +
cmp ecx 48h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 165h +
ja loc_4330FF  +
cmp ecx 164h +
jnb loc_42F7B2  +
cmp ecx 74h +
ja loc_432B7B  +
cmp ecx 73h +
jnb loc_42F7B2  +
sub ecx 53h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E22h +
jb loc_42F7D1  +
cmp ecx 1E23h +
jbe loc_42F7B2  +
sub ecx 1E26h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 300h +
jz loc_431AF8  +
cmp edi 301h +
jnz loc_42FAAB  +
cmp ecx 39Fh +
jz loc_42F7B2  +
ja loc_431A81  +
cmp ecx 0CAh +
jz loc_42F7B2  +
lea esi [esi+0] +
ja loc_43188F  +
cmp ecx 63h +
jz loc_42F7B2  +
nop   +
ja loc_43184D  +
cmp ecx 50h +
ja loc_43181B  +
cmp ecx 4Bh +
nop   +
jnb loc_42F7B2  +
cmp ecx 45h +
jz loc_42F7B2  +
nop   +
ja loc_4317FF  +
cmp ecx 41h +
jz loc_42F7B2  +
cmp ecx 43h +
nop   +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 47h +
jz loc_42F7B2  +
cmp ecx 49h +
nop   +
lea esi [esi+0] +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 57h +
nop   +
jz loc_42F7B2  +
ja loc_4318EC  +
cmp ecx 52h +
nop   +
jb loc_42F7D1  +
cmp ecx 53h +
jbe loc_42F7B2  +
cmp ecx 55h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 75h +
jz loc_42F7B2  +
ja loc_431A15  +
cmp ecx 70h +
nop   +
ja loc_4319FF  +
cmp ecx 6Bh +
jnb loc_42F7B2  +
cmp ecx 67h +
jz loc_42F7B2  +
cmp ecx 69h +
jz loc_42F7B2  +
cmp ecx 65h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 103h +
ja loc_43195B  +
cmp ecx 102h +
jnb loc_42F7B2  +
cmp ecx 0E7h +
ja loc_43192A  +
cmp ecx 0E5h +
jnb loc_42F7B2  +
cmp ecx 0D5h +
jbe loc_43190D  +
cmp ecx 0DCh +
jz loc_42F7B2  +
cmp ecx 0E2h +
jz loc_42F7B2  +
cmp ecx 0D8h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 59h +
nop   +
jb loc_42F7D1  +
cmp ecx 5Ah +
jbe loc_42F7B2  +
cmp ecx 61h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0D4h +
jnb loc_42F7B2  +
cmp ecx 0CFh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0F5h +
ja loc_431997  +
cmp ecx 0F4h +
jnb loc_42F7B2  +
cmp ecx 0EAh +
jz loc_42F7B2  +
cmp ecx 0EFh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1A1h +
ja loc_4319C8  +
cmp ecx 1A0h +
jnb loc_42F7B2  +
cmp ecx 14Dh +
ja loc_4319B4  +
cmp ecx 14Ch +
jnb loc_42F7B2  +
sub ecx 112h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0F8h +
jz loc_42F7B2  +
cmp ecx 0FCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 168h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jz loc_42F7B2  +
jbe loc_431A47  +
cmp ecx 397h +
jz loc_42F7B2  +
cmp ecx 399h +
jz loc_42F7B2  +
cmp ecx 395h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 72h +
cmp ecx 1 +
ja loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 0A8h +
jz loc_42F7B2  +
ja loc_431A5B  +
cmp ecx 77h +
jz loc_42F7B2  +
lea esi [esi+0] +
jb loc_42F7D1  +
sub ecx 79h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0C2h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 0C5h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F39h +
ja loc_4320B5  +
cmp ecx 1F38h +
jnb loc_42F7B2  +
cmp ecx 43Ah +
jz loc_42F7B2  +
ja loc_432075  +
cmp ecx 3BFh +
jz loc_42F7B2  +
ja loc_431B82  +
cmp ecx 3B1h +
jz loc_42F7B2  +
jbe loc_431B65  +
cmp ecx 3B7h +
jz loc_42F7B2  +
cmp ecx 3B9h +
jz loc_42F7B2  +
cmp ecx 3B5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 415h +
jz loc_42F7B2  +
ja loc_431D07  +
cmp ecx 0FCh +
jz loc_42F7B2  +
ja loc_431CB3  +
cmp ecx 6Fh +
nop   +
ja loc_431C1D  +
cmp ecx 6Eh +
jnb loc_42F7B2  +
cmp ecx 55h +
jz loc_42F7B2  +
jbe loc_431BFB  +
cmp ecx 61h +
jz loc_42F7B2  +
ja loc_431BBB  +
cmp ecx 57h +
lea esi [esi+0] +
jz loc_42F7B2  +
cmp ecx 59h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 3A5h +
jz loc_42F7B2  +
cmp ecx 3A9h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3D2h +
jz loc_42F7B2  +
nop   +
jbe loc_431BD5  +
cmp ecx 41Ah +
jz loc_42F7B2  +
cmp ecx 433h +
jz loc_42F7B2  +
cmp ecx 413h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 65h +
nop   +
jz loc_42F7B2  +
cmp ecx 69h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 3C5h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 49h +
jz loc_42F7B2  +
ja loc_431C55  +
cmp ecx 41h +
jz loc_42F7B2  +
cmp ecx 45h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0CAh +
jz loc_42F7B2  +
ja loc_431C83  +
cmp ecx 79h +
nop   +
jz loc_42F7B2  +
ja loc_431C66  +
cmp ecx 75h +
nop   +
lea esi [esi+0] +
jz loc_42F7B2  +
cmp ecx 77h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0A8h +
jz loc_42F7B2  +
cmp ecx 0C2h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0E2h +
jz loc_42F7B2  +
nop   +
ja loc_431D7E  +
cmp ecx 0D4h +
jz loc_42F7B2  +
cmp ecx 0DCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 397h +
jz loc_42F7B2  +
nop   +
jbe loc_431DE3  +
cmp ecx 3B5h +
jz loc_42F7B2  +
ja loc_431DB8  +
cmp ecx 3A5h +
jz loc_42F7B2  +
ja loc_431D9B  +
cmp ecx 399h +
jz loc_42F7B2  +
cmp ecx 39Fh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F51h +
ja loc_431F15  +
cmp ecx 1F50h +
jnb loc_42F7B2  +
cmp ecx 1F21h +
ja loc_431ED1  +
cmp ecx 1F20h +
jnb loc_42F7B2  +
cmp ecx 1F09h +
ja loc_431EA5  +
cmp ecx 1F08h +
jnb loc_42F7B2  +
cmp ecx 438h +
jz loc_42F7B2  +
ja loc_431E8F  +
cmp ecx 418h +
jz loc_42F7B2  +
cmp ecx 435h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0EAh +
jz loc_42F7B2  +
cmp ecx 0F4h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3A9h +
jz loc_42F7B2  +
cmp ecx 3B1h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3BFh +
jz loc_42F7B2  +
ja loc_431E13  +
cmp ecx 3B7h +
jz loc_42F7B2  +
cmp ecx 3B9h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 14Dh +
jbe loc_431E57  +
cmp ecx 1B0h +
ja loc_431E3A  +
cmp ecx 1AFh +
jnb loc_42F7B2  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3C5h +
jz loc_42F7B2  +
nop   +
jb loc_42F7D1  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jz loc_42F7B2  +
cmp ecx 395h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 14Ch +
jnb loc_42F7B2  +
cmp ecx 102h +
jb loc_42F7D1  +
cmp ecx 103h +
jbe loc_42F7B2  +
sub ecx 112h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 1F10h +
jb loc_42F7D1  +
cmp ecx 1F11h +
jbe loc_42F7B2  +
sub ecx 1F18h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F39h +
ja loc_431F6B  +
cmp ecx 1F38h +
jnb loc_42F7B2  +
cmp ecx 1F28h +
jb loc_42F7D1  +
cmp ecx 1F29h +
jbe loc_42F7B2  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F99h +
jbe loc_431FDC  +
cmp ecx 1FBCh +
jz loc_42F7B2  +
jbe loc_431FB4  +
cmp ecx 1FCCh +
jz loc_42F7B2  +
nop   +
jbe loc_431F97  +
cmp ecx 1FFCh +
jz loc_42F7B2  +
cmp ecx 1FFEh +
jz loc_42F7B2  +
cmp ecx 1FF3h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F40h +
jb loc_42F7D1  +
cmp ecx 1F41h +
jbe loc_42F7B2  +
sub ecx 1F48h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FBFh +
jz loc_42F7B2  +
cmp ecx 1FC3h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FA9h +
ja loc_432021  +
cmp ecx 1FA8h +
jnb loc_42F7B2  +
sub ecx 1FA0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F98h +
jnb loc_42F7B2  +
cmp ecx 1F81h +
ja loc_432049  +
cmp ecx 1F80h +
jnb loc_42F7B2  +
cmp ecx 1F61h +
ja loc_432035  +
cmp ecx 1F60h +
jnb loc_42F7B2  +
cmp ecx 1F59h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jnz loc_42F7D1  +
lea esi [esi+0] +
jmp loc_42F7B2  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F88h +
jb loc_42F7D1  +
cmp ecx 1F89h +
jbe loc_42F7B2  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F19h +
ja loc_432247  +
cmp ecx 1F18h +
jnb loc_42F7B2  +
cmp ecx 1F09h +
ja loc_432111  +
cmp ecx 1F08h +
jnb loc_42F7B2  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F91h +
ja loc_4322D4  +
cmp ecx 1F90h +
jnb loc_42F7B2  +
cmp ecx 1F61h +
ja loc_4322AC  +
cmp ecx 1F60h +
jnb loc_42F7B2  +
cmp ecx 1F49h +
ja loc_43226F  +
cmp ecx 1F48h +
jnb loc_42F7B2  +
sub ecx 1F40h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1F10h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 7Ah +
ja loc_43218A  +
cmp ecx 79h +
lea esi [esi+0] +
jnb loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
nop   +
jbe loc_432179  +
cmp ecx 75h +
jz loc_42F7B2  +
cmp ecx 77h +
nop   +
jz loc_42F7B2  +
cmp ecx 73h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
sub ecx 4E8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 67h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EB9h +
ja loc_4334CA  +
cmp ecx 1EB8h +
jnb loc_42F7B2  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp edi 327h +
jz loc_432708  +
cmp edi 328h +
jnz loc_42FAAB  +
cmp ecx 130h +
jz loc_42F7B2  +
ja loc_4326AC  +
cmp ecx 0DCh +
ja loc_432E0F  +
cmp ecx 0D9h +
jnb loc_42F7B2  +
cmp ecx 69h +
jz loc_42F7B2  +
ja loc_43267D  +
cmp ecx 4Fh +
jz loc_42F7B2  +
ja loc_4324BF  +
cmp ecx 45h +
jz loc_42F7B2  +
cmp ecx 49h +
jz loc_42F7B2  +
cmp ecx 41h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F29h +
ja loc_432298  +
cmp ecx 1F28h +
jnb loc_42F7B2  +
sub ecx 1F20h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F50h +
jb loc_42F7D1  +
cmp ecx 1F51h +
jbe loc_42F7B2  +
cmp ecx 1F59h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F81h +
ja loc_43231B  +
cmp ecx 1F80h +
jnb loc_42F7B2  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
jbe loc_432358  +
cmp ecx 1FCCh +
jz loc_42F7B2  +
nop   +
ja loc_43232F  +
cmp ecx 1FBFh +
jz loc_42F7B2  +
cmp ecx 1FC3h +
jz loc_42F7B2  +
cmp ecx 1FBCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1F88h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FFCh +
jz loc_42F7B2  +
cmp ecx 1FFEh +
jz loc_42F7B2  +
cmp ecx 1FF3h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FA1h +
ja loc_43306B  +
cmp ecx 1FA0h +
jnb loc_42F7B2  +
sub ecx 1F98h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 155h +
ja loc_432C3A  +
cmp ecx 154h +
jnb loc_42F7B2  +
cmp ecx 72h +
jz loc_42F7B2  +
ja loc_432BED  +
cmp ecx 54h +
nop   +
jz loc_42F7B2  +
ja loc_432BBE  +
cmp ecx 4Ch +
nop   +
ja loc_432BA7  +
cmp ecx 4Bh +
jnb loc_42F7B2  +
cmp ecx 42h +
jz loc_42F7B2  +
cmp ecx 44h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
ja loc_432502  +
cmp ecx 3C1h +
jz loc_42F7B2  +
ja loc_432477  +
cmp ecx 3B9h +
jz loc_42F7B2  +
cmp ecx 3BFh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B9h +
jz loc_42F7B2  +
nop   +
ja loc_43258F  +
cmp ecx 39Fh +
jz loc_42F7B2  +
ja loc_432562  +
cmp ecx 395h +
jz loc_42F7B2  +
jbe loc_43252F  +
cmp ecx 397h +
jz loc_42F7B2  +
cmp ecx 399h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3C5h +
jz loc_42F7B2  +
cmp ecx 3C9h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3A9h +
jz loc_42F7B2  +
ja loc_4324E5  +
cmp ecx 3A1h +
jz loc_42F7B2  +
cmp ecx 3A5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 61h +
jz loc_42F7B2  +
cmp ecx 65h +
nop   +
lea esi [esi+0] +
jz loc_42F7B2  +
cmp ecx 55h +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
cmp ecx 3B1h +
jz loc_42F7B2  +
cmp ecx 3B5h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FCCh +
jz loc_42F7B2  +
nop   +
ja loc_432545  +
cmp ecx 1FBCh +
jz loc_42F7B2  +
cmp ecx 1FC3h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 391h +
jnz loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 1FF3h +
jz loc_42F7B2  +
cmp ecx 1FFCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3B1h +
jz loc_42F7B2  +
nop   +
jbe loc_4325CF  +
cmp ecx 3B5h +
jz loc_42F7B2  +
cmp ecx 3B7h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FB3h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
ja loc_4325F6  +
cmp ecx 3C1h +
jz loc_42F7B2  +
nop   +
jbe loc_4325E5  +
cmp ecx 3C5h +
jz loc_42F7B2  +
cmp ecx 3C9h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 3A9h +
jnz loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 3BFh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FCCh +
jz loc_42F7B2  +
ja loc_43350A  +
cmp ecx 1FBCh +
jz loc_42F7B2  +
cmp ecx 1FC3h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 171h +
ja loc_432EDA  +
cmp ecx 168h +
jnb loc_42F7B2  +
cmp ecx 0DCh +
ja loc_432EAE  +
cmp ecx 0D9h +
jnb loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
nop   +
ja loc_432E4B  +
cmp ecx 4Fh +
jz loc_42F7B2  +
cmp ecx 55h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0C5h +
ja loc_43276D  +
cmp ecx 0C0h +
jnb loc_42F7B2  +
cmp ecx 6Fh +
jz loc_42F7B2  +
cmp ecx 75h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 217h +
ja loc_4327D5  +
cmp ecx 214h +
jnb loc_42F7B2  +
cmp ecx 1B0h +
ja loc_4327AD  +
cmp ecx 1AFh +
jnb loc_42F7B2  +
cmp ecx 171h +
ja loc_432799  +
cmp ecx 168h +
jnb loc_42F7B2  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 148h +
ja loc_4328ED  +
cmp ecx 147h +
jnb loc_42F7B2  +
cmp ecx 0CBh +
ja loc_43289D  +
cmp ecx 0C8h +
jnb loc_42F7B2  +
cmp ecx 54h +
ja loc_432975  +
cmp ecx 52h +
jnb loc_42F7B2  +
cmp ecx 48h +
ja loc_43287D  +
cmp ecx 47h +
jnb loc_42F7B2  +
sub ecx 43h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0C8h +
jb loc_42F7D1  +
cmp ecx 0CFh +
jbe loc_42F7B2  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E1h +
ja loc_432811  +
cmp ecx 1DEh +
jnb loc_42F7B2  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E1Bh +
ja loc_432851  +
cmp ecx 1E14h +
jnb loc_42F7B2  +
cmp ecx 231h +
ja loc_43283D  +
cmp ecx 22Ah +
jnb loc_42F7B2  +
sub ecx 226h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FAh +
jb loc_42F7D1  +
cmp ecx 1FBh +
jbe loc_42F7B2  +
sub ecx 200h +
cmp ecx 0Fh +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1E00h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E53h +
ja loc_4329A9  +
cmp ecx 1E4Ch +
jnb loc_42F7B2  +
sub ecx 1E2Ch +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 4Bh +
jb loc_42F7D1  +
cmp ecx 4Ch +
jbe loc_42F7B2  +
cmp ecx 4Eh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 121h +
ja loc_4329F7  +
cmp ecx 11Ah +
jnb loc_42F7B2  +
cmp ecx 0F1h +
jz loc_42F7B2  +
ja loc_432949  +
cmp ecx 0D1h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 0E8h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 21Bh +
ja loc_432A9F  +
cmp ecx 218h +
jnb loc_42F7B2  +
cmp ecx 1E9h +
ja loc_432A77  +
cmp ecx 1E6h +
jnb loc_42F7B2  +
cmp ecx 15Dh +
ja loc_432A1F  +
cmp ecx 158h +
jnb loc_42F7B2  +
sub ecx 154h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 106h +
jb loc_42F7D1  +
cmp ecx 10Fh +
jbe loc_42F7B2  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 6Ch +
ja loc_4329D5  +
cmp ecx 6Bh +
lea esi [esi+0] +
jnb loc_42F7B2  +
cmp ecx 63h +
jb loc_42F7D1  +
cmp ecx 65h +
jbe loc_42F7B2  +
sub ecx 67h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E72h +
jb loc_42F7D1  +
cmp ecx 1E7Bh +
jbe loc_42F7B2  +
sub ecx 1EA0h +
cmp ecx 51h +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 6Eh +
jz loc_42F7B2  +
nop   +
jb loc_42F7D1  +
sub ecx 72h +
cmp ecx 2 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 13Ah +
ja loc_432A4B  +
cmp ecx 139h +
jnb loc_42F7B2  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 160h +
jb loc_42F7D1  +
cmp ecx 161h +
jbe loc_42F7B2  +
sub ecx 164h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 13Dh +
jb loc_42F7D1  +
cmp ecx 13Eh +
jbe loc_42F7B2  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F9h +
ja loc_432ADF  +
cmp ecx 1F8h +
jnb loc_42F7B2  +
sub ecx 1F4h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E2Bh +
ja loc_432B37  +
cmp ecx 1E2Ah +
jnb loc_42F7B2  +
cmp ecx 1E0Fh +
ja loc_432B0B  +
cmp ecx 1E0Ah +
jnb loc_42F7B2  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 204h +
jb loc_42F7D1  +
cmp ecx 207h +
jbe loc_42F7B2  +
sub ecx 210h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E12h +
jb loc_42F7D1  +
cmp ecx 1E1Bh +
jbe loc_42F7B2  +
sub ecx 1E20h +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E71h +
ja loc_43316F  +
cmp ecx 1E58h +
jnb loc_42F7B2  +
cmp ecx 1E30h +
jb loc_42F7D1  +
cmp ecx 1E3Dh +
jbe loc_42F7B2  +
sub ecx 1E44h +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 15Ah +
jb loc_42F7D1  +
cmp ecx 15Dh +
jbe loc_42F7B2  +
sub ecx 160h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 4Eh +
jz loc_42F7B2  +
cmp ecx 52h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 68h +
jz loc_42F7B2  +
ja loc_432C8E  +
cmp ecx 62h +
jz loc_42F7B2  +
cmp ecx 64h +
jz loc_42F7B2  +
cmp ecx 5Ah +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 13Ah +
ja loc_432DAA  +
cmp ecx 139h +
jnb loc_42F7B2  +
cmp ecx 0F1h +
jz loc_42F7B2  +
ja loc_432D81  +
cmp ecx 7Ah +
jz loc_42F7B2  +
cmp ecx 0D1h +
jz loc_42F7B2  +
cmp ecx 74h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E03h +
ja loc_432CEA  +
cmp ecx 1E02h +
jnb loc_42F7B2  +
cmp ecx 1E9h +
ja loc_432CC2  +
cmp ecx 1E8h +
jnb loc_42F7B2  +
cmp ecx 165h +
ja loc_432CAE  +
cmp ecx 164h +
jnb loc_42F7B2  +
sub ecx 158h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 6Bh +
jb loc_42F7D1  +
cmp ecx 6Ch +
jbe loc_42F7B2  +
cmp ecx 6Eh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 179h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 213h +
ja loc_432D32  +
cmp ecx 210h +
jnb loc_42F7B2  +
sub ecx 1F8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E45h +
ja loc_432D59  +
cmp ecx 1E44h +
jnb loc_42F7B2  +
cmp ecx 1E23h +
jz loc_42F7B2  +
jbe loc_432D45  +
cmp ecx 1E27h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 1E30h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 21Fh +
jnz loc_42F7D1  +
nop   +
jmp loc_42F7B2  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E6Bh +
ja loc_432DD2  +
cmp ecx 1E6Ah +
jnb loc_42F7B2  +
sub ecx 1E58h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 10Eh +
jb loc_42F7D1  +
cmp ecx 10Fh +
jbe loc_42F7B2  +
cmp ecx 125h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 144h +
ja loc_432DFB  +
cmp ecx 143h +
jnb loc_42F7B2  +
sub ecx 13Dh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E90h +
jb loc_42F7D1  +
cmp ecx 1E91h +
jbe loc_42F7B2  +
cmp ecx 1E97h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 147h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0FCh +
ja loc_432E82  +
cmp ecx 0F9h +
jnb loc_42F7B2  +
cmp ecx 0EFh +
ja loc_432E6E  +
cmp ecx 0E8h +
jnb loc_42F7B2  +
sub ecx 0E0h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 75h +
jz loc_42F7B2  +
jb loc_42F7D1  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 117h +
ja loc_432F1A  +
cmp ecx 112h +
jnb loc_42F7B2  +
sub ecx 100h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0FCh +
ja loc_432F46  +
cmp ecx 0F9h +
jnb loc_42F7B2  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 231h +
ja loc_432F6E  +
cmp ecx 22Ah +
jnb loc_42F7B2  +
cmp ecx 20Fh +
ja loc_432F5A  +
cmp ecx 20Ch +
jnb loc_42F7B2  +
sub ecx 1D1h +
cmp ecx 0Bh +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 11Ah +
jb loc_42F7D1  +
cmp ecx 11Bh +
jbe loc_42F7B2  +
sub ecx 128h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 214h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E7Bh +
ja loc_4334DE  +
cmp ecx 1E72h +
jnb loc_42F7B2  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 13Eh +
ja loc_43330A  +
cmp ecx 13Dh +
jnb loc_42F7B2  +
cmp ecx 0D1h +
jz loc_42F7B2  +
ja loc_4332C6  +
cmp ecx 65h +
ja loc_43329C  +
cmp ecx 64h +
jnb loc_42F7B2  +
cmp ecx 4Ch +
jz loc_42F7B2  +
nop   +
jbe loc_43328B  +
cmp ecx 4Eh +
jz loc_42F7B2  +
nop   +
jb loc_42F7D1  +
sub ecx 54h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 171h +
ja loc_43312B  +
cmp ecx 168h +
jnb loc_42F7B2  +
cmp ecx 0EFh +
ja loc_4330BB  +
cmp ecx 0E8h +
jnb loc_42F7B2  +
cmp ecx 69h +
jz loc_42F7B2  +
ja loc_433095  +
cmp ecx 49h +
jz loc_42F7B2  +
nop   +
lea esi [esi+0] +
jbe loc_43307F  +
cmp ecx 55h +
jz loc_42F7B2  +
cmp ecx 65h +
nop   +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 45h +
jnz loc_42F7D1  +
nop   +
lea esi [esi+0] +
jmp loc_42F7B2  +
cmp ecx 0CFh +
ja loc_4331C4  +
cmp ecx 0C8h +
jnb loc_42F7B2  +
cmp ecx 75h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 11Bh +
ja loc_43319B  +
cmp ecx 11Ah +
jnb loc_42F7B2  +
cmp ecx 0F9h +
jb loc_42F7D1  +
cmp ecx 0FCh +
jbe loc_42F7B2  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E67h +
ja loc_4331D8  +
cmp ecx 1E64h +
jnb loc_42F7B2  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E17h +
ja loc_43322D  +
cmp ecx 1E14h +
jnb loc_42F7B2  +
cmp ecx 1DCh +
ja loc_433201  +
cmp ecx 1D3h +
jnb loc_42F7B2  +
sub ecx 1CFh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E96h +
jb loc_42F7D1  +
cmp ecx 1E97h +
jbe loc_42F7B2  +
sub ecx 1EB8h +
cmp ecx 0Fh +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 128h +
jb loc_42F7D1  +
cmp ecx 12Dh +
jbe loc_42F7B2  +
cmp ecx 130h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E6Ah +
jb loc_42F7D1  +
cmp ecx 1E6Bh +
jbe loc_42F7B2  +
cmp ecx 1E97h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 204h +
jb loc_42F7D1  +
cmp ecx 20Bh +
jbe loc_42F7B2  +
sub ecx 214h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EC5h +
ja loc_433527  +
cmp ecx 1EBAh +
jnb loc_42F7B2  +
cmp ecx 1E2Eh +
jb loc_42F7D1  +
cmp ecx 1E2Fh +
jbe loc_42F7B2  +
sub ecx 1E78h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 61h +
jz loc_42F7B2  +
cmp ecx 63h +
lea esi [esi+0] +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 44h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 75h +
nop   +
ja loc_43335E  +
cmp ecx 74h +
jnb loc_42F7B2  +
cmp ecx 6Ch +
jz loc_42F7B2  +
cmp ecx 6Eh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 10Fh +
ja loc_43347A  +
cmp ecx 10Eh +
jnb loc_42F7B2  +
cmp ecx 0EBh +
ja loc_433453  +
cmp ecx 0E8h +
jnb loc_42F7B2  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 217h +
ja loc_4333AE  +
cmp ecx 214h +
jnb loc_42F7B2  +
cmp ecx 171h +
ja loc_433386  +
cmp ecx 168h +
jnb loc_42F7B2  +
cmp ecx 148h +
ja loc_433372  +
cmp ecx 147h +
jnb loc_42F7B2  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 0C8h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 164h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1F9h +
ja loc_4333EA  +
cmp ecx 1F8h +
jnb loc_42F7B2  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1E6Bh +
ja loc_433412  +
cmp ecx 1E6Ah +
jnb loc_42F7B2  +
cmp ecx 1E17h +
ja loc_4333FE  +
cmp ecx 1E14h +
jnb loc_42F7B2  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 204h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1E44h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EC5h +
ja loc_4334A2  +
cmp ecx 1EBAh +
jnb loc_42F7B2  +
cmp ecx 1E78h +
jb loc_42F7D1  +
cmp ecx 1E7Bh +
jbe loc_42F7B2  +
cmp ecx 1E97h +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 0F1h +
jz loc_42F7B2  +
nop   +
jb loc_42F7D1  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 11Bh +
ja loc_4334B6  +
cmp ecx 11Ah +
jnb loc_42F7B2  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 139h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
sub ecx 1ECCh +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1ECCh +
jb loc_42F7D1  +
cmp ecx 1ED9h +
jbe loc_42F7B2  +
sub ecx 1EE4h +
cmp ecx 3 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1FF3h +
jz loc_42F7B2  +
cmp ecx 1FFCh +
jnz loc_42F7D1  +
jmp loc_42F7B2  +
cmp ecx 1EC8h +
jb loc_42F7D1  +
cmp ecx 1EC9h +
jbe loc_42F7B2  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42F7D1  +
jmp loc_42F7B2  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 0DCh +
mov edx eax +
mov esi [ebp+arg_8] +
mov [ebp+var_C0] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_98] eax +
lea eax [ebp+var_44] +
call sub_42DC90  +
mov eax [ebp+var_44] +
test esi esi +
mov edx [ebp+arg_C] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_40] +
mov [ebp+var_90] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_B0] eax +
setnz al  +
test edx edx +
setnz cl  +
mov [ebp+var_A6] al +
xor al cl +
mov [ebp+var_A5] cl +
mov [ebp+var_A7] al +
jnz loc_4341A2  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4335F6  +
cmp dword ptr [ebx] 100h +
mov eax 100h +
cmovnb eax [ebx] +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_4C] eax +
call sub_4529F0  +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
mov edi [ebp+var_C0] +
test edi edi +
jz loc_434134  +
mov edi [ebp+var_B0] +
mov eax 1 +
mov edx 0FFFFFFFFh +
mov [ebp+var_B4] esi +
mov [ebp+var_AC] ebx +
mov [ebp+var_B8] 0 +
mov ecx edi +
shl eax cl +
sub eax 1 +
cmp edi 1Fh +
mov edi edx +
cmovbe edi eax +
xor esi esi +
mov [ebp+var_BC] edi +
mov [ebp+var_A4] edi +
mov [ebp+var_7C] esi +
mov eax [ebp+var_7C] +
cmp [ebp+var_A6] 0 +
cmovnz eax [ebp+var_B4] +
mov [ebp+var_7C] eax +
mov eax [ebp+var_AC] +
mov esi [eax+4] +
movzx eax byte ptr [esi] +
cmp al 75h +
jz loc_433FA1  +
cmp al 55h +
jz loc_43367C  +
cmp al 4Ch +
mov ecx esi +
jnz loc_433683  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 52h +
jz loc_433EB7  +
cmp al 27h +
jnz loc_43409E  +
mov eax [ebp+var_7C] +
lea ebx [ecx+1] +
test eax eax +
jz loc_4336AE  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4336AE  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_AC] +
mov eax [eax] +
lea esi [esi+eax-1] +
mov edi esi +
lea esi [esi+0] +
cmp ebx edi +
jnb loc_43385A  +
cmp byte ptr [ebx] 5Ch +
mov esi ebx +
jnz loc_4336DA  +
jmp loc_43374D  +
cmp byte ptr [esi] 5Ch +
jz loc_433D60  +
add esi 1 +
cmp esi edi +
nop   +
jnz loc_4336D1  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_433715  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434043  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433745  +
cmp [ebp+var_8C] offset loc_42DD50 +
jnz loc_43413B  +
mov eax [ebp+var_7C] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E4] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E8] eax +
call sub_42F360  +
sub esp 8 +
cmp edi esi +
jbe loc_43385A  +
mov eax [ebp+arg_0] +
xor ecx ecx +
lea ebx [esi+1] +
test eax eax +
lea eax [ebp+var_50] +
cmovz eax ecx +
mov [ebp+var_88] eax +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433787  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_80] eax +
ja loc_43377E  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov [ebp+var_84] eax +
movzx ecx byte ptr [esi+1] +
lea eax [ecx-22h] +
cmp al 59h +
mov byte ptr [ebp+var_6D] cl +
ja loc_4337AE  +
movzx eax al +
jmp ds:off_4C878C[eax*4]  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4337E0  +
test byte ptr ds:word_4D0620[ecx+ecx] 0ACh +
jz loc_433D93  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aUnknownEscapeS +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
nop   +
mov eax [ebp+var_88] +
test eax eax +
jz loc_433816  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6D] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] 1 +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_433D70  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_43384F  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_84] eax +
ja loc_433834  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_84] +
mov [esp+0E8h+var_E4] eax +
call sub_42F310  +
sub esp 8 +
lea ebx [esi+2] +
cmp ebx edi +
jb loc_4336C8  +
add [ebp+var_B8] 1 +
mov eax [ebp+var_C0] +
add [ebp+var_AC] 8 +
add [ebp+var_B4] 0Ch +
cmp [ebp+var_B8] eax +
jnz loc_43364A  +
mov esi [ebp+var_7C] +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4338D4  +
mov ecx [ebp+var_98] +
mov eax [ecx+298h] +
lea edx [ecx+2A6h] +
mov ecx [ebp+var_B0] +
mov [esp+0E8h+var_E4] ecx +
lea ecx [ebp+var_50] +
mov [esp+0E8h+var_E8] ecx +
xor ecx ecx +
call sub_42DEF0  +
mov eax [ebp+var_48] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call sub_452A70  +
mov ecx [ebp+arg_0] +
mov [ebp+var_50] eax +
mov [ecx+4] eax +
mov eax [ebp+var_48] +
mov [ecx] eax +
test esi esi +
jz loc_43410C  +
mov eax [esi] +
cmp eax 60000000h +
ja loc_4338EC  +
mov edx [esi+4] +
add edx eax +
mov [esi] edx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] eax +
call sub_42F310  +
mov [ebp+var_A7] 1 +
movzx eax [ebp+var_A7] +
sub esp 8 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+var_7C] +
movzx eax [ebp+var_A5] +
mov edx [ebp+var_84] +
test ecx ecx +
setnz cl  +
cmp cl al +
mov byte ptr [ebp+var_94] cl +
jnz loc_434118  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_433E50  +
cmp byte ptr [ebp+var_94] 0 +
lea ebx [esi+2] +
jz loc_43396E  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_43396C  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov edx eax +
cmp edi ebx +
jbe loc_43407B  +
movzx eax byte ptr [esi+2] +
movzx eax ds:byte_4D2FE0[eax] +
cmp al 63h +
jz loc_43407B  +
xor esi esi +
xor ecx ecx +
mov [ebp+var_9C] edi +
mov edi edx +
mov [ebp+var_A0] esi +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_94] 0 +
jz loc_4339CA  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_4339C8  +
mov edi [ebp+var_7C] +
mov esi [edi+4] +
add esi edx +
mov edi esi +
mov esi [ebp+var_7C] +
mov [esi] edi +
mov edi edx +
mov edx ecx +
shl ecx 4 +
and edx 0F0000000h +
add ecx eax +
or [ebp+var_A0] edx +
cmp ebx [ebp+var_9C] +
jz loc_4339F3  +
movzx eax byte ptr [ebx] +
movzx eax ds:byte_4D2FE0[eax] +
cmp al 63h +
jnz loc_4339A0  +
mov edx [ebp+var_BC] +
xor eax eax +
mov esi [ebp+var_A0] +
mov [ebp+var_94] edi +
mov edi [ebp+var_9C] +
and edx ecx +
cmp ecx edx +
setnz al  +
or eax esi +
jnz loc_433FEF  +
mov esi [ebp+var_88] +
test esi esi +
jz loc_433A56  +
mov edx [ebp+var_98] +
mov eax [edx+298h] +
add edx 2A6h +
mov [esp+0E8h+var_E8] esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_42DEF0  +
cmp [ebp+var_A5] 0 +
jz loc_4336C0  +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_E4] eax +
call sub_42F310  +
sub esp 8 +
jmp loc_4336C0  +
mov byte ptr [ebp+var_6D] 0Bh +
jmp loc_4337E0  +
mov byte ptr [ebp+var_6D] 9 +
jmp loc_4337E0  +
mov byte ptr [ebp+var_6D] 0Dh +
jmp loc_4337E0  +
mov byte ptr [ebp+var_6D] 0Ah +
jmp loc_4337E0  +
mov byte ptr [ebp+var_6D] 0Ch +
jmp loc_4337E0  +
mov byte ptr [ebp+var_6D] 8 +
jmp loc_4337E0  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_433E79  +
mov byte ptr [ebp+var_6D] 7 +
jmp loc_4337E0  +
mov eax [ebp+var_80] +
mov [ebp+var_6D+1] ebx +
mov ebx [ebp+var_7C] +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_59+1] eax +
mov eax [ebp+var_84] +
test ebx ebx +
setnz cl  +
mov [ebp+var_30] 0 +
mov [ebp+var_54] eax +
movzx eax [ebp+var_A5] +
mov byte ptr [ebp+var_94] cl +
cmp cl al +
jnz loc_434157  +
add esi 2 +
cmp byte ptr [ebp+var_94] 0 +
mov [ebp+var_6D+1] esi +
jz loc_433B3E  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433B3B  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov [ebp+var_54] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_CC] eax +
lea eax [ebp+var_59+1] +
mov [esp+0E8h+var_D0] eax +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_D4] eax +
lea eax [ebp+var_38] +
mov [esp+0E8h+var_D8] eax +
lea eax [ebp+var_6D+1] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E8] eax +
call sub_42F3B0  +
mov eax [ebp+var_68] +
cmp eax 7Fh +
ja loc_433DD1  +
mov byte ptr [ebp+var_59] al +
mov ebx 1 +
lea edx [ebp+var_59] +
lea ecx [ebp+var_64] +
jmp loc_433B9A  +
movzx eax byte ptr [edx] +
add ecx 1 +
add edx 1 +
mov [ecx-1] al +
lea eax [ebp+var_59+1] +
cmp edx eax +
jb loc_433B97  +
mov eax [ebp+var_88] +
test eax eax +
jz loc_433BDC  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_64] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434020  +
cmp byte ptr [ebp+var_94] 0 +
jz loc_433C1A  +
test ebx ebx +
jle loc_433C1A  +
xor esi esi +
mov [ebp+var_88] edi +
mov edi esi +
mov esi [ebp+arg_C] +
mov eax [ebp+var_59+1] +
mov ecx esi +
add edi 1 +
mov edx [ebp+var_54] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
call sub_42F310  +
sub esp 8 +
cmp ebx edi +
jnz loc_433BF6  +
mov edi [ebp+var_88] +
mov ebx [ebp+var_6D+1] +
jmp loc_4336C0  +
mov eax [ebp+var_84] +
mov edx [ebp+var_7C] +
mov [ebp+var_94] eax +
movzx eax [ebp+var_A5] +
test edx edx +
setnz dl  +
mov byte ptr [ebp+var_9C] dl +
cmp dl al +
jnz loc_4340D4  +
xor edx edx +
cmp edi ebx +
jbe loc_433CFC  +
mov edx [ebp+var_84] +
lea eax [esi+4] +
mov [ebp+var_A0] eax +
xor eax eax +
mov [ebp+var_94] ecx +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_9C] 0 +
jz loc_433C98  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_433C98  +
mov esi [ebp+var_7C] +
mov ecx [esi+4] +
add ecx edx +
mov esi ecx +
mov ecx [ebp+var_7C] +
mov [ecx] esi +
mov ecx [ebp+var_94] +
cmp ebx edi +
lea eax [ecx+eax*8-30h] +
jz loc_433CC0  +
cmp ebx [ebp+var_A0] +
jz loc_433CC0  +
movzx ecx byte ptr [ebx] +
lea esi [ecx-30h] +
cmp esi 7 +
mov [ebp+var_94] ecx +
jbe loc_433C70  +
nop   +
mov [ebp+var_94] edx +
mov edx [ebp+var_A4] +
and edx eax +
cmp eax edx +
jz loc_433CFC  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aOctalEscapeSeq +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
mov edx [ebp+var_9C] +
mov ecx [ebp+var_88] +
test ecx ecx +
jz loc_433A56  +
mov esi [ebp+var_98] +
mov eax [esi+298h] +
add esi 2A6h +
mov [esp+0E8h+var_E8] ecx +
mov ecx edx +
mov edx esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_42DEF0  +
jmp loc_433A56  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_433E96  +
mov byte ptr [ebp+var_6D] 1Bh +
jmp loc_4337E0  +
cmp ebx esi +
jnb loc_433745  +
jmp loc_4336E2  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingEsca +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43C950  +
jmp loc_433816  +
lea ebx [ebp+var_38] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] offset a03o +
mov [esp+0E8h+var_E8] ebx +
call sub_47D150  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ebx +
mov [esp+0E8h+var_E0] offset aUnknownEscap_0 +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
jmp loc_4337E0  +
lea edx [ebp+var_59+1] +
mov ecx 1 +
mov [ebp+var_9C] edi +
jmp loc_433DE5  +
mov ecx ebx +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] bl +
lea esi [edx-1] +
lea ebx [ecx+1] +
ja loc_433DE1  +
movzx edi ds:byte_4C8A22[ebx] +
test eax edi +
jnz loc_433DE1  +
or al ds:byte_4C8A1D[ecx] +
cmp ebx 6 +
mov edi [ebp+var_9C] +
mov [edx-2] al +
jbe loc_434173  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+var_98] +
mov [esp+7Ch+var_74] offset aConvertingUcnT +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43C950  +
jmp loc_433C1A  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfXI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_9C] edx +
call sub_43C690  +
mov edx [ebp+var_9C] +
jmp loc_43394A  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfAI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
call sub_43C690  +
jmp loc_433ACC  +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aNonIsoStandard +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
jmp loc_433D56  +
mov eax [ebp+var_7C] +
add ecx 2 +
test eax eax +
jz loc_433EDF  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433EDF  +
mov edi [ebp+var_7C] +
mov edx [edi+4] +
add eax edx +
cmp eax 60000000h +
mov [edi] eax +
ja loc_433EDF  +
add eax edx +
mov [edi] eax +
mov eax [ebp+var_7C] +
mov edx ecx +
cmp byte ptr [edx] 28h +
jz loc_433F04  +
add edx 1 +
test eax eax +
jz loc_433EE4  +
mov ebx [eax] +
cmp ebx 60000000h +
ja loc_433EE4  +
add ebx [eax+4] +
mov [eax] ebx +
cmp byte ptr [edx] 28h +
jnz loc_433EE9  +
mov eax [ebp+var_7C] +
lea ebx [edx+1] +
test eax eax +
jz loc_433F1F  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433F1F  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
mov eax [ebp+var_AC] +
add esi [eax] +
mov eax ebx +
sub eax ecx +
lea edx [ebx+eax+1] +
cmp esi edx +
jb loc_433F37  +
not eax  +
add esi eax +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_433F6A  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434043  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_43385A  +
cmp [ebp+var_8C] offset loc_42DD50 +
jnz loc_434186  +
mov eax [ebp+var_7C] +
sub esi ebx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] eax +
call sub_42F360  +
sub esp 8 +
jmp loc_43385A  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433FB9  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433FB9  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 38h +
jnz loc_433683  +
mov ebx [ebp+var_7C] +
lea ecx [esi+2] +
test ebx ebx +
jz loc_433FE6  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433FE6  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
movzx eax byte ptr [esi+2] +
jmp loc_433683  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aHexEscapeSeque +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
mov edx [ebp+var_9C] +
mov ecx edx +
jmp loc_433A1C  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUc_0 +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43C950  +
jmp loc_433BDC  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingToEx +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43C950  +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call free  +
movzx eax [ebp+var_A7] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aXUsedWithNoFol +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
jmp loc_4336C0  +
cmp al 22h +
jz loc_433693  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_4340F0  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aMissingOpenQuo +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43C650  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_434061  +
jmp loc_43406C  +
mov [esp+0E8h+var_E0] offset aConvert_oct +
mov [esp+0E8h+var_E4] 540h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 64Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
mov [ebp+var_A7] 1 +
jmp loc_43406C  +
mov [esp+0E8h+var_E0] offset aConvert_hex +
mov [esp+0E8h+var_E4] 4F9h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
xor esi esi +
jmp loc_433884  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 66Ch +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
mov [esp+0E8h+var_E0] offset aConvert_ucn +
mov [esp+0E8h+var_E4] 48Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
sub edx 2 +
lea ecx [ebp+var_59+1] +
cmp edx ecx +
jnb loc_433BAA  +
jmp loc_433B92  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 641h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 5FCh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424080  +
nop   +
push esi  +
push ebx  +
mov ebx [esp+0F0h+var_D8] +
mov esi [esp+0F0h+var_D4] +
mov eax [esp+0F0h+var_E4] +
mov edx [esp+0F0h+var_E0] +
mov ecx [esp+0F0h+var_DC] +
mov [esp+0F0h+var_D8] 0 +
mov [esp+0F0h+var_DC] 0 +
mov [esp+0F0h+var_E0] esi +
mov [esp+0F0h+var_E4] ebx +
pop ebx  +
pop esi  +
jmp sub_433560  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
lea eax [esp+24h+var_10] +
mov ecx [esp+24h+arg_14] +
mov edx ebx +
call sub_42DC90  +
mov eax offset aExecutionChara +
cmp [esp+24h+var_10] offset loc_42DD50 +
jz loc_434230  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_10] +
mov esi [ebx+210h] +
mov dword ptr [ebx+210h] offset loc_42DD40 +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_C] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_14] +
mov [esp+24h+var_20] eax +
mov eax ebx +
call sub_433560  +
mov [ebx+210h] esi +
mov edx eax +
xor eax eax +
test dl dl +
mov edx offset aCpp_interpre_0 +
cmovz eax edx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_8] +
mov edx [esp+1Ch+arg_4] +
mov eax [ebx+298h] +
mov esi [ebx+120h] +
mov ebp [ebx+118h] +
mov edi [ebx+11Ch] +
mov [ebx+120h] eax +
mov eax [esp+1Ch+arg_C] +
mov dword ptr [ebx+118h] offset loc_42DD50 +
mov dword ptr [ebx+11Ch] 0FFFFFFFFh +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 3Eh +
call sub_433560  +
mov [ebx+118h] ebp +
mov [ebx+11Ch] edi +
mov [ebx+120h] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+84h] +
mov esi [esp+84h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+50h] 0 +
add al 89h +
retn 0E283h  +
***
sti   +
cmp dl 38h +
setnz bl  +
xor ecx ecx +
cmp al 3Ch +
movzx edx bl +
setz cl  +
lea edx [edx+ecx*2+2] +
cmp [esi+8] edx +
jz loc_4344A7  +
mov esi [esp+84h] +
mov ecx 1 +
mov [esp+4] eax +
lea eax [esp+4Ch] +
mov [esp] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
lea edx [esi+8] +
mov dword ptr [esp+8] 0 +
call sub_433560  +
test al al +
jz loc_4344C6  +
test bl bl +
jz loc_4344F0  +
mov eax [esp+84h] +
mov edx [esp+80h] +
movzx eax byte ptr [eax+4] +
mov ecx eax +
mov [esp+30h] eax +
mov eax [esp+4Ch] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov [esp+2Ch] eax +
mov eax [esp+80h] +
movzx eax byte ptr [eax+2A6h] +
mov [esp+3Bh] al +
lea eax [esp+54h] +
call sub_42DC90  +
mov esi [esp+80h] +
mov eax [esp+5Ch] +
mov esi [esi+298h] +
cmp eax 1Fh +
mov [esp+24h] eax +
mov [esp+18h] esi +
ja loc_434600  +
movzx ecx byte ptr [esp+24h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
cmp dword ptr [esp+18h] 1Fh +
mov [esp+3Ch] eax +
jbe loc_434613  +
mov ebp 0FFFFFFFFh +
mov eax [esp+24h] +
xor edx edx +
mov ecx [esp+28h] +
div  dword ptr [esp+18h] +
lea esi [eax+eax] +
sub ecx esi +
test eax eax +
mov [esp+34h] esi +
jz loc_434627  +
mov edi [esp+2Ch] +
lea esi [ecx+eax] +
xor ebx ebx +
mov [esp+1Ch] eax +
xor edx edx +
movzx eax byte ptr [esp+3Bh] +
add ecx edi +
add esi edi +
mov [esp+20h] ecx +
jmp loc_43449D  +
mov edi [esp+20h] +
movzx edi byte ptr [edi+edx] +
movzx ecx byte ptr [esp+18h] +
and edi ebp +
add edx 1 +
sub esi 1 +
shl ebx cl +
mov ecx ebx +
mov ebx edi +
or ebx ecx +
cmp edx [esp+1Ch] +
jz loc_434630  +
test al al +
jnz loc_434476  +
movzx edi byte ptr [esi-1] +
jmp loc_43447E  +
***
mov eax [esp+80h] +
mov dword ptr [esp+8] offset aEmptyCharacter +
mov dword ptr [esp+4] 3 +
mov [esp] eax +
call sub_43C650  +
mov eax [esp+88h] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
xor edx edx +
mov edi [esp+4Ch] +
mov esi [esp+50h] +
mov ecx [eax+298h] +
mov eax [eax+29Ch] +
mov [esp+1Ch] eax +
div  ecx +
cmp ecx 1Fh +
mov [esp+18h] eax +
ja loc_4345F3  +
mov ebp 1 +
shl ebp cl +
sub ebp 1 +
sub edi 1 +
jz loc_434792  +
xor edx edx +
xor eax eax +
jmp loc_434542  +
mov edx ebx +
movzx ebx byte ptr [esi+eax] +
and ebx ebp +
cmp ecx 1Fh +
ja loc_434551  +
shl edx cl +
or ebx edx +
add eax 1 +
cmp eax edi +
jnz loc_434540  +
cmp [esp+18h] edi +
jb loc_4346B7  +
cmp edi 1 +
jbe loc_434730  +
mov eax [esp+80h] +
mov ecx [esp+1Ch] +
cmp byte ptr [eax+259h] 0 +
jnz loc_434764  +
xor eax eax +
mov byte ptr [esp+18h] 0 +
cmp ecx 1Fh +
ja loc_4345B7  +
mov edx 1 +
mov ebp edx +
shl ebp cl +
sub ebp 1 +
cmp byte ptr [esp+18h] 0 +
jnz loc_4346B0  +
sub ecx 1 +
shl edx cl +
test ebx edx +
jz loc_4346B0  +
not ebp  +
or ebx ebp +
mov ecx [esp+88h] +
mov [ecx] edi +
mov edi [esp+8Ch] +
mov [edi] eax +
mov edi [esp+84h] +
mov eax ebx +
cmp [edi+0Ch] esi +
jz loc_4344E2  +
mov [esp] esi +
mov [esp+18h] ebx +
call free  +
mov eax [esp+18h] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp 0FFFFFFFFh +
jmp loc_43452A  +
***
cmp dword ptr [esp+18h] 1Fh +
mov dword ptr [esp+3Ch] 0FFFFFFFFh +
ja loc_434434  +
movzx ecx byte ptr [esp+18h] +
mov eax 1 +
shl eax cl +
lea ebp [eax-1] +
jmp loc_434439  +
***
xor ebx ebx +
lea esi [esi+0] +
mov eax [esp+28h] +
cmp [esp+34h] eax +
mov esi [esp+2Ch] +
jb loc_434700  +
mov eax [esp+30h] +
sub eax 3Ah +
cmp dword ptr [esp+24h] 1Fh +
ja loc_43466D  +
cmp eax 1 +
jbe loc_434669  +
mov edi [esp+80h] +
cmp byte ptr [edi+2A5h] 0 +
jz loc_434747  +
and ebx [esp+3Ch] +
cmp eax 1 +
jbe loc_4346A1  +
mov eax [esp+80h] +
cmp byte ptr [eax+2A5h] 0 +
jnz loc_4346A1  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+88h] +
mov dword ptr [eax] 1 +
jmp loc_4345C9  +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_43468F  +
***
and ebx ebp +
jmp loc_4345B7  +
***
mov eax [esp+80h] +
mov dword ptr [esp+8] offset aCharacterConst +
mov dword ptr [esp+4] 0 +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_43C650  +
mov ecx [esp+1Ch] +
cmp dword ptr [esp+18h] 1 +
jbe loc_434728  +
mov eax [esp+80h] +
mov esi [esp+50h] +
mov edi [esp+18h] +
mov ecx [eax+29Ch] +
jmp loc_434583  +
***
mov eax [esp+80h] +
mov dword ptr [esp+8] offset aCharacterConst +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_43C650  +
mov esi [esp+50h] +
jmp loc_434642  +
***
mov esi [esp+50h] +
mov edi [esp+18h] +
mov eax [esp+80h] +
movzx eax byte ptr [eax+2A4h] +
mov [esp+18h] al +
jmp loc_43458A  +
***
mov edx [esp+24h] +
sub edx 1 +
bt ebx edx +
jnb loc_434669  +
mov eax [esp+3Ch] +
not eax  +
or ebx eax +
jmp loc_434682  +
***
mov dword ptr [esp+8] offset aMultiCharacter +
mov dword ptr [esp+4] 5 +
mov [esp] eax +
call sub_43C690  +
mov eax [esp+80h] +
mov esi [esp+50h] +
mov ecx [eax+29Ch] +
jmp loc_434583  +
***
xor ebx ebx +
jmp loc_434730  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_8] +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+48h+var_29] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_8] +
and [ebp+var_30] 0FFFFFFF0h +
test eax eax +
jz loc_4349AC  +
mov eax [ebp+var_30] +
xor edi edi +
mov [ebp-2Ch] eax +
jmp loc_4347F7  +
mov esi [ebp-2Ch] +
add edi 1 +
mov [esi] al +
lea eax [esi+1] +
mov [ebp-2Ch] eax +
cmp [ebp+arg_8] edi +
jbe loc_4348C6  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax+edi] +
cmp al 5Ch +
jnz loc_4347E0  +
mov ecx [ebp+arg_4] +
lea esi [edi+2] +
lea eax [edi+1] +
cmp byte ptr [ecx+edi+1] 75h +
setnz cl  +
cmp [ebp+arg_8] esi +
movzx ecx cl +
lea ecx ds:4[ecx*4] +
jbe loc_434989  +
mov edx [ebp+arg_4] +
movzx ebx byte ptr [edx+edi+2] +
test byte ptr [ebx+ebx+4D0621h] 1 +
jz loc_434989  +
xor edx edx +
jmp loc_434857  +
test ecx ecx +
jz loc_434870  +
mov ebx [ebp+arg_4] +
movzx ebx byte ptr [ebx+eax] +
test byte ptr [ebx+ebx+4D0621h] 1 +
jz loc_434870  +
mov esi eax +
movzx eax ds:byte_4D2FE0[ebx] +
shl edx 4 +
sub ecx 1 +
add edx eax +
lea eax [esi+1] +
cmp [ebp+arg_8] eax +
mov edi eax +
ja loc_434840  +
cmp edx 24h +
jnz loc_434886  +
mov eax [ebp-2Ch] +
mov byte ptr [eax] 24h +
add eax 1 +
mov [ebp-2Ch] eax +
jmp loc_4347EE  +
cmp edx 7Fh +
ja loc_4348F8  +
mov eax [ebp+var_30] +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jnz loc_4349A1  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+arg_0] +
mov [esp-24h+arg_24] offset aConvertingUcnT +
mov [esp-24h+arg_20] 3 +
mov [esp-24h+arg_1C] eax +
call sub_43C950  +
mov eax [ebp-2Ch] +
sub eax [ebp+var_30] +
mov edi [ebp+arg_0] +
mov edx [edi+234h] +
mov [esp-24h+arg_24] eax +
mov eax [ebp+var_30] +
mov [esp-24h+arg_28] 1 +
mov [esp-24h+arg_1C] edx +
mov [esp-24h+arg_20] eax +
call sub_43CE00  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_19+1] +
mov edi 1 +
mov [ebp+var_34] eax +
jmp loc_434909  +
mov edi ebx +
mov ecx eax +
mov ebx edx +
and ebx 3Fh +
shr edx 6 +
or ebx 0FFFFFF80h +
cmp edx 3Eh +
mov [ecx-1] bl +
lea eax [ecx-1] +
lea ebx [edi+1] +
ja loc_434905  +
movzx esi ds:byte_4C8A22[ebx] +
test edx esi +
jnz loc_434905  +
or dl ds:byte_4C8A1D[edi] +
lea esi [ecx-2] +
mov eax [ebp+var_34] +
mov [ebp+var_34] esi +
mov [ecx-2] dl +
mov edx [ebp+var_30] +
sub edx [ebp-2Ch] +
add edx [ebp+arg_8] +
cmp edx ebx +
jb loc_43489F  +
lea edi [ebp+var_19+1] +
cmp esi edi +
jnb loc_434982  +
mov edx [ebp+var_34] +
mov ecx [ebp-2Ch] +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx-1] +
add ecx 1 +
lea edi [ebp+var_19+1] +
cmp edx edi +
mov [ecx-1] bl +
jnz loc_434960  +
mov edi [ebp+var_34] +
lea edx [ebp+var_19+2] +
add edi 1 +
sub edx edi +
add [ebp-2Ch] edx +
mov edi eax +
jmp loc_4347EE  +
mov esi eax +
mov eax [ebp+var_30] +
xor edx edx +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jz loc_43489F  +
lea eax [ebp+var_19] +
mov [ebp+var_34] eax +
lea eax [esi+1] +
jmp loc_434957  +
xor eax eax +
jmp loc_4348CC  +
***
push edi  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
mov [ecx+8] ebx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42C160  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] eax +
call sub_42C5F0  +
mov [esp+18h+var_18] ebx +
mov [esi] eax +
mov [esp+18h+var_14] eax +
call sub_42BE00  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
mov [esi+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov edx [ecx] +
cmp edx 60000000h +
ja loc_434BE1  +
mov eax [ecx+4] +
add eax edx +
mov [ecx] eax +
mov eax edx +
retn   +
***
mov eax [esp+8] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D67Fh +
mov eax 1 +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
test eax eax +
jnz loc_434C29  +
jmp loc_434C42  +
mov ebx [ebx] +
add esi 1 +
test ebx ebx +
jz loc_434C42  +
cmp byte ptr [ebx+8] 0 +
jz loc_434C20  +
mov eax [ebx+0Ch] +
call sub_434C10  +
mov ebx [ebx] +
add esi eax +
add esi 1 +
test ebx ebx +
jnz loc_434C29  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_4414B0  +
movzx ecx byte ptr [eax+4] +
cmp cl 35h +
jz loc_434CA0  +
test byte ptr [eax+6] 10h +
jnz loc_434D20  +
cmp cl 16h +
jz loc_434CD4  +
mov [esp+18h+var_10] offset aMacroNamesMust +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43C650  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
mov eax esi +
test al al +
jz loc_434CC5  +
cmp [ebx+2ACh] edx +
jz loc_434D48  +
cmp [ebx+2BCh] edx +
jz loc_434CFE  +
cmp [ebx+2C0h] edx +
jz loc_434CFE  +
xor eax eax +
test byte ptr [edx+14h] 80h +
cmovz eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aNoMacroNameGiv +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_43C650  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset a__has_include_ +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43C650  +
xor eax eax +
jmp loc_434C93  +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+18h+var_10] offset aSCannotBeUsedA +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_43C650  +
xor eax eax +
jmp loc_434C93  +
mov [esp+18h+var_10] offset aDefinedCannotB +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43C650  +
xor eax eax +
jmp loc_434C93  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_4414B0  +
mov ecx eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_434DA0  +
xor edx edx +
cmp al 16h +
jnz loc_434DA6  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ecx+8] 1 +
jz loc_434DD8  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] ebx +
call sub_4416D0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aInvalidFlagSIn +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_43C650  +
add esp 14h +
xor edx edx +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+0Ch] +
movzx edx byte ptr [eax] +
sub edx 30h +
cmp edx esi +
jbe loc_434DA6  +
cmp edx 4 +
ja loc_434DA6  +
cmp edx 4 +
jnz loc_434DF4  +
cmp esi 3 +
jnz loc_434DA6  +
cmp edx 2 +
jnz loc_434D91  +
test esi esi +
jnz loc_434DA6  +
lea esi [esi+0] +
jmp loc_434D91  +
***
mov ebx eax +
sub esp 14h +
mov [esp+14h+var_14] ebx +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_434E17  +
cmp dl 16h +
jz loc_434E83  +
cmp dl 14h +
jnz loc_434E52  +
mov [esp+14h+var_14] ebx +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
mov esi eax +
cmp dl 53h +
jz loc_434E32  +
cmp dl 16h +
jz loc_434EA1  +
sub edx 3Eh +
cmp dl 4 +
jbe loc_434E60  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ebx +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_434E60  +
cmp dl 16h +
jz loc_434EB7  +
cmp dl 15h +
jnz loc_434E52  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_439600  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_434E2D  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_439600  +
movzx edx byte ptr [esi+4] +
jmp loc_434E4A  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_439600  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_434E76  +
***
sub esp 18h +
mov eax [eax+4Ch] +
mov edx [eax+4] +
test edx edx +
jz loc_434F02  +
mov [esp+18h+var_18] ebx +
call sub_439470  +
mov eax [ebx+4Ch] +
mov eax [eax+4] +
test eax eax +
jnz loc_434EF0  +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_434F1E  +
nop   +
mov [esp+18h+var_18] ebx +
call sub_4414B0  +
cmp byte ptr [eax+4] 16h +
jnz loc_434F10  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov byte ptr [esi+0Fh] 1 +
jmp loc_434F4E  +
cmp dl 35h +
jnz loc_434F70  +
mov ebx [eax+8] +
test byte ptr [ebx+14h] 80h +
jz loc_434F92  +
mov [esp+14h+var_14] esi +
call sub_4414B0  +
movzx edx byte ptr [eax+4] +
cmp dl 16h +
jnz loc_434F40  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] offset aInvalidPragmaG +
mov [esp+14h+var_10] 3 +
call sub_43C650  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_434FAD  +
mov [esp+14h+var_14] ebx +
call sub_43B520  +
or word ptr [ebx+14h] 280h +
jmp loc_434F4E  +
mov eax [ebx] +
mov [esp+14h+var_C] offset aPoisoningExist +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] eax +
call sub_43C650  +
jmp loc_434F9D  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
add byte ptr [ebx+10h] 1 +
mov dword ptr [edx] 0 +
mov [esp+48h+var_48] ebx +
mov [ebp+var_28] edx +
call sub_43B4A0  +
mov [ebp+var_20] eax +
movzx eax byte ptr [eax+4] +
cmp al 16h +
jz loc_4351F2  +
cmp al 35h +
mov eax [ebp+var_20] +
jnz loc_4350E0  +
mov edi [eax] +
mov [esp+48h+var_48] ebx +
call sub_43B4A0  +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_435114  +
cmp esi 4 +
jz loc_4351A3  +
cmp esi 11h +
jnz loc_435034  +
cmp al 16h +
jz loc_435082  +
mov [esp+48h+var_38] offset aMissingAfterPr +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43C750  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_4351D5  +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [eax+4] edi +
mov edi [ebp+var_28] +
mov dword ptr [eax] 0 +
mov [edi] eax +
mov ecx [ebp+var_20] +
mov eax [ecx+8] +
mov edx [eax+4] +
lea eax [edx+1Fh] +
lea edi [edx+1] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea esi [esp-4+arg_1F] +
and esi 0FFFFFFF0h +
mov byte ptr [esi] 23h +
mov eax [ecx+8] +
mov ecx [eax] +
lea eax [esi+1] +
mov [esp-4+arg_4] edx +
mov [esp+0] eax +
mov [esp-4+arg_0] ecx +
call memcpy  +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_0] esi +
mov [esp+0] ebx +
call sub_441B20  +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_38] offset aPredicateMustB +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 3 +
call sub_43C750  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 18h +
xor edi edi +
lea eax [ebx+24h] +
mov [ebp+var_2C] eax +
mov [ebp+var_1C] esi +
jmp loc_435154  +
mov esi [eax] +
mov edx edi +
shl edx 4 +
add edx ecx +
test edi edi +
mov [edx+8] esi +
mov esi [eax+4] +
mov [edx+0Ch] esi +
mov esi [eax+8] +
mov [edx+10h] esi +
mov eax [eax+0Ch] +
mov [edx+14h] eax +
jnz loc_43514D  +
and word ptr [ecx+0Eh] 0FFFEh +
add [ebp+var_1C] 10h +
add edi 1 +
mov [esp+48h+var_48] ebx +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 15h +
jz loc_435066  +
cmp dl 16h +
jz loc_4351B8  +
mov edx [ebx+24h] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
sub edx ecx +
cmp edx [ebp+var_1C] +
jnb loc_435126  +
mov [ebp+var_24] eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] 18h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_43EF60  +
mov edx [ebx+24h] +
mov eax [ebp+var_24] +
mov ecx [edx+8] +
jmp loc_435126  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_439600  +
jmp loc_435082  +
mov [esp+48h+var_40] offset aMissingToCompl +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43C650  +
jmp loc_435058  +
mov [esp-4+arg_4] offset aPredicateSAnsw +
mov [esp-4+arg_0] 3 +
mov [esp+0] ebx +
call sub_43C650  +
jmp loc_435058  +
mov [esp+48h+var_40] offset aAssertionWitho +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43C650  +
xor eax eax +
jmp loc_43505A  +
***
jmp sub_435220  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [eax+18h] +
mov [esp+1Ch+var_10] edx +
lea edx [eax+18h] +
mov [esp+1Ch+var_14] edx +
test ebp ebp +
jnz loc_435250  +
jmp loc_435297  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
mov ebp [eax] +
mov [esp+1Ch+var_14] eax +
test ebp ebp +
jz loc_435297  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebp+4] +
cmp eax [ecx+4] +
jnz loc_435240  +
test eax eax +
jz loc_435297  +
mov eax [esp+1Ch+var_10] +
lea edi [ebp+8] +
xor ebx ebx +
lea esi [eax+8] +
jmp loc_435280  +
mov eax [ebp+4] +
add ebx 1 +
add edi 10h +
add esi 10h +
cmp eax ebx +
jbe loc_435293  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_43E880  +
test eax eax +
jnz loc_435270  +
mov eax [ebp+4] +
cmp eax ebx +
jnz loc_435240  +
mov eax [esp+1Ch+var_14] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0F0h] +
mov edx [esp+30h+arg_0] +
mov ebp [eax-10h] +
xor eax eax +
test edx edx +
jz loc_435394  +
mov eax [ebx+50h] +
mov eax [eax+4] +
add byte ptr [ebx+10h] 1 +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_14] ecx +
call sub_43EC50  +
mov ecx [esp+30h+var_14] +
sub byte ptr [ebx+10h] 1 +
mov [esp+30h+var_20] offset aS_11 +
test ecx ecx +
mov [esp+30h+var_24] 0 +
mov edi eax +
setnz al  +
cmp esi 1 +
mov [esp+30h+var_1C] edi +
mov [esp+30h+var_28] ebp +
jz loc_435414  +
test esi esi +
jz loc_4353F4  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] ebx +
call sub_43C750  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_4353D8  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_43C7A0  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_4353D4  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_43C840  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov eax [esp+4] +
mov ecx 12h +
mov edx 1 +
mov dword ptr [esp+4] 1 +
jmp sub_435370  +
***
mov eax [esp+4] +
xor ecx ecx +
mov edx 3 +
mov dword ptr [esp+4] 1 +
jmp sub_435370  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_20] 0 +
add byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_43B510  +
mov edi eax +
mov eax [eax] +
mov edx [edi+0Ch] +
cmp byte ptr [edi+4] 35h +
mov [esp+4Ch+var_1C] eax +
mov eax [edi+4] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
mov eax [edi+8] +
mov [esp+4Ch+var_14] eax +
jz loc_435508  +
cmp dword ptr [esi+1FCh] 0 +
mov eax 1 +
jz loc_4354F6  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_439600  +
mov edx [esi+20h] +
mov eax [esi+1FCh] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edx +
call eax  +
movzx eax byte ptr [esi+10h] +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esi+1DCh] +
test ebx ebx +
jnz loc_43551A  +
jmp loc_4354CA  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4354CA  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_435514  +
cmp byte ptr [ebx+8] 0 +
jz loc_435562  +
movzx edx byte ptr [ebx+0Bh] +
test dl dl +
jz loc_435534  +
sub byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_30] edx +
call sub_43B4A0  +
mov edx [esp+4Ch+var_30] +
cmp byte ptr [eax+4] 35h +
mov ebp eax +
jz loc_4355F0  +
xor ebx ebx +
test dl dl +
jz loc_43555A  +
add byte ptr [esi+10h] 1 +
test ebx ebx +
jz loc_435617  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_4355A7  +
mov eax [esp+4Ch+var_20] +
mov byte ptr [esi+58h] 51h +
mov [esi+54h] eax +
movzx eax word ptr [edi+6] +
mov [esi+5Ah] ax +
mov eax [ebx+0Ch] +
mov byte ptr [esi+18h] 1 +
mov [esi+5Ch] eax +
movzx eax byte ptr [ebx+0Bh] +
mov [esi+19h] al +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_435599  +
add eax 1 +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1E0h] +
test eax eax +
jz loc_4355C2  +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] esi +
call eax  +
cmp byte ptr [ebx+0Bh] 0 +
jz loc_4355CC  +
sub byte ptr [esi+10h] 1 +
mov eax [ebx+0Ch] +
mov [esp+4Ch+var_4C] esi +
call eax  +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_435596  +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+0Ch] +
mov eax [eax+8] +
test ebx ebx +
jnz loc_43560A  +
jmp loc_435552  +
mov ebx [ebx] +
test ebx ebx +
jz loc_435552  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_435600  +
jmp loc_435552  +
cmp dword ptr [esi+1FCh] 0 +
jz loc_4354F6  +
mov eax [esi+4Ch] +
mov eax [eax+4] +
test eax eax +
jz loc_4356A0  +
mov [esp+4Ch+var_4C] 20h +
call sub_4529F0  +
mov edx [esp+4Ch+var_1C] +
mov [eax] edx +
mov edx [esp+4Ch+var_18] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_14] +
or word ptr [eax+6] 400h +
mov [eax+8] edx +
mov edx [esp+4Ch+var_10] +
mov [eax+0Ch] edx +
mov edx [ebp+0] +
mov [eax+10h] edx +
mov edx [ebp+4] +
mov [eax+14h] edx +
mov edx [ebp+8] +
mov [eax+18h] edx +
mov edx [ebp+0Ch] +
or word ptr [eax+16h] 400h +
mov [eax+1Ch] edx +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_439200  +
jmp loc_4354E4  +
mov eax 2 +
jmp loc_4354D8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [eax] +
mov [esp+2Ch+var_14] ecx +
mov ecx [eax+1BCh] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_1C] ebx +
mov ebx [eax+1C0h] +
mov edx ebx +
sub edx ecx +
cmp edx 13h +
jbe loc_435790  +
mov edx [eax+1B8h] +
add ecx 14h +
mov [eax+1BCh] ecx +
cmp ecx edx +
jz loc_4357D0  +
mov edi [eax+1C8h] +
mov esi ebx +
add ecx edi +
not edi  +
and ecx edi +
mov edi [eax+1B4h] +
mov ebp ecx +
mov [eax+1BCh] ecx +
sub ebp edi +
sub esi edi +
cmp ebp esi +
jbe loc_435721  +
mov [eax+1BCh] ebx +
mov ecx ebx +
mov [eax+1B8h] ecx +
mov esi [esp+2Ch+var_1C] +
mov ecx [eax+20h] +
mov [edx+4] ecx +
mov ecx [esi+34h] +
mov [edx] ecx +
mov ecx 1 +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43574A  +
mov ebx [esp+2Ch+var_18] +
test ebx ebx +
setz cl  +
mov [edx+0Ch] cl +
mov esi [esp+2Ch+var_14] +
cmp byte ptr [eax+0Ah] 0 +
setnz byte ptr [edx+0Dh]  +
cmp byte ptr [eax+0ECh] 0 +
mov [edx+10h] esi +
jz loc_43576F  +
mov ecx [eax+0E4h] +
test ecx ecx +
jz loc_4357C0  +
mov dword ptr [edx+8] 0 +
movzx ebx byte ptr [esp+2Ch+var_18] +
mov [eax+0Ah] bl +
mov eax [esp+2Ch+var_1C] +
mov [eax+34h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1B0h] +
mov [esp+2Ch+var_28] 14h +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call sub_458E00  +
mov eax [esp+2Ch+var_10] +
mov ecx [eax+1BCh] +
mov ebx [eax+1C0h] +
jmp loc_4356DE  +
mov ecx [esp+2Ch+arg_0] +
mov [edx+8] ecx +
jmp loc_435776  +
or byte ptr [eax+1D8h] 2 +
jmp loc_4356F5  +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_435809  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] ebx +
call sub_444970  +
xor eax 1 +
movzx edx al +
mov eax [ebx+0E8h] +
mov ecx 4 +
mov [esp+18h+arg_0] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_4356B0  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_434C50  +
test eax eax +
mov esi eax +
jz loc_435895  +
mov eax [ebx+21Ch] +
cmp byte ptr [ebx+24Ch] 0 +
setz byte ptr [ebx+0Dh]  +
test eax eax +
jz loc_435865  +
mov [esp+18h+var_18] ebx +
call eax  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_43B640  +
test al al +
jz loc_43588F  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_43588F  +
mov edx [ebx+20h] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] edx +
call eax  +
and word ptr [esi+14h] 0DFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
sub esp 18h +
cmp byte ptr [eax+270h] 0 +
jz loc_4359C0  +
cmp byte ptr [eax+18h] 0 +
jnz loc_435989  +
sub byte ptr [eax+10h] 1 +
cmp dword ptr [ebx+50h] offset off_4CCEC0 +
jz loc_43599A  +
mov [esp+18h+var_18] ebx +
call sub_447CE0  +
cmp byte ptr [ebx+24Bh] 0 +
mov byte ptr [ebx+8] 0 +
mov byte ptr [ebx+0Ch] 0 +
setz byte ptr [ebx+0Dh]  +
mov byte ptr [ebx+0Bh] 0 +
mov dword ptr [ebx+50h] 0 +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [eax+18h] 0 +
jnz loc_43599A  +
test edx edx +
jz loc_43599A  +
call sub_434EE0  +
mov eax [ebx+10Ch] +
test eax eax +
jnz loc_43599A  +
lea eax [ebx+0F4h] +
mov [ebx+104h] eax +
mov eax [ebx+0FCh] +
mov [ebx+0F0h] eax +
jmp loc_43599A  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
test edx edx +
jnz loc_435A44  +
jmp loc_435A60  +
mov edi [esi] +
add esi 4 +
mov [esp+28h+var_28] edi +
call strlen  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_20] eax +
call sub_441B20  +
mov [ebx+4] eax +
mov eax [esi-4] +
mov [esp+28h+var_28] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jz loc_435A60  +
cmp byte ptr [ebx+8] 0 +
jz loc_435A13  +
mov edx [ebx+0Ch] +
mov ecx esi +
mov eax ebp +
call sub_435A00  +
mov esi eax +
jmp loc_435A13  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
test eax eax +
jnz loc_435AA8  +
jmp loc_435ABC  +
mov eax [ebx+4] +
lea edi [esi+4] +
mov edx [eax+4] +
mov eax [eax] +
lea ecx [edx+1] +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_45C250  +
mov [esi] eax +
mov ebx [ebx] +
test ebx ebx +
jz loc_435AC0  +
mov esi edi +
cmp byte ptr [ebx+8] 0 +
jz loc_435A80  +
mov eax [ebx+0Ch] +
mov edx esi +
call sub_435A70  +
mov esi eax +
jmp loc_435A80  +
mov edi edx +
nop   +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_435B15  +
test dl dl +
mov esi ecx +
mov [esp+14h+var_14] ebx +
jnz loc_435B20  +
call sub_4414B0  +
cmp byte ptr [eax+4] 16h +
jz loc_435B15  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+14h+var_C] offset aExtraTokensAtE +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_43C6D0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_43B4A0  +
jmp loc_435AF1  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_43B4A0  +
cmp byte ptr [eax+4] 3Eh +
jnz loc_435B72  +
mov edx [ebx+1F8h] +
test edx edx +
jz loc_435B63  +
mov ecx [ebx+20h] +
add eax 8 +
mov [esp+8] eax +
mov [esp] ebx +
mov [esp+4] ecx +
call edx  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_435AD0  +
***
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp] ebx +
mov dword ptr [esp+8] offset aInvalidSDirect +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43C650  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_435AD0  +
***
push ebp  +
mov ecx 10h +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
lea edx [esp+1Ch] +
mov eax esi +
call sub_434FD0  +
test eax eax +
mov ebx eax +
jz loc_435C36  +
mov edx [esp+1Ch] +
mov dword ptr [edx] 0 +
movzx eax byte ptr [eax+14h] +
mov edi edx +
and eax 3Fh +
cmp al 2 +
jz loc_435C48  +
mov eax [edi+4] +
shl eax 4 +
lea ebp [eax+8] +
mov eax [esi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_435C40  +
mov [esp] ebp +
call eax  +
mov [esp+4] edi +
mov [esp+8] ebp +
mov [esp] eax +
mov [esp+1Ch] eax +
call memcpy  +
mov edi [esp+1Ch] +
movzx edx byte ptr [ebx+14h] +
xor ecx ecx +
mov eax esi +
mov [ebx+18h] edi +
and edx 0FFFFFFC0h +
or edx 2 +
mov [ebx+14h] dl +
xor edx edx +
call sub_435AD0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+24h] +
add [eax+8] ebp +
jmp loc_435C1B  +
***
mov eax ebx +
call sub_435220  +
mov eax [eax] +
test eax eax +
jz loc_435C78  +
mov eax [ebx] +
mov dword ptr [esp+8] offset aSReAsserted +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
add eax 1 +
mov [esp+0Ch] eax +
call sub_43C650  +
jmp loc_435C36  +
***
mov edi [esp+1Ch] +
mov eax [ebx+18h] +
mov [edi] eax +
jmp loc_435BE8  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
lea esi [esi+0] +
mov [esp+38h+var_38] ebx +
call sub_43B4A0  +
cmp byte ptr [eax+4] 53h +
jz loc_435CA0  +
mov edx eax +
mov ecx [eax] +
mov eax [esp+38h+arg_0] +
mov [eax] ecx +
movzx eax byte ptr [edx+4] +
cmp al 3Eh +
jz loc_435D13  +
cmp al 44h +
jz loc_435D1B  +
cmp al 3 +
jnz loc_435D80  +
mov eax ebx +
nop   +
call sub_4352B0  +
cmp dword ptr [ebx+50h] offset off_4CCF44 +
mov dword ptr [edi] 1 +
mov esi eax +
jz loc_435D73  +
test ebp ebp +
jz loc_435CFB  +
cmp byte ptr [ebx+24Bh] 0 +
jz loc_435DB7  +
mov eax ebx +
xor ecx ecx +
mov edx 1 +
call sub_435AD0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
cmp byte ptr [eax] 52h +
jz loc_435D80  +
mov eax [edx+8] +
mov [esp+38h+var_28] edx +
sub eax 1 +
mov [esp+38h+var_38] eax +
call sub_4529F0  +
mov edx [esp+38h+var_28] +
mov esi eax +
mov eax [edx+8] +
lea ecx [eax-2] +
mov eax [edx+0Ch] +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] esi +
add eax 1 +
mov [esp+38h+var_34] eax +
call memcpy  +
mov edx [esp+38h+var_28] +
mov eax [edx+8] +
mov byte ptr [esi+eax-2] 0 +
xor eax eax +
cmp byte ptr [edx+4] 44h +
setz al  +
cmp dword ptr [ebx+50h] offset off_4CCF44 +
mov [edi] eax +
jnz loc_435CEA  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
cmp eax offset off_4CCF44 +
jz loc_435E84  +
mov eax [eax+4] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aSExpectsFilena +
mov [esp+38h+var_34] 3 +
call sub_43C650  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] 20h +
call sub_4529F0  +
mov [esp+38h+var_28] eax +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_435E80  +
mov [esp+38h+var_24] 8 +
xor edi edi +
mov [esp+38h+var_38] ebx +
call sub_4414B0  +
movzx edx byte ptr [eax+4] +
mov ecx eax +
cmp dl 16h +
jz loc_435E65  +
cmp dl 4Fh +
jz loc_435E20  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+38h+var_30] offset aExtraTokensAtE +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
call sub_43C650  +
jmp loc_435DE1  +
lea edx [edi+1] +
cmp edx [esp+38h+var_24] +
jnb loc_435E34  +
mov eax [esp+38h+var_28] +
mov [eax+edi*4] ecx +
mov edi edx +
jmp loc_435DE1  +
shl [esp+38h+var_24] 1 +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_1C] edx +
shl eax 2 +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+var_28] +
mov [esp+38h+var_38] eax +
call sub_452A70  +
mov edx [esp+38h+var_1C] +
mov ecx [esp+38h+var_20] +
mov [esp+38h+var_28] eax +
jmp loc_435E29  +
shl edi 2 +
mov eax [esp+38h+var_28] +
mov dword ptr [eax+edi] 0 +
mov [ebp+0] eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_435E68  +
mov eax offset aPragmaDependen +
jmp loc_435D91  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp byte ptr [eax+24Bh] 0 +
lea ecx [esp+44h+var_1C] +
lea edx [esp+44h+var_20] +
setz byte ptr [eax+0Dh]  +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
mov eax ebx +
mov [esp+44h+var_1C] 0 +
call sub_435C90  +
test eax eax +
mov esi eax +
jz loc_435F46  +
cmp byte ptr [eax] 0 +
jz loc_435F80  +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 0C7h +
ja loc_435F60  +
mov eax ebx +
call sub_434EE0  +
mov eax [ebx+1ECh] +
test eax eax +
jz loc_435F1E  +
mov edx [ebx+50h] +
mov ebp [esp+44h+var_1C] +
mov ecx [edx+4] +
mov edx [ebx+20h] +
mov [esp+44h+var_30] ebp +
mov ebp [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] ebp +
mov [esp+44h+var_44] ebx +
call eax  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_38] edi +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_3C] eax +
call sub_44ABD0  +
mov [esp+44h+var_44] esi +
call free  +
mov eax [esp+44h+var_1C] +
test eax eax +
jz loc_435F56  +
mov [esp+44h+var_44] eax +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_3C] offset aIncludeNestedT +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_44] ebx +
call sub_43C650  +
jmp loc_435F3E  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+44h+var_34] offset aEmptyFilenameI +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_30] eax +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_3C] eax +
call sub_43C750  +
jmp loc_435F3E  +
***
mov eax [esp+arg_0] +
mov edx 2 +
jmp sub_435E90  +
***
push ebx  +
mov edx 1 +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_435FF1  +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_435E90  +
***
mov [esp] ebx +
mov dword ptr [esp+8] offset aInclude_nextIn +
mov dword ptr [esp+4] 0 +
call sub_43C650  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor edx edx +
jmp sub_435E90  +
***
mov eax [esp+4] +
xor edx edx +
jmp sub_435E90  +
***
push esi  +
xor ecx ecx +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
lea eax [esp+1Ch] +
mov [esp] eax +
lea edx [esp+18h] +
mov eax ebx +
call sub_435C90  +
test eax eax +
mov esi eax +
jz loc_4360C1  +
mov eax [esp+18h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_44B1B0  +
test eax eax +
js loc_4360C7  +
jz loc_4360B9  +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCurrentFileIsO +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_43C650  +
mov [esp] ebx +
call sub_43B4A0  +
cmp byte ptr [eax+4] 16h +
jz loc_4360B9  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_439600  +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp] 0 +
mov eax ebx +
call sub_435370  +
mov [esp] esi +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCannotFindSour +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_43C650  +
jmp loc_4360B9  +
***
push esi  +
mov edx 1 +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax ebx +
call sub_434C50  +
test eax eax +
mov esi eax +
jz loc_43613F  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_43611A  +
mov [esp] ebx +
call eax  +
mov eax [ebx+1F4h] +
test eax eax +
jz loc_436134  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
movzx eax byte ptr [esi+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_436150  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_435AD0  +
***
movzx eax word ptr [esi+14h] +
shr ax 6 +
test al 10h +
jnz loc_4361C0  +
test al 4 +
jnz loc_436181  +
cmp byte ptr [ebx+267h] 0 +
jnz loc_4361E0  +
mov [esp] esi +
call sub_43B520  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_435AD0  +
***
cmp byte ptr [ebx+25Fh] 0 +
jz loc_436160  +
mov edx [esi] +
mov eax [ebx+20h] +
mov dword ptr [esp+10h] offset aUndefiningS +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Bh +
mov [esp] ebx +
call sub_43C7A0  +
jmp loc_436160  +
***
mov eax [esi] +
mov dword ptr [esp+8] offset aUndefiningS +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
mov [esp+0Ch] eax +
call sub_43C650  +
jmp loc_436160  +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_438BA0  +
jmp loc_436169  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_436230  +
xor esi esi +
mov edi 1 +
mov [esp+20h] esi +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 6 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4356B0  +
***
xor edx edx +
mov eax ebx +
call sub_434C50  +
test eax eax +
mov esi eax +
jz loc_436210  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4362C0  +
movzx eax word ptr [esi+14h] +
xor edi edi +
shr ax 6 +
test al 80h +
jnz loc_43628F  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_4362F0  +
mov eax [ebx+218h] +
test eax eax +
jz loc_43628F  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_4362A9  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435AD0  +
jmp loc_436217  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr di 0Eh +
xor edi 1 +
shr ax 6 +
and edi 1 +
test al 4 +
jnz loc_436254  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_436254  +
***
test al 4 +
jz loc_436307  +
mov eax [ebx+228h] +
test eax eax +
jz loc_436307  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_43627F  +
jmp loc_43628F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_436351  +
mov edi 1 +
mov dword ptr [esp+20h] 0 +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 3 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4356B0  +
***
xor edx edx +
mov eax ebx +
call sub_434C50  +
test eax eax +
mov esi eax +
jz loc_436330  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4363E0  +
movzx eax word ptr [esi+14h] +
mov edi 1 +
shr ax 6 +
test al 80h +
jnz loc_4363B3  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_436410  +
mov eax [ebx+218h] +
test eax eax +
jz loc_4363B3  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_4363CD  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435AD0  +
jmp loc_436335  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr ax 6 +
shr di 0Eh +
and edi 1 +
test al 4 +
jnz loc_436378  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_436378  +
***
test al 4 +
jz loc_436427  +
mov eax [ebx+228h] +
test eax eax +
jz loc_436427  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_4363A3  +
jmp loc_4363B3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esi] +
mov ebx [edi+34h] +
test ebx ebx +
jz loc_4364E3  +
movzx eax byte ptr [ebx+0Dh] +
test al al +
jz loc_436494  +
mov edx [ebx] +
test edx edx +
jz loc_4364B5  +
cmp ebx [esi+1B4h] +
mov [edi+34h] edx +
mov [esi+0Ah] al +
jbe loc_43647B  +
cmp ebx [esi+1C0h] +
jb loc_4364D0  +
add esi 1B0h +
mov [esp+4] ebx +
mov [esp] esi +
call sub_458F10  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp byte ptr [esi+25Ch] 0 +
jz loc_43645F  +
xor edx edx +
mov eax esi +
mov ecx 8 +
call sub_435AD0  +
mov edx [ebx] +
movzx eax byte ptr [ebx+0Dh] +
test edx edx +
jnz loc_436465  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_436465  +
mov byte ptr [esi+0ECh] 1 +
mov [esi+0E4h] ecx +
jmp loc_436465  +
***
mov [esi+1B8h] ebx +
mov [esi+1BCh] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+8] offset aEndifWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43C650  +
jmp loc_43648D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
call sub_434E10  +
test eax eax +
mov edx eax +
jz loc_4366D5  +
mov ecx [eax+8] +
lea eax [ecx+20h] +
and eax 0FFFFFFF0h +
call sub_470810  +
mov edx [edx+0Ch] +
sub esp eax +
xor eax eax +
lea ebx [esp+38h+var_15] +
and ebx 0FFFFFFF0h +
cmp byte ptr [edx] 4Ch +
lea esi [edx+ecx-1] +
setz al  +
lea eax [edx+eax+1] +
mov edx ebx +
cmp eax esi +
jnb loc_436587  +
mov edi ebx +
jmp loc_43655D  +
add eax 1 +
add edx 1 +
cmp esi eax +
mov [edx-1] cl +
jbe loc_436585  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_436550  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_436573  +
cmp bl 5Ch +
jnz loc_436550  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp esi eax +
mov [edx-1] cl +
ja loc_43655D  +
mov ebx edi +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_435AD0  +
mov eax [ebp+arg_0] +
call sub_434EE0  +
mov [esp+38h+var_38] 14h +
call sub_4529F0  +
mov edx ebx +
mov esi eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4365D0  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+38h+var_38] edx +
call sub_4529F0  +
mov [esi+4] eax +
mov edi eax +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call strcpy  +
mov eax [ebp+arg_0] +
mov eax [eax+2F8h] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_43E1D0  +
test byte ptr [eax+14h] 3Fh +
mov ebx eax +
jnz loc_436653  +
or byte ptr [esi+10h] 4 +
mov eax [ebp+arg_0] +
mov [eax+2F8h] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43C0D0  +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] eax +
call strlen  +
mov edi eax +
lea eax [eax+2] +
mov [esp+38h+var_38] eax +
call sub_4529F0  +
mov [esi+8] eax +
mov byte ptr [eax+edi] 0Ah +
mov byte ptr [eax+edi+1] 0 +
mov edx [ebx+18h] +
mov edx [edx+8] +
mov [esi+0Ch] edx +
mov edx [ebx+18h] +
movzx ecx byte ptr [edx+14h] +
movzx edx byte ptr [esi+10h] +
shr cl 2 +
and ecx 1 +
and edx 0FFFFFFFEh +
or edx ecx +
mov [esi+10h] dl +
mov ecx [ebx+18h] +
and edx 0FFFFFFFDh +
movzx ecx byte ptr [ecx+14h] +
shr cl 2 +
and ecx 2 +
or edx ecx +
mov [esi+10h] dl +
mov [esp+38h+var_30] edi +
mov edi [ebp+var_1C] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edi +
call memcpy  +
jmp loc_436642  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragmaP +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43C750  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_435AD0  +
mov eax [ebp+arg_0] +
call sub_434EE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_436762  +
mov eax ebx +
xor ecx ecx +
xor edx edx +
call sub_435AD0  +
mov eax [ebx] +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_44ABB0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aPragmaOnceInMa +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_43C650  +
jmp loc_436741  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_436827  +
cmp dword ptr [ebx+10h] 5 +
jz loc_4367E3  +
movzx eax byte ptr [ebx+0Ch] +
mov dword ptr [ebx+10h] 5 +
mov [esi+0Ah] al +
cmp byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+0Ch] 1 +
mov dword ptr [ebx+8] 0 +
jnz loc_4367C4  +
cmp byte ptr [esi+25Ch] 0 +
jnz loc_4367D0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add esp 24h +
mov eax esi +
pop ebx  +
mov ecx 8 +
pop esi  +
xor edx edx +
jmp sub_435AD0  +
***
mov dword ptr [esp+8] offset aElseAfterElse +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43C650  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset aTheConditional +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
mov [esp] esi +
call sub_43C750  +
jmp loc_43679C  +
***
mov dword ptr [esp+8] offset aElseWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43C650  +
jmp loc_4367C4  +
***
jmp loc_436850  +
push ebx  +
mov ecx 11h +
sub esp 28h +
mov eax [esp+30h] +
lea edx [esp+1Ch] +
call sub_434FD0  +
test eax eax +
mov ebx eax +
jz loc_436877  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 2 +
jz loc_436880  +
add esp 28h +
pop ebx  +
retn   +
***
mov edx [esp+1Ch] +
test edx edx +
jz loc_4368B8  +
mov eax ebx +
call sub_435220  +
mov edx [eax] +
test edx edx +
jz loc_436899  +
mov edx [edx] +
mov [eax] edx +
mov eax [ebx+18h] +
test eax eax +
jz loc_4368B2  +
mov eax [esp+30h] +
xor ecx ecx +
xor edx edx +
call sub_435AD0  +
add esp 28h +
pop ebx  +
retn   +
***
and byte ptr [ebx+14h] 0C0h +
jmp loc_4368A0  +
***
mov [esp] ebx +
call sub_43B520  +
jmp loc_436877  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 34h +
mov [esp] eax +
call sub_4414B0  +
cmp byte ptr [eax+4] 3Eh +
jz loc_436920  +
mov eax esi +
mov ecx offset aError_0 +
test al al +
mov eax offset aWarning +
cmovz ecx eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset aInvalidPragm_1 +
mov dword ptr [esp+4] 3 +
mov [esp] ebx +
call sub_43C650  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
add eax 8 +
lea edx [esp+28h] +
mov dword ptr [esp+10h] 3Eh +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_434290  +
test al al +
jz loc_4368E7  +
mov eax [esp+28h] +
test eax eax +
jz loc_4368E7  +
mov eax esi +
mov edx [esp+2Ch] +
cmp al 1 +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aS_11 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43C650  +
mov eax [esp+2Ch] +
mov [esp] eax +
call free  +
jmp loc_436914  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_4368D0  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_4368D0  +
***
sub esp 24h +
mov esi [esp+24h+arg_0] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_436A54  +
cmp dword ptr [ebx+10h] 5 +
jz loc_436A10  +
cmp byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 9 +
jz loc_4369F0  +
mov byte ptr [esi+0Ah] 1 +
mov dword ptr [ebx+8] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
call sub_444970  +
mov edx eax +
xor edx 1 +
mov [esi+0Ah] dl +
mov [ebx+0Ch] al +
jmp loc_4369DD  +
mov [esp+24h+var_1C] offset aElifAfterElse +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_43C650  +
mov eax [ebx+4] +
mov [esp+24h+var_14] offset aTheConditional +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] esi +
call sub_43C750  +
jmp loc_4369CC  +
mov [esp+24h+var_1C] offset aElifWithoutIf +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_43C650  +
jmp loc_4369E4  +
***
jmp sub_436A80  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_436AC0  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435AD0  +
mov eax ebx +
call sub_434EE0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
call sub_44B000  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aPragmaSystem_h +
mov [esp+18h+var_14] 0 +
call sub_43C650  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov [esp+38h+var_20] ecx +
mov ebx [esp+38h+arg_0] +
jz loc_436C50  +
mov [esp+38h+var_38] edx +
call strlen  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_441B20  +
mov esi eax +
mov eax [edi+1DCh] +
test eax eax +
jnz loc_436B2E  +
jmp loc_436C06  +
mov eax [eax] +
test eax eax +
jz loc_436C06  +
cmp esi [eax+4] +
jnz loc_436B24  +
cmp byte ptr [eax+8] 0 +
jz loc_436C85  +
cmp [eax+0Bh] bl +
jnz loc_436CD6  +
lea ecx [eax+0Ch] +
mov esi [esp+38h+var_20] +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_441B20  +
mov ecx [esp+38h+var_1C] +
mov ebx [ecx] +
mov esi eax +
test ebx ebx +
jnz loc_436B7D  +
jmp loc_436BC2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_436BC2  +
cmp esi [ebx+4] +
jnz loc_436B77  +
cmp byte ptr [ebx+8] 0 +
jnz loc_436C85  +
test ebp ebp +
mov eax [esp+38h+var_20] +
jz loc_436CB0  +
mov [esp+38h+var_28] eax +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aPragmaSSIsAlre +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_43C650  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_20] ecx +
call sub_441750  +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov edx [ecx] +
mov [eax] edx +
mov [ecx] eax +
mov [eax+4] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] edi +
call sub_441750  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov ecx [edi+1DCh] +
mov [eax] ecx +
mov [edi+1DCh] eax +
mov [eax+4] esi +
mov byte ptr [eax+8] 1 +
mov [eax+0Bh] bl +
jmp loc_436B46  +
test bl bl +
lea ecx [eax+1DCh] +
jz loc_436B49  +
mov eax [esp+38h+var_20] +
mov [esp+38h+var_30] offset aRegisteringPra +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
call sub_43C650  +
xor eax eax +
jmp loc_436BBA  +
mov eax [esi] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] offset aRegisteringSAs +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_2C] eax +
call sub_43C650  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aPragmaSIsAlrea +
mov [esp+38h+var_34] 4 +
call sub_43C650  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aRegisteringP_0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_43C650  +
xor eax eax +
jmp loc_436BBA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [ebp+arg_0] +
cmp byte ptr [ebx+11h] 0 +
setnz [ebp+var_79]  +
cmp byte ptr [ebx+13h] 0 +
setnz [ebp+var_7A]  +
jz loc_436D25  +
mov byte ptr [ebx+10h] 0 +
cmp [ebp+var_79] 0 +
jz loc_436D40  +
cmp byte ptr [ebx+26Ah] 0 +
jnz loc_436F91  +
mov byte ptr [ebx+11h] 0 +
mov byte ptr [ebx+10h] 0 +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+0A8h+var_A8] ebx +
call sub_4414B0  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_436EE2  +
cmp al 37h +
jz loc_436F45  +
cmp al 16h +
jz loc_436E68  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_436F3C  +
xor esi esi +
mov edi 1 +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_436E70  +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] ebx +
mov [ebp+var_88] edx +
call sub_4416D0  +
mov ecx eax +
mov [ebp+var_84] eax +
mov eax [ebx+230h] +
test eax eax +
jz loc_437121  +
mov [esp+0A8h+var_A0] offset off_4CCE60 +
mov [esp+0A8h+var_A4] ecx +
mov [esp+0A8h+var_A8] ebx +
call eax  +
test eax eax +
mov [ebp+var_80] eax +
jz loc_437121  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov ecx [edx] +
lea edx [ebp+var_74] +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] ecx +
mov ecx edx +
call sub_42D810  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov edx [edx] +
sub esp 8 +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] edx +
call sub_42C160  +
mov ecx [ebp+var_80] +
mov [esp+0A8h+var_A0] ecx +
mov [esp+0A8h+var_A4] edx +
lea edx [ebp+var_74] +
mov ecx edx +
mov [esp+0A8h+var_A8] eax +
call sub_42DA90  +
mov eax [ebp+var_80] +
mov ecx [ebp+var_84] +
sub esp 0Ch +
mov [esp+0A8h+var_94] eax +
lea eax [ebp+var_74] +
mov [esp+0A8h+var_98] ecx +
mov [esp+0A8h+var_9C] offset aInvalidPreproc +
mov [esp+0A8h+var_A0] eax +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
call sub_43C8E0  +
lea ecx [ebp+var_74] +
call sub_42D4F0  +
jmp loc_436E70  +
mov edi 1 +
xor esi esi +
nop   +
cmp byte ptr [ebx+270h] 0 +
mov [ebx+50h] esi +
jnz loc_436ED6  +
test esi esi +
jz loc_436EC0  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+0A8h+var_A8] ebx +
call eax  +
mov edx edi +
mov eax ebx +
call sub_435970  +
cmp [ebp+var_79] 0 +
jz loc_436EA7  +
cmp byte ptr [ebx+18h] 0 +
jnz loc_436EA7  +
mov byte ptr [ebx+11h] 2 +
mov byte ptr [ebx+10h] 1 +
cmp [ebp+var_7A] 0 +
jz loc_436EB1  +
mov byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_436E8A  +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
call sub_439600  +
jmp loc_436E8A  +
mov eax ebx +
call sub_4358A0  +
lea esi [esi+0] +
jmp loc_436E7C  +
mov eax [edx+8] +
movzx eax byte ptr [eax+0Ch] +
test al 1 +
jz loc_436D7B  +
shr al 1 +
movzx eax al +
lea eax [eax+eax*2] +
lea esi ds:4CCEC0h[eax*4] +
movzx eax byte ptr [ebx+26Bh] +
test byte ptr [esi+0Bh] 2 +
jnz loc_436F14  +
mov byte ptr [ebx+0ECh] 0 +
test al al +
jz loc_436FB0  +
cmp byte ptr [ebx+2A8h] 0 +
jnz loc_437006  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_436F3C  +
movzx eax byte ptr [esi+0Bh] +
test al 8 +
jnz loc_43700A  +
xor edi edi +
xor esi esi +
jmp loc_436E70  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_436F3C  +
cmp byte ptr [ebx+26Ah] 0 +
mov esi offset off_4CCDDC +
movzx eax byte ptr [ebx+26Bh] +
jz loc_436F07  +
test al al +
jnz loc_436F07  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_436F07  +
mov [esp+0A8h+var_A0] offset aStyleOfLineDir +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_43C650  +
movzx eax byte ptr [ebx+26Bh] +
jmp loc_436F07  +
mov [esp+0A8h+var_A0] offset aEmbeddingADire +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_43C650  +
jmp loc_436D38  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
cmp byte ptr [ebx+0Ah] 0 +
mov [ebx+9] al +
jnz loc_437078  +
cmp byte ptr [esi+0Ah] 2 +
jz loc_437040  +
test byte ptr [esi+0Bh] 20h +
jnz loc_4370F0  +
cmp esi offset off_4CCF74 +
jnz loc_437078  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_4370F0  +
cmp byte ptr [ebx+25Ah] 0 +
jnz loc_43708D  +
jmp loc_43701A  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+9] al +
cmp byte ptr [ebx+0Ah] 0 +
mov edi 1 +
jz loc_436E70  +
test byte ptr [esi+0Bh] 1 +
mov eax 0 +
cmovz esi eax +
jmp loc_436E70  +
cmp esi offset off_4CCF74 +
jz loc_43716C  +
cmp byte ptr [ebx+26Ah] 0 +
jz loc_436FD4  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsAGccExtensi +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43C650  +
cmp byte ptr [ebx+25Ah] 0 +
jz loc_43701A  +
cmp esi offset off_4CCF2C +
jz loc_43714F  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4370C0  +
cmp byte ptr [esi+0Ah] 0 +
jnz loc_43701A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aTraditionalCIg +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43C690  +
jmp loc_43701A  +
cmp byte ptr [esi+0Ah] 0 +
jz loc_43701A  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSuggestHidingS +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43C690  +
jmp loc_43701A  +
cmp byte ptr [ebx+254h] 0 +
jz loc_437078  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsADeprecated +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43C690  +
jmp loc_437078  +
mov eax [ebp+var_84] +
mov edi 1 +
xor esi esi +
mov [esp+0A8h+var_A0] offset aInvalidPrepr_0 +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43C650  +
jmp loc_436E70  +
mov [esp+0A8h+var_A0] offset aSuggestNotUsin +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
call sub_43C690  +
jmp loc_43701A  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_436FF7  +
jmp loc_43704C  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset loc_434BF0 +
mov [esp] eax +
call sub_441BB0  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov edx [esp+24h+arg_C] +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_14] edx +
mov edx [esp+24h+arg_8] +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
mov edx [esp+24h+arg_10] +
mov [esp+24h+var_1C] edx +
mov edx [esp+24h+arg_4] +
mov [esp+24h+var_20] edx +
call sub_42B6E0  +
test eax eax +
mov esi eax +
jz loc_437204  +
mov edx [eax+0Ch] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_1C] 7Fh +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_42BA50  +
mov eax [ebx+1E4h] +
test eax eax +
jz loc_437220  +
mov [esp+24h+arg_4] esi +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp eax  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_0] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov ecx [eax+8] +
movzx eax byte ptr [eax+14h] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] ecx +
mov byte ptr [esp+3Ch+var_20] al +
call sub_439600  +
mov [esp+3Ch+var_3C] esi +
call sub_43B4A0  +
cmp byte ptr [eax+4] 37h +
jz loc_4372A6  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
call sub_4416D0  +
mov [esp+3Ch+var_34] offset aSAfterIsNotAPo +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43C650  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+8] +
mov ebx [eax+0Ch] +
test ebp ebp +
jz loc_437488  +
movzx ecx byte ptr [ebx] +
lea edx [ebx+1] +
test byte ptr ds:word_4D0620[ecx+ecx] 4 +
jz loc_437276  +
add ebp ebx +
xor ebx ebx +
jmp loc_4372E1  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4D0620[ecx+ecx] 4 +
jz loc_437276  +
lea ebx [ebx+ebx*4] +
cmp edx ebp +
lea ebx [ecx+ebx*2-30h] +
jnz loc_4372D0  +
mov [esp+3Ch+var_3C] esi +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_437380  +
cmp dl 16h +
jnz loc_437350  +
movzx eax byte ptr [esp+3Ch+var_20] +
mov ebp 3 +
mov [esp+3Ch+var_20] eax +
mov eax esi +
call sub_434EE0  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] eax +
call sub_4371B0  +
mov byte ptr [edi+50h] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_4416D0  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] offset aSIsNotAValidFi +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_30] eax +
call sub_43C650  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+3Ch+var_14] +
add eax 8 +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_2C] 3Eh +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
call sub_434290  +
test al al +
mov eax [esp+3Ch+var_24] +
cmovnz eax [esp+3Ch+var_10] +
xor edx edx +
mov [esp+3Ch+var_24] eax +
mov eax esi +
call sub_434D70  +
cmp eax 1 +
jz loc_437495  +
cmp eax 2 +
mov ebp 3 +
jz loc_4374E4  +
xor edx edx +
cmp eax 3 +
mov [esp+3Ch+var_20] 0 +
jz loc_4374B8  +
mov eax [esi] +
xor ecx ecx +
mov [eax+3Dh] dl +
xor edx edx +
mov eax esi +
call sub_435AD0  +
mov eax esi +
call sub_434EE0  +
cmp ebp 1 +
jnz loc_437480  +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov edx [eax+10h] +
test edx edx +
js loc_437454  +
mov ecx [esp+3Ch+var_24] +
mov eax [esi+1Ch] +
test ecx ecx +
jz loc_43731E  +
imul edx edx +
add edx [eax] +
jz loc_43731E  +
mov eax [edx+8] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_452D10  +
test eax eax +
jz loc_437480  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] offset aFileSLinemarke +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43C690  +
jmp loc_43729E  +
mov eax [esi+1Ch] +
jmp loc_43731E  +
xor ebx ebx +
lea esi [esi+0] +
jmp loc_4372EC  +
mov eax [esp+3Ch+var_24] +
xor ebp ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_44AFB0  +
mov edx 1 +
mov eax esi +
call sub_434D70  +
jmp loc_4373E6  +
mov edx 3 +
mov eax esi +
call sub_434D70  +
cmp eax 4 +
setz dl  +
add edx 1 +
cmp eax 4 +
setz al  +
movzx eax al +
mov [esp+3Ch+var_20] eax +
add [esp+3Ch+var_20] 1 +
jmp loc_4373F9  +
mov edx 2 +
mov eax esi +
call sub_434D70  +
mov bp 1 +
jmp loc_4373E6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+60h] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
cmp byte ptr [esi+268h] 1 +
movzx ebx byte ptr [eax+14h] +
mov eax [eax+8] +
mov [esp] esi +
mov [esp+2Bh] bl +
mov [esp+24h] eax +
sbb eax eax +
mov [esp+1Ch] eax +
and dword ptr [esp+1Ch] 80008000h +
add dword ptr [esp+1Ch] 7FFFFFFFh +
call sub_43B4A0  +
mov [esp+20h] eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_437595  +
cmp al 16h +
jz loc_437656  +
mov eax [esp+20h] +
mov [esp] esi +
mov [esp+4] eax +
call sub_4416D0  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSAfterLineIsNo +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43C650  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov [esp+2Ch] edi +
mov edx [eax+0Ch] +
mov ebx [eax+8] +
xor eax eax +
add ebx edx +
mov ebp ebx +
xor ebx ebx +
jmp loc_4375D4  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4D0620[ecx+ecx] 4 +
jz loc_437561  +
lea edi [ebx+ebx*4] +
lea ecx [ecx+edi*2-30h] +
mov edi 1 +
cmp ebx ecx +
mov ebx ecx +
cmova eax edi +
cmp edx ebp +
jnz loc_4375B0  +
cmp byte ptr [esi+26Ah] 0 +
mov edi [esp+2Ch] +
jz loc_437693  +
test ebx ebx +
jz loc_437676  +
cmp [esp+1Ch] ebx +
jb loc_437676  +
test al al +
jnz loc_437676  +
nop   +
lea esi [esi+0] +
mov [esp] esi +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_4376E8  +
cmp dl 16h +
jnz loc_4376B8  +
mov eax esi +
call sub_434EE0  +
movzx eax byte ptr [esp+2Bh] +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+4] 3 +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_4371B0  +
mov byte ptr [edi+50h] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aUnexpectedEndO +
mov dword ptr [esp+4] 3 +
call sub_43C650  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 2 +
mov [esp] esi +
call sub_43C650  +
jmp loc_437600  +
***
test al al +
jz loc_437600  +
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_43C650  +
jmp loc_437600  +
***
mov [esp] esi +
mov [esp+4] eax +
call sub_4416D0  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSIsNotAValidFi +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43C650  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea edx [esp+38h] +
add eax 8 +
mov [esp+0Ch] edx +
mov dword ptr [esp+10h] 3Eh +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] esi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+3Ch] 0 +
call sub_434290  +
mov edx 1 +
test al al +
mov eax [esp+24h] +
cmovnz eax [esp+3Ch] +
xor ecx ecx +
mov [esp+24h] eax +
mov eax esi +
call sub_435AD0  +
jmp loc_43761E  +
***
jmp loc_437750  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov eax [esp+20h] +
mov edx [esp+24h] +
mov ecx [esp+28h] +
test ebx ebx +
mov esi [esp+30h] +
jz loc_437790  +
mov dword ptr [esp] 0 +
call sub_436AE0  +
test eax eax +
jz loc_437785  +
mov edx esi +
mov [eax+0Bh] dl +
mov [eax+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+28h] offset aRegisteringP_1 +
mov dword ptr [esp+24h] 4 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_43C650  +
***
push ebx  +
sub esp 18h +
movzx eax byte ptr [esp+34h] +
mov ecx [esp+28h] +
mov edx [esp+24h] +
mov ebx [esp+30h] +
mov [esp] eax +
mov eax [esp+20h] +
call sub_436AE0  +
test eax eax +
jz loc_4377E3  +
mov edx [esp+2Ch] +
mov byte ptr [eax+0Ah] 1 +
mov [eax+0Bh] bl +
mov [eax+0Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
xor edx edx +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0 +
mov eax ebx +
call sub_436AE0  +
mov ecx offset aPush_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_436730 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aPop_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_436500 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aPoison +
mov edx offset off_4CCD22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_437CC0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aSystem_header +
mov edx offset off_4CCD22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_434F30 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aDependency +
mov edx offset off_4CCD22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_436A80 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aWarning +
mov edx offset off_4CCD22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_436030 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov ecx offset aError_0 +
mov edx offset off_4CCD22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_4369A0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436AE0  +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_436990 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+1DCh] +
call sub_434C10  +
shl eax 2 +
mov [esp] eax +
call sub_4529F0  +
mov ebx eax +
mov eax [esi+1DCh] +
mov edx ebx +
call sub_435A70  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 8 +
mov eax [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+1DCh] +
mov ecx ebx +
call sub_435A00  +
mov [esp+10h] ebx +
add esp 8 +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edi [esp+28h+arg_0] +
lea edx [esp+28h+var_C] +
mov esi [esp+28h+arg_4] +
mov eax edi +
call sub_434FD0  +
mov dword ptr [esi] 0 +
test eax eax +
mov ebx eax +
jz loc_4379E3  +
movzx eax byte ptr [eax+14h] +
xor ecx ecx +
and eax 3Fh +
cmp al 2 +
jz loc_4379C7  +
mov [esi] ecx +
xor eax eax +
test ebx ebx +
setz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esp+28h+var_C] +
mov cl 1 +
test edx edx +
jz loc_4379B7  +
mov eax ebx +
call sub_435220  +
xor ecx ecx +
mov eax [eax] +
test eax eax +
setnz cl  +
jmp loc_4379B7  +
mov eax [edi+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jnz loc_4379B9  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] edi +
call sub_439600  +
jmp loc_4379B9  +
***
jmp sub_437A10  +
***
mov eax [esp+arg_0] +
add eax 240h +
retn   +
***
mov eax [esp+4] +
add eax 1E0h +
retn   +
***
push edi  +
mov ecx 15h +
push esi  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
lea edi [eax+1E0h] +
movs   +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
mov eax [ebx+180h] +
test eax eax +
jz loc_437A67  +
add esp 8 +
pop ebx  +
retn   +
***
call sub_44B8C0  +
mov [ebx+180h] eax +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov ecx [ebx+1C0h] +
mov eax [ebx+1BCh] +
mov edx ecx +
sub edx eax +
cmp edx 6Fh +
jbe loc_437B70  +
mov edx [ebx+1B8h] +
add eax 70h +
mov [ebx+1BCh] eax +
cmp eax edx +
jz loc_437B97  +
mov esi [ebx+1C8h] +
add eax esi +
not esi  +
and eax esi +
mov esi [ebx+1B4h] +
mov edi eax +
mov [ebx+1BCh] eax +
sub edi esi +
mov [esp+1Ch+var_10] edi +
mov edi ecx +
sub edi esi +
cmp [esp+1Ch+var_10] edi +
jbe loc_437AF1  +
mov [ebx+1BCh] ecx +
mov eax ecx +
test dl 1 +
mov edi edx +
mov [ebx+1B8h] eax +
mov esi 70h +
jnz loc_437BA3  +
test edi 2 +
jnz loc_437BC0  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jz loc_437B2D  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_437B35  +
mov byte ptr [edi] 0 +
movzx ecx [esp+1Ch+arg_C] +
movzx eax byte ptr [edx+3Ch] +
mov [edx+0Ch] ebp +
mov [edx+8] ebp +
and ecx 1 +
add ecx ecx +
and eax 0FFFFFFFDh +
or eax ecx +
mov [edx+3Ch] al +
mov eax [ebx] +
add ebp [esp+1Ch+arg_8] +
mov byte ptr [edx+38h] 1 +
mov [edx+28h] eax +
mov eax edx +
mov [edx+10h] ebp +
mov [ebx] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+1B0h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] 70h +
call sub_458E00  +
mov eax [ebx+1BCh] +
mov ecx [ebx+1C0h] +
jmp loc_437AA8  +
or byte ptr [ebx+1D8h] 2 +
jmp loc_437ABF  +
lea edi [edx+1] +
mov si 6Fh +
test edi 2 +
mov byte ptr [edx] 0 +
jz loc_437B13  +
lea esi [esi+0] +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_437B13  +
***
jmp sub_437BE0  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov ebx [eax+2F8h] +
call sub_434E10  +
test eax eax +
mov ecx eax +
jz loc_437F50  +
mov edx [eax+8] +
lea eax [edx+20h] +
and eax 0FFFFFFF0h +
call sub_470810  +
mov ecx [ecx+0Ch] +
sub esp eax +
xor eax eax +
lea esi [esp+38h+var_15] +
and esi 0FFFFFFF0h +
cmp byte ptr [ecx] 4Ch +
lea edi [ecx+edx-1] +
mov edx esi +
setz al  +
lea eax [ecx+eax+1] +
cmp eax edi +
jnb loc_437D53  +
mov [ebp+var_1C] ebx +
jmp loc_437D23  +
add eax 1 +
add edx 1 +
cmp edi eax +
mov [edx-1] cl +
jbe loc_437D50  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_437D16  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_437D39  +
cmp bl 5Ch +
jnz loc_437D16  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp edi eax +
mov [edx-1] cl +
ja loc_437D23  +
nop   +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_435AD0  +
mov eax [ebp+arg_0] +
call sub_434EE0  +
test ebx ebx +
jz loc_437E18  +
mov [ebp+var_1C] 0 +
jmp loc_437D8D  +
test eax eax +
jz loc_437E18  +
mov [ebp+var_1C] ebx +
mov ebx eax +
mov edi [ebx+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call strcmp  +
test eax eax +
mov eax [ebx] +
jnz loc_437D80  +
mov edx [ebp+var_1C] +
test edx edx +
jz loc_437F9F  +
mov esi [ebp+var_1C] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_43E1D0  +
test eax eax +
mov esi eax +
jz loc_437DFA  +
mov eax [ebp+arg_0] +
mov eax [eax+21Ch] +
test eax eax +
jz loc_437DDC  +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
cmp dl 1 +
jz loc_437F10  +
test dl dl +
jnz loc_437F00  +
test byte ptr [ebx+10h] 4 +
jz loc_437E20  +
mov eax [ebx+8] +
mov [esp+38h+var_38] eax +
call free  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call free  +
mov [esp+38h+var_38] ebx +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+8] +
mov [esp+38h+var_34] offset asc_4CCD74 +
mov [esp+38h+var_38] esi +
call strcspn  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_441B20  +
add edi [ebx+8] +
and byte ptr [eax+14h] 0C0h +
mov esi eax +
and word ptr [eax+14h] 0D67Fh +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 0Ah +
call strchr  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_2C] 1 +
sub eax edi +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_437A80  +
test eax eax +
mov edi eax +
jz loc_437FE5  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43DAC0  +
mov eax [ebp+arg_0] +
mov byte ptr [edi+3Dh] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_43B640  +
test al al +
jz loc_437FC9  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_437BE0  +
mov eax [esi+18h] +
mov edx [ebx+0Ch] +
mov [eax+8] edx +
mov ecx [esi+18h] +
movzx edx byte ptr [ebx+10h] +
movzx eax byte ptr [ecx+14h] +
mov edi edx +
and edi 1 +
shl edi 2 +
and eax 0FFFFFFFBh +
or eax edi +
mov [ecx+14h] al +
mov ecx [esi+18h] +
shl edx 2 +
and edx 8 +
movzx eax byte ptr [ecx+14h] +
and eax 0FFFFFFF7h +
or eax edx +
mov [ecx+14h] al +
jmp loc_437DFA  +
mov [esp+38h+var_38] esi +
call sub_43B520  +
jmp loc_437DF4  +
mov eax [ebp+arg_0] +
mov eax [eax+1F4h] +
test eax eax +
jz loc_437F33  +
mov edx [ebp+arg_0] +
mov edx [edx+20h] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edx +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+267h] 0 +
jnz loc_437FAD  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
jmp loc_437DEC  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragm_0 +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43C750  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_435AD0  +
mov eax [ebp+arg_0] +
call sub_434EE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+arg_0] +
mov [esi+2F8h] eax +
jmp loc_437DB2  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_438BA0  +
jmp loc_437F3F  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9EDh +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_424080  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9F1h +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_424080  +
jmp sub_438010  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [edx] +
mov [ebp+var_28] ecx +
lea ecx [eax-1] +
add eax 1Dh +
and eax 0FFFFFFF0h +
call sub_470810  +
mov esi [edx+4] +
sub esp eax +
xor eax eax +
lea edi [esp+48h+var_2C+3] +
and edi 0FFFFFFF0h +
cmp byte ptr [esi] 4Ch +
setz al  +
lea edx [esi+eax+1] +
add esi ecx +
cmp edx esi +
mov eax edi +
jnb loc_438292  +
mov [ebp+var_1C] ebx +
jmp loc_438064  +
add edx 1 +
add eax 1 +
cmp esi edx +
mov [eax-1] cl +
jbe loc_438090  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jnz loc_438057  +
movzx ebx byte ptr [edx+1] +
cmp bl 22h +
jz loc_43807A  +
cmp bl 5Ch +
jnz loc_438057  +
add edx 1 +
add eax 1 +
add edx 1 +
mov ecx ebx +
cmp esi edx +
mov [eax-1] cl +
ja loc_438064  +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov esi eax +
sub esi edi +
mov byte ptr [eax] 0Ah +
mov eax [ebx+4Ch] +
mov [ebp+var_2C] eax +
mov eax [ebx+0F0h] +
mov [ebp+var_30] eax +
mov eax [ebx+104h] +
mov [esp+48h+var_44] 1Ch +
mov [esp+48h+var_48] 1 +
mov [ebp+var_34] eax +
call sub_452A20  +
mov [ebx+4Ch] eax +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call sub_437A80  +
mov eax [ebx] +
mov edx [eax+28h] +
test edx edx +
jz loc_4380F0  +
mov edx [edx+2Ch] +
mov [eax+2Ch] edx +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+48h+var_48] ebx +
call sub_43DAC0  +
mov esi [ebx+50h] +
mov dword ptr [ebx+50h] offset off_4CCF44 +
mov [esp+48h+var_48] ebx +
call sub_435480  +
mov edx 1 +
mov eax ebx +
call sub_435970  +
cmp byte ptr [ebx+58h] 51h +
mov [ebx+50h] esi +
jz loc_4381D7  +
mov [esp+48h+var_48] 10h +
mov esi 1 +
call sub_4529F0  +
mov edi eax +
mov eax [ebx+54h] +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov eax [ebx+1E0h] +
test eax eax +
jz loc_438183  +
mov edx [ebx+0F0h] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call eax  +
mov eax [ebx] +
mov dword ptr [eax+2Ch] 0 +
mov [esp+48h+var_48] ebx +
call sub_437BE0  +
mov eax [ebx+4Ch] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebp+var_2C] +
mov [ebx+4Ch] eax +
mov eax [ebp+var_30] +
mov [ebx+0F0h] eax +
mov eax [ebp+var_34] +
mov [ebx+104h] eax +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] 0 +
call sub_439200  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] 320h +
call sub_4529F0  +
mov edx 1 +
mov [ebp+var_24] 32h +
mov edi eax +
mov eax [ebx+54h] +
mov ecx edi +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov edi ebx +
mov ebx edx +
nop   +
mov edx ebx +
add ebx 1 +
shl edx 4 +
mov [esp+48h+var_48] edi +
lea esi [ecx+edx] +
mov [ebp+var_20] edx +
mov [ebp+var_1C] ecx +
call sub_43B4A0  +
mov edx [ebp+var_20] +
mov ecx [eax] +
mov [esi] ecx +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov eax [eax+0Ch] +
mov ecx [ebp+var_1C] +
or word ptr [esi+6] 400h +
mov [esi+0Ch] eax +
mov eax [ebp+var_28] +
cmp byte ptr [ecx+edx+4] 52h +
mov [esi] eax +
jz loc_438285  +
cmp [ebp+var_24] ebx +
jnz loc_438210  +
mov eax [ebp+var_24] +
mov [esp+48h+var_48] ecx +
lea eax [eax+eax*2] +
mov edx eax +
shr edx 1Fh +
add eax edx +
mov [ebp+var_24] eax +
sar [ebp+var_24] 1 +
mov eax [ebp+var_24] +
shl eax 4 +
mov [esp+48h+var_44] eax +
call sub_452A70  +
mov ecx eax +
jmp loc_438210  +
mov edx ebx +
mov ebx edi +
mov esi edx +
mov edi ecx +
jmp loc_438183  +
xor esi esi +
jmp loc_438097  +
***
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_434E10  +
mov byte ptr [ebx+58h] 53h +
test eax eax +
jz loc_4382D0  +
mov ecx [esp+18h+arg_4] +
lea edx [eax+8] +
mov eax ebx +
call sub_438010  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset a_pragmaTakesAP +
mov [esp+18h+var_14] 3 +
call sub_43C650  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_C] 1 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_437A80  +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [ebx+20h] eax +
call sub_43DAC0  +
lea eax [esi+esi*2] +
cmp byte ptr [ebx+270h] 0 +
lea eax ds:4CCEC0h[eax*4] +
mov [ebx+50h] eax +
jz loc_438352  +
mov eax ebx +
call sub_4358A0  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+18h+var_18] ebx +
call eax  +
mov eax ebx +
mov edx 1 +
call sub_435970  +
mov [esp+18h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_437BE0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
mov [ebp+var_1C] esi +
call memcpy  +
mov [esp+28h+var_24] 3Dh +
mov [esp+28h+var_28] edi +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
jz loc_4383F5  +
sub eax edi +
mov byte ptr [ebx+eax] 20h +
mov eax [ebp+arg_0] +
mov ecx ebx +
xor edx edx +
mov byte ptr [ebx+esi] 0Ah +
mov [esp+28h+var_28] esi +
call sub_4382F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx+edx] 20h +
lea esi [edx+2] +
mov byte ptr [ebx+edx+1] 31h +
jmp loc_4383DA  +
***
push ebx  +
sub esp 18h +
lea eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_466370  +
mov ebx eax +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_438380  +
mov [esp] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
xor edx edx +
mov [esp+28h+var_28] esi +
call sub_4382F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+0Ch] +
mov [esp] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call memcpy  +
mov eax [ebp+8] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
mov edx 7 +
mov [esp] esi +
call sub_4382F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp] esi +
mov [ebp-24h] ecx +
mov [ebp-1Ch] eax +
call strlen  +
mov dword ptr [esp+4] 3Dh +
mov [esp] esi +
mov edi eax +
call strchr  +
mov [ebp-20h] eax +
lea eax [edi+20h] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebx +
call memcpy  +
mov ecx [ebp-20h] +
mov edx [ebp-24h] +
test ecx ecx +
jz loc_438592  +
sub ecx esi +
mov byte ptr [ebx+ecx] 28h +
lea eax [edi+1] +
mov byte ptr [ebx+edi] 29h +
mov byte ptr [ebx+eax] 0Ah +
mov ecx ebx +
mov [esp] eax +
mov eax [ebp-1Ch] +
call sub_4382F0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
jmp loc_438579  +
***
mov edx [esp+8] +
mov ecx 10h +
mov eax [esp+4] +
jmp loc_438510  +
***
mov edx [esp+8] +
mov ecx 11h +
mov eax [esp+4] +
jmp loc_438510  +
***
mov esi offset unk_4CCEC8 +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+14h+arg_0] +
movzx edx word ptr [esi] +
add esi 0Ch +
mov eax [esi-10h] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] eax +
call sub_441B20  +
lea edx [ebx+ebx+1] +
add ebx 1 +
and ebx 7Fh +
cmp esi offset unk_4CCFAC +
mov [eax+0Ch] dl +
jnz loc_4385F1  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
jmp sub_4352B0  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
jz loc_438698  +
cmp ecx 2 +
jz loc_438693  +
test ecx ecx +
jz loc_438660  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov esi [eax] +
test esi esi +
jz loc_438654  +
test ebx ebx +
jz loc_4386A0  +
test ecx ecx +
jnz loc_438680  +
mov ecx [eax+14h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
cmp ecx 2 +
jz loc_4386A6  +
cmp ecx 1 +
lea eax [esi+edx*4] +
jnz loc_438656  +
mov edx [eax] +
mov [ebx] edx +
jmp loc_438656  +
mov esi [eax+4] +
jmp loc_438662  +
lea esi [eax+8] +
jmp loc_438662  +
lea eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
mov ecx [eax+18h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
xor ebx ebx +
sub esp 14h +
cmp [esp+1Ch+arg_8] 0 +
lea edx [esp+1Ch+var_C] +
mov ecx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_C] 0 +
cmovnz ebx edx +
mov edx [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] ebx +
call sub_438640  +
mov [eax] esi +
mov eax [esp+1Ch+var_C] +
test eax eax +
jz loc_4386FC  +
mov [eax] edi +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
lea ecx [esp+14h+var_4] +
mov [esp+14h+var_14] ecx +
mov ecx edx +
xor edx edx +
mov [esp+14h+var_4] 0 +
call sub_438640  +
test eax eax +
jz loc_438737  +
mov eax [esp+14h+var_4] +
add esp 14h +
retn   +
xor eax eax +
jmp loc_438733  +
***
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
test ecx ecx +
lea edi ds:0[edx*4] +
jz loc_438762  +
shl edx 4 +
mov [esp+14h+var_14] edx +
call sub_4529F0  +
mov [ebx] eax +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] esi +
call sub_43EDB0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_4387A0  +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 1Ch +
mov esi 1Ch +
call sub_4529F0  +
test al 1 +
mov ecx eax +
jnz loc_438810  +
test cl 2 +
jnz loc_438800  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_4387C3  +
add ecx edx +
test esi 2 +
jz loc_4387E4  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_4387EC  +
mov byte ptr [ecx] 0 +
mov edx [ebx] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [edx] eax +
jmp loc_438790  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub esi 2 +
jmp loc_4387BC  +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 1Bh +
jmp loc_4387B7  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov edi [esp+28h+arg_0] +
jz loc_438880  +
add eax 4Ch +
call sub_438780  +
mov [eax+10h] esi +
mov ebx eax +
mov dword ptr [eax+18h] 2 +
mov [esp+28h+var_28] 0Ch +
call sub_4529F0  +
mov ecx [esp+28h+arg_4] +
mov [eax] ebp +
mov [eax+4] edi +
mov [eax+8] edi +
mov [ebx+14h] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
mov eax [esp+28h+arg_8] +
lea eax [ecx+eax*4] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [eax+4Ch] +
test edx edx +
jz loc_438833  +
cmp dword ptr [edx+18h] 2 +
jz loc_438892  +
mov ebp [edx+14h] +
jmp loc_438833  +
mov edx [edx+14h] +
mov ebp [edx] +
jmp loc_438833  +
***
push edi  +
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [eax+24h] +
mov ebx [edx] +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
lea edx [ebx+1] +
mov eax edx +
shl eax 4 +
sub ecx esi +
cmp ecx eax +
jnb loc_438966  +
lea eax [ebp+24h] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_20] 10h +
mov [esp+28h+var_28] ebp +
call sub_43EF60  +
mov eax [ebp+24h] +
mov ebx [edi] +
mov esi [eax+8] +
lea edx [ebx+1] +
mov [edi] edx +
shl ebx 4 +
add esp 1Ch +
lea eax [esi+ebx] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0F0h] +
mov [esp+44h+var_24] eax +
mov eax edi +
mov [esp+44h+var_28] edx +
lea edx [edx+0Ch] +
call sub_438920  +
mov [edi+0F0h] eax +
mov [esp+44h+var_44] edi +
call sub_43FEA0  +
mov [edi+0F0h] ebx +
mov [esp+44h+var_18] eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_438B5B  +
mov ecx [esp+44h+var_24] +
cmp byte ptr [ecx+25Ah] 0 +
jz loc_438B77  +
mov ecx [esp+44h+var_28] +
movzx ebx word ptr [ecx+10h] +
test bx bx +
jz loc_438B77  +
cmp al 38h +
jz loc_4389F3  +
cmp al 3Eh +
jnz loc_438B77  +
mov ecx [esp+44h+var_18] +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
lea ecx [eax+1] +
lea ebp [eax+edx-1] +
cmp ebp ecx +
jbe loc_438B77  +
mov esi ecx +
mov ecx ebp +
cmp ecx esi +
jbe loc_438B50  +
movzx eax byte ptr [esi] +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4D0620[edx+edx] +
test dh 2 +
jz loc_438A56  +
jmp loc_438B90  +
add esi 1 +
cmp esi ecx +
jz loc_438B50  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4D0620[edx+edx] +
test dh 2 +
jnz loc_438B90  +
cmp al 24h +
jnz loc_438A34  +
cmp byte ptr [edi+262h] 0 +
jz loc_438A34  +
cmp ecx esi +
jbe loc_438B50  +
movzx eax byte ptr [esi] +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4D0620[edx+edx] +
jmp loc_438A91  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4D0620[edx+edx] +
test dx 204h +
jnz loc_438AA5  +
cmp al 24h +
jnz loc_438AAC  +
cmp byte ptr [edi+262h] 0 +
jz loc_438AAC  +
add esi 1 +
cmp ecx esi +
ja loc_438A83  +
mov edi esi +
sub edi [esp+44h+var_30] +
test ebx ebx +
jz loc_438B3C  +
mov eax [esp+44h+var_28] +
lea edx [ebx+1] +
mov ebx 1 +
mov [esp+44h+var_1C] esi +
mov [esp+44h+var_20] ecx +
mov ebp [eax] +
mov esi ebp +
mov ebp edx +
jmp loc_438AE1  +
add ebx 1 +
cmp ebx ebp +
jz loc_438B83  +
mov eax [esi+ebx*4-4] +
cmp [eax+4] edi +
jnz loc_438AD6  +
mov eax [eax] +
mov [esp+44h+var_3C] edi +
mov [esp+44h+var_2C] eax +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_438AD6  +
mov eax [esp+44h+var_2C] +
mov ecx [esp+44h+var_20] +
mov [esp+44h+var_3C] offset aMacroArgumentS +
mov esi [esp+44h+var_1C] +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_30] ecx +
mov [esp+44h+var_44] eax +
call sub_43C650  +
mov ecx [esp+44h+var_30] +
cmp esi ecx +
jnb loc_438B77  +
mov eax [esp+44h+var_28] +
cmp ecx esi +
movzx ebx word ptr [eax+10h] +
ja loc_438A18  +
mov [esp+44h+var_30] esi +
xor edi edi +
jmp loc_438AB2  +
mov ecx [esp+44h+var_18] +
mov edx [ecx+8] +
test byte ptr [edx+15h] 10h +
jz loc_4389C5  +
mov byte ptr [ecx+4] 50h +
movzx eax word ptr [edx+18h] +
mov [ecx+8] eax +
mov eax [esp+44h+var_18] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+44h+var_20] +
mov esi [esp+44h+var_1C] +
jmp loc_438B3C  +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
jmp loc_438A91  +
***
sub esp 24h +
mov ebx [esp+24h+arg_4] +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_438BC0  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test byte ptr [ebx+15h] 1 +
jnz loc_438BB4  +
mov esi [ebx+18h] +
test byte ptr [esi+14h] 8 +
jnz loc_438BB4  +
mov eax [esp+24h+arg_0] +
mov edx [esi+8] +
mov eax [eax+1Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_42BE00  +
mov eax [eax+10h] +
test eax eax +
jns loc_438BB4  +
mov eax [esi+8] +
mov edx [ebx] +
mov [esp+24h+var_14] offset aMacroSIsNotUse +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_20] 0Eh +
mov [esp+24h+var_24] eax +
call sub_43C7A0  +
jmp loc_438BB4  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov eax [ebx+18h] +
cmp eax 0Ah +
ja loc_438E50  +
jmp ds:off_4CD154[eax*4]  +
mov eax [esi+224h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ebx eax +
nop   +
mov [esp+3Ch+var_38] 15h +
mov [esp+3Ch+var_3C] esi +
call sub_43EFF0  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] offset aU_0 +
mov [esp+3Ch+var_3C] eax +
mov edi eax +
call sub_47D150  +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+270h] 0 +
jz loc_438EE6  +
mov edx [esi+1Ch] +
mov eax [edx+2Ch] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_42C480  +
mov ebx eax +
jmp loc_438C50  +
cmp byte ptr [esi+256h] 0 +
jnz loc_438EC3  +
mov eax [esi+154h] +
test eax eax +
jz loc_438F39  +
cmp dword ptr [ebx+18h] 1 +
jz loc_438F11  +
mov edi [esi+158h] +
test edi edi +
jnz loc_438C76  +
mov ebx 1 +
jmp loc_438C50  +
cmp eax 2 +
jz loc_438F20  +
mov eax [esi+0A0h] +
mov [esp+3Ch+var_3C] eax +
call sub_44B340  +
test eax eax +
mov ebx eax +
jz loc_4390A8  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+eax+3] +
mov [esp+3Ch+var_38] eax +
call sub_43EFF0  +
mov edi eax +
mov byte ptr [eax] 22h +
lea edx [eax+1] +
lea eax [ebx+ebp] +
cmp ebx eax +
jz loc_438D4C  +
add ebx 1 +
movzx ecx byte ptr [ebx-1] +
cmp cl 22h +
jz loc_438D3F  +
cmp cl 5Ch +
jnz loc_438E78  +
mov byte ptr [edx] 5Ch +
add edx 2 +
mov [edx-1] cl +
cmp ebx eax +
jnz loc_438D2A  +
mov byte ptr [edx] 22h +
mov eax edi +
mov byte ptr [edx+1] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
mov ebx [eax+20h] +
sub ebx 1 +
jmp loc_438C50  +
mov eax [esi] +
test eax eax +
jz loc_438CD2  +
xor ebx ebx +
cmp byte ptr [eax+3Dh] 0 +
setz bl  +
jmp loc_438C50  +
cmp byte ptr [esi+256h] 0 +
jnz loc_438EA0  +
mov [esp+3Ch+var_3C] esi +
call sub_44B3E0  +
mov edi [eax+30h] +
mov ebx eax +
test edi edi +
jnz loc_438CCE  +
mov [esp+3Ch+var_3C] eax +
call sub_44B3F0  +
test eax eax +
jz loc_439077  +
mov [esp+3Ch+var_3C] eax +
call sub_44B350  +
test eax eax +
jz loc_43907F  +
add eax 24h +
mov [esp+3Ch+var_3C] eax +
call localtime  +
test eax eax +
jz loc_43907F  +
mov [esp+3Ch+var_3C] eax +
call asctime  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_20] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+2] +
mov [esp+3Ch+var_38] eax +
call sub_43EFF0  +
mov edx [esp+3Ch+var_20] +
mov byte ptr [eax] 22h +
mov edi eax +
lea eax [eax+1] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov byte ptr [edi+ebp] 22h +
mov [ebx+30h] edi +
jmp loc_438CCE  +
cmp byte ptr [esi+2A8h] 0 +
jz loc_438E35  +
cmp byte ptr [esi+8] 0 +
jnz loc_438E82  +
mov ebx [esi+2E8h] +
lea eax [ebx+1] +
mov [esi+2E8h] eax +
jmp loc_438C50  +
mov eax [ebx] +
mov ebx 1 +
mov [esp+3Ch+var_34] offset aInvalidBuiltIn +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43C650  +
jmp loc_438C50  +
mov [edx] cl +
add edx 1 +
jmp loc_438D26  +
mov [esp+3Ch+var_34] offset a__counter__Exp +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
call sub_43C650  +
jmp loc_438E35  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43C690  +
jmp loc_438D95  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43C690  +
jmp loc_438CB0  +
mov eax [esi+1Ch] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_42C5F0  +
mov edx [esi+1Ch] +
jmp loc_438C93  +
mov edi [esi+154h] +
jmp loc_438CCE  +
mov eax [esi+1Ch] +
mov edx [eax+2Ch] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_42C4D0  +
mov ebx eax +
jmp loc_438D01  +
mov eax [esi+15Ch] +
cmp eax 0FFFFFFFEh +
jz loc_438FEF  +
test eax eax +
js loc_439009  +
lea eax [esi+15Ch] +
mov [esp+3Ch+var_3C] eax +
call gmtime  +
mov edi eax +
test edi edi +
jz loc_439046  +
mov [esp+3Ch+var_38] 0Eh +
mov [esp+3Ch+var_3C] esi +
call sub_43EFF0  +
mov ecx [edi+14h] +
mov edx [edi+0Ch] +
add ecx 76Ch +
mov [esi+154h] eax +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] edx +
mov edx [edi+10h] +
mov [esp+3Ch+var_38] offset aS2d4d +
mov [esp+3Ch+var_3C] eax +
mov edx ds:off_4CD8C0[edx*4] +
mov [esp+3Ch+var_34] edx +
call sub_47D150  +
mov [esp+3Ch+var_38] 0Bh +
mov [esp+3Ch+var_3C] esi +
call sub_43EFF0  +
mov ebp [edi] +
mov ecx [edi+4] +
mov edx [edi+8] +
mov [esi+158h] eax +
mov [esp+3Ch+var_2C] ebp +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset a02d02d02d +
mov [esp+3Ch+var_3C] eax +
call sub_47D150  +
jmp loc_438CBE  +
mov eax [esi+22Ch] +
test eax eax +
jz loc_439009  +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov [esi+15Ch] eax +
jmp loc_438F48  +
mov edi ds:__imp__errno +
call edi  +
mov dword ptr [eax] 0 +
mov [esp-30h+arg_1C] 0 +
call time  +
cmp eax 0FFFFFFFFh +
mov [esp-30h+arg_48] eax +
jz loc_43903F  +
lea eax [esp-30h+arg_48] +
mov [esp-30h+arg_1C] eax +
call localtime  +
mov edi eax +
jmp loc_438F60  +
call edi  +
cmp dword ptr [eax] 0 +
jz loc_43902C  +
mov [esp-30h+arg_24] offset aCouldNotDeterm +
mov [esp-30h+arg_20] 0 +
mov [esp-30h+arg_1C] esi +
call sub_43C950  +
mov dword ptr [esi+154h] offset a????????? +
mov dword ptr [esi+158h] offset a?????? +
jmp loc_438CBE  +
mov edi [ebx+30h] +
jmp loc_438CCE  +
mov [esp+3Ch+var_34] offset aCouldNotDete_0 +
mov edi offset a?????????????? +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_43C950  +
mov dword ptr [ebx+30h] offset a?????????????? +
jmp loc_438C76  +
mov [esp+3Ch+var_34] offset a_cpp_builtin_m +
mov [esp+3Ch+var_38] 12Eh +
mov [esp+3Ch+var_3C] offset a____GccLibcppM +
call sub_424080  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov edx [esp+40h+var_34] +
mov ebx [esp+40h+var_30] +
mov eax [esp+40h+var_38] +
add ebx edx +
nop   +
cmp edx ebx +
jz loc_439102  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 22h +
jz loc_4390F5  +
cmp cl 5Ch +
jnz loc_439104  +
mov byte ptr [eax] 5Ch +
add eax 2 +
mov [eax-1] cl +
cmp edx ebx +
jnz loc_4390E4  +
pop ebx  +
retn   +
mov [eax] cl +
add eax 1 +
jmp loc_4390E0  +
***
sub esp 24h +
mov ecx [esp+24h+arg_4] +
mov eax [esp+24h+arg_C] +
mov ebx [esp+24h+arg_8] +
movzx edx word ptr [ecx+10h] +
cmp edx eax +
jz loc_4391D0  +
jbe loc_4391B4  +
lea esi [eax+1] +
cmp edx esi +
jnz loc_439180  +
movzx ecx byte ptr [ecx+14h] +
test cl 2 +
jz loc_439180  +
mov eax [esp+24h+arg_0] +
mov ebx 1 +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4391AC  +
and ecx 4 +
jnz loc_4391AC  +
cmp byte ptr [eax+248h] 0 +
jz loc_4391E0  +
mov [esp+24h+var_1C] offset aIsoC11Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_43C650  +
jmp loc_4391AC  +
mov ecx [ebx] +
mov [esp+24h+var_10] eax +
mov [esp+24h+var_14] edx +
mov [esp+24h+var_1C] offset aMacroSRequires +
mov [esp+24h+var_18] ecx +
mov eax [esp+24h+arg_0] +
xor ebx ebx +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] eax +
call sub_43C650  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov ecx [ebx] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_14] eax +
mov [esp+24h+var_1C] offset aMacroSPassedUA +
mov [esp+24h+var_18] ecx +
jmp loc_439196  +
mov ebx 1 +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_1C] offset aIsoC99Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_43C650  +
jmp loc_4391AC  +
***
sub esp 4 +
mov ebx [esp+4+arg_4] +
mov esi [esp+4+arg_8] +
test ebx ebx +
jz loc_439243  +
mov eax [esp+4+arg_0] +
add eax 4Ch +
call sub_438780  +
mov edx [esp+4+arg_C] +
shl edx 4 +
mov [eax+8] esi +
add esi edx +
mov dword ptr [eax+18h] 1 +
mov [eax+14h] ebx +
mov dword ptr [eax+10h] 0 +
mov [eax+0Ch] esi +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+4+arg_0] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_439211  +
cmp dword ptr [eax+18h] 2 +
jz loc_439260  +
mov ebx [eax+14h] +
jmp loc_439211  +
mov eax [eax+14h] +
mov ebx [eax] +
jmp loc_439211  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [edx+18h] 7 +
jz loc_439380  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_438C20  +
mov [esp+48h+var_48] eax +
mov [ebp+var_2C] eax +
call strlen  +
mov ecx eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
mov eax [ebp+var_2C] +
lea edx [esp+48h+var_2C+3] +
and edx 0FFFFFFF0h +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] edx +
call memcpy  +
mov edx [ebp+var_2C] +
mov ecx [ebp+var_30] +
mov byte ptr [edx+ecx] 0Ah +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
call sub_437A80  +
mov [esp+48h+var_48] ebx +
call sub_43DAC0  +
mov [esp+48h+var_48] ebx +
call sub_43E390  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_43FEA0  +
mov [ebp+var_2C] eax +
mov [eax] edi +
mov eax [ebx+4Ch] +
cmp dword ptr [eax+18h] 2 +
jz loc_4393A0  +
mov eax [ebp+var_2C] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_439200  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jz loc_43936A  +
mov eax [esi] +
mov [esp+48h+var_40] offset aInvalidBuiltIn +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43C650  +
mov [esp+48h+var_48] ebx +
call sub_437BE0  +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [ebx+8] 0 +
jnz loc_439377  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] ecx +
call sub_4382A0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_1C] +
mov edx 1 +
mov eax ebx +
mov [ebp+var_1C] 0 +
call sub_438740  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] esi +
mov [ebp+var_30] eax +
mov eax [ebx+1Ch] +
mov [esp+48h+var_48] eax +
call sub_42B950  +
mov edx [ebx+1Ch] +
mov edi [ebp+var_30] +
mov ecx [ebp+var_2C] +
mov edx [edx+4Ch] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov eax edi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edx +
mov edx [ebp+var_1C] +
call sub_4388A0  +
mov eax [edi+4] +
mov ecx edi +
mov [esp+48h+var_40] 1 +
mov edx esi +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
mov eax ebx +
call sub_438820  +
jmp loc_439343  +
***
sub esp 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi+4Ch] +
lea eax [edi+30h] +
cmp ebx eax +
jz loc_43953E  +
mov esi [ebx+14h] +
test esi esi +
jz loc_4394BB  +
cmp dword ptr [ebx+18h] 2 +
jz loc_4394E6  +
mov eax [ebx+4] +
test eax eax +
jz loc_4394B0  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_439530  +
cmp esi eax +
mov ebp esi +
jz loc_439518  +
and word ptr [esi+14h] 0F7FFh +
cmp [edi+68h] esi +
jz loc_43951F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4394CA  +
mov [esp+1Ch+var_1C] eax +
call sub_43EFC0  +
mov eax [ebx+4] +
mov [edi+4Ch] eax +
mov dword ptr [eax] 0 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov edx [ebx+10h] +
mov ebp [esi] +
test edx edx +
jz loc_439505  +
mov eax [esi+4] +
test eax eax +
jz loc_439505  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov [esp+1Ch+var_1C] esi +
call free  +
test ebp ebp +
mov dword ptr [ebx+14h] 0 +
jnz loc_439537  +
mov esi ebp +
cmp [edi+68h] esi +
jnz loc_4394BB  +
mov eax [ebx+4] +
test eax eax +
jnz loc_4394BB  +
mov dword ptr [edi+68h] 0 +
jmp loc_4394BB  +
mov eax [eax] +
jmp loc_4394AA  +
mov esi ebp +
jmp loc_439496  +
mov [esp+1Ch+var_14] offset a_cpp_pop_conte +
mov [esp+1Ch+var_18] 8FAh +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_424080  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_439586  +
test eax eax +
jz loc_439590  +
mov eax [eax+18h] +
test eax eax +
jz loc_439590  +
movzx eax byte ptr [eax+14h] +
shr al 2 +
and eax 1 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_439574  +
lea esi [esi+0] +
xor eax eax +
retn   +
***
mov edx [esp+arg_4] +
add [eax+108h] edx +
nop   +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_4395F0  +
mov ebx [eax+0F0h] +
lea ecx [ebx-10h] +
mov ebx [eax+104h] +
mov [eax+0F0h] ecx +
cmp ecx [ebx+8] +
jnz loc_4395B0  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_4395B0  +
mov [eax+104h] ecx +
mov ecx [ecx+0Ch] +
sub edx 1 +
cmp edx 0FFFFFFFFh +
mov [eax+0F0h] ecx +
jnz loc_4395B8  +
pop ebx  +
retn   +
***
sub esp 1Ch +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [ebp+var_28] edx +
mov [esp+48h+var_48] eax +
call sub_43E4C0  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_43E4C0  +
lea eax [esi+eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
mov eax [edi] +
lea esi [esp+48h+var_1D] +
and esi 0FFFFFFF0h +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_43E560  +
mov edx [edi] +
cmp byte ptr [edx+4] 7 +
mov [ebp+var_1D+1] eax +
jz loc_439810  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+4] 53h +
jnz loc_43981C  +
mov byte ptr [eax] 0Ah +
sub eax esi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_437A80  +
mov [esp+48h+var_48] ebx +
call sub_43DAC0  +
mov [esp+48h+var_48] ebx +
call sub_43E390  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_43FEA0  +
mov edx [ebx] +
mov ecx [edx+10h] +
cmp [edx] ecx +
jz loc_439850  +
mov ecx [eax] +
mov [esp+48h+var_48] ebx +
mov [ebp+var_24] eax +
mov [ebp-20h] ecx +
call sub_437BE0  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_439600  +
mov eax [ebp+var_1D+1] +
mov byte ptr [eax] 0 +
mov edx [edi] +
mov eax [ebp+var_24] +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov ecx [ebp-20h] +
mov [eax+0Ch] edx +
mov [edi] eax +
xor edi edi +
and word ptr [eax+6] 0FFF7h +
cmp dword ptr [ebx+244h] 0Fh +
mov [eax] ecx +
jz loc_439800  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4416D0  +
mov [esp+48h+var_34] esi +
mov [esp+48h+var_38] offset aPastingSAndSDo +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_30] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_40] eax +
call sub_43C750  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4] 0 +
jnz loc_439840  +
mov eax [ebp+var_1D+1] +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_43E560  +
jmp loc_439722  +
mov edx [ebp+var_1D+1] +
mov eax edx +
add eax 1 +
mov byte ptr [edx] 20h +
jmp loc_439715  +
mov [edi] eax +
mov edi 1 +
mov [esp+48h+var_48] ebx +
call sub_437BE0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+98h+var_64] edx +
mov byte ptr [ebp+0ECh] 0 +
mov byte ptr [ebp+0Bh] 0 +
mov byte ptr [ebp+6Ch] 1 +
movzx edx word ptr [edx+14h] +
mov [esp+98h+var_58] ecx +
mov eax edx +
shr ax 6 +
mov ecx eax +
and cx 84h +
cmp cx 4 +
jz loc_439A23  +
test al 4 +
jnz loc_4399D8  +
mov esi [esp+98h+var_64] +
xor edi edi +
mov esi [esi+18h] +
test byte ptr [esi+14h] 1 +
mov [esp+98h+var_60] esi +
jnz loc_439A61  +
mov esi [esp+98h+var_64] +
mov ecx eax +
or ecx 20h +
shl ecx 6 +
movzx edx word ptr [esi+14h] +
and edx 3Fh +
or edx ecx +
test al 80h +
mov [esi+14h] dx +
jnz loc_439912  +
or al 0A0h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov [esi+14h] dx +
mov eax [ebp+214h] +
test eax eax +
jz loc_439912  +
mov edx [ebp+20h] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
call eax  +
mov eax [ebp+220h] +
test eax eax +
jz loc_439934  +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_94] esi +
call eax  +
mov esi [esp+98h+var_60] +
movzx eax byte ptr [esi+14h] +
or eax 8 +
cmp word ptr [esi+10h] 0 +
mov [esi+14h] al +
jz loc_439B47  +
test edi edi +
jz loc_439C65  +
cmp byte ptr [ebp+8] 0 +
jz loc_439C2B  +
lea eax [ebp+4Ch] +
mov [esp+98h+var_74] eax +
mov [esp+98h+var_78] ebp +
jmp loc_439972  +
mov edi esi +
mov eax [esp+98h+var_74] +
mov ebp [edi+4] +
mov esi [edi] +
mov ebx [edi+8] +
mov dword ptr [edi] 0 +
call sub_438780  +
sub ebx ebp +
sar ebx 2 +
lea edx [ebp+ebx*4+0] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+10h] edi +
mov [eax+8] ebp +
mov [eax+0Ch] edx +
mov eax [esp+98h+var_78] +
cmp byte ptr [eax+26Dh] 0 +
jnz loc_4399BC  +
add ds:dword_4D928C ebx +
test esi esi +
jnz loc_439970  +
mov ebp [esp+98h+var_78] +
mov eax 2 +
mov byte ptr [ebp+6Ch] 0 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+68h] +
mov byte ptr [ebp+6Ch] 0 +
test byte ptr [eax+15h] 1 +
jz loc_439A08  +
mov eax [ebp+64h] +
mov ecx [esp+98h+arg_0] +
mov edx [esp+98h+var_64] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_439270  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+18h] +
test byte ptr [eax+14h] 1 +
jz loc_4399E5  +
mov eax [ebp+0F0h] +
mov eax [eax-10h] +
mov [esp+98h+arg_0] eax +
jmp loc_4399E8  +
or al 80h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov eax [esp+98h+var_64] +
mov [eax+14h] dx +
mov eax [ebp+228h] +
test eax eax +
jz loc_439A97  +
mov edi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edi +
call eax  +
test al al +
jz loc_439A97  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_4398AE  +
add byte ptr [ebp+10h] 1 +
xor ebx ebx +
add dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 1 +
mov [esp+98h+var_98] ebp +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jnz loc_439AC6  +
test ebx ebx +
jz loc_439AC2  +
test byte ptr [ebx+6] 1 +
jnz loc_439A72  +
mov edx [eax+8] +
test edx edx +
cmovz ebx eax +
jmp loc_439A72  +
mov eax [ebp+214h] +
test eax eax +
jz loc_439A50  +
mov edx [ebp+20h] +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_90] esi +
call eax  +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_4398AE  +
mov ebx eax +
jmp loc_439A72  +
cmp dl 14h +
jz loc_439CC9  +
cmp dl 16h +
jnz loc_439ADE  +
lea edx [ebp+170h] +
cmp eax edx +
jnz loc_439B0E  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_439600  +
test ebx ebx +
jz loc_439B0E  +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_439200  +
sub dword ptr [ebp+10Ch] 1 +
xor edi edi +
sub byte ptr [ebp+10h] 1 +
mov byte ptr [ebp+11h] 0 +
cmp byte ptr [ebp+25Ah] 0 +
jnz loc_439C91  +
test edi edi +
jz loc_439B3C  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] ebp +
call sub_43ED80  +
mov byte ptr [ebp+6Ch] 0 +
xor eax eax +
jmp loc_4399FD  +
test al 20h +
jnz loc_43ADF8  +
mov eax [esp+98h+var_60] +
mov esi [eax+0Ch] +
mov ebx [eax+4] +
mov [esp+98h+var_74] esi +
cmp byte ptr [ebp+26Dh] 0 +
jz loc_439C73  +
mov esi [esp+98h+var_74] +
lea ecx [esp+98h+var_1C] +
mov eax ebp +
mov [esp+98h+var_1C] 0 +
mov edx esi +
call sub_438740  +
mov ecx [esp+98h+arg_0] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_78] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_64] +
mov [esp+98h+var_8C] esi +
xor esi esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] ecx +
call sub_42B950  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_439BF7  +
mov [esp+98h+var_6C] ebp +
mov ebp [esp+98h+var_74] +
mov [esp+98h+var_70] edi +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
add ebx 10h +
mov edx [esp+98h+var_1C] +
mov [esp+98h+var_8C] esi +
add esi 1 +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_78] +
call sub_4388A0  +
cmp esi ebp +
jnz loc_439BC5  +
mov edi [esp+98h+var_70] +
mov ebp [esp+98h+var_6C] +
mov ecx [esp+98h+var_78] +
mov esi [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+4] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_1C] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_438820  +
mov eax [esp+98h+var_74] +
add ds:dword_4D928C eax +
jmp loc_43994D  +
mov [esp+98h+var_98] ebp +
call sub_43E390  +
mov esi [esp+98h+var_58] +
xor edx edx +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] dx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] eax +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_439200  +
jmp loc_43995F  +
mov byte ptr [ebp+6Ch] 0 +
mov eax 1 +
jmp loc_4399FD  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] eax +
call sub_439200  +
jmp loc_439C1C  +
mov eax [esp+98h+var_64] +
mov eax [eax+18h] +
test byte ptr [eax+14h] 4 +
jnz loc_439B2C  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aFunctionLikeMa +
mov [esp+98h+var_94] 6 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_43C690  +
jmp loc_439B2C  +
mov eax [esp+98h+var_64] +
mov byte ptr [ebp+11h] 2 +
cmp byte ptr [ebp+26Dh] 0 +
mov eax [eax+18h] +
setnz byte ptr [esp+98h+var_70]  +
movzx ebx word ptr [eax+10h] +
mov [esp+98h+var_5C] eax +
test bx bx +
jz loc_43AAA9  +
imul eax ebx +
imul ebx ebx +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_43EDB0  +
mov edi eax +
mov [esp+98h+var_40] eax +
mov eax [eax+4] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov esi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_44] eax +
call memset  +
mov eax esi +
add eax ebx +
lea ecx [ebp+170h] +
mov [edi+8] eax +
mov [esp+98h+var_74] edi +
xor edi edi +
mov [esp+98h+var_48] ecx +
mov [esp+98h+var_50] esi +
mov [esp+98h+var_54] 0 +
lea esi [esi+0] +
mov esi [esp+98h+var_50] +
add [esp+98h+var_54] 1 +
cmp byte ptr [esp+98h+var_70] 0 +
mov [esi] eax +
jnz loc_43A04F  +
mov [esp+98h+var_78] 2 +
mov ecx [esp+98h+var_78] +
xor ebx ebx +
mov [esp+98h+var_6C] 32h +
mov esi [esp+98h+var_50] +
mov [esp+98h+var_68] 0 +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jb loc_439E3C  +
cmp byte ptr [esp+98h+var_70] 0 +
jz loc_439DAD  +
mov eax [esp+98h+var_6C] +
cmp [esp+98h+var_78] eax +
ja loc_439E86  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_43AF10  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 53h +
jz loc_439E60  +
cmp al 14h +
jz loc_439E68  +
cmp al 15h +
jz loc_439E70  +
cmp al 13h +
jz loc_439EB0  +
cmp al 16h +
jz loc_439ED8  +
cmp al 25h +
jz loc_439F86  +
cmp al 51h +
jz loc_439F95  +
xor eax eax +
mov ecx [esp+98h+var_1C] +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_94] 0 +
setnz al  +
add ebx 1 +
mov [esp+98h+var_90] eax +
mov eax esi +
call sub_4386C0  +
lea eax [ebx+2] +
mov [esp+98h+var_78] eax +
mov eax [esi] +
mov ecx [esp+98h+var_78] +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jnb loc_439D98  +
mov [esp+98h+var_90] 0FA0h +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] ebp +
call sub_43EE50  +
mov [esp+98h+var_74] eax +
mov eax [eax+8] +
mov [esi] eax +
jmp loc_439D98  +
test ebx ebx +
jnz loc_439DF6  +
mov eax [esi] +
jmp loc_439E28  +
add [esp+98h+var_68] 1 +
jmp loc_439DF6  +
mov ecx [esp+98h+var_68] +
mov eax ecx +
sub eax 1 +
test ecx ecx +
jz loc_439ED8  +
mov [esp+98h+var_68] eax +
jmp loc_439DF6  +
add [esp+98h+var_6C] 3E8h +
mov ecx [esp+98h+var_6C] +
mov eax [esi+14h] +
lea edx ds:0[ecx*4] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_452A70  +
mov [esi+14h] eax +
jmp loc_439DAD  +
mov eax [esp+98h+var_68] +
test eax eax +
jnz loc_439DF6  +
mov eax [esp+98h+var_5C] +
test byte ptr [eax+14h] 2 +
jz loc_439ED8  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jz loc_439DF6  +
mov esi edx +
test ebx ebx +
jz loc_439EFF  +
mov eax [esp+98h+var_50] +
mov edx [eax] +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jz loc_439EFA  +
jmp loc_439EFF  +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jnz loc_439EFF  +
sub ebx 1 +
jnz loc_439EF0  +
mov eax [esp+98h+var_50] +
mov ecx [ebp+170h] +
mov edx [esp+98h+var_48] +
mov [eax+0Ch] ebx +
xor eax eax +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebx +
setnz al  +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_50] +
call sub_4386C0  +
mov eax [esp+98h+var_5C] +
movzx edx word ptr [eax+10h] +
movzx eax dx +
cmp [esp+98h+var_54] eax +
ja loc_439F6A  +
mov ecx [esp+98h+var_50] +
mov ecx [ecx] +
lea ecx [ecx+ebx*4+4] +
mov ebx [esp+98h+var_74] +
mov [ebx+8] ecx +
mov ebx [esp+98h+var_50] +
mov ecx ebx +
add ecx 1Ch +
cmp [esp+98h+var_54] eax +
cmovz ecx ebx +
mov [esp+98h+var_50] ecx +
movzx eax byte ptr [esi+4] +
lea ecx [eax-15h] +
cmp cl 1 +
jbe loc_43A069  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
jmp loc_439D50  +
test byte ptr [edx+6] 40h +
jz loc_439DF6  +
jmp loc_439ED8  +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_4C] edx +
call sub_43E390  +
mov edx [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebx +
mov ecx eax +
mov eax [edx] +
mov ebx ecx +
mov [ecx] eax +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov eax [edx+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_43A009  +
mov edx [edi+8] +
mov eax [edi+0Ch] +
sub eax edx +
cmp eax 3 +
ja loc_439FEA  +
sub edx [edi+4] +
mov [esp+98h+var_98] ebp +
add edx edx +
mov [esp+98h+var_94] edx +
call sub_43EDB0  +
mov edx [eax+8] +
mov [eax] edi +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jz loc_43A030  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_43AF10  +
cmp byte ptr [eax+4] 16h +
mov ebx eax +
jz loc_43A030  +
test edi edi +
jnz loc_439FC5  +
mov [esp+98h+var_94] 80h +
mov [esp+98h+var_98] ebp +
call sub_43EDB0  +
mov edx [eax+8] +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jnz loc_439FF6  +
nop   +
mov ecx ebx +
mov ebx [esp+98h+var_4C] +
mov byte ptr [ebp+11h] 2 +
mov byte ptr [ebp+10h] 1 +
cmp byte ptr [ecx+4] 16h +
jnz loc_439E26  +
mov esi ecx +
jmp loc_439EDA  +
mov [esp+98h+var_98] 0C8h +
call sub_4529F0  +
mov esi [esp+98h+var_50] +
mov [esi+14h] eax +
mov eax [esi] +
jmp loc_439D66  +
mov esi [esp+98h+var_54] +
cmp al 16h +
mov [esp+98h+var_3C] esi +
jz loc_43ABE5  +
cmp [esp+98h+var_54] 1 +
jz loc_43ABB8  +
mov eax [esp+98h+var_54] +
mov esi [esp+98h+var_5C] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] eax +
call sub_439110  +
test al al +
jz loc_43AC25  +
test byte ptr [esi+14h] 2 +
jz loc_43A0CF  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jb loc_43ABA4  +
cmp [esp+98h+var_54] 1 +
jz loc_43AB88  +
mov eax [esp+98h+var_60] +
sub byte ptr [ebp+10h] 1 +
sub dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 0 +
cmp word ptr [eax+10h] 0 +
jnz loc_43A175  +
mov eax [esp+98h+var_40] +
xor ebx ebx +
mov esi [eax+4] +
mov eax [esp+98h+var_3C] +
test eax eax +
jz loc_43A158  +
mov [esp+98h+var_78] edi +
mov edi esi +
mov esi [esp+98h+var_3C] +
mov edx [edi+4] +
test edx edx +
jz loc_43A11E  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+4] 0 +
mov edx [edi+14h] +
test edx edx +
jz loc_43A134  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+14h] 0 +
mov edx [edi+18h] +
test edx edx +
jz loc_43A14A  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+18h] 0 +
add ebx 1 +
add edi 1Ch +
cmp ebx esi +
jnz loc_43A108  +
mov edi [esp+98h+var_78] +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] eax +
call sub_43EFC0  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_4398CD  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_20] 0 +
mov eax [eax+4] +
mov [esp+98h+var_38] eax +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 20h +
jnz loc_43ADB8  +
mov esi [esp+98h+var_60] +
mov eax [esi+0Ch] +
mov edx eax +
mov [esp+98h+var_78] eax +
mov eax [esi+4] +
shl edx 4 +
lea esi [eax+edx] +
mov [esp+98h+var_6C] esi +
cmp [esp+98h+var_6C] eax +
jbe loc_43ABD8  +
mov esi [esp+98h+var_78] +
mov [esp+98h+var_4C] edi +
mov [esp+98h+var_74] ebp +
mov [esp+98h+var_70] esi +
mov esi eax +
lea eax [ebp+4Ch] +
mov [esp+98h+var_48] eax +
lea eax [ebp+28h] +
mov [esp+98h+var_50] eax +
jmp loc_43A1ED  +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_43A457  +
cmp byte ptr [esi+4] 50h +
jnz loc_43A1E0  +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
add [esp+98h+var_78] 2 +
add [esp+98h+var_70] 2 +
lea ebp [edi+eax-1Ch] +
movzx eax word ptr [esi+6] +
test al 4 +
jz loc_43A411  +
mov eax [ebp+8] +
test eax eax +
jnz loc_43A1E0  +
mov eax [esp+98h+var_74] +
mov edx [eax+28h] +
mov eax [edx+8] +
mov edx [edx+0Ch] +
sub edx eax +
cmp edx 2 +
ja loc_43A252  +
mov eax [esp+98h+var_50] +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_90] 3 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] edi +
call sub_43EF60  +
mov eax [edi+28h] +
mov eax [eax+8] +
mov byte ptr [eax] 22h +
mov edi [ebp+0Ch] +
lea ebx [eax+1] +
test edi edi +
jz loc_43A3BD  +
mov [esp+98h+var_5C] 0 +
xor edi edi +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_44] esi +
mov eax [ebp+0] +
mov esi [esp+98h+var_68] +
mov esi [eax+esi*4] +
movzx eax byte ptr [esi+4] +
cmp al 53h +
jz loc_43AA19  +
lea edx [eax-3Eh] +
cmp dl 4 +
jbe loc_43A2AF  +
lea edx [eax-38h] +
cmp dl 4 +
jbe loc_43A2AF  +
mov [esp+98h+var_98] eax +
call sub_4437E0  +
test al al +
jz loc_43AD8F  +
mov [esp+98h+var_98] esi +
call sub_43E4C0  +
mov [esp+98h+var_54] 1 +
shl eax 2 +
lea edx [eax+3] +
mov eax [esp+98h+var_74] +
mov ecx [eax+28h] +
mov eax [ecx+0Ch] +
sub eax ebx +
cmp edx eax +
ja loc_43AA3D  +
mov eax [ecx+8] +
lea ecx [ebx-1] +
cmp eax ecx +
jz loc_43A2F4  +
test edi edi +
cmovz edi esi +
test byte ptr [edi+6] 1 +
jz loc_43A2F4  +
mov byte ptr [ebx] 20h +
add ebx 1 +
mov ecx [esp+98h+var_54] +
test ecx ecx +
jz loc_43A9F6  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_43EDB0  +
mov edi [eax+8] +
mov [esp+98h+var_54] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_98] eax +
call sub_43E560  +
mov ecx [esp+98h+var_54] +
mov edx eax +
cmp edi edx +
jz loc_43A35D  +
add edi 1 +
movzx eax byte ptr [edi-1] +
cmp al 22h +
jz loc_43A350  +
cmp al 5Ch +
jnz loc_43A407  +
mov byte ptr [ebx] 5Ch +
add ebx 2 +
mov [ebx-1] al +
cmp edi edx +
jnz loc_43A33D  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] eax +
call sub_43ED80  +
cmp byte ptr [esi+4] 3Dh +
jz loc_43AA71  +
xor edi edi +
mov [esp+98h+var_5C] 0 +
add [esp+98h+var_68] 1 +
mov eax [esp+98h+var_68] +
cmp eax [ebp+0Ch] +
jb loc_43A279  +
test byte ptr [esp+98h+var_5C] 1 +
mov esi [esp+98h+var_44] +
jz loc_43A3BD  +
mov eax [esp+98h+var_74] +
sub ebx 1 +
mov [esp+98h+var_90] offset aInvalidStringL +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
call sub_43C650  +
mov eax [esp+98h+var_74] +
lea edx [ebx+2] +
mov byte ptr [ebx] 22h +
lea ecx [ebx+1] +
mov edi ecx +
mov eax [eax+28h] +
sub edi [eax+8] +
mov [eax+8] edx +
mov eax [esp+98h+var_74] +
sub ecx edi +
mov [esp+98h+var_68] ecx +
mov [esp+98h+var_98] eax +
call sub_43E390  +
mov ecx [esp+98h+var_68] +
xor edx edx +
mov byte ptr [ebx+1] 0 +
mov byte ptr [eax+4] 3Eh +
mov [eax+8] edi +
mov [eax+0Ch] ecx +
mov [eax+6] dx +
mov [ebp+8] eax +
jmp loc_43A1E0  +
mov [ebx] al +
add ebx 1 +
jmp loc_43A339  +
test al 8 +
jnz loc_43A443  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jbe loc_43A424  +
test byte ptr [esi-0Ah] 8 +
jnz loc_43A443  +
mov eax [ebp+4] +
test eax eax +
jz loc_43AC49  +
mov edi [esp+98h+var_78] +
mov eax [ebp+10h] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_43A1E0  +
mov edi [esp+98h+var_78] +
mov eax [ebp+0Ch] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_43A1E0  +
mov edi [esp+98h+var_4C] +
mov ebp [esp+98h+var_74] +
movzx eax byte ptr [ebp+26Dh] +
test eax eax +
mov [esp+98h+var_48] eax +
jz loc_43A911  +
mov esi [esp+98h+var_78] +
lea ecx [esp+98h+var_20] +
mov eax ebp +
mov edx esi +
call sub_438740  +
mov edx esi +
mov esi [esp+98h+arg_0] +
cmp [esp+98h+var_48] 1 +
cmovz edx [esp+98h+var_70] +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] esi +
call sub_42B950  +
mov [esp+98h+var_68] eax +
mov eax [esp+98h+var_60] +
mov [esp+98h+var_78] 0 +
mov eax [eax+4] +
mov esi eax +
cmp esi [esp+98h+var_6C] +
lea eax [ebp+160h] +
mov [esp+98h+var_30] eax +
jnb loc_43A7DB  +
mov [esp+98h+var_2C] edi +
jmp loc_43A537  +
cmp byte ptr [ebp+26Dh] 1 +
mov edx [esp+98h+var_78] +
jbe loc_43A660  +
mov eax [esi] +
mov ecx esi +
mov edi [esp+98h+var_68] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] edi +
call sub_4388A0  +
add [esp+98h+var_78] 1 +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_43A7D7  +
cmp byte ptr [esi+4] 50h +
jnz loc_43A4F0  +
movzx edx word ptr [esi+6] +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
test dl 4 +
lea eax [edi+eax-1Ch] +
jz loc_43A79A  +
cmp byte ptr [ebp+26Dh] 0 +
lea edi [eax+8] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43A96B  +
mov [esp+98h+var_4C] 0 +
mov ebx 1 +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
cmp byte ptr [ebp+8] 0 +
jz loc_43A594  +
cmp byte ptr [ebp+9] 0 +
jz loc_43A5A7  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jz loc_43A5A7  +
test byte ptr [esi-0Ah] 8 +
jz loc_43A8C2  +
test ebx ebx +
jz loc_43A6F6  +
mov eax ebx +
mov ebx [esp+98h+var_78] +
mov [esp+98h+var_5C] esi +
mov esi [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebp +
add eax ebx +
mov [esp+98h+var_54] eax +
jmp loc_43A610  +
xor ecx ecx +
test edi edi +
mov ebp [esi] +
jz loc_43A5DA  +
mov ecx [edi] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_68] +
mov [esp+98h+var_94] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_74] +
call sub_4388A0  +
mov eax [esp+98h+var_50] +
test eax eax +
jz loc_43A640  +
cmp eax 2 +
jz loc_43A640  +
add ebx 1 +
cmp ebx [esp+98h+var_54] +
jz loc_43A671  +
mov eax [esp+98h+var_78] +
mov ecx [esp+98h+var_4C] +
cmp [esp+98h+var_48] 2 +
cmovge eax ebx +
cmp byte ptr [ecx+26Dh] 1 +
jbe loc_43A650  +
mov ecx [esp+98h+var_5C] +
cmp byte ptr [esp+98h+var_70] 0 +
mov edx [ecx] +
jnz loc_43A5D0  +
mov ecx [edi] +
mov ebp [ecx] +
jmp loc_43A5DA  +
add edi 4 +
cmp byte ptr [esp+98h+var_70] 0 +
lea eax [esi+4] +
cmovnz esi eax +
jmp loc_43A607  +
mov ecx [esp+98h+var_60] +
mov eax [esp+98h+var_5C] +
sub eax [ecx+4] +
sar eax 4 +
jmp loc_43A629  +
mov eax [esp+98h+var_60] +
mov edx esi +
sub edx [eax+4] +
sar edx 4 +
jmp loc_43A501  +
mov esi [esp+98h+var_5C] +
mov ebp [esp+98h+var_4C] +
test byte ptr [esi+6] 8 +
jz loc_43A691  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
mov [esp+98h+var_78] eax +
sub eax 4 +
mov [esp+98h+var_44] eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_43A6A1  +
test byte ptr [esi+6] 8 +
jz loc_43A993  +
mov edi [esp+98h+var_44] +
test edi edi +
jz loc_43A6E9  +
mov [esp+98h+var_98] ebp +
call sub_43E390  +
mov edx [edi] +
movzx edx byte ptr [edx+4] +
mov [eax+4] dl +
mov edx [edi] +
mov edi [esp+98h+var_44] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
mov edx [edi] +
test byte ptr [esi+6] 8 +
movzx edx word ptr [edx+6] +
jz loc_43A832  +
or edx 8 +
mov [eax+6] dx +
mov edi [esp+98h+var_44] +
mov [edi] eax +
mov eax [esp+98h+var_54] +
mov [esp+98h+var_78] eax +
jmp loc_43A52A  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_43A727  +
cmp byte ptr [ebp+268h] 0 +
jnz loc_43A727  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_43A727  +
mov eax [ebp+0] +
test eax eax +
jz loc_43AB01  +
cmp byte ptr [eax+3Dh] 0 +
jz loc_43AB01  +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_43A78D  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+248h] 0 +
mov [esp+98h+var_54] eax +
jnz loc_43A691  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_43A691  +
mov eax [ebp+0] +
test eax eax +
jz loc_43A764  +
cmp byte ptr [eax+3Dh] 0 +
jnz loc_43A691  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] 16h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_43C690  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_43A691  +
and edx 8 +
jz loc_43A83E  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43AA89  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_43A588  +
mov edi [esp+98h+var_2C] +
mov ebx [esp+98h+var_48] +
test ebx ebx +
jnz loc_43A9C6  +
mov esi [esp+98h+var_74] +
lea eax [ebp+4Ch] +
mov ebx [esi+8] +
sub ebx [esi+4] +
call sub_438780  +
mov ecx [esp+98h+var_64] +
shr ebx 2 +
mov [eax+10h] esi +
mov esi [esp+98h+var_34] +
mov dword ptr [eax+18h] 0 +
mov [eax+14h] ecx +
lea edx [esi+ebx*4] +
mov [eax+8] esi +
mov [eax+0Ch] edx +
mov esi [esp+98h+var_74] +
mov eax [esi+8] +
sub eax [esi+4] +
shr eax 2 +
add ds:dword_4D928C eax +
jmp loc_43A0ED  +
and edx 0FFFFFFF7h +
mov [eax+6] dx +
jmp loc_43A6E3  +
mov edi [esp+98h+var_60] +
cmp esi [edi+4] +
jz loc_43A936  +
test byte ptr [esi-0Ah] 8 +
jz loc_43A936  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz cl  +
test cl cl +
mov byte ptr [esp+98h+var_70] cl +
mov [esp+98h+var_4C] 0 +
jz loc_43A87F  +
xor edx edx +
call sub_438710  +
mov [esp+98h+var_4C] eax +
mov eax [esp+98h+var_74] +
mov ecx [eax+4] +
mov eax [eax+8] +
mov [esp+98h+var_5C] ecx +
mov edx eax +
sub edx ecx +
cmp edx 3 +
jbe loc_43AAB8  +
mov ecx [eax-4] +
lea edx [eax-4] +
mov [esp+98h+var_44] edx +
cmp byte ptr [ecx+4] 13h +
jz loc_43AD30  +
xor eax eax +
test ebx ebx +
cmovnz edx eax +
mov [esp+98h+var_50] eax +
mov [esp+98h+var_44] edx +
jmp loc_43A588  +
mov [esp+98h+var_98] ebp +
call sub_43E390  +
xor edx edx +
mov [eax+6] dx +
mov edx [esp+98h+var_78] +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
cmp byte ptr [ebp+26Dh] 1 +
jbe loc_43AAF0  +
mov ecx [eax] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_68] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_90] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ecx +
mov ecx eax +
mov eax [esp+98h+var_74] +
call sub_4388A0  +
jmp loc_43A5A7  +
mov edx [esp+98h+var_78] +
xor ecx ecx +
mov eax ebp +
call sub_438740  +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
jmp loc_43A4C0  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+10h] +
mov edi [eax+4] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43AACD  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
jmp loc_43A588  +
mov edx 1 +
mov ebx 1 +
call sub_438710  +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43A588  +
mov eax [ebp+160h] +
mov ecx [esp+98h+var_30] +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_8C] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] 0 +
call sub_4388A0  +
jmp loc_43A6A1  +
mov ecx [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+8] +
sub eax [ecx+4] +
shr eax 2 +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_34] +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_20] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_438820  +
jmp loc_43A81A  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_43E560  +
mov ebx eax +
jmp loc_43A36D  +
test edi edi +
jz loc_43AD87  +
test byte ptr [edi+6] 1 +
jnz loc_43A381  +
mov esi [esi+8] +
mov eax 0 +
test esi esi +
cmovz edi eax +
jmp loc_43A381  +
mov eax [esp+98h+var_50] +
sub ebx [ecx+8] +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_34] edx +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_98] eax +
call sub_43EF60  +
mov eax [esp+98h+var_74] +
mov edx [esp+98h+var_34] +
mov eax [eax+28h] +
mov eax [eax+8] +
add ebx eax +
jmp loc_43A2DC  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 5Ch +
jnz loc_43A377  +
add [esp+98h+var_5C] 1 +
xor edi edi +
jmp loc_43A381  +
xor edx edx +
call sub_438710  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43A588  +
mov ebx 1Ch +
mov eax 0E4h +
jmp loc_439CFA  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_43A588  +
mov edx 2 +
call sub_438710  +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43A588  +
mov ecx [esp+98h+var_60] +
mov edx esi +
sub edx [ecx+4] +
sar edx 4 +
jmp loc_43A8E8  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_43AB52  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+28Ah] 0 +
mov [esp+98h+var_54] eax +
jz loc_43A691  +
mov eax [esp+98h+var_64] +
mov ecx [esi+8] +
mov edx [eax] +
setnle al  +
movzx eax al +
add eax 15h +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_43C6D0  +
jmp loc_43A691  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacr_0 +
mov [esp+98h+var_94] 15h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_43C6D0  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_43A691  +
mov esi [esp+98h+var_44] +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_43A0CF  +
cmp byte ptr [ebp+269h] 0 +
jnz loc_43A0CF  +
imul eax eax +
mov esi [esp+98h+var_44] +
mov dword ptr [esi+eax-1Ch] 0 +
jmp loc_43A0CF  +
test dx dx +
jnz loc_43A084  +
mov eax [esp+98h+var_44] +
mov ecx [eax+0Ch] +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+98h+var_54] eax +
jmp loc_43A084  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_70] eax +
jmp loc_43A45F  +
mov eax [ebp+4Ch] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_43AE6E  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_439600  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aUnterminatedAr +
mov [esp+98h+var_94] 3 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_43C650  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] eax +
call sub_43ED80  +
mov byte ptr [ebp+11h] 0 +
sub dword ptr [ebp+10Ch] 1 +
sub byte ptr [ebp+10h] 1 +
jmp loc_439B1F  +
mov edi [ebp+0Ch] +
mov eax [esp+98h+var_74] +
test edi edi +
movzx ebx byte ptr [eax+26Dh] +
jz loc_43A42F  +
cmp byte ptr [eax+25Ah] 0 +
mov edi eax +
mov byte ptr [eax+25Ah] 0 +
mov [esp+98h+var_98] 400h +
setnz byte ptr [esp+98h+var_68]  +
call sub_4529F0  +
mov [ebp+4] eax +
cmp byte ptr [edi+26Dh] 0 +
jz loc_43AC9B  +
mov [esp+98h+var_98] 400h +
call sub_4529F0  +
mov [ebp+18h] eax +
test bl bl +
jz loc_43AEC5  +
mov eax [ebp+14h] +
mov edi [ebp+0Ch] +
mov edx [ebp+0] +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
lea ecx [edi+1] +
mov [esp+98h+var_90] ecx +
xor ecx ecx +
mov [esp+98h+var_94] edx +
xor edx edx +
call sub_438820  +
mov eax [ebp+10h] +
mov ebx 100h +
lea edx [eax+1] +
cmp ebx edx +
jb loc_43AE7D  +
mov edi [esp+98h+var_74] +
lea edx [esp+98h+var_1C] +
mov eax edi +
call sub_43AF10  +
cmp byte ptr [eax+4] 16h +
jz loc_43AE52  +
xor ecx ecx +
mov edx [ebp+10h] +
cmp byte ptr [edi+26Dh] 0 +
mov [esp+98h+var_94] 2 +
setnz cl  +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_1C] +
mov [esp+98h+var_98] edx +
mov edx eax +
mov eax ebp +
call sub_4386C0  +
mov eax [ebp+10h] +
add eax 1 +
mov [ebp+10h] eax +
jmp loc_43ACCF  +
mov ecx [esp+98h+var_60] +
test byte ptr [ecx+14h] 2 +
jz loc_43A8AE  +
movzx ecx word ptr [ecx+10h] +
cmp [esi+8] ecx +
jnz loc_43A8AE  +
test edi edi +
jz loc_43AD61  +
mov ecx [edi] +
mov [esp+98h+var_50] 0 +
test ecx ecx +
jnz loc_43A588  +
cmp [esp+98h+var_5C] eax +
jnb loc_43AAB8  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [eax+8] edx +
jmp loc_43A588  +
mov edi [esi+8] +
jmp loc_43A381  +
movzx eax byte ptr [esi+4] +
mov [esp+98h+var_98] eax +
call sub_4437F0  +
test al al +
jnz loc_43A2AF  +
mov [esp+98h+var_98] esi +
call sub_43E4C0  +
mov [esp+98h+var_54] 0 +
jmp loc_43A2C2  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_43AE22  +
mov eax [esp+98h+var_60] +
mov eax [eax+4] +
cmp byte ptr [eax+4] 26h +
mov [esp+98h+var_6C] eax +
jz loc_43AE3D  +
add eax 10h +
xor ebx ebx +
add ebx 1 +
cmp ebx ecx +
jz loc_43AE22  +
mov edx eax +
add eax 10h +
cmp byte ptr [edx+4] 26h +
jnz loc_43ADD5  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_78] ebx +
mov [esp+98h+var_6C] edx +
jmp loc_43A1B0  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43AE22  +
mov ebx [esi+4] +
cmp byte ptr [ebx+4] 26h +
jz loc_43AE30  +
lea edx [ebx+10h] +
xor esi esi +
jmp loc_43AE1B  +
movzx eax byte ptr [edx+4] +
add edx 10h +
cmp al 26h +
jz loc_43AE27  +
add esi 1 +
cmp esi ecx +
jnz loc_43AE10  +
call sub_482220  +
mov [esp+98h+var_74] esi +
jmp loc_439B5D  +
mov [esp+98h+var_74] 0 +
jmp loc_439B5D  +
mov [esp+98h+var_70] 0 +
mov [esp+98h+var_78] 0 +
jmp loc_43A45F  +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_98] edi +
call sub_439470  +
movzx eax byte ptr [esp+98h+var_68] +
mov [edi+25Ah] al +
jmp loc_43A42F  +
cmp byte ptr [ebp+8] 0 +
jz loc_43AC03  +
jmp loc_43ABF3  +
mov eax [ebp+4] +
lea edi ds:0[edx*8] +
mov [esp+98h+var_94] edi +
lea ebx [edx+edx] +
mov [esp+98h+var_98] eax +
call sub_452A70  +
mov [ebp+4] eax +
mov eax [esp+98h+var_74] +
cmp byte ptr [eax+26Dh] 0 +
jz loc_43ACDA  +
mov eax [ebp+18h] +
test eax eax +
jz loc_43AEFA  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] eax +
call sub_452A70  +
mov [ebp+18h] eax +
jmp loc_43ACDA  +
mov eax [ebp+0Ch] +
mov edi [ebp+0] +
lea ebx [eax+1] +
mov eax [esp+98h+var_48] +
call sub_438780  +
lea edx [edi+ebx*4] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov [eax+8] edi +
mov [eax+0Ch] edx +
jmp loc_43ACC7  +
mov [esp+98h+var_98] edi +
call sub_4529F0  +
mov [ebp+18h] eax +
jmp loc_43ACDA  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
movzx eax byte ptr [eax+6Ch] +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1D] al +
lea esi [esi+0] +
mov eax [ebx+4Ch] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_43B210  +
mov edx [eax+18h] +
cmp edx 1 +
jz loc_43B150  +
test edx 0FFFFFFFDh +
jnz loc_43B3C3  +
mov ecx [eax+8] +
cmp ecx [eax+0Ch] +
jnz loc_43B000  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_43AF70  +
add ds:dword_4D9290 1 +
mov [esp+4Ch+var_4C] ebx +
call sub_439470  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43AF30  +
lea ebp [ebx+160h] +
mov edx [esp+4Ch+var_2C] +
test edx edx +
jz loc_43AFED  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_43AF9B  +
mov eax [ebp+0] +
mov [esp+4Ch+var_30] eax +
mov edi [esp+4Ch+var_2C] +
mov eax [esp+4Ch+var_30] +
mov [edi] eax +
cmp byte ptr [ebx+26Dh] 0 +
jnz loc_43AFD3  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_43AFD3  +
cmp dword ptr [edx+18h] 2 +
mov eax [edx+14h] +
jz loc_43B3A0  +
test eax eax +
jz loc_43B492  +
mov eax [ebx+64h] +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
cmp byte ptr [ebx+270h] 0 +
movzx ecx byte ptr [ebx+8] +
mov edx [ebx+20h] +
jnz loc_43B2C0  +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
movzx eax [esp+4Ch+var_1D] +
mov [ebx+6Ch] al +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jz loc_43B225  +
cmp edx 2 +
jnz loc_43B45A  +
mov edx [eax+14h] +
mov ebp [ecx] +
mov edi [edx+4] +
test edi edi +
jz loc_43B2D0  +
mov esi [edx+8] +
mov edi [esi] +
add esi 4 +
mov [edx+8] esi +
mov [esp+4Ch+var_30] edi +
add ecx 4 +
mov [eax+8] ecx +
test byte ptr [ebp+6] 8 +
jnz loc_43B173  +
cmp byte ptr [ebx+8] 0 +
movzx eax byte ptr [ebp+4] +
jz loc_43B052  +
cmp al 4Fh +
jz loc_43AF30  +
cmp al 35h +
jnz loc_43AF84  +
mov edx [ebp+8] +
movzx eax byte ptr [edx+14h] +
and eax 3Fh +
cmp al 1 +
jnz loc_43AF84  +
test byte ptr [ebp+7] 4 +
jnz loc_43AF84  +
test byte ptr [edx+15h] 8 +
jnz loc_43B371  +
cmp byte ptr [ebx+6Ch] 0 +
jnz loc_43B0A6  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_43B2A4  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_43B2B2  +
test eax eax +
jz loc_43B2A4  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_43AF84  +
test byte ptr [edx+15h] 40h +
jz loc_43B100  +
mov edi [ebx+20Ch] +
test edi edi +
jz loc_43AF84  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_4415F0  +
cmp byte ptr [eax+4] 53h +
jz loc_43B0E4  +
test byte ptr [eax+6] 1 +
jz loc_43B3E0  +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jz loc_43B3FE  +
lea esi [esi+0] +
mov eax [esp+4Ch+var_30] +
mov ecx ebp +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_439870  +
test eax eax +
jz loc_43AF84  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43AF30  +
cmp eax 2 +
jz loc_43AF30  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_43E390  +
xor ecx ecx +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] cx +
jmp loc_43AF84  +
mov ebp [eax+8] +
cmp ebp [eax+0Ch] +
jz loc_43AF62  +
mov edi [ebp+0] +
lea edx [ebp+10h] +
mov [eax+8] edx +
test byte ptr [ebp+6] 8 +
mov [esp+4Ch+var_30] edi +
jz loc_43B040  +
mov edi [ebx+4Ch] +
mov [esp+4Ch+var_14] ebp +
test edi edi +
jz loc_43B476  +
mov eax [edi+18h] +
cmp eax 2 +
jz loc_43B2E0  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_43B476  +
mov ecx [ebx+64h] +
mov [esp+4Ch+var_28] ecx +
mov [esp+4Ch+var_24] ebp +
xor esi esi +
mov ebp [esp+4Ch+var_28] +
jmp loc_43B1E8  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
cmp byte ptr [esi+4] 53h +
jnz loc_43B1CB  +
test byte ptr [esi+6] 8 +
jnz loc_43B3A7  +
mov [esp+4Ch+var_4C] esi +
lea ecx [esp+4Ch+var_14] +
mov edx ebp +
mov eax ebx +
call sub_4396B0  +
test al al +
jz loc_43B250  +
test byte ptr [esi+6] 8 +
jz loc_43B250  +
mov eax [edi+18h] +
cmp eax 1 +
jz loc_43B240  +
test eax eax +
jz loc_43B1B0  +
cmp eax 2 +
jnz loc_43B1BB  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
mov eax [edi+14h] +
add dword ptr [eax+8] 4 +
jmp loc_43B1BB  +
mov [esp+4Ch+var_4C] ebx +
call sub_4414B0  +
mov ebp eax +
mov eax [eax] +
mov [esp+4Ch+var_30] eax +
jmp loc_43B040  +
mov ebp [ecx] +
add ecx 4 +
mov edi [ebp+0] +
mov [eax+8] ecx +
mov [esp+4Ch+var_30] edi +
jmp loc_43B036  +
mov esi [edi+8] +
lea eax [esi+10h] +
mov [edi+8] eax +
jmp loc_43B1BB  +
cmp dword ptr [edi+18h] 2 +
mov ebp [esp+4Ch+var_24] +
jz loc_43B300  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_439200  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43AF30  +
mov [esp+4Ch+var_4C] ebx +
call sub_43E390  +
xor edx edx +
mov [eax+8] ebp +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+6] dx +
jmp loc_43AF84  +
mov eax [ebp+0] +
mov [ebx+68h] edx +
mov [ebx+64h] eax +
jmp loc_43B0A6  +
mov eax [eax] +
jmp loc_43B09E  +
test cl cl +
cmovnz eax edx +
jmp loc_43AFE7  +
mov edi [ebp+0] +
mov [esp+4Ch+var_30] edi +
jmp loc_43B030  +
mov edx [edi+14h] +
mov esi [edx] +
test esi esi +
jz loc_43B476  +
mov edx [edx+8] +
mov ecx [edx-4] +
mov [esp+4Ch+var_28] ecx +
jmp loc_43B1A0  +
lea ecx [esp+4Ch+var_10] +
mov edx 1 +
mov eax ebx +
mov [esp+4Ch+var_10] 0 +
call sub_438740  +
mov ecx [esp+4Ch+var_14] +
mov edx [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] 0 +
mov esi eax +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_4388A0  +
mov eax [esi+4] +
mov ecx esi +
mov edx [edi+14h] +
mov edx [edx] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] 1 +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_438820  +
jmp loc_43B27E  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_43E390  +
mov edx [esi+0Ch] +
mov ebp eax +
movzx eax byte ptr [esi+4] +
mov [ebp+4] al +
movzx eax word ptr [esi+6] +
or ah 4 +
mov [ebp+6] ax +
mov eax [esi+8] +
mov [ebp+0Ch] edx +
mov [ebp+8] eax +
jmp loc_43AF84  +
mov eax [eax] +
jmp loc_43AFC2  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2DFh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424080  +
mov [esp+4Ch+var_44] offset aReached_end_of +
mov [esp+4Ch+var_48] 93Eh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424080  +
nop   +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jnz loc_43B100  +
jmp loc_43AF84  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_4415F0  +
cmp byte ptr [eax+4] 53h +
mov esi eax +
jz loc_43AF84  +
test byte ptr [eax+6] 1 +
jnz loc_43AF84  +
mov [esp+4Ch+var_4C] ebx +
call sub_43E390  +
mov [eax+8] esi +
xor esi esi +
mov byte ptr [eax+4] 53h +
mov [eax+6] si +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_439200  +
jmp loc_43AF84  +
mov [esp+4Ch+var_44] offset aConsume_next_t +
mov [esp+4Ch+var_48] 968h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424080  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2B1h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424080  +
mov eax [esp+4Ch+var_30] +
jmp loc_43AFD3  +
***
mov eax [esp+arg_0] +
xor edx edx +
jmp sub_43AF10  +
***
nop   +
mov [esp] ebx +
call sub_448B30  +
test al al +
jnz loc_43B4D0  +
sub byte ptr [ebx+13h] 1 +
sub byte ptr [ebx+10h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
jmp sub_43AF10  +
***
mov eax [esp+arg_0] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D6FFh +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 10h +
jnz loc_43B607  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
movzx edi dx +
mov [esp+2Ch+var_10] eax +
lea eax ds:4[edi*4] +
sub [esp+2Ch+var_10] ecx +
cmp [esp+2Ch+var_10] eax +
jb loc_43B5C0  +
mov eax [esp+2Ch+arg_C] +
add edx 1 +
mov [ebp+10h] dx +
mov [ecx+edi*4] eax +
or word ptr [ebx+14h] 1000h +
movzx edx word ptr [ebp+10h] +
mov eax [esi+110h] +
movzx ecx dx +
lea edi ds:0[ecx*8] +
cmp edi [esi+114h] +
ja loc_43B5E6  +
mov esi [ebx+18h] +
add ecx 1FFFFFFFh +
mov [eax+ecx*8] ebx +
mov [eax+ecx*8+4] esi +
xor eax eax +
mov [ebx+18h] dx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esi+24h] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] esi +
call sub_43EF60  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
movzx edi dx +
jmp loc_43B572  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_452A70  +
movzx edx word ptr [ebp+10h] +
mov [esi+114h] edi +
movzx ecx dx +
mov [esi+110h] eax +
jmp loc_43B5A2  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] offset aDuplicateMacro +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_20] eax +
call sub_43C650  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov eax [edi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_43BB70  +
mov [esp+3Ch+var_3C] 18h +
call eax  +
mov ebx eax +
mov eax [edi+20h] +
xor ecx ecx +
mov dword ptr [ebx] 0 +
mov [ebx+10h] cx +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+14h] +
mov edx eax +
and edx 0FFFFFFFDh +
mov [ebx+14h] dl +
cmp byte ptr [edi+267h] 0 +
mov dword ptr [ebx+0Ch] 0 +
setz dl  +
and eax 0FFFFFFD4h +
shl edx 3 +
or eax edx +
mov [ebx+14h] al +
mov eax [edi] +
test eax eax +
jz loc_43BB87  +
cmp byte ptr [eax+3Dh] 0 +
setnz dl  +
movzx eax byte ptr [ebx+14h] +
shl edx 2 +
and eax 0FFFFFFFBh +
or eax edx +
mov [ebx+14h] al +
cmp byte ptr [edi+270h] 0 +
jz loc_43B784  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
call sub_448C80  +
mov byte ptr [esp+3Ch+var_20] al +
movzx eax word ptr [ebx+10h] +
test eax eax +
lea ecx [eax-1] +
lea edx ds:0FFFFFFF8h[eax*8] +
jz loc_43B715  +
mov esi [edi+110h] +
sub ecx 1 +
add esi edx +
sub edx 8 +
mov eax [esi] +
and word ptr [eax+14h] 0EFFFh +
cmp ecx 0FFFFFFFFh +
mov esi [esi+4] +
mov [eax+18h] esi +
jnz loc_43B6F4  +
cmp byte ptr [esp+3Ch+var_20] 0 +
jz loc_43B777  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_43BAC0  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_43B8D0  +
movzx eax byte ptr [ebp+14h] +
mov edi offset a__stdc_ +
mov ecx 7 +
mov [ebp+18h] ebx +
and eax 0FFFFFFC0h +
or eax 1 +
mov [ebp+14h] al +
mov eax [ebp+0] +
mov esi eax +
cmps   +
jz loc_43B884  +
movzx eax word ptr [ebp+14h] +
and dx 2FFh +
shl edx 6 +
and eax 3Fh +
or eax edx +
mov [ebp+14h] ax +
movzx eax byte ptr [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] edi +
call sub_4414B0  +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_43BB24  +
cmp al 16h +
jz loc_43B7D6  +
test byte ptr [esi+6] 1 +
jnz loc_43B7D6  +
cmp byte ptr [edi+268h] 0 +
jz loc_43BC2E  +
cmp byte ptr [edi+248h] 0 +
jz loc_43BDAB  +
mov [esp+3Ch+var_34] offset aIsoC11Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
test byte ptr [ebx+14h] 1 +
jz loc_43BA64  +
mov edx ebx +
mov eax edi +
call sub_438980  +
mov ecx eax +
mov [esp+3Ch+arg_4] ebp +
xor esi esi +
mov ebp ebx +
mov [esp+3Ch+var_20] 0 +
jmp loc_43B822  +
add [esp+3Ch+var_20] 1 +
sub eax 1 +
or byte ptr [ebp+14h] 20h +
mov [ecx+8] eax +
cmp bl 26h +
mov edx ebp +
setz al  +
mov esi eax +
mov eax edi +
call sub_438980  +
mov ecx eax +
mov eax [ebp+0Ch] +
cmp eax 1 +
jbe loc_43B834  +
cmp byte ptr [ecx-0Ch] 25h +
jz loc_43B8F0  +
movzx ebx byte ptr [ecx+4] +
cmp bl 16h +
jz loc_43B940  +
cmp bl 26h +
jnz loc_43B80F  +
cmp eax 1 +
jz loc_43BA90  +
movzx edx word ptr [ecx-0Ah] +
test dl 8 +
jnz loc_43B800  +
sub eax 1 +
mov [ebp+0Ch] eax +
mov eax edx +
or eax 8 +
mov [ecx-0Ah] ax +
movzx eax word ptr [ecx+6] +
test al 2 +
jz loc_43B878  +
or dx 108h +
mov [ecx-0Ah] dx +
test al 1 +
jz loc_43B80F  +
or word ptr [ecx-0Ah] 200h +
jmp loc_43B80F  +
mov edi offset a__stdc_format_ +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_43B762  +
mov edi offset a__stdc_limit_m +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_43B762  +
mov ecx 17h +
mov esi eax +
mov edi offset a__stdc_constan +
mov eax edx +
cmps   +
setnbe bl  +
setb cl  +
or eax 10h +
cmp bl cl +
cmovnz edx eax +
jmp loc_43B762  +
movzx eax word ptr [ebp+14h] +
and dx 35Bh +
mov ecx edx +
shl ecx 6 +
and eax 3Fh +
or eax ecx +
mov [ebp+14h] ax +
jmp loc_43B73B  +
test byte ptr [ebp+14h] 1 +
movzx ebx byte ptr [ecx+4] +
jz loc_43B838  +
cmp bl 50h +
jz loc_43BA11  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_43B838  +
mov [esp+3Ch+var_34] offset aIsNotFollowedB +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
mov byte ptr [esp+3Ch+var_20] 0 +
jmp loc_43BAB3  +
mov edx esi +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
test dl dl +
jnz loc_43BA96  +
mov edx [edi+24h] +
sub eax 1 +
mov edx [edx+8] +
and byte ptr [ebx+14h] 0EFh +
test eax eax +
mov [ebx+0Ch] eax +
mov [ebx+4] edx +
jz loc_43B96C  +
and word ptr [edx+6] 0FFFEh +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_43BB58  +
shl eax 4 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
mov esi [esp+3Ch+var_20] +
test esi esi +
mov [esp+3Ch+var_1C] eax +
jz loc_43BD70  +
mov edx [ebx+0Ch] +
mov ecx edx +
sub ecx esi +
shl ecx 4 +
add ecx eax +
test edx edx +
jz loc_43BA00  +
mov eax [ebx+4] +
shl edx 4 +
mov [esp+3Ch+var_20] ebx +
lea esi [eax+edx] +
mov edx [esp+3Ch+var_1C] +
jmp loc_43B9D6  +
mov [edx] ebx +
mov ebx [eax+4] +
add eax 10h +
add edx 10h +
mov [edx-0Ch] ebx +
mov ebx [eax-8] +
mov [edx-8] ebx +
mov ebx [eax-4] +
mov [edx-4] ebx +
cmp eax esi +
jz loc_43B9FC  +
cmp byte ptr [eax+4] 26h +
mov ebx [eax] +
jnz loc_43B9B8  +
mov [ecx] ebx +
mov ebx [eax+4] +
add eax 10h +
add ecx 10h +
mov [ecx-0Ch] ebx +
mov ebx [eax-8] +
mov [ecx-8] ebx +
mov ebx [eax-4] +
mov [ecx-4] ebx +
cmp eax esi +
jnz loc_43B9D6  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ebx+4] eax +
jmp loc_43BAB3  +
movzx edx word ptr [ecx+6] +
test dl 1 +
jz loc_43BA21  +
or dh 2 +
mov [ecx+6] dx +
mov esi edx +
or si 100h +
test byte ptr [ecx-0Ah] 2 +
cmovnz edx esi +
movzx esi word ptr [ecx-0Ah] +
sub eax 1 +
and edx 0FFFFFFFEh +
or edx 4 +
and esi 1 +
or edx esi +
mov [ecx+6] dx +
mov edx [ecx] +
mov [ecx-10h] edx +
mov edx [ecx+4] +
mov [ecx-0Ch] edx +
mov edx [ecx+8] +
mov [ecx-8] edx +
mov edx [ecx+0Ch] +
mov [ecx-4] edx +
mov [ebp+0Ch] eax +
jmp loc_43B80F  +
lea edx [ebx+0Ch] +
mov eax edi +
call sub_438920  +
mov ecx eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_43B7EB  +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset aCannotAppearAt +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
mov byte ptr [esp+3Ch+var_20] 0 +
mov byte ptr [edi+0Eh] 0 +
jmp loc_43B6E2  +
cmp byte ptr [edi+267h] 0 +
jnz loc_43BD92  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 10h +
jnz loc_43BB97  +
test dl 4 +
jz loc_43BC7D  +
mov eax [edi+228h] +
test eax eax +
jz loc_43BB0A  +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call eax  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_43BC7D  +
cmp byte ptr [edi+25Fh] 0 +
setnz al  +
test al al +
jnz loc_43BB97  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_43B733  +
test byte ptr [esi+6] 1 +
jnz loc_43B7D6  +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_4414B0  +
movzx ecx byte ptr [eax+4] +
lea edx [ecx-13h] +
cmp dl 22h +
ja loc_43BF24  +
movzx edx dl +
jmp ds:off_4CD710[edx*4]  +
mov ecx [edi+24h] +
shl eax 4 +
add eax edx +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ecx+8] eax +
jmp loc_43BAB3  +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_3C] edi +
call sub_441750  +
mov ebx eax +
jmp loc_43B66B  +
xor edx edx +
jmp loc_43B6B6  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
and edx 14h +
mov eax 0Bh +
mov ecx [ebp+0] +
cmp dx 4 +
mov edx 0 +
cmovnz eax edx +
mov edx [edi+20h] +
mov [esp+3Ch+var_2C] offset aSRedefined +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43C7F0  +
test al al +
movzx eax byte ptr [ebp+14h] +
jz loc_43BC26  +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jnz loc_43BC26  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 4 +
jnz loc_43B8D0  +
mov eax [ebp+18h] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] offset aThisIsTheLocat +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 5 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43C750  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_43B72B  +
cmp al 36h +
jz loc_43BF6B  +
jbe loc_43BF63  +
cmp al 3Dh +
nop   +
jnz loc_43BDC8  +
mov eax [esi+0Ch] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] offset a_? +
mov [esp+3Ch+var_38] eax +
call strchr  +
cmp eax 1 +
sbb eax eax +
and eax 2 +
mov [esp+3Ch+var_34] offset aMissingWhitesp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
jmp loc_43B7D6  +
test dh 1 +
jnz loc_43BB18  +
mov eax [ebp+18h] +
mov [esp+3Ch+var_1C] eax +
movzx eax word ptr [eax+10h] +
cmp ax [ebx+10h] +
jnz loc_43BB97  +
mov esi [esp+3Ch+var_1C] +
movzx ecx byte ptr [ebx+14h] +
xor cl [esi+14h] +
and ecx 3 +
jnz loc_43BB97  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_43BD00  +
mov ecx [esi] +
mov esi [ebx] +
mov eax [esi] +
cmp [ecx] eax +
jnz loc_43BB97  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_12] dx +
mov [esp+3Ch+var_18] ebx +
mov ebx ecx +
sub eax 1 +
mov [esp+3Ch+var_10] eax +
xor eax eax +
mov edx [esp+3Ch+var_10] +
jmp loc_43BCF3  +
mov ecx [ebx+eax*4+4] +
add eax 1 +
cmp ecx [esi+eax*4] +
jnz loc_43BB8E  +
cmp eax edx +
jnz loc_43BCE3  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
cmp byte ptr [edi+270h] 0 +
jnz loc_43C038  +
mov eax [esp+3Ch+var_1C] +
mov eax [eax+0Ch] +
cmp eax [ebx+0Ch] +
jnz loc_43BB97  +
test eax eax +
jz loc_43BB18  +
xor esi esi +
jmp loc_43BD40  +
mov eax [esp+3Ch+var_1C] +
add esi 1 +
cmp esi [eax+0Ch] +
jnb loc_43C055  +
mov edx [ebx+4] +
mov eax esi +
shl eax 4 +
add edx eax +
mov [esp+3Ch+var_38] edx +
mov edx [esp+3Ch+var_1C] +
add eax [edx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_43E880  +
test eax eax +
jnz loc_43BD30  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43BB97  +
mov eax [ebx+0Ch] +
mov edx [ebx+4] +
shl eax 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
jmp loc_43BA00  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call sub_438BA0  +
jmp loc_43BACD  +
mov [esp+3Ch+var_34] offset aIsoC99Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
jmp loc_43B7D6  +
cmp al 43h +
jz loc_43BF6B  +
xor eax eax +
jmp loc_43BC64  +
mov [esp+3Ch+var_34] offset aMissingInMacro +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
mov eax [edi+24h] +
mov byte ptr [esp+3Ch+var_20] 0 +
mov eax [eax+8] +
mov [ebx] eax +
jmp loc_43BAB3  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_43C07F  +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_34] eax +
call sub_43B530  +
test al al +
jnz loc_43BDEF  +
mov [esp+3Ch+var_20] 1 +
jmp loc_43BB36  +
mov ecx [esp+3Ch+var_20] +
movzx eax word ptr [ebx+10h] +
test ecx ecx +
jnz loc_43BEC0  +
test ax ax +
jz loc_43BEC0  +
mov [esp+3Ch+var_34] offset aParameterNameM +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
jmp loc_43BDEF  +
mov eax [esp+3Ch+var_20] +
or byte ptr [ebx+14h] 2 +
test eax eax +
jz loc_43BF81  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_43BEAA  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_43BEAA  +
cmp byte ptr [edi+248h] 0 +
jz loc_43C01B  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotPer +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43C6D0  +
mov [esp+3Ch+var_3C] edi +
call sub_4414B0  +
cmp byte ptr [eax+4] 15h +
jnz loc_43BDD7  +
movzx eax word ptr [ebx+10h] +
mov edx [edi+24h] +
mov ecx [edx+8] +
mov [esp+3Ch+var_20] ecx +
mov [ebx] ecx +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_43BF75  +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
movzx edx word ptr [ebx+10h] +
shl edx 2 +
mov ecx eax +
mov eax [ebx] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov ecx [esp+3Ch+var_20] +
mov [ebx] ecx +
or byte ptr [ebx+14h] 1 +
jmp loc_43B7D6  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_43BB2E  +
jmp loc_43BE49  +
cmp cl 4Fh +
jnz loc_43BF36  +
cmp byte ptr [edi+24Ch] 0 +
jz loc_43BB36  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_4416D0  +
mov [esp+3Ch+var_34] offset aSMayNotAppearI +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
call sub_43C650  +
jmp loc_43BDEF  +
cmp al 34h +
jnz loc_43BDD0  +
mov eax 2 +
jmp loc_43BC64  +
mov ecx [esp+3Ch+var_20] +
lea eax [ecx+eax*4] +
mov [edx+8] eax +
jmp loc_43BF0A  +
mov eax [edi+2B8h] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] eax +
call sub_43B530  +
cmp byte ptr [edi+268h] 0 +
mov byte ptr [edi+0Eh] 1 +
jnz loc_43BFE4  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_43BFE4  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_43BFE4  +
cmp byte ptr [edi+248h] 0 +
jz loc_43C062  +
mov [esp+3Ch+var_34] offset aAnonymousVaria +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43C6D0  +
jmp loc_43BEAA  +
cmp byte ptr [edi+28Ah] 0 +
jle loc_43BEAA  +
cmp byte ptr [edi+248h] 0 +
jnz loc_43BEAA  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
jmp loc_43BEAA  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotP_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43C6D0  +
jmp loc_43BEAA  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_448EB0  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43BB14  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43BB18  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43C6D0  +
jmp loc_43BEAA  +
mov [esp+3Ch+var_34] offset aMacroParameter +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43C650  +
jmp loc_43BDEF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jz loc_43C116  +
and eax 3Fh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aInvalidHashTyp +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43C650  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 1 +
jz loc_43C150  +
mov ebx [esp+2Ch+arg_0] +
mov edx [ebx+228h] +
test edx edx +
jz loc_43C0E9  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call edx  +
test al al +
jnz loc_43C150  +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
jmp loc_43C0E9  +
mov eax [esp+2Ch+arg_4] +
mov ebx [eax+18h] +
mov eax [eax+4] +
movzx ebp byte ptr [ebx+14h] +
lea esi [eax+eax*4] +
add esi esi +
test ebp 1 +
jnz loc_43C251  +
add esi 2 +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_43C289  +
mov [esp+2Ch+var_2C] ebx +
call sub_448B90  +
add esi eax +
mov eax [esp+2Ch+arg_0] +
cmp esi [eax+114h] +
ja loc_43C321  +
mov eax [eax+110h] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_43E500  +
test byte ptr [ebx+14h] 1 +
jz loc_43C216  +
lea edi [eax+1] +
xor esi esi +
mov byte ptr [eax] 28h +
movzx eax word ptr [ebx+10h] +
cmp esi eax +
jnb loc_43C210  +
mov edx [ebx] +
mov ebp [edx+esi*4] +
mov edx [esp+2Ch+arg_0] +
cmp [edx+2B8h] ebp +
jz loc_43C1F7  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
movzx eax word ptr [ebx+10h] +
add edi [ebp+4] +
add esi 1 +
cmp esi eax +
jnb loc_43C300  +
mov byte ptr [edi] 2Ch +
movzx eax word ptr [ebx+10h] +
add edi 1 +
cmp esi eax +
jb loc_43C1C9  +
lea eax [edi+1] +
mov byte ptr [edi] 29h +
lea esi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_43C350  +
mov eax [ebx+0Ch] +
test eax eax +
mov [esp+2Ch+var_10] eax +
jnz loc_43C363  +
mov eax [esp+2Ch+arg_0] +
mov byte ptr [esi] 0 +
mov eax [eax+110h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ecx word ptr [ebx+10h] +
add esi 6 +
test ecx ecx +
jz loc_43C172  +
mov edi [ebx] +
shl ecx 2 +
xor eax eax +
mov edx [edi+eax] +
add eax 4 +
cmp eax ecx +
mov edx [edx+4] +
lea esi [esi+edx+1] +
jnz loc_43C267  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_43C183  +
and ebp 20h +
jnz loc_43C43A  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_43C18D  +
xor edi edi +
jmp loc_43C2E5  +
mov eax [ebp+0Ch] +
add esi [eax+4] +
movzx eax word ptr [ebp+6] +
mov ecx eax +
and ecx 4 +
cmp cx 1 +
sbb esi 0FFFFFFFFh +
test al 8 +
lea ecx [esi+3] +
cmovnz esi ecx +
and eax 1 +
cmp ax 1 +
sbb esi 0FFFFFFFFh +
add edi 1 +
cmp edi [esp+2Ch+var_10] +
jz loc_43C18D  +
mov ebp edi +
shl ebp 4 +
add ebp [ebx+4] +
cmp byte ptr [ebp+4] 50h +
jz loc_43C2B0  +
mov [esp+2Ch+var_2C] ebp +
call sub_43E4C0  +
add esi eax +
jmp loc_43C2B6  +
test byte ptr [ebx+14h] 2 +
jz loc_43C1C5  +
mov byte ptr [edi] 2Eh +
add edi 3 +
mov byte ptr [edi-2] 2Eh +
mov byte ptr [edi-1] 2Eh +
movzx eax word ptr [ebx+10h] +
jmp loc_43C1C5  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+110h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_452A70  +
mov ecx [esp+2Ch+arg_0] +
mov [ecx+114h] esi +
mov [ecx+110h] eax +
jmp loc_43C1A3  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_448BE0  +
mov esi eax +
jmp loc_43C23C  +
test byte ptr [ebx+14h] 20h +
mov eax [ebx+4] +
jnz loc_43C40B  +
xor ebp ebp +
mov edi eax +
mov edx ebp +
mov ebp ebx +
mov ebx edx +
jmp loc_43C3C2  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_43E560  +
mov esi eax +
test byte ptr [edi+6] 8 +
jz loc_43C3B2  +
mov byte ptr [esi] 20h +
add esi 3 +
mov byte ptr [esi-2] 23h +
mov byte ptr [esi-1] 23h +
add ebx 1 +
cmp ebx [esp+2Ch+var_10] +
jnb loc_43C23C  +
mov edi [ebp+4] +
mov ecx ebx +
shl ecx 4 +
add edi ecx +
movzx eax word ptr [edi+6] +
test al 1 +
jz loc_43C3DB  +
mov byte ptr [esi] 20h +
movzx eax word ptr [edi+6] +
add esi 1 +
test al 4 +
jz loc_43C3E5  +
mov byte ptr [esi] 23h +
add esi 1 +
cmp byte ptr [edi+4] 50h +
jnz loc_43C380  +
mov eax [edi+0Ch] +
mov ecx [eax+4] +
mov eax [eax] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [edi+0Ch] +
add esi [eax+4] +
jmp loc_43C39E  +
cmp byte ptr [eax+4] 26h +
jz loc_43C23C  +
lea edi [eax+10h] +
xor edx edx +
jmp loc_43C42C  +
movzx ecx byte ptr [edi+4] +
add edi 10h +
cmp cl 26h +
jz loc_43C46A  +
add edx 1 +
cmp edx [esp+2Ch+var_10] +
jnz loc_43C420  +
call sub_482220  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_43C435  +
mov eax [ebx+4] +
cmp byte ptr [eax+4] 26h +
jz loc_43C18D  +
add eax 10h +
xor edi edi +
jmp loc_43C461  +
movzx edx byte ptr [eax+4] +
add eax 10h +
cmp dl 26h +
jz loc_43C47F  +
add edi 1 +
cmp edi ecx +
jnz loc_43C455  +
jmp loc_43C435  +
test edx edx +
lea esi [esi+0] +
jz loc_43C23C  +
mov [esp+2Ch+var_10] edx +
jmp loc_43C370  +
mov [esp+2Ch+var_10] edi +
jmp loc_43C299  +
***
push esi  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_43C540  +
cmp byte ptr [eax+8] 0 +
jz loc_43C584  +
mov ecx [eax+20h] +
jmp loc_43C554  +
mov ecx [eax+104h] +
mov edx [eax+0F0h] +
cmp edx [ecx+8] +
jz loc_43C590  +
mov ecx [edx-10h] +
mov edx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] edx +
mov edx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call sub_43C490  +
add esp 2Ch +
retn   +
mov edx [eax+1Ch] +
mov ecx [edx+2Ch] +
jmp loc_43C554  +
xor ecx ecx +
jmp loc_43C554  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_10] +
mov eax [ebx+210h] +
test eax eax +
jz loc_43C625  +
mov eax [ebx+1Ch] +
lea esi [ebp+var_74] +
mov edx [ebp+arg_C] +
mov ecx esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] edx +
call sub_42D810  +
sub esp 8 +
test edi edi +
jz loc_43C5E7  +
mov [esp+98h+var_98] edi +
mov ecx esi +
call sub_42D690  +
sub esp 4 +
mov edx [ebp+arg_18] +
mov eax [ebx+210h] +
mov [esp+98h+var_8C] esi +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_84] edx +
mov edx [ebp+arg_14] +
mov [esp+98h+var_88] edx +
mov edx [ebp+arg_8] +
mov [esp+98h+var_90] edx +
mov edx [ebp+arg_4] +
mov [esp+98h+var_94] edx +
call eax  +
mov ecx esi +
mov ebx eax +
call sub_42D4F0  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aCpp_diagnost_0 +
mov [esp+98h+var_94] 0AAh +
mov [esp+98h+var_98] offset a____GccLibcppE +
call sub_424080  +
jmp sub_43C650  +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C520  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C520  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C520  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov dword ptr [esp+4] 1 +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_43C520  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C5A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C5A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C5A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C5A0  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C490  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
sub esp 2Ch +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-40h+arg_3C] eax +
call sub_466320  +
mov [esp-40h+arg_44] offset aSS_2 +
mov [esp-40h+arg_4C] eax +
mov eax [esp-40h+arg_74] +
mov [esp-40h+arg_48] eax +
mov eax [esp-40h+arg_70] +
mov [esp-40h+arg_40] eax +
mov eax [esp-40h+arg_6C] +
mov [esp-40h+arg_3C] eax +
call sub_43C650  +
add esp 2Ch +
retn   +
***
sub esp 28h +
mov ebx [esp+28h+arg_8] +
cmp byte ptr [ebx] 0 +
cmovz ebx eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-44h+arg_3C] eax +
call sub_466320  +
mov [esp-44h+arg_4C] ebx +
mov [esp-44h+arg_48] offset aSS_2 +
mov [esp-44h+arg_50] eax +
mov eax [esp-44h+arg_78] +
mov [esp-44h+arg_44] eax +
mov eax [esp-44h+arg_70] +
mov [esp-44h+arg_40] eax +
mov eax [esp-44h+arg_6C] +
mov [esp-44h+arg_3C] eax +
call sub_43C890  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 24h +
mov ecx [esp+28h+arg_0] +
mov [esp+28h+var_24] 50h +
mov [esp+28h+var_28] 1 +
shl esi cl +
call sub_452A20  +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_4529F0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] eax +
mov ebx eax +
call sub_458DA0  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 4 +
mov dword ptr [ebx+18h] 0 +
call sub_452A20  +
mov [ebx+38h] esi +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+2Ch] eax +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_458F10  +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_43CA99  +
mov eax [ebx+2Ch] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_C] +
mov eax [ebx+38h] +
mov edx [ebx+2Ch] +
add dword ptr [ebx+44h] 1 +
mov ebp eax +
mov [esp+3Ch+var_18] eax +
sub eax 1 +
and esi eax +
mov edi [edx+esi*4] +
lea ecx ds:0[esi*4] +
mov [esp+3Ch+var_20] eax +
test edi edi +
jz loc_43CDD8  +
cmp edi 0FFFFFFFFh +
jz loc_43CDCF  +
mov eax [esp+3Ch+arg_C] +
cmp [edi+8] eax +
mov [esp+3Ch+var_1C] ebp +
jz loc_43CD61  +
mov eax [esp+3Ch+arg_C] +
mov ecx ebx +
shl eax 4 +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_20] +
and [esp+3Ch+var_24] eax +
mov eax [ebx+48h] +
mov ebx edx +
or [esp+3Ch+var_24] 1 +
mov edx [esp+3Ch+arg_C] +
lea ebp [eax+1] +
jmp loc_43CB33  +
add ebp 1 +
add esi [esp+3Ch+var_24] +
and esi [esp+3Ch+var_20] +
mov [ecx+48h] ebp +
mov edi [ebx+esi*4] +
lea eax ds:0[esi*4] +
test edi edi +
jz loc_43CBA3  +
cmp edi 0FFFFFFFFh +
jz loc_43CB90  +
cmp [edi+8] edx +
jnz loc_43CB30  +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_43CB30  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx [esp+3Ch+var_14] +
mov edx [esp+3Ch+var_10] +
test eax eax +
jnz loc_43CB30  +
mov eax edi +
jmp loc_43CC4A  +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp eax edi +
cmovnz eax esi +
mov [esp+3Ch+var_1C] eax +
jmp loc_43CB30  +
mov ebx ecx +
mov ecx eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_43CDE4  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
cmp edx [esp+3Ch+var_18] +
cmovnz ecx eax +
mov eax [ebx+30h] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx [esp+3Ch+var_24] +
mov edx eax +
mov [esp+3Ch+var_20] eax +
mov eax [ebx+2Ch] +
mov edi edx +
mov [eax+ecx] edx +
mov eax [esp+3Ch+arg_8] +
mov [edx+4] eax +
mov eax [esp+3Ch+arg_C] +
mov [edx+8] eax +
mov eax [ebx+34h] +
test eax eax +
jz loc_43CC52  +
mov ecx [esp+3Ch+arg_8] +
lea edx [ecx+1] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+arg_8] +
mov byte ptr [esi+eax] 0 +
mov [edi] esi +
mov eax [ebx+3Ch] +
lea edx [eax+1] +
mov eax [ebx+38h] +
mov [ebx+3Ch] edx +
shl edx 2 +
lea ecx [eax+eax] +
mov [esp+3Ch+var_1C] ecx +
add ecx eax +
mov eax [esp+3Ch+var_20] +
cmp edx ecx +
jnb loc_43CCD0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov edx [ebx+0Ch] +
lea ecx [eax+1] +
mov eax [ebx+10h] +
sub eax edx +
cmp eax ecx +
jb loc_43CDBB  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add eax [esp+3Ch+arg_8] +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov edx [ebx+8] +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_43CDEB  +
mov ecx [ebx+18h] +
mov esi [ebx+4] +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx [ebx+10h] +
mov edi eax +
sub edi esi +
mov [ebx+0Ch] eax +
mov ebp ecx +
sub ebp esi +
cmp edi ebp +
jbe loc_43CCC2  +
mov [ebx+0Ch] ecx +
mov eax ecx +
mov [ebx+8] eax +
mov eax [esp+3Ch+var_20] +
mov [eax] edx +
jmp loc_43CC26  +
mov esi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
lea edi [esi-1] +
call sub_452A20  +
mov ecx [ebx+2Ch] +
mov edx [ebx+38h] +
mov [esp+3Ch+arg_0] ebx +
mov [esp+3Ch+var_18] ecx +
mov ebp ecx +
lea ecx [ecx+edx*4] +
mov [esp+3Ch+var_24] ecx +
nop   +
mov esi [ebp+0] +
lea edx [esi-1] +
cmp edx 0FFFFFFFDh +
ja loc_43CD34  +
mov ebx [esi+8] +
mov edx edi +
and edx ebx +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jz loc_43CD32  +
mov ecx ebx +
shl ecx 4 +
add ebx ecx +
and ebx edi +
or ebx 1 +
add edx ebx +
and edx edi +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_43CD26  +
mov [ecx] esi +
add ebp 4 +
cmp [esp+3Ch+var_24] ebp +
ja loc_43CD00  +
mov ebx [esp+3Ch+arg_0] +
cmp byte ptr [ebx+4Ch] 0 +
jnz loc_43CDA5  +
mov [ebx+2Ch] eax +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+38h] eax +
mov eax [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_43CB04  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx eax +
mov eax edi +
test ecx ecx +
jz loc_43CC4A  +
mov eax [esp+3Ch+var_18] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
jmp loc_43CB04  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_24] +
jmp loc_43CD47  +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call sub_458E00  +
mov edx [ebx+0Ch] +
jmp loc_43CC69  +
mov [esp+3Ch+var_1C] esi +
jmp loc_43CB04  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_43CBC3  +
xor eax eax +
jmp loc_43CC4A  +
or byte ptr [ebx+28h] 2 +
jmp loc_43CC9F  +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_8] +
mov edi [esp+20h+arg_4] +
test esi esi +
jz loc_43CE5B  +
lea ebx [edi+esi] +
mov eax edi +
xor edx edx +
lea esi [esi+0] +
add eax 1 +
movzx ecx byte ptr [eax-1] +
imul edx edx +
cmp eax ebx +
lea edx [edx+ecx-71h] +
jnz loc_43CE20  +
mov eax [esp+20h+arg_C] +
add edx esi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov [esp+20h+var_20] eax +
call sub_43CAB0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor edx edx +
jmp loc_43CE32  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_43CE87  +
add ebx 4 +
cmp ebp ebx +
jbe loc_43CEA9  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_43CE80  +
mov ecx [esi+40h] +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_14] edx +
call edi  +
test eax eax +
jnz loc_43CE80  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_43CEC0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_43CEE7  +
add ebx 4 +
cmp ebp ebx +
jbe loc_43CF16  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_43CEE0  +
mov ecx [esi+40h] +
mov edx [esp+38h] +
mov [esp+4] eax +
mov [esp] ecx +
mov [esp+8] edx +
call edi  +
test eax eax +
jz loc_43CEE0  +
mov dword ptr [ebx] 0FFFFFFFFh +
add ebx 4 +
cmp ebp ebx +
ja loc_43CEE7  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+30h] +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_43CF3E  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov [ebx+2Ch] eax +
mov eax [esp+28h] +
mov [ebx+38h] eax +
mov eax [esp+2Ch] +
mov [ebx+3Ch] eax +
mov eax esi +
mov [ebx+4Ch] al +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
xor ebp ebp +
push edi  +
push esi  +
xor esi esi +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov eax [esp+60h] +
fldz   +
mov dword ptr [esp+20h] 0 +
mov ecx [eax+2Ch] +
mov eax [eax+38h] +
shl eax 2 +
mov [esp+28h] eax +
add eax ecx +
mov [esp+18h] eax +
jmp loc_43CFBC  +
test eax eax +
jz loc_43CFB3  +
mov edi [eax+4] +
xor edx edx +
mov [esp+3Ch] edx +
mov [esp+38h] edi +
add ebp edi +
cmp ebx edi +
fild  qword ptr [esp+38h] +
cmovb ebx edi +
add esi 1 +
fmul st st +
faddp st(1) st +
add ecx 4 +
cmp [esp+18h] ecx +
jbe loc_43CFD1  +
mov eax [ecx] +
cmp eax 0FFFFFFFFh +
jnz loc_43CF90  +
add dword ptr [esp+20h] 1 +
add ecx 4 +
cmp [esp+18h] ecx +
ja loc_43CFBC  +
mov eax [esp+60h] +
xor edx edx +
mov [esp+1Ch] edx +
mov edx [esp+60h] +
fstp  qword ptr [esp+30h] +
mov eax [eax+3Ch] +
mov [esp] edx +
mov [esp+18h] eax +
call loc_458F70  +
mov edx [esp+18h] +
mov dword ptr [esp+4] offset aStringPoolEntr +
mov [esp+8] edx +
mov edx ds:_iob +
mov edi eax +
sub edi ebp +
lea eax [edx+40h] +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+18h] +
mov edx [esp+1Ch] +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aIdentifiersLu_ +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
xor edx edx +
fild  qword ptr [esp+38h] +
fst  qword ptr [esp+18h] +
mov [esp+3Ch] edx +
add eax 40h +
mov [esp+38h] esi +
fild  qword ptr [esp+38h] +
fmul  ds:flt_4CDA74 +
mov [esp] eax +
fdivrp st(1) st +
fstp  qword ptr [esp+0Ch] +
call sub_47D120  +
mov eax [esp+60h] +
mov eax [eax+38h] +
mov dword ptr [esp+4] offset aSlotsLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset aDeletedLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
cmp edi 27FFh +
mov ecx 20h +
fld  qword ptr [esp+30h] +
jbe loc_43D0CD  +
cmp edi 9FFFFFh +
ja loc_43D2E0  +
shr edi 0Ah +
mov ecx 6Bh +
cmp ebp 27FFh +
jbe loc_43D0F0  +
cmp ebp 9FFFFFh +
ja loc_43D2D1  +
mov edx ebp +
mov eax 6Bh +
shr edx 0Ah +
jmp loc_43D0F7  +
mov edx ebp +
mov eax 20h +
mov [esp+0Ch] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+20h] +
mov [esp+14h] ecx +
mov [esp+10h] edi +
mov [esp+8] edx +
add eax 40h +
mov dword ptr [esp+4] offset aBytesLuCLuCOve +
mov [esp] eax +
call sub_47D120  +
cmp dword ptr [esp+28h] 27FFh +
fld  qword ptr [esp+20h] +
jbe loc_43D150  +
cmp dword ptr [esp+28h] 9FFFFFh +
ja loc_43D2C0  +
mov eax [esp+28h] +
mov edx 6Bh +
shr eax 0Ah +
jmp loc_43D159  +
mov eax [esp+28h] +
mov edx 20h +
mov [esp+8] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+28h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aTableSizeLuC +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
xor edx edx +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov [esp+38h] ebp +
mov eax [eax+48h] +
fild  qword ptr [esp+38h] +
fld  qword ptr [esp+18h] +
fdiv st(1) st +
mov [esp+38h] eax +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov eax [eax+44h] +
mov dword ptr [esp+4] offset aCollSearch_4f +
fld  st(1) +
fmul st st(2) +
fxch  st(2) +
fstp  qword ptr [esp+30h] +
fxch  st(1) +
fstp  qword ptr [esp+20h] +
fld  qword ptr [esp+28h] +
fdivrp st(1) st +
fstp  qword ptr [esp+28h] +
fild  qword ptr [esp+38h] +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
fild  qword ptr [esp+38h] +
fdivp st(1) st +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_47D120  +
mov eax [esp+60h] +
xor edx edx +
mov eax [eax+44h] +
mov [esp+3Ch] edx +
mov dword ptr [esp+4] offset aInsSearch_4f +
mov [esp+38h] eax +
mov eax ds:_iob +
fild  qword ptr [esp+38h] +
fdivr  qword ptr [esp+18h] +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_47D120  +
fld  qword ptr [esp+28h] +
fsub  qword ptr [esp+20h] +
fldz   +
fld  st +
fucomi st st(2) +
fld  qword ptr [esp+30h] +
ja loc_43D2FF  +
fxch  st(3) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_43D2F0  +
fstp  st(1) +
jmp loc_43D252  +
fstp  st(1) +
fld  st +
fld  ds:dbl_4CDA78 +
lea esi [esi+0] +
fld  st(1) +
fmul st st(2) +
fsub st st(3) +
fld  st(2) +
fadd st st(3) +
fdivp st(1) st +
fsub st(2) st +
fucomip st st(1) +
ja loc_43D260  +
fstp  st +
fstp  st(1) +
mov eax ds:_iob +
fstp  qword ptr [esp+10h] +
fstp  qword ptr [esp+8] +
mov dword ptr [esp+4] offset aAvg_Entry_2fBy +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aLongestEntryLu +
add eax 40h +
mov [esp] eax +
call sub_47D120  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+28h] +
mov edx 4Dh +
shr eax 14h +
jmp loc_43D159  +
***
mov edx ebp +
mov eax 4Dh +
shr edx 14h +
jmp loc_43D0F7  +
***
shr edi 14h +
mov ecx 4Dh +
jmp loc_43D0CD  +
***
fucomi st st(1) +
jnz loc_43D250  +
fstp  st +
jmp loc_43D276  +
***
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov dword ptr [esp+8] offset aApprox_sqrt +
mov dword ptr [esp+4] 15Ch +
mov dword ptr [esp] offset a____GccLibcppS +
call sub_424080  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movq mm6 qword ptr ds:oword_4CE4C0 +
movq mm5 qword ptr ds:oword_4CE4D0 +
movq mm4 qword ptr ds:oword_4CE4E0 +
movq mm3 qword ptr ds:oword_4CE4F0 +
mov eax ecx +
and ecx 7 +
and eax 0FFFFFFF8h +
movq mm1 qword ptr [eax] +
shl edx cl +
jmp loc_43D36F  +
add eax 8 +
mov edx 0FFFFFFFFh +
movq mm1 qword ptr [eax] +
movq mm2 mm1 +
movq mm0 mm1 +
pcmpeqb mm2 mm6 +
pcmpeqb mm0 mm5 +
por mm0 mm2 +
movq mm2 mm1 +
pcmpeqb mm2 mm4 +
por mm0 mm2 +
pcmpeqb mm1 mm3 +
por mm0 mm1 +
pmovmskb ecx mm0 +
and edx ecx +
jz loc_43D364  +
emms   +
bsf edx edx +
add eax edx +
retn   +
***
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movdqa xmm6 oword ptr ds:oword_4CE4C0 +
movdqa xmm5 oword ptr ds:oword_4CE4D0 +
movdqa xmm4 oword ptr ds:oword_4CE4E0 +
movdqa xmm3 oword ptr ds:oword_4CE4F0 +
mov eax ecx +
and ecx 0Fh +
and eax 0FFFFFFF0h +
movdqa xmm1 oword ptr [eax] +
shl edx cl +
jmp loc_43D3EC  +
add eax 10h +
mov edx 0FFFFFFFFh +
movdqa xmm1 oword ptr [eax] +
movdqa xmm2 xmm1 +
movdqa xmm0 xmm1 +
pcmpeqb xmm2 xmm6 +
pcmpeqb xmm0 xmm5 +
por xmm0 xmm2 +
movdqa xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pcmpeqb xmm2 xmm4 +
por xmm0 xmm2 +
por xmm0 xmm1 +
pmovmskb ecx xmm0 +
and edx ecx +
jz loc_43D3E0  +
bsf edx edx +
add eax edx +
retn   +
***
mov ebx eax +
sub esp 14h +
mov esi [eax+20h] +
cmp esi [eax+24h] +
jz loc_43D456  +
mov eax [eax+18h] +
lea eax [eax+esi*8] +
add esi 1 +
mov [eax] edx +
mov [eax+4] ecx +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 64h +
lea eax [esi+esi] +
mov [ebx+24h] eax +
mov eax [ebx+18h] +
shl esi 4 +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_14] eax +
call sub_452A70  +
mov esi [ebx+20h] +
mov ecx [esp+14h+var_8] +
mov edx [esp+14h+var_C] +
mov [ebx+18h] eax +
jmp loc_43D442  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax] +
test eax eax +
jz loc_43D4A3  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 10h +
call sub_4529F0  +
mov [ebx] eax +
mov esi eax +
mov [eax+4] ebx +
mov [esp+14h+var_14] 0FA0h +
call sub_4529F0  +
mov dword ptr [esi] 0 +
mov [esi+8] eax +
add eax 0FA0h +
mov [esi+0Ch] eax +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov esi [eax] +
mov edi [esi] +
movzx eax byte ptr [edi] +
cmp al 24h +
jz loc_43D510  +
cmp byte ptr [ebx+263h] 0 +
jz loc_43D503  +
cmp al 5Ch +
jz loc_43D553  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+262h] 0 +
jz loc_43D503  +
add edi 1 +
mov ebp 1 +
mov [esi] edi +
cmp byte ptr [ebx+264h] 0 +
jz loc_43D503  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43D503  +
mov byte ptr [ebx+264h] 0 +
mov [esp+48h+var_40] offset aInIdentifier_0 +
mov [esp+48h+var_44] 2 +
mov [esp+48h+var_48] ebx +
call sub_43C650  +
jmp loc_43D503  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 55h +
jnz loc_43D503  +
add edi 2 +
cmp edx 1 +
mov edx [esi+10h] +
sbb eax eax +
not eax  +
mov [esi] edi +
add eax 2 +
lea edi [esp+48h+var_1C] +
mov [esp+48h+var_2C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_42F3B0  +
test al al +
jnz loc_43D5B0  +
sub dword ptr [esi] 2 +
jmp loc_43D503  +
mov ebp 1 +
jmp loc_43D503  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ebx] +
test cl cl +
mov [esp+2Ch+var_10] edx +
mov esi [esp+2Ch+arg_0] +
movzx edx byte ptr [edx] +
mov edi [eax] +
jnz loc_43D62E  +
movzx eax byte ptr [edi] +
lea ebp [edx-71h] +
test ds:word_4D0620[eax+eax] 204h +
jz loc_43D609  +
nop   +
imul ebp ebp +
add edi 1 +
lea ebp [ebp+eax-71h] +
movzx eax byte ptr [edi] +
test ds:word_4D0620[eax+eax] 204h +
jnz loc_43D5F0  +
movzx eax byte ptr [edi-1] +
xor edx edx +
mov ecx esi +
mov byte ptr [esi+4] 0 +
mov [esi] eax +
mov eax [ebx] +
mov [eax] edi +
mov eax ebx +
call sub_43D4E0  +
test al al +
jz loc_43D700  +
mov eax [ebx] +
mov edi [eax] +
movzx edx byte ptr [edi] +
test ds:word_4D0620[edx+edx] 204h +
jnz loc_43D662  +
lea esi [esi+0] +
xor edx edx +
mov ecx esi +
mov eax ebx +
call sub_43D4E0  +
test al al +
jz loc_43D671  +
mov edx [ebx] +
mov edi [edx] +
movzx edx byte ptr [edi] +
test ds:word_4D0620[edx+edx] 204h +
jz loc_43D640  +
mov byte ptr [esi+4] 0 +
mov [esi] edx +
mov edx [ebx] +
add dword ptr [edx] 1 +
mov edi [edx] +
jmp loc_43D653  +
mov eax [ebx] +
mov edi [esp+2Ch+var_10] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_4347A0  +
mov esi eax +
mov eax [ebx] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_441B20  +
mov ecx [esp+2Ch+arg_4] +
mov [ecx] eax +
movzx edx word ptr [esi+14h] +
shr dx 6 +
test dl 8 +
jz loc_43D6F1  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43D6F1  +
and edx 2 +
jnz loc_43D737  +
cmp [ebx+2B8h] esi +
jz loc_43D760  +
test byte ptr [esi+15h] 80h +
jz loc_43D6F1  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aIdentifierSIsA +
mov [esp+2Ch+var_28] 0Fh +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_43C690  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [ebx+234h] +
mov [esp+2Ch+var_1C] 1 +
sub edi ecx +
add ebp edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_43CAB0  +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
jmp loc_43D6A9  +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_43D6C1  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aAttemptToUsePo +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_43C650  +
jmp loc_43D6C1  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_43D6CD  +
cmp byte ptr [ebx+248h] 0 +
jz loc_43D790  +
mov [esp+2Ch+var_24] offset a__va_args__Can +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_43C650  +
jmp loc_43D6CD  +
mov [esp+2Ch+var_24] offset a__va_args__C_0 +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_43C650  +
jmp loc_43D6CD  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx eax +
and ebx 0FFFFFFFCh +
and eax 3 +
mov edx [ebx] +
jz loc_43D7DB  +
lea ecx ds:0[eax*8] +
mov eax 0FFFFFFFFh +
shl eax cl +
and edx eax +
jmp loc_43D7DB  +
add ebx 4 +
mov edx [ebx] +
mov ecx edx +
mov ebp edx +
xor ecx 0D0D0D0Dh +
xor ebp 0A0A0A0Ah +
mov eax ecx +
add ecx 7EFEFEFFh +
not eax  +
mov edi edx +
xor eax ecx +
mov ecx ebp +
not ecx  +
add ebp 7EFEFEFFh +
xor edi 5C5C5C5Ch +
xor ecx ebp +
or eax ecx +
mov ecx edi +
mov esi edx +
add edi 7EFEFEFFh +
not ecx  +
xor esi 3F3F3F3Fh +
xor ecx edi +
or eax ecx +
mov ecx esi +
not ecx  +
add esi 7EFEFEFFh +
xor ecx esi +
or eax ecx +
test eax 81010100h +
jz loc_43D7D6  +
xor eax eax +
lea ecx ds:0[eax*8] +
mov esi edx +
shr esi cl +
mov ecx esi +
cmp cl 0Ah +
jz loc_43D868  +
cmp cl 0Dh +
jz loc_43D868  +
cmp cl 5Ch +
jz loc_43D868  +
cmp cl 3Fh +
jz loc_43D868  +
add eax 1 +
cmp eax 4 +
jnz loc_43D83A  +
jmp loc_43D7D6  +
test eax eax +
js loc_43D7D6  +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [edx] +
test al al +
movzx ebx al +
jns loc_43D938  +
mov esi ebx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx ebx +
add ecx 1 +
test bl 80h +
jnz loc_43D8A0  +
mov ebx 7Fh +
sar ebx cl +
and ebx esi +
cmp ecx 1 +
jz loc_43D958  +
movzx eax byte ptr [edx+1] +
shl ebx 6 +
lea esi [edx+1] +
mov ebp eax +
and eax 0C0h +
and ebp 3Fh +
or ebx ebp +
add eax 0FFFFFF80h +
jnz loc_43D93C  +
lea eax [edx+ecx-1] +
jmp loc_43D8FD  +
add esi 1 +
movzx edx byte ptr [esi] +
shl ebx 6 +
mov ebp ebx +
mov ebx edx +
and edx 0C0h +
and ebx 3Fh +
or ebx ebp +
add edx 0FFFFFF80h +
jnz loc_43D93C  +
cmp esi eax +
jnz loc_43D8E0  +
mov ebp ecx +
mov byte ptr [edi] 5Ch +
lea edx [edi+2] +
mov ecx 1Ch +
mov byte ptr [edi+1] 55h +
mov esi ebx +
add edx 1 +
shr esi cl +
sub ecx 4 +
and esi 0Fh +
cmp ecx 0FFFFFFFCh +
movzx eax ds:byte_4CDB95[esi] +
mov [edx-1] al +
jnz loc_43D912  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebp ebp +
jmp loc_43D903  +
mov [esp+24h+var_1C] offset aUtf8_to_ucn +
mov [esp+24h+var_20] 0C56h +
mov [esp+24h+var_24] offset a____GccLibcp_0 +
call sub_424080  +
mov ebp 1 +
jmp loc_43D903  +
***
sub esp 24h +
movzx esi byte ptr [edx] +
test byte ptr [esi+esi+4D0621h] 2 +
jz loc_43D9E0  +
movzx ebx byte ptr [edx+1] +
sub esi 71h +
lea ecx [edx+1] +
test ds:word_4D0620[ebx+ebx] 204h +
jz loc_43D9A1  +
imul esi esi +
add ecx 1 +
lea esi [esi+ebx-71h] +
movzx ebx byte ptr [ecx] +
test ds:word_4D0620[ebx+ebx] 204h +
jnz loc_43D988  +
mov eax [eax] +
sub ecx edx +
add esi ecx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_43CAB0  +
test eax eax +
jz loc_43D9E0  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
push ebx  +
jz loc_43DA71  +
xor eax eax +
cpuid   +
test eax eax +
jz loc_43DA71  +
mov eax 1 +
cpuid   +
and ecx 100000h +
mov eax offset loc_43D3A0 +
jnz loc_43DA6A  +
test edx 4000000h +
jnz loc_43DA6A  +
and edx 2000000h +
mov eax offset loc_43D330 +
jz loc_43DAB3  +
mov ds:dword_4D9294 eax +
pop ebx  +
retn   +
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
jz loc_43DAB3  +
mov eax 80000000h +
cpuid   +
cmp eax 80000000h +
jbe loc_43DAB3  +
mov eax 80000001h +
cpuid   +
and edx offset loc_408000 +
cmp edx offset loc_408000 +
jnz loc_43DAB3  +
mov eax offset loc_43D330 +
jmp loc_43DA6A  +
mov eax offset sub_43D7B0 +
mov ds:dword_4D9294 eax +
pop ebx  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov esi [eax] +
mov ebx [esi+8] +
test byte ptr [esi+3Ch] 2 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+4] ebx +
mov [esi] ebx +
mov byte ptr [esi+38h] 0 +
jz loc_43DB26  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_43DB0E  +
cmp al 0Dh +
jnz loc_43DB04  +
jmp loc_43DB0E  +
cmp al 0Ah +
jz loc_43DB0E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 0Dh +
jnz loc_43DB00  +
cmp al 0Dh +
jz loc_43DB74  +
lea edx [ebx+1] +
mov ebp edx +
jmp loc_43DB5A  +
cmp byte ptr [ebx+1] 3Fh +
jz loc_43DBF8  +
add ebx 1 +
mov eax [esi+10h] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_20] eax +
call ds:dword_4D9294  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_43DB87  +
cmp al 3Fh +
jz loc_43DB19  +
mov edx [esi+10h] +
cmp ebx edx +
jz loc_43DB12  +
cmp al 0Dh +
mov ebp ebx +
jz loc_43DB8E  +
test edi edi +
jnz loc_43DBA0  +
lea edx [ebx+1] +
add ebp 1 +
mov byte ptr [ebx] 0Ah +
mov eax esi +
mov ecx 0Ah +
call sub_43D430  +
mov [esi+8] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+10h] ebx +
jz loc_43DB12  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_43DB12  +
lea ebp [ebx+2] +
lea edx [ebx+1] +
jmp loc_43DB5A  +
mov edi ebx +
add ebx 1 +
jmp loc_43DB26  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_43DB50  +
lea ebp [ebx+1] +
cmp edx ebp +
jnz loc_43DB50  +
lea ebp [ebx+2] +
jmp loc_43DB5A  +
movzx eax byte ptr [ebx-1] +
test byte ptr [eax+eax+4D0621h] 8 +
jz loc_43DD01  +
mov eax ebx +
sub eax 1 +
movzx edx byte ptr [eax-1] +
test byte ptr [edx+edx+4D0621h] 8 +
jnz loc_43DBB4  +
mov [esp+24h+var_18] eax +
sub eax 1 +
cmp edi eax +
jnz loc_43DB54  +
cmp ebx [esp+24h+var_18] +
mov ecx 20h +
mov eax 5Ch +
mov edx edi +
cmovz ecx eax +
mov eax esi +
mov edi edx +
call sub_43D430  +
mov ebx [esp+24h+var_18] +
mov [esi+8] edi +
sub ebx 2 +
jmp loc_43DC33  +
movzx ecx byte ptr [ebx+2] +
cmp ds:byte_4D92A0[ecx] 0 +
jz loc_43DB23  +
mov eax esi +
mov edx ebx +
call sub_43D430  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_43DB23  +
movzx eax byte ptr [ebx+2] +
lea ebp [ebx+2] +
movzx eax ds:byte_4D92A0[eax] +
mov [ebx] al +
mov edi ebx +
lea eax [ebp+1] +
add ebx 1 +
mov [esp+24h+var_18] eax +
movzx eax byte ptr [ebp+1] +
cmp al 0Dh +
mov [edi+1] al +
jnz loc_43DCA3  +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jz loc_43DCF6  +
cmp byte ptr [ebp+2] 0Ah +
jz loc_43DCBA  +
mov edx [esi+8] +
cmp edx ebx +
jz loc_43DC94  +
movzx eax byte ptr [edi] +
movzx ecx al +
test byte ptr [ecx+ecx+4D0621h] 8 +
jz loc_43DCD7  +
mov edi ebx +
jmp loc_43DC8D  +
movzx eax byte ptr [edi-1] +
movzx ecx al +
test byte ptr [ecx+ecx+4D0621h] 8 +
jz loc_43DD1C  +
sub edi 1 +
cmp edx edi +
jnz loc_43DC78  +
mov ebp [esp+24h+var_18] +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_43DB5A  +
cmp al 0Ah +
jz loc_43DCC1  +
cmp al 3Fh +
jz loc_43DD35  +
mov edi ebx +
mov ebp [esp+24h+var_18] +
jmp loc_43DC35  +
lea eax [ebp+2] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jnz loc_43DC5D  +
mov ebp eax +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_43DB5A  +
cmp al 5Ch +
jnz loc_43DC94  +
mov edi ebx +
mov ecx 5Ch +
lea ebp [edi-1] +
mov eax esi +
mov edx ebp +
call sub_43D430  +
lea ebx [edi-2] +
mov [esi+8] ebp +
jmp loc_43DCAF  +
lea edx [ebx+1] +
add ebp 2 +
jmp loc_43DB5A  +
lea eax [ebx-1] +
cmp eax edi +
mov edx eax +
jnz loc_43DB54  +
mov [esp+24h+var_18] ebx +
mov ecx 5Ch +
jmp loc_43DBE3  +
cmp al 5Ch +
jnz loc_43DC94  +
cmp ebx edi +
mov ecx 5Ch +
mov eax 20h +
cmovnz ecx eax +
jmp loc_43DCE2  +
cmp byte ptr [ebp+2] 3Fh +
jnz loc_43DCAF  +
movzx ecx byte ptr [ebp+3] +
cmp ds:byte_4D92A0[ecx] 0 +
jz loc_43DCAF  +
mov eax esi +
mov edx ebx +
call sub_43D430  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_43DCAF  +
movzx eax byte ptr [ebp+3] +
movzx eax ds:byte_4D92A0[eax] +
mov [edi+1] al +
lea eax [ebp+3] +
mov [esp+24h+var_18] eax +
jmp loc_43DCAF  +
***
push ebx  +
sub esp 14h +
mov edx [eax] +
jmp loc_43DDC8  +
cmp ebx ecx +
movzx ebx byte ptr [edx+3Ch] +
jbe loc_43DDB0  +
test bl 2 +
jnz loc_43DDB0  +
mov [edx+8] ecx +
mov [esp+18h+var_18] esi +
shr bl 2 +
call sub_437BE0  +
mov edx [esi] +
and ebx 1 +
test edx edx +
jz loc_43DDF0  +
test bl bl +
jnz loc_43DDF0  +
movzx eax byte ptr [edx+38h] +
test al al +
jz loc_43DDF8  +
mov ebx [edx+8] +
mov ecx [edx+10h] +
cmp ebx ecx +
jb loc_43DE03  +
cmp byte ptr [esi+11h] 0 +
jnz loc_43DDF0  +
cmp ecx [edx+0Ch] +
jnz loc_43DDA0  +
movzx ebx byte ptr [edx+3Ch] +
jmp loc_43DDB0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_43DAC0  +
mov eax [esp+18h+var_C] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
mov ebx [ebp+0] +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
nop   +
mov eax [esp+3Ch+var_20] +
mov edi [esp+3Ch+var_1C] +
lea esi [eax+edx*8] +
mov eax [esi] +
cmp eax edi +
mov [esp+3Ch+var_18] eax +
ja loc_43E050  +
lea edi [eax+1] +
mov eax [esi+4] +
add edx 1 +
sub edi [ebx+4] +
mov [ebx+1Ch] edx +
cmp eax 20h +
jnz loc_43DED3  +
mov eax [esp+3Ch+arg_4] +
test eax eax +
jz loc_43E058  +
mov eax [ebx+10h] +
cmp [ebx+8] eax +
ja loc_43DF70  +
mov eax [esi] +
mov esi [ebp+1Ch] +
mov [ebx+4] eax +
mov eax [esi+8] +
lea edx [eax-1] +
imul edx edx +
add edx [esi] +
mov [esp+3Ch+var_34] 0 +
mov eax [esi+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov edi [edx+0Ch] +
sub eax [edx] +
mov [esp+3Ch+var_3C] esi +
shr eax cl +
lea eax [edi+eax+1] +
mov [esp+3Ch+var_38] eax +
call sub_42BA50  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
jmp loc_43DE40  +
cmp eax 5Ch +
jz loc_43DE79  +
movzx ecx ds:byte_4D92A0[eax] +
test cl cl +
mov byte ptr [esp+3Ch+var_14] cl +
jz loc_43DF45  +
cmp byte ptr [ebp+258h] 0 +
jz loc_43DE40  +
mov ecx [esp+3Ch+arg_4] +
test ecx ecx +
jnz loc_43DFA1  +
cmp byte ptr [ebp+24Dh] 0 +
jz loc_43E020  +
mov edx [ebp+1Ch] +
movzx ecx byte ptr [esp+3Ch+var_14] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CCon +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_43C7A0  +
jmp loc_43DE2E  +
test eax eax +
jz loc_43DE40  +
mov [esp+3Ch+var_34] offset a_cpp_process_l +
mov [esp+3Ch+var_38] 48Bh +
mov [esp+3Ch+var_3C] offset a____GccLibcp_0 +
call sub_424080  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashNewli +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_43C750  +
mov eax [ebx+10h] +
mov [ebx+8] eax +
jmp loc_43DE85  +
cmp eax 2Fh +
jnz loc_43DE40  +
cmp byte ptr [ebp+24Dh] 0 +
mov ecx [esp+3Ch+var_18] +
jnz loc_43E083  +
add ecx 3 +
mov [esp+3Ch+var_14] ecx +
mov ecx [esp+3Ch+var_18] +
movzx ecx byte ptr [ecx+3] +
test byte ptr [ecx+ecx+4D0621h] 8 +
mov byte ptr [esp+3Ch+var_18] cl +
jz loc_43E007  +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_18] esi +
add ecx 1 +
movzx ebx byte ptr [ecx] +
movzx esi bl +
test byte ptr [esi+esi+4D0621h] 8 +
jnz loc_43DFE4  +
mov esi [esp+3Ch+var_18] +
mov byte ptr [esp+3Ch+var_18] bl +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_14] ecx +
cmp byte ptr [esp+3Ch+var_18] 0Ah +
jnz loc_43DE40  +
mov ecx [esp+3Ch+var_14] +
cmp [esi+8] ecx +
jbe loc_43DE40  +
nop   +
mov edx [ebp+1Ch] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CIgn +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_43C7A0  +
jmp loc_43DE2E  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashAndNe +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_43C750  +
jmp loc_43DE79  +
cmp ecx [esi+8] +
jz loc_43DF0D  +
lea esi [esi+0] +
jmp loc_43DE40  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov edi [ebp+0] +
mov edx [edi] +
movzx eax byte ptr [edx+1] +
lea ebx [edx+1] +
cmp al 2Fh +
jz loc_43E1B0  +
cmp al 2Fh +
lea esi [ebx+1] +
jz loc_43E0D7  +
cmp al 0Ah +
jz loc_43E130  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
cmp al 2Fh +
lea esi [ebx+1] +
jnz loc_43E0C6  +
cmp byte ptr [ebx-1] 2Ah +
jz loc_43E194  +
cmp byte ptr [ebp+255h] 0 +
jz loc_43E0CA  +
movzx eax byte ptr [ebx+1] +
cmp al 2Ah +
jnz loc_43E0CE  +
cmp byte ptr [ebx+2] 2Fh +
jz loc_43E0CE  +
mov eax [ebp+1Ch] +
mov edx esi +
mov [edi] esi +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_1C] offset aWithinComment +
sub edx [edi+4] +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_2C] ebp +
call sub_43C7A0  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
jmp loc_43E0D0  +
mov [edi] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_43DE20  +
mov eax [edi+10h] +
cmp [edi+8] eax +
jnb loc_43E1BC  +
mov [esp+2Ch+var_2C] ebp +
call sub_43DAC0  +
mov ebx [ebp+1Ch] +
mov eax [ebx+8] +
lea edx [eax-1] +
mov eax [edi+8] +
imul edx edx +
add edx [ebx] +
sub eax [edi+4] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov esi [edx+0Ch] +
sub eax [edx] +
mov [esp+2Ch+var_2C] ebx +
shr eax cl +
lea eax [esi+eax+1] +
mov [esp+2Ch+var_28] eax +
call sub_42BA50  +
mov esi [edi] +
movzx eax byte ptr [esi] +
mov ebx esi +
jmp loc_43E0D0  +
mov [edi] esi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] 1 +
call sub_43DE20  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edx+2] +
movzx eax byte ptr [edx+2] +
jmp loc_43E0BF  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
movzx ecx byte ptr [esi] +
lea eax [esi+1] +
movzx edx byte ptr [esi+1] +
sub ecx 71h +
test ds:word_4D0620[edx+edx] 204h +
jz loc_43E20F  +
imul ecx ecx +
add eax 1 +
lea ecx [ecx+edx-71h] +
movzx edx byte ptr [eax] +
test ds:word_4D0620[edx+edx] 204h +
jnz loc_43E1F6  +
mov edx [ebx+234h] +
sub eax esi +
add ecx eax +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_14] 1 +
mov [esp+24h+var_24] edx +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_1C] eax +
call sub_43CAB0  +
movzx edx word ptr [eax+14h] +
mov esi eax +
shr dx 6 +
test dl 8 +
jz loc_43E280  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43E280  +
and edx 2 +
jnz loc_43E288  +
cmp esi [ebx+2B8h] +
jz loc_43E2AE  +
test byte ptr [esi+15h] 80h +
jz loc_43E280  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aIdentifierSIsA +
mov [esp+24h+var_20] 0Fh +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_43C690  +
nop   +
lea esi [esi+0] +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_43E24F  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aAttemptToUsePo +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_43C650  +
jmp loc_43E24F  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_43E257  +
cmp byte ptr [ebx+248h] 0 +
jz loc_43E2D7  +
mov [esp+24h+var_1C] offset a__va_args__Can +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_43C650  +
jmp loc_43E257  +
mov [esp+24h+var_1C] offset a__va_args__C_0 +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_43C650  +
jmp loc_43E257  +
***
mov eax [esp+4] +
add eax 2ECh +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
shl ebx 4 +
mov [esp+14h+var_14] ebx +
call sub_4529F0  +
mov dword ptr [esi] 0 +
add ebx eax +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov eax [esi+104h] +
mov edi [esi+0F0h] +
mov ebp [esi+108h] +
mov ebx [eax+0Ch] +
mov [esp+1Ch+var_10] eax +
mov eax edi +
sub ebx edi +
sar ebx 4 +
test ebp ebp +
jz loc_43E3F0  +
cmp ebx ebp +
jle loc_43E413  +
cmp ebx 1 +
jle loc_43E3F0  +
sub ebx 1 +
cmp ebx ebp +
cmovle ebp ebx +
mov [esp+1Ch+var_18] eax +
shl ebp 4 +
add eax 10h +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] eax +
call memmove  +
mov eax [esi+0F0h] +
jmp loc_43E3FD  +
test ebx ebx +
jnz loc_43E3FD  +
mov ecx [esp+1Ch+var_10] +
cmp [ecx+0Ch] eax +
jz loc_43E460  +
lea edx [eax+10h] +
mov [esi+0F0h] edx +
mov edx [edi-10h] +
mov [eax] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+var_10] +
call sub_43D490  +
cmp ebx ebp +
mov edx eax +
jl loc_43E472  +
mov ecx [esi+104h] +
cmp ebx 1 +
mov eax [edx+8] +
mov [esp+1Ch+var_10] ecx +
mov ecx [ecx+0Ch] +
mov edx [ecx-10h] +
mov [eax] edx +
mov edx [ecx-0Ch] +
mov [eax+4] edx +
mov edx [ecx-8] +
mov [eax+8] edx +
mov ecx [ecx-4] +
mov [eax+0Ch] ecx +
mov eax [esi+0F0h] +
jg loc_43E3C8  +
jmp loc_43E3F0  +
mov eax ecx +
call sub_43D490  +
mov [esi+104h] eax +
mov eax [eax+8] +
jmp loc_43E3FD  +
mov ecx [eax+8] +
mov [esp+1Ch+var_10] eax +
mov eax ebp +
sub eax ebx +
shl eax 4 +
mov [esp+1Ch+var_18] ecx +
add ecx 10h +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ecx +
call memmove  +
mov edx [esp+1Ch+var_10] +
jmp loc_43E422  +
***
mov eax [esp+arg_0] +
cmp byte ptr [eax+8] 0 +
jnz loc_43E4B0  +
jmp sub_43DD90  +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax+4] +
mov edx ds:dword_4CE6E0[edx*8] +
cmp edx 1 +
jz loc_43E4E6  +
cmp edx 2 +
jnz loc_43E4E0  +
mov eax [eax+8] +
retn   +
mov eax 6 +
retn   +
mov eax [eax+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov edi [esp+0Ch+arg_4] +
mov esi [esp+0Ch+arg_0] +
mov eax [edi+4] +
mov ebp [edi] +
test eax eax +
jz loc_43E54E  +
xor ebx ebx +
jmp loc_43E52D  +
mov [esi] al +
add ebx 1 +
add esi 1 +
cmp [edi+4] ebx +
jbe loc_43E54E  +
lea edx [ebp+ebx+0] +
movzx eax byte ptr [edx] +
test al 80h +
jz loc_43E520  +
mov eax esi +
add esi 0Ah +
call sub_43D880  +
lea ebx [eax+ebx-1] +
add ebx 1 +
cmp [edi+4] ebx +
ja loc_43E52D  +
add esp 0Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_8] +
mov ecx [esp+10h+arg_C] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4CE6E0[edx*8] +
cmp eax 1 +
jz loc_43E620  +
jle loc_43E5E4  +
cmp eax 2 +
jz loc_43E5C2  +
cmp eax 3 +
jnz loc_43E5B9  +
mov eax ds:off_4CE6E4[edx*8] +
mov [esp+10h+var_8] offset aUnspellableTok +
mov [esp+10h+var_C] 4 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_4] eax +
call sub_43C650  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
add ebx [esi+8] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jnz loc_43E5B9  +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_43E666  +
test al 10h +
jnz loc_43E620  +
mov eax ds:off_4CE6E4[edx*8] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
test al al +
jz loc_43E5B9  +
add ebx 1 +
add edx 1 +
mov [ebx-1] al +
movzx eax byte ptr [edx-1] +
test al al +
jnz loc_43E605  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test cl cl +
jz loc_43E650  +
mov eax [esi+0Ch] +
mov edx [eax+4] +
mov eax [eax] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
mov eax [esi+0Ch] +
add ebx [eax+4] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+8] +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_43E500  +
mov eax ds:dword_4CE900[edx*4] +
jmp loc_43E5FB  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [ecx] +
cmp [ebx+284h] eax +
jge loc_43E717  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43E717  +
movzx eax byte ptr [edx+4] +
mov esi edx +
mov eax ds:dword_4CE6E0[eax*8] +
cmp eax 1 +
jz loc_43E725  +
cmp eax 2 +
jz loc_43E720  +
mov eax 6 +
mov [esp+20h+var_20] eax +
mov [esp+20h+var_4] ecx +
call sub_4529F0  +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
mov edi eax +
call sub_43E560  +
mov ecx [esp+20h+var_4] +
mov edx [esi] +
sub eax edi +
cmp dword ptr [ecx] 1 +
mov [esp+20h+var_8] edi +
mov [esp+20h+var_C] eax +
jz loc_43E735  +
mov [esp+20h+var_10] offset a_SIsNotInNfc +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] 10h +
mov [esp+20h+var_20] ebx +
call sub_43C7A0  +
mov [esp+20h+var_20] edi +
call free  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edx+8] +
jmp loc_43E6B0  +
mov eax [edx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_43E6B0  +
mov [esp+20h+var_10] offset a_SIsNotInNfkc +
jmp loc_43E6F3  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test al 2 +
jnz loc_43E758  +
test al 10h +
jnz loc_43E760  +
mov eax ds:off_4CE6E4[edx*8] +
retn   +
***
mov eax ds:dword_4CE900[edx*4] +
retn   +
***
mov [esp+4] edx +
jmp loc_44C710  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4CE6E0[edx*8] +
cmp eax 1 +
jz loc_43E7E0  +
cmp eax 2 +
jz loc_43E848  +
test eax eax +
jz loc_43E7A4  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_43E870  +
test al 10h +
jnz loc_43E7E0  +
mov esi ds:off_4CE6E4[edx*8] +
movzx eax byte ptr [esi] +
nop   +
add esi 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call putc  +
movzx eax byte ptr [esi] +
test eax eax +
jnz loc_43E7C0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+8] +
mov edx [eax+4] +
mov edi [eax] +
test edx edx +
jz loc_43E79C  +
xor ebp ebp +
jmp loc_43E82C  +
lea eax [esp+2Ch+var_16] +
call sub_43D880  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] 1 +
lea ebp [ebp+eax-1] +
lea eax [esp+2Ch+var_16] +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
mov eax [esi+8] +
add ebp 1 +
cmp [eax+4] ebp +
jbe loc_43E79C  +
lea edx [edi+ebp] +
test byte ptr [edx] 80h +
jnz loc_43E7F0  +
mov [esp+2Ch+var_28] ebx +
mov eax [eax] +
movzx eax byte ptr [eax+ebp] +
mov [esp+2Ch+var_2C] eax +
call fputc  +
jmp loc_43E81D  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4CE900[edx*4] +
jmp loc_43E7BB  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov ecx [ebx+4] +
mov edx [esi+4] +
xor ch ch +
xor dh dh +
cmp ecx edx +
jz loc_43E8A3  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx ecx byte ptr [ebx+4] +
movzx edx cl +
mov edx ds:dword_4CE6E0[edx*8] +
cmp edx 2 +
jz loc_43E8F0  +
cmp edx 3 +
jz loc_43E8D5  +
cmp edx 1 +
jz loc_43E918  +
cmp cl 26h +
mov al 1 +
jnz loc_43E89D  +
mov eax [esi+8] +
cmp [ebx+8] eax +
setz al  +
movzx eax al +
jmp loc_43E89D  +
cmp cl 50h +
mov eax 1 +
jnz loc_43E89D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jz loc_43E935  +
xor eax eax +
jmp loc_43E89D  +
mov edx [ebx+8] +
cmp edx [esi+8] +
jnz loc_43E89D  +
mov [esp+18h+var_10] edx +
mov eax [esi+0Ch] +
mov [esp+18h+var_14] eax +
mov eax [ebx+0Ch] +
mov [esp+18h+var_18] eax +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
jmp loc_43E89D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jnz loc_43E89D  +
mov eax [esi+0Ch] +
cmp [ebx+0Ch] eax +
setz al  +
movzx eax al +
jmp loc_43E89D  +
mov esi [esi+0Ch] +
cmp [ebx+0Ch] esi +
jz loc_43E89D  +
xor eax eax +
jmp loc_43E89D  +
***
push ebp  +
mov edx 35h +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov eax [esp+1Ch] +
test byte ptr [ecx+6] 10h +
movzx ebp byte ptr [eax+4] +
movzx eax byte ptr [ecx+4] +
cmovz edx eax +
mov eax [esp+1Ch] +
movzx eax word ptr [eax+6] +
test al 10h +
jnz loc_43E9C1  +
mov ebx ebp +
movzx edi bl +
mov esi edi +
test al 2 +
jz loc_43E9A5  +
mov eax ds:dword_4CE900[esi*4] +
movzx esi byte ptr [eax] +
cmp esi 3Dh +
jnz loc_43E9B5  +
cmp edx 0Dh +
mov eax 1 +
jg loc_43E9B5  +
***
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_4CE6E0[esi*8] +
test eax eax +
jz loc_43E9D0  +
mov esi 0FFFFFFFFh +
cmp edx 42h +
ja sub_43EA20  +
jmp ds:off_4CDC98[edx*4]  +
***
mov esi 35h +
mov edi 35h +
jmp loc_43E983  +
***
mov eax ds:off_4CE6E4[esi*8] +
movzx esi byte ptr [eax] +
jmp loc_43E991  +
***
and esi 0FFFFFFFBh +
xor eax eax +
cmp esi 3Ah +
setz al  +
jmp loc_43E9A0  +
***
mov eax [ecx+0Ch] +
xor eax eax +
xor eax eax +
xor eax eax +
cmp esi 2Ah +
cmp esi 3Eh +
setz al  +
cmp esi 2Dh +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_43E9A0  +
***
xor eax eax +
cmp esi 2Bh +
setz al  +
jmp loc_43E9A0  +
***
cmp esi 25h +
jz loc_43EA90  +
cmp esi 3Ch +
jnz loc_43E9E3  +
nop   +
mov eax 1 +
jmp loc_43E9A0  +
***
xor eax eax +
cmp esi 3Eh +
setz al  +
jmp loc_43E9A0  +
***
and edi 0FFFFFFFDh +
mov eax 1 +
cmp edi 35h +
jz loc_43E9A0  +
cmp esi 2Bh +
jz loc_43E9A0  +
sub esi 2Dh +
xor eax eax +
cmp esi 1 +
setbe al  +
jmp loc_43E9A0  +
***
cmp edi 37h +
cmp esi 25h +
cmp esi 25h +
setz al  +
cmp esi 23h +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_43E9A0  +
***
mov ebx [esp+arg_10] +
xor eax eax +
cmp byte ptr [ebx+271h] 0 +
jz loc_43E9A0  +
cmp edi 35h +
jz loc_43EA90  +
mov ebx ebp +
movzx ebp bl +
cmp ds:dword_4CE6E0[ebp*8] 2 +
jnz loc_43E9A0  +
mov ebx [esp+arg_18] +
mov edx [ebx+0Ch] +
movzx edx byte ptr [edx] +
test byte ptr [edx+edx+4D0621h] 2 +
jnz loc_43EA90  +
jmp loc_43E9A0  +
***
xor eax eax +
cmp esi 2Ah +
setz al  +
jmp loc_43E9A0  +
***
mov eax [esp+arg_18] +
mov edx [eax+8] +
test edx edx +
jz loc_43EA90  +
mov eax [eax+0Ch] +
lea ebx [eax+edx] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:word_4D0620[ecx+ecx] 204h +
jnz loc_43EBD1  +
cmp dl 24h +
jnz loc_43EAF3  +
mov ecx [esp+arg_10] +
cmp byte ptr [ecx+262h] 0 +
jz loc_43EAF3  +
add eax 1 +
cmp eax ebx +
jnz loc_43EBA5  +
jmp loc_43EA90  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
call sub_43B4A0  +
mov ebx eax +
cmp byte ptr [ebx+4] 16h +
jz loc_43EC30  +
mov [esp] ebx +
mov [esp+4] esi +
call sub_43E770  +
mov [esp] edi +
call sub_43B4A0  +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_43EBF8  +
mov [esp+4] esi +
mov dword ptr [esp] 20h +
call putc  +
cmp byte ptr [ebx+4] 16h +
jnz loc_43EBFE  +
mov [esp+24h] esi +
mov dword ptr [esp+20h] 0Ah +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp putc  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_43ED62  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
lea edi [eax+78h] +
mov ebp eax +
mov [esp+2Ch+var_2C] edi +
add ebp 2 +
call sub_4529F0  +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] offset aS_12 +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call sub_47D150  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43B4A0  +
mov ebx eax +
nop   +
movzx eax byte ptr [ebx+4] +
cmp al 16h +
jz loc_43ED3A  +
mov eax ds:dword_4CE6E0[eax*8] +
cmp eax 1 +
jz loc_43ED48  +
cmp eax 2 +
jnz loc_43ED58  +
mov eax [ebx+8] +
lea eax [ebp+eax+2] +
cmp edi eax +
jnb loc_43ECE5  +
add edi edi +
cmp eax edi +
cmovnb edi eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_452A70  +
mov esi eax +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+ebp] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43E560  +
mov ebp eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
sub ebp esi +
mov [esp+2Ch+var_2C] eax +
call sub_43B4A0  +
mov ecx [esp+2Ch+var_10] +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_43ECA0  +
mov byte ptr [ecx] 20h +
movzx eax byte ptr [ebx+4] +
add ebp 1 +
cmp al 16h +
jnz loc_43ECAC  +
mov byte ptr [esi+ebp] 0 +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_43ECC8  +
mov eax 6 +
jmp loc_43ECC8  +
mov [esp+2Ch+var_2C] 78h +
mov edi 78h +
xor ebp ebp +
call sub_4529F0  +
mov esi eax +
jmp loc_43EC91  +
***
mov ecx [esp+arg_0] +
mov edx ebx +
jmp loc_43ED92  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_43ED90  +
mov eax [ecx+2Ch] +
mov [edx] eax +
mov [ecx+2Ch] ebx +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
lea ebx [eax+2Ch] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_43EDE8  +
lea esi [ecx+ecx*2] +
shr esi 1 +
add esi 1F40h +
mov edx [eax+0Ch] +
sub edx [eax+4] +
cmp ecx edx +
ja loc_43EDE0  +
cmp edx esi +
jbe loc_43EE30  +
mov ebx eax +
mov eax [eax] +
test eax eax +
jnz loc_43EDD2  +
cmp ecx 1F3Fh +
mov eax 1F50h +
mov ebx 1F40h +
ja loc_43EE20  +
mov [esp+14h+var_14] eax +
call sub_4529F0  +
lea edx [eax+ebx] +
mov [edx+4] eax +
mov [edx+8] eax +
mov eax edx +
mov [edx+0Ch] edx +
mov dword ptr [edx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ebx [ecx+7] +
and ebx 0FFFFFFF8h +
lea eax [ebx+10h] +
jmp loc_43EDFA  +
mov edx [eax] +
mov [ebx] edx +
mov edx [eax+4] +
mov dword ptr [eax] 0 +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov edx [esp+14h+arg_8] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call sub_43EDB0  +
mov edx [ebx+8] +
mov [ebx] eax +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
sub eax edx +
mov [esp+14h+var_C] eax +
call memcpy  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+arg_0] +
mov ebp [eax] +
mov eax [esp+34h+arg_4] +
test ebp ebp +
mov ebx [eax] +
jz loc_43EF30  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
sub esi eax +
cmp ecx esi +
jbe loc_43EF09  +
mov [esp+34h+var_30] edx +
sub edi esi +
mov [esp+34h+var_2C] esi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call memcpy  +
mov edx [esp+34h+var_18] +
mov eax [esp+34h+var_1C] +
add [ebx+8] esi +
add edx esi +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call sub_43EE50  +
mov edx [esp+34h+var_18] +
mov ebx eax +
mov eax [eax+8] +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call memcpy  +
mov eax [esp+34h+arg_0] +
add [ebx+8] edi +
mov [eax] ebp +
mov eax [esp+34h+arg_4] +
mov [eax] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_34] eax +
call sub_43EDB0  +
mov edx [esp+34h+var_18] +
mov ebp eax +
mov eax [eax+8] +
mov ebx ebp +
jmp loc_43EF09  +
***
jmp sub_43EF60  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
mov ebx [edi] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_43EDB0  +
mov edx [ebx+8] +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] ecx +
sub eax edx +
mov [esp+10h+var_8] eax +
call memcpy  +
mov [esi] ebx +
mov [edi] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_43EFC0  +
***
mov eax [esp+18h+arg_0] +
test eax eax +
jnz loc_43EFD2  +
jmp loc_43EFE3  +
mov eax ebx +
mov ebx [eax] +
mov eax [eax+4] +
mov [esp+18h+var_18] eax +
call free  +
test ebx ebx +
jnz loc_43EFD0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
mov ebx [eax] +
lea eax [ebx-1] +
mov [esp+28h+var_1C] eax +
jmp loc_43F079  +
cmp al 2Dh +
jnz loc_43F118  +
movzx eax byte ptr [ebx-1] +
and eax 0FFFFFFDFh +
cmp al 45h +
jz loc_43F070  +
cmp al 50h +
jnz loc_43F09C  +
cmp byte ptr [edi+24Fh] 0 +
jz loc_43F09C  +
mov [esi] edx +
add ebx 1 +
mov byte ptr [esi+4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_4D0620[edx+edx] 204h +
jnz loc_43F070  +
cmp al 2Eh +
jz loc_43F070  +
cmp al 27h +
jnz loc_43F050  +
cmp byte ptr [edi+276h] 0 +
jnz loc_43F070  +
mov edx [edi] +
mov eax [edx] +
cmp eax ebx +
jnb loc_43F0C2  +
cmp byte ptr [ebx-1] 27h +
jnz loc_43F0C2  +
cmp byte ptr [edi+276h] 0 +
jnz loc_43F0BB  +
jmp loc_43F0C2  +
cmp byte ptr [ebx-1] 27h +
jnz loc_43F0C2  +
sub ebx 1 +
cmp ebx eax +
jnz loc_43F0B5  +
mov [edx] ebx +
mov ecx esi +
xor edx edx +
mov eax edi +
call sub_43D4E0  +
test al al +
jz loc_43F0D9  +
mov eax [edi] +
mov ebx [eax] +
jmp loc_43F079  +
mov esi [esp+28h+var_1C] +
sub ebx esi +
mov [ebp+0] ebx +
add ebx 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edi +
call sub_43EFF0  +
mov ebx eax +
mov eax [ebp+0] +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] eax +
call memcpy  +
mov eax [ebp+0] +
mov byte ptr [ebx+eax] 0 +
mov [ebp+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Bh +
jz loc_43F058  +
jmp loc_43F09C  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
lea edx [ebx+1] +
mov [esp+28h+var_24] edx +
call sub_43EFF0  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [esp+28h+arg_4] +
mov byte ptr [edi+ebx] 0 +
mov [esi+8] ebx +
mov [esi+0Ch] edi +
mov [esi+4] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+8Ch+var_6C] eax +
movzx eax byte ptr [ecx] +
mov [esp+8Ch+var_54] ecx +
mov edi [esp+8Ch+var_54] +
mov [esp+8Ch+var_58] edx +
movzx ebp al +
cmp ebp 55h +
jz loc_43F1AE  +
cmp ebp 4Ch +
jnz loc_43F22C  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 52h +
jz loc_43F4B8  +
cmp ebp 22h +
jz loc_43F2D4  +
cmp ebp 27h +
jz loc_43F3A4  +
mov edi 44h +
mov ebp 3Eh +
movzx ecx byte ptr [esi] +
xor eax eax +
lea ebx [esi+1] +
movzx edx cl +
mov ecx [esp+8Ch+var_6C] +
cmp edx 5Ch +
jz loc_43F210  +
nop   +
cmp edx ebp +
jz loc_43F270  +
cmp edx 0Ah +
jz loc_43F260  +
test edx edx +
jnz loc_43F258  +
movzx edx byte ptr [esi+1] +
mov eax 1 +
mov esi ebx +
cmp edx 5Ch +
lea ebx [esi+1] +
jnz loc_43F1F0  +
cmp byte ptr [ecx+0Bh] 0 +
jnz loc_43F258  +
cmp byte ptr [esi+1] 0Ah +
mov edx 0Ah +
jz loc_43F206  +
lea ebx [esi+2] +
movzx edx byte ptr [esi+2] +
mov esi ebx +
jmp loc_43F208  +
cmp ebp 75h +
lea esi [edi+1] +
jnz loc_43F1B5  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 38h +
jnz loc_43F1B5  +
mov edi [esp+8Ch+var_54] +
lea esi [edi+3] +
movzx ebp byte ptr [edi+2] +
jmp loc_43F1B5  +
movzx edx byte ptr [esi+1] +
mov esi ebx +
jmp loc_43F208  +
cmp ebp 3Eh +
mov ebx esi +
mov edi 3Dh +
jz loc_43F433  +
test al al +
jz loc_43F282  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_43F49B  +
cmp edi 3Dh +
jz loc_43F372  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_43F310  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+28Bh] 0 +
jnz loc_43F446  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_54] +
mov edx [esp+8Ch+var_58] +
mov eax [esi] +
mov [eax] ebx +
sub ebx ecx +
mov eax esi +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] ebx +
call sub_43F130  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Ch +
mov edi 3Fh +
jz loc_43F1DA  +
cmp al 55h +
mov di 41h +
jz loc_43F1DA  +
cmp al 75h +
mov di 3Eh +
jnz loc_43F1DA  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+40h] +
jmp loc_43F1DA  +
add eax 234h +
mov edx ebx +
call sub_43D960  +
test al al +
jz loc_43F3E0  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_43F2A9  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43F2A9  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43C7A0  +
jmp loc_43F2A9  +
mov eax [esp+8Ch+var_6C] +
cmp dword ptr [eax+244h] 0Fh +
jz loc_43F28B  +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] offset aMissingTermina +
mov [esp+8Ch+var_88] 2 +
mov [esp+8Ch+var_8C] eax +
call sub_43C650  +
jmp loc_43F28B  +
cmp al 4Ch +
mov edi 39h +
jz loc_43F1DA  +
cmp al 55h +
mov di 3Bh +
jz loc_43F1DA  +
cmp al 75h +
mov di 38h +
jnz loc_43F1DA  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+3Ah] +
jmp loc_43F1DA  +
movzx eax byte ptr [ebx] +
test byte ptr [eax+eax+4D0621h] 2 +
jz loc_43F2A9  +
mov [esp+8Ch+var_8C] edi +
call sub_4437A0  +
mov [esp+8Ch+var_8C] eax +
call sub_443720  +
movzx edx byte ptr [ebx+1] +
test ds:word_4D0620[edx+edx] 204h +
mov edi eax +
lea eax [ebx+1] +
mov ebx eax +
jz loc_43F2A9  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:word_4D0620[eax+eax] 204h +
jnz loc_43F41C  +
jmp loc_43F2A9  +
mov eax [esp+8Ch+var_58] +
mov byte ptr [eax+4] 3 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 234h +
mov edx ebx +
call sub_43D960  +
test al al +
jz loc_43F2A9  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43F2A9  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aC11RequiresASp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 17h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43C7A0  +
jmp loc_43F2A9  +
mov [esp+8Ch+var_84] offset aNullCharacterS +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call sub_43C650  +
jmp loc_43F282  +
mov edi [esp+8Ch+var_6C] +
cmp al 4Ch +
mov [esp+8Ch+var_39+1] 0 +
mov [esp+8Ch+var_34] 0 +
mov [esp+8Ch+var_4C] 3Fh +
mov edx [edi] +
mov ecx [edx+1Ch] +
mov edx [edx+18h] +
lea ebx [edx+ecx*8] +
jz loc_43F4FF  +
cmp al 55h +
mov [esp+8Ch+var_4C] 41h +
jz loc_43F4FF  +
cmp al 75h +
mov [esp+8Ch+var_4C] 3Eh +
jz loc_43F9E4  +
mov ebp [esp+8Ch+var_54] +
lea eax [esi+1] +
mov [esp+8Ch+var_40] eax +
mov [esp+8Ch+var_64] eax +
xor eax eax +
mov [esp+8Ch+var_68] 0 +
mov edx ebp +
mov ebp eax +
mov [esp+8Ch+var_60] 0 +
mov [esp+8Ch+var_50] 0 +
mov [esp+8Ch+var_5C] 0 +
mov edi [ebx] +
cmp edi [esp+8Ch+var_64] +
jb loc_43F783  +
jz loc_43F577  +
jmp loc_43F592  +
cmp ds:byte_4D92A0[eax] 0 +
jz loc_43FC1F  +
mov byte ptr [esp+8Ch+var_39] al +
mov eax [esp+8Ch+var_6C] +
mov esi ebx +
mov dword ptr [ebx+4] 0 +
cmp byte ptr [eax+24Dh] 0 +
jnz loc_43F680  +
cmp edi [esi+8] +
lea ebx [esi+8] +
jnz loc_43F592  +
mov eax [ebx+4] +
cmp eax 20h +
jz loc_43F5E7  +
cmp eax 5Ch +
jz loc_43F5E7  +
test eax eax +
jnz loc_43F544  +
mov esi ebx +
cmp edi [esi+8] +
lea ebx [esi+8] +
jz loc_43F577  +
mov eax [esp+8Ch+var_64] +
cmp [esp+8Ch+var_68] 10h +
lea edi [eax+1] +
movzx eax byte ptr [eax] +
movzx ecx al +
jbe loc_43FE3A  +
mov esi [esp+8Ch+var_60] +
test esi esi +
jnz loc_43F7E1  +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_68] eax +
jbe loc_43F7FA  +
mov esi edx +
mov ecx eax +
movzx eax byte ptr [esp+ecx+8Ch+var_1E] +
lea edx [eax-21h] +
cmp dl 5Dh +
mov [esp+ecx+8Ch+var_2F] al +
ja loc_43F7B1  +
movzx edx dl +
jmp ds:off_4CDF30[edx*4]  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
lea ebp [esi+ebp+1] +
mov esi ebx +
call sub_43EEA0  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset asc_4CDDA9 +
mov [esp+8Ch+var_8C] ecx +
mov ecx 1 +
call sub_43EEA0  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FC00  +
cmp dword ptr [esi+4] 20h +
jz loc_43F72A  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDDAD +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 1 +
call sub_43EEA0  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FB17  +
mov edx edi +
jmp loc_43F56F  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
add ebp esi +
call sub_43EEA0  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset a?? +
mov [esp+8Ch+var_8C] ecx +
mov ecx 2 +
call sub_43EEA0  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FCB1  +
cmp byte ptr [esp+8Ch+var_39] 2Fh +
jnz loc_43F803  +
cmp edi [ebx+8] +
jnz loc_43F803  +
mov eax [ebx+0Ch] +
cmp eax 20h +
jnz loc_43FCF4  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDDB2 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 3 +
call sub_43EEA0  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FCD5  +
lea esi [ebx+8] +
cmp dword ptr [esi+4] 20h +
jnz loc_43F642  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDDAB +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
call sub_43EEA0  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FE4E  +
lea eax [esp+8Ch+var_34] +
mov edx offset asc_4CDDAD +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_43EEA0  +
mov edx edi +
jmp loc_43F56F  +
add ebx 8 +
jmp loc_43F534  +
cmp ecx 0Fh +
ja loc_43F7B1  +
add ecx 1 +
cmp ecx [esp+8Ch+var_68] +
jb loc_43F5C8  +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
mov [esp+8Ch+var_64] edi +
jmp loc_43F534  +
cmp al 28h +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
jnz loc_43FA71  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
mov [esp+eax+8Ch+var_2F] 22h +
jmp loc_43F534  +
cmp [esp+8Ch+var_60] 2 +
jz loc_43F843  +
cmp ecx 29h +
jz loc_43F8D1  +
cmp ecx 0Ah +
jz loc_43F8F2  +
mov [esp+8Ch+var_64] edi +
jmp loc_43F534  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
add edi 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_39] +
mov edx esi +
add ebp 3 +
call sub_43EEA0  +
movzx ecx byte ptr [esp+8Ch+var_39] +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FC66  +
mov edx edi +
jmp loc_43F5AA  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jbe loc_43F89C  +
cmp [esp+8Ch+var_5C] eax +
jb loc_43F89C  +
mov esi eax +
movzx eax [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+esi+8Ch+var_1E] al +
jnz loc_43F8AA  +
mov [esp+8Ch+var_48] edx +
mov esi [esp+8Ch+var_68] +
mov [esp+8Ch+var_44] ecx +
mov edx [esp+8Ch+var_5C] +
mov eax [esp+8Ch+var_50] +
jmp loc_43F889  +
cmp eax edx +
ja loc_43F890  +
movzx ecx [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+eax+8Ch+var_1E] cl +
jnz loc_43F994  +
add eax 1 +
cmp esi eax +
ja loc_43F876  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_50] eax +
ja loc_43FB39  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jz loc_43F7FA  +
cmp ecx 29h +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
jnz loc_43F7F1  +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 0 +
mov [esp+8Ch+var_60] 2 +
mov [esp+8Ch+var_50] 0 +
jmp loc_43F534  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+8] 0 +
jnz loc_43FDA3  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+11h] 0 +
jz loc_43F918  +
mov eax [eax] +
mov ebx [eax+10h] +
cmp [eax+8] ebx +
jnb loc_43FDA3  +
mov ebx [esp+8Ch+var_6C] +
lea eax [esp+8Ch+var_34] +
sub edi edx +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
add ebp edi +
mov eax ebx +
call sub_43EEA0  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jb loc_43F9A5  +
mov edi [esp+8Ch+var_64] +
mov byte ptr [eax+38h] 1 +
mov [eax] edi +
mov edi [esp+8Ch+var_6C] +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] edi +
call sub_43DE20  +
cmp byte ptr [edi+8] 0 +
jnz loc_43F9FF  +
mov eax [esp+8Ch+var_6C] +
call sub_43DD90  +
test al al +
jz loc_43F9FF  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov edx [eax] +
mov ecx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+8Ch+var_64] edx +
lea ebx [eax+ecx*8] +
jmp loc_43F534  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
jmp loc_43F8AA  +
mov edi [esp+8Ch+var_6C] +
mov edx [edi+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+8Ch+var_84] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+8Ch+var_8C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+8Ch+var_88] eax +
call sub_42BA50  +
mov eax [edi] +
jmp loc_43F941  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea eax [eax+eax+40h] +
mov [esp+8Ch+var_4C] eax +
jmp loc_43F4FF  +
mov eax [esp+8Ch+var_6C] +
mov edx 40h +
mov edi [esp+8Ch+var_58] +
mov eax [eax+1Ch] +
mov ebx [edi] +
mov byte ptr [edi+4] 16h +
mov eax [eax+2Ch] +
mov [edi+6] dx +
mov [edi] eax +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov edx eax +
jnz loc_43FA32  +
jmp loc_43FA44  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_43FA30  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] ebx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_43C750  +
jmp loc_43F2C9  +
mov ebx [esp+8Ch+var_6C] +
mov edx [ebx] +
sub edi [edx+4] +
mov edx edi +
add edx 1 +
cmp ecx 10h +
jz loc_43FC3B  +
cmp al 0Ah +
jz loc_43FC82  +
mov edi [esp+8Ch+var_58] +
mov ecx [edi] +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aInvalidCharact +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_43C750  +
mov ebx [esp+8Ch+var_6C] +
mov edi [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_40] +
mov edx [ebx] +
sub eax edi +
sub eax 1 +
lea ecx [edi+eax] +
mov [edx] ecx +
mov edx [esp+8Ch+var_58] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
mov [esp+8Ch+var_88] 3Dh +
call sub_43F130  +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_43F2C9  +
mov edx eax +
jmp loc_43FB00  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_43FAFE  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
jmp loc_43F2C9  +
mov edx offset asc_4CDDAD +
cmp edi edx +
jz loc_43F56F  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 0Ah +
jmp loc_43F56F  +
mov ebx ebp +
mov ebp edx +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_43FD41  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov [eax] edi +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_43FD20  +
sub edi ebp +
mov esi ebx +
add esi edi +
lea eax [esi+1] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43EFF0  +
mov ecx [esp+8Ch+var_58] +
mov [ecx+8] esi +
mov ebx eax +
movzx eax byte ptr [esp+8Ch+var_4C] +
mov [ecx+0Ch] ebx +
mov [ecx+4] al +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jz loc_43FD19  +
mov edx [eax+4] +
mov eax [eax+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] edx +
sub eax edx +
mov [esp+8Ch+var_84] eax +
call memcpy  +
mov eax [esp+8Ch+var_34] +
add ebx [eax+8] +
sub ebx [eax+4] +
mov eax [eax] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jnz loc_43FB9F  +
mov eax [esp+8Ch+var_39+1] +
mov edx eax +
jmp loc_43FBD5  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_43FBD3  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esi+2Ch] +
mov [edx] ecx +
mov [esi+2Ch] eax +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] ebx +
call memcpy  +
mov byte ptr [ebx+edi] 0 +
jmp loc_43F2C9  +
cmp edi offset asc_4CDDA9 +
jz loc_43F638  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 5Ch +
jmp loc_43F638  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6C3h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_424080  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aRawStringDelim +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] ebx +
call sub_43C750  +
jmp loc_43FABE  +
cmp edi esi +
jz loc_43F83C  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] cl +
jmp loc_43F5AA  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidNewLine +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43C750  +
jmp loc_43FABE  +
cmp edi offset a?? +
jz loc_43F6CD  +
mov eax [esp+8Ch+var_68] +
mov edx 3F3Fh +
add [esp+8Ch+var_68] 2 +
mov [esp+eax+8Ch+var_1E] dx +
jmp loc_43F6CD  +
cmp edi offset asc_4CDDB2 +
jz loc_43F71D  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 2Fh +
jmp loc_43F71D  +
cmp eax 5Ch +
jz loc_43F6ED  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6B4h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_424080  +
xor eax eax +
jmp loc_43FBCF  +
mov eax [esp+8Ch+var_4C] +
sub edi ebp +
mov ecx ebp +
mov edx [esp+8Ch+var_58] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
call sub_43F130  +
jmp loc_43F2C9  +
add eax 234h +
mov edx edi +
call sub_43D960  +
test al al +
jz loc_43FDE6  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_43FB4E  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43FB4E  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43C7A0  +
jmp loc_43FB4E  +
mov eax [esp+8Ch+var_58] +
mov ebx ebp +
mov ebp edx +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43C750  +
mov edi [esp+8Ch+var_64] +
mov [esp+8Ch+var_4C] 3Dh +
jmp loc_43FB3D  +
movzx eax byte ptr [edi] +
test byte ptr [eax+eax+4D0621h] 2 +
jz loc_43FB4E  +
mov eax [esp+8Ch+var_4C] +
mov [esp+8Ch+var_8C] eax +
call sub_443720  +
movzx edx byte ptr [edi+1] +
test ds:word_4D0620[edx+edx] 204h +
mov [esp+8Ch+var_4C] eax +
lea eax [edi+1] +
jnz loc_43FE22  +
jmp loc_43FE6C  +
mov eax edi +
lea edi [eax+1] +
movzx eax byte ptr [eax+1] +
test ds:word_4D0620[eax+eax] 204h +
jnz loc_43FE20  +
jmp loc_43FB4E  +
mov esi [esp+8Ch+var_68] +
mov byte ptr [esp+esi+8Ch+var_1E] al +
lea eax [esi+1] +
mov [esp+8Ch+var_68] eax +
jmp loc_43F5AA  +
cmp edi offset asc_4CDDAB +
jz loc_43FE73  +
mov eax [esp+8Ch+var_68] +
add ebp 1 +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 20h +
jmp loc_43F642  +
mov edi eax +
jmp loc_43FB4E  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDDAD +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_43EEA0  +
jmp loc_43FB24  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+5Ch+arg_0] +
mov byte ptr [esp+5Ch+var_40] 0 +
mov edi [ebp+0F0h] +
lea eax [edi+10h] +
mov [ebp+0F0h] eax +
lea eax [ebp+0F4h] +
mov [esp+5Ch+var_3C] eax +
mov esi [ebp+0] +
xor ebx ebx +
mov [edi+6] bx +
cmp byte ptr [esi+38h] 0 +
jz loc_43FF45  +
cmp byte ptr [ebp+18h] 0 +
jnz loc_440840  +
cmp byte ptr [ebp+8] 0 +
jnz loc_43FFC0  +
mov eax ebp +
call sub_43DD90  +
test al al +
jz loc_43FFC0  +
mov eax [ebp+0] +
mov ebx 0 +
movzx ecx byte ptr [esp+5Ch+var_40] +
mov edx [ebp+10Ch] +
cmp eax esi +
cmovnz ecx ebx +
test edx edx +
mov byte ptr [esp+5Ch+var_40] cl +
jnz loc_43FF34  +
mov edi [ebp+0FCh] +
mov ecx [esp+5Ch+var_3C] +
lea edx [edi+10h] +
mov [ebp+104h] ecx +
mov [ebp+0F0h] edx +
mov esi 40h +
mov [edi+6] si +
mov esi eax +
cmp byte ptr [ebp+11h] 2 +
jz loc_43FF92  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_43FF65  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_440737  +
lea ecx [eax+1] +
mov [esi] ecx +
movzx ebx byte ptr [eax] +
mov eax [ebp+2FCh] +
movzx edx bl +
test eax eax +
mov [esp+5Ch+var_38] edx +
jz loc_43FFA0  +
mov eax [eax] +
mov [edi] eax +
cmp bl 7Eh +
ja loc_440730  +
jmp ds:off_4CE224[edx*4]  +
mov ebx 41h +
mov [edi+6] bx +
jmp loc_43FF45  +
mov eax [ebp+1Ch] +
sub ecx [esi+4] +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call sub_42BCF0  +
mov edx [esp+5Ch+var_34] +
mov [edi] eax +
jmp loc_43FF82  +
mov byte ptr [edi+4] 16h +
cmp byte ptr [ebp+8] 0 +
jnz loc_43FFE0  +
mov eax [ebp+1Ch] +
mov ecx 40h +
mov eax [eax+2Ch] +
mov [edi+6] cx +
mov [edi] eax +
nop   +
lea esi [esi+0] +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_18] 0 +
lea edx [edi+8] +
mov eax ebp +
mov [esp+5Ch+var_14] 0 +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_10] 0 +
mov byte ptr [edi+4] 37h +
call sub_43F030  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov eax ebp +
call sub_43E670  +
mov ebx [edi] +
cmp ebx 1 +
jbe loc_43FFE0  +
cmp byte ptr [edi+4] 16h +
jz loc_43FFE0  +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_440049  +
mov edx [ebp+4] +
test edx edx +
jz loc_440782  +
mov edx [ebp+1Ch] +
sub eax [esi+4] +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_42BCF0  +
mov ecx [edi] +
mov edx [ebp+1Ch] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_50] eax +
call sub_42BF40  +
mov [edi] eax +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi] +
lea eax [edi+0Ch] +
sub edx 1 +
mov byte ptr [edi+4] 35h +
xor ecx ecx +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_43D5C0  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_43E670  +
mov eax [edi+8] +
test byte ptr [eax+14h] 40h +
jz loc_4400E4  +
or word ptr [edi+6] 10h +
movzx eax byte ptr [eax+0Ch] +
shr al 1 +
mov [edi+4] al +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_440024  +
or word ptr [edi+6] 20h +
jmp loc_440024  +
mov ebx [ebp+0] +
xor ecx ecx +
or word ptr [edi+6] 1 +
mov [esp+5Ch+var_34] edi +
mov edi [esp+5Ch+var_38] +
mov eax [ebx] +
jmp loc_440188  +
cmp byte ptr [ebp+8] 0 +
jz loc_440170  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_440170  +
mov edx [ebp+1Ch] +
cmp edi 0Ch +
mov edi offset aFormFeed +
mov [esp+5Ch+var_38] ecx +
mov ecx offset aVerticalTab +
cmovnz edi ecx +
mov edx [edx+2Ch] +
mov [esp+5Ch+var_48] edi +
mov [esp+5Ch+var_4C] offset aSInPreprocessi +
sub eax [ebx+4] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_43C750  +
mov eax [ebx] +
mov ecx [esp+5Ch+var_38] +
lea esi [esi+0] +
lea edx [eax+1] +
mov [ebx] edx +
movzx edi byte ptr [eax] +
test byte ptr [edi+edi+4D0621h] 8 +
jz loc_440756  +
mov eax edx +
cmp edi 9 +
jz loc_440170  +
cmp edi 20h +
jz loc_440170  +
test edi edi +
jnz loc_440116  +
mov ecx 1 +
jmp loc_440170  +
mov byte ptr [edi+4] 34h +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 5 +
movzx eax byte ptr [edx] +
cmp al 3Eh +
jz loc_44092B  +
cmp al 2Dh +
jz loc_440A9F  +
cmp al 3Dh +
jnz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ch +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 2 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_44091D  +
cmp al 3Eh +
jnz loc_440024  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Ch +
cmp byte ptr [edx+1] 3Dh +
jnz loc_440024  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 23h +
jmp loc_440024  +
mov byte ptr [edi+4] 0Eh +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 0 +
cmp byte ptr [eax] 3Dh +
jnz loc_440024  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 17h +
jmp loc_440024  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_44085B  +
mov edx [esi] +
mov byte ptr [edi+4] 3 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_440A83  +
cmp al 3Ch +
jz loc_440AC5  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440024  +
cmp al 3Ah +
jz loc_440E62  +
cmp al 25h +
jnz loc_440024  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 29h +
jmp loc_440024  +
mov byte ptr [edi+4] 2Bh +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 12h +
movzx eax byte ptr [edx] +
cmp al 3Ah +
jz loc_4408F4  +
cmp al 3Eh +
jnz loc_440024  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440024  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 28h +
jmp loc_440024  +
mov byte ptr [edi+4] 29h +
jmp loc_440024  +
mov byte ptr [edi+4] 14h +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 9 +
movzx eax byte ptr [edx] +
cmp al 26h +
jz loc_440967  +
cmp al 3Dh +
jnz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 20h +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 8 +
movzx edx byte ptr [eax] +
cmp dl 3Dh +
jz loc_440959  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440024  +
cmp dl 3Ah +
jz loc_440DEF  +
cmp dl 3Eh +
jnz loc_440024  +
add eax 1 +
mov [esi] eax +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 2Ah +
jmp loc_440024  +
mov byte ptr [edi+4] 2Ah +
jmp loc_440024  +
mov eax [esi+10h] +
cmp [esi] eax +
jb loc_4408AD  +
mov byte ptr [esi+38h] 1 +
jmp loc_43FEC9  +
mov byte ptr [edi+4] 13h +
jmp loc_440024  +
cmp edx 4Ch +
mov ebx edx +
jz loc_44142C  +
cmp byte ptr [ebp+252h] 0 +
jnz loc_4403DA  +
cmp edx 52h +
jz loc_440088  +
cmp byte ptr [ebp+250h] 0 +
jz loc_440088  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jz loc_440A91  +
cmp al 22h +
jz loc_440435  +
cmp al 52h +
jz loc_440B74  +
cmp al 38h +
jnz loc_44008A  +
cmp ebx 75h +
nop   +
jnz loc_44008A  +
movzx eax byte ptr [edx+1] +
cmp al 22h +
jz loc_440435  +
cmp al 27h +
jz loc_441228  +
cmp al 52h +
jnz loc_44008A  +
cmp byte ptr [edx+2] 22h +
jnz loc_44008A  +
cmp byte ptr [ebp+252h] 0 +
jz loc_44008A  +
lea ecx [edx-1] +
mov eax ebp +
mov edx edi +
call sub_43F180  +
jmp loc_440024  +
mov eax [esi] +
mov [esp+5Ch+var_38] eax +
movzx eax byte ptr [eax] +
cmp eax 2Ah +
mov [esp+5Ch+var_34] eax +
jz loc_440AE6  +
cmp [esp+5Ch+var_34] 2Fh +
jnz loc_4411D8  +
cmp byte ptr [ebp+270h] 0 +
jnz loc_440F30  +
mov edx [ebp+0] +
test edx edx +
jz loc_440481  +
cmp byte ptr [edx+3Dh] 0 +
jnz loc_4404C8  +
mov eax [ebp+244h] +
test eax eax +
jnz loc_4404A0  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_4404A0  +
test byte ptr [esi+3Ch] 1 +
jz loc_440E96  +
nop   +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_4404BC  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_4404BC  +
test byte ptr [esi+3Ch] 1 +
jz loc_440E26  +
sub eax 3 +
cmp eax 1 +
jbe loc_440B13  +
mov ecx [edx] +
mov eax [ebp+1Ch] +
cmp byte ptr [ecx] 0Ah +
mov ebx [eax+2Ch] +
lea eax [ecx+1] +
jz loc_4404E3  +
mov [edx] eax +
add eax 1 +
cmp byte ptr [eax-1] 0Ah +
jnz loc_4404D8  +
mov [esp+5Ch+var_58] 1 +
mov [esp+5Ch+var_5C] ebp +
call sub_43DE20  +
mov eax [ebp+1Ch] +
cmp ebx [eax+2Ch] +
jz loc_44051C  +
cmp byte ptr [ebp+255h] 0 +
jz loc_44051C  +
mov [esp+5Ch+var_54] offset aMultiLineComme +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C690  +
mov eax [ebp+0] +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_30] eax +
movzx eax byte ptr [ebp+260h] +
add ebx 1 +
cmp al 2 +
jz loc_440983  +
ja loc_44079B  +
movzx ebx byte ptr [esp+5Ch+var_40] +
cmp al 1 +
mov eax 1 +
cmovz ebx eax +
mov byte ptr [esp+5Ch+var_40] bl +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_441086  +
or word ptr [edi+6] 1 +
jmp loc_43FF45  +
mov edx [esi] +
mov byte ptr [edi+4] 30h +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_4D0620[ecx+ecx] 4 +
jnz loc_43FFF0  +
cmp al 2Eh +
jz loc_440AAD  +
cmp al 2Ah +
jnz loc_440024  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 33h +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax] 23h +
jz loc_4408E6  +
mov dword ptr [edi+8] 0 +
jmp loc_440024  +
mov byte ptr [edi+4] 28h +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 6 +
cmp byte ptr [eax] 3Dh +
jnz loc_440024  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Dh +
jmp loc_440024  +
mov byte ptr [edi+4] 15h +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 4 +
movzx eax byte ptr [edx] +
cmp al 2Bh +
jz loc_440975  +
cmp al 3Dh +
jnz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Bh +
jmp loc_440024  +
mov eax [esi] +
lea ecx [esp+5Ch+var_18] +
mov edx 1 +
lea ebx [eax-1] +
mov eax ebp +
mov [esi] ebx +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_43D4E0  +
test al al +
jnz loc_440878  +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
sub ecx 1 +
mov edx edi +
mov [esp+5Ch+var_58] 3Dh +
mov eax ebp +
mov [esp+5Ch+var_5C] 1 +
call sub_43F130  +
jmp loc_440024  +
mov byte ptr [edi+4] 11h +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 1 +
cmp byte ptr [eax] 3Dh +
jnz loc_440024  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 18h +
jmp loc_440024  +
mov edx [esi] +
mov byte ptr [edi+4] 0Ah +
movzx eax byte ptr [edx] +
cmp al 7Ch +
jz loc_44090F  +
cmp al 3Dh +
jnz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 21h +
jmp loc_440024  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_43F180  +
jmp loc_440024  +
mov eax [esi] +
mov byte ptr [edi+4] 0Bh +
cmp byte ptr [eax] 3Dh +
jnz loc_440024  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 22h +
jmp loc_440024  +
mov byte ptr [edi+4] 27h +
jmp loc_440024  +
mov ecx [esi] +
jmp loc_440672  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43DE20  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov eax [esi] +
jmp loc_43FF65  +
test cl cl +
mov edi [esp+5Ch+var_34] +
jz loc_440778  +
mov [esp+5Ch+var_54] offset aNullCharacte_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
mov edx [ebx] +
sub edx 1 +
mov [ebx] edx +
jmp loc_43FF4D  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43DE20  +
mov ebx [edi] +
mov eax [esi] +
jmp loc_440049  +
cmp al 4 +
ja loc_440552  +
mov ecx [esp+5Ch+var_38] +
movzx edx byte ptr [ecx+1] +
cmp dl 40h +
setz cl  +
jz loc_4407BC  +
cmp dl 2Dh +
jnz loc_440B8C  +
mov [esp+5Ch+var_2C] ecx +
mov ecx [esp+5Ch+var_30] +
mov eax ebx +
not eax  +
add eax [ecx] +
cmp eax 0Ah +
jbe loc_440552  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 0Bh +
mov [esp+5Ch+var_58] offset aFallthrough +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov ecx [esp+5Ch+var_2C] +
mov al 0Ch +
test cl cl +
jnz loc_440826  +
add ebx eax +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax] 2Ah +
jz loc_4411FE  +
cmp byte ptr [ebx] 0Ah +
jnz loc_440552  +
mov byte ptr [esp+5Ch+var_40] 1 +
jmp loc_440552  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+0Dh] 40h +
jnz loc_440552  +
mov eax 0Dh +
jmp loc_440804  +
mov byte ptr [edi+4] 52h +
cmp byte ptr [ebp+19h] 0 +
mov byte ptr [ebp+18h] 0 +
jnz loc_43FFE0  +
sub byte ptr [ebp+10h] 1 +
jmp loc_43FFE0  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_43F180  +
cmp byte ptr [edi+4] 3 +
jnz loc_440024  +
jmp loc_44025A  +
lea eax [edi+0Ch] +
mov edx ebx +
mov byte ptr [edi+4] 35h +
mov ecx 1 +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
call sub_43D5C0  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_43E670  +
jmp loc_440024  +
mov edx [ebp+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+5Ch+var_54] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+5Ch+var_5C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+5Ch+var_58] eax +
call sub_42BA50  +
jmp loc_44039B  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
jmp loc_4405BF  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 31h +
jmp loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 10h +
jmp loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 19h +
jmp loc_440024  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 2Fh +
cmp byte ptr [edx+1] 2Ah +
jnz loc_440024  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440024  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 32h +
jmp loc_440024  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Fh +
jmp loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 0Fh +
jmp loc_440024  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Dh +
jmp loc_440024  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov edx eax +
sub edx ebx +
cmp edx 7 +
jbe loc_440552  +
movzx edx byte ptr [ebx] +
and edx 0FFFFFFDFh +
cmp dl 46h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 41h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_440A62  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_440A62  +
movzx edx byte ptr [ebx+4] +
mov ecx edx +
and ecx 0FFFFFFDFh +
cmp cl 53h +
jz loc_440A77  +
add ebx 4 +
jmp loc_4409F6  +
add ebx 1 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jz loc_4409F0  +
cmp dl 9 +
jz loc_4409F0  +
cmp dl 2Dh +
jz loc_4409F0  +
and edx 0FFFFFFDFh +
cmp dl 54h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 52h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jz loc_44081C  +
cmp dl 4Fh +
jnz loc_440A62  +
movzx edx byte ptr [ebx+4] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+5] +
and edx 0FFFFFFDFh +
cmp dl 47h +
jnz loc_440A62  +
movzx edx byte ptr [ebx+6] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jz loc_44081C  +
add ebx 1 +
mov edx eax +
sub edx ebx +
cmp edx 7 +
ja loc_440996  +
jmp loc_440552  +
movzx edx byte ptr [ebx+5] +
add ebx 5 +
jmp loc_4409F6  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ah +
jmp loc_440024  +
cmp ebx 52h +
jnz loc_440435  +
jmp loc_44008A  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Eh +
jmp loc_440024  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_440024  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 2Ch +
jmp loc_440024  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Dh +
cmp byte ptr [edx+1] 3Dh +
jnz loc_440024  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 24h +
jmp loc_440024  +
mov [esp+5Ch+var_5C] ebp +
call sub_43E0A0  +
test al al +
jz loc_44051C  +
mov [esp+5Ch+var_54] offset aUnterminatedCo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
jmp loc_44051C  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+1] 2Ah +
jz loc_440F30  +
test dword ptr [ebp+8] 0FF00FFh +
jnz loc_440F30  +
test byte ptr [esi+3Ch] 1 +
jnz loc_4404C8  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4404C8  +
cmp ebx 52h +
jz loc_44008A  +
cmp byte ptr [edx+1] 22h +
jnz loc_44008A  +
jmp loc_440428  +
cmp dl 6Ch +
nop   +
jz loc_440ED2  +
cmp al 4 +
jz loc_440FD9  +
nop   +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_440DE4  +
cmp dl 9 +
jz loc_440DE4  +
cmp dl 2Eh +
jz loc_440DE4  +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 45h +
mov [esp+5Ch+var_2C] ebx +
jnz loc_440F39  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 0Ch +
jbe loc_440552  +
cmp dl 45h +
lea ecx [ebx+1] +
jz loc_441284  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_4CE1E3 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov edx [esp+5Ch+var_28] +
mov byte ptr [esp+5Ch+var_2C] 0 +
cmp byte ptr [ebx+4] 2Ch +
lea eax [ebx+5] +
lea ecx [ebx+4] +
cmovnz eax ecx +
cmp byte ptr [eax] 20h +
jnz loc_440552  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
lea ebx [eax+1] +
jz loc_440C42  +
cmp byte ptr [eax+1] 66h +
jz loc_440552  +
cmp dl 65h +
jz loc_44141D  +
movzx edx byte ptr [eax+1] +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 46h +
jnz loc_440552  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov [esp+5Ch+var_20] eax +
sub eax ebx +
cmp eax 7 +
jbe loc_440552  +
cmp dl 46h +
jz loc_44138E  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov [esp+5Ch+var_28] edx +
jnz loc_440552  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_4CE20A +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_440552  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 73h +
cmp [esp+5Ch+var_24] eax +
jz loc_4413E5  +
cmp byte ptr [esp+5Ch+var_28] 2Dh +
jz loc_440CE0  +
cmp byte ptr [esp+5Ch+var_28] 20h +
jnz loc_4412D2  +
lea ecx [ebx+5] +
cmp dl 66h +
jz loc_440CF1  +
cmp byte ptr [ecx] 54h +
jz loc_4413F7  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
jnz loc_440552  +
cmp byte ptr [ecx] 74h +
jnz loc_440552  +
mov ebx [esp+5Ch+var_20] +
mov eax offset aHru_0 +
sub ebx ecx +
cmp ebx 3 +
jbe loc_440552  +
lea edx [ecx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_24] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov ecx [esp+5Ch+var_24] +
test eax eax +
jz loc_44148D  +
cmp ebx 6 +
jbe loc_440552  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov edx offset aHrough +
mov eax offset aHrough_0 +
mov [esp+5Ch+var_54] 6 +
cmovz eax edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov ecx [esp+5Ch+var_24] +
lea ebx [ecx+7] +
movzx edx byte ptr [ebx] +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_441220  +
cmp dl 9 +
jz loc_441220  +
cmp dl 2Eh +
jz loc_441220  +
cmp dl 2Dh +
mov eax ebx +
jnz loc_440806  +
mov ecx [esp+5Ch+var_38] +
add ebx 1 +
lea edx [eax+2] +
cmp byte ptr [ecx] 2Ah +
jz loc_441461  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_440813  +
test al al +
jz loc_440813  +
cmp al 0Dh +
jz loc_440813  +
add ebx 1 +
jmp loc_440DC4  +
add ebx 1 +
movzx edx byte ptr [ebx] +
jmp loc_440BA0  +
lea edx [eax+1] +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax+1] 25h +
jnz loc_440024  +
cmp byte ptr [eax+2] 3Ah +
jnz loc_440024  +
add eax 3 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
mov dword ptr [edi+8] 0 +
jmp loc_440024  +
mov [esp+5Ch+var_54] offset aCStyleCommen_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4404C8  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440E83  +
mov eax [ebp+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_440E83  +
cmp byte ptr [edx+1] 3Ah +
jz loc_4412BE  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 27h +
jmp loc_440024  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43C650  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4404C8  +
mov eax [esp+5Ch+var_30] +
not ebx  +
add ebx [eax] +
cmp ebx 0Fh +
jbe loc_440552  +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 10h +
mov [esp+5Ch+var_58] offset aIntFallthrough +
mov eax ebx +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov eax ebx +
movzx eax byte ptr [eax+12h] +
lea ebx [ebx+12h] +
cmp al 9 +
jnz loc_440F23  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_440F19  +
cmp al 20h +
jz loc_440F19  +
jmp loc_440806  +
mov byte ptr [edi+4] 7 +
jmp loc_440024  +
cmp al 49h +
nop   +
lea esi [esi+0] +
jnz loc_441216  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 13h +
jbe loc_440552  +
cmp dl 49h +
lea ecx [ebx+1] +
jz loc_44131C  +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
mov edx [esp+5Ch+var_2C] +
test eax eax +
jnz loc_440552  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_4414A5  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aLy +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov edx [esp+5Ch+var_2C] +
add ebx 0Eh +
cmp dl 69h +
mov byte ptr [esp+5Ch+var_2C] 0 +
jz loc_441495  +
movzx edx byte ptr [ebx] +
jmp loc_440C4F  +
cmp dl 20h +
jnz loc_4413D7  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_440FE2  +
cmp al 20h +
jz loc_440FE2  +
mov eax [esp+5Ch+var_30] +
mov ecx [eax] +
mov eax ecx +
sub eax ebx +
cmp eax 7 +
mov [esp+5Ch+var_2C] ecx +
jbe loc_440552  +
mov [esp+5Ch+var_54] 7 +
mov [esp+5Ch+var_58] offset aFallthr +
mov [esp+5Ch+var_5C] ebx +
call memcmp  +
test eax eax +
jnz loc_440552  +
cmp byte ptr [ebx+7] 55h +
mov ecx [esp+5Ch+var_2C] +
jz loc_441386  +
lea edx [ebx+7] +
mov eax ecx +
sub eax edx +
cmp eax 3 +
jbe loc_440552  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Bh +
mov [esp+5Ch+var_58] offset aOugh +
mov [esp+5Ch+var_5C] edx +
call memcmp  +
test eax eax +
jnz loc_440552  +
movzx eax byte ptr [ebx] +
cmp al 20h +
jnz loc_44143E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_441073  +
cmp al 20h +
jz loc_441073  +
jmp loc_440806  +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_441092  +
or word ptr [edi+6] 20h +
mov eax [esp+5Ch+var_30] +
mov edx [eax] +
mov eax edx +
movzx edx byte ptr [edx-1] +
sub eax [esp+5Ch+var_38] +
test byte ptr [edx+edx+4D0621h] 4 +
lea ecx [eax+1] +
cmovnz ecx eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_4410C0  +
cmp byte ptr [ebp+11h] 0 +
mov [esp+5Ch+var_40] ecx +
jz loc_4410CF  +
cmp [esp+5Ch+var_34] 2Fh +
lea eax [ecx+2] +
cmovnz eax ecx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_3C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_43EFF0  +
mov ecx [esp+5Ch+var_3C] +
mov byte ptr [edi+4] 4Fh +
lea edx [ecx-1] +
mov ecx [esp+5Ch+var_38] +
mov ebx eax +
mov eax [esp+5Ch+var_40] +
mov [edi+0Ch] ebx +
mov [edi+8] eax +
lea eax [ebx+1] +
mov byte ptr [ebx] 2Fh +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
cmp byte ptr [ebp+8] 0 +
jnz loc_441120  +
cmp byte ptr [ebp+11h] 0 +
jz loc_44112B  +
cmp [esp+5Ch+var_34] 2Fh +
jz loc_44123A  +
cmp dword ptr [ebp+2F4h] 0 +
jnz loc_441150  +
mov dword ptr [ebp+2F4h] 100h +
mov [esp+5Ch+var_5C] 800h +
call sub_4529F0  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
cmp eax [ebp+2F4h] +
jz loc_4412EE  +
mov ebx [edi+8] +
mov edx [ebp+2ECh] +
lea edx [edx+eax*8] +
lea eax [ebx+1] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_40] edx +
call sub_4529F0  +
mov edx [esp+5Ch+var_40] +
mov ecx [ebp+2F0h] +
mov [edx] eax +
mov eax [ebp+2ECh] +
mov edx [edi+0Ch] +
mov eax [eax+ecx*8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
mov edx [ebp+2F0h] +
mov eax [ebp+2ECh] +
mov eax [eax+edx*8] +
mov byte ptr [eax+ebx] 0 +
mov eax [ebp+2F0h] +
mov ecx [edi] +
mov edx [ebp+2ECh] +
mov [edx+eax*8+4] ecx +
add eax 1 +
mov [ebp+2F0h] eax +
jmp loc_440024  +
cmp [esp+5Ch+var_34] 3Dh +
jnz loc_440F30  +
mov eax [esp+5Ch+var_38] +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Eh +
jmp loc_440024  +
cmp byte ptr [edx] 2Fh +
jnz loc_441488  +
cmp byte ptr [ebx] 2Ah +
jnz loc_440552  +
cmp byte ptr [ebx+1] 2Fh +
jnz loc_440552  +
jmp loc_44081C  +
mov byte ptr [esp+5Ch+var_2C] 0 +
jmp loc_440C4F  +
add ebx 1 +
jmp loc_440D86  +
cmp byte ptr [ebp+251h] 0 +
jnz loc_440435  +
jmp loc_44008A  +
mov eax [esp+5Ch+var_40] +
mov byte ptr [ebx+1] 2Ah +
lea edx [eax-2] +
cmp edx 2 +
mov byte ptr [ebx+eax-2] 2Ah +
mov byte ptr [ebx+eax-1] 2Fh +
jbe loc_44112B  +
mov eax 2 +
jmp loc_44126A  +
add eax 1 +
cmp edx eax +
jz loc_44112B  +
cmp byte ptr [ebx+eax] 2Fh +
jnz loc_44125F  +
cmp byte ptr [ebx+eax-1] 2Ah +
jz loc_44127E  +
cmp byte ptr [ebx+eax+1] 2Ah +
jnz loc_44125F  +
mov byte ptr [ebx+eax] 7Ch +
jmp loc_44125F  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_4CE1DF +
mov [esp+5Ch+var_28] edx +
mov [esp+5Ch+var_2C] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_2C] +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_440BEB  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_440C18  +
movzx eax byte ptr [edx+2] +
and eax 0FFFFFFFBh +
cmp al 3Ah +
jnz loc_440024  +
jmp loc_440E83  +
cmp byte ptr [esp+5Ch+var_2C] 1 +
sbb eax eax +
and eax 20h +
add eax 54h +
cmp [esp+5Ch+var_24] eax +
jnz loc_440552  +
jmp loc_440CE3  +
mov edx [ebp+2ECh] +
add eax eax +
mov [ebp+2F4h] eax +
shl eax 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
call sub_452A70  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
jmp loc_441162  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional_0 +
mov [esp+5Ch+var_24] edx +
mov [esp+5Ch+var_28] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_28] +
mov edx [esp+5Ch+var_24] +
test eax eax +
jnz loc_440F63  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_44144B  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Eh +
mov [esp+5Ch+var_58] offset aLyF +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440552  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_440FD1  +
add ebx 8 +
jmp loc_441068  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_4CE206 +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_440C7A  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_2C] 1 +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 53h +
jmp loc_440CC4  +
cmp dl 9 +
jz loc_440FE2  +
jmp loc_440FF0  +
cmp byte ptr [ebx+5] 20h +
jnz loc_440CCE  +
lea ecx [ebx+6] +
jmp loc_440CE3  +
mov ebx [esp+5Ch+var_20] +
sub ebx ecx +
cmp ebx 3 +
jbe loc_440552  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov eax offset aHru +
mov edx offset aHru_0 +
cmovz eax edx +
jmp loc_440D19  +
cmp byte ptr [eax+1] 46h +
jnz loc_440C4B  +
jmp loc_440552  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jnz loc_4403E7  +
jmp loc_440435  +
cmp al 9 +
jz loc_441073  +
jmp loc_440806  +
mov eax [esp+5Ch+var_2C] +
add ebx 0Ch +
cmp byte ptr [eax+0Ch] 66h +
jnz loc_44137C  +
jmp loc_440552  +
movzx eax byte ptr [edx-1] +
lea ebx [edx-1] +
cmp al 2Ah +
jz loc_4411F5  +
test al al +
jz loc_4411FE  +
cmp al 0Ah +
jz loc_4411FE  +
cmp al 0Dh +
jz loc_4411FE  +
add edx 1 +
jmp loc_441461  +
lea ebx [ecx+4] +
jmp loc_440D86  +
cmp byte ptr [ebx] 46h +
jnz loc_440FD1  +
nop   +
jmp loc_440552  +
add ebx 0Ch +
jmp loc_440FC3  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
movzx eax byte ptr [ebx+4] +
mov eax ds:dword_4CE6E0[eax*8] +
cmp eax 1 +
jz loc_441738  +
cmp eax 2 +
jz loc_441730  +
mov eax 7 +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_43EFF0  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] eax +
mov edi eax +
call sub_43E560  +
mov byte ptr [eax] 0 +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+8] +
add eax 1 +
jmp loc_4416F8  +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
lea eax [eax+eax+1] +
jmp loc_4416F8  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov edx [esi+24h] +
mov eax [edx+8] +
mov ecx [edx+0Ch] +
sub ecx eax +
cmp ecx ebx +
jnb loc_441785  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
call sub_43EDB0  +
mov edx eax +
mov eax [esi+24h] +
mov [edx] eax +
mov eax [edx+8] +
mov [esi+24h] edx +
add ebx eax +
mov [edx+8] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
movzx ecx byte ptr [eax+4] +
movzx eax cl +
mov edx ds:dword_4CE6E0[eax*8] +
cmp edx 1 +
jz loc_4417F1  +
jle loc_4417E0  +
cmp edx 2 +
mov eax 2 +
jz locret_4417D8  +
cmp edx 3 +
jnz loc_4417F4  +
cmp cl 50h +
mov eax 3 +
jz locret_4417D8  +
cmp cl 53h +
jz loc_4417D3  +
xor eax eax +
cmp cl 51h +
setnz al  +
add eax 5 +
retn   +
***
mov eax 1 +
retn   +
***
test edx edx +
jnz loc_4417F4  +
xor eax eax +
cmp cl 26h +
setnz al  +
lea eax [eax+eax+4] +
retn   +
***
xor eax eax +
retn   +
***
mov eax 6 +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+2FCh] edx +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+2FCh] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [eax+40h] +
mov ecx [ebx+194h] +
mov edx [ebx+190h] +
mov eax ecx +
sub eax edx +
cmp eax 1Bh +
jbe loc_4418E0  +
mov eax [ebx+18Ch] +
add edx 1Ch +
mov [ebx+190h] edx +
cmp edx eax +
jz loc_441907  +
mov esi [ebx+19Ch] +
mov ebp ecx +
add edx esi +
not esi  +
and edx esi +
mov esi [ebx+188h] +
mov edi edx +
mov [ebx+190h] edx +
sub edi esi +
sub ebp esi +
cmp edi ebp +
jbe loc_44188A  +
mov [ebx+190h] ecx +
mov edx ecx +
test al 1 +
mov ecx eax +
mov [ebx+18Ch] edx +
mov ebx 1Ch +
jnz loc_441913  +
test cl 2 +
jnz loc_441920  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_4418AB  +
add ecx edx +
test bl 2 +
jz loc_4418C9  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_4418D1  +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+184h] +
mov [esp+1Ch+var_18] 1Ch +
mov [esp+1Ch+var_1C] eax +
call sub_458E00  +
mov edx [ebx+190h] +
mov ecx [ebx+194h] +
jmp loc_441847  +
or byte ptr [ebx+1ACh] 2 +
jmp loc_44185E  +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_4418A4  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_4418A4  +
***
jmp sub_441940  +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
test esi esi +
jz loc_441A82  +
mov [esi+40h] ebx +
mov [ebx+234h] esi +
mov [esp+24h+var_24] ebx +
call sub_4385E0  +
mov [esp+24h+var_24] ebx +
call sub_4377F0  +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 7 +
mov [esp+24h+var_20] offset aDefined +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2ACh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 4 +
mov [esp+24h+var_20] offset aTrue_1 +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2B0h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 5 +
mov [esp+24h+var_20] offset aFalse_1 +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2B4h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Bh +
mov [esp+24h+var_20] offset a__va_args__ +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2B8h] eax +
or word ptr [eax+14h] 200h +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Fh +
mov [esp+24h+var_20] offset a__has_includ_0 +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2BCh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 14h +
mov [esp+24h+var_20] offset a__has_includ_1 +
mov [esp+24h+var_24] eax +
call sub_43CE00  +
mov [ebx+2C0h] eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov byte ptr [ebx+2C4h] 1 +
mov [esp+24h+var_24] 0Dh +
call sub_43C9F0  +
mov dword ptr [eax+30h] offset sub_441820 +
mov esi eax +
lea eax [ebx+184h] +
mov [esp+24h+var_14] offset free +
mov [esp+24h+var_18] offset sub_4529F0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] eax +
call sub_458DA0  +
jmp loc_441955  +
***
jmp sub_441AE0  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+2C4h] 0 +
jz loc_441B15  +
mov eax [ebx+234h] +
add ebx 184h +
mov [esp+18h+var_18] eax +
call sub_43CA70  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_458F10  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_8] +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+234h] +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 1 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call sub_43CE00  +
add esp 1Ch +
retn   +
***
jmp loc_441B60  +
sub esp 1Ch +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov eax [eax+234h] +
mov [esp+8] edx +
mov edx [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
mov [esp+4] edx +
call sub_43CE00  +
test eax eax +
jz loc_441BA4  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+234h] +
mov [esp+arg_0] eax +
jmp sub_43CE60  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edx [esp+20h+arg_10] +
mov esi [esp+20h+arg_18] +
mov edi [esp+20h+arg_C] +
mov ebp [esp+20h+arg_0] +
mov [esp+20h+var_C] edx +
mov edx [esp+20h+arg_14] +
cmp esi 40h +
mov ebx [esp+20h+arg_4] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_8] +
jbe loc_441C50  +
lea ecx [esi-40h] +
cmp ecx 3Fh +
ja loc_441C26  +
mov edi ecx +
shr edi 5 +
and edi 1 +
mov esi edi +
xor esi 1 +
shl esi cl +
shl edi cl +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
and ebp esi +
and ebx edi +
mov [eax+8] edx +
mov edx [esp+20h+var_C] +
mov ecx [esp+20h+var_20] +
mov [eax] ebp +
mov [eax+4] ebx +
mov [eax+10h] edx +
mov edx [esp+20h+var_8] +
mov [eax+0Ch] ecx +
mov [eax+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_441C76  +
mov ecx esi +
mov ebp ecx +
shr ebp 5 +
and ebp 1 +
mov edi ebp +
xor edi 1 +
shl edi cl +
shl ebp cl +
add edi 0FFFFFFFFh +
adc ebp 0FFFFFFFFh +
and edx edi +
and [esp+20h+var_20] ebp +
xor ebx ebx +
xor ebp ebp +
jmp loc_441C26  +
xor ebp ebp +
xor ebx ebx +
jmp loc_441C26  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+88h+arg_0] +
mov ebx [esp+88h+arg_C] +
mov edi eax +
mov [esp+88h+var_60] eax +
mov eax [esp+88h+arg_4] +
mov [esp+88h+var_64] ebx +
mov edx eax +
mov [esp+88h+var_5C] eax +
mov eax [esp+88h+arg_8] +
mov [esp+88h+var_68] eax +
mov eax [esp+88h+arg_10] +
mov [esp+88h+var_20] eax +
mov eax [esp+88h+arg_14] +
mov [esp+88h+var_1C] eax +
mov eax edi +
not eax  +
mov ecx eax +
mov eax edx +
not eax  +
mov ebx eax +
mov eax [esp+88h+var_68] +
not eax  +
mov esi eax +
mov eax [esp+88h+var_64] +
add esi 1 +
not eax  +
mov edi eax +
adc edi 0 +
mov eax edi +
or eax esi +
jnz loc_441CFD  +
add ecx 1 +
adc ebx 0 +
mov eax ecx +
mov [esp+88h+var_2C] ebx +
mov [esp+88h+var_88] eax +
mov eax [esp+88h+var_2C] +
mov [esp+88h+var_24] edi +
mov [esp+88h+var_30] ecx +
mov ecx [esp+88h+arg_18] +
mov [esp+88h+var_28] esi +
mov [esp+88h+var_84] eax +
mov eax [esp+88h+var_24] +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_70] ecx +
mov [esp+88h+var_7C] eax +
mov eax [esp+88h+var_20] +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+var_1C] +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
call sub_441BD0  +
mov eax [esp+88h+var_48] +
mov edi [esp+88h+var_44] +
mov ebx [esp+88h+var_58] +
mov esi [esp+88h+var_54] +
mov edx [esp+88h+var_50] +
mov ecx [esp+88h+var_4C] +
mov [esp+88h+var_1C] edi +
xor edi edi +
test al al +
mov [esp+88h+var_30] ebx +
mov [esp+88h+var_2C] esi +
mov [esp+88h+var_28] edx +
mov [esp+88h+var_24] ecx +
mov [esp+88h+var_20] eax +
jnz loc_441D8C  +
xor ecx [esp+88h+var_64] +
xor edx [esp+88h+var_68] +
or ecx edx +
jz loc_441DC6  +
mov eax edi +
mov byte ptr [esp+88h+var_20+1] al +
mov eax [esp+88h+var_30] +
mov [ebp+0] eax +
mov eax [esp+88h+var_2C] +
mov [ebp+4] eax +
mov eax [esp+88h+var_28] +
mov [ebp+8] eax +
mov eax [esp+88h+var_24] +
mov [ebp+0Ch] eax +
mov eax [esp+88h+var_20] +
mov [ebp+10h] eax +
mov eax [esp+88h+var_1C] +
mov [ebp+14h] eax +
add esp 7Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi [esp+88h+var_5C] +
xor ebx [esp+88h+var_60] +
or esi ebx +
jnz loc_441D8C  +
mov edx [esp+88h+var_68] +
mov eax [esp+88h+var_64] +
or eax [esp+88h+var_5C] +
or edx [esp+88h+var_60] +
or edx eax +
setnz al  +
mov edi eax +
jmp loc_441D8C  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
mov eax [esp+8Ch+arg_0] +
mov ebp [esp+8Ch+arg_18] +
mov [esp+8Ch+var_24] eax +
mov eax [esp+8Ch+arg_4] +
cmp ebp 40h +
mov [esp+8Ch+var_20] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [esp+8Ch+var_20] +
mov [esp+8Ch+var_1C] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_68] edx +
mov [esp+8Ch+var_18] eax +
mov eax [esp+8Ch+arg_10] +
mov edx [esp+8Ch+var_18] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_10] eax +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_64] eax +
jbe loc_442070  +
mov eax [esp+8Ch+var_6C] +
lea ecx [ebp-41h] +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
xor esi esi +
and eax 1 +
xor edi edi +
xor eax 1 +
mov edx eax +
and edx 1 +
cmp byte ptr [esp+8Ch+var_14] 0 +
jnz loc_441EAB  +
xor edx 1 +
xor edi edi +
movzx edx dl +
mov esi edx +
neg esi  +
adc edi 0 +
neg edi  +
cmp ebp [esp+8Ch+arg_1C] +
jbe loc_4420C1  +
cmp ebp 3Fh +
ja loc_442080  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_441ED5  +
mov edx eax +
xor eax eax +
or eax [esp+8Ch+var_64] +
or edx [esp+8Ch+var_60] +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_68] edi +
cmp [esp+8Ch+arg_1C] 3Fh +
jbe loc_441F17  +
mov eax [esp+8Ch+var_6C] +
mov edx [esp+8Ch+var_68] +
sub [esp+8Ch+arg_1C] 40h +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
mov eax [esp+8Ch+arg_1C] +
test eax eax +
jz loc_4420D0  +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov edx [esp+8Ch+var_60] +
mov eax [esp+8Ch+var_64] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_441F44  +
mov eax edx +
xor edx edx +
mov [esp+8Ch+var_5C] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_64] 40h +
sub [esp+8Ch+var_64] eax +
movzx ecx byte ptr [esp+8Ch+var_64] +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_58] edx +
mov edx [esp+8Ch+var_68] +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_441F7A  +
mov edx eax +
xor eax eax +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_54] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_50] edx +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_441FA0  +
mov eax edx +
xor edx edx +
movzx ecx byte ptr [esp+8Ch+var_64] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_441FB3  +
mov edi esi +
xor esi esi +
mov ecx edx +
or eax esi +
mov edx [esp+8Ch+var_50] +
or edi ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_68] edi +
or ecx eax +
mov esi ecx +
mov ecx [esp+8Ch+var_58] +
or ecx edx +
mov edi ecx +
mov edx [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_18] edi +
mov [esp+8Ch+var_1C] esi +
mov eax edx +
mov [esp+8Ch+var_20] ecx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_74] ebp +
mov [esp+8Ch+var_84] esi +
mov [esp+8Ch+var_24] edx +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_18] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+var_10] +
mov [esp+8Ch+var_78] eax +
lea eax [esp+8Ch+var_4C] +
call sub_441BD0  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+var_4C] +
mov byte ptr [esp+8Ch+var_14+1] 0 +
mov [ebx] eax +
mov eax [esp+8Ch+var_48] +
mov [ebx+4] eax +
mov eax [esp+8Ch+var_44] +
mov [ebx+8] eax +
mov eax [esp+8Ch+var_40] +
mov [ebx+0Ch] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+10h] eax +
mov eax [esp+8Ch+var_38] +
mov [ebx+14h] eax +
add esp 8Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp-1] +
mov eax [esp+8Ch+var_64] +
mov edx [esp+8Ch+var_60] +
jmp loc_441E79  +
cmp ebp 7Fh +
ja loc_441EED  +
lea ecx [ebp-40h] +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44209E  +
mov edx eax +
xor eax eax +
mov ecx [esp+8Ch+var_6C] +
or ecx eax +
mov [esp+8Ch+var_5C] ecx +
mov ecx [esp+8Ch+var_68] +
or ecx edx +
mov eax ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
mov [esp+8Ch+var_6C] ecx +
jmp loc_441EED  +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
jmp loc_441FD9  +
mov esi [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_60] +
jmp loc_441FD9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 0CCh +
mov eax [esp+0CCh+arg_0] +
mov edx [esp+0CCh+arg_10] +
mov [esp+0CCh+var_94] eax +
mov eax [esp+0CCh+arg_4] +
mov [esp+0CCh+var_34] edx +
mov [esp+0CCh+var_90] eax +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_9C] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_98] eax +
mov eax [esp+0CCh+arg_14] +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+arg_18] +
cmp [esp+0CCh+arg_1C] eax +
jb loc_4421C0  +
xor eax eax +
test dl dl +
jz loc_442417  +
xor esi esi +
xor ebp ebp +
xor edi edi +
mov [esp+0CCh+var_A4] 0 +
mov ecx edi +
mov [esp+0CCh+var_44] edi +
mov edi [esp+0CCh+var_A4] +
mov byte ptr [esp+0CCh+var_34+1] al +
mov byte ptr [esp+0CCh+var_34] dl +
mov [ebx+8] esi +
mov [esp+0CCh+var_40] edi +
mov eax [esp+0CCh+var_40] +
mov [ebx+0Ch] ebp +
mov [esp+0CCh+var_3C] esi +
mov [esp+0CCh+var_38] ebp +
mov [ebx+4] eax +
mov eax [esp+0CCh+var_34] +
mov [ebx] ecx +
mov [ebx+10h] eax +
mov eax [esp+0CCh+var_30] +
mov [ebx+14h] eax +
add esp 0CCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0CCh+arg_1C] 3Fh +
ja loc_4423F0  +
mov eax [esp+0CCh+var_9C] +
mov esi [esp+0CCh+var_94] +
mov edi [esp+0CCh+var_90] +
mov ebp [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_A4] eax +
mov eax [esp+0CCh+var_98] +
mov [esp+0CCh+var_A0] eax +
test ebp ebp +
jz loc_442270  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx esi +
xor esi esi +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax esi +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_A4] +
mov ecx 40h +
mov [esp+0CCh+var_88] edx +
mov edx [esp+0CCh+var_A0] +
sub ecx ebp +
xor edi edi +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
cmovnz edx edi +
mov ecx edx +
mov edx [esp+0CCh+var_88] +
mov [esp+0CCh+var_80] ecx +
mov ecx eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_8C] +
or ecx eax +
mov eax [esp+0CCh+var_A4] +
mov esi ecx +
mov ecx [esp+0CCh+var_80] +
or ecx edx +
mov edx [esp+0CCh+var_A0] +
mov edi ecx +
mov ecx ebp +
xor ebp ebp +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebp +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_A0] edx +
mov eax [esp+0CCh+var_A4] +
mov ecx esi +
mov [esp+0CCh+var_44] esi +
mov edx [esp+0CCh+var_A0] +
mov [esp+0CCh+var_40] edi +
mov [esp+0CCh+var_CC] ecx +
mov esi eax +
mov [esp+0CCh+var_3C] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_38] edx +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_6C] +
call sub_441BD0  +
mov eax [esp+0CCh+var_6C] +
mov ecx [esp+0CCh+var_5C] +
mov [esp+0CCh+var_44] eax +
mov edi [esp+0CCh+var_44] +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_68] +
mov edx ecx +
mov [esp+0CCh+var_34] ecx +
mov [esp+0CCh+var_40] eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_64] +
mov [esp+0CCh+var_3C] eax +
mov esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_7C] eax +
mov eax [esp+0CCh+var_60] +
mov [esp+0CCh+var_38] eax +
mov ebp [esp+0CCh+var_38] +
mov [esp+0CCh+var_78] eax +
mov eax [esp+0CCh+var_58] +
mov [esp+0CCh+var_74] eax +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_A4] eax +
xor eax eax +
test cl cl +
jnz loc_44215C  +
mov eax [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_70] edx +
mov [esp+0CCh+var_BC] ecx +
mov [esp+0CCh+var_CC] edi +
mov [esp+0CCh+var_B0] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_74] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_24] +
call sub_441DF0  +
mov eax [esp+0CCh+var_98] +
xor eax [esp+0CCh+var_18] +
mov ecx [esp+0CCh+var_9C] +
xor ecx [esp+0CCh+var_1C] +
mov edx eax +
mov eax 1 +
or edx ecx +
mov edx [esp+0CCh+var_70] +
jnz loc_44215C  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
xor eax [esp+0CCh+var_20] +
xor ecx [esp+0CCh+var_24] +
or ecx eax +
setnz al  +
jmp loc_44215C  +
mov eax [esp+0CCh+arg_1C] +
mov esi [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_98] +
mov [esp+0CCh+var_A4] 0 +
lea ebp [eax-40h] +
mov [esp+0CCh+var_A0] 0 +
jmp loc_4421ED  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
or eax [esp+0CCh+var_98] +
or ecx [esp+0CCh+var_9C] +
or ecx eax +
setnz al  +
jmp loc_44214E  +
***
jmp sub_442440  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx edx +
sub esp 28h +
mov ebp [esp+30h+arg_0] +
mov [esp+30h+var_30] eax +
mov eax edx +
mov esi [esp+30h+arg_4] +
mul  ebp +
mov [esp+30h+var_1C] eax +
mov eax ecx +
mov ecx [esp+30h+var_30] +
mov [esp+30h+var_18] edx +
mul  esi +
mov [esp+30h+var_14] eax +
mov [ecx] eax +
mov eax ebx +
mov [esp+30h+var_10] edx +
mov [ecx+4] edx +
mul  esi +
xor esi esi +
mov [esp+30h+var_2C] eax +
mov eax edi +
mov edi [esp+30h+var_2C] +
mov [esp+30h+var_28] edx +
mul  ebp +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] edx +
mov edx [esp+30h+var_18] +
add esi eax +
adc edi edx +
cmp edx edi +
mov [ecx+8] esi +
mov [ecx+0Ch] edi +
jb loc_44251B  +
jbe loc_442515  +
mov ecx [esp+30h+var_14] +
mov ebx [esp+30h+var_10] +
mov eax [esp+30h+var_30] +
add ecx 1 +
adc ebx 0 +
mov [eax] ecx +
mov edx ebx +
mov [eax+4] ebx +
mov eax ecx +
mov ebx [esp+30h+var_24] +
xor ecx ecx +
mov ebp [esp+30h+var_30] +
add ecx esi +
adc ebx edi +
cmp edi ebx +
mov [ebp+8] ecx +
mov [ebp+0Ch] ebx +
jb loc_4424E5  +
jbe loc_442525  +
add eax 1 +
adc edx 0 +
mov ebx [esp+30h+var_20] +
mov edi [esp+30h+var_28] +
mov ecx ebx +
xor ebx ebx +
mov esi edi +
xor edi edi +
add ecx esi +
adc ebx edi +
add ecx eax +
mov eax [esp+30h+var_30] +
adc ebx edx +
mov [eax] ecx +
mov [eax+4] ebx +
mov byte ptr [eax+10h] 1 +
mov byte ptr [eax+11h] 0 +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+30h+var_1C] esi +
ja loc_4424AC  +
mov eax [esp+30h+var_14] +
mov edx [esp+30h+var_10] +
jmp loc_4424C6  +
cmp esi ecx +
jbe loc_4424E5  +
jmp loc_4424DF  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 0CCh +
mov eax [esp+0D0h+arg_0] +
mov ebp [esp+0D0h+arg_10] +
mov edi [esp+0D0h+arg_28] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+arg_4] +
mov ecx [esp+0D0h+var_48] +
mov [esp+0D0h+var_38] ebp +
mov [esp+0D0h+var_50] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+arg_8] +
mov ebx [esp+0D0h+var_44] +
mov [esp+0D0h+var_90] ecx +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+arg_C] +
mov [esp+0D0h+var_8C] ebx +
mov ecx [esp+0D0h+var_40] +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+arg_14] +
mov ebx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+arg_18] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+arg_1C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+arg_20] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+arg_24] +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+arg_2C] +
mov [esp+0D0h+var_4C] eax +
mov [esp+0D0h+var_98] ecx +
mov ecx [esp+0D0h+var_60] +
mov [esp+0D0h+var_94] ebx +
mov ebx [esp+0D0h+var_5C] +
mov eax [edx+294h] +
cmp [esp+0D0h+arg_30] 5 +
mov [esp+0D0h+var_A8] ecx +
mov ecx [esp+0D0h+var_58] +
mov [esp+0D0h+var_A4] ebx +
mov ebx [esp+0D0h+var_54] +
mov [esp+0D0h+var_9C] eax +
mov [esp+0D0h+var_B0] ecx +
mov [esp+0D0h+var_AC] ebx +
jz loc_442A10  +
jle loc_442828  +
mov eax [esp+0D0h+arg_30] +
sub eax 0Ch +
cmp eax 1 +
ja loc_442BC8  +
mov eax edi +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_44273D  +
cmp [esp+0D0h+var_9C] 40h +
mov eax [esp+0D0h+var_9C] +
jbe loc_442D78  +
lea ecx [eax-41h] +
mov edx [esp+0D0h+var_A4] +
mov eax [esp+0D0h+var_A8] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_44273D  +
xor eax eax +
cmp [esp+0D0h+arg_30] 0Dh +
setnz al  +
mov [esp+0D0h+arg_30] eax +
mov eax [esp+0D0h+var_9C] +
add [esp+0D0h+arg_30] 0Ch +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_60] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_5C] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_54] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
call sub_441C80  +
mov eax [esp+0D0h+var_80] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_5C] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+var_60] +
mov edx [esp+0D0h+var_54] +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_B0] eax +
mov ecx [esp+0D0h+var_A4] +
mov eax 0FFFFFFFFh +
mov edx [esp+0D0h+var_A8] +
mov edi ecx +
or edi edx +
cmovz eax [esp+0D0h+var_B0] +
cmp [esp+0D0h+arg_30] 0Dh +
mov [esp+0D0h+var_B4] eax +
mov eax [esp+0D0h+var_9C] +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_3C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_38] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_34] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
jz loc_442C80  +
call sub_441DF0  +
mov eax [esp+0D0h+var_80] +
mov edi [esp+0D0h+var_70] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_38] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_44] +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+var_6C] +
mov edx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_B0] eax +
jmp loc_442C0C  +
cmp [esp+0D0h+arg_30] 4 +
jnz loc_442BC8  +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
mov ecx [esp+0D0h+var_90] +
mov ebx [esp+0D0h+var_8C] +
add eax [esp+0D0h+var_B0] +
adc edx [esp+0D0h+var_AC] +
add ecx [esp+0D0h+var_A8] +
adc ebx [esp+0D0h+var_A4] +
cmp edx [esp+0D0h+var_94] +
mov [esp+0D0h+var_88] eax +
mov [esp+0D0h+var_84] edx +
ja loc_442878  +
jb loc_442CB0  +
mov eax [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] eax +
jb loc_442CB0  +
mov edx ebp +
mov eax 1 +
mov ebp [esp+0D0h+var_84] +
test dl dl +
mov edx ecx +
cmovz eax edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_24] ebx +
mov ebx [esp+0D0h+var_9C] +
mov byte ptr [esp+0D0h+var_18] al +
mov eax [esp+0D0h+var_24] +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_20] edi +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_1C] +
mov [esp+0D0h+var_D0] edx +
mov [esp+0D0h+var_C8] edi +
mov [esp+0D0h+var_28] ecx +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_B8] ebx +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_441BD0  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov edx eax +
shr dx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
jnz loc_4429BE  +
cmp ebx 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_442CD0  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_442BA2  +
xor edx edx +
mov eax [esp+0D0h+var_28] +
mov byte ptr [esp+0D0h+var_18+1] dl +
mov [esi] eax +
mov eax [esp+0D0h+var_24] +
mov [esi+4] eax +
mov eax [esp+0D0h+var_20] +
mov [esi+8] eax +
mov eax [esp+0D0h+var_1C] +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_18] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_14] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
sub eax [esp+0D0h+var_B0] +
sbb edx [esp+0D0h+var_AC] +
mov [esp+0D0h+var_88] eax +
mov eax [esp+0D0h+var_90] +
mov ebx edx +
mov [esp+0D0h+var_84] edx +
mov edx [esp+0D0h+var_8C] +
sub eax [esp+0D0h+var_A8] +
sbb edx [esp+0D0h+var_A4] +
cmp ebx [esp+0D0h+var_94] +
jb loc_442A54  +
ja loc_442CC0  +
mov ebx [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] ebx +
ja loc_442CC0  +
mov ebx ebp +
mov ecx 1 +
mov ebp [esp+0D0h+var_84] +
test bl bl +
mov ebx eax +
cmovz ecx edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_28] eax +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18] cl +
mov eax edi +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_1C] +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_24] edx +
mov edx [esp+0D0h+var_24] +
mov [esp+0D0h+var_20] edi +
mov edi [esp+0D0h+var_9C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_D0] ebx +
mov [esp+0D0h+var_CC] edx +
mov [esp+0D0h+var_B8] edi +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_441BD0  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov ebx eax +
shr bx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
mov edx ebx +
jnz loc_4429BE  +
cmp [esp+0D0h+var_9C] 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_442D34  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_4429BC  +
mov edx [esp+0D0h+var_84] +
mov eax [esp+0D0h+var_88] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
cmp al bl +
setnz dl  +
jmp loc_4429BE  +
cmp byte ptr [edx+26Ah] 0 +
jz loc_442BF0  +
cmp byte ptr [edx+268h] 0 +
jz loc_442C90  +
mov eax [edx+14h] +
test eax eax +
jz loc_442C90  +
lea esi [esi+0] +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_38] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_34] eax +
mov edx [esp+0D0h+var_A8] +
mov ecx [esp+0D0h+var_A4] +
mov ebx [esp+0D0h+var_AC] +
mov eax edx +
mov [esp+0D0h+var_44] ecx +
mov ecx [esp+0D0h+var_B0] +
mov [esi] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_3C] ebx +
mov [esp+0D0h+var_48] edx +
mov [esp+0D0h+var_40] ecx +
mov edx ecx +
mov ecx edi +
mov [esi+4] eax +
mov eax [esp+0D0h+var_3C] +
mov byte ptr [esp+0D0h+var_38] cl +
mov [esi+8] edx +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_38] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_34] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4420E0  +
jmp loc_4427B5  +
mov [esp+0D0h+var_C8] offset aCommaOperatorI +
mov [esp+0D0h+var_CC] 15h +
mov [esp+0D0h+var_D0] edx +
call sub_43C6D0  +
jmp loc_442BF0  +
add ecx 1 +
adc ebx 0 +
jmp loc_442878  +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
jmp loc_442A54  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_442D05  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_4429BC  +
mov eax edi +
mov edx ebp +
shrd eax ebp +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edi eax +
and edi 1 +
xor edi 1 +
mov eax edi +
and eax 1 +
jmp loc_442BBE  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_442D69  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_442D13  +
jmp loc_4429BC  +
lea ecx [eax-1] +
mov edx [esp+0D0h+var_AC] +
mov eax [esp+0D0h+var_B0] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_442691  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
add byte ptr [edx+12h] 1 +
mov byte ptr [eax+10h] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov byte ptr [eax+11h] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_1C] ecx +
call sub_43B4A0  +
mov [esp+34h+var_1D] 0 +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_442F20  +
cmp al 44h +
setz dl  +
jz loc_442E00  +
cmp al 3Eh +
jnz loc_442EA0  +
mov eax [esi+8] +
mov [esp+34h+var_18] edx +
sub eax 1 +
mov [esp+34h+var_34] eax +
call sub_4529F0  +
mov ebp eax +
mov eax [esi+8] +
lea ecx [eax-2] +
mov eax [esi+0Ch] +
mov [esp+34h+var_2C] ecx +
mov [esp+34h+var_34] ebp +
add eax 1 +
mov [esp+34h+var_30] eax +
call memcpy  +
mov eax [esi+8] +
mov edx [esp+34h+var_18] +
mov byte ptr [ebp+eax-2] 0 +
mov esi [esi+8] +
test ebp ebp +
jz loc_442E7C  +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ebp +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_28] eax +
movzx eax dl +
mov [esp+34h+var_2C] eax +
call sub_44B670  +
test al al +
jnz loc_442EF0  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov [esp+34h+var_34] ebp +
call free  +
cmp [esp+34h+var_1D] 0 +
jnz loc_442EC5  +
test esi esi +
jz loc_442E8D  +
mov [edi+0E8h] esi +
sub byte ptr [edi+12h] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 3 +
jz loc_442F03  +
mov [esp+34h+var_2C] offset aOperator__has_ +
xor esi esi +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_43C650  +
cmp [esp+34h+var_1D] 0 +
jz loc_442E83  +
mov [esp+34h+var_34] edi +
call sub_43B4A0  +
cmp byte ptr [eax+4] 15h +
jz loc_442E83  +
mov [esp+34h+var_2C] offset aMissingAfter__ +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_43C650  +
jmp loc_442E83  +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_442E74  +
mov [esp+34h+var_34] edi +
xor esi esi +
call sub_438630  +
mov edx 1 +
mov ebp eax +
jmp loc_442E3F  +
mov [esp+34h+var_34] edi +
call sub_43B4A0  +
mov [esp+34h+var_1D] 1 +
mov esi eax +
movzx eax byte ptr [eax+4] +
jmp loc_442DF1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_24] eax +
cmp ebx 2 +
jz loc_443122  +
movzx edx byte ptr [edx] +
test dl dl +
mov [esp+24h+var_5] dl +
jnz loc_443075  +
lea edx [ebx-1] +
test ebx ebx +
jz loc_4431E5  +
movzx esi byte ptr [ecx] +
mov eax [esp+24h+var_24] +
mov ebx esi +
xor edi edi +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_10] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_14] 0 +
sub ebx 44h +
cmp bl 33h +
ja loc_442FE8  +
movzx ebx bl +
jmp ds:off_4CEA9C[ebx*4]  +
mov esi edx +
add ebp 1 +
sub edx 1 +
mov ebx ecx +
test esi esi +
lea ecx [ebx+1] +
jz loc_443442  +
movzx ebx byte ptr [ebx+1] +
sub ebx 44h +
cmp bl 33h +
jbe loc_442FBD  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
add edi 1 +
sub edx 1 +
mov ebx ecx +
jmp loc_442FD1  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_20] 1 +
sub edx 1 +
jmp loc_442FD1  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_18] 1 +
sub edx 1 +
jmp loc_442FD1  +
mov esi [esp+24h+var_14] +
add esi 1 +
test edx edx +
jnz loc_443158  +
mov edx [esp+24h+var_10] +
mov ebx esi +
add edx [esp+24h+var_C] +
add edx [esp+24h+var_1C] +
add edx esi +
add edx [esp+24h+var_20] +
add edx edi +
add edx ebp +
xor eax eax +
cmp edx 1 +
ja loc_442FEA  +
cmp [esp+24h+var_18] 1 +
ja loc_442FEA  +
cmp [esp+24h+var_4] 0F0h +
ja loc_442FEA  +
jmp loc_44321B  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_1C] 1 +
sub edx 1 +
jmp loc_442FD1  +
test ebx ebx +
jz loc_4431E5  +
movzx edx byte ptr [ecx+ebx-1] +
lea esi [ebx-1] +
cmp dl 52h +
jz loc_4430A6  +
jbe loc_4432C0  +
cmp dl 6Bh +
jz loc_4432D0  +
cmp dl 72h +
lea esi [esi+0] +
jnz loc_4432C5  +
mov ebp 100000h +
cmp ebx 1 +
jz loc_443390  +
movzx eax byte ptr [ecx] +
mov edi eax +
and edi 0FFFFFFDFh +
mov edx edi +
cmp dl 55h +
jnz loc_4430DC  +
or ebp 1000h +
cmp esi 1 +
jz loc_443390  +
movzx eax byte ptr [ecx+1] +
lea esi [ebx-2] +
add ecx 1 +
cmp al 4Ch +
jz loc_4433B8  +
jbe loc_443397  +
cmp al 68h +
jz loc_4433A6  +
cmp al 6Ch +
jnz loc_442FE8  +
cmp esi 1 +
lea esi [esi+0] +
jz loc_4433D9  +
xor eax eax +
cmp esi 2 +
jnz loc_442FEA  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 6Ch +
cmovz eax edx +
jmp loc_442FEA  +
movzx esi byte ptr [ecx] +
mov edi esi +
and edi 0FFFFFFDFh +
mov eax edi +
cmp al 44h +
jnz loc_4432DA  +
mov eax esi +
cmp al 44h +
setz al  +
mov edi eax +
movzx eax byte ptr [ecx+1] +
lea esi [eax-44h] +
mov eax esi +
cmp al 28h +
ja loc_442F57  +
movzx esi al +
jmp ds:off_4CEB6C[esi*4]  +
cmp byte ptr [eax] 0 +
movzx ebx byte ptr [ecx+1] +
jnz loc_4431D6  +
mov byte ptr [esp+24h+var_24] bl +
sub ebx 31h +
cmp bl 8 +
ja loc_4431D2  +
mov ebx [esp+24h+var_4] +
test ebx ebx +
jnz loc_4431D2  +
movzx ebx byte ptr [esp+24h+var_24] +
mov esi [esp+24h+var_4] +
mov [esp+24h+var_24] edi +
mov edi eax +
jmp loc_4431A6  +
cmp esi 0EFh +
ja loc_4433E3  +
lea eax [esi+esi*4] +
add ecx 1 +
sub edx 1 +
lea esi [ebx+eax*2-30h] +
jz loc_44341D  +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-30h] +
cmp al 9 +
jbe loc_443183  +
cmp bl 78h +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
jnz loc_4433EC  +
lea esi [edx-1] +
sub edx 2 +
add [esp+24h+var_C] 1 +
lea ebx [ecx+1] +
jmp loc_442FD1  +
movzx ebx byte ptr [esp+24h+var_24] +
add ecx 1 +
sub edx 1 +
mov [esp+24h+var_14] esi +
jmp loc_442FB5  +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
xor edi edi +
xor ebx ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_10] 0 +
mov eax [esp+24h+var_C] +
test eax eax +
setnz al  +
mov esi eax +
jnz loc_443362  +
mov eax [esp+24h+var_10] +
test eax eax +
setnz dl  +
jz loc_44324B  +
cmp [esp+24h+var_4] 10h +
jz loc_44324B  +
xor eax eax +
test byte ptr [esp+24h+var_4] 1Fh +
jnz loc_442FEA  +
cmp [esp+24h+var_4] 60h +
jz loc_443433  +
mov eax [esp+24h+var_18] +
test eax eax +
jz loc_443403  +
xor eax eax +
mov ecx 2000h +
cmp [esp+24h+var_5] 0 +
jz loc_442FEA  +
test ebx ebx +
mov eax 10h +
jnz loc_4432B7  +
mov ebx [esp+24h+var_1C] +
mov al 20h +
test ebx ebx +
jnz loc_4432B7  +
mov ebx [esp+24h+var_20] +
mov al 40h +
test ebx ebx +
jnz loc_4432B7  +
test ebp ebp +
mov eax 10000h +
jnz loc_4432B7  +
test edi edi +
mov eax 20000h +
jnz loc_4432B7  +
test dl dl +
jz loc_443464  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 400000h +
or eax ecx +
jmp loc_442FEA  +
cmp dl 4Bh +
jz loc_4432D0  +
mov edx esi +
jmp loc_442F69  +
mov ebp 200000h +
jmp loc_4430AB  +
movzx eax byte ptr [edx] +
mov edx 1 +
test al al +
mov [esp+24h+var_5] al +
jz loc_442F74  +
jmp loc_44307D  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_442FEA  +
mov eax 4040h +
jmp loc_442FEA  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_442FEA  +
mov eax 4010h +
jmp loc_442FEA  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_442FEA  +
mov eax 4020h +
jmp loc_442FEA  +
mov eax edi +
test al al +
jz loc_442FE8  +
nop   +
jmp loc_4432FF  +
mov eax edi +
test al al +
jz loc_442FE8  +
lea esi [esi+0] +
jmp loc_443315  +
mov eax edi +
test al al +
jz loc_442FE8  +
lea esi [esi+0] +
jmp loc_44332B  +
cmp [esp+24h+var_4] 20h +
jz loc_44322C  +
cmp [esp+24h+var_4] 40h +
jz loc_44322C  +
xor eax eax +
cmp [esp+24h+var_4] 80h +
jz loc_44322C  +
jmp loc_442FEA  +
mov eax ebp +
jmp loc_442FEA  +
cmp al 48h +
lea esi [esi+0] +
jnz loc_442FE8  +
mov edx ebp +
xor eax eax +
or edx 10h +
cmp esi 1 +
cmovz eax edx +
jmp loc_442FEA  +
cmp esi 1 +
jz loc_4433D9  +
xor eax eax +
cmp esi 2 +
jnz loc_442FEA  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 4Ch +
cmovz eax edx +
jmp loc_442FEA  +
mov eax ebp +
or eax 20h +
jmp loc_442FEA  +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
lea esi [edx-1] +
mov ebx ecx +
mov [esp+24h+var_24] esi +
mov esi edx +
add [esp+24h+var_10] 1 +
mov edx [esp+24h+var_24] +
jmp loc_442FD1  +
mov eax ebp +
or eax edi +
jz loc_443416  +
xor eax eax +
cmp [esp+24h+var_5] 0 +
jz loc_442FEA  +
xor ecx ecx +
jmp loc_443274  +
mov [esp+24h+var_4] esi +
mov eax edi +
xor esi esi +
mov edi [esp+24h+var_24] +
mov ebx ecx +
mov [esp+24h+var_24] 0FFFFFFFFh +
jmp loc_4433F6  +
xor eax eax +
test dl dl +
jz loc_443256  +
jmp loc_442FEA  +
mov ecx [esp+24h+var_14] +
lea eax [ebp+edi+0] +
add eax [esp+24h+var_20] +
add eax [esp+24h+var_1C] +
add eax [esp+24h+var_10] +
add eax [esp+24h+var_C] +
mov ebx ecx +
lea edx [eax+ecx] +
jmp loc_443047  +
mov edx esi +
mov eax 8000h +
test dl dl +
jz loc_4432B7  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 800000h +
or eax ecx +
jmp loc_442FEA  +
***
push edi  +
xor ebp ebp +
push esi  +
xor edi edi +
push ebx  +
xor esi esi +
lea ebx [ecx-1] +
sub esp 4 +
cmp ebx 0FFFFFFFFh +
mov [esp+10h+var_10] eax +
jz loc_4434CE  +
movzx ecx byte ptr [edx-1] +
lea eax [ecx-49h] +
cmp al 2Ch +
ja loc_443524  +
movzx eax al +
jmp ds:off_4CEC10[eax*4]  +
add ebp 1 +
sub ebx 1 +
sub edx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_4434AA  +
xor eax eax +
cmp esi 2 +
ja loc_443526  +
cmp ebp 1 +
ja loc_443526  +
cmp edi 1 +
ja loc_443526  +
test edi edi +
jz loc_443535  +
mov edi [esp+10h+var_10] +
mov edx 2000h +
cmp byte ptr [edi] 0 +
jz loc_443526  +
cmp ebp 1 +
sbb eax eax +
not eax  +
and eax 1000h +
or eax edx +
test esi esi +
mov edx 10h +
jz loc_443514  +
mov dl 20h +
cmp esi 1 +
mov ecx 40h +
cmovnz edx ecx +
or eax edx +
jmp loc_443526  +
add esi 1 +
cmp esi 2 +
jnz loc_4434C3  +
cmp cl [edx] +
jz loc_4434C3  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
jmp loc_4434C3  +
xor edx edx +
jmp loc_4434F0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp [esp+1Ch+arg_8] 0 +
mov [esp+1Ch+var_1C] eax +
mov edi [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] ebx +
mov ebx [esp+1Ch+arg_14] +
mov [esp+1Ch+var_10] esi +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_18] edx +
mov ebp [esp+1Ch+arg_10] +
mov [esp+1Ch+var_C] ebx +
mov [esp+1Ch+var_8] esi +
jnz loc_443584  +
cmp [esp+1Ch+arg_1C] 0 +
jz loc_4435D0  +
cmp [esp+1Ch+var_18] ebp +
jbe loc_4435A0  +
add esp 1Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_443660  +
mov ecx [esp+1Ch+var_1C] +
mov ebx [esp+1Ch+var_18] +
mov eax ecx +
mov edx ebx +
xor eax edi +
xor edx ebp +
or edx eax +
jz loc_443670  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+arg_20] 40h +
ja loc_443630  +
mov eax [esp+1Ch+arg_20] +
mov esi [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_14] +
mov edx [esp+1Ch+var_8] +
lea ecx [eax-1] +
mov eax [esp+1Ch+var_C] +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
shrd eax edx +
mov ebx esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
and ecx 1 +
xor ecx 1 +
and ecx 1 +
cmp bl cl +
jz loc_443584  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_20] +
mov edx ebp +
mov esi [esp+1Ch+var_18] +
mov ebx [esp+1Ch+var_1C] +
lea ecx [eax-41h] +
mov eax edi +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
jmp loc_443604  +
cmp [esp+1Ch+var_1C] edi +
ja loc_44358A  +
jmp loc_4435A6  +
mov eax [esp+1Ch+var_8] +
cmp [esp+1Ch+var_10] eax +
jb loc_4435BD  +
nop   +
ja loc_44358A  +
mov eax [esp+1Ch+var_C] +
cmp [esp+1Ch+var_14] eax +
jnb loc_44358A  +
xor esi esi +
jmp loc_4435BF  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov [esp+4] ecx +
mov ecx [esp+8] +
lea edx [eax+273h] +
add eax 248h +
jmp sub_442F40  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
add eax 273h +
jmp sub_443490  +
***
mov edx [esp+arg_0] +
mov eax 4Ah +
cmp edx 3Eh +
jz locret_443750  +
cmp edx 3Fh +
mov al 4Bh +
jz locret_443750  +
cmp edx 40h +
mov al 4Ch +
jz locret_443750  +
cmp edx 41h +
mov al 4Dh +
jz locret_443750  +
mov al 4Eh +
cmp edx 42h +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov edx [esp+arg_0] +
mov eax 45h +
cmp edx 38h +
jz locret_4437D0  +
cmp edx 39h +
mov al 46h +
jz locret_4437D0  +
cmp edx 3Ah +
mov al 47h +
jz locret_4437D0  +
cmp edx 3Bh +
mov al 48h +
jz locret_4437D0  +
mov al 49h +
cmp edx 3Ch +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov eax [esp+arg_0] +
sub eax 4Ah +
cmp eax 4 +
setbe al  +
retn   +
***
mov eax [esp+arg_0] +
sub eax 45h +
cmp eax 4 +
setbe al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov esi [eax+8] +
mov edi [eax+0Ch] +
test esi esi +
jz loc_44386A  +
movzx eax byte ptr [edi] +
cmp al 27h +
jz loc_44386E  +
cmp al 22h +
jz loc_44386E  +
lea edx [edi+1] +
xor ecx ecx +
jmp loc_443835  +
movzx ebx byte ptr [edx] +
mov eax edx +
add edx 1 +
cmp bl 22h +
jz loc_443843  +
cmp bl 27h +
jz loc_443843  +
add ecx 1 +
cmp ecx esi +
jnz loc_443823  +
lea eax [edi+ecx] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp esi ecx +
jz loc_44383F  +
movzx ecx byte ptr [eax] +
lea eax [esi-1] +
cmp [edi+esi-1] cl +
jnz loc_443860  +
jmp loc_443872  +
cmp [edi+eax-1] cl +
lea edx [eax-1] +
jz loc_443864  +
mov eax edx +
test eax eax +
jnz loc_443855  +
add eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
jmp loc_44383F  +
***
mov eax edi +
jmp loc_443847  +
***
mov eax esi +
add eax edi +
jmp loc_443866  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_8] +
mov edi [eax+0Ch] +
test ecx ecx +
mov [esp+3Ch+var_14] edi +
jz loc_4438A4  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [ecx] 0 +
mov eax [eax+8] +
mov ecx eax +
cmp ecx 1 +
mov [esp+3Ch+var_10] eax +
mov eax 111h +
jz loc_443AC0  +
mov eax [esp+3Ch+var_14] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_443B22  +
mov esi [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 0Ah +
xor ecx ecx +
xor ebp ebp +
mov byte ptr [esp+3Ch+var_1C] 0 +
xor edi edi +
jmp loc_443920  +
and dh 1 +
jz loc_4438EF  +
cmp [esp+3Ch+var_18] 10h +
jz loc_443930  +
cmp eax 27h +
jz loc_443945  +
cmp eax 2Eh +
jnz loc_443956  +
test cl cl +
jnz loc_443AD9  +
cmp byte ptr [ebx] 27h +
jz loc_443AC8  +
test ebp ebp +
lea esi [esi+0] +
jnz loc_443C20  +
mov ebp 1 +
movzx eax byte ptr [ebx] +
mov esi ebx +
movzx edx ds:word_4D0620[eax+eax] +
lea ebx [esi+1] +
test dl 4 +
jz loc_4438E3  +
movzx eax ds:byte_4D2FE0[eax] +
mov byte ptr [esp+3Ch+var_1C] 1 +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
jmp loc_44391B  +
mov edx [esp+3Ch+arg_0] +
cmp byte ptr [edx+276h] 0 +
jnz loc_443B10  +
mov edx [esp+3Ch+var_14] +
add edx [esp+3Ch+var_10] +
cmp [esp+3Ch+var_18] 0Ah +
mov [esp+3Ch+var_14] edx +
jbe loc_443B70  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_443B7C  +
and eax 0FFFFFFDFh +
cmp eax 50h +
jnz loc_443B7C  +
test cl cl +
jnz loc_443CE0  +
cmp byte ptr [esi+1] 27h +
mov eax 1 +
mov ebp 2 +
jz loc_443CCF  +
cmp [esp+3Ch+var_18] 8 +
jnz loc_443B9B  +
cmp edi 9 +
ja loc_443BB0  +
mov [esp+3Ch+var_18] 0Ah +
cmp ebp 2 +
jz loc_444198  +
mov ebp [esp+3Ch+var_14] +
mov ecx ebx +
mov eax [esp+3Ch+arg_0] +
sub ebp ebx +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ebp +
call sub_442F40  +
test eax eax +
mov esi eax +
jnz loc_443FF8  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_4441EC  +
mov edx [esp+3Ch+arg_8] +
test edx edx +
jz loc_444182  +
mov eax [esp+3Ch+arg_8] +
xor edi edi +
mov esi 1000040h +
mov [eax] ebx +
cmp [esp+3Ch+var_14] ebx +
jz loc_443A2F  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_444005  +
cmp esi 20h +
jz loc_444140  +
test edi edi +
jz loc_443A47  +
cmp [esp+3Ch+var_18] 0Ah +
jnz loc_44412B  +
test esi 300000h +
jz loc_443A60  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_44418E  +
test edi edi +
jz loc_443A75  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_444201  +
mov edi esi +
and esi 2000h +
or edi 2 +
test esi esi +
jz loc_443A95  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_443F89  +
cmp [esp+3Ch+var_18] 2 +
jz loc_443EAB  +
cmp [esp+3Ch+var_18] 0Ah +
jz loc_443EA1  +
mov ecx [esp+3Ch+var_18] +
mov eax edi +
or edi 200h +
or ah 4 +
cmp ecx 10h +
cmovz eax edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jz loc_44390A  +
mov [esp+3Ch+var_2C] offset aDigitSeparator +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jnz loc_443D80  +
mov ecx 1 +
jmp loc_44391B  +
mov eax [esp+3Ch+var_14] +
lea esi [eax+1] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_443C2D  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
cmp dl 2Eh +
jz loc_443B59  +
movzx ecx dl +
test byte ptr [ecx+ecx+4D0621h] 1 +
jz loc_443BEA  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 10h +
lea esi [eax+2] +
movzx eax dl +
jmp loc_4438D6  +
and eax 0FFFFFFDFh +
cmp eax 45h +
jz loc_443984  +
test cl cl +
jnz loc_443D73  +
test ebp ebp +
jz loc_443C62  +
test ebp ebp +
mov ebx esi +
setnz al  +
test al al +
jnz loc_4439A0  +
cmp edi [esp+3Ch+var_18] +
jb loc_443CED  +
cmp [esp+3Ch+var_18] 2 +
jz loc_443E8D  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigitCI +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
xor eax eax +
jmp loc_443AC0  +
cmp dl 27h +
mov [esp+3Ch+var_18] 8 +
jnz loc_4438D6  +
mov edi [esp+3Ch+arg_0] +
cmp byte ptr [edi+276h] 0 +
jz loc_4438D6  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_0 +
jmp loc_443AE1  +
mov [esp+3Ch+var_2C] offset aTooManyDecimal +
jmp loc_443AE1  +
cmp dl 42h +
jnz loc_443C55  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
lea ecx [edx-30h] +
cmp cl 1 +
ja loc_443BEA  +
lea esi [edi+2] +
movzx eax dl +
mov [esp+3Ch+var_18] 2 +
jmp loc_4438D6  +
mov [esp+3Ch+var_18] 8 +
jmp loc_4438D6  +
cmp [esp+3Ch+var_18] 10h +
jz loc_443B8C  +
mov ecx [esp+3Ch+var_14] +
mov eax [esp+3Ch+arg_0] +
sub ecx esi +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ecx +
mov ecx esi +
call sub_442F40  +
test eax 300000h +
mov ebx eax +
jz loc_443E82  +
mov ecx [esp+3Ch+var_18] +
mov edi eax +
mov eax 0Ah +
or edi 2 +
cmp ecx 8 +
cmovnz eax ecx +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_443FBA  +
mov esi ebx +
and esi 2000h +
jmp loc_443A80  +
mov ecx [esp+3Ch+arg_0] +
cmp byte ptr [ecx+276h] 0 +
jz loc_4439A0  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_1 +
jmp loc_443AE1  +
test al al +
jz loc_443DAF  +
cmp [esp+3Ch+var_18] 2 +
jz loc_444075  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_4439BC  +
cmp byte ptr [esp+3Ch+var_1C] 0 +
jz loc_443FEB  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4440C1  +
cmp ebp 2 +
jz loc_444198  +
mov [esp+3Ch+var_2C] offset aHexadecimalFlo +
jmp loc_443AE1  +
mov esi [esp+3Ch+arg_0] +
xor ecx ecx +
cmp al 27h +
jz loc_4441DD  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 4 +
jnz loc_443D41  +
cmp al 27h +
jnz loc_443D6B  +
cmp byte ptr [esi+276h] 0 +
jnz loc_443D41  +
test cl cl +
jz loc_4439C5  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_2 +
jmp loc_443AE1  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aAdjacentDigitS +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edx +
call sub_43C750  +
xor eax eax +
jmp loc_443AC0  +
mov eax [esp+3Ch+var_14] +
mov edx ebx +
sub eax ebx +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_0] +
add eax 273h +
call sub_443490  +
test eax eax +
mov edx eax +
jnz loc_443F07  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_444082  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_44404E  +
mov eax [esp+3Ch+arg_8] +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
mov [eax] ebx +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_443F21  +
cmp ebp 40h +
jnz loc_443A80  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_443A80  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aUseOfC11LongLo +
mov edx offset aUseOfC99LongLo +
cmp byte ptr [ecx+248h] 0 +
cmovz eax edx +
cmp byte ptr [ecx+268h] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 7 +
mov [esp+3Ch+var_34] eax +
jz loc_444064  +
mov [esp+3Ch+var_3C] ecx +
call sub_43C7A0  +
jmp loc_443A80  +
mov ebx esi +
xor ebp ebp +
xor eax eax +
jmp loc_443B9B  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigit_0 +
jmp loc_443BBF  +
mov eax edi +
or ah 1 +
jmp loc_443AC0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+275h] 0 +
jnz loc_443EFD  +
cmp byte ptr [eax+26Ah] 0 +
jz loc_443EFD  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aBinaryConstant +
mov edx offset aBinaryConsta_0 +
cmp byte ptr [ecx+248h] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
cmovz eax edx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] eax +
call sub_43C750  +
mov eax edi +
or ah 8 +
jmp loc_443AC0  +
mov ebp eax +
mov esi eax +
mov edi eax +
and ebp 0F0h +
and esi 2000h +
or edi 1 +
jmp loc_443E09  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call loc_439560  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jnz loc_443E1A  +
cmp ebp 40h +
jz loc_444110  +
and dh 30h +
jz loc_443E1A  +
mov eax 6 +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_43C7A0  +
jmp loc_443E1A  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aImaginaryConst +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
jmp loc_443A95  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
jmp loc_443CC2  +
mov [esp+3Ch+var_2C] offset aNoDigitsInHexa +
jmp loc_443AE1  +
mov edi eax +
and edi 4000h +
jmp loc_443A18  +
mov [esp+3Ch+var_3C] eax +
call loc_439560  +
test eax eax +
jnz loc_443A2F  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 6 +
mov [esp+3Ch+var_3C] eax +
call sub_43C7A0  +
jmp loc_443A2F  +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
jmp loc_443E09  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C7F0  +
jmp loc_443A80  +
mov [esp+3Ch+var_2C] offset aInvalidPrefix0 +
jmp loc_443AE1  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aInvalidSuffix_ +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
xor eax eax +
jmp loc_443AC0  +
cmp byte ptr [eax+24Fh] 0 +
jnz loc_443D27  +
cmp byte ptr [eax+248h] 0 +
jz loc_444232  +
mov [esp+3Ch+var_2C] offset aUseOfC1zHexade +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
jmp loc_443D27  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_443F42  +
mov eax 7 +
jmp loc_443F50  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_0 +
jmp loc_444096  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_443A60  +
mov [esp+3Ch+var_2C] offset aSuffixForDoubl +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
jmp loc_443A60  +
xor edi edi +
mov esi 1000040h +
jmp loc_443A18  +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
jmp loc_444159  +
movzx eax byte ptr [ebx] +
cmp al 2Dh +
jz loc_4441A3  +
cmp al 2Bh +
jnz loc_4441AA  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 4 +
jnz loc_443D3D  +
cmp al 27h +
jnz loc_4441D0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jnz loc_443CE0  +
mov [esp+3Ch+var_2C] offset aExponentHasNoD +
jmp loc_443AE1  +
cmp byte ptr [esi+276h] 0 +
setnz cl  +
jmp loc_443D4B  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_1 +
jmp loc_444096  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aDecimalFloatCo +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C750  +
jmp loc_443A75  +
mov [esp+3Ch+var_2C] offset aUseOfC99Hexade +
jmp loc_4440E3  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0ACh+arg_0] +
mov eax [esp+0ACh+arg_8] +
mov edi [esp+0ACh+arg_0] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ebp [eax+0Ch] +
mov dword ptr [ebx] 0 +
mov eax [eax+8] +
mov dword ptr [ebx+4] 0 +
mov ebx [esp+0ACh+arg_C] +
mov byte ptr [edi+11h] 0 +
lea edx [ebp+eax+0] +
shr ebx 0Ch +
and ebx 1 +
cmp eax 1 +
mov [edi+10h] bl +
mov [esp+0ACh+var_7C] edx +
jz loc_444856  +
mov eax [esp+0ACh+arg_4] +
mov eax [eax+294h] +
mov [esp+0ACh+var_60] eax +
mov eax [esp+0ACh+arg_C] +
and eax 0F00h +
cmp eax 400h +
jz loc_444834  +
cmp eax 200h +
jz loc_444895  +
cmp eax 800h +
jz loc_4448D3  +
mov esi 0FFFFFFF7h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 0Ah +
mov [esp+0ACh+var_78] 0Ah +
cmp [esp+0ACh+var_60] 3Fh +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
ja loc_444325  +
mov ecx 40h +
sub ecx [esp+0ACh+var_60] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_444325  +
mov eax edx +
xor edx edx +
add eax esi +
adc edx edi +
mov edi [esp+0ACh+var_64] +
mov [esp+0ACh+var_A0] 0 +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_A4] edi +
call sub_470840  +
add eax 1 +
adc edx 0 +
cmp ebp [esp+0ACh+var_7C] +
jnb loc_444669  +
mov [esp+0ACh+var_4E] 0 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_444399  +
cmp [esp+0ACh+var_78] 10h +
jz loc_444748  +
cmp dl 27h +
jnz loc_444646  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+276h] 0 +
jz loc_444646  +
add ebp 1 +
cmp ebp [esp+0ACh+var_7C] +
jz loc_444646  +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
movzx ecx ds:word_4D0620[eax+eax] +
test cl 4 +
jz loc_444364  +
movzx ebx ds:byte_4D2FE0[eax] +
mov eax [esp+0ACh+arg_0] +
mov edx [eax+0Ch] +
cmp edx [esp+0ACh+var_80] +
mov eax [eax+8] +
jb loc_444720  +
ja loc_4443D7  +
cmp eax [esp+0ACh+var_84] +
jb loc_444720  +
mov edi [esp+0ACh+arg_0] +
mov esi [edi] +
mov edi [edi+4] +
mov [esp+0ACh+var_84] esi +
mov [esp+0ACh+var_80] edi +
mov edi [esp+0ACh+arg_0] +
movzx ecx byte ptr [edi+10h] +
mov edi [esp+0ACh+var_78] +
mov [esp+0ACh+var_4F] cl +
cmp edi 2 +
jz loc_444756  +
cmp edi 10h +
jz loc_444800  +
mov ecx [esp+0ACh+var_80] +
mov esi eax +
mov edi edx +
shr ecx 1Dh +
test ecx ecx +
mov ecx edx +
setnz [esp+0ACh+var_4D]  +
shld edi eax +
shl esi 3 +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
shr ecx 1Dh +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi 3 +
or ecx esi +
cmp [esp+0ACh+var_78] 0Ah +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] edi +
jnz loc_4447E2  +
mov esi eax +
mov edi edx +
shld edi eax +
add esi eax +
mov [esp+0ACh+var_5C] esi +
mov esi [esp+0ACh+var_84] +
mov eax edx +
mov [esp+0ACh+var_58] edi +
mov edi [esp+0ACh+var_80] +
shr eax 1Fh +
xor edx edx +
mov ecx ebx +
shld edi esi +
add esi esi +
add eax esi +
mov esi [esp+0ACh+var_5C] +
adc edx edi +
mov edi [esp+0ACh+var_58] +
xor ebx ebx +
add ecx esi +
adc ebx edi +
cmp edi ebx +
jb loc_4444A5  +
jbe loc_444880  +
add eax 1 +
adc edx 0 +
mov esi ebx +
mov ebx ecx +
add ebx [esp+0ACh+var_6C] +
adc esi [esp+0ACh+var_68] +
cmp [esp+0ACh+var_68] esi +
jb loc_4444C5  +
ja loc_4444BF  +
cmp [esp+0ACh+var_6C] ebx +
jbe loc_4444C5  +
add eax 1 +
adc edx 0 +
add eax [esp+0ACh+var_74] +
adc edx [esp+0ACh+var_70] +
cmp edx [esp+0ACh+var_70] +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jb loc_4447F0  +
ja loc_4444EF  +
mov eax [esp+0ACh+var_74] +
cmp [esp+0ACh+var_84] eax +
jb loc_4447F0  +
movzx ecx [esp+0ACh+var_4D] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_18] esi +
mov edi [esp+0ACh+var_60] +
mov byte ptr [esp+0ACh+var_14+1] cl +
mov [esp+0ACh+var_6C] eax +
mov [esp+0ACh+var_20] edx +
movzx edx [esp+0ACh+var_4F] +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_94] edi +
mov edi [esp+0ACh+var_6C] +
mov [esp+0ACh+var_1C] ebx +
mov byte ptr [esp+0ACh+var_14] dl +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_14] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A4] ebx +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+var_10] +
mov [esp+0ACh+var_98] eax +
lea eax [esp+0ACh+var_4C] +
call sub_441BD0  +
mov edi [esp+0ACh+var_48] +
mov ecx [esp+0ACh+var_40] +
mov edx [esp+0ACh+var_3C] +
mov eax [esp+0ACh+var_4C] +
mov [esp+0ACh+var_6C] edi +
mov [esp+0ACh+var_20] edi +
mov edi [esp+0ACh+var_44] +
xor ebx [esp+0ACh+var_44] +
mov [esp+0ACh+var_18] ecx +
xor ecx esi +
mov [esp+0ACh+var_14] edx +
shr dx 8 +
mov [esp+0ACh+var_1C] edi +
mov edi [esp+0ACh+var_38] +
or ecx ebx +
mov [esp+0ACh+var_24] eax +
mov [esp+0ACh+var_10] edi +
jz loc_444815  +
mov edx 1 +
mov byte ptr [esp+0ACh+var_14+1] dl +
mov eax [esp+0ACh+var_24] +
add ebp 1 +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [edx] eax +
mov eax [esp+0ACh+var_20] +
mov edi edx +
mov [edx+4] eax +
mov eax [esp+0ACh+var_1C] +
mov [edx+8] eax +
mov eax [esp+0ACh+var_18] +
mov [edx+0Ch] eax +
mov eax [esp+0ACh+var_14] +
mov ebx eax +
mov [edi+10h] eax +
mov eax [esp+0ACh+var_10] +
shr bx 8 +
or [esp+0ACh+var_4E] bl +
cmp ebp [esp+0ACh+var_7C] +
mov [edi+14h] eax +
jnz loc_444399  +
cmp [esp+0ACh+var_4E] 0 +
jz loc_44465E  +
test [esp+0ACh+arg_C] 1000000h +
jz loc_4448F5  +
mov eax [esp+0ACh+arg_0] +
movzx ebx byte ptr [eax+10h] +
test bl bl +
jnz loc_44470C  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+270h] 0 +
jnz loc_444870  +
mov eax [esp+0ACh+arg_0] +
mov ebx [esp+0ACh+arg_0] +
cmp [esp+0ACh+var_60] 40h +
mov ecx [esp+0ACh+var_60] +
mov edx [eax+4] +
mov esi [ebx+8] +
mov eax [eax] +
mov edi [ebx+0Ch] +
ja loc_4448B7  +
sub ecx 1 +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
and esi 1 +
xor esi 1 +
mov eax esi +
and eax 1 +
test al al +
jnz loc_44470C  +
cmp [esp+0ACh+var_78] 0Ah +
jnz loc_444701  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+268h] 1 +
mov [esp+0ACh+var_A4] offset aIntegerConstan +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] eax +
call sub_43C650  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [eax+10h] 1 +
mov eax [esp+0ACh+arg_0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0ACh+var_64] +
movzx ecx bl +
xor ebx ebx +
mov esi edi +
imul esi edx +
mul  edi +
add edx esi +
add ecx eax +
mov eax [esp+0ACh+arg_0] +
adc ebx edx +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
jmp loc_44438C  +
and ch 1 +
jz loc_44436F  +
jmp loc_4443AD  +
mov [esp+0ACh+var_5C] 1 +
mov [esp+0ACh+var_54] 3Fh +
movzx ecx byte ptr [esp+0ACh+var_54] +
mov edi [esp+0ACh+var_80] +
mov esi [esp+0ACh+var_84] +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_444781  +
mov esi edi +
xor edi edi +
mov ecx esi +
mov esi eax +
or ecx edi +
movzx ecx byte ptr [esp+0ACh+var_5C] +
mov edi edx +
setnz [esp+0ACh+var_4D]  +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_4447A1  +
mov edi esi +
xor esi esi +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_4447BF  +
mov edi esi +
xor esi esi +
movzx ecx byte ptr [esp+0ACh+var_54] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4447D2  +
mov eax edx +
xor edx edx +
mov ecx esi +
or ecx eax +
mov eax edx +
or eax edi +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] eax +
mov ecx ebx +
xor eax eax +
xor ebx ebx +
xor edx edx +
jmp loc_4444A5  +
mov ecx 1 +
jmp loc_4444F4  +
mov [esp+0ACh+var_5C] 4 +
mov [esp+0ACh+var_54] 3Ch +
jmp loc_444766  +
mov ecx [esp+0ACh+var_6C] +
mov ebx [esp+0ACh+var_84] +
mov esi [esp+0ACh+var_80] +
xor eax ebx +
xor ecx esi +
or ecx eax +
mov eax 1 +
cmovnz edx eax +
jmp loc_4445D4  +
add ebp 1 +
mov esi 0FFFFFFF9h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 8 +
mov [esp+0ACh+var_78] 8 +
jmp loc_4442FD  +
movzx eax byte ptr [ebp+0] +
sub eax 30h +
mov [edi+8] eax +
sar eax 1Fh +
mov [edi+0Ch] eax +
jmp loc_44470C  +
cmp byte ptr [eax+8] 0 +
jnz loc_44470C  +
jmp loc_444685  +
cmp [esp+0ACh+var_5C] ecx +
jbe loc_4444A5  +
lea esi [esi+0] +
jmp loc_44449F  +
add ebp 2 +
mov esi 0FFFFFFF1h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 10h +
mov [esp+0ACh+var_78] 10h +
jmp loc_4442FD  +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4446C6  +
add ebp 2 +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 2 +
mov [esp+0ACh+var_78] 2 +
jmp loc_4442FD  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A4] offset aIntegerConst_0 +
mov [esp+0ACh+var_A8] 2 +
mov [esp+0ACh+var_AC] eax +
call sub_43C650  +
jmp loc_44470C  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+238h] +
mov ebx [esi+23Ch] +
mov [esp+10h+var_10] eax +
sub ebx eax +
sar ebx 3 +
imul edx ebx +
lea edi [edx+edx*4+32h] +
shl edi 4 +
mov [esp+10h+var_C] edi +
call sub_452A70  +
add edi eax +
mov [esi+238h] eax +
lea eax [eax+ebx*8] +
mov [esi+23Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1CCh +
mov eax [esp+1CCh+arg_4] +
mov [esp+1CCh+var_EC] 0 +
mov [esp+1CCh+var_127] 1 +
mov [esp+1CCh+var_126] 0 +
mov [esp+1CCh+var_110] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_138] 0 +
mov ebp [eax+238h] +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+0E8h] 0 +
mov dword ptr [ebp+24h] 16h +
lea eax [esp+1CCh+var_EC] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
add [esp+1CCh+var_138] 1 +
mov [esp+1CCh+var_1CC] eax +
call sub_43B510  +
mov edi [esp+1CCh+var_EC] +
mov [esp+1CCh+var_150] edi +
movzx edx byte ptr [eax+4] +
mov [esp+1CCh+var_154] eax +
cmp dl 3Ch +
movzx eax dl +
ja loc_4458D2  +
jmp ds:off_4CF584[eax*4]  +
cmp [esp+1CCh+var_127] 0 +
jz loc_444A73  +
sub edx 25h +
cmp dl 17h +
mov [esp+1CCh+var_3C] 0 +
ja loc_446612  +
movzx edx dl +
jmp ds:off_4CF678[edx*4]  +
cmp [esp+1CCh+var_127] 0 +
jnz loc_445F70  +
movzx edx ds:byte_4CF781[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_445EB0  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1BC] offset aMissingBinaryO +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
lea esi [esi+0] +
xor eax eax +
add esp 1CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1CCh+var_127] 0 +
jz loc_444A5E  +
mov [esp+1CCh+var_178] 1Bh +
mov [esp+1CCh+var_17C] 1Bh +
mov eax [esp+1CCh+var_178] +
movzx edx ds:byte_4CF781[eax+eax] +
test dl 1 +
jnz loc_444B2E  +
mov eax [ebp+24h] +
mov edi eax +
jmp loc_445DDB  +
cmp [esp+1CCh+var_138] 1 +
setz [esp+1CCh+var_126]  +
movzx edx ds:byte_4CF781[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_445DB0  +
mov [esp+1CCh+var_17C] eax +
cmp [esp+1CCh+var_127] 0 +
jz loc_444A73  +
mov eax [ebp+24h] +
mov edi eax +
mov eax edi +
sub eax 1 +
cmp eax 1Bh +
ja loc_445906  +
cmp [esp+1CCh+var_17C] 14h +
jz loc_444CB0  +
mov eax [esp+1CCh+var_178] +
shr dl 1 +
and edx 1 +
movzx eax ds:byte_4CF780[eax+eax] +
mov [esp+1CCh+var_180] eax +
movzx eax ds:byte_4CF780[edi+edi] +
sub [esp+1CCh+var_180] edx +
cmp [esp+1CCh+var_180] eax +
jnb loc_444C43  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+25Dh] 0 +
jz loc_444BA3  +
test ds:byte_4CF781[edi+edi] 4 +
jnz loc_445E21  +
cmp edi 1Ch +
ja loc_445906  +
jmp ds:off_4CF6D8[edi*4]  +
mov eax [ebp+8] +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
xor ecx [ebp-14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
xor edx [ebp-18h] +
mov esi [ebp-20h] +
mov ebx [ebp-1Ch] +
mov [esp+1CCh+var_174] eax +
xor eax eax +
or ecx edx +
jz loc_446190  +
mov edx eax +
xor edx 1 +
cmp edi 18h +
cmovz eax edx +
movzx eax al +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] eax +
mov dword ptr [ebp-14h] 0 +
mov eax [ebp+20h] +
lea ebx [ebp-28h] +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
cmp byte ptr [ebp-0Fh] 0 +
jz loc_444C2C  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jz loc_445EC2  +
mov edi [ebx+24h] +
mov ebp ebx +
movzx eax ds:byte_4CF780[edi+edi] +
cmp [esp+1CCh+var_180] eax +
jb loc_444B85  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_444D40  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingInExpre +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_444AC0  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_446F9A  +
mov edx [ebp+8] +
mov [ebp-20h] edx +
mov edx [ebp+0Ch] +
mov [ebp-1Ch] edx +
mov edx [ebp+10h] +
mov [ebp-18h] edx +
mov edx [ebp+14h] +
mov [ebp-14h] edx +
mov edx [ebp+18h] +
mov [ebp-10h] edx +
mov edx [ebp+1Ch] +
mov [ebp-0Ch] edx +
mov edx [ebp+20h] +
mov [ebp-8] edx +
sub ebp 28h +
jz loc_444AC0  +
mov eax [esp+1CCh+var_178] +
sub eax 0Fh +
cmp eax 6 +
ja loc_445868  +
jmp ds:off_4CF74C[eax*4]  +
mov eax [ebp-48h] +
lea ebx [ebp-50h] +
mov edx [ebp-44h] +
or eax [ebp-40h] +
or edx [ebp-3Ch] +
or edx eax +
jz loc_445F85  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [ebp-20h] +
mov [ebp-48h] eax +
mov eax [ebp-1Ch] +
mov [ebp-44h] eax +
mov eax [ebp-18h] +
mov [ebp-40h] eax +
mov eax [ebp-14h] +
mov [ebp-3Ch] eax +
mov eax [ebp-10h] +
mov [ebp-38h] eax +
mov eax [ebp-0Ch] +
mov [ebp-34h] eax +
mov eax [ebp-8] +
mov [ebp-30h] eax +
cmp byte ptr [ebp-10h] 0 +
mov eax 1 +
jnz loc_444D22  +
movzx eax byte ptr [ebp+18h] +
mov [ebp-38h] al +
jmp loc_444C2C  +
mov eax [esp+1CCh+var_17C] +
sub eax 12h +
cmp eax 1 +
ja loc_446F76  +
cmp [esp+1CCh+var_17C] 16h +
jnz loc_444CB0  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+0E8h] +
test eax eax +
jz loc_444D78  +
cmp [esp+1CCh+var_126] 0 +
jz loc_446F46  +
cmp [esp+1CCh+var_138] 3 +
jnz loc_446F46  +
mov eax [esp+1CCh+arg_0] +
cmp [eax+238h] ebp +
jz loc_44725B  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov edx offset aElif +
mov eax offset aIf +
cmovz eax edx +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1BC] offset aUnbalancedStac +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
add esp 1CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jz loc_445FB4  +
mov eax [esp+1CCh+arg_0] +
xor edx edx +
sub dword ptr [eax+14h] 1 +
mov eax 1 +
mov [ebp-18h] eax +
mov eax [ebp+20h] +
mov [ebp-14h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_444C2C  +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_445FD0  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
xor eax eax +
xor edx edx +
jmp loc_444E09  +
mov eax [ebp+8] +
movzx edx byte ptr [ebp+18h] +
cmp byte ptr [ebp-10h] 0 +
mov ebx [ebp+10h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
mov esi [ebp-18h] +
mov ecx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_16C] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_164] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_15C] eax +
mov eax 1 +
cmovz eax edx +
cmp edi 9 +
jz loc_446171  +
cmp edi 0Ah +
jz loc_446BE0  +
xor ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
xor ecx [esp+1CCh+var_16C] +
xor edx [esp+1CCh+var_164] +
xor esi [esp+1CCh+var_174] +
mov [ebp-10h] al +
mov eax [ebp+20h] +
mov [ebp-18h] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] edx +
mov [ebp-1Ch] esi +
mov [ebp-14h] ecx +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_444C14  +
mov eax [ebp+10h] +
cmp edi 1Bh +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
mov esi [ebp+8] +
mov [esp+1CCh+var_C4] eax +
mov eax [ebp+14h] +
mov ebx [ebp+0Ch] +
mov [esp+1CCh+var_18C] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_188] ecx +
movzx ecx byte ptr [ebp+19h] +
mov [esp+1CCh+var_C0] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_BC] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_B8] eax +
jz loc_446AE5  +
cmp edi 1Ch +
jz loc_4469F2  +
cmp edi 0Eh +
jz loc_446630  +
mov eax [esp+1CCh+var_18C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_188] 0 +
or esi eax +
xor eax eax +
or ebx edx +
or esi ebx +
setz al  +
xor ecx ecx +
mov [esp+1CCh+var_18C] eax +
xor edx edx +
xor esi esi +
xor ebx ebx +
mov [ebp-20h] esi +
mov edi [esp+1CCh+var_188] +
mov esi [esp+1CCh+var_18C] +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-14h] edi +
mov [ebp-18h] esi +
mov [ebp-10h] dl +
mov [ebp-0Fh] cl +
mov [ebp-8] eax +
jmp loc_444C14  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
movzx ebx byte ptr [ebp-10h] +
mov esi [ebp+20h] +
mov [esp+1CCh+var_6C] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_170] edx +
mov edx [ebp-14h] +
test bl bl +
mov [esp+1CCh+var_68] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_64] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_60] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_5C] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_58] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_16C] eax +
movzx eax byte ptr [ebp-0Fh] +
mov byte ptr [esp+1CCh+var_14C] al +
mov eax [ebp+8] +
mov [esp+1CCh+var_54] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_50] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_4C] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_48] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_44] eax +
mov eax [ebp+1Ch] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_40] eax +
mov eax [ebp+8] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp+18h] +
jnz loc_445930  +
test al al +
jnz loc_445930  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+294h] +
cmp eax 40h +
mov [esp+1CCh+var_15C] eax +
jbe loc_446895  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_170] +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_174] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4450AB  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jz loc_4468C9  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_446870  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4450EA  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx ecx byte ptr [esp+1CCh+var_130] +
test al al +
mov byte ptr [esp+1CCh+var_12C] 0 +
mov [esp+1CCh+var_125] cl +
jnz loc_445959  +
mov edx [esp+1CCh+var_18C] +
mov eax ecx +
mov ecx [esp+1CCh+var_188] +
xor eax 1 +
mov [esp+1CCh+var_125] al +
mov byte ptr [esp+1CCh+var_44] 0 +
mov eax edx +
mov [esp+1CCh+var_50] ecx +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_48] ecx +
mov ecx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_18C] edx +
mov [esp+1CCh+var_4C] edx +
mov [esp+1CCh+var_1B4] ecx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_54] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_50] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_50] +
mov [esp+1CCh+var_4C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_48] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_48] +
mov [esp+1CCh+var_44] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_40] eax +
mov eax [esp+1CCh+var_54] +
mov ecx edx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_4C] +
mov [esp+1CCh+var_164] eax +
mov eax [esp+1CCh+var_18C] +
or ecx eax +
jnz loc_44596B  +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
mov ecx edx +
or ecx eax +
jz loc_4461A2  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_446D3F  +
lea ecx [eax-41h] +
sub eax 1 +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_164] +
xor eax eax +
xor edx edx +
mov esi [esp+1CCh+var_160] +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
and ebx eax +
and esi edx +
or esi ebx +
jnz loc_4452B9  +
mov [esp+1CCh+var_13C] ebp +
mov ebp [esp+1CCh+var_160] +
mov [esp+1CCh+var_134] edi +
mov edi [esp+1CCh+var_164] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_445296  +
mov ebp [esp+1CCh+var_13C] +
mov edi [esp+1CCh+var_134] +
mov eax [esp+1CCh+var_114] +
sub eax ecx +
mov ecx eax +
jmp loc_4459F9  +
mov [esp+1CCh+var_19C] edi +
mov eax [ebp+8] +
lea ebx [ebp-28h] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1B4] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_1B0] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_1AC] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_1A8] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_1A4] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_1A0] eax +
mov eax [ebx+8] +
mov [esp+1CCh+var_1CC] eax +
mov eax [ebx+0Ch] +
mov [esp+1CCh+var_1C8] eax +
mov eax [ebx+10h] +
mov [esp+1CCh+var_1C4] eax +
mov eax [ebx+14h] +
mov [esp+1CCh+var_1C0] eax +
mov eax [ebx+18h] +
mov [esp+1CCh+var_1BC] eax +
mov eax [ebx+1Ch] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442530  +
mov eax [esp+1CCh+var_10C] +
mov [ebx+8] eax +
mov eax [esp+1CCh+var_108] +
mov [ebx+0Ch] eax +
mov eax [esp+1CCh+var_104] +
mov [ebx+10h] eax +
mov eax [esp+1CCh+var_100] +
mov [ebx+14h] eax +
mov eax [esp+1CCh+var_FC] +
mov [ebx+18h] eax +
mov eax [esp+1CCh+var_F8] +
mov [ebx+1Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_444C14  +
mov eax [esp+1CCh+arg_0] +
mov edx [ebp-1Ch] +
mov eax [eax+294h] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_160] edx +
mov edx [ebp+8] +
mov [esp+1CCh+var_B4] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_9C] edx +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_B0] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_98] edx +
mov edx [ebp+10h] +
mov [esp+1CCh+var_AC] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_94] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_A8] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_90] edx +
mov edx [ebp+18h] +
mov [esp+1CCh+var_A4] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_A0] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_8C] edx +
mov edx [ebp+1Ch] +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test al al +
mov [esp+1CCh+var_88] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_15C] esi +
mov esi [ebp+10h] +
mov [esp+1CCh+var_158] edi +
mov edi [ebp+14h] +
jnz loc_445451  +
test dl dl +
jz loc_4461F3  +
mov byte ptr [esp+1CCh+var_14C] 1 +
mov byte ptr [esp+1CCh+var_134] 1 +
mov byte ptr [esp+1CCh+var_13C] 0 +
mov edx [esp+1CCh+var_188] +
xor ebx ebx +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_445488  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_158] +
mov ebx eax +
or ebx edx +
setnz bl  +
mov edx [esp+1CCh+var_164] +
lea eax [esp+1CCh+var_84] +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] edi +
call sub_442440  +
mov eax [esp+1CCh+var_84] +
mov edx [esp+1CCh+var_80] +
mov ecx [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C8] edi +
lea edi [esp+1CCh+var_24] +
mov [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_168] edx +
mov edx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_12C] ecx +
mov ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_130] eax +
mov eax edi +
call sub_442440  +
mov eax [esp+1CCh+var_20] +
mov edx 1 +
or eax [esp+1CCh+var_24] +
mov eax [esp+1CCh+var_15C] +
mov ecx [esp+1CCh+var_160] +
cmovnz ebx edx +
mov edx [esp+1CCh+var_158] +
mov esi [esp+1CCh+var_1C] +
mov [esp+1CCh+var_1CC] eax +
lea eax [esp+1CCh+var_24] +
mov edi [esp+1CCh+var_18] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_164] +
call sub_442440  +
mov eax [esp+1CCh+var_1C] +
add [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_20] +
mov edx [esp+1CCh+var_18] +
adc [esp+1CCh+var_168] edx +
add [esp+1CCh+var_16C] esi +
adc [esp+1CCh+var_168] edi +
mov edi eax +
or edi [esp+1CCh+var_24] +
mov edi 1 +
mov esi [esp+1CCh+var_16C] +
cmovnz ebx edi +
mov edi [esp+1CCh+var_168] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_80] edi +
mov eax [esp+1CCh+var_80] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1B4] edi +
lea edi [esp+1CCh+var_10C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
mov eax edi +
call sub_441BD0  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_12C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
xor ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_130] +
xor eax [esp+1CCh+var_18C] +
or eax ecx +
jz loc_446152  +
mov ebx 1 +
cmp byte ptr [esp+1CCh+var_13C] 0 +
jnz loc_446080  +
xor edx edx +
cmp byte ptr [esp+1CCh+var_134] 0 +
jnz loc_4456ED  +
test bl bl +
mov eax 1 +
jnz loc_4456EB  +
cmp [esp+1CCh+var_174] 40h +
mov ecx [esp+1CCh+var_174] +
ja loc_446606  +
mov eax [esp+1CCh+var_18C] +
sub ecx 1 +
mov edx [esp+1CCh+var_188] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
xor eax eax +
and ecx 1 +
xor ecx 1 +
mov ebx ecx +
movzx ecx byte ptr [esp+1CCh+var_13C] +
and ebx 1 +
xor ecx 1 +
cmp cl bl +
jz loc_4456EB  +
mov eax [esp+1CCh+var_18C] +
mov ebx esi +
mov ecx edi +
mov edx [esp+1CCh+var_188] +
or ebx eax +
or ecx edx +
or ebx ecx +
setnz al  +
mov edx eax +
movzx eax byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] esi +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_80] edi +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_74+1] dl +
mov byte ptr [esp+1CCh+var_74] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_78] ebx +
lea ebx [ebp-28h] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_7C] ecx +
mov [ebp-20h] eax +
mov eax [esp+1CCh+var_80] +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
mov eax [esp+1CCh+var_78] +
mov [ebp-14h] eax +
mov eax [esp+1CCh+var_74] +
mov [ebp-10h] eax +
mov eax [esp+1CCh+var_70] +
mov [ebp-0Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_444C14  +
mov eax [ebp+10h] +
mov ebx [ebp-20h] +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_16C] ebx +
mov ebx [ebp-1Ch] +
mov esi [ebp+14h] +
mov [esp+1CCh+var_15C] ecx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_164] ebx +
mov ebx [ebp-18h] +
mov [esp+1CCh+var_13C] edx +
mov eax [eax+294h] +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [ebp+18h] +
mov [esp+1CCh+var_1C0] ecx +
mov ecx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1BC] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1B4] esi +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B8] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_1CC] ebx +
mov [esp+1CCh+var_1C8] ecx +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
call sub_443540  +
cmp edi 19h +
jz loc_446033  +
cmp edi 3 +
jz loc_446030  +
cmp edi 2 +
jz loc_446C00  +
xor ecx ecx +
test al al +
mov edx 1 +
jz loc_44582A  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
jz loc_446FE5  +
xor edx edx +
xor ecx ecx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] edx +
mov [ebp-14h] ecx +
jmp loc_444C03  +
cmp dword ptr [ebp+24h] 11h +
jnz loc_44712D  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_4458B0  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [esp+1CCh+arg_0] +
add ebp 28h +
cmp ebp [eax+23Ch] +
jz loc_446B33  +
mov eax [esp+1CCh+var_17C] +
mov [esp+1CCh+var_127] 1 +
mov [ebp+24h] eax +
mov eax [esp+1CCh+var_154] +
mov [ebp+0] eax +
mov eax [esp+1CCh+var_150] +
mov [ebp+20h] eax +
jmp loc_4449D3  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_445868  +
mov eax [esp+1CCh+arg_0] +
add dword ptr [eax+14h] 1 +
jmp loc_445868  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_4458B0  +
jmp loc_445868  +
lea edx [eax-1] +
cmp edx 19h +
jbe loc_444B15  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1BC] offset aTokenSIsNotVal +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444A96  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] edi +
mov [esp+1CCh+var_1C4] offset aImpossibleOper +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_444AC0  +
mov eax [esp+1CCh+arg_0] +
mov byte ptr [esp+1CCh+var_12C] 1 +
mov byte ptr [esp+1CCh+var_130] 0 +
mov [esp+1CCh+var_125] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_15C] eax +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_445231  +
mov eax [esp+1CCh+var_15C] +
xor edx edx +
mov ebx [esp+1CCh+var_18C] +
lea esi [eax-1] +
lea ecx [eax-41h] +
xor eax eax +
mov [esp+1CCh+var_13C] esi +
mov esi [esp+1CCh+var_188] +
test cl 20h +
setnz dl  +
setz al  +
shl edx cl +
shl eax cl +
mov ecx ebx +
and esi edx +
and ecx eax +
mov ebx esi +
or ebx ecx +
jnz loc_447030  +
mov [esp+1CCh+var_134] ebp +
mov ecx [esp+1CCh+var_13C] +
mov [esp+1CCh+var_124] edi +
mov ebp [esp+1CCh+var_188] +
mov edi [esp+1CCh+var_18C] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_4459C2  +
mov eax [esp+1CCh+var_13C] +
mov ebp [esp+1CCh+var_134] +
mov edi [esp+1CCh+var_124] +
mov esi eax +
sub esi ecx +
mov ecx esi +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_44] 1 +
mov [esp+1CCh+var_1B0] ecx +
mov eax ebx +
mov [esp+1CCh+var_50] esi +
mov esi [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] ebx +
mov ebx [esp+1CCh+var_164] +
mov [esp+1CCh+var_164] ecx +
mov [esp+1CCh+var_48] esi +
mov esi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_4C] ebx +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_24] +
call sub_4420E0  +
mov eax [esp+1CCh+var_1C] +
mov ebx [esp+1CCh+var_24] +
mov esi [esp+1CCh+var_20] +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_18C] eax +
movzx eax byte ptr [esp+1CCh+var_14] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_124] ebp +
mov [esp+1CCh+var_120] edi +
mov edi esi +
mov esi ebx +
mov byte ptr [esp+1CCh+var_13C] al +
mov eax 1 +
mov ebx ecx +
mov [esp+1CCh+var_188] edx +
mov ebp eax +
mov [esp+1CCh+var_164] 0 +
mov [esp+1CCh+var_160] 0 +
mov [esp+1CCh+var_11C] 0 +
mov [esp+1CCh+var_118] 0 +
jmp loc_445B26  +
test ebx ebx +
jz loc_445D46  +
mov edx [esp+1CCh+var_188] +
mov ecx esi +
sub ebx 1 +
mov eax [esp+1CCh+var_18C] +
shl ecx 1Fh +
shrd esi edi +
shr edi 1 +
shrd eax edx +
shr edx 1 +
or ecx edx +
mov [esp+1CCh+var_18C] eax +
mov [esp+1CCh+var_188] ecx +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1C0] esi +
mov [esp+1CCh+var_1BC] edi +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [esp+1CCh+var_13C] +
mov [esp+1CCh+var_1B4] edx +
mov edx [esp+1CCh+var_168] +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_170] +
mov [esp+1CCh+var_1B8] eax +
mov eax ebp +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_174] +
call sub_443540  +
test al al +
jz loc_445AF8  +
mov edx [esp+1CCh+var_170] +
mov ecx [esp+1CCh+var_168] +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_68] edx +
mov edx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_60] ecx +
mov ecx ebp +
mov ebp [esp+1CCh+var_20] +
mov byte ptr [esp+1CCh+var_5C] cl +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] eax +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_64] edx +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B0] ebp +
mov [esp+1CCh+var_18] edx +
mov ecx [esp+1CCh+var_18] +
mov edx [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C] eax +
mov [esp+1CCh+var_1AC] eax +
mov [esp+1CCh+var_1A8] ecx +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_19C] 5 +
mov [esp+1CCh+var_1A4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1A0] ecx +
mov [esp+1CCh+var_1C8] edx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442530  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_58] edx +
mov edx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] edx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ecx +
mov edx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ecx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_5C] eax +
mov ebp eax +
shr ax 8 +
cmp ebx 3Fh +
mov [esp+1CCh+var_168] ecx +
mov [esp+1CCh+var_14C] ax +
ja loc_44753C  +
mov ecx ebx +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_164] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_160] +
or ecx edx +
mov edx [esp+1CCh+var_134] +
test ebx ebx +
mov [esp+1CCh+var_160] ecx +
mov [esp+1CCh+var_164] edx +
jnz loc_445B00  +
mov edi [esp+1CCh+var_120] +
mov ebp [esp+1CCh+var_124] +
cmp edi 7 +
jz loc_446B42  +
xor esi esi +
movzx ecx byte ptr [esp+1CCh+var_12C] +
cmp byte ptr [esp+1CCh+var_130] 0 +
jnz loc_446C30  +
mov edi ecx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov [ebp-18h] eax +
mov eax edi +
mov [ebp-10h] al +
mov eax esi +
mov [ebp-0Fh] al +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] ecx +
mov [ebp-14h] edx +
mov [ebp-8] eax +
jmp loc_444C14  +
cmp [esp+1CCh+var_127] 0 +
jz loc_445EB0  +
cmp eax 15h +
jz loc_446040  +
mov eax [esp+1CCh+var_178] +
cmp eax 16h +
jz loc_446060  +
mov edi [ebp+24h] +
mov [esp+1CCh+var_17C] eax +
mov eax edi +
and eax 0FFFFFFFDh +
cmp eax 14h +
jnz loc_4470F4  +
mov eax [esp+1CCh+var_17C] +
sub eax 15h +
cmp eax 1 +
jbe loc_444B41  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1BC] offset aOperatorSHasNo +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444A96  +
movzx eax byte ptr [ebp+18h] +
cmp al [ebp-10h] +
jz loc_444BA3  +
test al al +
mov eax [esp+1CCh+arg_0] +
mov ecx [eax+294h] +
jz loc_445EE0  +
cmp ecx 40h +
mov ebx [ebp-20h] +
mov esi [ebp-1Ch] +
mov eax [ebp-18h] +
mov edx [ebp-14h] +
jbe loc_446010  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_444BA3  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov edx [ebp-8] +
mov [esp+1CCh+var_1BC] offset aTheLeftOperand +
mov [esp+1CCh+var_1B8] eax +
jmp loc_445F41  +
mov eax [ebp+24h] +
mov edi eax +
mov eax [esp+1CCh+var_178] +
mov [esp+1CCh+var_17C] eax +
jmp loc_444B41  +
mov [esp+1CCh+var_1C4] offset aIntegerOverflo +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_444C2C  +
cmp ecx 40h +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
jbe loc_445FF0  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_444BA3  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1BC] offset aTheRightOperan +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 0 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
mov edi [ebp+24h] +
jmp loc_444BA3  +
mov [esp+1CCh+var_178] 1Ch +
mov [esp+1CCh+var_17C] 1Ch +
jmp loc_444AEA  +
mov eax [ebp+8] +
mov [ebp-48h] eax +
mov eax [ebp+0Ch] +
mov [ebp-44h] eax +
mov eax [ebp+10h] +
mov [ebp-40h] eax +
mov eax [ebp+14h] +
mov [ebp-3Ch] eax +
mov eax [ebp+18h] +
mov [ebp-38h] eax +
mov eax [ebp+1Ch] +
mov [ebp-34h] eax +
mov eax [ebp+20h] +
mov [ebp-30h] eax +
jmp loc_444D13  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or edx [ebp+10h] +
or eax [ebp+14h] +
or edx eax +
setnz al  +
xor edx edx +
movzx eax al +
jmp loc_444E09  +
mov ecx [ebp+8] +
xor edx edx +
mov eax 1 +
mov esi [ebp+0Ch] +
or ecx [ebp+10h] +
or esi [ebp+14h] +
or esi ecx +
jnz loc_444E09  +
jmp loc_444E52  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_445F14  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_445E77  +
xor eax 1 +
movzx eax al +
xor ecx ecx +
mov edx eax +
jmp loc_44582A  +
mov eax [ebp+24h] +
cmp eax 14h +
mov edi eax +
jz loc_447380  +
mov [esp+1CCh+var_17C] 15h +
jmp loc_445DDB  +
mov eax [ebp+24h] +
cmp eax 16h +
mov edi eax +
jz loc_44738D  +
mov [esp+1CCh+var_17C] 16h +
jmp loc_445DDB  +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_84] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_80] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
jmp loc_44567E  +
mov ecx [esp+1CCh+var_168] +
mov edx [esp+1CCh+var_16C] +
mov eax ecx +
mov ecx edx +
xor eax edi +
xor ecx esi +
or eax ecx +
mov eax 1 +
cmovnz ebx eax +
jmp loc_445670  +
and ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
and ecx [esp+1CCh+var_16C] +
and edx [esp+1CCh+var_164] +
and esi [esp+1CCh+var_174] +
jmp loc_444EBC  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
setz al  +
jmp loc_444BDD  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jnz loc_4461D4  +
mov [esp+1CCh+var_1BC] offset aDivisionByZero +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
mov edi ebx +
movzx esi byte ptr [esp+1CCh+var_14C] +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
jmp loc_445D87  +
cmp [esp+1CCh+var_174] 40h +
jbe loc_446730  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jz loc_446763  +
cmp [esp+1CCh+var_174] 40h +
mov eax [esp+1CCh+var_174] +
jbe loc_446710  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_158] +
mov eax [esp+1CCh+var_15C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_14C] 0 +
mov byte ptr [esp+1CCh+var_134] 0 +
jnz loc_445469  +
mov [esp+1CCh+var_90] edi +
mov eax [esp+1CCh+var_90] +
mov ebx [esp+1CCh+var_158] +
mov byte ptr [esp+1CCh+var_8C] 0 +
mov ecx [esp+1CCh+var_15C] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_8C] +
mov [esp+1CCh+var_98] ebx +
mov edx [esp+1CCh+var_98] +
xor byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_88] +
mov [esp+1CCh+var_94] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] ecx +
mov [esp+1CCh+var_1CC] ecx +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_98] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_98] +
mov [esp+1CCh+var_94] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_158] edx +
mov esi [esp+1CCh+var_94] +
mov [esp+1CCh+var_90] eax +
mov eax [esp+1CCh+var_FC] +
mov edi [esp+1CCh+var_90] +
mov [esp+1CCh+var_8C] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_88] eax +
mov eax [esp+1CCh+var_9C] +
mov [esp+1CCh+var_15C] eax +
movzx eax byte ptr [esp+1CCh+var_134] +
mov byte ptr [esp+1CCh+var_14C] al +
jmp loc_445469  +
lea eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_1C0] eax +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call loc_434320  +
mov esi [esp+1CCh+var_3C] +
xor edx edx +
test esi esi +
mov ecx eax +
jnz loc_446DA3  +
test ecx ecx +
js loc_447146  +
xor ebx ebx +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_446541  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C4] 0 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_443880  +
test eax 1000000h +
mov [esp+1CCh+var_E8] eax +
jnz loc_447005  +
mov edx eax +
and edx 0Fh +
cmp edx 1 +
jz loc_446FCF  +
cmp edx 2 +
jnz loc_446453  +
mov [esp+1CCh+var_1BC] offset aFloatingConsta +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
mov edi [esp+1CCh+var_3C] +
test edi edi +
setnz bl  +
jmp loc_4464E9  +
mov eax [esp+1CCh+var_154] +
mov edi [esp+1CCh+arg_0] +
mov eax [eax+8] +
cmp eax [edi+2ACh] +
jz loc_447271  +
mov edi [esp+1CCh+arg_0] +
cmp eax [edi+2BCh] +
jz loc_44711B  +
mov edi [esp+1CCh+arg_0] +
mov ecx 1 +
cmp eax [edi+2C0h] +
jz loc_44711D  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+248h] 0 +
jz loc_4464D3  +
mov edx [edi+2B0h] +
cmp eax edx +
jz loc_446F5C  +
cmp eax [edi+2B4h] +
jz loc_446F5C  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+265h] 0 +
jnz loc_446DB6  +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor eax eax +
xor edx edx +
xor esi esi +
xor edi edi +
jmp loc_446541  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_446D4E  +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_437980  +
mov edi [esp+1CCh+var_3C] +
xor edx edx +
mov eax [esp+1CCh+var_E8] +
mov byte ptr [esp+1CCh+var_18C] 0 +
test edi edi +
setnz bl  +
xor esi esi +
xor edi edi +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_14] bl +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_1C] eax +
mov byte ptr [esp+1CCh+var_14+1] cl +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_18] edx +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_D4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_D0] ecx +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov [esp+1CCh+var_18C] eax +
mov eax edx +
mov edx esi +
mov esi edi +
mov [esp+1CCh+var_E0] esi +
mov esi [esp+1CCh+var_18C] +
mov edi edx +
mov [esp+1CCh+var_D8] eax +
mov eax [esp+1CCh+var_E0] +
mov byte ptr [esp+1CCh+var_D4] bl +
mov byte ptr [esp+1CCh+var_D4+1] cl +
mov [esp+1CCh+var_E4] edx +
mov [ebp+0Ch] eax +
mov eax [esp+1CCh+var_D8] +
mov [esp+1CCh+var_DC] esi +
mov [ebp+8] edi +
mov [ebp+10h] esi +
mov [ebp+14h] eax +
mov eax [esp+1CCh+var_D4] +
mov [esp+1CCh+var_127] 0 +
mov [ebp+18h] eax +
mov eax [esp+1CCh+var_D0] +
mov [ebp+1Ch] eax +
jmp loc_4449D3  +
sub ecx 41h +
mov eax esi +
mov edx edi +
jmp loc_4456AD  +
mov [esp+1CCh+var_1C4] offset aEval_token +
mov [esp+1CCh+var_1C8] 4A2h +
mov [esp+1CCh+var_1CC] offset a____GccLibcp_1 +
call sub_424080  +
nop   +
mov edi [esp+1CCh+arg_0] +
not ebx  +
not esi  +
mov [esp+1CCh+var_174] ebx +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_16C] ebp +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov edx [esp+1CCh+var_BC] +
not ebx  +
mov [esp+1CCh+var_1CC] esi +
mov esi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] ebx +
mov ebp edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B4] ebp +
mov [esp+1CCh+var_1C8] esi +
mov [esp+1CCh+var_1BC] edx +
not edi  +
mov [esp+1CCh+var_1C4] edi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441BD0  +
mov eax [esp+1CCh+var_104] +
xor ecx ecx +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov edx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov edi [esp+1CCh+var_C4] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov ebp [esp+1CCh+var_C0] +
mov [esp+1CCh+var_BC] edx +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_B8] eax +
mov [esp+1CCh+var_188] ebp +
mov ebp [esp+1CCh+var_16C] +
jmp loc_444F74  +
lea ecx [eax-1] +
mov edx edi +
mov eax esi +
shrd eax edi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_44625F  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_160] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jnz loc_446231  +
mov ebx [esp+1CCh+var_188] +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_A4] 0 +
mov [esp+1CCh+var_B0] ebx +
mov ebx [esp+1CCh+var_160] +
mov edx ecx +
mov [esp+1CCh+var_B4] ecx +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_A8] ebx +
mov eax [esp+1CCh+var_A8] +
mov ebx [esp+1CCh+var_174] +
mov [esp+1CCh+var_AC] ecx +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_A4] +
mov [esp+1CCh+var_1B4] ebx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_A0] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_B4] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_B0] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_AC] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_A8] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_A8] +
mov [esp+1CCh+var_A4] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_A0] eax +
mov eax [esp+1CCh+var_B4] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_AC] +
mov [esp+1CCh+var_164] eax +
jmp loc_446231  +
lea ecx [eax-1] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_446887  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4450F3  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_168] +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_16C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4468B0  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jnz loc_4450C4  +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov byte ptr [esp+1CCh+var_5C] 0 +
mov edx ecx +
mov [esp+1CCh+var_6C] ecx +
mov ecx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_68] ebx +
mov ebx [esp+1CCh+var_168] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov eax ecx +
mov [esp+1CCh+var_60] ebx +
mov ebx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] ecx +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1B4] ebx +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov byte ptr [esp+1CCh+var_130] 1 +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov ecx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_58] edx +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ebx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] ecx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ebx +
mov ecx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ebx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_5C] eax +
mov [esp+1CCh+var_168] ebx +
mov ebx eax +
shr ax 8 +
mov [esp+1CCh+var_14C] ax +
jmp loc_4450C4  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_16C] ebp +
mov ebp [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov [esp+1CCh+var_C0] ebp +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_174] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C0] edx +
mov edx [esp+1CCh+var_BC] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_C4] edi +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1BC] edx +
mov [esp+1CCh+var_1B4] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C4] edi +
call sub_441C80  +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_FC] +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_BC] ecx +
mov ebp [esp+1CCh+var_16C] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_B8] eax +
mov eax [esp+1CCh+var_C4] +
mov [esp+1CCh+var_188] edx +
mov edx ecx +
shr cx 8 +
mov [esp+1CCh+var_18C] eax +
jmp loc_444F74  +
mov eax [esp+1CCh+arg_0] +
xor ecx ecx +
cmp byte ptr [eax+25Ah] 0 +
jz loc_444F74  +
mov edi [eax+14h] +
test edi edi +
jnz loc_444F74  +
mov [esp+1CCh+var_1C4] offset aTraditionalC_0 +
mov [esp+1CCh+var_1C8] 6 +
mov [esp+1CCh+var_1CC] eax +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_174] edx +
call sub_43C690  +
mov edx [esp+1CCh+var_174] +
mov ecx [esp+1CCh+var_16C] +
jmp loc_444F74  +
mov [esp+1CCh+var_1CC] eax +
call sub_444920  +
mov ebp eax +
jmp loc_44587E  +
movzx ebx byte ptr [esp+1CCh+var_12C] +
xor ecx ecx +
test bl bl +
jnz loc_446BBD  +
cmp [esp+1CCh+var_125] 0 +
jnz loc_446E2E  +
cmp [esp+1CCh+var_15C] 40h +
ja loc_446E00  +
movzx ecx byte ptr [esp+1CCh+var_114] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx edx [esp+1CCh+var_125] +
xor ecx ecx +
xor edx 1 +
cmp dl al +
jz loc_446BBD  +
mov edx [esp+1CCh+var_164] +
mov esi [esp+1CCh+var_11C] +
mov edi [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_160] +
or edx esi +
or eax edi +
or edx eax +
setnz cl  +
mov esi ecx +
mov edi ebx +
mov eax [esp+1CCh+var_164] +
mov edx [esp+1CCh+var_160] +
mov ecx [esp+1CCh+var_11C] +
mov ebx [esp+1CCh+var_118] +
jmp loc_445D87  +
or ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
or ecx [esp+1CCh+var_16C] +
or edx [esp+1CCh+var_164] +
or esi [esp+1CCh+var_174] +
jmp loc_444EBC  +
xor edx edx +
xor ecx ecx +
test al al +
jz loc_44582A  +
mov eax [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
xor eax esi +
or eax ebx +
jz loc_447045  +
mov edx 1 +
xor ecx ecx +
jmp loc_44582A  +
mov edi [esp+1CCh+var_170] +
mov esi [esp+1CCh+var_174] +
mov byte ptr [esp+1CCh+var_5C] cl +
mov byte ptr [esp+1CCh+var_5C+1] 0 +
mov [esp+1CCh+var_68] edi +
mov edi [esp+1CCh+var_168] +
mov edx esi +
mov [esp+1CCh+var_6C] esi +
mov esi [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_60] edi +
mov eax [esp+1CCh+var_60] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov esi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_5C] esi +
mov ecx esi +
shr si 8 +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] edx +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_60] +
mov [esp+1CCh+var_58] eax +
mov eax [esp+1CCh+var_6C] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_174] eax +
mov eax [esp+1CCh+var_64] +
mov [esp+1CCh+var_16C] eax +
jmp loc_445D75  +
lea ecx [eax-1] +
mov [esp+1CCh+var_114] ecx +
jmp loc_44525F  +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_447065  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+254h] 0 +
jz loc_446509  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAreA +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 1 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43C7A0  +
jmp loc_446509  +
mov ebx 1 +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_446541  +
mov edx [edi+14h] +
test edx edx +
jnz loc_4464E7  +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aSIsNotDefinedE +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 0Dh +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C4] eax +
call sub_43C7A0  +
mov eax [esp+1CCh+var_3C] +
test eax eax +
setnz bl  +
jmp loc_4464E9  +
mov ecx [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_11C] +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_446B8D  +
mov edi [esp+1CCh+var_118] +
mov esi [esp+1CCh+var_11C] +
mov byte ptr [esp+1CCh+var_2C] 0 +
mov byte ptr [esp+1CCh+var_2C+1] 0 +
mov [esp+1CCh+var_38] edi +
mov edi [esp+1CCh+var_160] +
mov edx esi +
mov [esp+1CCh+var_3C] esi +
mov esi [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_30] edi +
mov eax [esp+1CCh+var_30] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_34] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_2C] +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_28] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441C80  +
mov eax [esp+1CCh+var_10C] +
mov edi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_3C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_2C] edi +
mov ebx edi +
mov [esp+1CCh+var_38] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_34] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_118] edx +
mov [esp+1CCh+var_30] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_30] +
mov [esp+1CCh+var_28] eax +
mov eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_11C] eax +
mov eax [esp+1CCh+var_34] +
mov [esp+1CCh+var_164] eax +
jmp loc_446B5E  +
mov eax [esp+1CCh+arg_0] +
mov dword ptr [eax+0E8h] 0 +
jmp loc_444D78  +
cmp eax edx +
setz al  +
xor edx edx +
movzx eax al +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor esi esi +
xor edi edi +
jmp loc_446541  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset a?WithoutFollow +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_444AC0  +
mov eax [ebp+0] +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aMissingInExp_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
jmp loc_444AC0  +
test ah 20h +
jz loc_447099  +
mov [esp+1CCh+var_1BC] offset aImaginaryNumbe +
jmp loc_44642C  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_445826  +
jmp loc_44582A  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aUserDefinedLit +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
mov eax [esp+1CCh+var_E8] +
jmp loc_446411  +
mov eax [esp+1CCh+var_13C] +
xor ecx ecx +
mov [esp+1CCh+var_114] eax +
jmp loc_4459F9  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_446C1E  +
jmp loc_44582A  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAr_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43C750  +
jmp loc_446509  +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
lea edx [esp+1CCh+var_E4] +
mov [esp+1CCh+var_1CC] edx +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] eax +
call sub_444240  +
mov eax [esp+1CCh+var_DC] +
mov edx [esp+1CCh+var_E4] +
mov esi [esp+1CCh+var_E0] +
movzx ebx byte ptr [esp+1CCh+var_D4] +
mov [esp+1CCh+var_18C] eax +
movzx ecx byte ptr [esp+1CCh+var_D4+1] +
mov eax [esp+1CCh+var_D8] +
jmp loc_44659B  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1BC] offset aOperatorSHas_0 +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444A96  +
xor ecx ecx +
mov edx edi +
lea eax [esp+1CCh+var_E4] +
call sub_442DA0  +
jmp loc_4470BF  +
mov [esp+1CCh+var_1BC] offset aWithoutPrecedi +
mov [esp+1CCh+var_1C0] 0 +
mov eax [esp+1CCh+var_150] +
jmp loc_446FAF  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_20] 0FFFFFFFFh +
mov byte ptr [esp+1CCh+var_14] 0 +
mov byte ptr [esp+1CCh+var_14+1] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_1C] ecx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_24] 0FFFFFFFFh +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_20] +
mov [esp+1CCh+var_18] 0FFFFFFFFh +
mov [esp+1CCh+var_1CC] 0FFFFFFFFh +
mov [esp+1CCh+var_1C0] 0FFFFFFFFh +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_14] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_441BD0  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_24] eax +
mov eax [esp+1CCh+var_108] +
mov ebx ecx +
mov esi [esp+1CCh+var_24] +
shr bx 8 +
mov word ptr [esp+1CCh+var_18C] bx +
mov ebx [esp+1CCh+var_3C] +
mov [esp+1CCh+var_20] eax +
mov eax [esp+1CCh+var_104] +
mov [esp+1CCh+var_14] ecx +
mov edi [esp+1CCh+var_20] +
test ebx ebx +
mov [esp+1CCh+var_1C] eax +
mov eax [esp+1CCh+var_100] +
setnz bl  +
mov [esp+1CCh+var_18] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_10] eax +
mov eax [esp+1CCh+var_1C] +
jmp loc_446541  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or eax [ebp+14h] +
or edx [ebp+10h] +
or edx eax +
setnz al  +
jmp loc_444AC2  +
add byte ptr [edi+10h] 1 +
mov esi [edi+4Ch] +
mov [esp+1CCh+var_1CC] edi +
call sub_43B4A0  +
movzx edx byte ptr [eax+4] +
mov ebx eax +
xor eax eax +
cmp dl 14h +
jz loc_447470  +
cmp dl 35h +
jnz loc_4473B3  +
test eax eax +
mov ebx [ebx+8] +
jnz loc_44748F  +
test ebx ebx +
jz loc_4473DC  +
mov eax [esp+1CCh+arg_0] +
cmp esi [eax+4Ch] +
jz loc_44741B  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+266h] 0 +
jz loc_4472E5  +
mov [esp+1CCh+var_1C4] offset aThisUseOfDefin +
mov [esp+1CCh+var_1C8] 18h +
mov [esp+1CCh+var_1CC] eax +
call sub_43C6D0  +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
movzx eax word ptr [ebx+14h] +
jz loc_4473E9  +
shr ax 6 +
test al 80h +
jnz loc_447349  +
movzx edx word ptr [ebx+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [ebx+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_447430  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+218h] +
test eax eax +
jz loc_447349  +
mov edi [esp+1CCh+arg_0] +
mov edx [edi+20h] +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C8] edx +
call eax  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
mov [eax+0E8h] ebx +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_447405  +
xor eax eax +
xor edx edx +
mov [esp+1CCh+var_18C] eax +
xor ecx ecx +
mov eax edx +
xor ebx ebx +
xor edx edx +
xor esi esi +
jmp loc_44659B  +
mov [esp+1CCh+var_1BC] offset aMissingExpress +
jmp loc_447135  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov eax offset aIf +
mov edx offset aElif +
mov [esp+1CCh+var_1BC] offset aSWithNoExpress +
cmovz eax edx +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444A96  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aOperatorDefine +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
test byte ptr [ebx+6] 10h +
jnz loc_4474CC  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
jmp loc_447369  +
shr ax 6 +
test al 4 +
jnz loc_4472FC  +
mov eax [ebx+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [ebx+14h] +
jmp loc_4472F8  +
xor edx edx +
mov eax 1 +
test byte ptr [ebx+15h] 40h +
jnz loc_447369  +
jmp loc_44736D  +
add eax 30h +
cmp esi eax +
jnz loc_4472BD  +
jmp loc_4472E5  +
test al 4 +
jz loc_447455  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+228h] +
test eax eax +
jz loc_447455  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_1CC] edi +
call eax  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+214h] +
test eax eax +
jnz loc_447332  +
jmp loc_447349  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43B4A0  +
mov ebx eax +
movzx edx byte ptr [eax+4] +
mov eax 1 +
jmp loc_447291  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43B4A0  +
cmp byte ptr [eax+4] 15h +
jz loc_4472A5  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingAfterDe +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_4473DC  +
movzx eax byte ptr [ebx+4] +
xor ecx ecx +
mov word ptr [esp+1CCh+var_20+2] cx +
mov byte ptr [esp+1CCh+var_20] al +
lea eax [esp+1CCh+var_24] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1C8] ebx +
mov esi eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_4416D0  +
mov [esp+1CCh+var_1BC] esi +
mov [esp+1CCh+var_1C4] offset aSIsAnAlternati +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43C650  +
jmp loc_4473DC  +
lea ecx [ebx-40h] +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_11C] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_118] +
or ecx edx +
mov eax ecx +
mov ecx [esp+1CCh+var_134] +
mov [esp+1CCh+var_118] eax +
mov [esp+1CCh+var_11C] ecx +
jmp loc_445B00  +
***
push edi  +
push esi  +
push ebx  +
sub esp 28h +
mov ecx [esp+3Ch] +
mov ebx [esp+50h] +
mov eax [esp+38h] +
mov edx [esp+54h] +
mov [esp+10h] ecx +
mov ecx [esp+40h] +
mov esi [esp+10h] +
mov [esp+24h] ebx +
mov [esp+14h] ecx +
mov ecx [esp+44h] +
mov edi [esp+14h] +
mov [esp] esi +
mov [esp+18h] ecx +
mov ecx [esp+48h] +
mov ebx [esp+18h] +
mov [esp+4] edi +
mov [esp+1Ch] ecx +
mov ecx [esp+4Ch] +
mov esi [esp+1Ch] +
mov [esp+8] ebx +
test cl cl +
mov [esp+20h] ecx +
mov [esp+0Ch] esi +
jnz loc_447660  +
cmp edx 40h +
jbe loc_4476B0  +
lea ecx [edx-40h] +
cmp ecx 3Fh +
ja loc_447660  +
mov edi [esp+4] +
lea ecx [edx-41h] +
mov esi [esp] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_447660  +
mov ecx 80h +
mov edi 0FFFFFFFFh +
sub ecx edx +
mov esi 0FFFFFFFFh +
shrd esi edi +
xor edx edx +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
mov edx esi +
mov edi [esp+4] +
mov esi [esp] +
not edx  +
not ecx  +
or ecx edi +
or edx esi +
mov [esp] edx +
mov [esp+4] ecx +
nop   +
lea esi [esi+0] +
mov esi [esp] +
mov edi [esp+4] +
mov ebx [esp+8] +
mov ecx esi +
mov [esp+10h] esi +
mov esi [esp+0Ch] +
mov [eax] ecx +
mov [esp+14h] edi +
mov ecx [esp+14h] +
mov [eax+8] ebx +
mov [esp+1Ch] esi +
mov edx [esp+1Ch] +
mov [esp+18h] ebx +
mov [eax+4] ecx +
mov [eax+0Ch] edx +
mov edx [esp+20h] +
mov [eax+10h] edx +
mov edx [esp+24h] +
mov [eax+14h] edx +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edi [esp+0Ch] +
lea ecx [edx-1] +
mov esi [esp+8] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_447660  +
cmp edx 40h +
mov dword ptr [esp] 0FFFFFFFFh +
mov dword ptr [esp+4] 0FFFFFFFFh +
jz loc_447660  +
mov ecx 40h +
mov esi 0FFFFFFFFh +
sub ecx edx +
mov ebx 0FFFFFFFFh +
shrd ebx esi +
xor edx edx +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
cmovnz esi edx +
mov ecx ebx +
mov ebx [esp+8] +
mov edx ecx +
mov ecx esi +
mov esi [esp+0Ch] +
not edx  +
not ecx  +
or edx ebx +
or ecx esi +
mov [esp+8] edx +
mov [esp+0Ch] ecx +
jmp loc_447660  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+0Ch+arg_0] +
movzx ebp byte ptr [edi] +
jz loc_4477D9  +
mov edi eax +
lea esi [eax+1] +
mov eax ebp +
mov ebp edi +
lea esi [esi+0] +
movzx ebx byte ptr [edx] +
movzx edi bl +
test ds:word_4D0620[edi+edi] 0C00h +
jz loc_4477B0  +
test al al +
jz loc_447783  +
cmp bl 27h +
jz loc_4477BE  +
cmp bl 22h +
nop   +
jz loc_4477BE  +
jmp loc_4477C8  +
movzx ebx byte ptr [edx] +
test ds:word_4D0620[ebx+ebx] 0C00h +
jz loc_44778B  +
add edx 1 +
sub ecx 1 +
jnz loc_447774  +
mov edi esi +
mov byte ptr [esi-1] 20h +
add esi 1 +
test ecx ecx +
jnz loc_447750  +
mov esi ebp +
mov ebp eax +
sub edi esi +
mov eax edi +
mov edi [esp+0Ch+arg_0] +
mov ecx ebp +
mov [edi] cl +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 22h +
jz loc_4477BA  +
cmp bl 27h +
jnz loc_4477C8  +
test al al +
jz loc_4477D5  +
cmp al bl +
mov edi 0 +
cmovz eax edi +
mov edi esi +
add edx 1 +
mov [esi-1] bl +
sub ecx 1 +
jmp loc_447791  +
mov eax ebx +
jmp loc_4477C8  +
xor eax eax +
jmp loc_4477A0  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax+2D0h] +
mov eax [eax+2CCh] +
sub eax ecx +
cmp edx eax +
jbe loc_447930  +
mov eax [ebx+2C8h] +
mov edi ecx +
sub edi eax +
add edx edi +
lea esi [edx+edx*2] +
shr esi 1 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call sub_452A70  +
add esi eax +
mov [ebx+2C8h] eax +
add eax edi +
mov [ebx+2CCh] esi +
mov [ebx+2D0h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
test byte ptr [edx+15h] 1 +
jnz loc_447978  +
mov ecx [edx+18h] +
mov edi [ecx+4] +
or byte ptr [ecx+14h] 18h +
mov ebx [ecx+0Ch] +
mov [esp+30h+var_24] ebx +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_2C] edx +
call sub_439430  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_28] 0 +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_14] edx +
call sub_438C20  +
mov [esp+30h+var_30] eax +
mov ebp eax +
call strlen  +
mov [esp+30h+var_30] esi +
mov ebx eax +
lea eax [eax+1] +
mov [esp+30h+var_2C] eax +
call sub_43EFF0  +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov edi eax +
mov [esp+30h+var_30] eax +
call memcpy  +
mov edx [esp+30h+var_14] +
mov byte ptr [edi+ebx] 0Ah +
jmp loc_44795C  +
***
push ebx  +
sub esp 14h +
mov ebx [eax+2D0h] +
movzx ecx byte ptr [edx] +
add ebx 1 +
add edx 1 +
mov [ebx-1] cl +
movzx ecx byte ptr [edx] +
movzx eax cl +
test ds:word_4D0620[eax+eax] 204h +
jnz loc_4479E0  +
mov eax [esi+4Ch] +
mov ecx ebx +
mov [eax+8] edx +
mov eax [esi+2D0h] +
mov edx [esi+234h] +
mov [esp+18h+var_C] 1 +
sub ecx eax +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_43CE00  +
mov [esi+2D0h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov ebp [esi] +
mov edx [eax+2Ch] +
mov eax [esi+4Ch] +
mov [ebp+0] edi +
mov eax [eax+4] +
test eax eax +
jz loc_447B32  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 2Fh +
jnz loc_447A77  +
jmp loc_447B26  +
movzx eax byte ptr [ebx] +
add ebx 1 +
cmp al 2Fh +
jnz loc_447A74  +
cmp byte ptr [ebx-2] 2Ah +
jnz loc_447A74  +
mov [ebp+0] ebx +
xor ebx ebx +
cmp byte ptr [esi+8] 0 +
jz loc_447AF6  +
test ecx ecx +
jz loc_447B11  +
cmp byte ptr [esi+24Ch] 0 +
jnz loc_447AFF  +
mov edx [ebp+0] +
mov eax [esi+2D0h] +
mov [esp+34h+var_30] edi +
sub edx edi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_1C] edx +
call memcpy  +
mov edx [esp+34h+var_1C] +
add edx [esi+2D0h] +
test bl bl +
jz loc_447B81  +
lea eax [edx+1] +
mov [esi+2D0h] eax +
mov byte ptr [edx] 2Ah +
mov eax [esi+2D0h] +
lea edx [eax+1] +
mov [esi+2D0h] edx +
mov byte ptr [eax] 2Fh +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+24Bh] 0 +
jz loc_447A9C  +
mov eax [ebp+0] +
sub dword ptr [esi+2D0h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+2D0h] +
mov byte ptr [eax-1] 20h +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edi+2] +
movzx eax byte ptr [edi+2] +
jmp loc_447A77  +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] edx +
call sub_43E0A0  +
mov ecx [esp+34h+var_1C] +
test al al +
mov ebx eax +
jz loc_447A89  +
mov edx [esp+34h+var_18] +
mov [esp+34h+var_24] offset aUnterminated_0 +
mov [esp+34h+var_28] 0 +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] esi +
call sub_43C750  +
mov ecx [esp+34h+var_1C] +
jmp loc_447A89  +
mov eax [ebp+0] +
mov [esi+2D0h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax edx +
sub esp 1Ch +
mov edi [esi+2D0h] +
mov [esp+20h+var_14] ecx +
jmp loc_447BBB  +
mov eax edx +
mov edi ebx +
lea edx [eax+1] +
movzx ecx byte ptr [edx-1] +
lea ebx [edi+1] +
movzx ebp cl +
test byte ptr [ebp+ebp+4D0621h] 8 +
mov [ebx-1] cl +
jnz loc_447BB7  +
cmp cl 2Fh +
jnz loc_447BFF  +
cmp byte ptr [eax+1] 2Ah +
jnz loc_447BFF  +
mov ecx [esp+20h+var_14] +
test ecx ecx +
jz loc_447BFF  +
mov [esi+2D0h] ebx +
xor ecx ecx +
mov eax esi +
call sub_447A40  +
mov edi [esi+2D0h] +
jmp loc_447BBB  +
mov [esi+2D0h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx word ptr [edx+14h] +
shr cx 6 +
test cl 20h +
jz loc_447C80  +
push ebx  +
sub esp 18h +
and ecx 4 +
jnz loc_447C83  +
mov ecx [edx+18h] +
movzx ecx byte ptr [ecx+14h] +
and ecx 1 +
test cl cl +
jz loc_447C54  +
mov ecx [eax+4Ch] +
xor ebx ebx +
jmp loc_447C47  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_447C90  +
add ebx 1 +
cmp [ecx+14h] edx +
jnz loc_447C40  +
cmp ebx 14h +
jbe loc_447C40  +
mov edx [edx] +
mov [esp+1Ch+var_14] offset aDetectedRecurs +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_43C650  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
retn   +
cmp dword ptr [edx+18h] 0Ah +
setz cl  +
jmp loc_447C30  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [edx] +
mov ebx [eax] +
mov [edx+4] eax +
mov [edx+2D8h] ebx +
mov ebx [eax+10h] +
mov [edx+2DCh] ebx +
mov ebx [eax+8] +
mov [edx+2E0h] ebx +
mov [eax] ecx +
mov [eax+4] ecx +
add ecx [esp+arg_8] +
mov byte ptr [eax+38h] 0 +
mov [eax+10h] ecx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov ecx [eax+2D8h] +
mov [edx] ecx +
mov ecx [eax+2DCh] +
mov [edx+10h] ecx +
mov ecx [eax+2E0h] +
mov byte ptr [edx+38h] 1 +
mov [edx+4] ecx +
mov dword ptr [eax+4] 0 +
retn   +
***
push esi  +
mov ebx [esp+18h+arg_0] +
jmp loc_448B5C  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_447D10  +
test al al +
jnz loc_448B75  +
mov eax [ebx] +
cmp byte ptr [eax+38h] 0 +
jz loc_448B40  +
mov [esp+18h+var_18] ebx +
call sub_43E4A0  +
test al al +
jnz loc_448B40  +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_448B5C  +
mov eax [ebx] +
test eax eax +
setnz al  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
mov ecx [esp+arg_0] +
test byte ptr [ecx+14h] 1 +
jz loc_448BD8  +
cmp word ptr [ecx+10h] 0 +
jz loc_448BD8  +
mov edx [ecx+4] +
movzx ebx word ptr [edx+4] +
mov eax [edx] +
test bx bx +
jz loc_448BDB  +
mov esi [ecx] +
mov ecx eax +
mov ebx [esi+ebx*4-4] +
add ecx 0Dh +
and ecx 0FFFFFFF8h +
add edx ecx +
mov ecx [edx] +
mov edi [ebx+4] +
movzx ebx word ptr [edx+4] +
add edi ecx +
add eax edi +
test bx bx +
jnz loc_448BB6  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+0Ch] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
test byte ptr [edi+14h] 1 +
jz loc_448C57  +
cmp word ptr [edi+10h] 0 +
jz loc_448C57  +
mov ebx [edi+4] +
jmp loc_448C2B  +
mov edx [edi] +
mov esi [edx+eax*4-4] +
mov edx [esi+4] +
mov eax [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [ebx] +
add ebp [esi+4] +
lea edx [eax+0Dh] +
mov esi ebp +
and edx 0FFFFFFF8h +
add ebx edx +
mov edx [ebx] +
lea eax [ebx+6] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_14] edx +
call memcpy  +
movzx eax word ptr [ebx+4] +
add esi [ebx] +
test ax ax +
mov ebp esi +
jnz loc_448C01  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [edi+0Ch] +
mov eax [edi+4] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
add esi [edi+0Ch] +
add esp 1Ch +
pop ebx  +
mov ebp esi +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+2C8h] +
mov ebp [ebx+4Ch] +
mov [ebx+2D0h] eax +
mov eax [ebx] +
mov eax [eax] +
mov [ebp+8] eax +
mov edx [ebx] +
mov edx [edx+10h] +
mov [ebp+0Ch] edx +
sub edx eax +
mov eax ebx +
call sub_4478E0  +
mov edx [ebp+8] +
cmp byte ptr [edx] 28h +
jz loc_448D45  +
movzx ecx byte ptr [ebx+24Ch] +
mov eax ebx +
mov edi [ebx] +
call sub_447BA0  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_447D10  +
sub byte ptr [ebx+10h] 1 +
test esi esi +
jz loc_448E2E  +
mov edx [ebx+2C8h] +
mov ecx [ebx+2D0h] +
cmp edx ecx +
jb loc_448D17  +
jmp loc_448D27  +
sub ecx 1 +
cmp ecx edx +
jz loc_448D27  +
movzx eax byte ptr [ecx-1] +
test ds:word_4D0620[eax+eax] 0C00h +
jnz loc_448D10  +
mov [ebx+2D0h] ecx +
mov eax ebx +
xor ecx ecx +
mov edx esi +
call sub_4477E0  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4Ch] +
mov edx [eax+8] +
add edx 1 +
jmp loc_448D72  +
mov eax [ebx+4Ch] +
mov ecx 1 +
mov edx [eax+8] +
mov eax ebx +
call sub_447BA0  +
mov edi eax +
movzx eax byte ptr [eax] +
cmp al 2Ch +
jnz loc_448E35  +
lea edx [edi+1] +
mov ecx 1 +
mov eax ebx +
call sub_447BA0  +
mov edi eax +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr [edx+edx+4D0621h] 2 +
jnz loc_448DA1  +
cmp al 24h +
jnz loc_448E8E  +
cmp byte ptr [ebx+262h] 0 +
jz loc_448DC2  +
mov edx edi +
mov eax ebx +
call sub_4479D0  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] eax +
call sub_43B530  +
test al al +
jz loc_448D50  +
mov [esp+1Ch+var_14] offset aSyntaxErrorInM +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] ebx +
call sub_43C650  +
xor edx edx +
mov eax [ebx+4Ch] +
cmp byte ptr [edi] 29h +
setz dl  +
add edi edx +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [esi] eax +
mov edx [ebp+8] +
mov eax ebx +
movzx ecx byte ptr [ebx+24Ch] +
mov esi [ebx] +
call sub_447BA0  +
mov [esi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] ebx +
call sub_447D10  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
jmp loc_448D3D  +
xor eax eax +
jmp loc_448D3D  +
cmp al 29h +
jnz loc_448DC2  +
movzx ecx word ptr [esi+10h] +
mov eax [ebx+4Ch] +
add edi 1 +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov edi [ebx] +
mov edx [eax+8] +
mov [esi] edx +
lea edx [edx+ecx*4] +
mov [eax+8] edx +
mov eax ebx +
or byte ptr [esi+14h] 1 +
mov edx [ebp+8] +
movzx ecx byte ptr [ebx+24Ch] +
call sub_447BA0  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_447D10  +
sub byte ptr [ebx+10h] 1 +
jmp loc_448CF8  +
cmp al 29h +
jnz loc_448DC2  +
movzx ecx word ptr [esi+10h] +
test cx cx +
jz loc_448E3D  +
nop   +
jmp loc_448DC2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov eax [esi+0Ch] +
add eax [ebx+0Ch] +
mov [esp+2Ch+var_2C] eax +
call sub_4529F0  +
mov ecx [ebx+0Ch] +
cmp word ptr [ebx+10h] 0 +
mov byte ptr [esp+2Ch+var_E] 0 +
mov byte ptr [esp+2Ch+var_E+1] 0 +
mov ebp eax +
lea eax [eax+ecx] +
mov [esp+2Ch+var_20] eax +
jz loc_448F86  +
mov esi [esi+4] +
mov ebx [ebx+4] +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jz loc_448F41  +
jmp loc_448F6F  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_448F6F  +
cmp word ptr [ebx+4] 0 +
jz loc_448FD0  +
mov eax [ebx] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add ebx eax +
mov eax [esi] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add esi eax +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jnz loc_448F6F  +
mov ecx [ebx] +
lea eax [esp+2Ch+var_E] +
lea edx [ebx+6] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_447730  +
mov ecx [esi] +
lea edx [esi+6] +
mov edi eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_447730  +
cmp edi eax +
jz loc_448F00  +
mov ebx 1 +
mov [esp+2Ch+var_2C] ebp +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+4] +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_447730  +
mov ecx [esi+0Ch] +
mov edx [esi+4] +
mov ebx eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_447730  +
cmp ebx eax +
jnz loc_448F6F  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
setnz bl  +
jmp loc_448F74  +
xor ebx ebx +
jmp loc_448F74  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_449000  +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp sub_45CF10  +
mov eax [eax+4] +
mov [esp+arg_0] eax +
jmp sub_45CF10  +
***
sub esp 18h +
mov eax [eax+18h] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov eax [eax] +
mov edx [eax+4] +
test edx edx +
jz loc_449072  +
mov ebx [eax+0Ch] +
cmp byte ptr [ebx+62h] 0 +
jnz loc_449072  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_449080  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
cmp word ptr [ebx+60h] 1 +
jnz loc_449072  +
cmp byte ptr [ebx+64h] 0 +
jnz loc_449072  +
mov eax [esp+14h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_4490B3  +
mov esi [esp+14h+arg_4] +
mov edx [esi+4] +
lea ecx [edx+1] +
shl edx 2 +
mov esi [esp+14h+arg_4] +
mov [esi+4] ecx +
mov ecx [ebx+4] +
mov [eax+edx] ecx +
jmp loc_449072  +
mov eax [esp+14h+arg_4] +
mov eax [eax+4] +
mov [esp+14h+var_10] 4 +
mov [esp+14h+var_14] eax +
call sub_452A20  +
mov esi [esp+14h+arg_4] +
xor edx edx +
mov ecx 1 +
mov [esi] eax +
jmp loc_4490A4  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_452D10  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_449140  +
mov edx [eax] +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] eax +
call sub_452D10  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
mov edx [eax+4] +
jmp loc_449123  +
***
sub esp 18h +
mov edx [eax+0ACh] +
mov ecx [edx] +
cmp ecx 7Fh +
jz loc_449174  +
lea eax [ecx+1] +
mov [edx] eax +
shl ecx 4 +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
mov [esp+18h+var_18] 7F8h +
call sub_4529F0  +
mov edx [ebx+0ACh] +
xor ecx ecx +
shl ecx 4 +
mov [eax+4] edx +
mov edx eax +
mov dword ptr [eax] 0 +
mov [ebx+0ACh] eax +
mov eax 1 +
mov [edx] eax +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
call sub_45CF10  +
mov edx [edi+0A8h] +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] eax +
call sub_45CB50  +
mov ebx [eax] +
mov edx eax +
test ebx ebx +
jnz loc_4491F6  +
jmp loc_449208  +
mov ebx [ebx] +
test ebx ebx +
jz loc_449208  +
mov eax [ebx+4] +
test eax eax +
jnz loc_4491F0  +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 24h +
mov [esp+38h+var_38] 1 +
mov [esp+38h+var_1C] edx +
call sub_452A20  +
mov ebx eax +
mov eax [edi+70h] +
mov [ebx+4] esi +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call strlen  +
mov dword ptr [ebx+18h] 0 +
mov [ebx+8] eax +
mov eax ebp +
mov [ebx+0Ch] al +
mov eax edi +
call sub_449150  +
mov edx [esp+38h+var_1C] +
mov ecx [edx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov ecx [edi+1Ch] +
mov ecx [ecx+28h] +
mov [eax+0Ch] ebx +
mov [eax+8] ecx +
mov [edx] eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
mov eax [esp+arg_4] +
mov eax [eax] +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp strcmp  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
cmp byte ptr [eax] 0 +
jnz loc_4493C1  +
mov dword ptr [ebx+58h] 0 +
xor eax eax +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_fstati64  +
mov esi ds:__imp__errno +
test eax eax +
jnz loc_4493A0  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jz loc_449392  +
mov dword ptr [ebx+5Ch] 0 +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 2 +
mov eax [ebx+58h] +
mov [esp-58h+arg_4C] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
call esi  +
mov eax [eax] +
mov [ebx+5Ch] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 1B6h +
mov [esp+14h+var_10] 8000h +
mov [esp+14h+var_14] eax +
call _open_0  +
cmp eax 0FFFFFFFFh +
mov [ebx+58h] eax +
jnz loc_449358  +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 0Dh +
jz loc_449402  +
call esi  +
cmp dword ptr [eax] 14h +
jnz loc_4493B2  +
lea esi [esi+0] +
jmp loc_449427  +
mov eax [ebx+4] +
lea edx [ebx+28h] +
mov [esp-58h+arg_50] edx +
mov [esp-58h+arg_4C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_449431  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_449431  +
call esi  +
mov dword ptr [eax] 2 +
jmp loc_4493B2  +
call esi  +
mov dword ptr [eax] 0Dh +
jmp loc_4493B2  +
***
mov edi edx +
push esi  +
xor esi esi +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+1Ch] +
cmp dword ptr [eax+2Ch] 1 +
jbe loc_449460  +
mov eax [ebx] +
test eax eax +
jz loc_449460  +
movzx esi byte ptr [eax+3Dh] +
cmp byte ptr [ebx+12h] 0 +
mov ebp [ebx+28Ch] +
jz loc_449474  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:__imp__errno +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
call edx  +
mov edx [edi+5Ch] +
mov ecx [esp-38h+arg_48] +
mov [eax] edx +
xor eax eax +
or esi ecx +
setnz al  +
mov edx [esp-38h+arg_44] +
cmp ebp eax +
jg loc_4494D7  +
cmp dword ptr [ebx+28Ch] 0 +
jz loc_4494E0  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_4494E0  +
mov eax [edi+4] +
test eax eax +
jz loc_44953D  +
mov edi [esp-38h+arg_6C] +
mov [esp-38h+arg_34] eax +
mov [esp-38h+arg_30] 0 +
mov [esp-38h+arg_2C] ebx +
mov [esp-38h+arg_38] edi +
call sub_43C990  +
jmp loc_44946C  +
cmp byte ptr [ebx+290h] 0 +
jnz loc_449514  +
mov eax [edi+4] +
test eax eax +
jz loc_449510  +
mov edi [esp-38h+arg_6C] +
mov [esp-38h+arg_2C] ebx +
mov [esp-38h+arg_34] eax +
mov [esp-38h+arg_30] 6 +
mov [esp-38h+arg_38] edi +
call sub_43C990  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
jmp loc_4494E7  +
call edx  +
cmp dword ptr [eax] 2 +
jnz loc_4494E0  +
mov edx [edi] +
mov eax [ebx+180h] +
mov [esp-38h+arg_30] edx +
mov [esp-38h+arg_2C] eax +
call sub_44BAD0  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_4494E0  +
jmp loc_44946C  +
mov eax [edi] +
nop   +
jmp loc_4494B9  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 20h +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
add esp 1Ch +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call strlen  +
mov ebp eax +
lea eax [ebx+eax+2] +
mov [esp+24h+var_24] eax +
call sub_4529F0  +
mov edx [esp+24h+var_18] +
mov esi eax +
mov eax [edx] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcpy  +
test ebx ebx +
jz loc_4495CA  +
movzx eax byte ptr [esi+ebx-1] +
cmp al 5Ch +
jnz loc_4495F0  +
add ebx esi +
add ebp 1 +
mov [esp+24h+var_1C] ebp +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
call memcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_4495CA  +
mov byte ptr [esi+ebx] 2Fh +
add ebx 1 +
jmp loc_4495CA  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax+8] +
lea eax [esi+2Ah] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
mov eax [edi+4] +
lea ebx [esp+38h+var_1E+1] +
and ebx 0FFFFFFF0h +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ebx +
call memcpy  +
test esi esi +
jz loc_449646  +
movzx eax byte ptr [ebx+esi-1] +
cmp al 5Ch +
jnz loc_4497A7  +
mov eax 6363h +
mov dword ptr [ebx+esi] 64616568h +
mov dword ptr [ebx+esi+4] 672E7265h +
mov [ebx+esi+8] ax +
mov byte ptr [ebx+esi+0Ah] 0 +
mov [esp+38h+var_34] offset aR +
mov [esp+38h+var_38] ebx +
call j_fopen  +
mov [esp+38h+var_38] 24h +
mov esi eax +
call sub_4529F0  +
test esi esi +
mov [edi+14h] eax +
jz loc_4497E7  +
lea eax [edi+4] +
xor ebx ebx +
mov [ebp+var_1E+2] 9 +
mov [ebp+var_28] eax +
jmp loc_4496AF  +
movzx eax cl +
test ds:word_4D0620[eax+eax] 0C00h +
jz loc_4496E0  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_4496A0  +
mov [esp+38h+var_38] esi +
call fclose  +
mov eax [edi+14h] +
lea edi ds:0[ebx*4] +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+2] +
cmp eax [ebp+var_1E+2] +
mov [ebp-20h] eax +
ja loc_4497C0  +
mov eax [edi+14h] +
lea edx ds:0[ebx*4] +
lea ebx [eax+edx] +
mov eax ecx +
mov [ebp+var_24] edx +
mov edx esi +
call sub_449270  +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
jz loc_449724  +
movzx edx al +
test byte ptr ds:word_4D0620[edx+edx] 1 +
jnz loc_44970A  +
mov edx esi +
call sub_449270  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jnz loc_449770  +
mov eax [edi+14h] +
mov edx [ebp+var_24] +
mov [eax+edx+4] ebx +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jz loc_449762  +
nop   +
lea esi [esi+0] +
cmp eax 0FFFFFFFFh +
jz loc_449762  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jnz loc_449750  +
mov ebx [ebp-20h] +
jmp loc_4496AF  +
cmp al 2Fh +
jz loc_449734  +
test al al +
jz loc_44977E  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_449734  +
mov edx [ebp+var_24] +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea eax [eax+edx+4] +
mov edx [ebp+var_28] +
mov [ebp+var_24] eax +
mov eax ebx +
call sub_449580  +
mov edx [ebp+var_24] +
mov [edx] eax +
mov [esp+38h+var_38] ebx +
call free  +
jmp loc_449755  +
cmp al 2Fh +
jz loc_449646  +
mov byte ptr [ebx+esi] 2Fh +
add esi 1 +
jmp loc_449646  +
add [ebp+var_1E+2] 8 +
mov edx [ebp+var_1E+2] +
mov eax [edi+14h] +
mov [ebp+var_24] ecx +
shl edx 2 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] eax +
call sub_452A70  +
mov ecx [ebp+var_24] +
mov [edi+14h] eax +
jmp loc_4496F2  +
xor edi edi +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov dword ptr [esp+8] 8 +
mov [esp] ebx +
mov [esp+4] esi +
call memcmp  +
test eax eax +
jnz loc_44985A  +
cmp byte ptr [ebx+18h] 0 +
lea edi [ebx+8] +
jz loc_449861  +
lea eax [esi+8] +
mov dword ptr [esp+8] 10h +
mov [esp+4] eax +
mov [esp] edi +
call memcmp  +
test eax eax +
jnz loc_44985A  +
cmp byte ptr [ebx+19h] 0 +
jnz loc_44985A  +
movzx eax byte ptr [esi+18h] +
xor eax 1 +
movzx eax al +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+1Ch] +
lea edi [ebx+8] +
mov edx [eax+14h] +
mov [esp+8] edi +
mov eax [eax+40h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_4674E0  +
mov byte ptr [ebx+18h] 1 +
jmp loc_44982F  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
movzx ebx byte ptr [edx+65h] +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_1C] ecx +
test bl bl +
jnz loc_4499C5  +
movzx eax byte ptr [edx+63h] +
test al al +
mov [esp+44h+var_16] al +
jnz loc_4499C5  +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_4499C5  +
cmp dword ptr [edx+58h] 0FFFFFFFFh +
jz loc_4499D0  +
movzx eax word ptr [edi+2Eh] +
and ax 0F000h +
cmp ax 3000h +
jz loc_449A34  +
cmp ax 8000h +
jz loc_449A77  +
mov eax 2010h +
mov ebx 2000h +
mov [esp+44h+var_15] 0 +
mov [esp+44h+var_44] eax +
xor ebp ebp +
call sub_4529F0  +
mov esi eax +
lea esi [esi+0] +
mov edx [edi+58h] +
mov eax ebx +
sub eax ebp +
mov [esp+44h+var_3C] eax +
lea eax [esi+ebp] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edx +
call _read_0  +
cmp eax 0 +
jle loc_449957  +
add ebp eax +
cmp ebp ebx +
jnz loc_449910  +
cmp [esp+44h+var_15] 0 +
jnz loc_449A70  +
lea ebx [ebp+ebp+0] +
lea eax [ebx+10h] +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_40] eax +
call sub_452A70  +
mov esi eax +
jmp loc_449910  +
jnz loc_449A91  +
cmp ebp ebx +
nop   +
jnz loc_4499F7  +
mov ecx ebp +
mov edx [esp+44h+var_20] +
add ebx 10h +
mov eax [edx+280h] +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_3C] esi +
mov ebp eax +
lea eax [edi+40h] +
mov [esp+44h+var_2C] eax +
lea eax [edi+18h] +
mov [esp+44h+var_30] eax +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edx +
call sub_4349C0  +
mov byte ptr [edi+65h] 1 +
mov [edi+14h] eax +
movzx eax [esp+44h+var_16] +
mov [edi+63h] al +
mov eax [edi+58h] +
mov [esp+44h+var_44] eax +
call _close_0  +
movzx ebx byte ptr [edi+63h] +
mov dword ptr [edi+58h] 0FFFFFFFFh +
xor ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edx +
call sub_449340  +
test al al +
mov ebx eax +
jnz loc_4498D2  +
mov eax [esp+44h+var_1C] +
xor ecx ecx +
mov edx edi +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+var_20] +
call sub_449440  +
jmp loc_4499C5  +
cmp [esp+44h+var_15] 0 +
jz loc_449966  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsShorterThan +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_43C890  +
mov ecx ebp +
jmp loc_449968  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsABlockDevic +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_43C890  +
mov [esp+44h+var_16] 1 +
jmp loc_4499A4  +
mov ecx ebx +
jmp loc_449968  +
cmp dword ptr [edi+44h] 0 +
mov ebx [edi+40h] +
jle loc_449AC6  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsTooLarge +
mov [esp+44h+var_34] eax +
jmp loc_449A43  +
mov eax [edi+4] +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_44] eax +
call sub_43C990  +
mov [esp+44h+var_44] esi +
call free  +
mov [esp+44h+var_16] 1 +
jmp loc_4499A4  +
jl loc_449AD0  +
cmp ebx 7FFFFFFFh +
ja loc_449A80  +
lea eax [ebx+10h] +
mov [esp+44h+var_15] 1 +
jmp loc_4498FD  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx ebx byte ptr [edx] +
mov eax [esp+30h+arg_0] +
cmp bl 5Ch +
jz loc_449B30  +
cmp bl 2Fh +
jz loc_449B30  +
test bl bl +
jz loc_449B04  +
cmp byte ptr [edx+1] 3Ah +
jz loc_449B30  +
mov ebx [esi] +
test ebx ebx +
jz loc_449B53  +
mov edi [ebx+2Ch] +
cmp eax 1 +
jz loc_449B60  +
test ecx ecx +
jz loc_449B40  +
mov ebx [esi+74h] +
test ebx ebx +
jz loc_449BB0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
lea ebx [esi+78h] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 3 +
jz loc_449BA1  +
cmp byte ptr [esi+0E0h] 0 +
jz loc_449B80  +
mov ebx [esi+70h] +
jmp loc_449B19  +
mov edi [esi+0A0h] +
jmp loc_449B0D  +
mov eax [edi+20h] +
test eax eax +
jz loc_449C1F  +
lea ebp [esi+78h] +
cmp eax ebp +
jz loc_449C1F  +
mov ebx [eax] +
jmp loc_449B19  +
test ebx ebx +
jz loc_449C18  +
movzx ecx byte ptr [ebx+3Dh] +
mov edx [edi+0Ch] +
test edx edx +
jz loc_449BD1  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4491B0  +
xor ecx ecx +
mov edx offset a__2 +
jmp loc_449B93  +
mov [esp+30h+var_24] edx +
mov [esp+30h+var_28] offset aNoIncludePathI +
mov [esp+30h+var_2C] 3 +
mov [esp+30h+var_30] esi +
call sub_43C650  +
jmp loc_449B21  +
mov eax [edi+4] +
mov [esp+30h+var_14] ecx +
mov [esp+30h+var_30] eax +
call sub_459A70  +
mov ebx eax +
sub ebx [edi+4] +
lea eax [ebx+1] +
mov [esp+30h+var_30] eax +
call sub_4529F0  +
mov ebp eax +
mov eax [edi+4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_30] ebp +
mov [esp+30h+var_2C] eax +
call memcpy  +
mov edx ebp +
mov ecx [esp+30h+var_14] +
mov byte ptr [ebp+ebx+0] 0 +
mov [edi+0Ch] ebp +
jmp loc_449B93  +
xor ecx ecx +
jmp loc_449B8C  +
test ecx ecx +
jnz loc_449B16  +
jmp loc_449B45  +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+4] +
mov [ebx+4] ecx +
mov [esp+34h+var_18] eax +
mov eax edx +
call sub_449340  +
test al al +
jnz loc_449C70  +
mov [esp+34h+var_19] 0 +
mov eax [esp+34h+var_18] +
mov [ebx+4] eax +
movzx eax [esp+34h+var_19] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+58h] +
mov eax [esi+200h] +
mov [esp+34h+var_30] edi +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_2C] edx +
call eax  +
and eax 1 +
mov [esp+34h+var_19] al +
jz loc_449D00  +
cmp byte ptr [esi+253h] 0 +
jz loc_449C57  +
mov eax [esi+1Ch] +
mov ebp 1 +
cmp dword ptr [eax+20h] 1 +
jbe loc_449CC9  +
mov eax ds:_iob +
add ebp 1 +
mov [esp+34h+var_34] 2Eh +
add eax 40h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi+1Ch] +
cmp [eax+20h] ebp +
ja loc_449CA6  +
cmp [esp+34h+var_19] 1 +
mov [esp+34h+var_28] edi +
mov [esp+34h+var_30] offset aCS +
sbb eax eax +
and eax 57h +
add eax 21h +
mov [esp+34h+var_2C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+34h+var_34] eax +
call sub_47D120  +
jmp loc_449C57  +
mov eax [ebx+58h] +
mov [esp+34h+var_34] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
jmp loc_449C8F  +
***
mov eax [esp+arg_0] +
mov eax [eax+5Ch] +
test eax eax +
setnz al  +
retn   +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+arg_C] +
test edi edi +
mov [esp+7Ch+var_5C] eax +
jz loc_44A450  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_45CF10  +
mov ecx [esp+7Ch+arg_0] +
mov edx [ecx+0A4h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_78] eax +
call sub_45CB50  +
mov [esp+7Ch+var_60] eax +
mov eax [eax] +
test eax eax +
jz loc_449DC5  +
mov ecx [eax+4] +
cmp [esp+7Ch+arg_8] ecx +
jz loc_449FA8  +
mov edx [esp+7Ch+arg_8] +
jmp loc_449DBF  +
cmp edx [eax+4] +
jz loc_449FA8  +
mov eax [eax] +
test eax eax +
jnz loc_449DB6  +
mov [esp+7Ch+var_78] 68h +
mov [esp+7Ch+var_7C] 1 +
call sub_452A20  +
mov ebp eax +
mov eax [esp+7Ch+arg_0] +
mov edx [eax] +
mov eax [esp+7Ch+arg_8] +
mov dword ptr [ebp+58h] 0FFFFFFFFh +
test edx edx +
mov [ebp+20h] eax +
mov eax [esp+7Ch+arg_4] +
setz byte ptr [ebp+64h]  +
mov [esp+7Ch+var_7C] eax +
call sub_452AC0  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
mov [ebp+0] eax +
jz loc_449FB5  +
mov edx 1 +
test bl bl +
mov [ebp+66h] dl +
jnz loc_44A4BD  +
mov edi eax +
mov eax [esp+7Ch+arg_0] +
mov esi [ebp+20h] +
mov [esp+7Ch+var_64] ebp +
mov byte ptr [esp+7Ch+var_44] 0 +
add eax 0B4h +
mov [esp+7Ch+var_45] 0 +
mov ebp esi +
mov [esp+7Ch+var_46] 0 +
mov [esp+7Ch+var_40] eax +
jmp loc_449F37  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_44A431  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ebp eax +
test ebp ebp +
jz loc_44A0F0  +
mov eax [esp+7Ch+arg_0] +
cmp byte ptr [eax+2A9h] 0 +
jnz loc_449E92  +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_449EC8  +
mov [esp+7Ch+var_7C] ebp +
call sub_45C1A0  +
test eax eax +
mov ebx eax +
jz loc_44A443  +
mov [esp+7Ch+var_7C] eax +
call strlen  +
mov [esp+7Ch+var_7C] ebp +
mov esi eax +
call strlen  +
cmp esi eax +
jnb loc_44A443  +
mov [esp+7Ch+var_7C] ebp +
mov ebp ebx +
call free  +
mov [esp+7Ch+var_7C] ebp +
call sub_45CF10  +
mov ebx eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_45C9E0  +
test eax eax +
mov eax [esp+7Ch+var_64] +
jz loc_44A230  +
mov dword ptr [eax+5Ch] 2 +
mov ecx [esp+7Ch+var_64] +
mov eax [ecx+20h] +
mov esi [eax] +
test esi esi +
mov [ecx+20h] esi +
jz loc_44A4D0  +
mov eax [esp+7Ch+arg_0] +
cmp esi [eax+74h] +
jz loc_44A107  +
cmp esi [eax+70h] +
jz loc_44A220  +
mov eax [esp+7Ch+var_64] +
mov ebp esi +
mov edi [eax] +
mov ecx [esp+7Ch+arg_0] +
mov eax edi +
mov edx ebp +
cmp byte ptr [ecx+261h] 0 +
jz loc_449E57  +
mov eax [ebp+14h] +
test eax eax +
jz loc_44A47F  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_449F71  +
jmp loc_449FE0  +
mov eax [ebp+14h] +
add ebx 2 +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_449FE0  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_452D10  +
test eax eax +
jnz loc_449F64  +
mov eax [ebp+14h] +
mov eax [eax+ebx*4+4] +
mov [esp+7Ch+var_7C] eax +
call sub_452AC0  +
test eax eax +
mov ebp eax +
jnz loc_449E75  +
mov eax [esp+7Ch+var_64] +
mov edx [eax+20h] +
mov eax [eax] +
jmp loc_449E57  +
mov ebx [eax+0Ch] +
add esp 7Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+7Ch+arg_0] +
mov edx [esi] +
test edx edx +
jz loc_44A4B6  +
mov ecx [edx+2Ch] +
xor edx edx +
cmp byte ptr [ecx+66h] 0 +
jz loc_449E1D  +
jmp loc_449E18  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_449F9A  +
cmp al 2Fh +
jz loc_449F9A  +
test al al +
jz loc_449FF5  +
cmp byte ptr [edi+1] 3Ah +
jz loc_449F9A  +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] edi +
call strchr  +
mov [esp+7Ch+var_78] 5Ch +
mov [esp+7Ch+var_7C] edi +
mov ebx eax +
call strchr  +
cmp ebx eax +
setnbe cl  +
test ebx ebx +
setz dl  +
or dl cl +
jz loc_44A02C  +
test eax eax +
mov ebx eax +
setz dl  +
cmp edi ebx +
jz loc_449F9A  +
test dl dl +
jnz loc_449F9A  +
mov edx [ebp+8] +
mov eax ebx +
sub eax edi +
mov [esp+7Ch+var_50] eax +
add edx eax +
lea eax [edx+1] +
mov [esp+7Ch+var_54] eax +
lea eax [edx+3] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_4C] edx +
call sub_4529F0  +
mov esi eax +
mov eax [ebp+8] +
lea ecx [esi+eax] +
mov [esp+7Ch+var_58] ecx +
mov ecx [ebp+4] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_78] ecx +
call memcpy  +
mov eax [ebp+8] +
mov edx [esp+7Ch+var_4C] +
test eax eax +
jz loc_44A0AE  +
mov ecx [ebp+4] +
movzx eax byte ptr [ecx+eax-1] +
cmp al 5Ch +
jz loc_44A0AE  +
cmp al 2Fh +
jz loc_44A0AE  +
mov eax [esp+7Ch+var_58] +
lea ecx [edx+2] +
mov [esp+7Ch+var_54] ecx +
mov byte ptr [eax] 2Fh +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edi +
lea edi [ebx+1] +
add eax 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+var_54] +
mov edx esi +
mov byte ptr [esi+eax] 0 +
mov eax [esp+7Ch+arg_0] +
movzx ecx byte ptr [ebp+0Ch] +
call sub_4491B0  +
mov ebp eax +
jmp loc_449F4F  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+5Ch] 2 +
mov dword ptr [eax+4] 0 +
jmp loc_449F02  +
mov [esp+7Ch+var_46] 1 +
mov eax [esp+7Ch+var_60] +
mov ebx [eax] +
test ebx ebx +
jnz loc_44A12A  +
jmp loc_449F2F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_449F2F  +
cmp esi [ebx+4] +
lea esi [esi+0] +
jnz loc_44A120  +
mov ebp [esp+7Ch+var_64] +
mov eax [ebp+0] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebp [ebx+0Ch] +
mov eax [esp+7Ch+arg_0] +
call sub_449150  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_8] +
cmp [esp+7Ch+var_46] 0 +
mov edx [edi] +
mov [eax+4] ecx +
mov ecx [esp+7Ch+arg_0] +
mov [eax] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
jz loc_44A1C0  +
mov eax [ecx+74h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_44A1C0  +
cmp esi eax +
jz loc_44A1C0  +
mov eax ecx +
call sub_449150  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_0] +
mov edx [edi] +
mov [eax] edx +
mov edx [ecx+74h] +
mov [eax+4] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
cmp [esp+7Ch+var_45] 0 +
mov ebx ebp +
jz loc_449FAB  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+70h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_449FAB  +
cmp esi eax +
jz loc_449FAB  +
mov eax [esp+7Ch+arg_0] +
call sub_449150  +
mov esi [esp+7Ch+var_60] +
mov edi [esp+7Ch+arg_0] +
mov edx [esi] +
mov [eax] edx +
mov edx [edi+70h] +
mov [eax+4] edx +
mov edx [edi+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [esi] eax +
jmp loc_449FAB  +
mov [esp+7Ch+var_45] 1 +
jmp loc_44A10C  +
mov [eax+4] ebp +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz loc_44A30B  +
mov eax [esp+7Ch+arg_0] +
mov esi [eax+200h] +
test esi esi +
jz loc_44A30B  +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_44A267  +
jmp loc_44A277  +
mov eax [eax+10h] +
test eax eax +
jz loc_44A277  +
cmp byte ptr [eax+66h] 0 +
jnz loc_44A260  +
cmp byte ptr [eax+64h] 0 +
jz loc_44A30B  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov esi eax +
lea eax [eax+5] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_50] eax +
call sub_4529F0  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov edi eax +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_58] eax +
call memcpy  +
mov eax edi +
mov dword ptr [edi+esi] 6863672Eh +
mov byte ptr [edi+esi+4] 0 +
lea edi [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_44A2FF  +
movzx eax [esp+7Ch+var_36] +
and ax 0F000h +
cmp ax 4000h +
jz loc_44A605  +
mov edx [esp+7Ch+var_64] +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+arg_0] +
call sub_449C30  +
mov edx eax +
test dl dl +
jnz loc_44A5B0  +
mov byte ptr [esp+7Ch+var_44] 1 +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
call sub_449340  +
test al al +
jnz loc_44A48E  +
mov eax [esp+7Ch+var_64] +
cmp dword ptr [eax+5Ch] 2 +
jnz loc_44A5C0  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov edi [esp+7Ch+arg_0] +
mov edx [edi+0C4h] +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
lea ecx [esi+1] +
mov eax [eax+0C0h] +
sub edx eax +
cmp edx ecx +
jb loc_44A757  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+arg_0] +
add esi [eax+0C0h] +
lea eax [esi+1] +
mov edx esi +
mov esi [esp+7Ch+arg_0] +
mov [esi+0C0h] eax +
mov byte ptr [edx] 0 +
mov edi [esi+0BCh] +
mov eax [esi+0C0h] +
cmp edi eax +
jz loc_44A779  +
mov esi [esp+7Ch+arg_0] +
mov edx [esi+0CCh] +
mov ecx [esi+0B8h] +
add eax edx +
not edx  +
and eax edx +
mov edx [esi+0C4h] +
mov [esi+0C0h] eax +
mov esi eax +
sub esi ecx +
mov [esp+7Ch+var_58] esi +
mov esi edx +
sub esi ecx +
cmp [esp+7Ch+var_58] esi +
jbe loc_44A3E7  +
mov eax [esp+7Ch+arg_0] +
mov [eax+0C0h] edx +
mov eax edx +
mov esi [esp+7Ch+arg_0] +
mov [esi+0BCh] eax +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_45CB50  +
mov esi [esp+7Ch+var_64] +
mov [eax] edi +
mov eax [esi] +
mov [esi+4] eax +
jmp loc_449F02  +
mov ecx [edx+8] +
add edx 4 +
call sub_449580  +
mov ebp eax +
jmp loc_449E6D  +
mov [esp+7Ch+var_7C] ebx +
call free  +
jmp loc_449EC8  +
mov eax [esp+7Ch+arg_18] +
mov [esp+7Ch+var_70] offset aNullDirectoryI +
mov [esp+7Ch+var_78] 4 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_43C890  +
jmp loc_449D58  +
mov eax ebp +
call sub_449600  +
mov eax [ebp+14h] +
jmp loc_449F5A  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+arg_0] +
xor esi esi +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
jmp loc_44A14C  +
xor edx edx +
jmp loc_449E1D  +
mov [esp+7Ch+var_45] 0 +
mov [esp+7Ch+var_46] 0 +
jmp loc_44A492  +
mov eax [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_64] +
mov eax [eax+208h] +
test eax eax +
jz loc_44A558  +
mov esi [esp+7Ch+arg_4] +
lea edx [ebp+20h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] esi +
mov esi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] esi +
call eax  +
test eax eax +
mov [ebp+4] eax +
jz loc_44A552  +
mov eax ebp +
call sub_449340  +
test al al +
jz loc_44A547  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
mov eax [esp+7Ch+var_60] +
mov eax [eax] +
test eax eax +
jz loc_44A785  +
mov ebx ebp +
jmp loc_449FAB  +
mov eax [ebp+4] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [ebp+0] +
mov [ebp+4] eax +
cmp byte ptr [esp+7Ch+var_44] 0 +
jnz loc_44A6FB  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
jz loc_44A5E1  +
mov eax [ebp+0] +
xor ebx ebx +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+var_60] +
mov ecx [eax] +
test ecx ecx +
jnz loc_449FAB  +
mov [eax] ebp +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_45CDE0  +
jmp loc_449FAB  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_58] +
mov [ebp+8] eax +
jmp loc_44A492  +
mov ebp eax +
mov eax [esp+7Ch+arg_18] +
xor ecx ecx +
mov edx ebp +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_449440  +
jmp loc_44A492  +
mov eax [esp+7Ch+arg_18] +
mov edx ebp +
mov ecx [esp+7Ch+arg_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_449440  +
jmp loc_44A492  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] edi +
call sub_474370  +
test eax eax +
mov [esp+7Ch+var_54] eax +
jz loc_44A2FA  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_44] ebp +
mov ebp ebx +
mov byte ptr [edi+esi+4] 2Fh +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_7C] eax +
call sub_474530  +
test eax eax +
jz loc_44A6F1  +
lea ebx [eax+8] +
mov edi offset a__0 +
mov [esp+7Ch+var_7C] ebx +
mov esi ebx +
call strlen  +
mov ecx 2 +
cmps   +
jz loc_44A630  +
mov edi offset a__ +
mov esi ebx +
mov ecx 3 +
cmps   +
jz loc_44A630  +
lea esi [eax+1] +
mov eax [esp+7Ch+var_50] +
add eax esi +
cmp eax [esp+7Ch+var_4C] +
ja loc_44A6CF  +
mov edi [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebx +
add eax edi +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_64] +
mov ecx edi +
mov eax [esp+7Ch+arg_0] +
call sub_449C30  +
test al al +
jz loc_44A630  +
mov ebx ebp +
mov ebp [esp+7Ch+var_44] +
mov edx eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] edx +
mov [esp+7Ch+var_7C] eax +
call sub_474650  +
mov edx [esp+7Ch+var_50] +
jmp loc_44A2F2  +
mov eax [esp+7Ch+var_4C] +
lea eax [eax+esi+40h] +
mov [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call sub_452A70  +
mov [esp+7Ch+var_58] eax +
jmp loc_44A67E  +
mov ebx ebp +
xor edx edx +
mov ebp [esp+7Ch+var_44] +
jmp loc_44A6B6  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aOneOrMorePchFi +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43C650  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_437A10  +
cmp byte ptr [eax+48h] 0 +
jnz loc_44A563  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aUseWinvalidPch +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43C650  +
jmp loc_44A563  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] eax +
call sub_458E00  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0C0h] +
jmp loc_44A35B  +
or byte ptr [esi+0DCh] 2 +
jmp loc_44A3A1  +
mov esi [esp+7Ch+var_60] +
mov ebx ebp +
mov eax [esp+7Ch+arg_0] +
mov [esi] ebp +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_45CDE0  +
jmp loc_449FAB  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_8] +
mov esi [esp+4Ch+arg_0] +
cmp byte ptr [ebx+62h] 0 +
mov eax ebp +
mov byte ptr [esp+4Ch+var_38] al +
jnz loc_44A824  +
mov eax ebp +
test al al +
jnz loc_44A830  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44A7E7  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_44A824  +
mov eax [ebx+8] +
test eax eax +
jz loc_44A844  +
mov ecx [ebx+58h] +
mov edi [ebx+4] +
mov edx [esi+204h] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] esi +
call edx  +
mov eax [ebx+8] +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 4Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp word ptr [ebx+60h] 0 +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jz loc_44A7D5  +
jmp loc_44A824  +
mov ecx [esp+4Ch+arg_C] +
mov edx ebx +
mov eax esi +
call sub_449890  +
test al al +
mov edi eax +
jz loc_44A824  +
mov ecx ds:dword_4D9298 +
test ecx ecx +
jz loc_44A920  +
mov eax ebp +
test al al +
jnz loc_44A8CF  +
cmp byte ptr [ecx+4] 0 +
jz loc_44A920  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_449800 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 0 +
call bsearch  +
test eax eax +
jz loc_44A920  +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jmp loc_44A824  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_449800 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 1 +
call bsearch  +
test eax eax +
jnz loc_44A824  +
lea esi [esi+0] +
cmp byte ptr [esi+0E1h] 0 +
jz loc_44A9F4  +
mov ebp [esi+9Ch] +
test ebp ebp +
jz loc_44A9F4  +
mov [esp+4Ch+arg_0] esi +
movzx esi byte ptr [esp+4Ch+var_38] +
jmp loc_44A951  +
mov ebp [ebp+10h] +
test ebp ebp +
jz loc_44A9F0  +
cmp ebx ebp +
jz loc_44A946  +
mov eax esi +
test al al +
jnz loc_44A961  +
cmp byte ptr [ebp+62h] 0 +
jz loc_44A946  +
mov eax [ebp+5Ch] +
test eax eax +
jnz loc_44A946  +
mov eax [ebx+4Ch] +
cmp [ebp+4Ch] eax +
jnz loc_44A946  +
mov eax [ebp+40h] +
mov edx [ebp+44h] +
xor edx [ebx+44h] +
xor eax [ebx+40h] +
or edx eax +
jnz loc_44A946  +
mov ecx [ebp+14h] +
mov [esp+4Ch+var_38] ebp +
test ecx ecx +
jz loc_44A995  +
cmp byte ptr [ebp+65h] 0 +
jz loc_44AB0F  +
mov edx [esp+4Ch+var_38] +
mov ecx [esp+4Ch+arg_C] +
mov eax [esp+4Ch+arg_0] +
call sub_449890  +
xor edx edx +
test al al +
jz loc_44A9D0  +
mov eax [esp+4Ch+var_38] +
mov ecx [eax+40h] +
mov eax [eax+44h] +
mov [esp+4Ch+var_34] eax +
mov eax [ebx+44h] +
xor [esp+4Ch+var_34] eax +
mov eax [ebx+40h] +
xor eax ecx +
or eax [esp+4Ch+var_34] +
jz loc_44AB89  +
mov eax [ebp+14h] +
test eax eax +
jz loc_44A9E1  +
cmp byte ptr [ebp+65h] 0 +
jz loc_44AB6C  +
test dl dl +
jz loc_44A946  +
jmp loc_44A824  +
mov esi [esp+4Ch+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_44AB04  +
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_44AB04  +
movzx edx byte ptr [eax+3Dh] +
movzx eax byte ptr [ecx+0Ch] +
cmp dl al +
jbe loc_44AAF3  +
movzx ebp dl +
xor ecx ecx +
test ebp ebp +
setnz cl  +
cmp [esi+28Ch] ecx +
movzx eax word ptr [ebx+60h] +
jle loc_44AA64  +
test ax ax +
jnz loc_44AA64  +
cmp byte ptr [ebx+64h] 0 +
jz loc_44AA43  +
cmp byte ptr [esi+292h] 0 +
jnz loc_44AA64  +
mov eax [esi+180h] +
mov ecx [ebx+4] +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call sub_44BAD0  +
movzx eax word ptr [ebx+60h] +
mov edx [esp+4Ch+var_38] +
add eax 1 +
mov [ebx+60h] ax +
xor eax eax +
mov byte ptr [ebx+65h] 0 +
cmp byte ptr [esi+26Bh] 0 +
jz loc_44AA87  +
movzx eax byte ptr [esi+2A8h] +
xor eax 1 +
movzx eax al +
mov ecx [ebx+14h] +
mov [esp+4Ch+var_40] eax +
mov eax [ebx+40h] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
call sub_437A80  +
mov edx [esp+4Ch+var_38] +
mov [eax+3Dh] dl +
mov edx [ebx+18h] +
mov [eax+2Ch] ebx +
mov [eax+14h] edx +
mov eax [ebx+4] +
mov byte ptr [esi+0ECh] 1 +
mov dword ptr [esi+0E4h] 0 +
mov [esp+4Ch+var_3C] ebp +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_4371B0  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebp al +
xor ecx ecx +
test ebp ebp +
mov edx eax +
setnz cl  +
jmp loc_44AA23  +
xor ebp ebp +
xor edx edx +
xor ecx ecx +
jmp loc_44AA23  +
mov edx [ebp+0] +
mov ecx [ebp+20h] +
mov [esp+4Ch+var_48] 68h +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_30] edx +
mov [esp+4Ch+var_34] ecx +
call sub_452A20  +
mov ecx [esp+4Ch+arg_0] +
mov edx [ecx] +
mov ecx [esp+4Ch+var_34] +
mov dword ptr [eax+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_38] eax +
test edx edx +
mov edx [esp+4Ch+var_30] +
mov [eax+20h] ecx +
setz byte ptr [eax+64h]  +
mov [esp+4Ch+var_4C] edx +
call sub_452AC0  +
mov ecx [esp+4Ch+var_38] +
mov [ecx] eax +
mov eax [ebp+4] +
mov [ecx+4] eax +
jmp loc_44A995  +
mov eax [esp+4Ch+var_38] +
mov [esp+4Ch+var_34] edx +
mov dword ptr [eax+4] 0 +
call sub_449010  +
mov edx [esp+4Ch+var_34] +
jmp loc_44A9E1  +
mov [esp+4Ch+var_44] ecx +
mov eax [ebx+14h] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_38] +
mov eax [eax+14h] +
mov [esp+4Ch+var_4C] eax +
call memcmp  +
test eax eax +
setz dl  +
jmp loc_44A9D0  +
***
mov eax [esp+arg_0] +
mov byte ptr [eax+0E1h] 1 +
mov eax [esp+arg_4] +
mov byte ptr [eax+62h] 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_8] +
cmp ebx 3 +
jz loc_44AC94  +
mov [esp+2Ch+var_2C] ebx +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_449AE0  +
test eax eax +
jz loc_44AC88  +
mov ecx [esp+2Ch+arg_10] +
cmp ebx 4 +
setz dl  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_14] ecx +
movzx ecx dl +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_449D30  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ecx eax +
setz al  +
and al dl +
mov edi eax +
jnz loc_44AC88  +
mov edx [ecx+8] +
test edx edx +
jz loc_44ACC4  +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_20] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+2Ch+var_24] eax +
call sub_44A7B0  +
test al al +
jnz loc_44ACB5  +
mov eax [esi+1Ch] +
add dword ptr [eax+28h] 1 +
add esp 2Ch +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+104h] +
mov eax [esi+0F0h] +
cmp eax [edx+8] +
jz loc_44ABF0  +
mov dword ptr [eax-10h] 0 +
jmp loc_44ABF0  +
add esp 2Ch +
mov edi 1 +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+5Ch] +
test eax eax +
jnz loc_44AC53  +
lea eax [ebx-3] +
cmp eax 1 +
jbe loc_44AC53  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
jmp loc_44AC53  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+24h] +
mov [esp] ebx +
call sub_45CF10  +
mov edx [esp+20h] +
mov edx [edx+0A4h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edx +
call sub_45C9E0  +
test eax eax +
jz loc_44AD37  +
nop   +
mov ecx [eax+4] +
test ecx ecx +
jz loc_44AD31  +
mov edx [eax+0Ch] +
mov edx [edx+5Ch] +
test edx edx +
jz loc_44AD40  +
mov eax [eax] +
test eax eax +
jnz loc_44AD20  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov edi [esp+20h] +
mov esi [esp+28h] +
mov [esp] ebx +
call sub_45CF10  +
mov edx [edi+0A4h] +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+8] eax +
call sub_45C9E0  +
mov ebx eax +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_44AD9E  +
mov eax [edi+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
call sub_42B5B0  +
mov esi eax +
test ebx ebx +
jz loc_44ADBE  +
mov edx [ebx+4] +
test edx edx +
jz loc_44ADB8  +
mov edx [ebx+0Ch] +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_44ADB8  +
cmp [ebx+8] esi +
jbe loc_44ADC7  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44ADA2  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+28h+var_14] offset free +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_18] offset sub_452A20 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_449110 +
mov [esp+28h+var_24] offset sub_448FE0 +
add ebx 0B4h +
mov [esp+28h+var_28] 7Fh +
call sub_45C760  +
mov [ebx-10h] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_452A20 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_449110 +
mov [esp+28h+var_24] offset sub_448FE0 +
mov [esp+28h+var_28] 7Fh +
call sub_45C760  +
mov [ebx-0Ch] eax +
mov [esp+28h+var_28] 7F8h +
call sub_4529F0  +
mov edx [ebx-8] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [ebx-8] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_452A20 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_4490E0 +
mov [esp+28h+var_24] offset sub_45CF10 +
mov [esp+28h+var_28] 7Fh +
call sub_45C760  +
mov [ebx-4] eax +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_4529F0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_458DA0  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+0A4h] +
mov [esp+14h+var_14] eax +
call sub_45C870  +
mov eax [esi+0A8h] +
mov [esp+14h+var_14] eax +
call sub_45C870  +
mov eax [esi+0B0h] +
mov [esp+14h+var_14] eax +
call sub_45C870  +
lea eax [esi+0B4h] +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] 0 +
call sub_458F10  +
mov eax [esi+0ACh] +
test eax eax +
jnz loc_44AF37  +
jmp loc_44AF46  +
mov eax ebx +
mov ebx [eax+4] +
mov [esp+14h+var_14] eax +
call free  +
test ebx ebx +
jnz loc_44AF35  +
mov eax [esi+9Ch] +
test eax eax +
jnz loc_44AF54  +
jmp loc_44AF60  +
mov eax ebx +
mov ebx [eax+10h] +
call sub_449010  +
test ebx ebx +
jnz loc_44AF52  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_44AEE0  +
mov dword ptr [ebx+0ACh] 0 +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+20h] ebx +
add esp 18h +
pop ebx  +
jmp sub_44ADE0  +
***
jmp sub_44AFB0  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov edx [eax] +
mov edx [edx+2Ch] +
mov edx [edx+20h] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_449D30  +
add esp 2Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov esi [eax+8] +
lea edx [esi-1] +
imul edx edx +
add edx [eax] +
mov eax [esp+24h+arg_4] +
test eax eax +
jz loc_44B070  +
cmp [esp+24h+arg_8] 1 +
sbb eax eax +
add eax 2 +
cmp [esp+24h+arg_8] 1 +
sbb ecx ecx +
add ecx 2 +
mov esi [ebx] +
mov [esi+3Dh] cl +
mov esi [edx+8] +
mov [esp+24h+var_14] eax +
mov eax [ebx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov eax [eax+2Ch] +
sub eax [edx] +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
mov [esp+24h+var_20] 2 +
call sub_4371B0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
xor ecx ecx +
jmp loc_44B033  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4371B0  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov eax [ebx+0A4h] +
mov [esp] eax +
call sub_45C600  +
lea edx [esp+18h] +
mov [esp+1Ch] eax +
mov eax [ebx+0A4h] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_449050 +
mov [esp] eax +
call sub_45CE80  +
mov eax [esp+18h] +
test eax eax +
jz loc_44B1A9  +
mov edx [esp+1Ch] +
xor ebx ebx +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_449320 +
mov dword ptr [esp+8] 4 +
mov [esp+4] edx +
call qsort  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMultipleInclud +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_44B19D  +
nop   +
mov eax [esp+18h] +
mov ecx ds:_iob +
mov eax [eax+ebx*4] +
add ebx 1 +
lea edx [ecx+40h] +
mov [esp+4] edx +
mov [esp] eax +
call fputs  +
mov eax ds:_iob +
mov dword ptr [esp] 0Ah +
add eax 40h +
mov [esp+4] eax +
call putc  +
cmp [esp+1Ch] ebx +
ja loc_44B160  +
mov eax [esp+18h] +
mov [esp] eax +
call free  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov ebx [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov [esp+20h+var_20] 0 +
mov eax esi +
mov edx ebx +
mov ecx edi +
call sub_449AE0  +
test eax eax +
jz loc_44B240  +
mov [esp+20h+var_1C] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
mov [esp+20h+var_20] esi +
call sub_449D30  +
mov ebx eax +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_44B240  +
mov eax [ebx+58h] +
cmp eax 0FFFFFFFFh +
jz loc_44B224  +
mov [esp+20h+var_20] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+2Ch] +
mov eax [eax+4Ch] +
cmp [ebx+4Ch] eax +
setnle al  +
movzx eax al +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_44B235  +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 3 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_44ABD0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 4 +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_44ABD0  +
add esp 2Ch +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [esp+arg_8] +
cmp byte ptr [edx+0ECh] 0 +
jz loc_44B2ED  +
mov ebx [ecx+1Ch] +
test ebx ebx +
jz loc_44B307  +
test eax eax +
mov byte ptr [edx+0ECh] 0 +
jz loc_44B330  +
cmp [ecx+18h] eax +
jz loc_44B312  +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
mov ebx [edx+0E4h] +
mov [ecx+1Ch] ebx +
jmp loc_44B2ED  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+14h] 0 +
mov byte ptr [ecx+65h] 0 +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
add eax 28h +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edi [esp+20h] +
mov ebx [esp+24h] +
mov esi [esp+28h] +
test eax eax +
setnz byte ptr [edi+0E0h]  +
test ebx ebx +
mov [edi+70h] ebx +
mov [edi+74h] ebx +
jnz loc_44B396  +
jmp loc_44B3B8  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44B3B8  +
mov eax [ebx+4] +
mov dword ptr [ebx+14h] 0 +
mov [esp] eax +
call strlen  +
cmp ebx esi +
mov [ebx+8] eax +
jnz loc_44B390  +
mov [edi+74h] ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44B396  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+20h] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+2Ch] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+28h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+9Ch] +
test eax eax +
jz loc_44B59D  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov eax [eax+10h] +
add edx 1 +
test eax eax +
jnz loc_44B430  +
shl edx 5 +
lea eax [edx+8] +
mov [esp+4] eax +
mov dword ptr [esp] 1 +
call sub_452A20  +
mov esi eax +
mov dword ptr [eax] 0 +
mov byte ptr [eax+4] 0 +
mov eax [esp+40h] +
mov ebx [eax+9Ch] +
test ebx ebx +
jz loc_44B5C5  +
xor ebp ebp +
jmp loc_44B4AB  +
mov eax [ebx+14h] +
mov [esp+8] ecx +
mov ecx [ebx+40h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_4674E0  +
mov eax [ebx+40h] +
mov ecx ebp +
mov edx [ebx+44h] +
shl ecx 5 +
mov ebp [esi] +
mov [esi+ecx+8] eax +
mov [esi+ecx+0Ch] edx +
lea esi [esi+0] +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_44B540  +
cmp byte ptr [ebx+63h] 0 +
jnz loc_44B4A0  +
mov eax [ebx+5Ch] +
test eax eax +
jnz loc_44B4A0  +
cmp word ptr [ebx+60h] 0 +
jz loc_44B4A0  +
lea eax [ebp+1] +
mov [esi] eax +
mov eax ebp +
shl eax 5 +
lea ecx [esi+eax+10h] +
movzx eax byte ptr [ebx+62h] +
mov [ecx+10h] al +
or [esi+4] al +
cmp byte ptr [ebx+65h] 0 +
jnz loc_44B472  +
mov eax [ebx+58h] +
mov [esp+18h] ecx +
mov [esp+1Ch] eax +
mov eax ebx +
call sub_449340  +
mov ecx [esp+18h] +
test al al +
mov edi eax +
jz loc_44B5A7  +
mov eax [ebx+58h] +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp+18h] ecx +
mov [esp] eax +
call j__fdopen  +
mov ecx [esp+18h] +
mov [esp+4] ecx +
mov edi eax +
mov [esp] eax +
call sub_467560  +
mov [esp] edi +
call fclose  +
mov eax [esp+1Ch] +
mov [ebx+58h] eax +
jmp loc_44B488  +
***
mov eax ebp +
shl eax 5 +
lea ebx [eax+8] +
lea eax [esi+8] +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_449550 +
mov dword ptr [esp+8] 20h +
mov [esp+4] ebp +
call qsort  +
mov eax [esp+44h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] esi +
mov [esp+0Ch] eax +
call fwrite  +
mov [esp] esi +
cmp eax 1 +
setz bl  +
call free  +
mov edi ebx +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 8 +
jmp loc_44B440  +
***
mov eax [esp+40h] +
xor ecx ecx +
mov edx ebx +
mov dword ptr [esp] 0 +
call sub_449440  +
mov [esp] esi +
call free  +
jmp loc_44B593  +
***
mov ebx 8 +
xor ebp ebp +
jmp loc_44B548  +
***
jmp loc_44B5E0  +
push ebx  +
sub esp 48h +
mov ebx [esp+54h] +
lea eax [esp+18h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 8 +
mov [esp] eax +
mov [esp+0Ch] ebx +
call fread  +
xor edx edx +
cmp eax 1 +
jz loc_44B616  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+18h] +
shl eax 5 +
add eax 8 +
mov [esp] eax +
call sub_4529F0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [eax] edx +
mov [eax+4] ecx +
mov ds:dword_4D9298 eax +
add eax 8 +
mov [esp+0Ch] ebx +
mov [esp+8] edx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call fread  +
cmp eax [esp+18h] +
setz dl  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [esp+20h+arg_C] +
mov edx esi +
mov ecx edi +
mov [esp+20h+var_20] eax +
mov eax ebx +
call sub_449AE0  +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
call sub_449D30  +
cmp dword ptr [eax+5Ch] 2 +
setnz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 10h +
mov eax [eax+18h] +
test eax eax +
jz loc_44B742  +
mov edx [edi+20h] +
test edx edx +
jz loc_44B742  +
xor esi esi +
jmp loc_44B6F3  +
mov eax [edi+18h] +
mov edx [edi+1Ch] +
mov eax [eax+esi*4] +
mov edx [edx+esi*4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_452D60  +
test eax eax +
jnz loc_44B73A  +
mov eax [edi+1Ch] +
mov ecx [eax+esi*4] +
lea eax [ebx+ecx] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_44B726  +
cmp dl 2Fh +
jnz loc_44B73A  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_44B792  +
cmp byte ptr [eax+2] 2Eh +
jnz loc_44B792  +
movzx eax byte ptr [eax+3] +
cmp al 5Ch +
jnz loc_44B788  +
add esi 1 +
cmp [edi+20h] esi +
ja loc_44B6F0  +
movzx eax byte ptr [ebx] +
cmp al 2Eh +
jnz loc_44B772  +
movzx eax byte ptr [ebx+1] +
cmp al 5Ch +
jnz loc_44B782  +
movzx eax byte ptr [ebx+2] +
lea edx [ebx+2] +
mov ebx edx +
cmp al 2Fh +
jnz loc_44B77B  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_44B760  +
cmp al 2Fh +
jz loc_44B760  +
cmp al 2Eh +
jz loc_44B749  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp al 5Ch +
jz loc_44B760  +
nop   +
jmp loc_44B745  +
cmp al 2Fh +
jz loc_44B751  +
jmp loc_44B772  +
cmp al 2Fh +
lea esi [esi+0] +
jz loc_44B73A  +
lea ebx [ebx+ecx+1] +
jmp loc_44B742  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [eax] +
test al al +
jz loc_44B8AB  +
lea edi [esi-1] +
xor ecx ecx +
mov ebx edi +
jmp loc_44B7DC  +
cmp al 23h +
jz loc_44B803  +
cmp al 24h +
setz al  +
movzx eax al +
add ecx eax +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
test al al +
jz loc_44B814  +
cmp al 20h +
jz loc_44B7E6  +
jg loc_44B7C0  +
cmp al 9 +
jnz loc_44B7CE  +
cmp esi ebx +
mov edx ebx +
ja loc_44B803  +
cmp byte ptr [ebx] 5Ch +
nop   +
jz loc_44B7F9  +
jmp loc_44B803  +
cmp byte ptr [edx] 5Ch +
jnz loc_44B803  +
sub edx 1 +
add ecx 1 +
cmp edx edi +
jnz loc_44B7F4  +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
add ecx 1 +
test al al +
jnz loc_44B7DC  +
add ecx 1 +
mov [esp+20h+var_20] ecx +
call sub_4529F0  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_44B898  +
lea edi [esi-1] +
mov ecx eax +
mov ebx edi +
jmp loc_44B855  +
cmp dl 23h +
jz loc_44B890  +
cmp dl 24h +
jnz loc_44B840  +
mov byte ptr [ecx] 24h +
add ecx 1 +
movzx edx byte ptr [ebx+1] +
add ebx 1 +
add ecx 1 +
mov [ecx-1] dl +
movzx edx byte ptr [ebx+1] +
test dl dl +
jz loc_44B8A0  +
cmp dl 20h +
jz loc_44B862  +
jg loc_44B830  +
cmp dl 9 +
nop   +
jnz loc_44B840  +
cmp esi ebx +
mov edx ebx +
mov ebp ecx +
ja loc_44B885  +
cmp byte ptr [ebx] 5Ch +
jz loc_44B877  +
nop   +
jmp loc_44B885  +
cmp byte ptr [edx] 5Ch +
jnz loc_44B885  +
sub edx 1 +
add ebp 1 +
cmp edi edx +
mov byte ptr [ebp-1] 5Ch +
jnz loc_44B872  +
lea ecx [ebp+1] +
mov byte ptr [ebp+0] 5Ch +
jmp loc_44B840  +
mov byte ptr [ecx] 5Ch +
add ecx 1 +
jmp loc_44B840  +
mov ecx eax +
lea esi [esi+0] +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx 1 +
jmp loc_44B817  +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 28h +
mov [esp+1Ch+var_1C] 1 +
call sub_452A20  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_44B915  +
mov esi [ebx+4] +
test esi esi +
jz loc_44B90D  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx] +
cmp [ebx+4] esi +
ja loc_44B8F8  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44B943  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_44B93B  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
cmp [ebx+10h] esi +
ja loc_44B925  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_44B97C  +
mov edx [ebx+20h] +
test edx edx +
jz loc_44B969  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
cmp [ebx+20h] esi +
ja loc_44B953  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+1Ch] +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_44B9D7  +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_44B6D0  +
mov edx [esp+14h+arg_8] +
test edx edx +
jnz loc_44B9D0  +
mov [esp+14h+var_14] eax +
call sub_452AC0  +
mov edx [ebx+4] +
mov ecx [ebx] +
lea esi [edx+1] +
mov [ebx+4] esi +
mov [ecx+edx*4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_44B7A0  +
jmp loc_44B9BC  +
add eax 2 +
lea edx [eax+eax] +
mov [ebx+8] edx +
mov edx [ebx] +
shl eax 3 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_452A70  +
mov [ebx] eax +
jmp loc_44B9A1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44BA9B  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_44BAA3  +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call sub_459A70  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
mov edi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea esi [esp+28h+var_D] +
and esi 0FFFFFFF0h +
lea eax [edi+1] +
add edi esi +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] esi +
call memcpy  +
mov [esp+28h+var_24] 2Eh +
mov [esp+28h+var_28] esi +
call strrchr  +
mov edx 6F2Eh +
test eax eax +
cmovz eax edi +
mov [eax] dx +
mov byte ptr [eax+2] 0 +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] eax +
call sub_44B990  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] offset asc_4CFB78 +
mov [esp+28h+var_28] eax +
call sub_44B990  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_44B6D0  +
call sub_44B7A0  +
mov edx [ebx+10h] +
cmp edx [ebx+14h] +
mov esi eax +
jz loc_44BB05  +
mov eax [ebx+0Ch] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add edx 4 +
lea eax [edx+edx] +
mov [ebx+14h] eax +
mov eax [ebx+0Ch] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_452A70  +
mov edx [ebx+10h] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [ebx+0Ch] eax +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+34h] +
mov esi [esp+30h] +
movzx eax byte ptr [edx] +
test al al +
jz loc_44BC1F  +
cmp al 3Ah +
mov ebx edx +
jz loc_44BBD3  +
test al al +
jnz loc_44BB6A  +
jmp loc_44BBD3  +
test al al +
jz loc_44BB74  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_44BB66  +
mov edi ebx +
sub edi edx +
lea eax [edi+1] +
mov [esp] eax +
mov [esp+0Ch] edx +
call sub_4529F0  +
mov edx [esp+0Ch] +
mov [esp+8] edi +
mov [esp+4] edx +
mov ebp eax +
mov [esp] eax +
call memcpy  +
xor eax eax +
mov byte ptr [ebp+edi+0] 0 +
mov edx [esi+20h] +
cmp byte ptr [ebx] 3Ah +
setz al  +
add ebx eax +
cmp edx [esi+24h] +
jz loc_44BBE0  +
mov eax [esi+18h] +
mov [eax+edx*4] ebp +
mov eax [esi+1Ch] +
mov [eax+edx*4] edi +
add dword ptr [esi+20h] 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_44BC1F  +
mov edx ebx +
cmp al 3Ah +
mov ebx edx +
jnz loc_44BB60  +
mov eax 1 +
xor edi edi +
jmp loc_44BB7B  +
***
add edx 4 +
lea eax [edx+edx] +
mov [esi+24h] eax +
mov eax [esi+18h] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_452A70  +
mov ecx [esi+24h] +
lea edx ds:0[ecx*4] +
mov [esi+18h] eax +
mov eax [esi+1Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_452A70  +
mov edx [esi+20h] +
mov [esi+1Ch] eax +
jmp loc_44BBB4  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+34h+arg_4] +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_24] eax +
mov eax [esp+34h+arg_8] +
mov edx eax +
sub eax 1 +
cmp eax 20h +
mov eax 22h +
cmova eax edx +
mov [esp+34h+var_20] eax +
mov eax [esi+4] +
test eax eax +
jz loc_44BD33  +
mov eax [esi] +
xor ebx ebx +
mov ebp [eax] +
mov [esp+34h+var_34] ebp +
call strlen  +
mov edi eax +
nop   +
lea esi [esi+0] +
mov eax [esp+34h+var_24] +
add ebx 1 +
mov [esp+34h+var_34] ebp +
mov [esp+34h+var_30] eax +
call fputs  +
cmp [esi+4] ebx +
jbe loc_44BD30  +
lea eax ds:0[ebx*4] +
mov [esp+34h+var_1C] eax +
mov eax [esi] +
mov ebp [eax+ebx*4] +
mov [esp+34h+var_34] ebp +
call strlen  +
add edi eax +
test ebx ebx +
jz loc_44BC80  +
cmp edi [esp+34h+var_20] +
jbe loc_44BD05  +
mov ebp [esp+34h+var_20] +
test ebp ebp +
jz loc_44BD05  +
mov [esp+34h+var_18] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4CFB7A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov ecx [esp+34h+var_18] +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
lea edi [ecx+1] +
mov ebp [eax+edx] +
jmp loc_44BC80  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
mov ebp [eax+edx] +
jmp loc_44BC80  +
add edi 1 +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_34] 3Ah +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esp+34h+var_20] +
mov edx [esi+10h] +
test eax eax +
setnz byte ptr [esp+34h+var_18]  +
xor ebx ebx +
test edx edx +
jnz loc_44BDB4  +
jmp loc_44BDF0  +
cmp byte ptr [esp+34h+var_18] 0 +
jz loc_44BDD1  +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4CFB7A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov edx [esp+34h+var_1C] +
lea edi [edx+1] +
mov eax [esi+0Ch] +
add ebx 1 +
mov ecx [esp+34h+var_24] +
mov eax [eax+ebp] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_34] eax +
call fputs  +
cmp [esi+10h] ebx +
jbe loc_44BDF0  +
mov eax [esi+0Ch] +
lea ebp ds:0[ebx*4] +
mov eax [eax+ebx*4] +
mov [esp+34h+var_34] eax +
call strlen  +
add edi eax +
cmp edi [esp+34h+var_20] +
ja loc_44BD60  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
jmp loc_44BD96  +
mov eax [esp+34h+var_24] +
mov [esp+34h+arg_0] 0Ah +
mov [esp+34h+arg_4] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp putc  +
***
mov esi 1 +
push ebx  +
sub esp 10h +
mov edi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
cmp dword ptr [edi+10h] 1 +
jbe loc_44BE7A  +
lea esi [esi+0] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
mov eax [edi+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call fputs  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 3Ah +
call putc  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
cmp [edi+10h] esi +
ja loc_44BE30  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_44BE90  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
mov edi [esp+44h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
lea eax [esi+10h] +
mov [esp+0Ch] edi +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_44BF34  +
mov eax [esi+10h] +
xor ebx ebx +
lea ebp [esp+1Ch] +
test eax eax +
jnz loc_44BF01  +
jmp loc_44BF41  +
mov eax [esi+0Ch] +
mov edx [esp+1Ch] +
mov eax [eax+ebx*4] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_44BF34  +
add ebx 1 +
cmp [esi+10h] ebx +
jbe loc_44BF41  +
mov eax [esi+0Ch] +
mov eax [eax+ebx*4] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
mov [esp] ebp +
mov [esp+1Ch] eax +
call fwrite  +
cmp eax 1 +
jz loc_44BED2  +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+54h] +
lea eax [esp+28h] +
mov dword ptr [esp+8] 4 +
mov ebp [esp+58h] +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
mov [esp+0Ch] edi +
call fread  +
cmp eax 4 +
jnz loc_44C082  +
mov dword ptr [esp] 200h +
call sub_4529F0  +
mov ebx eax +
mov eax [esp+28h] +
test eax eax +
jz loc_44C070  +
mov dword ptr [esp+1Ch] 200h +
xor esi esi +
jmp loc_44C003  +
mov [esp+0Ch] edi +
mov [esp+8] eax +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call fread  +
cmp eax [esp+2Ch] +
jnz loc_44C057  +
test ebp ebp +
mov byte ptr [ebx+eax] 0 +
jz loc_44BFFA  +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_452D10  +
test eax eax +
jz loc_44BFFA  +
mov eax [esp+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44BAD0  +
add esi 1 +
cmp [esp+28h] esi +
jbe loc_44C070  +
lea eax [esp+2Ch] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call fread  +
cmp eax 4 +
jnz loc_44C057  +
mov eax [esp+2Ch] +
lea edx [eax+1] +
cmp edx [esp+1Ch] +
jbe loc_44BFB0  +
sub eax 0FFFFFF80h +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+1Ch] eax +
call sub_452A70  +
mov ebx eax +
mov eax [esp+2Ch] +
jmp loc_44BFB0  +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov [esp+28h+var_28] eax +
call sub_43FEA0  +
cmp byte ptr [eax+4] 25h +
jz loc_44C0C1  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
call sub_439600  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_43FEA0  +
cmp byte ptr [eax+4] 37h +
jz loc_44C0E7  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 2 +
call sub_439600  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_43FEA0  +
cmp byte ptr [eax+4] 3Eh +
mov esi eax +
jnz loc_44C170  +
mov edx [eax+8] +
cmp edx 4 +
jbe loc_44C170  +
mov ecx [eax+0Ch] +
movzx eax byte ptr [ecx+edx-2] +
cmp al 5Ch +
jnz loc_44C188  +
movzx eax byte ptr [ecx+edx-3] +
lea edi [edx-3] +
cmp al 5Ch +
jnz loc_44C167  +
mov eax [ebx+1E8h] +
test eax eax +
jz loc_44C0B9  +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
sub edx 4 +
lea edi [esp+1Bh] +
add ecx 1 +
and edi 0FFFFFFF0h +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edi +
call memcpy  +
mov eax [esi+8] +
mov byte ptr [edi+eax-4] 0 +
mov eax [ebx+1E8h] +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call eax  +
jmp loc_44C0B9  +
cmp al 2Fh +
jz loc_44C117  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 3 +
call sub_439600  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_44C10B  +
jmp loc_44C170  +
***
mov eax [esp+arg_0] +
imul ecx ebx +
mov [eax+244h] ebx +
lea edx dword_4CFE80[ecx] +
movzx ecx byte ptr ds:dword_4CFE80[ecx] +
mov [eax+268h] cl +
movzx ecx byte ptr [edx+1] +
mov [eax+248h] cl +
movzx ecx byte ptr [edx+2] +
mov [eax+24Fh] cl +
movzx ecx byte ptr [edx+3] +
mov [eax+263h] cl +
movzx ecx byte ptr [edx+4] +
mov [eax+274h] cl +
movzx ecx byte ptr [edx+5] +
mov [eax+269h] cl +
movzx ecx byte ptr [edx+6] +
mov [eax+24Eh] cl +
movzx ecx byte ptr [edx+7] +
mov [eax+250h] cl +
movzx ecx byte ptr [edx+8] +
mov [eax+252h] cl +
movzx ecx byte ptr [edx+9] +
mov [eax+271h] cl +
movzx ecx byte ptr [edx+0Ah] +
mov [eax+275h] cl +
movzx ecx byte ptr [edx+0Bh] +
mov [eax+276h] cl +
movzx ecx byte ptr [edx+0Ch] +
mov [eax+24Dh] cl +
movzx edx byte ptr [edx+0Dh] +
mov [eax+251h] dl +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov eax ds:dword_4D93A0 +
test eax eax +
jnz loc_44C2AD  +
mov ds:dword_4D93A0 1 +
call sub_43DA20  +
mov ds:byte_4D92DD 23h +
mov ds:byte_4D92C9 5Dh +
mov ds:byte_4D92C1 7Ch +
mov ds:byte_4D92C8 5Bh +
mov ds:byte_4D92C7 5Eh +
mov ds:byte_4D92DE 7Dh +
mov ds:byte_4D92CF 5Ch +
mov ds:byte_4D92DC 7Bh +
mov ds:byte_4D92CD 7Eh +
mov dword ptr [esp+4] 300h +
mov dword ptr [esp] 1 +
call sub_452A20  +
mov ecx 1Ch +
lea esi [eax+30h] +
mov ebx eax +
test esi 1 +
mov edx esi +
jnz loc_44C531  +
test dl 2 +
jnz loc_44C543  +
mov edi ecx +
xor eax eax +
and edi 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax edi +
jb loc_44C2E9  +
add edx eax +
test cl 2 +
jz loc_44C307  +
xor edi edi +
add edx 2 +
mov [edx-2] di +
and ecx 1 +
jz loc_44C30F  +
mov byte ptr [edx] 0 +
mov eax [esp+30h] +
lea edi [ebx+0F4h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44C1A0  +
mov byte ptr [ebx+259h] 1 +
mov byte ptr [ebx+24Bh] 1 +
mov byte ptr [ebx+24Ch] 1 +
mov dword ptr [ebx+240h] 8 +
mov byte ptr [ebx+26Eh] 1 +
mov byte ptr [ebx+258h] 2 +
mov byte ptr [ebx+25Ch] 1 +
mov byte ptr [ebx+28Ah] 0FFh +
mov byte ptr [ebx+28Bh] 0 +
mov byte ptr [ebx+254h] 1 +
mov byte ptr [ebx+25Bh] 0 +
mov byte ptr [ebx+262h] 1 +
mov byte ptr [ebx+264h] 1 +
mov byte ptr [ebx+25Eh] 1 +
mov byte ptr [ebx+25Fh] 1 +
mov byte ptr [ebx+260h] 0 +
mov byte ptr [ebx+26Dh] 2 +
mov dword ptr [ebx+284h] 1 +
mov byte ptr [ebx+272h] 1 +
mov byte ptr [ebx+2A9h] 1 +
mov byte ptr [ebx+273h] 1 +
mov byte ptr [ebx+256h] 0 +
mov dword ptr [ebx+294h] 20h +
mov dword ptr [ebx+298h] 8 +
mov dword ptr [ebx+2A0h] 20h +
mov dword ptr [ebx+29Ch] 20h +
mov byte ptr [ebx+2A4h] 0 +
mov byte ptr [ebx+2A5h] 1 +
mov byte ptr [ebx+2A6h] 1 +
call sub_434B60  +
mov dword ptr [ebx+27Ch] 0 +
mov [ebx+278h] eax +
call sub_434B60  +
cmp byte ptr [ebx+24Bh] 0 +
mov [esp] edi +
mov dword ptr [esp+4] 0FAh +
setz byte ptr [ebx+0Dh]  +
mov [ebx+280h] eax +
mov eax [esp+38h] +
mov dword ptr [ebx+7Ch] offset unk_4CFB80 +
mov byte ptr [ebx+164h] 53h +
mov dword ptr [ebx+168h] 0 +
mov [ebx+1Ch] eax +
xor eax eax +
mov [ebx+176h] ax +
mov byte ptr [ebx+174h] 16h +
call sub_43E310  +
mov eax [ebx+0FCh] +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+104h] edi +
mov [ebx+4Ch] esi +
mov [ebx+0F0h] eax +
mov dword ptr [ebx+44h] 0 +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
call sub_43EDB0  +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+24h] eax +
call sub_43EDB0  +
mov [esp] ebx +
mov dword ptr [ebx+2F8h] 0 +
mov dword ptr [ebx+2FCh] 0 +
mov dword ptr [ebx+15Ch] 0FFFFFFFEh +
mov [ebx+28h] eax +
call sub_444920  +
lea eax [ebx+1B0h] +
mov dword ptr [esp+10h] offset free +
mov dword ptr [esp+0Ch] offset sub_4529F0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_458DA0  +
mov [esp] ebx +
call sub_44ADE0  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_441940  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea edx [eax+31h] +
mov cl 1Bh +
test dl 2 +
mov byte ptr [eax+30h] 0 +
jz loc_44C2E2  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_44C2E2  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+1Ch] edx +
retn   +
***
mov [esp] ebx +
call sub_437BE0  +
mov ecx [ebx] +
test ecx ecx +
jnz loc_44C590  +
mov eax [ebx+2C8h] +
mov [esp] eax +
call free  +
mov eax [ebx+110h] +
test eax eax +
jz loc_44C5D2  +
mov [esp] eax +
call free  +
mov dword ptr [ebx+110h] 0 +
mov dword ptr [ebx+114h] 0 +
mov eax [ebx+180h] +
test eax eax +
jz loc_44C5E4  +
mov [esp] eax +
call sub_44B8E0  +
lea eax [ebx+1B0h] +
mov [esp] eax +
lea ebp [ebx+0F4h] +
mov dword ptr [esp+4] 0 +
call sub_458F10  +
mov [esp] ebx +
call sub_441AE0  +
mov [esp] ebx +
call sub_44AEE0  +
mov [esp] ebx +
call near ptr dword_42F1C0  +
***
mov eax [ebx+24h] +
mov [esp] eax +
call sub_43EFC0  +
mov eax [ebx+28h] +
mov [esp] eax +
call sub_43EFC0  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call sub_43EFC0  +
mov eax [ebx+0FCh] +
mov esi [ebx+0F4h] +
mov [esp] eax +
call free  +
test esi esi +
jz loc_44C670  +
mov eax [esi+8] +
mov edi [esi] +
mov [esp] eax +
call free  +
cmp ebp esi +
jz loc_44C66A  +
mov [esp] esi +
call free  +
mov esi edi +
test esi esi +
jnz loc_44C651  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_44C682  +
jmp loc_44C690  +
mov eax esi +
mov esi [eax] +
mov [esp] eax +
call free  +
test esi esi +
jnz loc_44C680  +
mov eax [ebx+2ECh] +
test eax eax +
jz loc_44C6CA  +
mov edx [ebx+2F0h] +
test edx edx +
jle loc_44C6C2  +
xor esi esi +
mov eax [eax+esi*8] +
add esi 1 +
mov [esp] eax +
call free  +
mov eax [ebx+2ECh] +
cmp [ebx+2F0h] esi +
jg loc_44C6A6  +
mov [esp] eax +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jz loc_44C6F9  +
mov eax [esi] +
mov [ebx+2F8h] eax +
mov eax [esi+4] +
mov [esp] eax +
call free  +
mov [esp] esi +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jnz loc_44C6D4  +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov ecx [esp+4] +
mov eax offset off_4CFCE0 +
lea esi [esi+0] +
movzx edx word ptr [eax+6] +
cmp edx ecx +
jz loc_44C735  +
add eax 8 +
cmp eax offset a__timestamp__ +
jb loc_44C720  +
xor eax eax +
retn   +
***
mov eax [eax] +
retn   +
***
push esi  +
mov esi 78h +
push ebx  +
sub esp 1Ch +
mov edi [esp+20h+arg_0] +
cmp byte ptr [edi+270h] 0 +
jnz loc_44C76A  +
cmp byte ptr [edi+2A7h] 0 +
mov si 84h +
jnz loc_44C803  +
add esi offset off_4CFDE0 +
mov ebx offset off_4CFDE0 +
cmp esi ebx +
jbe loc_44C7FB  +
lea esi [esi+0] +
cmp word ptr [ebx+6] 0Ah +
jnz loc_44C79A  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_44C7F4  +
mov eax [edi+224h] +
test eax eax +
jz loc_44C7F4  +
movzx edx word ptr [ebx+4] +
mov eax [ebx] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
call sub_441B20  +
movzx edx byte ptr [eax+14h] +
and edx 0FFFFFFC0h +
or edx 1 +
mov [eax+14h] dl +
movzx edx word ptr [eax+14h] +
mov ebp edx +
and edx 3Fh +
shr bp 6 +
mov ecx ebp +
or ecx 4 +
shl ecx 6 +
or edx ecx +
mov [eax+14h] dx +
cmp byte ptr [ebx+8] 0 +
jz loc_44C7ED  +
or ebp 14h +
and edx 3Fh +
shl ebp 6 +
or edx ebp +
mov [eax+14h] dx +
movzx edx word ptr [ebx+6] +
mov [eax+18h] edx +
add ebx 0Ch +
cmp ebx esi +
jb loc_44C780  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+269h] 1 +
sbb esi esi +
and esi 0Ch +
add esi 84h +
jmp loc_44C76A  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_44C740  +
cmp byte ptr [ebx+270h] 0 +
jnz loc_44C858  +
cmp byte ptr [ebx+2A7h] 0 +
jz loc_44C940  +
cmp byte ptr [ebx+269h] 0 +
jnz loc_44C940  +
cmp byte ptr [ebx+248h] 0 +
mov eax [ebx+244h] +
jz loc_44C902  +
lea edx [eax-0Dh] +
cmp edx 1 +
jbe loc_44C9A0  +
lea edx [eax-0Bh] +
cmp edx 1 +
jbe loc_44CA00  +
sub eax 9 +
cmp eax 1 +
jbe loc_44C9D0  +
mov dword ptr [esp+4] offset a__cplusplus199 +
mov [esp] ebx +
call sub_438450  +
cmp byte ptr [ebx+250h] 0 +
jz loc_44C8DF  +
cmp byte ptr [ebx+248h] 0 +
jz loc_44C8BF  +
mov eax [ebx+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_44C8DF  +
mov dword ptr [esp+4] offset a__stdc_utf_16_ +
mov [esp] ebx +
call sub_438450  +
mov dword ptr [esp+4] offset a__stdc_utf_32_ +
mov [esp] ebx +
call sub_438450  +
test esi esi +
jz loc_44C955  +
mov dword ptr [esp+4] offset a__stdc_hosted_ +
mov [esp] ebx +
call sub_438450  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_44C96E  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp eax 0Fh +
jz loc_44C984  +
cmp eax 4 +
jz loc_44C9E5  +
and eax 0FFFFFFFBh +
cmp eax 2 +
jz loc_44C9B5  +
cmp byte ptr [ebx+268h] 0 +
jz loc_44C89F  +
mov dword ptr [esp+4] offset a__stdc_version +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__stdc__1 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C858  +
***
mov dword ptr [esp+4] offset a__stdc_hoste_0 +
mov [esp] ebx +
call sub_438450  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_44C8FC  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] offset a__objc__1 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_438450  +
***
mov dword ptr [esp+4] offset a__assembler__1 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__cplusplus201 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_0 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_0 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_1 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_1 +
mov [esp] ebx +
call sub_438450  +
jmp loc_44C89F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
movzx eax byte ptr [edi+248h] +
test al al +
jz loc_44CA3C  +
mov byte ptr [edi+25Ah] 0 +
cmp byte ptr [edi+26Bh] 0 +
jnz loc_44CB02  +
cmp byte ptr [edi+258h] 2 +
movzx edx byte ptr [edi+270h] +
jz loc_44CB25  +
test dl dl +
jz loc_44CA6F  +
mov byte ptr [edi+24Dh] 0 +
mov byte ptr [edi+258h] 0 +
test al al +
jnz loc_44CAE0  +
cmp byte ptr [edi+26Fh] 0 +
jz loc_44CAD8  +
xor esi esi +
nop   +
or esi 208h +
mov ebx offset off_4CFCE0 +
nop   +
lea esi [esi+0] +
movzx edx word ptr [ebx+4] +
add ebx 8 +
mov eax [ebx-8] +
mov [esp] edi +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_441B20  +
movzx ecx word ptr [eax+14h] +
and byte ptr [eax+0Ch] 0FEh +
mov edx ecx +
and ecx 3Fh +
shr dx 6 +
or edx esi +
shl edx 6 +
or ecx edx +
mov [eax+14h] cx +
movzx ecx byte ptr [ebx-2] +
cmp ebx offset a__timestamp__ +
lea edx [ecx+ecx] +
mov [eax+0Ch] dl +
jb loc_44CA90  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
cmp byte ptr [edi+26Eh] 0 +
setnz al  +
cmp byte ptr [edi+26Fh] 0 +
mov esi eax +
jnz loc_44CA80  +
test eax eax +
jz loc_44CAD8  +
mov esi 1 +
jmp loc_44CA86  +
***
cmp byte ptr [edi+2A8h] 0 +
jnz loc_44CB0F  +
mov byte ptr [edi+10h] 1 +
xor edx edx +
cmp byte ptr [edi+258h] 2 +
mov byte ptr [edi+270h] 0 +
jnz loc_44CA5D  +
cmp byte ptr [edi+24Dh] 0 +
setz byte ptr [edi+258h]  +
jmp loc_44CA5D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_44CB72  +
mov eax [ebx+180h] +
test eax eax +
jz loc_44CC72  +
mov [esp+4] esi +
mov [esp] eax +
call sub_44BA00  +
lea eax [ebx+78h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_449D30  +
mov [ebx+0A0h] eax +
mov [esp] eax +
call sub_449D20  +
mov edx eax +
xor eax eax +
test dl dl +
jnz loc_44CBE8  +
mov eax [ebx+0A0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44A7B0  +
mov eax esi +
cmp byte ptr [ebx+26Bh] 0 +
jnz loc_44CBF0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] ebx +
call sub_43FEA0  +
cmp byte ptr [eax+4] 25h +
mov esi eax +
jz loc_44CC28  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_439600  +
mov edx [ebx+1Ch] +
mov eax [edx+8] +
sub eax 1 +
imul eax eax +
add eax [edx] +
mov eax [eax+8] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov byte ptr [ebx+8] 1 +
mov [esp] ebx +
call sub_43FEA0  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
call sub_439600  +
mov byte ptr [ebx+8] 0 +
cmp byte ptr [edi+4] 37h +
jnz loc_44CC00  +
movzx eax word ptr [esi+6] +
mov [esp] ebx +
and eax 1 +
mov [esp+4] eax +
call sub_436D00  +
test eax eax +
jz loc_44CC00  +
mov eax ebx +
call sub_44C090  +
nop   +
jmp loc_44CC10  +
***
call sub_44B8C0  +
mov [ebx+180h] eax +
jmp loc_44CB66  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
cmp byte ptr [ebx+267h] 0 +
jz loc_44CCB0  +
jmp loc_44CD04  +
mov [esp] ebx +
call sub_437BE0  +
mov eax [ebx] +
test eax eax +
jnz loc_44CCA8  +
mov edx [ebx+28Ch] +
test edx edx +
jz loc_44CCE7  +
test esi esi +
jz loc_44CCE7  +
mov eax [ebx+180h] +
mov dword ptr [esp+8] 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_44BC30  +
cmp byte ptr [ebx+291h] 0 +
jnz loc_44CD1E  +
cmp byte ptr [ebx+253h] 0 +
jnz loc_44CCF6  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_44B0C0  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_438BA0 +
mov [esp] ebx +
call sub_441BB0  +
jmp loc_44CCB0  +
***
mov eax [ebx+180h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_44BE10  +
jmp loc_44CCE7  +
***
sub esp 48h +
mov ecx 0Ah +
lea edx [esp+48h+var_30] +
mov edi edx +
stos   +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_44] 28h +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_2C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_40] eax +
call sub_44CF40  +
test eax eax +
jz loc_44CDCC  +
mov edx [esp+48h+var_30] +
mov [eax] edx +
mov edx [esp+48h+var_2C] +
mov [eax+4] edx +
mov edx [esp+48h+var_28] +
mov [eax+8] edx +
mov edx [esp+48h+var_24] +
mov [eax+0Ch] edx +
mov edx [esp+48h+var_20] +
mov [eax+10h] edx +
mov edx [esp+48h+var_1C] +
mov [eax+14h] edx +
mov edx [esp+48h+var_18] +
mov [eax+18h] edx +
mov edx [esp+48h+var_14] +
mov [eax+1Ch] edx +
mov edx [esp+48h+var_10] +
mov [eax+20h] edx +
mov edx [esp+48h+var_C] +
mov [eax+24h] edx +
add esp 48h +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 34h +
lea eax [esp+2Ch] +
mov ebx [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov dword ptr [esp+2Ch] 0 +
mov [esp] eax +
call sub_470E80  +
mov edx [ebx] +
test edx edx +
jle loc_44CE18  +
sub edx 1 +
xor eax eax +
mov [ebx] edx +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+18h] +
cmp dword ptr [esp+2Ch] 1 +
sbb eax 0 +
test edx edx +
jz loc_44CE60  +
mov esi [ebx+10h] +
mov ecx [ebx+8] +
mov edx [ebx+4] +
mov [esp+10h] esi +
mov esi [ebx+0Ch] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] edx +
mov [esp+0Ch] esi +
call sub_44D270  +
mov [ebx+14h] eax +
cmp eax 1 +
sbb eax eax +
add esp 34h +
not eax  +
and eax 5 +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [ebx+10h] +
mov edx [ebx+8] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call edx  +
mov [ebx+14h] eax +
jmp loc_44CE4E  +
***
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 0 +
add eax 1 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_44] 1000h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_20] ebx +
mov [esp+48h+var_1C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_10] 0 +
mov [esp+48h+var_18] eax +
mov eax [esp+48h+arg_10] +
mov [esp+48h+var_14] eax +
call sub_44CF40  +
test eax eax +
jz loc_44CF34  +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 1000h +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_44CF90  +
mov [esp+48h+var_C] 1 +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset loc_44CDE0 +
call sub_471180  +
mov eax [esp+48h+var_10] +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_C] 0 +
jmp loc_44CF17  +
***
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_44CF60  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+18h+arg_8] +
test eax eax +
jz loc_44CF56  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-54h+arg_50] offset aMalloc +
mov [esp-54h+arg_54] eax +
mov eax [esp-54h+arg_78] +
mov [esp-54h+arg_4C] eax +
call [esp-54h+arg_74]  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
jmp free  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_10] +
mov esi [esp+10h+arg_4] +
mov ecx [ebx+8] +
cmp ecx esi +
jb loc_44CFD0  +
mov eax [ebx] +
mov edx [ebx+4] +
lea edi [edx+esi] +
sub ecx esi +
mov [ebx+4] edi +
add eax edx +
mov [ebx+8] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_44D010  +
lea edx [eax+1000h] +
cmp eax 1000h +
lea ecx [eax+eax] +
cmovb edx ecx +
add eax esi +
cmp edx eax +
cmovnb eax edx +
mov edi eax +
mov eax [ebx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_44D017  +
mov edx [ebx+4] +
mov [ebx] eax +
sub edi edx +
mov ecx edi +
jmp loc_44CFBA  +
mov edx esi +
shl edx 5 +
jmp loc_44CFE8  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-5Ch+arg_50] offset aRealloc +
mov [esp-5Ch+arg_54] eax +
mov eax [esp-5Ch+arg_78] +
mov [esp-5Ch+arg_4C] eax +
call [esp-5Ch+arg_74]  +
xor eax eax +
jmp loc_44CFC7  +
***
mov ebx [esp+18h+arg_4] +
mov edx [ebx+4] +
mov eax [ebx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
mov [ebx] eax +
jz loc_44D070  +
mov dword ptr [ebx+8] 0 +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-54h+arg_50] offset aRealloc +
mov [esp-54h+arg_54] eax +
mov eax [esp-54h+arg_78] +
mov [esp-54h+arg_4C] eax +
call [esp-54h+arg_74]  +
xor eax eax +
jmp loc_44D06B  +
***
mov eax [esp+18h+arg_C] +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_44D040  +
test eax eax +
jz loc_44D0E7  +
mov eax [ebx] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_C] +
mov edi [esp+1Ch+arg_10] +
mov [esp+1Ch+var_10] eax +
mov ebp [esp+1Ch+arg_8] +
mov eax ebx +
mov edx esi +
mov ecx edi +
call sub_44D0F0  +
test eax eax +
jz loc_44D2A5  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44D2B0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+1Ch+var_10] +
mov eax [ebx+0Ch] +
mov [esp+1Ch+arg_10] edi +
mov [esp+1Ch+arg_C] esi +
mov [esp+1Ch+arg_8] ebp +
mov [esp+1Ch+arg_0] ebx +
mov [esp+1Ch+arg_4] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov ecx [esp+40h] +
mov edx [esp+3Ch] +
mov eax ebx +
call sub_44D0F0  +
test eax eax +
jz loc_44D304  +
mov edx [ebx+1Ch] +
xor eax eax +
test edx edx +
jz loc_44D310  +
add esp 28h +
pop ebx  +
retn   +
***
mov ecx [esp+40h] +
mov edx [esp+38h] +
mov eax [ebx+14h] +
mov [esp] ebx +
mov [esp+10h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+0Ch] ecx +
mov [esp+4] edx +
call eax  +
add esp 28h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_C] +
mov esi [esp+10h+arg_0] +
test ebx ebx +
jz loc_44D3C5  +
mov dword ptr [ebx] 0 +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open_0  +
test eax eax +
js loc_44D383  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi ds:__imp__errno +
call edi  +
cmp dword ptr [eax] 2 +
jz loc_44D3B3  +
call edi  +
mov eax [eax] +
mov [esp-0C8h+arg_BC] esi +
mov [esp-0C8h+arg_C0] eax +
mov eax [esp-0C8h+arg_E0] +
mov [esp-0C8h+arg_B8] eax +
call [esp-0C8h+arg_DC]  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx] 1 +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open_0  +
mov edi ds:__imp__errno +
test eax eax +
jns loc_44D37C  +
jmp loc_44D390  +
***
jmp sub_44D3F0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call _close_0  +
mov edx 1 +
test eax eax +
js loc_44D410  +
mov eax edx +
add esp 1Ch +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-50h+arg_50] offset aClose +
mov [esp-50h+arg_54] eax +
mov eax [esp-50h+arg_74] +
mov [esp-50h+arg_4C] eax +
call [esp-50h+arg_70]  +
xor edx edx +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] 0FFFFFFFFh +
mov [esp+1Ch+var_18] offset aNoDebugInfoInP +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_C]  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+14h] +
mov dword ptr [esp+0Ch] 0FFFFFFFFh +
mov dword ptr [esp+8] offset aNoSymbolTableI +
mov [esp+4] eax +
mov eax [esp+10h] +
jmp eax  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx] +
cmp edx [eax+4] +
jb loc_44D4D0  +
cmp edx [eax+0Ch] +
setnb al  +
movzx eax al +
retn   +
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax [ebx+4] +
test eax eax +
jnz loc_44D563  +
mov ebx [ebx+18h] +
test ebx ebx +
jz loc_44D5A0  +
lea esi [esp+34h] +
jmp loc_44D50B  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44D5A0  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_44D4B0 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jz loc_44D501  +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add ebx 18h +
lea esi [esp+34h] +
jmp loc_44D59A  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_44D4B0 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jnz loc_44D535  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44D570  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
jmp loc_44D54A  +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov eax [esp+10Ch+arg_C] +
lea ebx [esp+10Ch+var_84] +
mov ebp [esp+10Ch+arg_0] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 40h +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
test eax eax +
jz loc_44D6E5  +
mov eax [esp+10Ch+var_84] +
cmp byte ptr [eax] 4Dh +
jnz loc_44D633  +
cmp byte ptr [eax+1] 5Ah +
jz loc_44D7DE  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E420  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
test eax eax +
jz loc_44D70F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E420  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aExecutableFile +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44D6EF  +
xor esi esi +
mov [esp+10Ch+var_BC] 0 +
mov [esp+10Ch+var_C0] 0 +
mov ebx [esp+10Ch+var_BC] +
test ebx ebx +
jnz loc_44D7B0  +
mov ecx [esp+10Ch+var_C0] +
test ecx ecx +
jnz loc_44D780  +
test esi esi +
jnz loc_44D750  +
cmp [esp+10Ch+arg_4] 0FFFFFFFFh +
jz loc_44D73E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D3F0  +
add esp 10Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_54] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
jmp loc_44D70F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
jmp loc_44D70B  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_6C] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
jmp loc_44D703  +
mov edi [eax+3Ch] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E420  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
test eax eax +
jz loc_44D6E5  +
test edi edi +
jz loc_44D696  +
mov esi [esp+10Ch+var_84] +
mov [esp+10Ch+var_104] 4 +
mov [esp+10Ch+var_108] offset aPe +
mov [esp+10Ch+var_10C] esi +
call memcmp  +
mov [esp+10Ch+var_C0] eax +
movzx eax word ptr [esi+6] +
mov [esp+10Ch+var_AA] ax +
mov eax [esi+0Ch] +
mov [esp+10Ch+var_B8] eax +
mov eax [esi+10h] +
movzx esi word ptr [esi+14h] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_A8] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E420  +
mov eax [esp+10Ch+var_C0] +
test eax eax +
jnz loc_44D6B8  +
movzx eax [esp+10Ch+var_AA] +
lea ecx [esp+10Ch+var_78] +
movzx ebx si +
mov [esp+10Ch+var_F4] ecx +
mov ecx [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B0] eax +
lea eax [eax+eax*4] +
lea eax [ebx+eax*8] +
mov [esp+10Ch+var_100] eax +
lea eax [edi+18h] +
mov [esp+10Ch+var_F8] ecx +
mov ecx [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_FC] ecx +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
test eax eax +
jz loc_44D6E5  +
cmp si 20h +
mov edx [esp+10Ch+var_78] +
jbe loc_44DF8E  +
movzx eax word ptr [edx] +
cmp ax 10Bh +
jz loc_44E196  +
cmp ax 20Bh +
jnz loc_44E160  +
mov eax [edx+18h] +
mov [esp+10Ch+var_A0] eax +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_44DFAF  +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_C0] edx +
lea eax [eax+eax*8] +
add eax eax +
mov edi eax +
mov [esp+10Ch+var_98] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_FC] eax +
mov eax edi +
add eax 4 +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_B8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
mov edx [esp+10Ch+var_C0] +
test eax eax +
jz loc_44DFDC  +
mov eax [esp+10Ch+var_60] +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_C0] 1 +
mov [esp+10Ch+var_BC] 0 +
mov eax [eax+edi] +
cmp eax 4 +
mov [esp+10Ch+var_A4] eax +
ja loc_44E1BF  +
lea eax [edx+ebx] +
mov ecx 0Fh +
lea edx [esp+10Ch+var_48] +
mov esi eax +
mov [esp+10Ch+var_9C] eax +
mov edi edx +
xor eax eax +
stos   +
mov eax [esp+10Ch+var_B0] +
mov [esp+10Ch+var_B8] 0 +
test eax eax +
jz loc_44DA85  +
mov [esp+10Ch+arg_0] ebp +
lea esi [esi+0] +
xor edi edi +
cmp byte ptr [esi] 2Fh +
jz loc_44DEA0  +
mov eax [esp+10Ch+var_6C] +
xor ebx ebx +
mov ebp [esp+10Ch+var_64] +
add eax edi +
mov [esp+10Ch+var_B4] eax +
test edi edi +
mov ecx ds:off_4D00E8[ebx*4] +
jz loc_44DBB6  +
cmp edi ebp +
jnb loc_44DA64  +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_10C] ecx +
mov [esp+10Ch+var_108] eax +
call strcmp  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jnz loc_44DBE0  +
add ebx 1 +
cmp ebx 5 +
jnz loc_44DA31  +
add [esp+10Ch+var_B8] 1 +
add esi 28h +
mov eax [esp+10Ch+var_B8] +
cmp [esp+10Ch+var_B0] eax +
ja loc_44DA10  +
mov ebp [esp+10Ch+arg_0] +
mov eax [esp+10Ch+var_A8] +
xor ebx ebx +
test eax eax +
jz loc_44DD5F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44CF40  +
test eax eax +
mov [esp+10Ch+var_94] eax +
jz loc_44DB86  +
mov eax [esp+10Ch+var_6C] +
mov edx 38E38E39h +
mov [esp+10Ch+var_90] eax +
mov eax [esp+10Ch+var_60] +
mov ecx eax +
mov [esp+10Ch+var_B0] eax +
mov eax [esp+10Ch+var_98] +
mul  edx +
mov [esp+10Ch+var_B8] edx +
shr [esp+10Ch+var_B8] 2 +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_44E2B4  +
xor edi edi +
xor edx edx +
mov [esp+10Ch+var_A8] edi +
mov edi ecx +
mov [esp+10Ch+var_98] 0 +
nop   +
lea eax [edx+edx*8] +
lea eax [edi+eax*2] +
movzx ecx word ptr [eax+0Eh] +
mov word ptr [esp+10Ch+var_B4] cx +
movzx ecx word ptr [eax+0Ch] +
test cx cx +
jle loc_44DC06  +
cmp [esp+10Ch+var_AA] cx +
jnb loc_44DC06  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aInvalidSection +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_94] +
mov [esp+10Ch+var_108] eax +
call sub_44CF90  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
jmp loc_44D6F7  +
xor eax eax +
movzx edx byte ptr [ecx+eax] +
cmp dl [esi+eax] +
jnz loc_44DA64  +
test dl dl +
jz loc_44DBE0  +
add eax 1 +
cmp eax 8 +
jnz loc_44DBB8  +
xor eax eax +
cmp byte ptr [ecx+8] 0 +
setz al  +
jmp loc_44DA5C  +
mov edx [esi+14h] +
lea eax [ebx+ebx*2] +
shl eax 2 +
mov [esp+eax+10Ch+var_48] edx +
mov edx [esi+8] +
cmp [esi+10h] edx +
cmovbe edx [esi+10h] +
mov [esp+eax+10Ch+var_44] edx +
jmp loc_44DA6C  +
movzx esi byte ptr [eax] +
mov ebx esi +
test bl bl +
jnz loc_44DC1C  +
mov ebx [esp+10Ch+var_A4] +
cmp ebx [eax+4] +
jbe loc_44DB37  +
movzx ebx word ptr [esp+10Ch+var_B4] +
shr bx 4 +
cmp bx 2 +
jz loc_44DEC8  +
movzx eax byte ptr [eax+11h] +
lea edx [edx+eax+1] +
cmp [esp+10Ch+var_B8] edx +
ja loc_44DB10  +
mov eax [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov edi [esp+10Ch+var_A8] +
lea ebx ds:8[eax*8] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44CF40  +
test eax eax +
mov [esp+10Ch+var_A8] eax +
jz loc_44DB58  +
test edi edi +
mov [esp+10Ch+var_B4] 0 +
jnz loc_44E252  +
mov edi [esp+10Ch+var_A8] +
xor esi esi +
mov [esp+10Ch+arg_0] ebp +
nop   +
lea esi [esi+0] +
mov ecx [esp+10Ch+var_B0] +
lea eax [esi+esi*8] +
lea ebx [ecx+eax*2] +
movsx edx word ptr [ebx+0Ch] +
movzx ecx word ptr [ebx+0Eh] +
test dx dx +
jle loc_44DCC3  +
cmp [esp+10Ch+var_AA] dx +
jnb loc_44DCC3  +
call abort  +
movzx ebp byte ptr [ebx] +
mov eax ebp +
test al al +
jz loc_44DEB2  +
mov eax ebx +
shr cx 4 +
cmp cx 2 +
jz loc_44DF06  +
movzx eax byte ptr [ebx+11h] +
lea esi [esi+eax+1] +
cmp [esp+10Ch+var_B8] esi +
ja loc_44DCA0  +
mov ebp [esp+10Ch+arg_0] +
mov dword ptr [edi] 0 +
mov esi [esp+10Ch+var_A8] +
mov dword ptr [edi+4] 0FFFFFFFFh +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_100] offset sub_44D490 +
mov [esp+10Ch+var_104] 8 +
mov [esp+10Ch+var_10C] esi +
mov [esp+10Ch+var_108] edi +
call sub_44E470  +
mov eax [esp+10Ch+var_94] +
mov dword ptr [eax] 0 +
mov [eax+4] esi +
mov [eax+8] edi +
mov eax [ebp+4] +
test eax eax +
jz loc_44E224  +
lea ecx [ebp+18h] +
mov edx ecx +
jmp loc_44DD4A  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_44DD48  +
mov edi [esp+10Ch+var_94] +
cmpxchg [edx] edi +
jnz loc_44DD44  +
mov ebx 1 +
mov eax [esp+10Ch+arg_C] +
xor edi edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_44E420  +
lea eax [esp+10Ch+var_44] +
xor ecx ecx +
mov [esp+10Ch+var_C0] ebx +
mov edx [eax] +
test edx edx +
jz loc_44DDDA  +
test ecx ecx +
jnz loc_44DF9B  +
mov ecx [eax-4] +
mov ebx ecx +
add edx ebx +
cmp edi edx +
cmovl edi edx +
add eax 0Ch +
lea ebx [esp+10Ch+var_8] +
cmp eax ebx +
jnz loc_44DDC0  +
test edi edi +
mov ebx [esp+10Ch+var_C0] +
jz loc_44DDF8  +
test ecx ecx +
jnz loc_44DFF1  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D3F0  +
test eax eax +
jz loc_44D6EF  +
mov [esp+10Ch+var_88] offset sub_44D440 +
mov eax [ebp+4] +
test eax eax +
jnz loc_44DE62  +
test ebx ebx +
jz loc_44DE82  +
mov dword ptr [ebp+14h] offset loc_44D4E0 +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_44DE70  +
cmp eax offset sub_44D440 +
jz loc_44DE70  +
add esp 10Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_44DE92  +
mov dword ptr [ebp+14h] offset loc_44D4E0 +
jmp loc_44DE44  +
mov eax [esp+10Ch+var_88] +
mov edi [esp+10Ch+arg_10] +
mov [edi] eax +
jmp loc_44DE52  +
mov edx [ebp+14h] +
test edx edx +
jnz loc_44DE44  +
mov dword ptr [ebp+14h] offset loc_44D470 +
jmp loc_44DE44  +
mov edx offset loc_44D470 +
mov eax ebx +
cmpxchg [ebp+14h] edx +
jmp loc_44DE44  +
lea eax [esi+1] +
mov [esp+10Ch+var_10C] eax +
call atoi  +
mov edi eax +
jmp loc_44DA1B  +
mov eax [ebx+4] +
cmp [esp+10Ch+var_A4] eax +
jbe loc_44DCBE  +
add eax [esp+10Ch+var_90] +
jmp loc_44DCD2  +
test cx cx +
jle loc_44DC2F  +
mov ecx esi +
add [esp+10Ch+var_98] 1 +
test cl cl +
jz loc_44DC2F  +
xor ecx ecx +
cmp byte ptr [eax+ecx] 0 +
jz loc_44DEF5  +
add ecx 1 +
cmp ecx 8 +
jnz loc_44DEE2  +
mov ecx 8 +
mov esi [esp+10Ch+var_A8] +
lea ecx [esi+ecx+1] +
mov [esp+10Ch+var_A8] ecx +
jmp loc_44DC2F  +
test dx dx +
jle loc_44DCE0  +
mov ecx ebp +
test cl cl +
jz loc_44DF62  +
xor edx edx +
cmp byte ptr [eax+edx] 0 +
jz loc_44E1A2  +
add edx 1 +
cmp edx 8 +
jnz loc_44DF17  +
mov [esp+10Ch+var_C0] 9 +
mov ebp 8 +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_104] ebp +
mov [esp+10Ch+var_10C] eax +
call memcpy  +
mov ecx [esp+10Ch+var_B4] +
mov byte ptr [ecx+ebp] 0 +
mov ebp [esp+10Ch+var_C0] +
mov eax ecx +
movsx edx word ptr [ebx+0Ch] +
add ecx ebp +
mov [esp+10Ch+var_B4] ecx +
xor ecx ecx +
cmp byte ptr [eax] 5Fh +
setz cl  +
add edi 8 +
add eax ecx +
mov ecx [esp+10Ch+var_A0] +
mov [edi-8] eax +
lea eax [edx+edx*4] +
mov edx [esp+10Ch+var_9C] +
add ecx [edx+eax*8-1Ch] +
mov eax [ebx+8] +
add eax ecx +
mov [edi-4] eax +
jmp loc_44DCE0  +
mov [esp+10Ch+var_A0] 0 +
jmp loc_44D940  +
mov esi [eax-4] +
cmp esi ecx +
mov ebx esi +
jge loc_44DDD3  +
mov ecx esi +
jmp loc_44DDD1  +
mov [esp+10Ch+var_A4] 0 +
mov [esp+10Ch+var_A8] 0 +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_98] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44D9DB  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44DB86  +
lea eax [esp+10Ch+var_54] +
sub edi ecx +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_100] edi +
mov [esp+10Ch+var_104] ecx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_C0] ecx +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
test eax eax +
jz loc_44D6EF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D3F0  +
mov ecx [esp+10Ch+var_C0] +
test eax eax +
jz loc_44E248  +
mov esi [esp+10Ch+var_54] +
lea edx [esp+10Ch+var_44] +
mov edi [edx] +
test edi edi +
jnz loc_44E1B0  +
mov dword ptr [edx+4] 0 +
add edx 0Ch +
lea eax [esp+10Ch+var_8] +
cmp eax edx +
jnz loc_44E07C  +
lea eax [esp+10Ch+var_88] +
mov esi 1 +
mov [esp+10Ch+var_D0] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_DC] 0 +
mov [esp+10Ch+var_108] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_D4] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_D8] eax +
mov eax [esp+10Ch+var_14] +
mov [esp+10Ch+var_E0] eax +
mov eax [esp+10Ch+var_10] +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+var_20] +
mov [esp+10Ch+var_E8] eax +
mov eax [esp+10Ch+var_1C] +
mov [esp+10Ch+var_EC] eax +
mov eax [esp+10Ch+var_2C] +
mov [esp+10Ch+var_F0] eax +
mov eax [esp+10Ch+var_28] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+var_38] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+var_34] +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_44] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_40] +
mov [esp+10Ch+var_104] eax +
call sub_452000  +
mov [esp+10Ch+arg_4] 0FFFFFFFFh +
test eax eax +
jz loc_44D6EF  +
jmp loc_44DE32  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aBadMagicInPeOp +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44DB86  +
mov eax [edx+1Ch] +
mov [esp+10Ch+var_A0] eax +
jmp loc_44D940  +
lea ecx [edx+1] +
mov ebp edx +
mov [esp+10Ch+var_C0] ecx +
jmp loc_44DF36  +
mov eax esi +
sub eax ecx +
add eax [edx-4] +
mov [edx+4] eax +
jmp loc_44E08D  +
lea eax [esp+10Ch+var_6C] +
mov edi [esp+10Ch+var_B8] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
add edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B4] edx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_A4] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E300  +
mov edx [esp+10Ch+var_B4] +
test eax eax +
jz loc_44DB86  +
mov [esp+10Ch+var_BC] 1 +
jmp loc_44D9DB  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_44E232  +
jmp loc_44E2AF  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_44E230  +
mov eax [esp+10Ch+var_94] +
mov ebx 1 +
mov [edx] eax +
jmp loc_44DD5F  +
mov esi 1 +
jmp loc_44D6EF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44CF40  +
test eax eax +
mov [esp+10Ch+var_B4] eax +
jnz loc_44DC8E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_108] eax +
call sub_44CF90  +
jmp loc_44DB58  +
lea edx [ebp+18h] +
jmp loc_44E238  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 8 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44CF40  +
test eax eax +
mov edi eax +
mov [esp+10Ch+var_A8] eax +
jz loc_44DB58  +
mov [esp+10Ch+var_98] 0 +
jmp loc_44DCF5  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] 0 +
mov ebx [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call _lseek  +
test eax eax +
js loc_44E3C0  +
mov eax [esp+1Ch+arg_14] +
xor ebp ebp +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44CF40  +
test eax eax +
mov [esi+4] eax +
jz loc_44E37E  +
mov [esi] eax +
mov [esi+8] ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call _read_0  +
test eax eax +
js loc_44E3F0  +
cmp ebx eax +
mov ebp 1 +
ja loc_44E388  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_14] +
xor bp bp +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] offset aFileTooShort +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
xor ebp ebp +
mov eax [eax] +
mov [esp-50h+arg_40] offset aLseek +
mov [esp-50h+arg_44] eax +
mov eax [esp-50h+arg_80] +
mov [esp-50h+arg_3C] eax +
call [esp-50h+arg_7C]  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-50h+arg_40] offset aRead +
mov [esp-50h+arg_44] eax +
mov eax [esp-50h+arg_80] +
mov [esp-50h+arg_3C] eax +
call [esp-50h+arg_7C]  +
mov eax [esi+4] +
mov [esp-50h+arg_3C] eax +
call free  +
jmp loc_44E37E  +
***
mov ebx [esp+28h+arg_4] +
mov ecx [esp+28h+arg_C] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+28h+var_18] ecx +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_28] eax +
call sub_44CF90  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_4] 1 +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
jbe loc_44E59D  +
lea esi [esi+0] +
mov edx [esp+2Ch+arg_4] +
shr edx 1 +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_44E4B8  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_44E4A1  +
xor eax eax +
mov edi 1 +
lea ebx [ebp+esi+0] +
mov [esp+2Ch+arg_0] ebp +
mov ebp eax +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
test eax eax +
jle loc_44E51E  +
add ebp 1 +
cmp edi ebp +
jz loc_44E51E  +
mov edx ebp +
imul edx esi +
add edx [esp+2Ch+arg_0] +
test esi esi +
jz loc_44E51E  +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
mov [esp+2Ch+var_D] cl +
movzx ecx byte ptr [ebx+eax] +
mov [edx+eax] cl +
movzx ecx [esp+2Ch+var_D] +
mov [ebx+eax] cl +
add eax 1 +
cmp eax esi +
jnz loc_44E500  +
add edi 1 +
add ebx esi +
cmp edi [esp+2Ch+arg_4] +
jb loc_44E4D0  +
mov eax ebp +
mov edi ebp +
mov ebp [esp+2Ch+arg_0] +
test eax eax +
jz loc_44E559  +
mov edx eax +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_44E559  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_44E542  +
mov eax edi +
add eax eax +
cmp eax [esp+2Ch+arg_4] +
jnb loc_44E5A5  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] eax +
call sub_44E470  +
mov eax edi +
add eax 1 +
imul eax esi +
add ebp eax +
mov eax [esp+2Ch+arg_4] +
sub eax edi +
sub eax 1 +
mov [esp+2Ch+arg_4] eax +
cmp [esp+2Ch+arg_4] 1 +
ja loc_44E490  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
sub eax 1 +
sub eax edi +
mov [esp+2Ch+var_28] eax +
mov eax edi +
add eax 1 +
imul eax esi +
add eax ebp +
mov [esp+2Ch+var_2C] eax +
call sub_44E470  +
mov [esp+2Ch+arg_4] edi +
jmp loc_44E592  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_44E600  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_44E617  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44E5F7  +
jb loc_44E613  +
cmp ecx [edx+8] +
jnb loc_44E5F7  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_44E5F2  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44E5F7  +
jmp loc_44E60C  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_44E650  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_44E667  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44E647  +
jb loc_44E663  +
cmp ecx [edx+8] +
jnb loc_44E647  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_44E642  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44E647  +
jmp loc_44E65C  +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov edx [edx] +
cmp edx [eax] +
jb loc_44E698  +
cmp edx [eax+10h] +
setnb al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov ecx [edx+4] +
mov esi [edx] +
mov edx [eax+4] +
mov ebx [eax] +
cmp ecx edx +
jnb loc_44E6C3  +
mov eax 0FFFFFFFFh +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
jbe loc_44E6E0  +
cmp ecx edx +
mov eax 1 +
ja loc_44E6C0  +
nop   +
jb loc_44E6D6  +
cmp esi ebx +
ja loc_44E6C0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
cmp esi ebx +
jb loc_44E6B8  +
cmp ecx edx +
mov eax 1 +
ja loc_44E6C0  +
jmp loc_44E6CE  +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov ebp ebx +
mov ecx [esp+54h+arg_0] +
mov esi [esp+54h+arg_20] +
mov [esp+54h+var_2C] ecx +
mov ecx [esp+54h+arg_4] +
add edi [esp+54h+var_2C] +
mov [esp+54h+var_28] ecx +
mov ecx [esp+54h+arg_8] +
adc ebp [esp+54h+var_28] +
mov [esp+54h+var_24] ecx +
mov ecx [esp+54h+arg_C] +
mov [esp+54h+var_20] ecx +
mov ecx [esp+54h+arg_10] +
mov [esp+54h+var_1C] ecx +
mov ecx [esp+54h+arg_14] +
mov [esp+54h+var_18] ecx +
mov ecx edx +
mov edx [esi+0Ch] +
add ecx [esp+54h+var_24] +
adc ebx [esp+54h+var_20] +
test edx edx +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_30] ebx +
jz loc_44E792  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+54h+var_3C] ecx +
mov ecx [esp+54h+var_3C] +
mov [esp+54h+var_38] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_44E810  +
mov ecx [esp+54h+var_3C] +
mov ebx [esp+54h+var_38] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_44E810  +
mov edx [esp+54h+arg_1C] +
mov [esp+54h+var_44] esi +
mov [esp+54h+var_50] 18h +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+arg_18] +
mov [esp+54h+var_4C] edx +
call sub_44CFA0  +
test eax eax +
jz loc_44E848  +
mov edx edi +
mov [eax] edx +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
mov edx [esp+54h+var_28] +
mov [esp+54h+var_2C] edi +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_20] ebp +
mov [eax+4] edx +
mov edx [esp+54h+var_20] +
mov [eax+8] edi +
mov [esp+54h+var_24] edi +
mov [eax+0Ch] edx +
mov edx [esp+54h+var_1C] +
mov [eax+10h] edx +
mov edx [esp+54h+var_18] +
mov [eax+14h] edx +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [edx+10h] +
cmp [esp+54h+var_1C] ebx +
jnz loc_44E792  +
mov eax [esp+54h+var_38] +
cmp [esp+54h+var_30] eax +
jb loc_44E850  +
ja loc_44E833  +
mov eax [esp+54h+var_3C] +
cmp [esp+54h+var_34] eax +
jbe loc_44E850  +
mov esi [esp+54h+var_34] +
mov eax 1 +
mov edi [esp+54h+var_30] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_44E802  +
xor eax eax +
jmp loc_44E802  +
mov eax 1 +
jmp loc_44E802  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+20h] +
mov esi [esp+38h+arg_0] +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_28] esi +
mov ecx [edx+1Ch] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
lea edx ds:0[ecx*4] +
mov [esp+38h+var_30] edx +
call sub_44CF90  +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_2C] ebp +
shl edx 2 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
call sub_44CF90  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [edx] +
test eax eax +
jz loc_44E90D  +
xor ebx ebx +
mov eax [ebp+4] +
lea ecx [ebx+ebx*2] +
add ebx 1 +
mov edx [esp+38h+arg_0] +
lea eax [eax+ecx*8] +
mov ecx [eax+14h] +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_2C] edi +
mov eax [eax+10h] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] ecx +
shl eax 3 +
mov [esp+38h+var_30] eax +
call sub_44CF90  +
mov eax [ebp+0] +
cmp eax ebx +
ja loc_44E8D5  +
mov ecx [ebp+4] +
lea eax [eax+eax*2] +
mov edx [esp+38h+arg_0] +
shl eax 3 +
mov [esp+38h+var_2C] edi +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_34] ecx +
call sub_44CF90  +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [esp+14h] +
mov ebx [edx+4] +
mov ecx [eax+4] +
mov edi [edx] +
mov esi [eax] +
cmp ebx ecx +
jnb loc_44E972  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_44E980  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_44E969  +
cmp ebx ecx +
jb loc_44E98C  +
cmp edi esi +
ja loc_44E974  +
mov ebx [edx+0Ch] +
mov ecx [eax+0Ch] +
mov edi [edx+8] +
mov esi [eax+8] +
cmp ebx ecx +
jb loc_44E974  +
ja loc_44E969  +
cmp edi esi +
jb loc_44E974  +
cmp ebx ecx +
jb loc_44E9AA  +
cmp edi esi +
ja loc_44E969  +
mov ecx [edx+10h] +
xor ebx ebx +
mov edx [eax+10h] +
mov eax [edx+18h] +
cmp [ecx+18h] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_44EA00  +
mov eax 1 +
ja loc_44E9F9  +
mov eax [edx+0Ch] +
xor ebx ebx +
cmp [ecx+0Ch] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax [ecx] +
test eax eax +
jnz loc_44EA30  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [edx] +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] offset sub_44E5E0 +
mov [esp+2Ch+var_20] 18h +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call bsearch  +
test eax eax +
mov esi eax +
jz loc_44EA23  +
mov eax [edi] +
mov edx esi +
mov ecx eax +
sub edx ecx +
sar edx 3 +
imul edx edx +
mov [esp+2Ch+var_18] eax +
mov eax [ebx] +
add edx 1 +
cmp eax edx +
jbe loc_44EB82  +
mov ebx [esp+2Ch+var_10] +
xor ebp ebp +
cmp dword ptr [esi+1Ch] 0 +
mov [esp+2Ch+var_14] ebx +
mov edi ebx +
ja loc_44EA9B  +
cmp [esi+18h] ebx +
jbe loc_44EB22  +
mov eax [esp+2Ch+var_14] +
mov edx esi +
mov esi [esp+2Ch+arg_C] +
mov ebx [edx+10h] +
mov [esp+2Ch+var_20] esi +
mov esi [esp+2Ch+arg_8] +
lea ecx [ebx+10h] +
lea edx [ebx+0Ch] +
mov [esp+2Ch+var_24] esi +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] esi +
call sub_44EA10  +
test eax eax +
jnz loc_44EA25  +
mov eax [esp+2Ch+arg_C] +
mov ecx [ebx] +
mov edx [eax] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_0]  +
test eax eax +
jnz loc_44EA25  +
mov edx [ebx+4] +
mov ecx [esp+2Ch+arg_8] +
mov [ecx] edx +
mov edx [ebx+8] +
mov ebx [esp+2Ch+arg_C] +
mov [ebx] edx +
jmp loc_44EA25  +
cmp dword ptr [esi+24h] 0 +
ja loc_44EB31  +
cmp [esi+20h] ebx +
jbe loc_44EA9B  +
mov edx esi +
mov ecx edi +
mov ebx ebp +
add edx 18h +
mov edi edx +
sub edi [esp+2Ch+var_18] +
sar edi 3 +
imul edi edi +
add edi 1 +
cmp edi eax +
jnb loc_44EB5D  +
mov ebp edx +
sub ebp esi +
lea edi [esi+30h] +
cmp [ebp+edi-14h] ebx +
jbe loc_44EB66  +
mov eax [esp+2Ch+var_14] +
jmp loc_44EAA1  +
jb loc_44EB6E  +
cmp [ebp+edi-18h] ecx +
ja loc_44EB5D  +
cmp [ebp+edi-0Ch] ebx +
jb loc_44EB5D  +
ja loc_44EB37  +
cmp [ebp+edi-10h] ecx +
jbe loc_44EB5D  +
lea esi [esi+0] +
jmp loc_44EB37  +
mov eax [esp+2Ch+var_10] +
mov edx esi +
jmp loc_44EAA1  +
***
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 4Ch +
add esi 0FFFFFFFFh +
mov ebx [eax] +
adc edi 0FFFFFFFFh +
cmp edi 0 +
ja loc_44EC10  +
cmp esi ebx +
jnb loc_44EC10  +
mov esi [eax+4] +
lea eax [edx+edx*2] +
lea eax [esi+eax*8-18h] +
mov ebp [eax+4] +
mov edi [eax] +
xor ebp ecx +
xor edi edx +
or ebp edi +
jz loc_44EC05  +
xor eax eax +
mov [esp+eax+54h+var_2C] 0 +
add eax 4 +
cmp eax 18h +
jb loc_44EBC5  +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_44] offset loc_44E6A0 +
mov [esp+54h+var_48] 18h +
mov [esp+54h+var_4C] ebx +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_2C] edx +
mov [esp+54h+var_28] ecx +
call bsearch  +
test eax eax +
jz loc_44EC15  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [eax+4] +
jmp loc_44EBC3  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_4C] 0 +
mov [esp+54h+var_50] offset aInvalidAbbrevi +
mov [esp+54h+var_54] eax +
call [esp+54h+arg_0]  +
xor eax eax +
jmp loc_44EC05  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_10] +
mov edi [esp+38h+arg_0] +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_44EC69  +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [ebx] +
cmp [edx] ecx +
jz loc_44ECC0  +
mov edx [esp+38h+arg_C] +
mov [esp+38h+var_28] ebx +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] edx +
mov edx [esp+38h+arg_8] +
mov [esp+38h+var_30] edx +
call sub_44CFA0  +
test eax eax +
jz loc_44ECD5  +
mov edx [ebx+0Ch] +
mov ecx [esp+38h+arg_4] +
add esi [ebp+0] +
mov [eax+4] edi +
mov [eax+0Ch] edx +
add edx 1 +
mov [eax] esi +
mov [eax+8] ecx +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [edx+4] edi +
jnz loc_44EC69  +
mov ecx [esp+38h+arg_4] +
cmp [edx+8] ecx +
jnz loc_44EC69  +
mov eax 1 +
jmp loc_44ECB1  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov ebp ebx +
mov esi [esp+44h+arg_18] +
mov [esp+44h+var_20] ecx +
mov ecx edx +
add edi [esp+44h+arg_0] +
adc ebp [esp+44h+arg_4] +
mov edx [esi+0Ch] +
add ecx [esp+44h+arg_8] +
adc ebx [esp+44h+arg_C] +
test edx edx +
mov [esp+44h+var_1C] ecx +
mov [esp+44h+var_18] ebx +
jz loc_44ED4F  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+44h+var_2C] ecx +
mov ecx [esp+44h+var_2C] +
mov [esp+44h+var_28] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_44EDA2  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_44EDA2  +
mov edx [esp+44h+arg_14] +
mov [esp+44h+var_34] esi +
mov [esp+44h+var_40] 18h +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_38] edx +
mov edx [esp+44h+arg_10] +
mov [esp+44h+var_3C] edx +
call sub_44CFA0  +
test eax eax +
jz loc_44EDD6  +
mov [eax] edi +
mov edi [esp+44h+var_1C] +
mov [eax+4] ebp +
mov ebp [esp+44h+var_18] +
mov [eax+8] edi +
mov edi [esp+44h+var_20] +
mov [eax+0Ch] ebp +
mov [eax+10h] edi +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+44h+var_20] +
cmp [edx+10h] ebx +
jnz loc_44ED4F  +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_18] eax +
jb loc_44EDE0  +
ja loc_44EDC1  +
mov eax [esp+44h+var_2C] +
cmp [esp+44h+var_1C] eax +
jbe loc_44EDE0  +
mov esi [esp+44h+var_1C] +
mov eax 1 +
mov edi [esp+44h+var_18] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_44ED9A  +
xor eax eax +
jmp loc_44ED9A  +
mov eax 1 +
jmp loc_44ED9A  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [eax+4] +
mov ecx [edx+4] +
mov edi [eax] +
mov esi [edx] +
cmp ebx ecx +
jnb loc_44EE12  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_44EE20  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_44EE09  +
cmp ebx ecx +
jb loc_44EE2C  +
cmp edi esi +
ja loc_44EE14  +
mov ebx [eax+0Ch] +
mov ecx [edx+0Ch] +
mov edi [eax+8] +
mov esi [edx+8] +
cmp ebx ecx +
jb loc_44EE14  +
ja loc_44EE09  +
cmp edi esi +
jb loc_44EE14  +
cmp ebx ecx +
jb loc_44EE4A  +
cmp edi esi +
ja loc_44EE09  +
mov edx [edx+10h] +
mov edx [edx] +
mov [esp+14h] edx +
mov eax [eax+10h] +
mov eax [eax] +
mov [esp+10h] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp strcmp  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aSInSAtD +
mov [esp+1Ch+var_18] 0C8h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
mov ebx eax +
sub esp 0F4h +
mov ecx [eax] +
mov eax [eax+8] +
lea esi [esp+0F4h+var_CC] +
sub eax [ebx+4] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_E4] ecx +
mov [esp+0F4h+var_F4] esi +
mov [esp+0F4h+var_E0] eax +
mov [esp+0F4h+var_EC] offset aSInSAtD +
mov [esp+0F4h+var_F0] 0C8h +
call sub_44EE70  +
mov edx [ebx+18h] +
mov eax [ebx+14h] +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F4] edx +
call eax  +
add esp 0F4h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_44EF20  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44EF32  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
sub eax edx +
mov [ebx+0Ch] eax +
mov eax 1 +
add [ebx+8] edx +
add esp 8 +
pop ebx  +
retn   +
mov edx offset aDwarfUnderflow +
mov eax ebx +
call sub_44EEA0  +
mov dword ptr [ebx+1Ch] 1 +
jmp loc_44EF14  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_44EF00  +
test eax eax +
jz loc_44EFB7  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_44EF93  +
movzx eax byte ptr [esi+3] +
movzx edx byte ptr [esi+2] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi] +
or eax edx +
movzx edx byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx eax byte ptr [esi] +
movzx edx byte ptr [esi+1] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi+3] +
or eax edx +
movzx edx byte ptr [esi+2] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov esi eax +
sub esp 4 +
mov ebx [eax+8] +
call sub_44EF00  +
test eax eax +
jz loc_44F0A1  +
mov esi [esi+10h] +
test esi esi +
jnz loc_44F042  +
movzx ecx byte ptr [ebx+7] +
xor edx edx +
movzx eax byte ptr [ebx+6] +
movzx esi byte ptr [ebx] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+5] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+4] +
or ecx eax +
movzx eax byte ptr [ebx+3] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+2] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+1] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
movzx ecx byte ptr [ebx] +
xor edx edx +
movzx eax byte ptr [ebx+1] +
movzx esi byte ptr [ebx+7] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+3] +
or ecx eax +
movzx eax byte ptr [ebx+4] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+5] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+6] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
xor esi esi +
add esp 4 +
xor ecx ecx +
mov eax esi +
mov edx ecx +
pop ebx  +
pop esi  +
retn   +
***
test edx edx +
jnz loc_44F0C2  +
sub esp 0Ch +
call sub_44EF50  +
xor edx edx +
add esp 0Ch +
retn   +
jmp sub_44EFC0  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_44EF00  +
test eax eax +
jz loc_44F113  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_44F101  +
movzx edx byte ptr [esi+1] +
movzx eax byte ptr [esi] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx edx byte ptr [esi] +
movzx eax byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov ebx [eax+8] +
call sub_44EF00  +
test eax eax +
jz loc_44F140  +
movzx eax byte ptr [ebx] +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_44F194  +
mov eax ebx +
mov ecx edi +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44F187  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or ebp eax +
add edi 7 +
test bl bl +
jns loc_44F1D2  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44EF00  +
test eax eax +
jz loc_44F1E0  +
cmp edi 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_44F170  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_44F18D  +
mov edx offset aLeb128Overflow +
mov eax esi +
call sub_44EEA0  +
add edi 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_44F194  +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 2 +
jz loc_44F260  +
jle loc_44F220  +
cmp edx 4 +
jz loc_44F210  +
cmp edx 8 +
jnz loc_44F246  +
add esp 8 +
pop ebx  +
jmp sub_44EFC0  +
call sub_44EF50  +
xor edx edx +
add esp 8 +
pop ebx  +
retn   +
cmp edx 1 +
jnz loc_44F246  +
mov edx 1 +
mov ebx [eax+8] +
call sub_44EF00  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_44F217  +
movzx eax byte ptr [ebx] +
add esp 8 +
xor edx edx +
pop ebx  +
retn   +
mov edx offset aUnrecognizedAd +
call sub_44EEA0  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
call sub_44F0D0  +
add esp 8 +
xor edx edx +
pop ebx  +
movzx eax ax +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_44F2B4  +
mov eax ebx +
mov ecx ebp +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44F2A7  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or edi eax +
add ebp 7 +
test bl bl +
jns loc_44F2F2  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44EF00  +
test eax eax +
jz loc_44F330  +
cmp ebp 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_44F290  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_44F2AD  +
mov edx offset aSignedLeb128Ov +
mov eax esi +
call sub_44EEA0  +
add ebp 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_44F2B4  +
and ebx 40h +
jz loc_44F31B  +
cmp ebp 3Fh +
ja loc_44F31B  +
mov ecx ebp +
mov eax 0FFFFFFFFh +
shl eax cl +
xor ebx ebx +
mov edx 0FFFFFFFFh +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebx +
or [esp+28h+var_1C] edx +
or edi eax +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov ebp [esp+30h+arg_0] +
mov edi [esp+30h+arg_4] +
mov ebx [esp+30h+arg_10] +
mov [esp+30h+var_1C] edx +
mov edx [esp+30h+arg_C] +
mov [esp+30h+var_18] edx +
cmp eax 10h +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
jz loc_44F732  +
ja loc_44F3E0  +
cmp eax 8 +
jz loc_44F600  +
jbe loc_44F460  +
cmp eax 0Ch +
lea esi [esi+0] +
jz loc_44F512  +
ja loc_44F4C0  +
cmp eax 0Ah +
nop   +
jz loc_44F700  +
ja loc_44F512  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44F150  +
mov edx eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44EF00  +
cmp eax 17h +
jz loc_44F4F0  +
jbe loc_44F436  +
cmp eax 1F01h +
jz loc_44F5B0  +
ja loc_44F491  +
cmp eax 19h +
nop   +
jz loc_44F6E0  +
jb loc_44F690  +
cmp eax 20h +
nop   +
jnz loc_44F4AA  +
mov dword ptr [ebx] 7 +
mov eax esi +
call sub_44EFC0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 13h +
jz loc_44F650  +
jbe loc_44F547  +
cmp eax 15h +
jz loc_44F6A0  +
nop   +
ja loc_44F623  +
mov dword ptr [ebx] 4 +
jmp loc_44F41C  +
cmp eax 4 +
jz loc_44F637  +
jbe loc_44F580  +
cmp eax 6 +
jz loc_44F727  +
nop   +
lea esi [esi+0] +
ja loc_44F671  +
mov dword ptr [ebx] 1 +
jmp loc_44F55F  +
cmp eax 1F20h +
jz loc_44F4F0  +
cmp eax 1F21h +
jz loc_44F4F0  +
cmp eax 1F02h +
jz loc_44F5B0  +
mov eax esi +
mov edx offset aUnrecognizedDw +
call sub_44EEA0  +
xor eax eax +
jmp loc_44F50A  +
cmp eax 0Eh +
jz loc_44F6B0  +
ja loc_44F680  +
mov dword ptr [ebx] 2 +
mov eax esi +
call sub_44F270  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_44F50A  +
mov dword ptr [ebx] 6 +
mov edx ecx +
mov eax esi +
call sub_44F0B0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 1 +
mov edx 1 +
mov eax esi +
mov edi [esi+8] +
call sub_44EF00  +
xor edx edx +
xor ecx ecx +
test eax eax +
jz loc_44F534  +
movzx edx byte ptr [edi] +
xor ecx ecx +
mov [ebx+8] edx +
mov eax 1 +
mov [ebx+0Ch] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 11h +
jz loc_44F5F0  +
cmp eax 12h +
jnz loc_44F4AA  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_44F0D0  +
mov dword ptr [ebx+0Ch] 0 +
movzx eax ax +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F50A  +
cmp eax 1 +
jz loc_44F5D0  +
cmp eax 3 +
jnz loc_44F4AA  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44F0D0  +
movzx edx ax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44EF00  +
mov dword ptr [ebx] 6 +
mov eax esi +
call sub_44F150  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 0 +
mov edx edi +
mov eax esi +
call sub_44F1F0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_44F50A  +
mov dword ptr [ebx] 4 +
jmp loc_44F518  +
mov eax [esi+8] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov edx [esi+0Ch] +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_2C] edx +
call sub_4747F0  +
lea edx [eax+1] +
jmp loc_44F59E  +
mov eax esi +
mov [esp+30h+var_14] ecx +
call sub_44F150  +
mov ecx [esp+30h+var_14] +
jmp loc_44F365  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44EF50  +
mov edx eax +
jmp loc_44F3CB  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_44EF50  +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F50A  +
mov dword ptr [ebx] 1 +
jmp loc_44F41C  +
mov dword ptr [ebx] 1 +
jmp loc_44F5B6  +
mov dword ptr [ebx] 9 +
jmp loc_44F3C2  +
mov dword ptr [ebx] 4 +
jmp loc_44F5B6  +
mov edx ecx +
mov eax esi +
call sub_44F0B0  +
cmp edx 0 +
ja loc_44F6C8  +
cmp eax [esp+30h+var_18] +
jb loc_44F746  +
mov eax esi +
mov edx offset aDw_form_strpOu +
call sub_44EEA0  +
xor eax eax +
jmp loc_44F50A  +
mov dword ptr [ebx] 1 +
mov eax 1 +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_44F50A  +
mov dword ptr [ebx] 8 +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44EF00  +
xor edx edx +
test eax eax +
jz loc_44F59E  +
movzx edx byte ptr [ebx] +
jmp loc_44F59E  +
mov dword ptr [ebx] 1 +
jmp loc_44F656  +
cmp ebp 2 +
mov dword ptr [ebx] 5 +
jnz loc_44F4F6  +
jmp loc_44F5D6  +
add eax [esp+30h+var_1C] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F50A  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov edi [esp+0ACh+arg_1C] +
lea esi [esp+0ACh+var_2C] +
mov [esp+0ACh+var_54] eax +
mov [esp+0ACh+var_50] edx +
mov [esp+0ACh+var_88] ecx +
lea eax [edi+28h] +
mov [esp+0ACh+var_5C] eax +
mov eax [esp+0ACh+var_88] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44F9E4  +
mov eax [esp+0ACh+var_88] +
call sub_44F150  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_44F9E4  +
mov ebx [esp+0ACh+arg_18] +
mov edx eax +
mov eax [esp+0ACh+var_5C] +
mov [esp+0ACh+var_A8] ebx +
mov ebx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] ebx +
call sub_44EB90  +
test eax eax +
mov ebp eax +
jz loc_44FBAF  +
mov eax [eax+10h] +
test eax eax +
jz loc_44FB30  +
mov edx [ebp+14h] +
xor ebx ebx +
mov [esp+0ACh+var_6C] 0 +
mov [esp+0ACh+var_64] 0 +
mov [esp+0ACh+var_60] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_7C] 0 +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [esp+0ACh+var_68] 0 +
mov [esp+0ACh+var_74] 0 +
mov [esp+0ACh+var_70] 0 +
jmp loc_44F86E  +
cmp eax 1Bh +
jz loc_44FAD0  +
cmp eax 55h +
jz loc_44FA92  +
cmp eax 12h +
jz loc_44FA60  +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp [ebp+10h] ebx +
jbe loc_44F8F8  +
mov edx ecx +
mov eax [edx+ebx*8+4] +
mov edx [esp+0ACh+arg_4] +
mov ecx [edi+10h] +
mov [esp+0ACh+var_9C] esi +
mov [esp+0ACh+var_A0] edx +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_A8] edx +
mov edx [edi+0Ch] +
mov [esp+0ACh+var_AC] edx +
mov edx [esp+0ACh+var_88] +
call sub_44F340  +
test eax eax +
jz loc_44F9F0  +
mov ecx [ebp+14h] +
mov eax [ecx+ebx*8] +
cmp eax 11h +
jz loc_44FA27  +
ja loc_44F840  +
cmp eax 3 +
jz loc_44FA00  +
cmp eax 10h +
jnz loc_44F860  +
cmp dword ptr [ebp+8] 11h +
jnz loc_44F860  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jnz loc_44FBC0  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
add ebx 1 +
cmp [ebp+10h] ebx +
ja loc_44F86C  +
mov eax [ebp+8] +
cmp eax 2Eh +
jz loc_44F909  +
cmp eax 11h +
jnz loc_44FB30  +
mov eax [esp+0ACh+var_6C] +
test eax eax +
jnz loc_44FBD8  +
mov ebx [esp+0ACh+var_68] +
test ebx ebx +
jz loc_44FB30  +
mov ecx [esp+0ACh+var_7C] +
test ecx ecx +
jz loc_44FB30  +
mov edx [esp+0ACh+var_58] +
test edx edx +
jz loc_44F945  +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
add [esp+0ACh+var_84] eax +
adc [esp+0ACh+var_80] edx +
mov edx [esp+0ACh+var_74] +
mov ecx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_80] +
mov [esp+0ACh+var_1C] edi +
mov eax edx +
mov [esp+0ACh+var_28] ecx +
mov ecx [esp+0ACh+var_84] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_28] +
mov [esp+0ACh+var_2C] edx +
mov [esp+0ACh+var_20] ebx +
mov edx ecx +
mov [esp+0ACh+var_24] ecx +
mov ecx [esp+0ACh+arg_20] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_A4] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] ecx +
mov ecx [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_90] ecx +
mov ecx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
mov [esp+0ACh+var_94] ecx +
call sub_44E6F0  +
test eax eax +
jz loc_44F9F0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_44FB30  +
mov eax 1 +
lea esi [esi+0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+8] 11h +
jnz loc_44F860  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov [edi+1Ch] eax +
jmp loc_44F860  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_68] 1 +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jmp loc_44F860  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_44FAF7  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_44F860  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jz loc_44FAA7  +
cmp eax 1 +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 1 +
mov [esp+0ACh+var_64] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_60] eax +
jmp loc_44F860  +
cmp dword ptr [ebp+8] 11h +
jnz loc_44F860  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov [edi+20h] eax +
jmp loc_44F860  +
cmp eax 1 +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_58] 1 +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_44F860  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_44F78B  +
mov eax [esp+0ACh+arg_20] +
mov ecx [esp+0ACh+var_88] +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+arg_C] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+arg_8] +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_54] +
call sub_44F760  +
test eax eax +
jnz loc_44F78B  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_44F860  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
jmp loc_44F8EC  +
cmp [esp+0ACh+var_60] 0 +
jbe loc_44FC04  +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset aRangesOffsetOu +
mov [esp+0ACh+var_AC] eax +
call [esp+0ACh+arg_14]  +
xor eax eax +
jmp loc_44FBB1  +
mov eax [esp+0ACh+var_64] +
cmp eax [esp+0ACh+arg_C] +
jnb loc_44FBDF  +
mov eax [esp+0ACh+arg_8] +
mov ecx [esp+0ACh+var_64] +
mov [esp+0ACh+var_2C] offset a_debug_ranges +
mov [esp+0ACh+var_10] 0 +
mov [esp+0ACh+var_28] eax +
mov eax [esp+0ACh+arg_8] +
add eax ecx +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+arg_C] +
sub eax ecx +
xor ecx ecx +
mov [esp+0ACh+var_20] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_1C] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_18] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_14] eax +
test ecx ecx +
jnz loc_44FBAF  +
mov edx [edi+14h] +
mov eax esi +
call sub_44F1F0  +
mov [esp+0ACh+var_78] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_7C] eax +
mov eax esi +
call sub_44F1F0  +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_80] edx +
mov ecx [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_78] +
mov ebx [esp+0ACh+var_80] +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_44FD89  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_44FD50  +
jle loc_44FD30  +
cmp ecx 4 +
jz loc_44FD70  +
cmp ecx 8 +
jnz loc_44FDA0  +
mov ecx [esp+0ACh+var_7C] +
mov ebx [esp+0ACh+var_78] +
mov eax ecx +
and eax ebx +
cmp eax 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_44FDA0  +
mov ecx [esp+0ACh+var_10] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
test ecx ecx +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jz loc_44FC8D  +
xor eax eax +
jmp loc_44FBB1  +
cmp ecx 1 +
jnz loc_44FDA0  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor bl 0FFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_44FCFE  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor ebx 0FFFFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_44FCFE  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
not ebx  +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_44FCFE  +
mov eax [esp+0ACh+var_10] +
test eax eax +
jz loc_44F9DA  +
xor eax eax +
jmp loc_44FBB1  +
mov ecx [esp+0ACh+var_7C] +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_78] +
mov [esp+0ACh+var_34] edi +
add ecx eax +
mov [esp+0ACh+var_7C] ecx +
adc ebx edx +
add eax [esp+0ACh+var_84] +
mov [esp+0ACh+var_44] ecx +
mov [esp+0ACh+var_40] ebx +
mov ecx eax +
mov [esp+0ACh+var_3C] eax +
mov eax [esp+0ACh+arg_20] +
adc edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_38] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_40] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_38] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
call sub_44E6F0  +
test eax eax +
jz loc_44FBAF  +
mov ecx [esp+0ACh+var_10] +
jmp loc_44FC85  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
mov ebx edx +
sub esp 5Ch +
mov esi [ebx+8] +
mov edx [esp+68h+arg_4] +
mov eax [esp+68h+arg_0] +
cmp edi edx +
jbe loc_44FE81  +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] offset aAbstractOrigin +
mov [esp+68h+var_68] eax +
call [esp+68h+arg_8]  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_44FFE0  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_44FE5C  +
cmp eax ecx +
jnb loc_44FE5C  +
mov edx [ebp+10h] +
sub ecx eax +
mov [esp+68h+var_2C] ecx +
mov [esp+68h+var_38] offset a_debug_info +
mov [esp+68h+var_1C] 0 +
mov [esp+68h+var_34] edx +
mov edx [ebx] +
add edx eax +
mov eax [ebp+30h] +
mov [esp+68h+var_30] edx +
mov [esp+68h+var_28] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_24] eax +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_20] eax +
lea eax [esp+68h+var_38] +
call sub_44F150  +
mov esi eax +
mov eax edx +
or eax esi +
mov ecx edx +
jz loc_45008A  +
mov edi [esp+68h+arg_C] +
mov edx esi +
lea eax [ebx+28h] +
mov [esp+68h+var_64] edi +
mov edi [esp+68h+arg_8] +
mov [esp+68h+var_68] edi +
call sub_44EB90  +
test eax eax +
mov esi eax +
jz loc_450080  +
mov eax [eax+10h] +
test eax eax +
jz loc_450080  +
mov [esp+68h+var_54] 0 +
mov [esp+68h+var_4C] 0 +
jmp loc_44FF59  +
cmp eax 3 +
jnz loc_44FF47  +
mov eax [esp+68h+var_4C] +
cmp [esp+68h+var_48] 3 +
cmovz eax [esp+68h+var_40] +
mov [esp+68h+var_4C] eax +
add [esp+68h+var_54] 1 +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
jbe loc_450070  +
mov eax [esp+68h+var_54] +
mov edx [ebp+2Ch] +
mov ecx [ebx+10h] +
lea edi ds:0[eax*8] +
mov eax [esi+14h] +
mov [esp+68h+var_50] edx +
lea edx [esp+68h+var_48] +
mov eax [eax+edi+4] +
mov [esp+68h+var_58] edx +
mov edx [esp+68h+var_50] +
mov [esp+68h+var_5C] edx +
mov edx [ebp+28h] +
mov [esp+68h+var_60] edx +
mov edx [ebx+14h] +
mov [esp+68h+var_64] edx +
mov edx [ebx+0Ch] +
mov [esp+68h+var_68] edx +
lea edx [esp+68h+var_38] +
call sub_44F340  +
test eax eax +
jz loc_450080  +
add edi [esi+14h] +
mov eax [edi] +
cmp eax 47h +
jz loc_450000  +
jbe loc_44FF30  +
cmp eax 6Eh +
jz loc_44FFC6  +
cmp eax 2007h +
jnz loc_44FF47  +
cmp [esp+68h+var_48] 3 +
jnz loc_44FF47  +
mov eax [esp+68h+var_40] +
jmp loc_44FE79  +
cmp esi eax +
ja loc_44FE5C  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_44FE5C  +
jmp loc_44FE93  +
mov eax [edi+4] +
cmp eax 10h +
jz loc_44FF47  +
cmp eax 20h +
nop   +
jz loc_44FF47  +
mov eax [esp+68h+var_48] +
cmp eax 4 +
jz loc_450028  +
cmp eax 1 +
jnz loc_44FF47  +
mov eax [esp+68h+arg_C] +
mov edx [esp+68h+var_3C] +
mov [esp+68h+var_5C] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_64] edx +
mov edx ebx +
mov [esp+68h+var_60] eax +
mov eax [esp+68h+var_40] +
mov [esp+68h+var_68] eax +
mov eax ebp +
call sub_44FE40  +
test eax eax +
cmovz eax [esp+68h+var_4C] +
add [esp+68h+var_54] 1 +
mov [esp+68h+var_4C] eax +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
ja loc_44FF59  +
lea esi [esi+0] +
mov eax [esp+68h+var_4C] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+68h+var_38] +
mov edx offset aInvalidAbstrac +
call sub_44EEA0  +
xor eax eax +
jmp loc_44FE79  +
***
mov edi edx +
push esi  +
mov esi edi +
push ebx  +
mov edi ecx +
sub esp 0ACh +
mov [esp+0B4h+var_40] eax +
mov eax [esp+0B4h+arg_0] +
mov edx [esp+0B4h+arg_4] +
mov [esp+0B4h+var_4C] eax +
lea eax [ecx+28h] +
mov [esp+0B4h+var_48] edx +
mov [esp+0B4h+var_58] eax +
mov eax [esp+0B4h+arg_8] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_4509BC  +
mov eax [esp+0B4h+arg_8] +
call sub_44F150  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_4509BC  +
mov ebx [esp+0B4h+arg_14] +
mov edx eax +
mov eax [esp+0B4h+var_58] +
mov [esp+0B4h+var_B0] ebx +
mov ebx [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ebx +
call sub_44EB90  +
test eax eax +
mov ebp eax +
jz loc_450694  +
mov eax [eax+8] +
cmp eax 2Eh +
jz loc_4502D0  +
cmp eax 3 +
jz loc_4502D0  +
xor edx edx +
cmp eax 1Dh +
setz dl  +
mov [esp+0B4h+var_78] edx +
cmp eax 1Dh +
mov eax [esp+0B4h+arg_1C] +
cmovnz eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_6C] 0 +
mov [esp+0B4h+var_38] eax +
mov eax [esp+0B4h+var_78] +
test eax eax +
jnz loc_4506D5  +
mov eax [ebp+10h] +
mov [esp+0B4h+var_5C] 0 +
mov [esp+0B4h+var_50] 0 +
mov [esp+0B4h+var_44] 0 +
test eax eax +
mov [esp+0B4h+var_3C] 0 +
mov [esp+0B4h+var_68] 0 +
mov [esp+0B4h+var_74] 0 +
mov [esp+0B4h+var_70] 0 +
mov [esp+0B4h+var_54] 0 +
mov [esp+0B4h+var_64] 0 +
mov [esp+0B4h+var_60] 0 +
jz loc_450337  +
mov [esp+0B4h+var_8C] 0 +
jmp loc_450234  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_450222  +
add ebx [ebp+14h] +
mov eax [ebx] +
cmp eax 47h +
jz loc_4505AE  +
jbe loc_4502E0  +
cmp eax 59h +
jz loc_450552  +
lea esi [esi+0] +
ja loc_450532  +
cmp eax 55h +
jz loc_450620  +
cmp eax 58h +
jnz loc_450222  +
cmp [esp+0B4h+var_34] 1 +
jz loc_450730  +
add [esp+0B4h+var_8C] 1 +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
jbe loc_450337  +
mov eax [esp+0B4h+var_8C] +
mov edx [esi+2Ch] +
mov ecx [edi+10h] +
lea ebx ds:0[eax*8] +
mov eax [ebp+14h] +
mov [esp+0B4h+var_84] edx +
lea edx [esp+0B4h+var_34] +
mov eax [eax+ebx+4] +
mov [esp+0B4h+var_A4] edx +
mov edx [esp+0B4h+var_84] +
mov [esp+0B4h+var_A8] edx +
mov edx [esi+28h] +
mov [esp+0B4h+var_AC] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_B0] edx +
mov edx [edi+0Ch] +
mov [esp+0B4h+var_B4] edx +
mov edx [esp+0B4h+arg_8] +
call sub_44F340  +
test eax eax +
jz loc_450694  +
cmp dword ptr [ebp+8] 11h +
jnz loc_4501D5  +
mov eax [ebp+14h] +
cmp dword ptr [eax+ebx] 11h +
jnz loc_4501D5  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_4501D5  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_4C] eax +
mov [esp+0B4h+var_48] edx +
jmp loc_4501D5  +
mov [esp+0B4h+var_78] 1 +
jmp loc_450146  +
cmp eax 11h +
jz loc_450573  +
jbe loc_4504F7  +
cmp eax 12h +
jnz loc_4505A5  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_4506A1  +
mov eax [esp+0B4h+var_2C] +
add [esp+0B4h+var_8C] 1 +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
mov [esp+0B4h+var_70] edx +
ja loc_450234  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_4507FB  +
mov eax [esp+0B4h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_4507C9  +
mov ecx [esp+0B4h+var_5C] +
test ecx ecx +
jnz loc_450658  +
mov eax [esp+0B4h+var_68] +
test eax eax +
jz loc_4507C9  +
mov eax [esp+0B4h+var_54] +
test eax eax +
jz loc_4507C9  +
mov eax [esp+0B4h+var_3C] +
test eax eax +
jnz loc_450790  +
mov eax [esp+0B4h+var_38] +
mov edx [esi+4] +
mov ecx [esp+0B4h+var_74] +
mov ebx [esp+0B4h+var_70] +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] ecx +
mov ecx [esp+0B4h+var_64] +
mov [esp+0B4h+var_A8] ebx +
mov ebx [esp+0B4h+var_60] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] ebx +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+var_40] +
call sub_44ECE0  +
test eax eax +
jz loc_450694  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4500D1  +
lea eax [esp+0B4h+var_34] +
mov edx [esp+0B4h+var_48] +
mov ecx edi +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_34] 0 +
mov [esp+0B4h+var_30] 0 +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_2C] 0 +
mov [esp+0B4h+var_28] 0 +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_4500A0  +
test eax eax +
jz loc_450694  +
mov ebp [esp+0B4h+var_28] +
test ebp ebp +
jz loc_4500D1  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
lea eax [esp+0B4h+var_34] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44D040  +
test eax eax +
jz loc_450694  +
mov ebx [esp+0B4h+var_34] +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] offset loc_44EDF0 +
mov [esp+0B4h+var_AC] 18h +
mov [esp+0B4h+var_B4] ebx +
mov [esp+0B4h+var_B0] eax +
call sub_44E470  +
mov ecx [esp+0B4h+var_6C] +
mov eax [esp+0B4h+var_28] +
mov [ecx+0Ch] ebx +
mov [ecx+10h] eax +
jmp loc_4500D1  +
cmp eax 3 +
jnz loc_450222  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_450222  +
mov eax [esp+0B4h+var_6C] +
mov ecx [eax] +
test ecx ecx +
jnz loc_450222  +
lea esi [esi+0] +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx] eax +
jmp loc_450222  +
cmp eax 6Eh +
jz loc_450542  +
cmp eax 2007h +
jnz loc_450222  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_450222  +
jmp loc_450520  +
cmp [esp+0B4h+var_34] 1 +
jnz loc_450222  +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx+8] eax +
jmp loc_450222  +
mov edx [esp+0B4h+var_34] +
test edx edx +
jnz loc_450222  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_54] 1 +
mov [esp+0B4h+var_64] eax +
mov [esp+0B4h+var_60] edx +
jmp loc_450222  +
cmp eax 31h +
jnz loc_450222  +
mov eax [ebx+4] +
cmp eax 10h +
jz loc_450222  +
cmp eax 20h +
jz loc_450222  +
mov eax [esp+0B4h+var_34] +
cmp eax 4 +
jz loc_4505D8  +
cmp eax 1 +
jnz loc_450222  +
mov eax [esp+0B4h+arg_14] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B0] edx +
mov edx edi +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_B4] eax +
mov eax esi +
call sub_44FE40  +
test eax eax +
jnz loc_450527  +
jmp loc_450222  +
mov eax [esp+0B4h+var_34] +
cmp eax 6 +
jz loc_450635  +
cmp eax 1 +
jnz loc_450222  +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_5C] 1 +
mov [esp+0B4h+var_50] eax +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_44] eax +
jmp loc_450222  +
xor edx edx +
mov ecx [esi+24h] +
cmp edx [esp+0B4h+var_44] +
ja loc_450871  +
jb loc_450673  +
cmp ecx [esp+0B4h+var_50] +
ja loc_450871  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 0 +
mov [esp+0B4h+var_B0] offset aFunctionRanges +
mov [esp+0B4h+var_B4] eax +
call [esp+0B4h+arg_10]  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_450222  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_3C] 1 +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov [esp+0B4h+var_70] edx +
jmp loc_450222  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_B0] 14h +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44CF40  +
test eax eax +
mov [esp+0B4h+var_6C] eax +
jz loc_450694  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jmp loc_450170  +
mov edx [esp+0B4h+var_28] +
mov eax [esp+0B4h+var_2C] +
mov ecx edx +
or ecx eax +
jnz loc_450754  +
mov eax [esp+0B4h+var_6C] +
mov dword ptr [eax+4] offset unk_4D0269 +
jmp loc_450222  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0B4h+var_84] ecx +
mov ecx [esp+0B4h+arg_C] +
mov [esp+0B4h+var_80] ebx +
cmp [esp+0B4h+var_80] 0 +
mov ecx [ecx+24h] +
jbe loc_4507A5  +
mov eax [esp+0B4h+arg_8] +
mov edx offset aInvalidFileN_0 +
call sub_44EEA0  +
jmp loc_450694  +
mov eax [esp+0B4h+var_64] +
mov edx [esp+0B4h+var_60] +
add [esp+0B4h+var_74] eax +
adc [esp+0B4h+var_70] edx +
jmp loc_450381  +
cmp [esp+0B4h+var_84] ecx +
jnb loc_450777  +
mov ecx [esp+0B4h+arg_C] +
add eax 3FFFFFFFh +
mov edx [ecx+28h] +
mov ecx [esp+0B4h+var_6C] +
mov eax [edx+eax*4] +
mov [ecx+4] eax +
jmp loc_450222  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 14h +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44CF90  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_4500D1  +
mov eax [esp+0B4h+arg_1C] +
mov ecx edi +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_4500A0  +
test eax eax +
jnz loc_4500D1  +
jmp loc_450694  +
mov eax [esi+20h] +
mov ebx [esp+0B4h+var_50] +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_34] offset a_debug_ranges +
mov [esp+0B4h+var_30] eax +
add eax ebx +
sub ecx ebx +
mov [esp+0B4h+var_2C] eax +
mov eax [esi+30h] +
mov [esp+0B4h+var_28] ecx +
xor ecx ecx +
mov [esp+0B4h+var_18] 0 +
mov [esp+0B4h+var_80] edx +
mov [esp+0B4h+var_24] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_78] esi +
mov [esp+0B4h+var_20] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_1C] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_84] eax +
test ecx ecx +
jnz loc_450694  +
mov edx [edi+14h] +
lea eax [esp+0B4h+var_34] +
call sub_44F1F0  +
mov esi edx +
mov ebx eax +
mov [esp+0B4h+var_88] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_8C] eax +
lea eax [esp+0B4h+var_34] +
call sub_44F1F0  +
mov ecx ebx +
mov ebx esi +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_4509C6  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_450990  +
jle loc_450976  +
cmp ecx 4 +
jz loc_4509A8  +
cmp ecx 8 +
jnz loc_4509E0  +
mov ecx [esp+0B4h+var_8C] +
mov ebx [esp+0B4h+var_88] +
mov esi ecx +
and esi ebx +
cmp esi 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_4509E0  +
mov ecx [esp+0B4h+var_18] +
mov [esp+0B4h+var_84] eax +
mov [esp+0B4h+var_80] edx +
test ecx ecx +
jz loc_4508EB  +
jmp loc_450694  +
cmp ecx 1 +
jnz loc_4509E0  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor bl 0FFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_450952  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor ebx 0FFFFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_450952  +
mov ebx [esp+0B4h+var_8C] +
mov esi [esp+0B4h+var_88] +
not ebx  +
or ebx esi +
setz cl  +
movzx ecx cl +
jmp loc_450952  +
mov eax 1 +
jmp loc_450696  +
mov eax [esp+0B4h+var_18] +
mov esi [esp+0B4h+var_78] +
test eax eax +
jz loc_4503D6  +
jmp loc_450694  +
mov ecx [esp+0B4h+var_84] +
mov esi [esp+0B4h+var_38] +
mov ebx [esp+0B4h+var_80] +
add eax ecx +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_8C] +
mov [esp+0B4h+var_9C] esi +
mov esi [esp+0B4h+arg_14] +
adc edx ebx +
mov [esp+0B4h+var_A8] edx +
mov edx [esp+0B4h+var_88] +
add eax ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_A0] esi +
mov esi [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_78] +
adc edx ebx +
mov [esp+0B4h+var_B0] edx +
mov [esp+0B4h+var_A4] esi +
mov edx [eax+4] +
mov eax [esp+0B4h+var_40] +
call sub_44ECE0  +
test eax eax +
jz loc_450694  +
mov ecx [esp+0B4h+var_18] +
jmp loc_4508E3  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0ECh +
mov edi [esp+0ECh+arg_C] +
mov [esp+0ECh+var_C0] eax +
mov eax [ebx+8] +
mov [esp+0ECh+var_C8] edx +
mov [esp+0ECh+var_90] ecx +
mov dword ptr [edi] 1 +
mov edx [edx+0Ch] +
mov [esp+0ECh+var_E8] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_44E630 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E4] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
jz loc_450E40  +
mov edi [ebx+8] +
mov edx eax +
mov ebx [ebx+0Ch] +
sub edx edi +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] ebx +
add edx 1 +
cmp edx ebx +
jnb loc_450AE2  +
xor ebx ebx +
mov ecx [esp+0ECh+var_90] +
cmp ebx [eax+1Ch] +
jb loc_450AE2  +
ja loc_450AD7  +
cmp ecx [eax+18h] +
jb loc_450AE2  +
cmp ebx [eax+24h] +
jb loc_450AEB  +
lea esi [esi+0] +
jbe loc_450AE6  +
mov ebp eax +
jmp loc_450B1A  +
cmp ecx [eax+20h] +
jnb loc_450AE2  +
mov ebp eax +
lea esi [esi+0] +
add ebp 18h +
mov edx ebp +
sub edx edi +
sar edx 3 +
imul edx edx +
add edx 1 +
cmp edx [esp+0ECh+var_CC] +
jnb loc_450B1A  +
mov esi ebp +
sub esi eax +
lea edx [eax+30h] +
cmp [esi+edx-14h] ebx +
jbe loc_450CA6  +
mov esi [ebp+10h] +
cmp ebp edi +
mov ebx [esi+30h] +
jbe loc_450B39  +
xor edx edx +
mov eax [esp+0ECh+var_90] +
cmp [ebp-14h] edx +
jb loc_450CDE  +
jbe loc_450CD5  +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
mov [esp+0ECh+var_C4] eax +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
jnz loc_450D66  +
test ebx ebx +
jz loc_450E81  +
cmp ebx 0FFFFFFFFh +
jz loc_450E20  +
mov eax [ebp+10h] +
mov eax [eax+34h] +
mov [esp+0ECh+var_DC] offset loc_44E680 +
mov [esp+0ECh+var_E0] 10h +
mov [esp+0ECh+var_E8] ebx +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov [esp+0ECh+var_C8] eax +
jz loc_450E5A  +
mov edx [ebp+10h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_450D80  +
mov edx [edx+38h] +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_44E5E0 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov ebx eax +
jz loc_450D80  +
mov edx [ebp+10h] +
mov eax [edx+38h] +
mov edi [edx+3Ch] +
mov edx ebx +
sub edx eax +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] edi +
add edx 1 +
cmp edx edi +
jnb loc_4511F9  +
mov edi [esp+0ECh+var_90] +
mov [esp+0ECh+var_C4] edi +
mov esi edi +
xor edi edi +
cmp edi [ebx+1Ch] +
jb loc_450C26  +
ja loc_450C17  +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+18h] +
jb loc_450C26  +
cmp edi [ebx+24h] +
jb loc_450DCB  +
jbe loc_450DBE  +
mov eax [esp+0ECh+var_C4] +
mov edx ebx +
lea esi [esi+0] +
mov edi [esp+0ECh+var_C8] +
lea esi [esp+0ECh+var_38] +
mov ebx [edx+10h] +
mov edx [edi+4] +
lea ecx [ebx+10h] +
mov [esp+0ECh+var_58] edx +
mov edx [edi+8] +
mov edi [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] esi +
lea esi [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_38] edx +
lea edx [ebx+0Ch] +
mov [esp+0ECh+var_E8] edi +
mov edi [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] edi +
call sub_44EA10  +
test eax eax +
jnz loc_450DB3  +
mov eax [ebx] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_58] +
jmp loc_450D96  +
jb loc_450CB2  +
cmp [esi+edx-18h] ecx +
ja loc_450B1A  +
cmp [esi+edx-0Ch] ebx +
jb loc_450B1A  +
ja loc_450AF0  +
cmp [esi+edx-10h] ecx +
jbe loc_450B1A  +
lea esi [esi+0] +
jmp loc_450AF0  +
cmp [ebp-18h] eax +
ja loc_450B39  +
cmp edx [ebp-0Ch] +
jb loc_450CF6  +
ja loc_450B39  +
cmp eax [ebp-10h] +
lea esi [esi+0] +
jnb loc_450B39  +
mov edi [esp+0ECh+var_C0] +
lea ecx [ebp-28h] +
mov edi [edi+4] +
mov [esp+0ECh+var_C4] edi +
mov [esp+0ECh+var_CC] edi +
mov edi [esp+0ECh+var_CC] +
test edi edi +
jnz loc_450D70  +
cmp ebx 0FFFFFFFFh +
jnz loc_450B44  +
mov edi [esp+0ECh+var_C8] +
sub ebp 18h +
mov esi [ebp+10h] +
cmp [edi+8] ebp +
mov ebx [esi+30h] +
jnb loc_450B44  +
cmp edx [ecx-4] +
jb loc_450B44  +
ja loc_450D46  +
cmp eax [ecx-8] +
lea esi [esi+0] +
jb loc_450B44  +
sub ecx 18h +
cmp edx [ecx+1Ch] +
ja loc_450B44  +
jb loc_450D08  +
cmp eax [ecx+18h] +
jb loc_450D08  +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
nop   +
jz loc_450B50  +
mov ebx [esi+30h] +
jmp loc_450B50  +
mov ebx [esi+30h] +
mov edi [esp+0ECh+var_CC] +
mov [esp+0ECh+var_C4] edi +
jmp loc_450D10  +
mov eax [esp+0ECh+var_C8] +
mov edx [eax+8] +
mov eax [eax+4] +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] edx +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_0]  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+20h] +
jnb loc_450C26  +
mov edx ebx +
lea esi [esi+0] +
add edx 18h +
mov ecx edx +
sub ecx eax +
sar ecx 3 +
imul ecx ecx +
add ecx 1 +
cmp ecx [esp+0ECh+var_CC] +
jnb loc_450DF6  +
mov ebp edx +
sub ebp ebx +
lea ecx [ebx+30h] +
cmp [ebp+ecx-14h] edi +
jbe loc_450E00  +
mov eax [esp+0ECh+var_C4] +
jmp loc_450C30  +
jb loc_450E08  +
cmp [ebp+ecx-18h] esi +
ja loc_450DF6  +
cmp [ebp+ecx-0Ch] edi +
jb loc_450DF6  +
nop   +
ja loc_450DD0  +
cmp [ebp+ecx-10h] esi +
jbe loc_450DF6  +
jmp loc_450DD0  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] 0 +
jmp loc_450D9A  +
mov eax [esp+0ECh+arg_C] +
mov dword ptr [eax] 0 +
add esp 0ECh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+10h] +
mov ebx [eax+24h] +
test ebx ebx +
jz loc_4510FC  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] ebx +
jmp loc_450D9A  +
mov eax [ebp+10h] +
mov ecx 0Bh +
lea edi [esp+0ECh+var_38] +
mov [esp+0ECh+var_88] 0 +
mov [esp+0ECh+var_84] 0 +
mov edx eax +
mov [esp+0ECh+var_A4] eax +
mov eax ebx +
stos   +
mov edi [esp+0ECh+var_C8] +
mov [esp+0ECh+var_80] 0 +
mov [esp+0ECh+var_7C] 0 +
mov eax [edx+18h] +
mov edx [edi+1Ch] +
cmp eax edx +
jnb loc_4510CE  +
mov edi [esp+0ECh+var_C8] +
sub edx eax +
xor ebx ebx +
mov [esp+0ECh+var_78] offset a_debug_line +
mov [esp+0ECh+var_6C] edx +
mov [esp+0ECh+var_5C] 0 +
mov ecx [edi+18h] +
mov [esp+0ECh+var_74] ecx +
add ecx eax +
mov eax [edi+30h] +
mov [esp+0ECh+var_70] ecx +
mov [esp+0ECh+var_68] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_64] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_60] eax +
lea eax [esp+0ECh+var_78] +
call sub_44EF50  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_451673  +
mov [esp+0ECh+var_6C] eax +
lea eax [esp+0ECh+var_78] +
call sub_44F0D0  +
movzx eax ax +
mov [esp+0ECh+var_38] eax +
sub eax 2 +
cmp eax 2 +
ja loc_4511DE  +
mov edx ebx +
lea eax [esp+0ECh+var_78] +
call sub_44F0B0  +
mov edx [esp+0ECh+var_78] +
lea edi [esp+0ECh+var_88] +
mov [esp+0ECh+var_58] edx +
mov edx [esp+0ECh+var_74] +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_54] edx +
mov edx [esp+0ECh+var_70] +
mov [esp+0ECh+var_50] edx +
mov edx [esp+0ECh+var_68] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_40] edx +
mov edx [esp+0ECh+var_5C] +
mov [esp+0ECh+var_3C] edx +
mov edx eax +
lea eax [esp+0ECh+var_78] +
call sub_44EF00  +
mov [esp+0ECh+var_CC] edi +
test eax eax +
jnz loc_451204  +
mov eax [esp+0ECh+var_84] +
mov ebx 0FFFFFFFFh +
add [esp+0ECh+var_80] eax +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_C0] +
mov [esp+0ECh+var_84] 0 +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E8] eax +
call sub_44D040  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax edi +
xor edi edi +
call sub_44E860  +
xor eax eax +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_CC] 0 +
mov ecx [esp+0ECh+var_C0] +
mov ecx [ecx+4] +
test ecx ecx +
mov ecx [esp+0ECh+var_C4] +
jnz loc_4511C9  +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+34h] ecx +
mov [esi+30h] ebx +
mov [esi+3Ch] edi +
cmp ebx 0FFFFFFFFh +
jnz loc_450B61  +
test eax eax +
jz loc_450E20  +
mov eax [esp+0ECh+arg_C] +
mov ecx [esp+0ECh+var_90] +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_450A50  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] 0 +
mov [esp+0ECh+var_E8] offset aUnitLineOffset +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_4]  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_450FE1  +
mov ebx [eax+1Ch] +
test ebx ebx +
jz loc_4511C1  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jz loc_4511C1  +
cmp dl 2Fh +
jz loc_4511C1  +
test dl dl +
jz loc_45112A  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_4511C1  +
mov edx [eax+20h] +
test edx edx +
mov [esp+0ECh+var_C8] edx +
jz loc_4511C1  +
mov [esp+0ECh+var_EC] ebx +
call strlen  +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_EC] edx +
mov edi eax +
mov [esp+0ECh+var_CC] eax +
call strlen  +
mov esi eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
lea eax [edi+esi+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44CF40  +
mov edx [esp+0ECh+var_C8] +
test eax eax +
mov edi eax +
jz loc_450E40  +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov edx [esp+0ECh+var_CC] +
lea eax [edi+esi+1] +
mov byte ptr [edi+esi] 2Fh +
mov [esp+0ECh+var_E8] ebx +
mov ebx edi +
mov [esp+0ECh+var_EC] eax +
add edx 1 +
mov [esp+0ECh+var_E4] edx +
call memcpy  +
mov eax [ebp+10h] +
mov [eax+24h] ebx +
jmp loc_450E68  +
mov [esi+34h] ecx +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+3Ch] edi +
mov [esi+30h] ebx +
jmp loc_451076  +
lea eax [esp+0ECh+var_78] +
mov edx offset aUnsupportedLin +
call sub_44EEA0  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_450FE1  +
mov eax [esp+0ECh+var_90] +
mov edx ebx +
jmp loc_450C30  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
xor edx edx +
test eax eax +
jz loc_451225  +
movzx edx byte ptr [ebx] +
cmp [esp+0ECh+var_38] 3 +
mov [esp+0ECh+var_34] edx +
jg loc_451683  +
mov [esp+0ECh+var_30] 1 +
lea eax [esp+0ECh+var_58] +
call sub_44F120  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
test eax eax +
jz loc_451270  +
movsx eax byte ptr [ebx] +
mov [esp+0ECh+var_2C] eax +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
xor edx edx +
test eax eax +
jz loc_451298  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_28] edx +
lea eax [esp+0ECh+var_58] +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
call sub_44EF00  +
test eax eax +
jz loc_451667  +
movzx eax byte ptr [ebx] +
lea edx [eax-1] +
mov [esp+0ECh+var_24] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_20] eax +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
test eax eax +
jz loc_45165A  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_1C] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_451F05  +
cmp byte ptr [ebx] 0 +
jnz loc_451325  +
jmp loc_451F05  +
cmp byte ptr [ebx] 0 +
jz loc_45134E  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E8] eax +
call sub_4747F0  +
lea ebx [ebx+eax+1] +
mov eax [esp+0ECh+var_1C] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_1C] eax +
ja loc_451320  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
xor ebx ebx +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_44CF40  +
test eax eax +
mov [esp+0ECh+var_18] eax +
jnz loc_4513DD  +
jmp loc_45165A  +
mov edx [esp+0ECh+var_3C] +
test edx edx +
jnz loc_45165A  +
mov edx [esp+0ECh+var_18] +
mov [edx+ebx] eax +
mov eax [esp+0ECh+var_4C] +
add ebx 4 +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_EC] eax +
call sub_4747F0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
test eax eax +
jz loc_45165A  +
mov eax [esp+0ECh+var_50] +
cmp byte ptr [eax] 0 +
jnz loc_451390  +
mov edx 1 +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
test eax eax +
jz loc_45165A  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_14] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_451EFE  +
cmp byte ptr [ebx] 0 +
jz loc_451EFE  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_4747F0  +
lea edx [ebx+eax+1] +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_451456  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_45144C  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_45146C  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_451462  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_451482  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_451478  +
lea ebx [edx+eax] +
mov eax [esp+0ECh+var_14] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_14] eax +
jbe loc_45149F  +
cmp byte ptr [ebx] 0 +
jnz loc_45142E  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_44CF40  +
test eax eax +
mov [esp+0ECh+var_10] eax +
jz loc_45165A  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_451715  +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_45165A  +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_C4] esi +
jmp loc_451601  +
cmp cl 2Fh +
jz loc_45163F  +
test cl cl +
jz loc_451527  +
cmp byte ptr [edi+1] 3Ah +
jz loc_45163F  +
mov ebx edx +
or ebx eax +
jnz loc_4516B0  +
mov eax [esp+0ECh+var_A4] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_45163F  +
mov [esp+0ECh+var_EC] ecx +
mov [esp+0ECh+var_B4] ecx +
call strlen  +
mov [esp+0ECh+var_EC] edi +
mov ebx eax +
call strlen  +
mov ebp eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+ebp+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44CF40  +
mov ecx [esp+0ECh+var_B4] +
test eax eax +
mov esi eax +
jz loc_451652  +
mov [esp+0ECh+var_E8] ecx +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
lea eax [esi+ebx+1] +
lea ecx [ebp+1] +
mov byte ptr [esi+ebx] 2Fh +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_E4] ecx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov eax [esp+0ECh+var_10] +
mov edi [esp+0ECh+var_BC] +
mov [eax+edi] esi +
lea eax [esp+0ECh+var_58] +
call sub_44F150  +
lea eax [esp+0ECh+var_58] +
call sub_44F150  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_45170D  +
mov eax [esp+0ECh+var_3C] +
add [esp+0ECh+var_BC] 4 +
test eax eax +
jnz loc_451652  +
mov eax [esp+0ECh+var_4C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_4747F0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
test eax eax +
jz loc_451652  +
lea eax [esp+0ECh+var_58] +
call sub_44F150  +
movzx ecx byte ptr [edi] +
cmp cl 5Ch +
jnz loc_451510  +
mov eax [esp+0ECh+var_10] +
mov ebx [esp+0ECh+var_BC] +
mov [eax+ebx] edi +
jmp loc_4515C9  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_450FE1  +
mov edx 0FFFFFFFFh +
xor eax eax +
jmp loc_4512C5  +
lea eax [esp+0ECh+var_78] +
mov bl 1 +
call sub_44EFC0  +
jmp loc_450F35  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44EF00  +
xor edx edx +
test eax eax +
jz loc_4516A4  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_30] edx +
jmp loc_451245  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0ECh+var_B0] ebx +
mov ebx [esp+0ECh+var_1C] +
cmp [esp+0ECh+var_B0] 0 +
mov [esp+0ECh+var_B4] ecx +
jbe loc_4516F3  +
lea eax [esp+0ECh+var_78] +
mov edx offset aInvalidDirecto +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
call sub_44EEA0  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_450FE1  +
cmp [esp+0ECh+var_B4] ebx +
jnb loc_4516D0  +
mov edx [esp+0ECh+var_18] +
add eax 3FFFFFFFh +
mov ecx [edx+eax*4] +
jmp loc_451540  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_45165A  +
mov edx [esp+0ECh+var_14] +
test edx edx +
jnz loc_451E72  +
mov [esp+0ECh+var_94] offset unk_4D0269 +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
mov eax [esp+0ECh+var_C8] +
mov [esp+0ECh+var_B8] 0 +
mov [esp+0ECh+var_A0] ebp +
add eax 4 +
mov [esp+0ECh+var_A8] eax +
lea esi [esi+0] +
mov eax [esp+0ECh+var_6C] +
test eax eax +
jz loc_451BB1  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
lea eax [esp+0ECh+var_78] +
call sub_44EF00  +
test eax eax +
jnz loc_4517F0  +
mov edx [esp+0ECh+var_24] +
test edx edx +
jz loc_451848  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
mov edi eax +
lea eax [esp+0ECh+var_78] +
call sub_44EF00  +
test eax eax +
jnz loc_451817  +
lea edx [edi-1] +
lea eax [esp+0ECh+var_78] +
call sub_44EF00  +
test eax eax +
jnz loc_451780  +
mov ebp [esp+0ECh+var_A0] +
jmp loc_450FE1  +
movzx eax byte ptr [ebx] +
mov edx [esp+0ECh+var_24] +
movzx ebp al +
cmp ebp edx +
jnb loc_45184A  +
test ebp ebp +
jz loc_4517B4  +
cmp al 0Ch +
ja loc_451A16  +
lea esi [esi+0] +
jmp ds:off_4D03A4[ebp*4]  +
movzx eax byte ptr [ebx] +
cmp al 2 +
lea esi [esi+0] +
jz loc_451A43  +
jbe loc_451B6F  +
cmp al 3 +
nop   +
jz loc_451A60  +
cmp al 4 +
jnz loc_4517D5  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
jmp loc_451780  +
xor ebp ebp +
mov eax ebp +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
div  [esp+0ECh+var_28] +
add edi eax +
mov eax [esp+0ECh+var_34] +
mov ebp edx +
xor edx edx +
imul eax edi +
div  [esp+0ECh+var_30] +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  [esp+0ECh+var_30] +
add ebp [esp+0ECh+var_2C] +
add [esp+0ECh+var_B4] ebp +
mov [esp+0ECh+var_C4] edx +
mov eax [esp+0ECh+var_CC] +
mov ecx [esp+0ECh+var_BC] +
mov edx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_44EC40  +
jmp loc_451780  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
mov edi edx +
or edi eax +
jz loc_451BA4  +
mov ecx eax +
mov ebx edx +
mov edi [esp+0ECh+var_14] +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
jbe loc_451EA0  +
mov edx offset aInvalidFileNum +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_44EEA0  +
jmp loc_450FE1  +
lea eax [esp+0ECh+var_78] +
call sub_44F270  +
add [esp+0ECh+var_B4] eax +
jmp loc_451780  +
lea eax [esp+0ECh+var_78] +
call sub_44F0D0  +
xor edx edx +
mov [esp+0ECh+var_C4] 0 +
movzx eax ax +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
jmp loc_451780  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
mov edi [esp+0ECh+var_30] +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_9C] eax +
mov eax [esp+0ECh+var_C4] +
mov [esp+0ECh+var_98] edx +
xor edx edx +
add [esp+0ECh+var_9C] eax +
adc [esp+0ECh+var_98] edx +
xor ebp ebp +
mov eax [esp+0ECh+var_34] +
mov ecx [esp+0ECh+var_98] +
mov [esp+0ECh+var_E0] ebp +
imul ecx eax +
mul  [esp+0ECh+var_9C] +
add edx ecx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_470840  +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_E0] ebp +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
mov eax [esp+0ECh+var_9C] +
mov edx [esp+0ECh+var_98] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_470950  +
mov [esp+0ECh+var_C4] eax +
jmp loc_451780  +
mov eax 0FFh +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
mov ebp [esp+0ECh+var_30] +
div  [esp+0ECh+var_28] +
xor edx edx +
add edi eax +
mov eax [esp+0ECh+var_34] +
imul eax edi +
div  ebp +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  ebp +
mov [esp+0ECh+var_C4] edx +
jmp loc_451780  +
mov eax [esp+0ECh+var_20] +
movzx ebx byte ptr [eax+ebp-1] +
test ebx ebx +
jz loc_451780  +
lea esi [esi+0] +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
sub ebx 1 +
jnz loc_451A30  +
jmp loc_451780  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+14h] +
lea eax [esp+0ECh+var_78] +
call sub_44F1F0  +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B8] edx +
jmp loc_451780  +
mov eax [esp+0ECh+var_70] +
mov edi eax +
mov [esp+0ECh+var_AC] eax +
mov eax [esp+0ECh+var_6C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_4747F0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_78] +
call sub_44EF00  +
test eax eax +
jz loc_4517E5  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
mov ebx eax +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
lea eax [esp+0ECh+var_78] +
call sub_44F150  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_451780  +
cmp al 2Fh +
jz loc_451780  +
test al al +
jz loc_451AD3  +
mov eax [esp+0ECh+var_AC] +
cmp byte ptr [eax+1] 3Ah +
jz loc_451780  +
test ebx ebx +
jnz loc_451E84  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+20h] +
mov [esp+0ECh+var_EC] edx +
mov [esp+0ECh+var_9C] edx +
call strlen  +
mov ebx eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
call strlen  +
mov ecx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] ecx +
mov edi eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+edi+2] +
mov [esp+0ECh+var_E8] eax +
call sub_44CF40  +
test eax eax +
mov ebp eax +
jz loc_4517E5  +
mov edx [esp+0ECh+var_9C] +
add edi 1 +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call memcpy  +
lea eax [ebp+ebx+1] +
mov byte ptr [ebp+ebx+0] 2Fh +
mov [esp+0ECh+var_E4] edi +
mov edi [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edi +
call memcpy  +
mov [esp+0ECh+var_AC] ebp +
jmp loc_451780  +
cmp al 1 +
jnz loc_4517D5  +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
mov [esp+0ECh+var_B8] 0 +
jmp loc_451780  +
mov [esp+0ECh+var_AC] offset unk_4D0269 +
jmp loc_451780  +
mov eax [esp+0ECh+var_5C] +
mov ebp [esp+0ECh+var_A0] +
test eax eax +
jnz loc_450FE1  +
mov eax [esp+0ECh+var_7C] +
test eax eax +
jz loc_450FE1  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_CC] +
mov ebx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E8] 10h +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_DC] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E4] eax +
call sub_44CFA0  +
test eax eax +
jz loc_450FE1  +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
call sub_44D040  +
test eax eax +
jz loc_450FE1  +
mov eax [esp+0ECh+var_7C] +
mov ebx [esp+0ECh+var_88] +
mov [esp+0ECh+var_E0] offset sub_44E9D0 +
mov [esp+0ECh+var_E4] 10h +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_44E470  +
mov eax [esp+0ECh+var_7C] +
mov [esp+0ECh+var_C4] eax +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
test eax eax +
jz loc_451E5B  +
lea eax [esp+0ECh+var_78] +
mov edi [ebp+10h] +
mov [esp+0ECh+var_B4] 0 +
mov [esp+0ECh+var_78] 0 +
mov [esp+0ECh+var_74] 0 +
mov [esp+0ECh+var_70] 0 +
mov [esp+0ECh+var_6C] 0 +
mov [esp+0ECh+var_BC] eax +
mov ecx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_58] offset a_debug_info +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_AC] esi +
mov eax [ecx+10h] +
mov esi ecx +
mov edx [ecx+30h] +
mov [esp+0ECh+var_A8] ebx +
mov ebx [esp+0ECh+var_BC] +
mov [esp+0ECh+var_54] eax +
mov eax [edi] +
mov [esp+0ECh+var_50] eax +
mov eax [edi+4] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_3C] 0 +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+arg_8] +
mov [esp+0ECh+var_40] edx +
mov ebp edx +
jmp loc_451D8E  +
mov eax [esp+0ECh+arg_4] +
mov ecx edi +
mov edx esi +
mov [esp+0ECh+var_D0] ebx +
mov [esp+0ECh+var_D4] ebx +
mov [esp+0ECh+var_D8] ebp +
mov [esp+0ECh+var_DC] eax +
lea eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
lea eax [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] 0 +
mov [esp+0ECh+var_E8] 0 +
call sub_4500A0  +
test eax eax +
jz loc_451E43  +
mov eax [esp+0ECh+var_4C] +
test eax eax +
jnz loc_451D36  +
mov eax [esp+0ECh+var_BC] +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+0ECh+var_CC] eax +
jz loc_451E4F  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
test edi edi +
mov [esp+0ECh+var_E4] eax +
jz loc_451EC0  +
mov edi [esp+0ECh+var_C0] +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44D0A0  +
test eax eax +
mov edi eax +
jz loc_451E4F  +
mov eax [esp+0ECh+var_B4] +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E0] offset loc_44EDF0 +
mov [esp+0ECh+var_E4] 18h +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44E470  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_44E860  +
mov eax 1 +
jmp loc_451053  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_CC] 0 +
xor edi edi +
jmp loc_451E18  +
mov eax [esp+0ECh+var_C8] +
mov edi [ebp+10h] +
add eax 34h +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B4] eax +
jmp loc_451CC0  +
mov eax [esp+0ECh+var_10] +
mov eax [eax] +
mov [esp+0ECh+var_94] eax +
jmp loc_45173B  +
lea eax [ebx-1] +
cmp eax [esp+0ECh+var_1C] +
jnb loc_451EE7  +
mov eax [esp+0ECh+var_18] +
mov edx [eax+ebx*4-4] +
jmp loc_451AE2  +
cmp ecx edi +
jnb loc_451906  +
mov edx [esp+0ECh+var_10] +
add eax 3FFFFFFFh +
mov eax [edx+eax*4] +
mov [esp+0ECh+var_AC] eax +
jmp loc_451780  +
lea eax [esp+0ECh+var_78] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44D040  +
test eax eax +
jz loc_451E4F  +
mov eax [esp+0ECh+var_BC] +
mov edi [eax] +
jmp loc_451DF8  +
mov edx offset aInvalidDirec_0 +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_44EEA0  +
jmp loc_450FE1  +
xor eax eax +
jmp loc_4514A2  +
xor eax eax +
jmp loc_451351  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_451F80  +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_451FC4  +
lea ebp [esp+3Ch+var_10] +
jmp loc_451F52  +
mov edx [esp+3Ch+var_10] +
test edx edx +
jnz loc_451FF1  +
mov ebx [ebx] +
test ebx ebx +
jz loc_451FC4  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_450A50  +
test eax eax +
jz loc_451F40  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
lea ebp [esp+3Ch+var_10] +
lea ebx [eax+10h] +
jmp loc_451FBE  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_450A50  +
test eax eax +
jnz loc_451F78  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jnz loc_451FF1  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_451F90  +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] eax +
call esi  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+0FCh+arg_8] +
mov edx [esp+0FCh+arg_C] +
mov [esp+0FCh+var_9C] 0 +
mov [esp+0FCh+var_98] 0 +
mov [esp+0FCh+var_88] eax +
mov [esp+0FCh+var_84] eax +
mov eax [esp+0FCh+arg_C] +
test edx edx +
mov [esp+0FCh+var_94] 0 +
mov [esp+0FCh+var_90] 0 +
mov [esp+0FCh+var_8C] offset a_debug_info +
mov [esp+0FCh+var_80] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_70] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [esp+0FCh+var_7C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_78] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_74] eax +
jz loc_452979  +
mov eax [esp+0FCh+arg_8] +
mov [esp+0FCh+var_B0] eax +
nop   +
lea esi [esi+0] +
lea eax [esp+0FCh+var_8C] +
call sub_44EF50  +
mov [esp+0FCh+var_D0] 0 +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_4524F2  +
mov eax [esp+0FCh+var_8C] +
mov [esp+0FCh+var_60] edx +
mov [esp+0FCh+var_6C] eax +
mov eax [esp+0FCh+var_88] +
mov [esp+0FCh+var_68] eax +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_64] eax +
mov eax [esp+0FCh+var_7C] +
mov [esp+0FCh+var_5C] eax +
mov eax [esp+0FCh+var_78] +
mov [esp+0FCh+var_58] eax +
mov eax [esp+0FCh+var_74] +
mov [esp+0FCh+var_54] eax +
mov eax [esp+0FCh+var_70] +
mov [esp+0FCh+var_50] eax +
lea eax [esp+0FCh+var_8C] +
call sub_44EF00  +
test eax eax +
jz loc_4521A2  +
lea eax [esp+0FCh+var_6C] +
call sub_44F0D0  +
movzx eax ax +
mov [esp+0FCh+var_C8] eax +
sub eax 2 +
cmp eax 2 +
ja loc_452963  +
mov edx [esp+0FCh+var_D0] +
lea eax [esp+0FCh+var_6C] +
call sub_44F0B0  +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
cmp edx 0 +
jbe loc_452210  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 0 +
mov [esp+0FCh+var_F8] offset aAbbrevOffsetOu +
mov [esp+0FCh+var_FC] eax +
call [esp+0FCh+arg_34]  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44E8C0  +
mov ebx [esp+0FCh+var_90] +
mov esi [esp+0FCh+var_9C] +
test ebx ebx +
jz loc_452203  +
mov edi [esp+0FCh+arg_34] +
xor ebx ebx +
mov ebp [esp+0FCh+arg_38] +
nop   +
mov eax [esi+10h] +
mov ecx edi +
add ebx 1 +
mov [esp+0FCh+var_FC] ebp +
add esi 18h +
lea edx [eax+28h] +
mov eax [esp+0FCh+arg_0] +
call sub_44E8C0  +
cmp ebx [esp+0FCh+var_90] +
jb loc_4521E0  +
add esp 0FCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esp+0FCh+arg_1C] +
jnb loc_452181  +
mov edi [esp+0FCh+arg_18] +
mov edx eax +
xor ebx ebx +
mov ecx [esp+0FCh+arg_1C] +
mov [esp+0FCh+var_4C] offset a_debug_abbrev +
mov [esp+0FCh+var_30] 0 +
add edx edi +
mov [esp+0FCh+var_48] edi +
mov edi [esp+0FCh+arg_30] +
sub ecx eax +
mov eax ecx +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_40] ecx +
mov ecx [esp+0FCh+arg_38] +
mov [esp+0FCh+var_3C] edi +
mov edi [esp+0FCh+arg_34] +
mov [esp+0FCh+var_44] edx +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_34] ecx +
mov [esp+0FCh+var_38] edi +
mov edi [esp+0FCh+arg_18] +
mov [esp+0FCh+var_2C] offset a_debug_abbrev +
mov [esp+0FCh+var_18] eax +
lea eax [esp+0FCh+var_2C] +
mov [esp+0FCh+var_24] edx +
mov [esp+0FCh+var_28] edi +
mov [esp+0FCh+var_14] ecx +
mov [esp+0FCh+var_10] 0 +
call sub_44F150  +
or edx eax +
jz loc_452351  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_4521A2  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_44F150  +
lea eax [esp+0FCh+var_2C] +
call sub_44F120  +
jmp loc_452325  +
call sub_44F150  +
lea eax [esp+0FCh+var_2C] +
call sub_44F150  +
or edx eax +
lea eax [esp+0FCh+var_2C] +
jnz loc_452320  +
call sub_44F150  +
lea eax [esp+0FCh+var_2C] +
call sub_44F150  +
or edx eax +
jnz loc_4522F3  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_4521A2  +
test ebx ebx +
jnz loc_45250A  +
mov edx 1 +
mov ebx [esp+0FCh+var_64] +
lea eax [esp+0FCh+var_6C] +
call sub_44EF00  +
test eax eax +
mov esi eax +
jz loc_452389  +
movzx esi byte ptr [ebx] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 40h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44CF40  +
test eax eax +
mov ebx eax +
jz loc_4521A2  +
mov eax [esp+0FCh+var_64] +
lea ecx [esp+0FCh+var_6C] +
mov edx [esp+0FCh+var_60] +
mov [ebx+14h] esi +
lea esi [esp+0FCh+var_9C] +
mov dword ptr [ebx+1Ch] 0 +
mov [ebx] eax +
sub eax [esp+0FCh+var_B0] +
mov [ebx+4] edx +
mov edx [esp+0FCh+var_A0] +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax [esp+0FCh+var_C8] +
mov dword ptr [ebx+24h] 0 +
mov [ebx+2Ch] edx +
mov dword ptr [ebx+18h] 0 +
mov [ebx+0Ch] eax +
mov eax [esp+0FCh+var_D0] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0 +
mov [ebx+10h] eax +
mov eax [esp+0FCh+var_A4] +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [ebx+28h] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_DC] esi +
mov [esp+0FCh+var_E0] ebx +
mov [esp+0FCh+var_E4] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_E8] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_24] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_20] +
mov edx [esp+0FCh+arg_4] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_2C] +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+arg_28] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44F760  +
test eax eax +
jz loc_452760  +
mov eax [esp+0FCh+var_50] +
test eax eax +
jnz loc_452760  +
mov ebp [esp+0FCh+var_80] +
test ebp ebp +
jz loc_4527DF  +
mov eax [esp+0FCh+var_70] +
test eax eax +
jnz loc_4521A2  +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_B0] eax +
jmp loc_4520B0  +
lea eax [esp+0FCh+var_8C] +
call sub_44EFC0  +
mov [esp+0FCh+var_D0] 1 +
mov edx eax +
jmp loc_4520CC  +
lea eax [ebx+ebx*2] +
mov [esp+0FCh+var_A4] ebx +
lea ebx ds:0[eax*8] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44CF40  +
test eax eax +
mov [esp+0FCh+var_A0] eax +
jz loc_4521A2  +
mov [esp+0FCh+var_F4] ebx +
mov [esp+0FCh+var_F8] 0 +
mov [esp+0FCh+var_FC] eax +
call memset  +
mov eax [esp+0FCh+var_30] +
test eax eax +
jnz loc_4526C9  +
mov [esp+0FCh+var_C4] 0 +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
mov ecx edx +
or ecx eax +
mov [esp+0FCh+var_C0] eax +
mov [esp+0FCh+var_BC] edx +
jz loc_4527B6  +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
mov edx 1 +
mov ebx [esp+0FCh+var_44] +
mov [esp+0FCh+var_B8] eax +
lea eax [esp+0FCh+var_4C] +
call sub_44EF00  +
test eax eax +
mov [esp+0FCh+var_CC] eax +
jz loc_4525CD  +
movzx eax byte ptr [ebx] +
mov [esp+0FCh+var_CC] eax +
mov eax [esp+0FCh+var_4C] +
xor ebx ebx +
mov [esp+0FCh+var_2C] eax +
mov eax [esp+0FCh+var_48] +
mov [esp+0FCh+var_28] eax +
mov eax [esp+0FCh+var_44] +
mov [esp+0FCh+var_24] eax +
mov eax [esp+0FCh+var_40] +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+var_3C] +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+var_38] +
mov [esp+0FCh+var_18] eax +
mov eax [esp+0FCh+var_34] +
mov [esp+0FCh+var_14] eax +
mov eax [esp+0FCh+var_30] +
mov [esp+0FCh+var_10] eax +
jmp loc_452650  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_44F150  +
lea eax [esp+0FCh+var_2C] +
call sub_44F150  +
or edx eax +
jnz loc_452641  +
test ebx ebx +
jnz loc_4526F0  +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
mov [esp+0FCh+var_B4] 0 +
mov eax [esp+0FCh+var_C4] +
mov ecx [esp+0FCh+var_C0] +
add eax [esp+0FCh+var_A0] +
mov edi [esp+0FCh+var_CC] +
add [esp+0FCh+var_C4] 18h +
mov [eax] ecx +
mov ecx [esp+0FCh+var_BC] +
mov [eax+0Ch] edi +
mov [eax+10h] ebx +
mov [eax+4] ecx +
mov ecx [esp+0FCh+var_B8] +
mov [eax+8] ecx +
mov ecx [esp+0FCh+var_B4] +
mov [eax+14h] ecx +
mov eax [esp+0FCh+var_30] +
test eax eax +
jz loc_452578  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44E8C0  +
jmp loc_4521A2  +
mov eax [esp+0FCh+arg_38] +
shl ebx 3 +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44CF40  +
test eax eax +
mov esi eax +
mov [esp+0FCh+var_B4] eax +
jz loc_4526C9  +
xor ebx ebx +
jmp loc_45273B  +
mov [esi] edi +
add ebx 1 +
add esi 8 +
mov [esi-4] eax +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
mov edi eax +
mov ebp edx +
lea eax [esp+0FCh+var_4C] +
call sub_44F150  +
or ebp edi +
jnz loc_452730  +
jmp loc_452688  +
mov eax [esp+0FCh+arg_38] +
lea edx [ebx+28h] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44E8C0  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 40h +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44CF90  +
jmp loc_4521A2  +
mov eax [esp+0FCh+var_A4] +
mov [esp+0FCh+var_F0] offset loc_44E6A0 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+var_A0] +
mov [esp+0FCh+var_FC] eax +
call sub_44E470  +
jmp loc_452368  +
mov edi [esp+0FCh+var_70] +
test edi edi +
jnz loc_4521A2  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] esi +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D040  +
test eax eax +
jz loc_452203  +
mov ebx [esp+0FCh+var_9C] +
mov esi [esp+0FCh+var_90] +
mov [esp+0FCh+var_F0] offset loc_44E950 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_FC] ebx +
mov [esp+0FCh+var_F8] esi +
call sub_44E470  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 44h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44CF40  +
test eax eax +
mov edx eax +
jz loc_452203  +
mov dword ptr [eax] 0 +
mov eax [esp+0FCh+arg_4] +
mov dword ptr [edx+34h] 0 +
mov dword ptr [edx+38h] 0 +
mov dword ptr [edx+3Ch] 0 +
mov [edx+4] eax +
mov eax [esp+0FCh+arg_8] +
mov dword ptr [edx+40h] 0 +
mov [edx+8] ebx +
mov [edx+0Ch] esi +
mov [edx+10h] eax +
mov eax [esp+0FCh+arg_C] +
mov [edx+14h] eax +
mov eax [esp+0FCh+arg_10] +
mov [edx+18h] eax +
mov eax [esp+0FCh+arg_14] +
mov [edx+1Ch] eax +
mov eax [esp+0FCh+arg_20] +
mov [edx+20h] eax +
mov eax [esp+0FCh+arg_24] +
mov [edx+24h] eax +
mov eax [esp+0FCh+arg_28] +
mov [edx+28h] eax +
mov eax [esp+0FCh+arg_2C] +
mov [edx+2Ch] eax +
mov eax [esp+0FCh+arg_30] +
mov [edx+30h] eax +
mov eax [esp+0FCh+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_45294D  +
mov eax [esp+0FCh+arg_0] +
lea ebx [eax+10h] +
mov ecx ebx +
jmp loc_452924  +
mov ecx eax +
mov eax [ecx] +
test eax eax +
jnz loc_452922  +
cmpxchg [ecx] edx +
jnz loc_45291E  +
mov eax [esp+0FCh+arg_3C] +
mov dword ptr [eax] offset sub_451F10 +
add esp 0FCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+10h] +
mov eax [eax+10h] +
test eax eax +
jz loc_45295F  +
mov ecx eax +
mov eax [eax] +
test eax eax +
jnz loc_452957  +
mov [ecx] edx +
jmp loc_452930  +
mov edx offset aUnrecognized_6 +
lea eax [esp+0FCh+var_6C] +
call sub_44EEA0  +
jmp loc_4521A2  +
lea esi [esp+0FCh+var_9C] +
jmp loc_4527EE  +
***
mov eax [esp+arg_0] +
mov off_4836E8 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 14h +
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_4529F0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 14h +
mov edx [esp+18h+arg_0] +
lea ebx [esp+18h+arg_4] +
test edx edx +
jz loc_452B27  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_452B13  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_452B6D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_452B47  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_4DA374 +
mov ebx [esp+1Ch+arg_0] +
lea edi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_452BC6  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_452BA0  +
mov byte ptr [esi] 0 +
mov eax ds:dword_4DA374 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_452C55  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_452BF7  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_4529F0  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_452C20  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_4529F0  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_452C46  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_452CF9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_452C87  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_4529F0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_452CB0  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_452CED  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4529F0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_452CD6  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_452D2B  +
test eax eax +
jz loc_452D54  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_4D0520[eax] +
movzx edx ds:byte_4D0520[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_452D21  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_452DA1  +
jmp loc_452DD2  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_452DD0  +
mov ecx ebp +
test cl cl +
jnz loc_452DD0  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_452DD7  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_4D0520[eax] +
movzx edx ds:byte_4D0520[edx] +
cmp eax 2Fh +
jnz loc_452D78  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_452D8E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_452E19  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_4D0520[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_452DF7  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_452D10  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_45C1A0  +
mov ebx eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_45C1A0  +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
mov esi eax +
call sub_452D10  +
mov [esp+10h+var_10] ebx +
mov edi eax +
call free  +
mov [esp+10h+var_10] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1 +
mov esi [edx] +
mov ebx [esp+2+arg_1] +
cmp esi ecx +
jz loc_452F60  +
lea ecx [esi+1] +
mov [edx] ecx +
mov ecx [esp+2+arg_5] +
shl ecx 0Fh +
sar ecx 1Fh +
and ecx 0Bh +
test ebx ebx +
jz loc_452F70  +
movzx eax al +
movsx edx byte ptr [ebx+eax] +
movzx eax byte ptr [esi] +
movzx edi byte ptr [ebx+eax] +
cmp edi edx +
jb loc_452F7B  +
mov ebp 1 +
mov esi ebx +
jmp loc_452F1C  +
movzx ecx byte ptr [esi+edx] +
add edx 1 +
movzx eax cl +
and ecx 7 +
sar eax 3 +
add eax [esp+2+arg_9] +
movzx ebx byte ptr [eax] +
mov [esp+2+var_2] bl +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
movzx ebx [esp+2+var_2] +
or ebx ecx +
cmp edi edx +
mov [eax] bl +
jb loc_452F50  +
test esi esi +
jnz loc_452EF0  +
mov eax edx +
mov ebx ebp +
sar eax 3 +
add eax [esp+2+arg_9] +
movzx ecx byte ptr [eax] +
mov [esp+2+var_2] cl +
mov ecx edx +
add edx 1 +
and ecx 7 +
shl ebx cl +
mov ecx ebx +
movzx ebx [esp+2+var_2] +
or ebx ecx +
cmp edi edx +
mov [eax] bl +
jnb loc_452F1C  +
lea esi [esi+0] +
xor eax eax +
add esp 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1 +
mov eax 0Bh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx edx al +
movzx edi byte ptr [esi] +
jmp loc_452EDD  +
mov eax ecx +
jmp loc_452F52  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov ebx [eax] +
lea eax [ebx+1] +
mov [esp+0Ch] eax +
cmp byte ptr [ebx] 1Dh +
ja loc_452FF0  +
mov edi ecx +
movzx ecx byte ptr [ebx] +
jmp ds:off_4D0860[ecx*4]  +
movzx ebx byte ptr [ebx+1] +
mov ecx edi +
lea eax [esp+0Ch] +
call sub_4530D0  +
lea edx [edi+ebx*4] +
movzx ecx byte ptr [edx] +
mov ebx ecx +
and ebx 3 +
cmp bl 3 +
jz loc_453047  +
test al al +
jz loc_452FF0  +
mov eax [esp+0Ch] +
lea esi [esi+0] +
mov [esi] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx edx byte ptr [ebx+1] +
test byte ptr [edi+edx*4] 3 +
jnz loc_452FD0  +
lea esi [esi+0] +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea ecx [ebx+3] +
movsx edx byte ptr [ebx+4] +
mov [esp+0Ch] ecx +
movzx edi byte ptr [ebx+3] +
shl edx 8 +
add edx edi +
jnz loc_452FF0  +
mov [esp+0Ch] eax +
movsx eax byte ptr [ebx+2] +
movzx edx byte ptr [ebx+1] +
shl eax 8 +
add eax edx +
add eax ecx +
jmp loc_452FD0  +
movsx edx byte ptr [ebx+2] +
add ebx 3 +
movzx ecx byte ptr [ebx-2] +
shl edx 8 +
add edx ecx +
js loc_452FF0  +
lea eax [ebx+edx] +
jmp loc_452FD0  +
mov ebx eax +
and ecx 0FFFFFFFCh +
and ebx 3 +
or ecx ebx +
mov [edx] cl +
jmp loc_452FC5  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
mov [esp+18h+var_C] eax +
nop   +
cmp esi eax +
jbe loc_453099  +
cmp byte ptr [eax] 0Fh +
jnz loc_4530A5  +
lea edx [eax+1] +
mov [esp+18h+var_C] edx +
movsx ebx byte ptr [eax+2] +
movzx edx byte ptr [eax+1] +
shl ebx 8 +
add ebx edx +
lea eax [eax+ebx+3] +
cmp esi eax +
mov [esp+18h+var_C] eax +
ja loc_453074  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx edi +
mov edx esi +
lea eax [esp+18h+var_C] +
call sub_452F80  +
test al al +
jz loc_4530C0  +
mov eax [esp+18h+var_C] +
jmp loc_453070  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
lea ecx [eax+2] +
mov [esp+28h+var_1C] ecx +
cmp edi ecx +
jbe loc_4531D0  +
movzx eax byte ptr [ecx] +
cmp al 7 +
jz loc_4531A0  +
cmp al 0Fh +
jnz loc_4531B3  +
lea eax [ecx+1] +
add ecx 3 +
mov [esp+28h+var_1C] eax +
movsx edx byte ptr [ecx-1] +
movzx ebx byte ptr [ecx-2] +
mov eax ecx +
mov [esp+28h+var_1C] ecx +
shl edx 8 +
add ebx edx +
jns loc_453166  +
jmp loc_4530E6  +
mov ecx esi +
call sub_453060  +
test al al +
jz loc_4531D0  +
add ebx [esp+28h+var_1C] +
mov [esp+28h+var_1C] ebx +
mov edx ebx +
cmp byte ptr [ebx] 0Fh +
jnz loc_4531E0  +
lea eax [ebx+1] +
mov [esp+28h+var_1C] eax +
movsx eax byte ptr [ebx+2] +
movzx ebx byte ptr [ebx+1] +
shl eax 8 +
add ebx eax +
lea eax [edx+3] +
mov [esp+28h+var_1C] eax +
cmp byte ptr [eax+ebx-3] 0Eh +
jnz loc_4531E4  +
lea edx [eax+ebx-3] +
cmp byte ptr [edx] 0Eh +
jz loc_453122  +
movsx edx byte ptr [eax-1] +
mov ecx esi +
movzx ebx byte ptr [eax-2] +
shl edx 8 +
add ebx edx +
lea edx [eax+ebx] +
call sub_453060  +
test al al +
jz loc_4531D0  +
mov ecx [esp+28h+var_1C] +
add ecx ebx +
mov [esp+28h+var_1C] ecx +
jmp loc_4530E6  +
add ecx 2 +
mov eax 1 +
mov [ebp+0] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx edi +
lea eax [esp+28h+var_1C] +
call sub_452F80  +
test al al +
jz loc_4531D0  +
mov ecx [esp+28h+var_1C] +
jmp loc_4530E6  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
jmp loc_45316F  +
mov [esp+28h+var_1C] edx +
mov eax edx +
jmp loc_45316F  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov ebx [eax+10h] +
mov eax [eax] +
mov [ebp+var_20] eax +
add eax [esi+8] +
mov [ebp+var_24] eax +
mov eax 30h +
call sub_470810  +
mov edx 100h +
sub esp eax +
mov edi ebx +
lea eax [esp+48h+var_2E+1] +
mov [ebp+var_1C] eax +
and [ebp+var_1C] 0FFFFFFF0h +
test bl 1 +
jnz loc_4532D0  +
test edi 2 +
jnz loc_4532E6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_453253  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_45325B  +
mov byte ptr [edi] 0 +
movzx eax byte ptr [esi+1Ch] +
xor edi edi +
mov ecx 1 +
mov [ebp+var_28] 5 +
or eax 8 +
and eax 0FFFFFFFEh +
mov [esi+1Ch] al +
***
mov edx [ebp-24h] +
mov eax [ebp-20h] +
cmp eax edx +
jz loc_4532A0  +
movzx eax byte ptr [eax] +
cmp al 1 +
jz loc_4532A0  +
mov edx [ebp-20h] +
add edx 1 +
cmp al 1Dh +
mov [ebp-2Ch] edx +
ja sub_45354D  +
jmp ds:off_4D08D8[eax*4]  +
***
movzx eax byte ptr [esi+1Ch] +
mov edx eax +
and eax 0FFFFFFFEh +
and edx 1 +
or edx ecx +
or eax edx +
test edi edi +
mov [esi+1Ch] al +
jz loc_453301  +
mov eax [ebp-1Ch] +
sub edi 1 +
mov ecx 1 +
mov eax [eax+edi*4] +
mov [ebp-20h] eax +
jmp loc_453276  +
***
lea edi [ebx+1] +
mov dx 0FFh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_45323C  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_45323C  +
***
test byte ptr [esi+1Ch] 1 +
jz loc_4534DA  +
***
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add dword ptr [ebp-20h] 5 +
mov byte ptr [ebp-2Dh] 0 +
mov eax [ebp-2Ch] +
mov edx [ebp-20h] +
mov edx [ebp-20h] +
movsx eax byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
add eax edx +
mov edx [ebp-20h] +
test eax eax +
lea edx [edx+eax+3] +
mov [ebp-20h] edx +
jg loc_453276  +
movzx eax byte ptr [edx] +
cmp al 15h +
jz loc_4533C2  +
cmp al 0Fh +
jnz loc_453276  +
mov edx [ebp-20h] +
movsx eax byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
add eax edx +
mov edx [ebp-20h] +
test edi edi +
lea eax [edx+eax+3] +
mov [ebp-20h] eax +
jz loc_453276  +
mov eax [ebp-1Ch] +
mov edx [ebp-20h] +
cmp [eax+edi*4-4] edx +
setz al  +
movzx eax al +
sub edi eax +
jmp loc_453276  +
***
or byte ptr [esi+1Ch] 1 +
add dword ptr [ebp-20h] 3 +
mov eax [ebp-20h] +
mov eax [ebp-20h] +
movzx edx byte ptr [ebx+0Ah] +
mov eax [ebp-20h] +
xor eax eax +
call abort  +
or byte ptr [esi+1Ch] 1 +
jmp loc_453358  +
***
mov eax dword_4836EC +
mov [ebp-38h] ecx +
mov ecx [ebp-28h] +
lea edx [eax+eax*8] +
lea eax [eax+edx*2] +
cmp ecx eax +
ja loc_4535C0  +
lea eax ds:1Eh[ecx*8] +
xor edx edx +
mov ecx 10h +
div  ecx +
shl eax 4 +
call sub_470810  +
mov ecx [ebp-28h] +
sub esp eax +
lea edx ds:0[ecx*4] +
mov ecx [ebp-1Ch] +
lea eax [esp+1Bh] +
and eax 0FFFFFFF0h +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] eax +
call memcpy  +
test eax eax +
mov [ebp-1Ch] eax +
jz loc_4535C0  +
shl dword ptr [ebp-28h] 1 +
mov ecx [ebp-38h] +
jmp loc_45334C  +
***
mov eax 0FFFFFFFEh +
jmp loc_453303  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov esi [eax] +
mov [ebp+var_88] eax +
mov edi [ebp+arg_10] +
mov [ebp+var_58] edx +
mov [ebp+var_54] ecx +
mov [ebp+var_38] esi +
add esi [eax+8] +
mov [ebp+var_44] esi +
mov esi [eax+14h] +
mov eax [eax+18h] +
mov [ebp+var_8C] esi +
mov [ebp+var_A8] eax +
mov esi eax +
add eax 1 +
mov [ebp+var_48] eax +
mov eax 30h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_4C] eax +
and [ebp+var_4C] 0FFFFFFF0h +
test esi esi +
jnz loc_454A55  +
mov [ebp+var_A0] 0 +
xor ebx ebx +
xor esi esi +
mov [ebp+var_9C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_94] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov eax [ebp+arg_8] +
test eax eax +
js loc_455038  +
mov eax [ebp+var_54] +
add eax [ebp+arg_4] +
cmp [ebp+arg_8] eax +
jg loc_455038  +
cmp [ebp+var_48] 1 +
mov eax 1 +
mov edx 1 +
jbe loc_4536DD  +
mov [ebp+arg_10] edi +
mov edi [ebp+var_34] +
lea esi [esi+0] +
mov ecx [ebp+var_60] +
add edx 1 +
mov dword ptr [ecx+eax*4] offset unk_4D9400 +
mov ecx [ebp+var_5C] +
mov dword ptr [ecx+eax*4] offset unk_4D9400 +
lea ecx [edi+eax*4] +
mov dword ptr [ebx+eax*4] offset unk_4D9400 +
mov dword ptr [esi+eax*4] offset unk_4D9400 +
movzx eax byte ptr [ecx] +
or eax 3 +
and eax 0FFFFFFE3h +
cmp edx [ebp+var_48] +
mov [ecx] al +
mov eax edx +
jnz loc_4536A0  +
mov edi [ebp+arg_10] +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_4537CA  +
mov eax [ebp+var_58] +
test eax eax +
jz loc_4537CA  +
mov eax [ebp+var_54] +
mov [ebp+var_68] 0 +
mov [ebp+var_90] 0 +
mov [ebp+var_54] 0 +
mov [ebp+arg_4] eax +
mov eax [ebp+var_58] +
mov [ebp+var_58] 0 +
mov [ebp+arg_0] eax +
xor eax eax +
mov edx [ebp+arg_0] +
add edx [ebp+arg_4] +
cmp [ebp+var_54] edi +
mov [ebp+var_84] edx +
jl loc_454A3C  +
add edi [ebp+var_58] +
mov [ebp+var_70] edi +
mov edi [ebp+arg_0] +
mov [ebp+var_6C] edi +
test al al +
jz loc_454A22  +
mov eax [ebp+var_58] +
add eax [ebp+arg_8] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_70] +
mov [ebp+var_64] eax +
mov eax [ebp+arg_0] +
xor edi edi +
mov [ebp+var_7C] 5 +
mov [ebp+var_50] 0 +
mov [ebp+var_74] 0 +
sub eax 1 +
mov [ebp+var_80] 0 +
mov [ebp+var_40] 100h +
mov [ebp+var_30] 101h +
mov [ebp+var_A4] 0 +
mov [ebp+var_98] eax +
lea esi [esi+0] +
***
mov eax [ebp-44h] +
cmp [ebp-38h] eax +
jz loc_4538C2  +
mov eax [ebp-38h] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
mov [ebp-2Ch] edx +
cmp al 1Dh +
ja loc_454B46  +
movzx edx al +
jmp ds:off_4D0950[edx*4]  +
***
mov ecx [ebp-38h] +
mov ecx [ebp-2Ch] +
movsx eax byte ptr [ecx+1] +
movzx edx byte ptr [ecx] +
shl eax 8 +
add eax edx +
lea eax [ecx+eax+2] +
mov [ebp-38h] eax +
mov eax [ebp-44h] +
cmp [ebp-38h] eax +
jnz loc_4537AC  +
mov eax [ebp-6Ch] +
cmp [ebp-3Ch] eax +
jz sub_453A5C  +
mov eax [ebp-74h] +
cmp [ebp-58h] eax +
setbe dl  +
ja loc_4549FE  +
mov eax [ebp-54h] +
test eax eax +
jz loc_4549FE  +
mov eax [ebp-68h] +
cmp [ebp-74h] eax +
mov eax [ebp-70h] +
setnbe cl  +
cmp [ebp-64h] eax +
setz al  +
cmp cl al +
jz loc_454A14  +
mov eax [ebp-74h] +
cmp [ebp-3Ch] eax +
setnbe al  +
test edi edi +
jz loc_4552B2  +
test al al +
jnz loc_453922  +
mov eax [ebp-80h] +
test eax eax +
jnz loc_454412  +
cmp dword ptr [ebp-48h] 1 +
jbe loc_453963  +
mov ecx [ebp-94h] +
mov eax 1 +
mov edx 1 +
mov [ebp-38h] edi +
mov edi [ebp-78h] +
mov [ebp-2Ch] ecx +
mov [ebp-30h] edi +
mov edi [esi+eax*4] +
add edx 1 +
mov ecx [ebp-2Ch] +
cmp edx [ebp-48h] +
mov [ecx+eax*4] edi +
mov ecx [ebp-30h] +
mov edi [ebx+eax*4] +
mov [ecx+eax*4] edi +
mov eax edx +
jnz loc_453944  +
mov edi [ebp-38h] +
mov eax [ebp-3Ch] +
mov dword ptr [ebp-80h] 1 +
mov [ebp-74h] eax +
jmp loc_454412  +
***
mov eax [ebp-2Ch] +
mov [ebp-38h] eax +
jmp loc_4537A0  +
***
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_453BA7  +
mov eax [ebp-88h] +
movzx eax byte ptr [eax+1Ch] +
test al 10h +
jnz loc_453BA7  +
and eax 6 +
jz loc_454C19  +
cmp al 2 +
mov eax [ebp+14h] +
mov eax [eax] +
jz loc_45509E  +
test eax eax +
jz loc_453BA7  +
mov eax [ebp+14h] +
mov edi [ebp+10h] +
mov ecx [ebp-70h] +
mov eax [eax+4] +
mov [eax] edi +
mov [ebp-2Ch] eax +
mov eax [ebp+14h] +
mov eax [eax+8] +
mov edi eax +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov edx eax +
sub eax [ebp-58h] +
sub edx [ebp+8] +
add edx [ebp-54h] +
cmp [ebp-64h] ecx +
cmovnz eax edx +
mov [edi] eax +
mov eax [ebp+14h] +
mov edi [ebp-48h] +
mov eax [eax] +
mov edx edi +
cmp edi eax +
cmova edx eax +
cmp edx 1 +
jbe loc_453B78  +
mov [ebp-34h] esi +
mov ecx 1 +
mov edx 1 +
mov [ebp-38h] ebx +
mov esi edi +
mov eax [ebp-34h] +
lea ebx ds:0[ecx*4] +
mov eax [eax+ecx*4] +
cmp eax offset unk_4D9400 +
jz loc_454CE1  +
mov edi [ebp-38h] +
mov ecx [edi+ecx*4] +
cmp ecx offset unk_4D9400 +
jz loc_454CE1  +
mov edi [ebp-2Ch] +
add edi ebx +
cmp dword ptr [ebp-54h] 0 +
jz loc_454CD4  +
cmp [ebp-58h] eax +
ja loc_454CFA  +
cmp eax [ebp-68h] +
ja loc_454CFA  +
sub eax [ebp-58h] +
add ebx [ebp-30h] +
mov [edi] eax +
cmp [ebp-58h] ecx +
ja loc_453B55  +
mov eax ecx +
sub eax [ebp-58h] +
cmp ecx [ebp-68h] +
jbe loc_453B5D  +
mov eax [ebp-54h] +
sub ecx [ebp+8] +
add eax ecx +
mov [ebx] eax +
mov eax [ebp+14h] +
add edx 1 +
mov ecx edx +
mov eax [eax] +
cmp esi eax +
mov ebx eax +
cmovbe ebx esi +
cmp edx ebx +
jb loc_453AF3  +
mov edx [ebp-48h] +
cmp edx eax +
jnb loc_453BA7  +
mov ecx [ebp+14h] +
mov eax edx +
mov ebx [ebp-2Ch] +
mov esi [ebp-30h] +
lea esi [esi+0] +
mov dword ptr [esi+eax*4] 0FFFFFFFFh +
add edx 1 +
mov dword ptr [ebx+eax*4] 0FFFFFFFFh +
mov eax edx +
cmp edx [ecx] +
jb loc_453B90  +
mov eax [ebp-3Ch] +
mov edx [ebp+8] +
mov esi [ebp-70h] +
sub eax [ebp+10h] +
sub edx [ebp-90h] +
cmp [ebp-64h] esi +
cmovz edx [ebp-58h] +
sub eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp-4Ch] +
mov eax [ebp-40h] +
mov eax [ebp-40h] +
add eax 1 +
sub eax [ebp-30h] +
lea ecx [eax+eax*2+4] +
mov eax [ebp-7Ch] +
sub eax edi +
cmp eax ecx +
jnb loc_453E32  +
mov eax dword_4836EC +
lea edx [eax+eax*8] +
lea eax [eax+edx*2] +
mov edx [ebp-7Ch] +
mov [ebp-38h] eax +
cmp edx eax +
ja loc_454E66  +
mov [ebp-0B0h] ecx +
mov ecx [ebp-4Ch] +
mov [ebp-0ACh] ebx +
mov ebx edx +
mov [ebp-7Ch] esi +
lea eax ds:1Eh[ebx*8] +
mov esi 10h +
xor edx edx +
div  esi +
shl eax 4 +
call sub_470810  +
sub esp eax +
lea eax [esp+arg_17] +
and eax 0FFFFFFF0h +
lea edx ds:0[ebx*4] +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
mov [esp+0] eax +
call memcpy  +
test eax eax +
mov ecx eax +
jz loc_454E66  +
add ebx ebx +
mov eax ebx +
sub eax edi +
cmp eax [ebp-0B0h] +
jb loc_454FE5  +
mov esi [ebp-7Ch] +
mov [ebp-7Ch] ebx +
mov ebx [ebp-0ACh] +
mov [ebp-4Ch] ecx +
mov edx [ebp-40h] +
mov eax [ebp-30h] +
cmp eax edx +
ja loc_453E6B  +
mov edx [ebp-4Ch] +
mov ecx [ebp-34h] +
lea edx [edx+edi*4] +
mov [ebp-38h] ecx +
mov ecx [esi+eax*4] +
add edi 3 +
add edx 0Ch +
mov [edx-0Ch] ecx +
mov ecx [ebx+eax*4] +
mov [edx-8] ecx +
mov ecx [ebp-38h] +
mov ecx [ecx+eax*4] +
add eax 1 +
mov [edx-4] ecx +
cmp [ebp-40h] eax +
jnb loc_453E48  +
mov edx [ebp-4Ch] +
lea eax ds:0[edi*4] +
mov ecx [ebp-30h] +
mov [edx+edi*4] ecx +
mov ecx [ebp-40h] +
add edi 4 +
mov dword ptr [edx+eax+8] 0 +
mov dword ptr [edx+eax+0Ch] 0 +
mov [edx+eax+4] ecx +
jmp sub_4538A0  +
***
mov ecx [ebp-38h] +
movsx eax byte ptr [ecx+2] +
movzx edx byte ptr [ecx+1] +
shl eax 8 +
add eax edx +
lea edx [ecx+3] +
cmp [ebp-44h] edx +
mov [ebp-0ACh] eax +
mov [ebp-38h] edx +
mov [ebp-1Ch] edx +
jbe loc_453F0B  +
movzx eax byte ptr [ecx+3] +
test al al +
jnz loc_4552E2  +
mov eax ecx +
add eax 4 +
mov [ebp-2Ch] esi +
mov ecx eax +
mov esi [ebp-44h] +
jmp loc_453EFF  +
***
cmp al 5 +
mov eax [ebp-64h] +
setz cl  +
cmp [ebp-3Ch] eax +
mov [ebp-0B0h] cl +
mov [ebp-0ACh] cl +
jnz loc_4553DB  +
cmp [ebp-6Ch] eax +
jz loc_455093  +
mov eax [ebp+8] +
mov edx [ebp-6Ch] +
mov [ebp-64h] eax +
cmp eax edx +
jz loc_454331  +
mov [ebp-64h] edx +
mov eax [ebp+8] +
jmp loc_4553DE  +
***
mov eax [ebp-64h] +
mov eax [ebp-54h] +
mov eax [ebp-38h] +
lea edx [eax+2] +
mov [ebp-0B8h] edx +
movzx edx byte ptr [eax+1] +
mov ecx [esi+edx*4] +
lea eax ds:0[edx*4] +
cmp ecx offset unk_4D9400 +
jz loc_4544AE  +
add eax ebx +
mov [ebp-0C0h] eax +
mov eax [eax] +
cmp eax offset unk_4D9400 +
mov [ebp-38h] eax +
jz loc_4544AE  +
mov edx [ebp-54h] +
test edx edx +
jz loc_45415D  +
cmp [ebp-58h] ecx +
mov edx 1 +
ja loc_45413A  +
cmp ecx [ebp-68h] +
setnbe dl  +
mov eax [ebp-38h] +
cmp [ebp-58h] eax +
mov byte ptr [ebp-2Ch] 0 +
ja loc_454150  +
mov eax [ebp-68h] +
cmp [ebp-38h] eax +
setbe byte ptr [ebp-2Ch]  +
mov eax [ebp-38h] +
cmp [ebp-2Ch] dl +
cmovz eax [ebp-70h] +
mov [ebp-38h] eax +
mov eax [ebp-34h] +
mov edx [ebp-30h] +
mov [ebp-0B0h] ebx +
mov ebx [ebp-8Ch] +
mov [ebp-0B4h] edi +
mov edi [ebp-3Ch] +
mov [ebp-0ACh] esi +
lea eax [eax+edx*4] +
mov [ebp-0BCh] eax +
cmp ecx [ebp-38h] +
jz loc_455042  +
cmp edi [ebp-64h] +
jnz loc_454ECB  +
cmp [ebp-6Ch] edi +
jz loc_455081  +
mov eax [ebp-6Ch] +
cmp [ebp+8] eax +
jnz loc_454EC5  +
mov eax [ebp+8] +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov [ebp-64h] eax +
jmp loc_454331  +
***
mov eax [ebp-38h] +
mov eax [ebp-2Ch] +
mov edx [ebp-84h] +
mov ecx [ebp-54h] +
mov eax [ebp-64h] +
mov eax [ebp-64h] +
mov ecx [ebp-38h] +
mov edx [ebp-38h] +
mov eax [ebp-38h] +
mov ecx [ebp-38h] +
mov eax [ebp-54h] +
mov edx [ebp-84h] +
mov eax [ebp-3Ch] +
cmp eax edx +
jz loc_455076  +
mov edx [ebp-68h] +
cmp eax edx +
jz loc_455111  +
mov eax [ebp-98h] +
cmp [ebp-3Ch] eax +
jz loc_455213  +
mov eax [ebp-3Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
mov eax [ebp-3Ch] +
jnz loc_454331  +
mov eax [ebp-54h] +
test eax eax +
mov eax [ebp-58h] +
cmovz eax [ebp+8] +
cmp eax [ebp-3Ch] +
jz sub_4539F1  +
mov eax [ebp+0Ch] +
test eax eax +
jz sub_4539F1  +
mov eax [ebp-3Ch] +
sub eax 1 +
cmp [ebp-68h] eax +
jz loc_4556C5  +
mov eax [ebp-3Ch] +
cmp eax [ebp+8] +
jz loc_4556A3  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax-1] +
jmp loc_4546BF  +
***
mov eax [ebp-54h] +
mov eax [ebp-84h] +
mov edx [ebp-38h] +
mov eax [ebp-54h] +
test eax eax +
mov eax [ebp-58h] +
cmovz eax [ebp+8] +
cmp eax [ebp-3Ch] +
jz loc_4544AE  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4544AE  +
mov eax [ebp-84h] +
cmp [ebp-3Ch] eax +
jz loc_4544AE  +
mov eax [ebp-3Ch] +
sub eax 1 +
cmp [ebp-68h] eax +
jz loc_45557C  +
mov eax [ebp-3Ch] +
cmp eax [ebp+8] +
jz loc_455570  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax-1] +
cmp ds:byte_4D9420[eax] 1 +
mov eax [ebp-68h] +
setz dl  +
cmp [ebp-3Ch] eax +
jz loc_455303  +
mov eax [ebp-98h] +
cmp [ebp-3Ch] eax +
jz loc_4552F7  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax] +
cmp ds:byte_4D9420[eax] 1 +
mov eax [ebp-3Ch] +
setz cl  +
cmp dl cl +
jnz loc_454331  +
jmp sub_4539F1  +
***
lea edx [eax+3] +
mov eax edx +
jmp loc_453814  +
***
cmp al 16h +
jnz loc_4549CC  +
mov ecx [ebp-38h] +
mov eax ecx +
add eax 1 +
mov [ebp-1Ch] eax +
movsx eax byte ptr [ecx+2] +
movzx edx byte ptr [ecx+1] +
shl eax 8 +
add eax edx +
lea eax [ecx+eax+3] +
mov [ebp-1Ch] eax +
cmp byte ptr [eax] 15h +
jz loc_45440A  +
mov eax [ebp-68h] +
cmp [ebp-3Ch] eax +
ja loc_454280  +
mov eax [ebp-3Ch] +
cmp [ebp-58h] eax +
ja loc_454280  +
mov eax [ebp-70h] +
mov dword ptr [ebp-50h] 0 +
mov [ebp-64h] eax +
jmp loc_4537A0  +
mov edi [ebp-50h] +
jmp loc_4543BB  +
***
mov eax [ebp-70h] +
mov ecx 1 +
cmp [ebp-64h] eax +
setz al  +
cmp cl al +
jnz loc_453902  +
mov eax [ebp-70h] +
cmp [ebp-64h] eax +
setnz al  +
jmp loc_45390B  +
***
mov eax [ebp+arg_8] +
sub eax [ebp+var_90] +
add eax [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_6C] +
mov [ebp+var_64] eax +
jmp loc_453758  +
mov edx [ebp+arg_0] +
sub edi [ebp+var_90] +
add edx edi +
mov edi [ebp+var_68] +
mov [ebp+var_6C] edx +
mov [ebp+var_70] edi +
jmp loc_453741  +
mov eax [ebp+var_48] +
lea edx ds:0[eax*4] +
lea eax [edx+1Eh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea esi [esp+0D8h+var_BD] +
lea eax [edx+1Eh] +
and esi 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea ebx [esp+0D8h+var_BD] +
lea eax [edx+1Eh] +
and ebx 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_5C] eax +
lea eax [edx+1Eh] +
and [ebp+var_5C] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_60] eax +
lea eax [edx+1Eh] +
and [ebp+var_60] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_94] eax +
lea eax [edx+1Eh] +
and [ebp+var_94] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_78] eax +
lea eax [edx+1Eh] +
and [ebp+var_78] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_34] eax +
lea eax [edx+1Eh] +
and [ebp+var_34] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_9C] eax +
lea eax [edx+1Eh] +
and [ebp+var_9C] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_A0] eax +
and [ebp+var_A0] 0FFFFFFF0h +
jmp loc_45366D  +
***
call abort  +
mov ecx [ebp-38h] +
mov eax esi +
jmp loc_4545A0  +
***
add dword ptr [ebp-38h] 5 +
jmp loc_4537A0  +
***
cmp eax offset unk_4D9400 +
cmovz eax [ebp-3Ch] +
jmp loc_4541ED  +
***
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
jmp loc_453A2D  +
***
mov eax [ebp-88h] +
test byte ptr [eax+1Ch] 20h +
jz sub_4539F1  +
jmp loc_4544AE  +
***
movzx eax byte ptr [eax+2] +
mov [ebp-0ACh] al +
movzx edx byte ptr [ecx+3] +
cmp dl 2 +
jz loc_453BCA  +
lea eax [edx-4] +
cmp al 1 +
ja loc_45388A  +
cmp dl 5 +
movzx edx byte ptr [ebp-0ACh] +
setz al  +
mov [ebp-0B4h] al +
movzx eax al +
mov [ebp-0B0h] eax +
movzx eax byte ptr [ecx+4] +
shl eax 3 +
cmp edx eax +
jnb loc_454C06  +
movzx edx byte ptr [ebp-0ACh] +
mov eax edx +
shr al 3 +
movzx eax al +
movzx eax byte ptr [ecx+eax+5] +
mov ecx edx +
and ecx 7 +
bt eax ecx +
jnb loc_454C06  +
movzx eax byte ptr [ebp-0B4h] +
xor eax 1 +
movzx eax al +
mov [ebp-0B0h] eax +
mov eax [ebp-0B0h] +
test eax eax +
jnz loc_45388A  +
jmp loc_453BDA  +
***
mov eax [ebp-0A8h] +
mov edx 1Eh +
mov edi [ebp+14h] +
add eax 2 +
cmp eax 1Eh +
cmovb eax edx +
mov [edi] eax +
lea edi ds:0[eax*4] +
mov [esp] edi +
call malloc  +
mov edx eax +
mov eax [ebp+14h] +
mov [ebp-2Ch] edx +
mov [eax+4] edx +
mov [esp] edi +
call malloc  +
mov edx [ebp-2Ch] +
mov edi [ebp+14h] +
test edx edx +
mov [edi+8] eax +
jz loc_454E66  +
test eax eax +
jz loc_454E66  +
mov edi [ebp-88h] +
movzx eax byte ptr [edi+1Ch] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [edi+1Ch] al +
jmp loc_453A97  +
***
mov edx [ebp-64h] +
cmp [ebp-3Ch] edx +
jz loc_454CBA  +
lea edx [ecx+1] +
movzx ecx byte ptr [ecx] +
add dword ptr [ebp-3Ch] 1 +
cmp [eax] cl +
mov [ebp-38h] edx +
jnz loc_4544AE  +
sub dword ptr [ebp-2Ch] 1 +
jz loc_4545DA  +
mov ecx [ebp-38h] +
mov edx [ebp-64h] +
cmp [ebp-3Ch] edx +
mov eax [ebp-3Ch] +
jnz loc_454C8D  +
mov edx [ebp-3Ch] +
cmp [ebp-6Ch] edx +
jz loc_4556D0  +
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
mov eax [ebp+8] +
mov [ebp-3Ch] eax +
jmp loc_454CAF  +
***
sub eax [ebp+8] +
add ebx [ebp-30h] +
mov [edi] eax +
jmp loc_453B55  +
***
mov eax [ebp-30h] +
mov dword ptr [eax+ebx] 0FFFFFFFFh +
mov eax [ebp-2Ch] +
mov dword ptr [eax+ebx] 0FFFFFFFFh +
jmp loc_453B5F  +
***
sub eax [ebp+8] +
add eax [ebp-54h] +
add ebx [ebp-30h] +
mov [edi] eax +
jmp loc_453B46  +
***
cmp dl 16h +
jnz loc_454FB0  +
mov eax [ebp-38h] +
movsx edx byte ptr [eax+5] +
movzx ecx byte ptr [eax+4] +
shl edx 8 +
add ecx edx +
mov edx eax +
add edx 8 +
add edx ecx +
test ecx ecx +
mov [ebp-1Ch] edx +
jns loc_454FB0  +
cmp byte ptr [edx] 0Fh +
jnz loc_454FB0  +
cmp byte ptr [edx+3] 6 +
jnz loc_454FB0  +
mov eax [ebp-38h] +
movzx ecx byte ptr [edx+4] +
cmp cl [eax+1] +
jnz loc_454FB0  +
mov eax [ebp-34h] +
lea eax [eax+ecx*4] +
movzx ecx byte ptr [eax] +
test cl 10h +
jz loc_454DA9  +
mov edx [ebp-38h] +
and ecx 0FFFFFFEFh +
mov [eax] cl +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx+2] +
add edx eax +
cmp eax edx +
jnb loc_454DA6  +
mov edx [ebp-5Ch] +
mov ecx [edx+eax*4] +
mov edx [ebp-60h] +
mov [esi+eax*4] ecx +
mov edx [edx+eax*4] +
cmp ecx edx +
ja loc_454D92  +
mov [ebx+eax*4] edx +
mov edx [ebp-38h] +
add eax 1 +
movzx ecx byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
add edx ecx +
cmp edx eax +
ja loc_454D7C  +
mov edx [ebp-1Ch] +
lea eax [edx+1] +
mov [ebp-1Ch] eax +
movsx eax byte ptr [edx+2] +
movzx ecx byte ptr [edx+1] +
shl eax 8 +
add eax ecx +
mov [ebp-38h] eax +
mov eax [ebp-40h] +
lea ecx [edx+3] +
mov [ebp-1Ch] ecx +
add eax 1 +
sub eax [ebp-30h] +
lea eax [eax+eax*2+4] +
mov edx eax +
mov [ebp-2Ch] eax +
mov eax [ebp-7Ch] +
sub eax edi +
cmp eax edx +
jnb loc_45561B  +
mov eax dword_4836EC +
lea edx [eax+eax*8] +
lea edx [eax+edx*2] +
mov eax [ebp-7Ch] +
mov [ebp-50h] edx +
cmp eax edx +
ja loc_454E66  +
mov [ebp-0ACh] ecx +
mov ecx eax +
mov [ebp-7Ch] ebx +
lea eax ds:1Eh[ecx*8] +
mov ebx 10h +
xor edx edx +
div  ebx +
shl eax 4 +
call sub_470810  +
mov ebx [ebp-4Ch] +
sub esp eax +
lea eax [esp+arg_17] +
and eax 0FFFFFFF0h +
lea edx ds:0[ecx*4] +
mov [esp+arg_4] edx +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
mov [ebp-0B0h] ecx +
call memcpy  +
test eax eax +
mov [ebp-4Ch] eax +
jz loc_454E66  +
mov ecx [ebp-0B0h] +
add ecx ecx +
mov eax ecx +
sub eax edi +
cmp eax [ebp-2Ch] +
jnb loc_45560F  +
cmp ecx [ebp-50h] +
jbe loc_454E04  +
***
lea esp [ebp-0Ch] +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp-38h] +
add eax 3 +
cmp [ebp-44h] eax +
mov [ebp-2Ch] eax +
jbe loc_454FB0  +
mov ecx [ebp-38h] +
mov edx ecx +
add edx 4 +
mov [ebp-1Ch] edx +
movzx edx byte ptr [ecx+3] +
cmp dl 13h +
ja loc_454D0A  +
cmp dl 11h +
jnb loc_454EAB  +
cmp dl 0Dh +
jnz loc_454FB0  +
mov eax [ebp-38h] +
movsx edx byte ptr [eax+5] +
movzx ecx byte ptr [eax+4] +
shl edx 8 +
add ecx edx +
mov edx eax +
add edx 6 +
jmp loc_454D28  +
***
mov edi [ebp+8] +
mov [ebp-64h] eax +
mov edx [ebp-64h] +
mov eax [ebp-38h] +
sub edx edi +
sub eax ecx +
cmp edx eax +
cmovle eax edx +
test ebx ebx +
mov esi eax +
mov [ebp-3Ch] eax +
jz loc_455283  +
test eax eax +
jz loc_454F2F  +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [edi] +
movzx eax byte ptr [ebx+eax] +
cmp [ebx+edx] al +
jnz loc_455107  +
mov eax esi +
sub eax 1 +
mov [ebp-2Ch] eax +
xor eax eax +
jmp loc_454F2A  +
movzx edx byte ptr [ecx+eax+1] +
movzx esi byte ptr [edi+eax+1] +
add eax 1 +
movzx edx byte ptr [ebx+edx] +
cmp [ebx+esi] dl +
jnz loc_455107  +
cmp eax [ebp-2Ch] +
jnz loc_454F10  +
xor eax eax +
test al al +
jnz loc_45568A  +
mov eax [ebp-3Ch] +
add edi eax +
add ecx eax +
mov eax [ebp-50h] +
test eax eax +
jnz loc_454187  +
mov esi [ebp-40h] +
mov edx [ebp-30h] +
cmp edx esi +
ja loc_454F68  +
mov eax [ebp-0BCh] +
add edx 1 +
or byte ptr [eax] 18h +
add eax 4 +
cmp esi edx +
jnb loc_454F5B  +
mov dword ptr [ebp-50h] 1 +
jmp loc_454187  +
***
mov esi [ebp-2Ch] +
cmp al 6 +
jnz loc_453F0B  +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx+2] +
add edx eax +
mov [ebp-40h] edx +
mov edx [ebp-30h] +
cmp edx 101h +
cmovnz eax edx +
mov [ebp-30h] eax +
jmp loc_453F0B  +
***
cmp ebx [ebp-2Ch] +
jbe loc_453F52  +
jmp loc_454E66  +
***
mov eax [ebp-2Ch] +
mov dword ptr [ebp-50h] 0 +
mov [ebp-38h] eax +
jmp loc_4537A0  +
***
cmp [ebp-2Ch] ebx +
jnb loc_45482D  +
jmp loc_454E66  +
***
cmp ebx [ebp-38h] +
jbe loc_453CB1  +
lea esi [esi+0] +
jmp loc_454E66  +
***
cmp ebx [ebp-38h] +
jbe loc_453DCF  +
nop   +
jmp loc_454E66  +
***
mov esi [ebp-40h] +
mov [ebp-2Ch] cl +
mov [ebp-40h] edx +
jmp loc_45425B  +
mov eax [ebp-38h] +
mov dword ptr [ebp-40h] 100h +
mov dword ptr [ebp-30h] 101h +
movzx eax byte ptr [eax+1] +
mov [ebp-2Ch] al +
jmp loc_45425B  +
***
mov edx [ebp-6Ch] +
cmp edx esi +
jz loc_4556AF  +
mov esi [ebp+8] +
mov [ebp-64h] edx +
mov eax esi +
jmp loc_4545A0  +
***
mov eax 0FFFFFFFFh +
jmp loc_453BC2  +
***
cmp [ebp-6Ch] ecx +
jz loc_455260  +
mov eax [ebp-0C0h] +
mov eax [eax] +
cmp ecx eax +
mov [ebp-38h] eax +
jz loc_455260  +
mov ecx [ebp+8] +
jmp loc_454187  +
***
mov eax [ebp-88h] +
test byte ptr [eax+1Ch] 40h +
jz sub_4539F1  +
mov eax [ebp-84h] +
jmp loc_454331  +
***
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
jmp loc_454331  +
***
mov edx [ebp-0A8h] +
add edx 2 +
cmp eax edx +
jnb loc_453A8F  +
mov eax [ebp+14h] +
mov [eax] edx +
mov eax [eax+4] +
shl edx 2 +
mov [esp+4] edx +
mov [esp] eax +
call realloc  +
mov edi [ebp+14h] +
mov [edi+4] eax +
mov eax [edi+8] +
mov edi [edi] +
mov [esp] eax +
lea edx ds:0[edi*4] +
mov [esp+4] edx +
mov [ebp-2Ch] edi +
call realloc  +
mov edi [ebp+14h] +
mov edx [edi+4] +
mov [edi+8] eax +
test edx edx +
jz loc_454E66  +
test eax eax +
jz loc_454E66  +
mov eax [edi] +
jmp loc_453A8F  +
***
mov eax 1 +
jmp loc_454F31  +
***
mov eax [ebp+8] +
movzx edx byte ptr [eax] +
jmp loc_454708  +
***
movzx edx byte ptr [ecx+3] +
cmp dl 2 +
jz loc_45521F  +
cmp dl 5 +
jz loc_455587  +
cmp dl 4 +
jnz loc_45388A  +
movzx edx byte ptr [eax+1] +
test edx edx +
mov [ebp-0B0h] edx +
jz loc_453BDA  +
movzx edx byte ptr [ecx+4] +
test edx edx +
mov [ebp-0ACh] edx +
jz loc_455600  +
movzx edx byte ptr [eax+2] +
test [ecx+5] dl +
jnz loc_455600  +
mov edx [ebp-0B0h] +
mov [ebp-0C4h] ebx +
sub edx 1 +
mov [ebp-0BCh] edx +
mov edx [ebp-0ACh] +
sub edx 1 +
mov [ebp-0C0h] edx +
xor edx edx +
cmp edx [ebp-0BCh] +
lea ebx [edx+1] +
mov [ebp-0B8h] ebx +
mov [ebp-0B4h] ebx +
jz loc_45553D  +
cmp edx [ebp-0C0h] +
jz loc_45553D  +
movzx ebx byte ptr [eax+edx+3] +
test [ecx+edx+6] bl +
jnz loc_45553D  +
mov edx [ebp-0B8h] +
jmp loc_455192  +
***
mov eax [ebp+8] +
cmp byte ptr [eax] 0Ah +
setz al  +
jmp loc_4547AF  +
***
mov ecx [ebp-34h] +
lea eax [ebp-1Ch] +
mov edx [ebp-44h] +
call sub_4530D0  +
mov ecx [ebp-2Ch] +
movzx edx byte ptr [ecx] +
and eax 3 +
and edx 0FFFFFFFCh +
or edx eax +
mov eax [ebp-38h] +
mov [ecx] dl +
mov edx [ebp-34h] +
movzx eax byte ptr [eax+1] +
shl eax 2 +
add edx eax +
mov [ebp-2Ch] edx +
jmp loc_4542B3  +
***
mov eax [ebp-68h] +
movzx edx byte ptr [eax-1] +
jmp loc_454708  +
***
movzx edx byte ptr [ecx+5] +
movzx ecx byte ptr [eax+1] +
mov [ebp-0ACh] dl +
shl ecx 3 +
cmp ecx edx +
jle loc_453BDA  +
movzx ecx byte ptr [ebp-0ACh] +
mov edx ecx +
shr dl 3 +
movzx edx dl +
movzx edx byte ptr [eax+edx+2] +
mov eax ecx +
and eax 7 +
bt edx eax +
jb loc_45388A  +
jmp loc_453BDA  +
***
mov eax [ebp-0B8h] +
mov [ebp-3Ch] edi +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov [ebp-38h] eax +
jmp loc_4537A0  +
***
mov eax [ebp-3Ch] +
mov [esp+4] ecx +
mov [esp] edi +
mov [ebp-2Ch] ecx +
mov [esp+8] eax +
call memcmp  +
mov ecx [ebp-2Ch] +
test eax eax +
setnz al  +
jmp loc_454F31  +
***
mov byte ptr [ebp-0ACh] 0Ah +
jmp loc_454B96  +
***
test al al +
jnz sub_453A5C  +
mov edi [ebp-80h] +
test edi edi +
jz sub_453A5C  +
mov eax [ebp-74h] +
mov [ebp-3Ch] eax +
jmp loc_453A13  +
***
mov edi [ebp-0ACh] +
mov dword ptr [ebp-50h] 0 +
jmp sub_4538A0  +
***
mov edx [ebp-38h] +
jmp loc_454F77  +
***
mov eax esi +
mov esi [ebp-0ACh] +
jmp loc_454331  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454979  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454979  +
***
mov eax [ebp-3Ch] +
cmp eax [ebp-68h] +
jz loc_455366  +
cmp eax [ebp-98h] +
jz loc_45536E  +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
jnz loc_454331  +
mov ecx [ebp-50h] +
test ecx ecx +
jnz loc_4539EB  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_4539E4  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_455353  +
jmp loc_4539E4  +
***
mov edx [ebp+8] +
movzx edx byte ptr [edx] +
jmp loc_455321  +
***
mov edx [ebp-68h] +
movzx edx byte ptr [edx-1] +
jmp loc_455321  +
***
mov eax [ebp-3Ch] +
cmp eax [ebp-68h] +
jz loc_4553D3  +
cmp eax [ebp-98h] +
jz loc_4554AB  +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
jz loc_454331  +
mov edx [ebp-50h] +
test edx edx +
jnz loc_4539EB  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_4539E4  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_4553C0  +
jmp loc_4539E4  +
***
mov edx [ebp+8] +
movzx edx byte ptr [edx] +
jmp loc_45538E  +
***
mov eax [ebp-3Ch] +
mov ecx [ebp-8Ch] +
test ecx ecx +
jz loc_4554A0  +
movzx edx byte ptr [eax] +
movzx edx byte ptr [ecx+edx] +
mov [ebp-3Ch] dl +
mov edx [ebp-38h] +
movzx ecx byte ptr [ebp-3Ch] +
movzx edx byte ptr [edx+1] +
mov [ebp-0B4h] edx +
shl edx 3 +
cmp ecx edx +
jnb loc_455446  +
movzx edx byte ptr [ebp-3Ch] +
mov ecx [ebp-2Ch] +
shr dl 3 +
movzx edx dl +
movzx edx byte ptr [ecx+edx+1] +
movzx ecx byte ptr [ebp-3Ch] +
and ecx 7 +
sar edx cl +
movzx ecx byte ptr [ebp-0B0h] +
xor ecx 1 +
and edx 1 +
movzx edx byte ptr [ebp-0B0h] +
cmovnz edx ecx +
mov [ebp-0ACh] dl +
cmp byte ptr [ebp-0ACh] 0 +
jz loc_454331  +
mov ecx [ebp-50h] +
test ecx ecx +
jnz loc_455485  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_45547E  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_455470  +
mov dword ptr [ebp-50h] 1 +
mov edx [ebp-2Ch] +
add eax 1 +
mov ecx [ebp-0B4h] +
mov [ebp-3Ch] eax +
lea edx [edx+ecx+1] +
mov [ebp-38h] edx +
jmp loc_4537A0  +
***
movzx edx byte ptr [eax] +
mov [ebp-3Ch] dl +
jmp loc_4553F6  +
***
mov edx [ebp-68h] +
movzx edx byte ptr [edx-1] +
jmp loc_45538E  +
***
mov [ebp-40h] edx +
jmp loc_45425B  +
***
test byte ptr [ebp-38h] 80h +
jz loc_4539B9  +
mov ecx [ebp-8Ch] +
test ecx ecx +
jz loc_4554F0  +
movzx edx byte ptr [eax] +
movzx ecx byte ptr [ecx+edx] +
jmp loc_4539B1  +
movzx ecx byte ptr [eax] +
cmp cl 0Ah +
jnz loc_4539AB  +
jmp loc_454331  +
movzx ecx byte ptr [eax] +
jmp loc_4539B1  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_45446B  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_45446B  +
***
mov eax [ebp-68h] +
movzx edx byte ptr [eax-1] +
jmp loc_454681  +
mov eax [ebp+8] +
movzx edx byte ptr [eax] +
jmp loc_454681  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454496  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454496  +
***
mov eax [ebp-0B8h] +
cmp [ebp-0B0h] eax +
mov ebx [ebp-0C4h] +
jz loc_453BDA  +
mov eax [ebp-0B4h] +
cmp [ebp-0ACh] eax +
jnz loc_45388A  +
jmp loc_453BDA  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_45494E  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_45494E  +
***
movzx edx byte ptr [eax+1] +
test edx edx +
mov [ebp-0ACh] edx +
jz loc_453BDA  +
xor edx edx +
mov [ebp-0B0h] esi +
mov [ebp-0B4h] ebx +
mov [ebp-0B8h] eax +
jmp loc_4555CA  +
movzx ebx byte ptr [ecx+edx+5] +
mov eax esi +
movzx esi al +
not ebx  +
test esi ebx +
jnz loc_4555E3  +
add edx 1 +
cmp edx [ebp-0ACh] +
jge loc_4555E3  +
mov eax [ebp-0B8h] +
movzx esi byte ptr [eax+edx+2] +
mov ebx esi +
test bl bl +
jz loc_4555BF  +
movzx ebx byte ptr [ecx+4] +
cmp ebx edx +
jg loc_4555AF  +
cmp edx [ebp-0ACh] +
mov esi [ebp-0B0h] +
mov ebx [ebp-0B4h] +
jnz loc_45388A  +
jmp loc_453BDA  +
mov dword ptr [ebp-0B4h] 0 +
jmp loc_455555  +
***
mov ebx [ebp-7Ch] +
mov [ebp-7Ch] ecx +
mov ecx [ebp-0ACh] +
mov edx [ebp-40h] +
mov eax [ebp-30h] +
cmp eax edx +
ja loc_4556C0  +
mov edx [ebp-4Ch] +
lea edx [edx+edi*4] +
mov ecx [esi+eax*4] +
add edi 3 +
add edx 0Ch +
mov [edx-0Ch] ecx +
mov ecx [ebx+eax*4] +
mov [edx-8] ecx +
mov ecx [ebp-34h] +
mov ecx [ecx+eax*4] +
add eax 1 +
mov [edx-4] ecx +
cmp [ebp-40h] eax +
jnb loc_45562F  +
mov eax [ebp-1Ch] +
mov [ebp-2Ch] eax +
mov edx [ebp-4Ch] +
lea eax ds:0[edi*4] +
mov ecx [ebp-30h] +
mov [edx+edi*4] ecx +
mov ecx [ebp-40h] +
add edi 4 +
mov [edx+eax+4] ecx +
mov ecx [ebp-2Ch] +
add ecx [ebp-38h] +
mov [edx+eax+8] ecx +
mov ecx [ebp-3Ch] +
mov [edx+eax+0Ch] ecx +
mov eax ecx +
jmp loc_454331  +
***
mov eax edi +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
jmp loc_454331  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_4546BF  +
***
mov edx [ebp-6Ch] +
mov esi [ebp-0ACh] +
mov [ebp-64h] edx +
jmp loc_454331  +
***
mov [ebp-2Ch] ecx +
jmp loc_455658  +
***
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_4546BF  +
***
mov edx [ebp-6Ch] +
mov [ebp-64h] edx +
jmp loc_454331  +
***
push edi  +
mov eax ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+10h] +
mov [esp+58h+var_2C] edx +
mov edx [ebp+14h] +
add eax [esp+58h+arg_4] +
mov ebx [esp+58h+arg_8] +
mov esi [esp+58h+arg_C] +
mov [esp+58h+var_24] edx +
mov edx eax +
mov [esp+58h+var_38] eax +
cmp ebx edx +
mov [esp+58h+var_34] ecx +
lea eax [ebx+esi] +
jg loc_455946  +
mov edx ebx +
shr edx 1Fh +
test dl dl +
jnz loc_455946  +
test eax eax +
js loc_4559D0  +
mov ecx [esp+58h+var_38] +
mov edx ecx +
sub edx ebx +
cmp ecx eax +
mov eax [ebp+8] +
cmovl esi edx +
test eax eax +
jnz loc_455914  +
test edi edi +
jz loc_455755  +
test byte ptr [ebp+1Ch] 8 +
jz loc_4559B0  +
test edi edi +
mov eax [esp+58h+arg_0] +
setnz [esp+58h+var_2D]  +
sub eax [esp+58h+var_34] +
mov [esp+58h+var_1C] eax +
cmp ebx [esp+58h+var_38] +
jge loc_455830  +
cmp [esp+58h+var_2D] 0 +
jz loc_455830  +
test byte ptr [ebp+1Ch] 1 +
jnz loc_455830  +
test esi esi +
jle loc_4558A5  +
cmp ebx [esp+58h+var_34] +
jge loc_4558F0  +
lea eax [ebx+esi] +
cmp [esp+58h+var_34] eax +
mov [esp+58h+var_28] 0 +
jg loc_4557B6  +
mov eax ebx +
sub eax [esp+58h+var_34] +
add eax esi +
mov [esp+58h+var_28] eax +
mov eax [esp+58h+var_2C] +
mov edx [esp+58h+var_24] +
add eax ebx +
test edx edx +
jz loc_455960  +
cmp esi [esp+58h+var_28] +
jle loc_4559E0  +
lea edx [eax+1] +
mov ecx [esp+58h+var_24] +
movzx eax byte ptr [eax] +
movzx eax byte ptr [ecx+eax] +
cmp byte ptr [edi+eax] 0 +
jnz loc_4559E0  +
mov [esp+58h+var_20] ebp +
mov eax esi +
mov ebp ecx +
mov [esp+58h+arg_8] ebx +
mov ebx [esp+58h+var_28] +
jmp loc_455812  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
movzx ecx byte ptr [ebp+ecx+0] +
cmp byte ptr [edi+ecx] 0 +
jnz loc_455819  +
sub eax 1 +
cmp eax ebx +
jnz loc_455800  +
mov ebp [esp+58h+var_20] +
sub esi eax +
mov ebx [esp+58h+arg_8] +
mov edx esi +
mov esi eax +
add ebx edx +
lea esi [esi+0] +
test esi esi +
js loc_45584B  +
cmp ebx [esp+58h+var_38] +
jnz loc_45584B  +
cmp [esp+58h+var_2D] 0 +
jz loc_45584B  +
test byte ptr [ebp+1Ch] 1 +
jz loc_455946  +
mov eax [esp+58h+arg_14] +
mov ecx [esp+58h+var_34] +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_50] ebx +
mov [esp+58h+var_48] eax +
mov eax [esp+58h+arg_10] +
mov [esp+58h+var_4C] eax +
mov eax [esp+58h+arg_4] +
mov [esp+58h+var_54] eax +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_4535D0  +
test eax eax +
jns loc_4559A3  +
cmp eax 0FFFFFFFEh +
jz loc_4559C0  +
cmp esi 0 +
jz loc_455946  +
jle loc_4558E0  +
sub esi 1 +
add ebx 1 +
nop   +
jmp loc_455768  +
cmp ebx [esp+58h+var_34] +
jge loc_4558B7  +
mov eax [esp+58h+var_34] +
test eax eax +
jnz loc_455953  +
mov edx [esp+58h+arg_0] +
mov eax ebx +
sub eax [esp+58h+var_34] +
movzx eax byte ptr [edx+eax] +
mov edx [esp+58h+var_24] +
test edx edx +
jz loc_4558D1  +
movzx eax byte ptr [edx+eax] +
cmp byte ptr [edi+eax] 0 +
jnz loc_455830  +
test esi esi +
jz loc_455946  +
nop   +
add esi 1 +
sub ebx 1 +
jmp loc_455768  +
mov eax [esp+58h+var_1C] +
mov ecx [esp+58h+var_24] +
mov [esp+58h+var_28] 0 +
add eax ebx +
test ecx ecx +
jnz loc_4557D2  +
mov edx [esp+58h+var_24] +
mov [esp+58h+var_28] edx +
jmp loc_455966  +
test esi esi +
jle loc_455747  +
mov eax [ebp+0] +
movzx eax byte ptr [eax] +
cmp al 0Bh +
jz loc_455938  +
cmp al 9 +
jnz loc_455747  +
cmp byte ptr [ebp+1Ch] 0 +
js loc_455747  +
test ebx ebx +
jnz loc_455946  +
mov esi 1 +
jmp loc_455747  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_2C] +
movzx eax byte ptr [eax+ebx] +
jmp loc_4558C5  +
cmp esi [esp+58h+var_28] +
jle loc_4559E0  +
movzx ecx byte ptr [eax] +
lea edx [eax+1] +
mov eax esi +
cmp byte ptr [edi+ecx] 0 +
jnz loc_4559E0  +
mov [esp+58h+var_20] ebp +
mov ebp [esp+58h+var_28] +
jmp loc_45598D  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp byte ptr [edi+ecx] 0 +
jnz loc_455994  +
sub eax 1 +
cmp eax ebp +
jnz loc_455980  +
sub esi eax +
mov ebp [esp+58h+var_20] +
mov edx esi +
mov esi eax +
jmp loc_455827  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_4531F0  +
cmp eax 0FFFFFFFEh +
jnz loc_455755  +
add esp 4Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ebx +
neg esi  +
jmp loc_455747  +
xor edx edx +
jmp loc_455827  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 12Ch +
mov ebp [esp+12Ch+arg_0] +
mov [esp+12Ch+var_104] eax +
mov [esp+12Ch+var_90] eax +
mov [esp+12Ch+var_118] ecx +
mov eax [ebp+14h] +
mov [esp+12Ch+var_12C] 280h +
mov [esp+12Ch+var_114] eax +
call malloc  +
test eax eax +
mov [esp+12Ch+var_FC] eax +
jz loc_455B00  +
mov eax [esp+12Ch+var_118] +
and byte ptr [ebp+1Ch] 97h +
mov dword ptr [ebp+8] 0 +
mov [ebp+0Ch] eax +
mov eax ds:dword_4D93C0 +
mov dword ptr [ebp+18h] 0 +
test eax eax +
jz loc_455B47  +
mov eax [ebp+4] +
test eax eax +
jz loc_455B10  +
mov ecx [esp+12Ch+var_104] +
mov edi [ebp+0] +
mov esi [esp+12Ch+var_118] +
add ebx [esp+12Ch+var_104] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_F4] 0 +
mov eax esi +
and eax 2 +
mov [esp+12Ch+var_F8] eax +
mov eax esi +
mov [esp+12Ch+var_110] ebx +
and eax 200h +
xor ebx ebx +
mov [esp+12Ch+var_EC] 20h +
mov [esp+12Ch+var_F0] 0 +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
mov [esp+12Ch+var_E8] eax +
mov [esp+12Ch+var_10C] ebx +
cmp [esp+12Ch+var_110] ecx +
jz loc_456D6C  +
mov eax [esp+12Ch+var_114] +
lea edx [ecx+1] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [ecx] +
test eax eax +
jz loc_455ADE  +
movzx ebx byte ptr [eax+ebx] +
lea eax [ebx-0Ah] +
cmp al 72h +
ja loc_455BE5  +
movzx eax al +
jmp ds:off_4D0A14[eax*4]  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
nop   +
mov eax 0Ch +
add esp 12Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
test eax eax +
jz loc_456B68  +
mov [esp+12Ch+var_128] 20h +
mov [esp+12Ch+var_12C] eax +
call realloc  +
mov [ebp+0] eax +
test eax eax +
jz loc_455AF3  +
mov dword ptr [ebp+4] 20h +
mov ecx [esp+12Ch+var_90] +
mov edi eax +
jmp loc_455A69  +
mov esi ds:isalnum +
mov edx offset byte_4D9420 +
mov ecx 40h +
xor eax eax +
mov edi edx +
stos   +
xor edi edi +
nop   +
mov [esp+12Ch+var_12C] edi +
call esi  +
test eax eax +
jz loc_455B70  +
mov ds:byte_4D9420[edi] 1 +
add edi 1 +
cmp edi 100h +
jnz loc_455B60  +
mov ds:byte_4D947F 1 +
mov eax [ebp+4] +
mov ds:dword_4D93C0 1 +
test eax eax +
jz loc_455B10  +
jmp loc_455A62  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_10C] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov eax edi +
add edi 1 +
sub eax ebx +
sub eax 3 +
mov byte ptr [edi-1] 14h +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_4573A6  +
test [esp+12Ch+var_118] 20000h +
jz loc_4565A3  +
mov ebx 29h +
mov esi [esp+12Ch+var_100] +
test esi esi +
jz loc_455BFF  +
movzx eax byte ptr [esi] +
movzx edx al +
lea esi [esi+edx+1] +
cmp esi edi +
jz loc_456B7C  +
mov byte ptr [esp+12Ch+var_108] bl +
mov edx edi +
mov ebx edi +
mov esi [ebp+0] +
mov edi [esp+12Ch+var_10C] +
nop   +
mov eax [ebp+4] +
mov ecx edx +
sub ecx esi +
add ecx 2 +
cmp ecx eax +
jbe loc_455DD9  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_455C75  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] esi +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax esi +
mov edx [esp+12Ch+var_11C] +
jz loc_455C71  +
mov ecx eax +
sub ecx esi +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea esi [edi+ecx] +
cmovnz edi esi +
add ecx ebx +
test ebx ebx +
cmovnz ebx ecx +
mov esi eax +
jmp loc_455C10  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_455C35  +
add esp 12Ch +
mov eax 0Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test [esp+12Ch+var_118] 402h +
jnz loc_455BE5  +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_456E44  +
mov eax [esp+12Ch+var_90] +
xor ecx ecx +
xor esi esi +
mov [esp+12Ch+var_108] edi +
lea esi [esi+0] +
cmp bl 2Bh +
setnz dl  +
or esi edx +
cmp bl 3Fh +
setnz dl  +
or ecx edx +
cmp [esp+12Ch+var_110] eax +
jz loc_456D63  +
mov edi [esp+12Ch+var_114] +
lea edx [eax+1] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [eax] +
test edi edi +
jz loc_455CF3  +
movzx ebx byte ptr [edi+ebx] +
cmp bl 2Ah +
jz loc_455D2E  +
mov edi [esp+12Ch+var_F8] +
test edi edi +
jz loc_455D29  +
cmp bl 5Ch +
jnz loc_455D37  +
cmp [esp+12Ch+var_110] edx +
jz loc_45736F  +
mov edi [esp+12Ch+var_114] +
lea edx [eax+2] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [eax+1] +
test edi edi +
jz loc_455D29  +
movzx ebx byte ptr [edi+ebx] +
cmp bl 3Fh +
jnz loc_455D32  +
mov eax edx +
jmp loc_455CC0  +
cmp bl 2Bh +
jz loc_455D2E  +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_90] eax +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_4564AF  +
test cl cl +
jz loc_456BDB  +
mov eax esi +
mov edx edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov esi [esp+12Ch+var_11C] +
mov byte ptr [esp+12Ch+var_108] al +
mov eax [ebp+4] +
mov ecx edx +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_4571EF  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B46  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
mov edx [esp+12Ch+var_11C] +
jz loc_455DD5  +
mov ecx eax +
sub ecx ebx +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ebx [edi+ecx] +
cmovnz edi ebx +
add ecx esi +
test esi esi +
cmovnz esi ecx +
mov ebx eax +
jmp loc_455D69  +
mov [esp+12Ch+var_11C] ebx +
movzx ebx byte ptr [esp+12Ch+var_108] +
lea eax [edx+1] +
mov [esp+12Ch+var_10C] edi +
lea esi [edx+2] +
mov byte ptr [edx] 2 +
mov byte ptr [edx+1] 0 +
mov [esp+12Ch+var_100] eax +
mov edi [ebp+0] +
mov byte ptr [esp+12Ch+var_E4] bl +
mov ebx [esp+12Ch+var_100] +
mov [esp+12Ch+var_108] esi +
mov esi [esp+12Ch+var_11C] +
mov edx edi +
mov edi [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_456490  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_455E87  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_455E83  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ecx [edi+ecx] +
cmovnz edi ecx +
test esi esi +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovnz ebx edx +
mov edx eax +
jmp loc_455E10  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_455E3B  +
test [esp+12Ch+var_118] 2000h +
jz loc_455BE5  +
mov eax [esp+12Ch+var_10C] +
test eax eax +
jz loc_455BC6  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_10C] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx eax +
mov ecx [esp+12Ch+var_10C] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_455B9C  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B35  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_455F3C  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_10C] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_455EC2  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov [esp+12Ch+var_108] edi +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_456CAA  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456AE0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_455FC8  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_455F51  +
cmp [esp+12Ch+var_110] edx +
jz loc_457845  +
mov ecx edi +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_10C] +
mov edx [ebp+4] +
mov eax ecx +
sub eax ebx +
add eax 22h +
cmp eax edx +
jbe loc_456CCC  +
cmp edx 10000h +
jz loc_455C83  +
add edx edx +
cmp edx 10000h +
ja loc_456AF1  +
mov [ebp+4] edx +
mov [esp+12Ch+var_128] edx +
mov [esp+12Ch+var_12C] ebx +
mov [esp+12Ch+var_11C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
mov ecx [esp+12Ch+var_11C] +
jz loc_45604E  +
mov edx eax +
sub edx ebx +
add ecx edx +
add [esp+12Ch+var_120] edx +
test edi edi +
lea ebx [edi+edx] +
cmovnz edi ebx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov ebx eax +
jmp loc_455FE3  +
cmp [esp+12Ch+var_110] edx +
jz loc_45736F  +
lea edx [ecx+2] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-27h] +
cmp al 55h +
ja loc_4564D4  +
movzx eax al +
jmp ds:off_4D0BE0[eax*4]  +
mov eax [esp+12Ch+var_104] +
add eax 1 +
cmp edx eax +
jz loc_4560CB  +
test byte ptr [esp+12Ch+var_118] 8 +
jnz loc_4560CB  +
lea edx [ecx-1] +
xor eax eax +
cmp [esp+12Ch+var_104] edx +
jnb loc_4560A3  +
cmp byte ptr [ecx-2] 5Ch +
setz al  +
movzx edx byte ptr [ecx-1] +
cmp dl 28h +
jz loc_45735C  +
cmp dl 7Ch +
jnz loc_455BE5  +
test [esp+12Ch+var_118] 8000h +
jnz loc_4560CB  +
test al al +
jz loc_455BE5  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_108] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_456E22  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B13  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_45615A  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_4560E0  +
test [esp+12Ch+var_118] 8000h +
jz loc_455BE5  +
mov ebx 7Ch +
test [esp+12Ch+var_118] 400h +
jnz loc_455BE5  +
mov esi edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx esi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_456F0D  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B24  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_4561E4  +
mov ecx eax +
sub ecx ebx +
add esi ecx +
add [esp+12Ch+var_120] ecx +
add ecx edi +
test edi edi +
cmovnz edi ecx +
mov ebx eax +
jmp loc_456188  +
test [esp+12Ch+var_118] 800h +
jnz loc_456171  +
jmp loc_455BE5  +
cmp [esp+12Ch+var_110] edx +
jz loc_456245  +
mov esi [esp+12Ch+var_118] +
and esi 8 +
jnz loc_456245  +
movzx eax byte ptr [ecx+1] +
cmp al 5Ch +
setz dl  +
add ecx 2 +
cmp [esp+12Ch+var_110] ecx +
cmovbe ecx esi +
test [esp+12Ch+var_118] 2000h +
jz loc_456E5F  +
cmp al 29h +
jz loc_456245  +
test [esp+12Ch+var_118] 8000h +
jz loc_457247  +
cmp al 7Ch +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_108] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
lea esi [esi+0] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_456E00  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B02  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_4562D7  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_456260  +
test [esp+12Ch+var_118] 2000h +
jz loc_455BE5  +
mov eax [esp+12Ch+var_EC] +
add dword ptr [ebp+18h] 1 +
add [esp+12Ch+var_F0] 1 +
cmp [esp+12Ch+var_F4] eax +
jz loc_4574D8  +
mov eax [esp+12Ch+var_F4] +
mov ebx [esp+12Ch+var_FC] +
mov edx [esp+12Ch+var_120] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
mov ebx [ebp+0] +
sub edx ebx +
mov [eax] edx +
mov edx [esp+12Ch+var_10C] +
test edx edx +
jz loc_457487  +
sub edx ebx +
add edx 1 +
mov esi [esp+12Ch+var_F0] +
mov [eax+4] edx +
mov edx edi +
sub edx ebx +
mov [eax+0Ch] edx +
cmp esi 0FFh +
mov [eax+10h] esi +
ja loc_456C7D  +
add edx 2 +
mov [eax+8] edx +
mov eax [ebp+4] +
mov edx edi +
sub edx ebx +
add edx 3 +
cmp edx eax +
jbe loc_456C6A  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456B57  +
mov [ebp+4] eax +
mov edx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_45639E  +
mov edx eax +
sub edx ebx +
add edi edx +
mov ebx eax +
jmp loc_45634D  +
mov eax [esp+12Ch+var_118] +
and eax 1200h +
cmp eax 1200h +
jnz loc_455BE5  +
mov [esp+12Ch+var_E4] edx +
mov eax [esp+12Ch+var_E4] +
cmp [esp+12Ch+var_110] eax +
jz loc_456E85  +
mov edx [esp+12Ch+var_E4] +
mov esi 0FFFFFFFFh +
mov ecx [esp+12Ch+var_114] +
jmp loc_4563FC  +
cmp esi 7FFFh +
jg loc_4563F2  +
xor ebx ebx +
cmp esi 0FFFFFFFFh +
jz loc_4563EB  +
lea ebx [esi+esi*4] +
add ebx ebx +
movzx esi al +
lea esi [ebx+esi-30h] +
cmp [esp+12Ch+var_110] edx +
jz loc_4570EE  +
add edx 1 +
test ecx ecx +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
jz loc_456412  +
movzx eax byte ptr [ecx+eax] +
lea ebx [eax-30h] +
cmp bl 9 +
jbe loc_4563D7  +
cmp al 2Ch +
mov ebx 0FFFFFFFFh +
jnz loc_4570EE  +
cmp edx [esp+12Ch+var_110] +
jz loc_456470  +
mov ecx [esp+12Ch+var_114] +
add edx 1 +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
test ecx ecx +
jz loc_456447  +
movzx eax byte ptr [ecx+eax] +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_456470  +
cmp ebx 7FFFh +
jg loc_456427  +
xor ecx ecx +
cmp ebx 0FFFFFFFFh +
jz loc_456463  +
lea ecx [ebx+ebx*4] +
add ecx ecx +
cmp edx [esp+12Ch+var_110] +
movzx ebx al +
lea ebx [ecx+ebx-30h] +
jnz loc_45642D  +
cmp ebx 0FFFFFFFFh +
jz loc_4577C3  +
cmp ebx esi +
mov [esp+12Ch+var_108] esi +
setl cl  +
mov esi ebx +
jmp loc_4570F4  +
mov eax ebx +
mov [esp+12Ch+var_100] ebx +
movzx ebx byte ptr [esp+12Ch+var_E4] +
mov [esp+12Ch+var_11C] esi +
mov esi [esp+12Ch+var_108] +
mov [esp+12Ch+var_10C] edi +
mov [esi] bl +
lea edi [esi+1] +
add byte ptr [eax] 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
mov eax [esp+12Ch+var_118] +
and eax 1200h +
cmp eax 200h +
jz loc_4563B6  +
mov ebx 7Bh +
mov eax [esp+12Ch+var_114] +
test eax eax +
jz loc_455BE5  +
movzx ebx byte ptr [eax+ebx] +
jmp loc_455BE5  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_45791A  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456EDA  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456577  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_4564FE  +
test [esp+12Ch+var_118] 2000h +
jnz loc_4564D4  +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_455EA3  +
test [esp+12Ch+var_118] 20000h +
jnz loc_4564D4  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 10h +
jmp loc_455B05  +
test [esp+12Ch+var_118] 2000h +
jnz loc_4564D4  +
jmp loc_4562E9  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457871  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456FCD  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456661  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_4565E8  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_4578C2  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456EB8  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_4566F3  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_45667A  +
test [esp+12Ch+var_118] 4000h +
jnz loc_455BE5  +
lea esi [ebx-30h] +
mov eax esi +
movzx ecx al +
cmp [esp+12Ch+var_F0] ecx +
jb loc_457809  +
mov eax [esp+12Ch+var_F4] +
sub eax 1 +
js loc_456753  +
lea edx [eax+eax*4] +
mov [esp+12Ch+var_108] eax +
mov eax [esp+12Ch+var_FC] +
shl edx 2 +
cmp ecx [eax+edx+10h] +
jz loc_455BE5  +
lea edx [eax+edx+14h] +
mov eax [esp+12Ch+var_108] +
jmp loc_45674E  +
sub edx 14h +
cmp ecx [edx-4] +
jz loc_455BE5  +
sub eax 1 +
jns loc_456742  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_11C] edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 2 +
cmp ecx eax +
jbe loc_4577F1  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_4577E0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_4567DB  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ecx +
test ebx ebx +
lea ecx [ebx+edx] +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
mov [esp+12Ch+var_11C] ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_45675A  +
mov eax [esp+12Ch+var_F8] +
test eax eax +
jnz loc_455CA1  +
jmp loc_4564D4  +
test [esp+12Ch+var_118] 8400h +
jnz loc_4564D4  +
jmp loc_45616C  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457904  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456FEF  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456895  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456819  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_45785B  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456EFC  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456927  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_4568AE  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_4578D8  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456EEB  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_4569B9  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456940  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_4578EE  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456FDE  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456A49  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_4569D0  +
test [esp+12Ch+var_118] 80000h +
jnz loc_455BE5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_4578AC  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456EC9  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456ADB  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456A62  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_455F80  +
mov dword ptr [ebp+4] 10000h +
mov edx 10000h +
jmp loc_456012  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45628F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45610F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4561B5  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_455EF1  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_455D96  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45637A  +
mov [esp+12Ch+var_12C] 20h +
call malloc  +
mov [ebp+0] eax +
jmp loc_455B2E  +
cmp al 0FFh +
jz loc_455BFF  +
mov edx [esp+12Ch+var_90] +
movzx eax byte ptr [edx] +
cmp al 2Ah +
jz loc_455BFF  +
cmp al 5Eh +
jz loc_455BFF  +
mov edi [esp+12Ch+var_F8] +
test edi edi +
jz loc_457345  +
cmp al 5Ch +
jz loc_457566  +
mov ecx [esp+12Ch+var_E8] +
test ecx ecx +
jz loc_455DF7  +
test [esp+12Ch+var_118] 1000h +
jz loc_4576FA  +
cmp al 7Bh +
jnz loc_455DF7  +
mov edi esi +
jmp loc_455BFF  +
mov byte ptr [esp+12Ch+var_108] 0 +
mov eax esi +
mov edx edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov esi [esp+12Ch+var_11C] +
mov byte ptr [esp+12Ch+var_100] al +
mov eax [ebp+4] +
mov ecx edx +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_457016  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456C5C  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
mov edx [esp+12Ch+var_11C] +
jz loc_456C58  +
mov ecx eax +
sub ecx ebx +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ebx [edi+ecx] +
cmovnz edi ebx +
add ecx esi +
test esi esi +
cmovnz esi ecx +
mov ebx eax +
jmp loc_456BF3  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456C1C  +
movzx eax byte ptr [esp+12Ch+var_F0] +
add edi 3 +
mov byte ptr [edi-3] 6 +
mov byte ptr [edi-1] 0 +
mov [edi-2] al +
add [esp+12Ch+var_F4] 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_10C] 0 +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
jmp loc_455ABB  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 3 +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
mov [esp+12Ch+var_10C] edi +
mov edi esi +
mov esi ecx +
mov [esp+12Ch+var_11C] ecx +
mov ecx ebx +
mov ebx [esp+12Ch+var_10C] +
jmp loc_456D2E  +
mov [ebp+4] edx +
mov [esp+12Ch+var_128] edx +
mov [esp+12Ch+var_12C] ecx +
mov [esp+12Ch+var_10C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov ecx [esp+12Ch+var_10C] +
cmp eax ecx +
jz loc_456D29  +
mov edx eax +
sub edx ecx +
lea ecx [ebx+edx] +
add [esp+12Ch+var_11C] edx +
add [esp+12Ch+var_120] edx +
test ebx ebx +
cmovnz ebx ecx +
test esi esi +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx edi +
test edi edi +
cmovnz edi edx +
mov edx [ebp+4] +
mov ecx eax +
mov eax [esp+12Ch+var_11C] +
sub eax ecx +
add eax 1 +
cmp eax edx +
jbe loc_457265  +
cmp edx 10000h +
jz loc_455C83  +
add edx edx +
cmp edx 10000h +
jbe loc_456CE0  +
mov dword ptr [ebp+4] 10000h +
mov edx 10000h +
jmp loc_456CE3  +
mov edi [esp+12Ch+var_108] +
jmp loc_455D42  +
mov ebx [esp+12Ch+var_10C] +
test ebx ebx +
jz loc_456D87  +
mov eax edi +
sub eax ebx +
sub eax 3 +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_457000  +
test [esp+12Ch+var_118] 40000h +
jz loc_45738B  +
mov ebx [ebp+0] +
mov eax [ebp+4] +
mov edx edi +
sub edx ebx +
add edx 1 +
cmp edx eax +
jbe loc_457385  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456DF2  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456DEE  +
mov edx eax +
sub edx ebx +
add edi edx +
mov ebx eax +
jmp loc_456DA4  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456DCD  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 0Ah +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 9 +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
test byte ptr [esp+12Ch+var_118] 20h +
jnz loc_45793D  +
test byte ptr [esp+12Ch+var_118] 10h +
jz loc_455BE5  +
jmp loc_455CAD  +
test ecx ecx +
jz loc_45622F  +
test dl dl +
lea esi [esi+0] +
jz loc_45622F  +
cmp byte ptr [ecx] 29h +
jnz loc_45622F  +
nop   +
jmp loc_456245  +
mov ecx [esp+12Ch+var_118] +
test ecx 200000h +
jz loc_457887  +
and ecx 1000h +
mov eax [esp+12Ch+var_E4] +
test ecx ecx +
mov ebx 7Bh +
mov [esp+12Ch+var_90] eax +
jnz loc_455BE5  +
jmp loc_4564CF  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4566A7  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456A8F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45652B  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45696D  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4568DB  +
mov ebx [esp+12Ch+var_120] +
mov eax esi +
mov [esp+12Ch+var_10C] edi +
mov edi esi +
mov ecx [esp+12Ch+var_120] +
lea esi [esi+3] +
sub eax ebx +
cmp edi ebx +
lea edx [eax+3] +
jz loc_456F36  +
sub edi 1 +
movzx eax byte ptr [edi] +
cmp edi ecx +
mov [edi+3] al +
jnz loc_456F29  +
mov eax [esp+12Ch+var_120] +
mov [eax+1] dl +
sar edx 8 +
mov byte ptr [eax] 0Fh +
mov [eax+2] dl +
mov eax [esp+12Ch+var_10C] +
test eax eax +
jz loc_456F65  +
mov ebx [esp+12Ch+var_10C] +
mov eax esi +
sub eax ebx +
sub eax 3 +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov ebx [ebp+0] +
mov edi esi +
mov eax [ebp+4] +
mov edx esi +
sub edx ebx +
add edx 3 +
cmp edx eax +
jbe loc_45750B  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_456FBF  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_456FBB  +
mov edx eax +
sub edx ebx +
add esi edx +
add edx edi +
test edi edi +
cmovnz edi edx +
mov ebx eax +
jmp loc_456F6A  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456F93  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456615  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4569FD  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456846  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 8 +
jmp loc_455B05  +
mov ecx esi +
mov eax edx +
sub eax ecx +
cmp byte ptr [esp+12Ch+var_108] 1 +
mov [esp+12Ch+var_10C] edi +
lea ebx [edx+3] +
mov edi edx +
mov [esp+12Ch+var_11C] esi +
movzx esi byte ptr [esp+12Ch+var_100] +
sbb edx edx +
add edx 10h +
cmp edi ecx +
jz loc_457055  +
mov ecx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_108] eax +
sub edi 1 +
movzx eax byte ptr [edi] +
cmp edi ecx +
mov [edi+3] al +
jnz loc_457044  +
mov eax [esp+12Ch+var_108] +
mov edi [esp+12Ch+var_11C] +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
mov eax esi +
test al al +
mov [edi] dl +
jnz loc_4574C2  +
mov edi ebx +
mov esi [ebp+0] +
mov ebx [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx esi +
add ecx 3 +
cmp ecx eax +
jbe loc_457715  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_4570E0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] esi +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax esi +
jz loc_4570DC  +
mov ecx eax +
sub ecx esi +
lea esi [ebx+ecx] +
add edi ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
cmovnz ebx esi +
mov esi [esp+12Ch+var_11C] +
add ecx esi +
test esi esi +
cmovz ecx esi +
mov [esp+12Ch+var_11C] ecx +
mov esi eax +
jmp loc_457077  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4570A0  +
mov [esp+12Ch+var_108] esi +
xor ecx ecx +
mov edx [esp+12Ch+var_108] +
shr edx 1Fh +
test dl dl +
jnz loc_456E85  +
test cl cl +
jnz loc_456E85  +
mov ecx [esp+12Ch+var_118] +
and ecx 1000h +
jnz loc_457149  +
cmp al 5Ch +
jnz loc_456E85  +
mov eax [esp+12Ch+var_90] +
cmp eax [esp+12Ch+var_110] +
jz loc_456E85  +
mov ebx [esp+12Ch+var_114] +
lea edx [eax+1] +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [eax] +
test ebx ebx +
jz loc_457149  +
movzx eax byte ptr [ebx+eax] +
cmp al 7Dh +
jnz loc_456E85  +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_45781F  +
cmp esi 7FFFh +
jg loc_45838F  +
test esi esi +
jnz loc_458201  +
mov esi edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx esi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_45748E  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
mov [ebp+4] eax +
jbe loc_4571AF  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_4571EB  +
mov ecx eax +
sub ecx ebx +
lea ebx [edi+ecx] +
add esi ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
cmovnz edi ebx +
mov ebx [esp+12Ch+var_11C] +
add ecx ebx +
test ebx ebx +
cmovz ecx ebx +
mov [esp+12Ch+var_11C] ecx +
mov ebx eax +
jmp loc_45717A  +
mov ebx [esp+12Ch+var_114] +
mov [esp+12Ch+var_11C] esi +
mov eax [esp+12Ch+var_90] +
mov [esp+12Ch+var_10C] edi +
movzx esi byte ptr [esp+12Ch+var_108] +
mov edi edx +
test ebx ebx +
jz loc_4577B5  +
movzx edx byte ptr [eax-2] +
movsx ecx byte ptr [ebx+edx] +
movsx edx byte ptr [ebx+2Eh] +
cmp ecx edx +
jz loc_457756  +
mov eax [esp+12Ch+var_11C] +
mov byte ptr [edi] 12h +
mov byte ptr [esp+12Ch+var_108] 0 +
sub eax edi +
sub eax 6 +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
add edi 3 +
jmp loc_456BE0  +
test ecx ecx +
jz loc_455BE5  +
test dl dl +
jz loc_455BE5  +
cmp byte ptr [ecx] 7Ch +
jnz loc_455BE5  +
jmp loc_456245  +
mov [esp+12Ch+var_100] edi +
mov edi [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ebx +
mov [esp+12Ch+var_11C] esi +
lea eax [edi+1] +
mov [esp+12Ch+var_E4] eax +
mov eax [esp+12Ch+var_90] +
cmp byte ptr [eax] 5Eh +
setz al  +
add eax 4 +
mov [edi] al +
mov eax [esp+12Ch+var_90] +
cmp byte ptr [eax] 5Eh +
mov [esp+12Ch+var_D4] eax +
jnz loc_4572AC  +
add eax 1 +
mov [esp+12Ch+var_90] eax +
mov [esp+12Ch+var_D4] eax +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_E4] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_457583  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_457337  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_457333  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_E4] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_4572BD  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4572E8  +
cmp al 3Fh +
jz loc_456BD4  +
cmp al 2Bh +
jnz loc_456BB2  +
mov edi esi +
jmp loc_455BFF  +
test [esp+12Ch+var_118] 2000h +
jz loc_4560C3  +
jmp loc_4560CB  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 5 +
jmp loc_455B05  +
mov byte ptr [edi] 1 +
add edi 1 +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax edi +
sub eax [ebp+0] +
mov [ebp+8] eax +
xor eax eax +
jmp loc_455B05  +
sub [esp+12Ch+var_F4] 1 +
mov esi 0 +
mov eax [esp+12Ch+var_F4] +
mov ebx [esp+12Ch+var_FC] +
mov edx [ebp+0] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
mov ebx [eax] +
mov ecx [eax+4] +
add ebx edx +
mov [esp+12Ch+var_120] ebx +
test ecx ecx +
lea ebx [edx+ecx-1] +
cmovz ebx esi +
mov esi [eax+10h] +
mov [esp+12Ch+var_10C] ebx +
mov ebx [eax+0Ch] +
add ebx edx +
cmp esi 0FFh +
mov [esp+12Ch+var_11C] ebx +
ja loc_457552  +
movzx ebx byte ptr [esp+12Ch+var_F0] +
mov ecx esi +
mov eax [eax+8] +
sub ebx ecx +
mov byte ptr [esp+12Ch+var_108] bl +
mov [edx+eax] bl +
mov ebx [ebp+0] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_4583A5  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
ja loc_457479  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_457475  +
mov edx [esp+12Ch+var_10C] +
mov ecx eax +
sub ecx ebx +
add edi ecx +
add [esp+12Ch+var_120] ecx +
mov ebx edx +
add ebx ecx +
test edx edx +
cmovz ebx edx +
mov [esp+12Ch+var_10C] ebx +
mov ebx [esp+12Ch+var_11C] +
add ecx ebx +
test ebx ebx +
cmovz ecx ebx +
mov [esp+12Ch+var_11C] ecx +
mov ebx eax +
jmp loc_457407  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_457430  +
xor edx edx +
jmp loc_45632A  +
mov eax esi +
mov [esp+12Ch+var_10C] edi +
lea ebx [esi+3] +
mov edi esi +
mov esi [esp+12Ch+var_11C] +
sub eax esi +
cmp edi esi +
jz loc_4574B2  +
sub edi 1 +
movzx edx byte ptr [edi] +
cmp edi [esp+12Ch+var_11C] +
mov [edi+3] dl +
jnz loc_4574A3  +
mov esi [esp+12Ch+var_11C] +
mov [esi+1] al +
sar eax 8 +
mov byte ptr [esi] 0Dh +
mov [esi+2] al +
mov ecx [esp+12Ch+var_90] +
mov edi ebx +
mov [esp+12Ch+var_100] 0 +
jmp loc_455ABB  +
mov ebx [esp+12Ch+var_F4] +
lea eax [ebx+ebx*4] +
shl eax 3 +
mov [esp+12Ch+var_128] eax +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call realloc  +
test eax eax +
mov [esp+12Ch+var_FC] eax +
jz loc_455B00  +
mov eax ebx +
add eax eax +
mov [esp+12Ch+var_EC] eax +
jmp loc_456300  +
mov [esp+12Ch+var_10C] edi +
lea edi [esi+3] +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
jmp loc_455ABB  +
mov ecx [esp+12Ch+var_100] +
mov edx [esp+12Ch+var_108] +
mov esi [esp+12Ch+var_11C] +
mov eax edx +
sar eax 8 +
mov byte ptr [esi] 17h +
mov [esi+1] dl +
mov [esi+2] al +
mov [esi+3] bl +
mov [esi+4] cl +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_100] 0 +
jmp loc_455ABB  +
movzx ecx byte ptr [edx+1] +
cmp cl 3Fh +
jz loc_456BD4  +
cmp cl 2Bh +
jnz loc_456BB2  +
mov edi esi +
jmp loc_455BFF  +
mov [esp+12Ch+var_10C] ebx +
mov ebx [esp+12Ch+var_E4] +
mov edx 20h +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_11C] edi +
mov eax ebx +
add eax 1 +
mov byte ptr [ebx] 20h +
mov ebx eax +
and ebx 1 +
mov [esp+12Ch+var_DC] eax +
jnz loc_457BED  +
test al 2 +
jnz loc_457BDC  +
mov ebx edx +
xor ecx ecx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+ecx] 0 +
add ecx 4 +
cmp ecx ebx +
jb loc_4575BE  +
add eax ecx +
test dl 2 +
jz loc_4575DC  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and edx 1 +
jz loc_4575E4  +
mov byte ptr [eax] 0 +
mov eax [esp+12Ch+var_E4] +
cmp byte ptr [eax-1] 5 +
jz loc_457BC5  +
mov esi [esp+12Ch+var_118] +
xor ebx ebx +
mov [esp+12Ch+arg_0] ebp +
mov edx [esp+12Ch+var_90] +
mov edi ebx +
mov ebp [esp+12Ch+var_110] +
mov [esp+12Ch+var_E0] 0FFFFFFFFh +
mov eax esi +
and eax 1 +
mov [esp+12Ch+var_A4] eax +
mov eax esi +
and eax 4 +
mov [esp+12Ch+var_A0] eax +
mov eax [esp+12Ch+var_DC] +
mov [esp+12Ch+var_108] eax +
cmp ebp edx +
jz loc_457845  +
mov ebx [esp+12Ch+var_114] +
lea esi [edx+1] +
mov [esp+12Ch+var_90] esi +
movzx eax byte ptr [edx] +
test ebx ebx +
jz loc_457655  +
movzx eax byte ptr [ebx+eax] +
mov ecx [esp+12Ch+var_A4] +
test ecx ecx +
jz loc_457668  +
cmp al 5Ch +
jz loc_457B78  +
cmp al 5Dh +
jz loc_4579D1  +
cmp al 2Dh +
jnz loc_457953  +
mov ebx edi +
test bl bl +
jnz loc_4579BD  +
movzx ecx byte ptr [edx+1] +
lea ebx [edx-1] +
cmp [esp+12Ch+var_104] ebx +
ja loc_457699  +
cmp byte ptr [edx-1] 5Bh +
jz loc_457957  +
lea ebx [edx-2] +
cmp [esp+12Ch+var_104] ebx +
ja loc_4576AC  +
cmp byte ptr [edx-2] 5Bh +
jz loc_458452  +
cmp cl 5Dh +
jnz loc_457B32  +
mov ecx 5Dh +
mov ebx [esp+12Ch+var_A0] +
test ebx ebx +
jz loc_4576CD  +
cmp al 5Bh +
jz loc_457A38  +
mov ebx [esp+12Ch+var_108] +
mov edx eax +
mov ecx eax +
shr dl 3 +
and ecx 7 +
movzx esi dl +
mov edx 1 +
shl edx cl +
xor edi edi +
or [ebx+esi] dl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457634  +
cmp al 5Ch +
jnz loc_455DF7  +
cmp byte ptr [edx+1] 7Bh +
jnz loc_455DF7  +
mov edi esi +
nop   +
jmp loc_455BFF  +
mov [esp+12Ch+var_10C] ebx +
mov ebx edi +
cmp ebx [esp+12Ch+var_11C] +
lea edi [edi+3] +
jz loc_457733  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp ebx [esp+12Ch+var_11C] +
mov [ebx+3] al +
jnz loc_457724  +
mov eax [esp+12Ch+var_11C] +
mov [esp+12Ch+var_100] 0 +
mov byte ptr [eax] 13h +
mov byte ptr [eax+1] 3 +
mov byte ptr [eax+2] 0 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
test esi 1 +
jz loc_457225  +
cmp eax [esp+12Ch+var_110] +
jnb loc_457225  +
mov ebx [esp+12Ch+var_114] +
test ebx ebx +
jz loc_457930  +
movzx eax byte ptr [eax] +
movsx edx byte ptr [ebx+eax] +
movsx eax byte ptr [ebx+0Ah] +
cmp edx eax +
jnz loc_457225  +
test byte ptr [esp+12Ch+var_118] 40h +
jnz loc_457225  +
mov eax [esp+12Ch+var_11C] +
mov byte ptr [edi] 0Dh +
mov byte ptr [esp+12Ch+var_108] 1 +
sub eax edi +
sub eax 3 +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
jmp loc_45723F  +
movsx ecx byte ptr [eax-2] +
mov edx 2Eh +
jmp loc_45721D  +
cmp esi 7FFFh +
mov [esp+12Ch+var_108] esi +
setnle cl  +
mov esi 7FFFh +
jmp loc_4570F4  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456787  +
mov eax esi +
add edi 2 +
mov byte ptr [edi-2] 8 +
mov [edi-1] al +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 6 +
jmp loc_455B05  +
mov eax [esp+12Ch+var_118] +
and eax 200020h +
cmp eax 20h +
jz loc_45793D  +
test byte ptr [esp+12Ch+var_118] 10h +
jz loc_456E9B  +
mov [esp+12Ch+var_11C] edi +
jmp loc_45715D  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 7 +
jmp loc_455B05  +
mov byte ptr [edi] 1Ch +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 1Bh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax [esp+12Ch+var_110] +
cmp [esp+12Ch+var_90] eax +
setnz al  +
movzx eax al +
add eax 9 +
jmp loc_455B05  +
mov byte ptr [edi] 1Dh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 1Ah +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 0Bh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 19h +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 18h +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
mov byte ptr [edi] 0Ch +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455ABB  +
movsx edx byte ptr [eax] +
mov eax 0Ah +
jmp loc_457783  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Dh +
jmp loc_455B05  +
movzx ecx byte ptr [edx+1] +
cmp cl 2Dh +
jnz loc_4576BA  +
cmp byte ptr [edx+2] 5Dh +
jz loc_4576BA  +
cmp ebp esi +
jz loc_4583E3  +
mov ebx [esp+12Ch+var_108] +
add edx 2 +
mov ecx ebp +
mov [esp+12Ch+var_90] edx +
lea edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_124] ebx +
mov ebx [esp+12Ch+var_118] +
mov [esp+12Ch+var_128] ebx +
mov ebx [esp+12Ch+var_114] +
mov [esp+12Ch+var_12C] ebx +
call sub_452EA0  +
test eax eax +
jnz loc_457B63  +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] 0FFFFFFFFh +
jmp loc_457634  +
cmp byte ptr [edx+1] 5Dh +
jnz loc_4583CD  +
mov ecx 5Dh +
jmp loc_457686  +
mov ebx [esp+12Ch+var_D4] +
lea ecx [ebx+1] +
cmp esi ecx +
jz loc_457953  +
mov eax [esp+12Ch+var_E4] +
mov ebp [esp+12Ch+arg_0] +
movzx eax byte ptr [eax] +
test al al +
jz loc_4581F8  +
mov ebx [esp+12Ch+var_DC] +
movzx edi al +
sub eax 1 +
mov ecx esi +
cmp byte ptr [ebx+edi-1] 0 +
jnz loc_457A2F  +
mov ebx [esp+12Ch+var_E4] +
test al al +
mov [ebx] al +
jz loc_4581EA  +
mov ebx [esp+12Ch+var_DC] +
movzx edi al +
sub eax 1 +
cmp byte ptr [ebx+edi-1] 0 +
jz loc_457A09  +
mov ecx [esp+12Ch+var_90] +
add edi [esp+12Ch+var_DC] +
jmp loc_455ABB  +
cmp cl 3Ah +
jz loc_457D7B  +
cmp cl 3Dh +
jz loc_457C56  +
cmp cl 2Eh +
jnz loc_4576CD  +
cmp ebp esi +
jz loc_4583E3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457845  +
mov esi [esp+12Ch+var_114] +
xor eax eax +
mov edi edx +
mov ebx [esp+12Ch+var_108] +
mov ecx eax +
lea edx [edi+1] +
test esi esi +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
jz loc_457A91  +
movzx eax byte ptr [esi+eax] +
cmp al 2Eh +
jz loc_457ABE  +
cmp ebp edx +
jz loc_457BFF  +
test cl cl +
js loc_457AB2  +
movzx edi cl +
add ecx 1 +
mov byte ptr [esp+edi+12Ch+var_8C] al +
mov edi edx +
jmp loc_457A7B  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov edi edx +
jmp loc_457A7B  +
cmp byte ptr [edx] 5Dh +
jnz loc_457A95  +
mov eax ecx +
mov ecx edi +
movzx edi al +
mov esi edx +
mov [esp+12Ch+var_108] ebx +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
movzx ebx byte ptr [esp+12Ch+var_8C] +
test bl bl +
jz loc_458477  +
cmp al 1 +
jnz loc_458461  +
cmp ebp esi +
jz loc_4583E3  +
mov esi [esp+12Ch+var_108] +
add ecx 2 +
mov edx ebx +
mov [esp+12Ch+var_90] ecx +
shr dl 3 +
mov ecx ebx +
movzx edx dl +
and ecx 7 +
mov eax 1 +
xor edi edi +
shl eax cl +
or [esi+edx] al +
movzx eax bl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457634  +
mov eax [esp+12Ch+var_108] +
mov ecx ebp +
lea edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_124] eax +
mov eax [esp+12Ch+var_118] +
mov [esp+12Ch+var_128] eax +
mov eax [esp+12Ch+var_114] +
mov [esp+12Ch+var_12C] eax +
mov eax [esp+12Ch+var_E0] +
call sub_452EA0  +
test eax eax +
jz loc_4579A9  +
mov edi eax +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax edi +
jmp loc_455B05  +
cmp ebp esi +
jz loc_45736F  +
mov ebx [esp+12Ch+var_114] +
lea eax [edx+2] +
mov [esp+12Ch+var_90] eax +
movzx eax byte ptr [edx+1] +
test ebx ebx +
jz loc_457B9A  +
movzx eax byte ptr [ebx+eax] +
mov ebx [esp+12Ch+var_108] +
mov edx eax +
mov ecx eax +
shr dl 3 +
and ecx 7 +
movzx esi dl +
mov edx 1 +
shl edx cl +
or [ebx+esi] dl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457634  +
test [esp+12Ch+var_118] 100h +
jz loc_4575F2  +
or byte ptr [eax+2] 4 +
jmp loc_4575F2  +
xor esi esi +
add eax 2 +
mov [eax-2] si +
sub edx 2 +
jmp loc_4575B7  +
mov eax [esp+12Ch+var_E4] +
mov dl 1Fh +
mov byte ptr [eax+1] 0 +
add eax 2 +
jmp loc_4575AF  +
mov byte ptr [esp+12Ch+var_E0] al +
mov eax ecx +
mov ecx edi +
cmp byte ptr [esp+12Ch+var_E0] 2Eh +
movzx edi al +
mov [esp+12Ch+var_108] ebx +
mov esi ebp +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
jz loc_457C4B  +
cmp al 0FFh +
jz loc_457C30  +
mov edx edi +
not edx  +
add edx esi +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 2Eh +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+6] 40h +
jmp loc_457634  +
cmp byte ptr [ecx+1] 5Dh +
jnz loc_457C1F  +
jmp loc_457AD8  +
cmp ebp esi +
jz loc_4583E3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457845  +
mov edi [esp+12Ch+var_114] +
mov esi edx +
xor eax eax +
mov ebx [esp+12Ch+var_108] +
lea edx [esi+1] +
test edi edi +
mov [esp+12Ch+var_90] edx +
movzx ecx byte ptr [edx-1] +
jz loc_457C92  +
movzx ecx byte ptr [edi+ecx] +
cmp cl 3Dh +
jz loc_457CC0  +
cmp ebp edx +
jz loc_457D2A  +
cmp al 4 +
ja loc_457CB4  +
movzx esi al +
add eax 1 +
mov byte ptr [esp+esi+12Ch+var_8C] cl +
mov esi edx +
jmp loc_457C7C  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov esi edx +
jmp loc_457C7C  +
cmp byte ptr [edx] 5Dh +
jnz loc_457C97  +
movzx edi al +
mov [esp+12Ch+var_108] ebx +
mov ebx edx +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
movzx ecx byte ptr [esp+12Ch+var_8C] +
test cl cl +
jz loc_457D77  +
cmp al 1 +
jnz loc_458461  +
cmp ebp ebx +
jz loc_4583E3  +
mov ebx [esp+12Ch+var_108] +
mov edx ecx +
add esi 2 +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
mov [esp+12Ch+var_90] esi +
shl eax cl +
mov edi 1 +
or [ebx+edx] al +
mov edx [esp+12Ch+var_90] +
jmp loc_457634  +
movzx edi al +
cmp cl 3Dh +
mov [esp+12Ch+var_108] ebx +
mov ebx ebp +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
jz loc_457D6C  +
cmp al 0FFh +
jz loc_457D51  +
mov edx edi +
not edx  +
add edx ebx +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 3Dh +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+8] 20h +
jmp loc_457634  +
cmp byte ptr [esi+1] 5Dh +
jnz loc_457D40  +
jmp loc_457CD6  +
mov ebx edx +
jmp loc_457D40  +
cmp ebp esi +
lea esi [esi+0] +
jz loc_4583E3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457845  +
mov esi [esp+12Ch+var_114] +
xor eax eax +
mov edi edx +
mov ebx [esp+12Ch+var_108] +
lea edx [edi+1] +
test esi esi +
mov [esp+12Ch+var_90] edx +
movzx ecx byte ptr [edx-1] +
jz loc_457DBA  +
movzx ecx byte ptr [esi+ecx] +
cmp cl 3Ah +
jz loc_457DE8  +
cmp ebp edx +
jz loc_4583ED  +
cmp al 5 +
ja loc_457DDC  +
movzx edi al +
add eax 1 +
mov byte ptr [esp+edi+12Ch+var_8C] cl +
mov edi edx +
jmp loc_457DA4  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov edi edx +
jmp loc_457DA4  +
cmp byte ptr [edx] 5Dh +
jnz loc_457DBF  +
movzx eax al +
mov [esp+12Ch+var_108] ebx +
mov [esp+12Ch+var_D8] edi +
mov byte ptr [esp+eax+12Ch+var_8C] 0 +
lea eax [esp+12Ch+var_8C] +
mov edi offset aAlnum +
mov esi eax +
mov ecx 6 +
cmps   +
mov esi eax +
mov edi offset aAlpha +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
cmps   +
movsx ebx bl +
mov esi eax +
mov [esp+12Ch+var_D0] ebx +
mov edi offset aBlank +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
cmps   +
movsx ebx bl +
mov edi offset aCntrl +
mov [esp+12Ch+var_CC] ebx +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C8] esi +
mov esi eax +
cmps   +
mov edi offset aDigit +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C4] esi +
mov esi eax +
cmps   +
mov edi offset aGraph +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C0] esi +
mov esi eax +
cmps   +
mov edi offset aLower +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_BC] esi +
mov esi eax +
cmps   +
mov edi offset aPrint +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
test esi esi +
mov [esp+12Ch+var_A8] esi +
mov esi eax +
setz [esp+12Ch+var_AA]  +
cmps   +
mov edi offset aPunct +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B8] esi +
mov esi eax +
cmps   +
mov edi offset aSpace +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B4] esi +
mov esi eax +
cmps   +
mov edi offset aUpper +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B0] esi +
mov esi eax +
cmps   +
mov edi offset aXdigit +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 7 +
movsx esi bl +
test esi esi +
mov ebx esi +
mov esi eax +
setz [esp+12Ch+var_A9]  +
cmps   +
setnbe cl  +
setb al  +
sub ecx eax +
movsx esi cl +
mov ecx [esp+12Ch+var_CC] +
test ecx ecx +
jz loc_457FD3  +
test ebx ebx +
jz loc_457FD3  +
mov eax [esp+12Ch+var_A8] +
test eax eax +
jz loc_457FD3  +
mov eax [esp+12Ch+var_C0] +
test eax eax +
jz loc_457FD3  +
mov eax [esp+12Ch+var_D0] +
test eax eax +
jz loc_457FD3  +
test esi esi +
jz loc_457FD3  +
mov eax [esp+12Ch+var_B0] +
test eax eax +
jz loc_457FD3  +
mov eax [esp+12Ch+var_B8] +
test eax eax +
jz loc_457FD3  +
mov eax [esp+12Ch+var_B4] +
test eax eax +
jz loc_457FD3  +
mov edi [esp+12Ch+var_BC] +
test edi edi +
jz loc_457FD3  +
mov ebx [esp+12Ch+var_C4] +
test ebx ebx +
jz loc_457FD3  +
mov ecx [esp+12Ch+var_C8] +
test ecx ecx +
jnz loc_45843C  +
cmp ebp edx +
jz loc_4583E3  +
mov eax [esp+12Ch+var_D8] +
add eax 2 +
cmp ebp eax +
mov [esp+12Ch+var_90] eax +
jz loc_457845  +
xor edi edi +
mov ebx edi +
mov edi [esp+12Ch+var_108] +
jmp loc_4580F6  +
mov [esp+12Ch+var_12C] ebx +
call ds:isprint  +
test eax eax +
jz loc_45817E  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isspace  +
test eax eax +
jnz loc_45817E  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov ecx [esp+12Ch+var_B4] +
test ecx ecx +
jnz loc_45804C  +
mov [esp+12Ch+var_12C] ebx +
call ds:ispunct  +
test eax eax +
jnz loc_458089  +
mov edx [esp+12Ch+var_B0] +
test edx edx +
jnz loc_458061  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isspace  +
test eax eax +
jnz loc_458089  +
cmp [esp+12Ch+var_A9] 0 +
jz loc_458078  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isupper  +
test eax eax +
jnz loc_458089  +
test esi esi +
jnz loc_4580A0  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isxdigit  +
test eax eax +
jz loc_4580A0  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov eax [esp+12Ch+var_114] +
test eax eax +
jz loc_4580E7  +
cmp [esp+12Ch+var_A9] 0 +
jz loc_4581C0  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isupper  +
test eax eax +
jnz loc_4580D0  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_islower  +
test eax eax +
jz loc_4580E7  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
add ebx 1 +
cmp ebx 100h +
jz loc_4581D5  +
mov edx [esp+12Ch+var_D0] +
test edx edx +
jnz loc_45810B  +
mov [esp+12Ch+var_12C] ebx +
call ds:isalnum  +
test eax eax +
jnz loc_458147  +
mov eax [esp+12Ch+var_CC] +
test eax eax +
jnz loc_458120  +
mov [esp+12Ch+var_12C] ebx +
call ds:isalpha  +
test eax eax +
jnz loc_458147  +
mov eax [esp+12Ch+var_C8] +
test eax eax +
jnz loc_458132  +
cmp ebx 9 +
jz loc_458147  +
cmp ebx 20h +
jz loc_458147  +
mov eax [esp+12Ch+var_C4] +
test eax eax +
jnz loc_45815E  +
mov [esp+12Ch+var_12C] ebx +
call ds:iscntrl  +
test eax eax +
jz loc_45815E  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov eax [esp+12Ch+var_C0] +
test eax eax +
jnz loc_458172  +
lea eax [ebx-30h] +
cmp eax 9 +
jbe loc_458020  +
mov eax [esp+12Ch+var_BC] +
test eax eax +
jz loc_457FFE  +
cmp [esp+12Ch+var_AA] 0 +
jz loc_458199  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_islower  +
test eax eax +
jnz loc_458020  +
mov eax [esp+12Ch+var_B8] +
test eax eax +
jnz loc_458037  +
mov [esp+12Ch+var_12C] ebx +
call ds:isprint  +
test eax eax +
jz loc_458037  +
jmp loc_458020  +
cmp [esp+12Ch+var_AA] 0 +
jz loc_4580E7  +
nop   +
jmp loc_4580B6  +
mov [esp+12Ch+var_108] edi +
mov edx [esp+12Ch+var_90] +
mov edi 1 +
jmp loc_457634  +
mov ecx [esp+12Ch+var_90] +
xor edi edi +
jmp loc_457A2F  +
mov ecx esi +
xor edi edi +
jmp loc_457A2F  +
mov ebx 14h +
cmp esi 2 +
mov eax 0Ah +
cmovge eax ebx +
mov ebx [ebp+0] +
mov [esp+12Ch+var_100] eax +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx [esp+12Ch+var_100] +
cmp ecx eax +
jbe loc_458295  +
cmp eax 10000h +
jz loc_455C83  +
add eax eax +
cmp eax 10000h +
mov [ebp+4] eax +
jbe loc_45824A  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455B00  +
cmp eax ebx +
jz loc_458291  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_11C] edx +
mov ebx eax +
jmp loc_458218  +
mov ebx [esp+12Ch+var_11C] +
xor edx edx +
cmp esi 2 +
setnl dl  +
mov ecx edi +
lea edx [edx+edx*4+5] +
mov eax edi +
sub ecx ebx +
cmp edi ebx +
lea ecx [ecx+edx-3] +
lea edx [edi+5] +
jz loc_4582C5  +
sub edi 1 +
movzx ebx byte ptr [edi] +
cmp edi [esp+12Ch+var_11C] +
mov [edi+5] bl +
jnz loc_4582B6  +
mov edi [esp+12Ch+var_11C] +
mov [edi+1] cl +
sar ecx 8 +
mov [edi+2] cl +
mov ecx [esp+12Ch+var_108] +
mov byte ptr [edi] 15h +
mov ebx ecx +
sar ebx 8 +
cmp [esp+12Ch+var_11C] edx +
mov [edi+3] cl +
mov [edi+4] bl +
lea edi [eax+0Ah] +
mov byte ptr [esp+12Ch+var_108] cl +
mov ecx edi +
jz loc_45830C  +
mov [esp+12Ch+var_100] eax +
sub edx 1 +
movzx eax byte ptr [edx] +
sub ecx 1 +
cmp edx [esp+12Ch+var_11C] +
mov [ecx] al +
jnz loc_4582F7  +
mov eax [esp+12Ch+var_100] +
mov edx [esp+12Ch+var_11C] +
cmp esi 1 +
movzx ecx byte ptr [esp+12Ch+var_108] +
mov byte ptr [edx] 17h +
mov byte ptr [edx+1] 5 +
mov byte ptr [edx+2] 0 +
mov [edx+3] cl +
mov [edx+4] bl +
jle loc_457552  +
lea ebx [esi-1] +
mov esi [esp+12Ch+var_11C] +
mov ecx ebx +
sar ecx 8 +
mov byte ptr [eax+0Ah] 16h +
mov edx esi +
sub edx edi +
add edx 2 +
mov [eax+0Bh] dl +
sar edx 8 +
mov [eax+0Ch] dl +
lea edx [eax+0Fh] +
mov edi edx +
sub edi esi +
mov esi ecx +
cmp [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_108] edi +
lea edi [eax+14h] +
mov [eax+0Dh] bl +
mov [eax+0Eh] cl +
mov eax edi +
jz loc_457536  +
mov [esp+12Ch+var_100] ecx +
sub eax 1 +
sub edx 1 +
cmp edx [esp+12Ch+var_11C] +
mov ecx esi +
mov [eax] cl +
jz loc_457532  +
movzx esi byte ptr [edx-1] +
jmp loc_458375  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Ah +
jmp loc_455B05  +
mov eax esi +
add edi 3 +
mov [edi-2] al +
movzx eax byte ptr [esp+12Ch+var_108] +
mov byte ptr [edi-3] 7 +
mov [esp+12Ch+var_100] 0 +
mov [edi-1] al +
mov ecx [esp+12Ch+var_90] +
jmp loc_455ABB  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Bh +
jmp loc_455B05  +
mov eax 0Eh +
jmp loc_455B05  +
movzx esi al +
cmp cl 3Ah +
mov [esp+12Ch+var_108] ebx +
mov [esp+12Ch+var_D8] edi +
mov byte ptr [esp+esi+12Ch+var_8C] 0 +
jz loc_458431  +
cmp al 0FFh +
jz loc_458416  +
not esi  +
mov edx esi +
add edx ebp +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 3Ah +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+8] 4 +
jmp loc_457634  +
cmp byte ptr [edi+1] 5Dh +
jnz loc_458405  +
jmp loc_457E00  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 4 +
jmp loc_455B05  +
cmp byte ptr [edx-1] 5Eh +
jnz loc_4576AC  +
jmp loc_457957  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 3 +
jmp loc_455B05  +
mov esi edx +
jmp loc_457C1F  +
***
mov edx [esp+4] +
mov eax ds:dword_4DA378 +
mov ds:dword_4DA378 edx +
retn   +
***
mov eax [esp+4] +
jmp sub_4531F0  +
***
push ebx  +
mov ecx [esp+10h] +
mov edx [esp+8] +
mov eax [esp+0Ch] +
test ecx ecx +
jnz loc_4584D0  +
and byte ptr [edx+1Ch] 0F9h +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
pop ebx  +
retn   +
***
movzx ebx byte ptr [edx+1Ch] +
and ebx 0FFFFFFF9h +
or ebx 2 +
mov [edx+1Ch] bl +
mov edx [esp+14h] +
mov [eax] ecx +
mov [eax+4] edx +
mov edx [esp+18h] +
mov [eax+8] edx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+18h] +
mov ecx [esp+14h] +
mov ebx [esp+1Ch] +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov eax [esp+10h] +
mov [esp+24h] edx +
mov [esp+14h] edx +
xor edx edx +
mov [esp+10h] ecx +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4556E0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebp [esp+34h] +
mov edi [esp+28h] +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp+28h] ebp +
mov ebp [esp+30h] +
mov eax [esp+14h] +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [esp+24h] ebp +
mov ebp [esp+2Ch] +
mov [esp+1Ch] edi +
mov [esp+18h] esi +
mov [esp+14h] ebx +
mov [esp+20h] ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4556E0  +
***
push esi  +
push ebx  +
mov edx [esp+14h] +
mov ecx [esp+10h] +
mov ebx [esp+18h] +
mov esi [esp+1Ch] +
mov eax [esp+0Ch] +
mov [esp+1Ch] edx +
mov [esp+10h] edx +
xor edx edx +
mov [esp+0Ch] ecx +
xor ecx ecx +
mov [esp+18h] esi +
mov [esp+14h] ebx +
pop ebx  +
pop esi  +
jmp sub_4535D0  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+2Ch] +
mov esi [esp+20h] +
mov ebx [esp+1Ch] +
mov eax [esp+10h] +
mov [esp+20h] edi +
mov edi [esp+28h] +
mov edx [esp+14h] +
mov ecx [esp+18h] +
mov [esp+14h] esi +
mov [esp+1Ch] edi +
mov edi [esp+24h] +
mov [esp+10h] ebx +
mov [esp+18h] edi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4535D0  +
***
sub esp 1Ch +
mov ecx ds:dword_4DA378 +
mov edx [esp+28h] +
movzx eax byte ptr [edx+1Ch] +
and eax 0FFFFFFE9h +
or eax 0FFFFFF80h +
mov [edx+1Ch] al +
mov eax [esp+20h] +
mov [esp] edx +
mov edx [esp+24h] +
call sub_4559F0  +
test eax eax +
jz loc_458640  +
mov eax ds:off_4D0EE0[eax*4] +
add esp 1Ch +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jz loc_4586A0  +
mov eax ds:dword_4D93E0 +
test eax eax +
jz loc_4586B6  +
mov [esp] ebx +
mov esi ds:dword_4DA378 +
or ds:byte_4D93FC 80h +
call strlen  +
mov dword ptr [esp] offset dword_4D93E0 +
mov ecx esi +
mov edx eax +
mov eax ebx +
call sub_4559F0  +
test eax eax +
jz loc_4586F5  +
mov eax ds:off_4D0EE0[eax*4] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edx ds:dword_4D93E0 +
mov eax offset aNoPreviousRegu +
test edx edx +
cmovnz eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 0C8h +
call malloc  +
test eax eax +
mov ds:dword_4D93E0 eax +
jz loc_4586EE  +
mov dword ptr [esp] 100h +
mov ds:dword_4D93E4 0C8h +
call malloc  +
test eax eax +
mov ds:dword_4D93F0 eax +
jnz loc_458666  +
mov eax offset aMemoryExhaus_0 +
jmp loc_458698  +
***
xor eax eax +
jmp loc_458698  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov [esp] ebx +
call strlen  +
xor ecx ecx +
xor edx edx +
mov [esp] ebx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+14h] eax +
mov [esp+0Ch] eax +
mov [esp+4] eax +
mov eax offset dword_4D93E0 +
call sub_4556E0  +
add esp 28h +
pop ebx  +
not eax  +
shr eax 1Fh +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+5Ch+arg_4] +
mov ebx [esp+5Ch+arg_0] +
mov esi [esp+5Ch+arg_8] +
mov ebp [esp+5Ch+arg_10] +
mov [esp+5Ch+var_5C] edi +
call strlen  +
test byte ptr [ebx+1Ch] 10h +
mov ecx eax +
jnz loc_4588C2  +
test esi esi +
jnz loc_458955  +
mov eax [ebx] +
mov edx [ebx+1Ch] +
mov [esp+5Ch+var_2C] eax +
mov eax [ebx+4] +
mov [esp+5Ch+var_10] edx +
and edx 0FFFFFFDFh +
mov [esp+5Ch+var_28] eax +
mov eax [ebx+8] +
mov [esp+5Ch+var_24] eax +
mov eax [ebx+0Ch] +
mov [esp+5Ch+var_20] eax +
mov eax [ebx+10h] +
mov [esp+5Ch+var_1C] eax +
mov eax [ebx+14h] +
mov [esp+5Ch+var_18] eax +
mov eax [ebx+18h] +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] ecx +
xor ecx ecx +
mov [esp+5Ch+var_14] eax +
mov eax ebp +
and eax 1 +
shl eax 5 +
shr ebp 1 +
or edx eax +
and ebp 1 +
and edx 0FFFFFFB9h +
shl ebp 6 +
or edx ebp +
or edx 4 +
mov byte ptr [esp+5Ch+var_10] dl +
lea eax [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_5C] edi +
call sub_4556E0  +
mov ebx eax +
mov eax ebx +
shr eax 1Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_40] eax +
mov eax [ebx] +
mov edx ebp +
and edx 1 +
shl edx 5 +
shr ebp 1 +
mov [esp+5Ch+var_2C] eax +
mov eax [ebx+4] +
and ebp 1 +
shl ebp 6 +
mov [esp+5Ch+var_38] esi +
mov [esp+5Ch+var_28] eax +
mov eax [ebx+8] +
mov [esp+5Ch+var_24] eax +
mov eax [ebx+0Ch] +
mov [esp+5Ch+var_20] eax +
mov eax [ebx+10h] +
mov [esp+5Ch+var_1C] eax +
mov eax [ebx+14h] +
mov [esp+5Ch+var_18] eax +
mov eax [ebx+18h] +
mov [esp+5Ch+var_14] eax +
mov eax [ebx+1Ch] +
mov [esp+5Ch+var_10] eax +
and eax 0FFFFFFDFh +
or eax edx +
and eax 0FFFFFFB9h +
or eax ebp +
or eax 4 +
mov byte ptr [esp+5Ch+var_10] al +
lea eax ds:0[esi*8] +
mov [esp+5Ch+var_5C] eax +
call malloc  +
mov ecx [esp+5Ch+var_40] +
test eax eax +
mov [esp+5Ch+var_34] eax +
jz loc_458A3B  +
lea eax [eax+esi*4] +
xor edx edx +
mov [esp+5Ch+var_30] eax +
lea eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] ecx +
xor ecx ecx +
mov [esp+5Ch+var_5C] edi +
mov [esp+5Ch+var_54] 0 +
call sub_4556E0  +
mov edi [esp+5Ch+var_34] +
test eax eax +
mov ebx eax +
js loc_458A2E  +
mov ebp [esp+5Ch+var_30] +
xor edx edx +
mov ecx [esp+5Ch+arg_C] +
mov eax [edi+edx*4] +
add ecx 8 +
mov [ecx-8] eax +
mov eax [ebp+edx*4+0] +
add edx 1 +
mov [ecx-4] eax +
cmp edx esi +
jnz loc_458A17  +
mov [esp+5Ch+var_5C] edi +
call free  +
jmp loc_458948  +
mov eax 1 +
jmp loc_45894D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov ebx [esp+2Ch] +
cmp eax 10h +
ja loc_458AC9  +
mov edi ds:off_4D0EE0[eax*4] +
mov [esp] edi +
call strlen  +
test ebx ebx +
lea esi [eax+1] +
jz loc_458A91  +
cmp esi ebx +
ja loc_458AA0  +
mov eax [esp+28h] +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea eax [ebx-1] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
mov eax [esp+28h] +
mov byte ptr [eax+ebx-1] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
call abort  +
nop   +
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx] +
mov [esp] eax +
call free  +
mov eax [ebx+10h] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov [esp] eax +
call free  +
mov eax [ebx+14h] +
and byte ptr [ebx+1Ch] 0F7h +
mov dword ptr [ebx+10h] 0 +
mov [esp] eax +
call free  +
mov dword ptr [ebx+14h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 5 +
mov ecx [esp+4+arg_1] +
mov eax [esp+4+arg_5] +
cmp ecx eax +
jz loc_458C70  +
lea esi [ecx+1] +
mov [esp+1] esi +
movzx esi byte ptr [ecx] +
lea ecx [eax+1] +
movzx eax byte ptr [eax] +
mov ebx esi +
cmp bl 30h +
mov edx eax +
mov [esp+4+var_4] al +
movzx eax bl +
setz bl  +
movzx ebx bl +
mov ebp ebx +
movzx ebx ds:word_4D0620[eax+eax] +
shr bx 2 +
mov edi ebx +
movzx ebx dl +
and edi 1 +
add edi ebp +
sub eax ebx +
jnz loc_458BDA  +
mov edx esi +
test dl dl +
jz loc_458BDA  +
mov esi [esp+1] +
jmp loc_458B96  +
test dl dl +
jz loc_458BD6  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ecx 1 +
movzx eax byte ptr [ecx-1] +
xor ebx ebx +
cmp dl 30h +
setz bl  +
mov [esp+4+var_4] al +
movzx eax dl +
mov ebp ebx +
movzx ebx ds:word_4D0620[eax+eax] +
shr bx 2 +
and ebx 1 +
add ebx ebp +
or ebx ds:dword_4D1040[edi*4] +
mov edi ebx +
movzx ebx [esp+4+var_4] +
sub eax ebx +
jz loc_458B92  +
mov [esp+1] esi +
movzx esi ds:word_4D0620[ebx+ebx] +
xor edx edx +
cmp [esp+4+var_4] 30h +
setz dl  +
shr si 2 +
mov ebp edx +
mov ebx esi +
and ebx 1 +
add ebx ebp +
shl edi 2 +
or ebx edi +
mov esi ds:dword_4D0F40[ebx*4] +
mov ebx eax +
cmp esi 2 +
jz loc_458C4B  +
cmp esi 3 +
jnz loc_458C55  +
mov edx [esp+1] +
jmp loc_458C27  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
test byte ptr ds:word_4D0620[ebx+ebx] 4 +
jz loc_458C61  +
add edx 1 +
movzx ebx byte ptr [edx-1] +
test byte ptr ds:word_4D0620[ebx+ebx] 4 +
jnz loc_458C16  +
movzx edx byte ptr [ecx] +
mov ebx 0FFFFFFFFh +
test byte ptr ds:word_4D0620[edx+edx] 4 +
cmovz ebx eax +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
mov ebx 1 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_458CC5  +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+1Ch] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
test ecx ecx +
jz loc_458D40  +
mov esi ecx +
lea eax [ecx-1] +
neg esi  +
test edx edx +
mov ecx 0FE0h +
cmovz edx ecx +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx] edx +
call sub_458CB0  +
test eax eax +
jz loc_458D51  +
lea edx [eax+edi+7] +
and edx esi +
mov [ebx+8] edx +
mov [ebx+0Ch] edx +
mov edx [ebx] +
mov [ebx+4] eax +
add edx eax +
mov [eax] edx +
mov [ebx+10h] edx +
mov dword ptr [eax+4] 0 +
mov eax 1 +
and byte ptr [ebx+28h] 0F9h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi 0FFFFFFF8h +
mov eax 7 +
mov edi 8 +
jmp loc_458CF5  +
mov [esp+1Ch+var_10] eax +
call off_4836F0  +
mov eax [esp+1Ch+var_10] +
jmp loc_458D0F  +
***
jmp sub_458D70  +
***
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_458D85  +
mov eax [eax+20h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+20h] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+1Ch+var_10] +
and byte ptr [eax+28h] 0FEh +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+8] +
jmp loc_458CE0  +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+0Ch] +
or byte ptr [eax+28h] 1 +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+18h] +
mov [eax+24h] edx +
mov edx [esp+8] +
jmp loc_458CE0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov esi [ebx+0Ch] +
sub esi [ebx+8] +
mov eax [ebx+18h] +
mov ecx [ebx+4] +
add edx esi +
mov edi esi +
shr edi 3 +
add eax edx +
lea ebp [eax+edi+64h] +
mov edi [ebx] +
cmp eax edi +
cmovnb edi eax +
cmp edi ebp +
cmovb edi ebp +
cmp edx eax +
jbe loc_458EA6  +
mov [esp+1Ch+var_10] ecx +
xor ebp ebp +
call off_4836F0  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebx+18h] +
add edi ebp +
mov [ebx+4] ebp +
mov [ebp+4] ecx +
mov [ebx+10h] edi +
mov [ebp+0] edi +
lea edi [ebp+eax+8] +
not eax  +
and edi eax +
mov eax [ebx+8] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test byte ptr [ebx+28h] 2 +
jnz loc_458E92  +
mov edx [ebx+18h] +
mov ecx [esp+1Ch+var_10] +
lea eax [ecx+edx+8] +
not edx  +
and eax edx +
cmp [ebx+8] eax +
jz loc_458EC6  +
add esi edi +
mov [ebx+8] edi +
mov [ebx+0Ch] esi +
and byte ptr [ebx+28h] 0FDh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
ja loc_458E38  +
mov edx edi +
mov eax ebx +
mov [esp+1Ch+var_10] ecx +
call sub_458CB0  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
mov ebp eax +
jnz loc_458E48  +
jmp loc_458E38  +
mov eax [ecx+4] +
mov edx ecx +
mov [ebp+4] eax +
mov eax ebx +
call sub_458D70  +
jmp loc_458E92  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_458EFF  +
nop   +
cmp edx eax +
jbe loc_458EF8  +
cmp edx [eax] +
jbe loc_458F02  +
mov eax [eax+4] +
test eax eax +
jnz loc_458EF0  +
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push ebx  +
mov ebx [esp+8+arg_0] +
mov edi [esp+8+arg_4] +
mov edx [ebx+4] +
test edx edx +
jnz loc_458F26  +
jmp loc_458F44  +
mov edx esi +
cmp edi edx +
jbe loc_458F32  +
mov eax [edx] +
cmp edi eax +
nop   +
jbe loc_458F50  +
mov esi [edx+4] +
mov eax ebx +
call sub_458D70  +
or byte ptr [ebx+28h] 2 +
test esi esi +
jnz loc_458F24  +
test edi edi +
jnz loc_458F60  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
mov [ebx+8] edi +
mov [ebx+10h] eax +
mov [ebx+4] edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+8+var_4] +
mov edx [eax+4] +
xor eax eax +
test edx edx +
jz locret_458F8F  +
lea esi [esi+0] +
mov ecx [edx] +
sub ecx edx +
mov edx [edx+4] +
add eax ecx +
test edx edx +
jnz loc_458F80  +
retn   +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edi eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax ds:_environ +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_4591C6  +
mov ebx [eax] +
test ebx ebx +
jz loc_45919F  +
mov ebp eax +
xor esi esi +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_459012  +
cmp byte ptr [ebx+edi] 3Dh +
jz loc_4590F0  +
add ebp 4 +
mov ebx [ebp+0] +
add esi 1 +
test ebx ebx +
jnz loc_458FF0  +
lea eax ds:8[esi*4] +
mov edx ds:dword_4D9520 +
cmp [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_10] edx +
jz loc_459188  +
mov [esp+2Ch+var_2C] eax +
call malloc  +
mov ebx eax +
test ebx ebx +
jz loc_4591BF  +
lea eax [edi+1] +
mov [esp+2Ch+var_14] eax +
shl esi 2 +
add eax [esp+2Ch+var_18] +
lea ebp [ebx+esi] +
mov [esp+2Ch+var_2C] eax +
call malloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_4591AB  +
mov ecx ds:_environ +
mov ecx [ecx] +
cmp [esp+2Ch+var_10] ecx +
jz loc_459091  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] ebx +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+var_18] +
mov byte ptr [eax+edi] 3Dh +
mov eax [esp+2Ch+var_14] +
add eax [ebp+0] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
xor ecx ecx +
mov dword ptr [ebx+esi+4] 0 +
mov eax ds:_environ +
mov ds:dword_4D9520 ebx +
mov [eax] ebx +
add esp 2Ch +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebp+0] +
mov ecx eax +
test ebx ebx +
jz loc_45901F  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_45917E  +
mov [esp+2Ch+var_2C] ebx +
lea esi [edi+1] +
mov [esp+2Ch+var_14] ecx +
call strlen  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
add edx esi +
add eax 1 +
cmp eax edx +
jnb loc_45913E  +
mov [esp+2Ch+var_2C] edx +
call malloc  +
test eax eax +
jz loc_4591BF  +
mov ecx [esp+2Ch+var_14] +
mov ebx eax +
mov [ebp+0] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+var_18] +
mov byte ptr [eax+edi] 3Dh +
mov eax [ebp+0] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
add eax esi +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov ecx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call realloc  +
mov ebx eax +
jmp loc_459044  +
mov eax 8 +
xor esi esi +
jmp loc_459026  +
mov [esp+2Ch+var_2C] ebx +
call free  +
call ds:__imp__errno  +
mov dword ptr [eax] 0Ch +
mov ecx 0FFFFFFFFh +
jmp loc_45917E  +
mov eax ds:dword_4D9520 +
xor esi esi +
mov [esp+2Ch+var_10] eax +
mov eax 8 +
jmp loc_45903A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx eax +
mov eax ds:_environ +
mov ebp [eax] +
mov edi [ebp+0] +
test edi edi +
jnz loc_45920F  +
jmp loc_459247  +
add ebp 4 +
mov edi [ebp+0] +
test edi edi +
jz loc_459247  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call strncmp  +
test eax eax +
jnz loc_459205  +
cmp byte ptr [edi+ebx] 3Dh +
jnz loc_459205  +
mov edx ebp +
nop   +
lea esi [esi+0] +
mov ecx [edx+4] +
add edx 4 +
mov [edx-4] ecx +
test ecx ecx +
jnz loc_459230  +
add ebp 4 +
mov edi [ebp+0] +
test edi edi +
jnz loc_45920F  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_4592FE  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_4592F6  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_4592E4  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_459346  +
jmp loc_45945F  +
cmp eax 5Ch +
jz loc_4593D1  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_4593D1  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_459330  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_4594A8  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_459430  +
mov edx esi +
jmp loc_459384  +
cmp eax 5Ch +
jz loc_4593F3  +
cmp eax 2Fh +
jz loc_4593F3  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_459378  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_4593A6  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_459290  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_4594AF  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_45947C  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_4593EA  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_4593E0  +
cmp al 2Fh +
jz loc_4593E0  +
jmp loc_459349  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_459486  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_459400  +
cmp al 2Fh +
jz loc_459400  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_459290  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_459493  +
mov esi ebx +
jmp loc_459374  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_459440  +
cmp al 2Fh +
jnz loc_459374  +
mov edx 3 +
mov eax esi +
call sub_459290  +
test eax eax +
mov [edi] eax +
jz loc_4594BD  +
add esi 3 +
mov ebp 1 +
jmp loc_459374  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_45946F  +
cmp al 2Fh +
jnz loc_459346  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_459346  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_459400  +
jmp loc_45940E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_4592D0  +
xor eax eax +
jmp loc_4593C9  +
xor eax eax +
jmp loc_4593C9  +
mov eax edi +
call sub_4592D0  +
xor eax eax +
jmp loc_4593C9  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_4593C9  +
***
push edi  +
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_4594D0  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_4594D0  +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_459A00  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_4D0620[ecx+ecx] 88h +
jz loc_459A3A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_459A60  +
test dl dl +
jz locret_459A57  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_459A4B  +
cmp dl 2Fh +
jnz loc_459A4D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_459A41  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_459A3A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
test ebp ebp +
jz loc_459AFB  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_459AF0  +
xor eax eax +
add eax 1 +
mov edx [ebp+eax*4+0] +
test edx edx +
jnz loc_459A98  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_4529F0  +
mov edx [ebp+0] +
test edx edx +
mov edi eax +
jz loc_459AF7  +
mov ebx 4 +
xor esi esi +
jmp loc_459AC8  +
mov esi ebx +
mov ebx eax +
mov [esp+1Ch+var_1C] edx +
add esi edi +
call sub_452AC0  +
mov [esi] eax +
mov edx [ebp+ebx+0] +
lea eax [ebx+4] +
test edx edx +
jnz loc_459AC4  +
mov dword ptr [edi+ebx] 0 +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_459AAA  +
xor ebx ebx +
jmp loc_459ADF  +
xor eax eax +
jmp loc_459AE8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_459B34  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_459B26  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_459B15  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_0] +
test esi esi +
jz loc_459DCC  +
mov ebx [edi] +
test ebx ebx +
jnz loc_459D9C  +
jmp loc_459DFD  +
cmp al 27h +
jz loc_459DB7  +
cmp al 22h +
jz loc_459DB7  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_459DCC  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_459DE0  +
movzx edx al +
movsx ebp al +
test byte ptr ds:word_4D0620[edx+edx] 40h +
jnz loc_459DB7  +
cmp al 5Ch +
jnz loc_459D80  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_459D88  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_459DCC  +
add edi 4 +
jmp loc_459D73  +
xor eax eax +
nop   +
jmp loc_459DD1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_60] 7D0h +
mov ecx [eax] +
lea esi [esi+0] +
lea ebx [ebp+1] +
cmp ebx ecx +
jge loc_459E58  +
mov eax [esp+78h+arg_4] +
lea esi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_459E60  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_459E37  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+78h+var_60] 1 +
jz loc_45A13A  +
lea edi [eax+1] +
lea eax [esp+78h+var_48] +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] edi +
call ds:_stati64  +
test eax eax +
js loc_45A0A0  +
movzx edx [esp+78h+var_42] +
and dx 0F000h +
cmp dx 4000h +
jz loc_45A107  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_74] offset aR_2 +
call fopen  +
test eax eax +
mov edi eax +
jz loc_45A0A0  +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45A088  +
mov [esp+78h+var_78] edi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_5C] eax +
jz loc_45A088  +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] edi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45A088  +
mov edx [esp+78h+var_5C] +
lea eax [edx+1] +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_58] edx +
call sub_4529F0  +
mov edx [esp+78h+var_58] +
mov [esp+78h+var_6C] edi +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_70] edx +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_5C] eax +
call fread  +
mov edx [esp+78h+var_58] +
cmp edx eax +
mov ecx eax +
jz loc_459F62  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_58] eax +
call ferror  +
mov ecx [esp+78h+var_58] +
test eax eax +
jnz loc_45A088  +
mov eax [esp+78h+var_5C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_459F9D  +
test byte ptr ds:word_4D0620[eax+eax] 40h +
jz loc_45A0B0  +
mov eax [esp+78h+var_5C] +
jmp loc_459F93  +
test byte ptr ds:word_4D0620[edx+edx] 40h +
jz loc_45A0B0  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_459F85  +
mov [esp+78h+var_78] 4 +
call sub_4529F0  +
mov dword ptr [eax] 0 +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_459A80  +
mov ecx [esp+78h+arg_4] +
xor edx edx +
mov [ecx] eax +
xor ecx ecx +
mov [esp+78h+var_54] eax +
mov [esp+78h+var_4C] ecx +
mov ecx [esp+78h+arg_0] +
mov eax edx +
mov [esp+78h+var_50] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+var_54] +
mov [esp+78h+var_78] eax +
call sub_452A70  +
mov ecx [esp+78h+arg_4] +
mov edx [esp+78h+var_50] +
mov [esp+78h+var_54] edx +
mov [ecx] eax +
mov ecx [esp+78h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+78h+var_70] ecx +
lea ecx [eax+esi+4] +
lea eax [eax+ebx*4] +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_78] eax +
call memmove  +
mov eax [esp+78h+arg_4] +
mov ecx [esp+78h+var_4C] +
mov ebx [esp+78h+var_58] +
add esi [eax] +
mov [esp+78h+var_70] ecx +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_78] esi +
call memcpy  +
mov eax [esp+78h+arg_0] +
mov edx [esp+78h+var_54] +
mov esi [esp+78h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [esi] eax +
mov [esp+78h+var_78] ebx +
mov ebx ebp +
call free  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_78] edi +
mov ebp ebx +
call fclose  +
mov eax [esp+78h+arg_0] +
mov ecx [eax] +
jmp loc_459E30  +
mov eax [esp+78h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_459E51  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call sub_459B40  +
mov edx [eax] +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov [esp+78h+var_50] edx +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_459A80  +
mov edx [esp+78h+var_50] +
mov ecx [esp+78h+arg_4] +
test edx edx +
mov [esp+78h+var_54] eax +
mov [ecx] eax +
jz loc_45A14A  +
mov eax [esp+78h+var_58] +
xor edx edx +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ecx ds:0[edx*4] +
jnz loc_45A0F2  +
jmp loc_459FD5  +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov eax [eax] +
mov [esp+78h+var_74] offset aSError@FileRef +
mov [esp+78h+var_70] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+78h+var_78] eax +
call fprintf  +
mov [esp+78h+var_78] 1 +
call sub_467670  +
mov eax [edx] +
mov [esp+78h+var_74] offset aSErrorTooMany@ +
mov [esp+78h+var_70] eax +
jmp loc_45A11E  +
xor ecx ecx +
jmp loc_459FD5  +
***
jmp loc_45A160  +
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_45A182  +
mov ecx [edx] +
test ecx ecx +
jz locret_45A180  +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_45A170  +
retn   +
***
retn   +
***
retn   +
***
jmp loc_47CD08  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [esp+18h+var_18] ebx +
call ds:_get_osfhandle  +
cmp eax 0FFFFFFFFh +
jz loc_45A250  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] eax +
call ds:SetHandleInformation  +
sub esp 0Ch +
test eax eax +
jz loc_45A250  +
test esi esi +
mov eax offset aWb +
mov edx offset aW_0 +
cmovz eax edx +
mov [ebp+arg_0] ebx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _fdopen  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [esp+18h+var_18] ebx +
call ds:_get_osfhandle  +
cmp eax 0FFFFFFFFh +
jz loc_45A2C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] eax +
call ds:SetHandleInformation  +
sub esp 0Ch +
test eax eax +
jz loc_45A2C0  +
test esi esi +
mov eax offset aRb +
mov edx offset aR_3 +
cmovz eax edx +
mov [ebp+arg_0] ebx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _fdopen  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
cmp [esp+arg_8] 1 +
mov edx [esp+arg_4] +
mov [esp+arg_4] 100h +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8080h +
mov [esp+arg_8] eax +
mov eax ds:_pipe +
mov [esp+arg_0] edx +
jmp eax  +
***
push ebx  +
sub esp 24h +
mov eax [ebp+arg_C] +
mov ebx [ebp+arg_4] +
test eax eax +
jz loc_45A32C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+28h+var_24] 0FFFFFFFFh +
mov [esp+28h+var_28] ebx +
call ds:WaitForSingleObject  +
sub esp 8 +
test eax eax +
jnz loc_45A390  +
lea eax [ebp+var_C] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ebx +
call ds:GetExitCodeProcess  +
sub esp 8 +
mov [esp+28h+var_28] ebx +
call ds:CloseHandle  +
mov eax [ebp+var_C] +
sub esp 4 +
cmp eax 3 +
jz loc_45A380  +
mov edx [ebp+arg_8] +
shl eax 8 +
and eax 0FFFFh +
mov [edx] eax +
xor eax eax +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov eax [ebp+arg_8] +
mov ebx [ebp+var_4] +
mov dword ptr [eax] 16h +
xor eax eax +
leave   +
retn   +
mov [esp+28h+var_28] ebx +
call ds:CloseHandle  +
mov eax [ebp+arg_18] +
mov dword ptr [eax] 0Ah +
mov eax [ebp+arg_14] +
sub esp 4 +
mov dword ptr [eax] offset aWaitforsingleo +
mov eax 0FFFFFFFFh +
jmp loc_45A37A  +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
mov eax ds:_close +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:__imp_tolower +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax] +
mov eax [esp+1Ch+arg_4] +
mov esi [eax] +
jmp loc_45A40B  +
mov ecx [esp+1Ch+var_10] +
test bl bl +
setnz bl  +
cmp al 3Dh +
mov eax 0 +
cmovz edx eax +
cmp cl dl +
jnz loc_45A445  +
test bl bl +
jz loc_45A445  +
add ebp 1 +
movsx eax byte ptr [ebp-1] +
add esi 1 +
mov [esp+1Ch+var_1C] eax +
call edi  +
mov ecx eax +
mov ebx eax +
movsx eax byte ptr [esi-1] +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call edi  +
cmp bl 3Dh +
movzx edx al +
jnz loc_45A3F0  +
xor ecx ecx +
xor ebx ebx +
cmp al 3Dh +
mov eax 0 +
cmovz edx eax +
cmp cl dl +
jz loc_45A407  +
add esp 1Ch +
movzx eax cl +
pop ebx  +
sub eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov [ebp+var_28] edx +
mov edx [ebp+arg_0] +
mov [ebp+var_20] eax +
mov [ebp+var_24] ecx +
test edx edx +
jz loc_45A9E5  +
mov edi [edx] +
test edi edi +
jz loc_45A9E5  +
xor ebx ebx +
lea esi [esi+0] +
add ebx 1 +
mov esi [edx+ebx*4] +
lea ecx ds:0[ebx*4] +
test esi esi +
jnz loc_45A490  +
lea eax [ecx+1Eh] +
and eax 0FFFFFFF0h +
call sub_470810  +
xor esi esi +
sub esp eax +
lea edi [esp+68h+var_31] +
and edi 0FFFFFFF0h +
mov [esp+68h+var_60] ecx +
mov [esp+68h+var_64] edx +
mov [esp+68h+var_68] edi +
mov [ebp+var_2C] edx +
call memcpy  +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] edi +
mov [esp+68h+var_5C] offset sub_45A3D0 +
mov [esp+68h+var_60] 4 +
call qsort  +
mov edx [ebp+var_2C] +
mov ecx 1 +
mov [ebp+var_1C] ebx +
mov [ebp+var_2C] edi +
mov edi ecx +
mov ebx edx +
mov eax [ebx+esi*4] +
add esi 1 +
mov [esp+68h+var_68] eax +
call strlen  +
cmp esi [ebp+var_1C] +
lea edi [edi+eax+1] +
jl loc_45A4F8  +
mov ecx edi +
mov ebx [ebp+var_1C] +
xor esi esi +
mov [esp+68h+var_68] ecx +
mov edi [ebp+var_2C] +
call sub_4529F0  +
mov [ebp+var_2C] eax +
mov edx eax +
mov eax [edi+esi*4] +
add esi 1 +
mov [esp+68h+var_68] edx +
mov [esp+68h+var_64] eax +
call sub_45C210  +
cmp esi ebx +
lea edx [eax+1] +
jl loc_45A526  +
mov byte ptr [eax+1] 0 +
mov esi [ebp+var_20] +
mov [esp+68h+var_68] esi +
call strlen  +
mov [esp+68h+var_64] 2Fh +
mov [esp+68h+var_68] esi +
mov edi eax +
call strchr  +
test eax eax +
jz loc_45A9F9  +
mov ebx offset unk_4D111E +
mov ecx ebx +
xor esi esi +
movzx eax byte ptr [ecx] +
test al al +
jz loc_45A5B1  +
cmp al 3Bh +
mov eax ecx +
jnz loc_45A588  +
jmp loc_45A871  +
cmp dl 3Bh +
jz loc_45A592  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45A583  +
mov byte ptr [ebp+var_1C] dl +
mov edx eax +
sub edx ecx +
cmp esi edx +
cmovb esi edx +
cmp byte ptr [ebp+var_1C] 3Bh +
jz loc_45A871  +
mov ecx eax +
movzx eax byte ptr [ecx] +
test al al +
jnz loc_45A578  +
lea eax [esi+edi+6] +
mov esi ebx +
mov [esp+68h+var_68] eax +
call sub_4529F0  +
mov [ebp+var_28] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45A9D1  +
cmp al 3Bh +
jnz loc_45A5DA  +
jmp loc_45A9D1  +
cmp al 3Bh +
jz loc_45A5E4  +
add esi 1 +
movzx eax byte ptr [esi] +
test al al +
jnz loc_45A5D6  +
mov eax [ebp+var_28] +
mov edi esi +
sub edi ebx +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] eax +
call memcpy  +
mov eax [ebp+var_28] +
cmp esi ebx +
lea ecx [eax+edi] +
mov eax ecx +
jz loc_45A60D  +
add eax 1 +
mov byte ptr [ecx] 5Ch +
mov ebx [ebp+var_20] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ebx +
call strcpy  +
xor eax eax +
mov ebx [ebp+var_28] +
cmp byte ptr [esi] 3Bh +
setz al  +
add esi eax +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45A63F  +
jmp loc_45AA3A  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45A650  +
cmp al 2Fh +
jnz loc_45A635  +
mov byte ptr [ebx] 5Ch +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45A63F  +
mov edi offset off_4D1154 +
mov eax offset a_com +
mov [ebp+var_1C] esi +
mov esi edi +
mov edi ebx +
mov ebx [ebp+var_28] +
jmp loc_45A673  +
add esi 4 +
mov eax [esi] +
test eax eax +
jz loc_45A9B7  +
mov byte ptr [edi] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call strcat  +
mov [esp+68h+var_50] 0 +
mov [esp+68h+var_54] 80h +
mov [esp+68h+var_58] 3 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 3 +
mov [esp+68h+var_64] 80000000h +
mov [esp+68h+var_68] ebx +
call ds:CreateFileA  +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_45A666  +
mov [esp+68h+var_68] eax +
mov eax ds:CloseHandle +
mov [ebp-34h] eax +
call eax  +
mov eax [ebp+var_24] +
mov edx [eax] +
sub esp 4 +
test edx edx +
jz loc_45AA4D  +
add eax 4 +
xor edi edi +
mov [ebp+var_20] eax +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_45A9D9  +
mov [ebp+var_1C] 0 +
xor eax eax +
jmp loc_45A710  +
movzx ecx byte ptr [edx+eax+1] +
lea ebx [eax+1] +
mov esi ebx +
test cl cl +
jz loc_45A760  +
mov eax ebx +
cmp cl 9 +
jz loc_45A71A  +
cmp cl 20h +
jnz loc_45A721  +
mov [ebp+var_1C] 1 +
cmp cl 22h +
jnz loc_45A700  +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFFh +
jz loc_45A748  +
cmp byte ptr [edx+eax-1] 5Ch +
jz loc_45A73D  +
jmp loc_45A748  +
cmp byte ptr [edx+ecx] 5Ch +
jnz loc_45A748  +
sub ecx 1 +
add edi 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_45A737  +
movzx ecx byte ptr [edx+eax+1] +
add edi 1 +
lea ebx [eax+1] +
mov [ebp+var_1C] 1 +
mov esi ebx +
test cl cl +
jnz loc_45A70E  +
mov ecx [ebp+var_1C] +
test ecx ecx +
jnz loc_45A88B  +
xor eax eax +
add [ebp+var_20] 4 +
lea edi [edi+esi+1] +
add edi eax +
mov eax [ebp+var_20] +
mov edx [eax-4] +
test edx edx +
jnz loc_45A6E8  +
mov [esp+68h+var_68] edi +
call sub_4529F0  +
mov esi [ebp+var_24] +
mov ebx [esi] +
mov [ebp+var_31+1] eax +
test ebx ebx +
jz loc_45AA45  +
lea edi [esi+4] +
mov [ebp+var_20] edi +
mov edi eax +
movzx eax byte ptr [ebx] +
test al 0DFh +
jz loc_45A996  +
cmp al 9 +
jz loc_45A996  +
cmp al 22h +
jz loc_45A996  +
xor edx edx +
jmp loc_45A7DA  +
mov ecx eax +
and ecx 0FFFFFFFDh +
cmp cl 20h +
jz loc_45A996  +
cmp al 9 +
jz loc_45A996  +
add edx 1 +
movzx eax byte ptr [ebx+edx] +
test al al +
jnz loc_45A7C4  +
mov [ebp+var_24] 0 +
mov edx [esi] +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_45A89B  +
mov eax 0FFFFFFFFh +
xor ebx ebx +
mov [ebp+var_1C] eax +
mov eax ebx +
mov ebx 0FFFFFFFFh +
jmp loc_45A832  +
movzx eax byte ptr [edx+eax] +
lea ecx [edi+1] +
mov [ebp+var_1C] ecx +
mov [edi] al +
mov edx [esi] +
lea eax [ebx+2] +
mov edi eax +
movzx ecx byte ptr [edx+ebx+2] +
add ebx 1 +
test cl cl +
jz loc_45A8A0  +
mov edi [ebp+var_1C] +
cmp cl 22h +
jnz loc_45A810  +
cmp ebx 0FFFFFFFFh +
mov ecx ebx +
jz loc_45A9A8  +
cmp byte ptr [edx+ebx] 5Ch +
mov edx edi +
jz loc_45A858  +
jmp loc_45A867  +
mov edi [esi] +
cmp byte ptr [edi+ecx] 5Ch +
jnz loc_45A867  +
sub ecx 1 +
add edx 1 +
cmp ecx 0FFFFFFFFh +
mov byte ptr [edx-1] 5Ch +
jnz loc_45A850  +
lea edi [edx+1] +
mov byte ptr [edx] 5Ch +
mov edx [esi] +
jmp loc_45A810  +
add eax 1 +
mov ecx eax +
jmp loc_45A5AA  +
sub eax 1 +
add edi 1 +
cmp eax 0FFFFFFFFh +
jz loc_45A891  +
cmp byte ptr [edx+eax] 5Ch +
jz loc_45A880  +
mov eax 2 +
jmp loc_45A76D  +
mov [ebp+var_1C] edi +
xor edi edi +
mov eax [ebp+var_24] +
test eax eax +
jz loc_45A8E0  +
lea eax [edi-1] +
cmp eax 0FFFFFFFFh +
jz loc_45A9F1  +
cmp byte ptr [edx+edi-1] 5Ch +
mov edx [ebp+var_1C] +
jz loc_45A8C8  +
jmp loc_45A8D7  +
mov ecx [esi] +
cmp byte ptr [ecx+eax] 5Ch +
jnz loc_45A8D7  +
sub eax 1 +
add edx 1 +
cmp eax 0FFFFFFFFh +
mov byte ptr [edx-1] 5Ch +
jnz loc_45A8C0  +
lea eax [edx+1] +
mov [ebp+var_1C] eax +
mov byte ptr [edx] 22h +
mov eax [ebp+var_1C] +
mov esi [ebp+var_20] +
add [ebp+var_20] 4 +
lea edi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [ebp+var_20] +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_45A7A5  +
mov esi [ebp+var_31+1] +
mov byte ptr [edi-1] 0 +
test esi esi +
jz loc_45AA9F  +
mov eax [ebp+arg_C] +
mov [esp+68h+var_4C] 0 +
mov [esp+68h+var_58] 1 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_44] eax +
mov eax [ebp+arg_8] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_48] eax +
mov eax [ebp+var_2C] +
mov [esp+68h+var_50] eax +
mov eax [ebp+arg_4] +
mov [esp+68h+var_54] eax +
mov eax [ebp+var_28] +
mov [esp+68h+var_68] eax +
call ds:CreateProcessA  +
sub esp 28h +
test eax eax +
jz loc_45AA7F  +
mov eax [ebp+arg_C] +
mov eax [eax+4] +
mov [esp+68h+var_68] eax +
call dword ptr [ebp-34h]  +
mov eax [ebp+var_28] +
sub esp 4 +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [ebp+var_2C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [ebp+arg_C] +
mov eax [eax] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [edi] 22h +
add edi 1 +
mov [ebp+var_24] 1 +
jmp loc_45A7EC  +
mov edx edi +
lea edi [edx+1] +
mov byte ptr [edx] 5Ch +
mov edx [esi] +
jmp loc_45A810  +
mov esi [ebp+var_1C] +
movzx eax byte ptr [esi] +
test al al +
jz loc_45AA55  +
mov ebx esi +
test al al +
mov esi ebx +
jnz loc_45A5CD  +
mov eax [ebp+var_28] +
jmp loc_45A60D  +
mov eax 2 +
xor esi esi +
jmp loc_45A76D  +
mov [ebp+var_2C] 0 +
jmp loc_45A543  +
mov edx [ebp+var_1C] +
jmp loc_45A8D7  +
mov eax [ebp+var_20] +
mov [esp+68h+var_64] 5Ch +
mov [esp+68h+var_68] eax +
call strchr  +
test eax eax +
jnz loc_45A568  +
mov ebx [ebp+var_28] +
test ebx ebx +
jz loc_45A568  +
mov [esp+68h+var_68] offset aPath_0 +
call getenv  +
test eax eax +
mov ebx eax +
jnz loc_45A56D  +
jmp loc_45A568  +
mov ebx [ebp+var_28] +
lea esi [esi+0] +
jmp loc_45A650  +
mov edi [ebp+var_31+1] +
jmp loc_45A8FE  +
xor edi edi +
nop   +
jmp loc_45A785  +
mov eax [ebp+var_28] +
xor ebx ebx +
mov [esp+68h+var_68] eax +
call free  +
mov eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call free  +
mov [esp+68h+var_68] ebx +
call free  +
mov eax 0FFFFFFFFh +
jmp loc_45A98E  +
mov eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call free  +
mov eax [ebp+var_28] +
mov [esp+68h+var_68] eax +
call free  +
mov eax 0FFFFFFFFh +
jmp loc_45A98E  +
mov ebx [ebp+var_28] +
jmp loc_45AA62  +
***
mov ecx [esp+arg_C] +
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
test ecx ecx +
jnz loc_45AAE6  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8301h +
mov [esp+arg_4] eax +
mov eax ds:_open +
mov [esp+arg_8] 180h +
mov [esp+arg_0] edx +
jmp eax  +
mov eax 0FFFFFFFFh +
retn   +
***
cmp [esp+arg_8] 1 +
mov edx [esp+arg_4] +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8000h +
mov [esp+arg_4] eax +
mov eax ds:_open +
mov [esp+arg_0] edx +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 24Ch +
mov eax [ebp+arg_4] +
mov ebx ds:_dup +
shr eax 3 +
xor eax 1 +
and eax 1 +
mov [ebp+var_231] al +
movzx eax al +
mov esi eax +
mov [ebp+var_228] eax +
mov eax [ebp+arg_14] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_18] +
mov [esp+258h+var_258] eax +
call ebx  +
test esi esi +
mov [ebp+var_220] eax +
jnz loc_45AD12  +
mov eax [ebp+var_21C] +
mov ebx ds:_get_osfhandle +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_22C] eax +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ebx  +
mov ebx eax +
mov esi eax +
lea eax [ebp+var_1B8] +
mov [ebp+var_1B8] 94h +
mov [esp+258h+var_258] eax +
call ds:GetVersionExA  +
mov [ebp+var_224] 0 +
sub esp 4 +
cmp [ebp+var_1A8] 1 +
jz loc_45AC2D  +
mov [esp+258h+var_240] 0 +
mov [esp+258h+var_244] 80h +
mov [esp+258h+var_248] 3 +
mov [esp+258h+var_24C] 0 +
mov [esp+258h+var_250] 2 +
mov [esp+258h+var_254] 40000000h +
mov [esp+258h+var_258] offset aConout +
call ds:CreateFileA  +
mov [ebp+var_224] 8000000h +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_45AC2D  +
mov [esp+258h+var_258] eax +
call ds:CloseHandle  +
mov [ebp+var_224] 0 +
sub esp 4 +
xor eax eax +
mov ecx 11h +
mov edx [ebp+arg_4] +
lea edi [ebp+var_1FC] +
stos   +
mov eax [ebp+var_22C] +
mov ecx [ebp+arg_C] +
shr edx 1 +
and edx 1 +
mov [ebp+var_1C4] eax +
lea eax [ebp+var_20C] +
mov [esp+258h+var_24C] eax +
lea eax [ebp+var_1FC] +
mov [esp+258h+var_250] eax +
mov eax [ebp+var_224] +
mov [ebp+var_1BC] ebx +
mov [ebp+var_1FC] 44h +
mov [ebp+var_1D0] 100h +
mov [esp+258h+var_254] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1C0] esi +
mov [esp+258h+var_258] eax +
mov eax [ebp+arg_8] +
call sub_45A460  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45AD91  +
mov eax [ebp+arg_14] +
test eax eax +
jnz loc_45AD80  +
cmp [ebp+arg_18] 1 +
jz loc_45ACC7  +
mov eax [ebp+arg_18] +
mov [esp+258h+var_258] eax +
call ds:_close  +
cmp [ebp+var_230] 2 +
jnz loc_45AD58  +
mov eax [ebp+var_21C] +
mov [esp+258h+var_258] eax +
call ds:_close  +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ds:_close  +
mov edx [ebp+var_228] +
test edx edx +
jz loc_45AD08  +
mov eax [ebp+arg_1C] +
mov [esp+258h+var_258] eax +
call ds:_close  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_1C] +
mov [esp+258h+var_258] eax +
call ebx  +
mov ebx ds:_get_osfhandle +
mov edi eax +
mov eax [ebp+var_21C] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_22C] eax +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [esp+258h+var_258] edi +
mov esi eax +
call ebx  +
mov ebx eax +
mov eax [ebp+arg_1C] +
mov [ebp+arg_1C] edi +
mov [ebp+var_230] eax +
jmp loc_45AB99  +
cmp [ebp+var_231] 0 +
jz loc_45ACD4  +
mov eax [ebp+var_230] +
mov [esp+258h+var_258] eax +
call ds:_close  +
jmp loc_45ACD4  +
mov eax [ebp+arg_14] +
mov [esp+258h+var_258] eax +
call ds:_close  +
jmp loc_45ACB5  +
mov eax ds:__imp__errno +
mov [ebp+var_23C] eax +
call eax  +
mov eax [eax] +
mov [esp+1ECh+var_1E8] 0 +
mov [ebp+var_238] eax +
mov eax [ebp+arg_8] +
mov [esp+1ECh+var_1EC] eax +
call ds:_open  +
test eax eax +
mov edi eax +
js loc_45ADF5  +
lea esi [ebp+var_121] +
mov [esp+1ECh+var_1E4] 108h +
mov [esp+1ECh+var_1E8] esi +
mov [esp+1ECh+var_1EC] eax +
call ds:_read  +
mov [esp+1ECh+var_1EC] edi +
mov [ebp+var_22C] eax +
call ds:_close  +
mov edx [ebp+var_22C] +
cmp edx 3 +
jg loc_45AE20  +
mov eax [ebp+var_23C] +
call eax  +
mov ecx [ebp+var_238] +
mov [eax] ecx +
mov eax [ebp+arg_28] +
mov dword ptr [eax] 2 +
mov eax [ebp+arg_24] +
mov dword ptr [eax] offset aCreateprocess +
jmp loc_45ACD4  +
mov [esp+1ECh+var_1E8] 0Ah +
mov [esp+1ECh+var_1EC] esi +
mov byte ptr [ebp+edx+var_121] 0 +
call strchr  +
test eax eax +
jz loc_45ADF5  +
mov edi offset asc_4D1131 +
mov ecx 2 +
cmps   +
jnz loc_45ADF5  +
lea esi [esi+0] +
mov byte ptr [eax] 0 +
sub eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jz loc_45AE50  +
and edx 0FFFFFFFBh +
cmp dl 9 +
jz loc_45AE50  +
movzx eax byte ptr [ebp+var_121+2] +
cmp al 20h +
jz loc_45AE80  +
cmp al 9 +
setz al  +
test al al +
lea edi [ebp+var_121+2] +
jz loc_45AE94  +
lea edi [ebp+var_121+2] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_45AE86  +
cmp al 20h +
jz loc_45AE86  +
mov eax edi +
jmp loc_45AE9B  +
mov byte ptr [eax] 5Ch +
mov [esp+1ECh+var_1E8] 2Fh +
mov [esp+1ECh+var_1EC] eax +
call strchr  +
test eax eax +
jnz loc_45AE98  +
mov eax [ebp+arg_C] +
mov esi [eax] +
test esi esi +
jz loc_45AF67  +
lea esi [esi+0] +
add eax 4 +
mov ecx [eax] +
test ecx ecx +
jnz loc_45AEC0  +
sub eax [ebp+arg_C] +
sar eax 2 +
lea eax ds:8[eax*4] +
lea ecx [eax-4] +
mov [ebp+var_22C] ecx +
mov [esp+1ECh+var_1EC] eax +
call sub_4529F0  +
mov ecx [ebp+var_22C] +
mov [eax] edi +
mov esi eax +
mov [esp+1ECh+var_1E4] ecx +
mov ecx [ebp+arg_C] +
lea eax [eax+4] +
mov [esp+1ECh+var_1EC] eax +
mov [esp+1ECh+var_1E8] ecx +
call memcpy  +
mov [esp+1ECh+var_1EC] edi +
mov [esp+1ECh+var_1E8] 5Ch +
call strrchr  +
lea ecx [ebp+var_20C] +
mov edx 1 +
mov [esp+1ECh+var_1E0] ecx +
lea ecx [ebp+var_1FC] +
mov [esp+1ECh+var_1E4] ecx +
mov ecx [ebp+var_224] +
mov [esp+1ECh+var_1E8] ecx +
mov ecx [ebp+arg_10] +
add eax 1 +
cmovz eax edi +
mov [esp+1ECh+var_1EC] ecx +
mov ecx esi +
call sub_45A460  +
mov [esp+1ECh+var_1EC] esi +
mov edi eax +
call free  +
cmp edi 0FFFFFFFFh +
jz loc_45ADF5  +
mov ebx edi +
jmp loc_45ACAA  +
mov [ebp+var_22C] 4 +
mov eax 8 +
jmp loc_45AEDF  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] offset off_4D1180 +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_45B1A0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+1Ch] +
cmp [ebx+2Ch] eax +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] ecx +
jz loc_45B076  +
mov edx [ebx+24h] +
shl eax 2 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_452A70  +
test byte ptr [ebx] 1 +
mov [ebx+24h] eax +
jnz loc_45B083  +
mov esi [ebx+2Ch] +
cmp esi [ebx+1Ch] +
jge loc_45B0A0  +
mov edi esi +
mov ebp 1 +
shl edi 4 +
mov eax [ebx+44h] +
mov edx [eax+10h] +
mov eax [ebx+28h] +
lea ecx [eax+edi] +
test eax eax +
mov eax 0 +
cmovnz eax ecx +
mov ecx [ebx+20h] +
mov ecx [ecx+esi*4] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+24h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_18] ecx +
mov ecx [esp+3Ch+arg_0] +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_2C] ecx +
call edx  +
test eax eax +
mov eax 0 +
cmovs ebp eax +
add esi 1 +
add edi 10h +
cmp esi [ebx+1Ch] +
jl loc_45B001  +
mov [ebx+2Ch] esi +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
mov edx [ebx+28h] +
shl eax 4 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_452A70  +
mov [ebx+28h] eax +
jmp loc_45AFEB  +
mov ebp 1 +
jmp loc_45B069  +
***
push ebx  +
sub esp 10h +
test ecx ecx +
jz loc_45B0E8  +
and edx 4 +
jz loc_45B0DF  +
mov eax [eax] +
test eax eax +
jz loc_45B152  +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_10] eax +
call sub_452BE0  +
mov ecx eax +
add esp 10h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [eax] +
test ebx ebx +
jz loc_45B170  +
mov [esp+10h+var_10] ebx +
call strlen  +
cmp eax 5 +
jle loc_45B111  +
lea esi [ebx+eax-6] +
mov edi offset aXxxxxx +
mov ecx 7 +
cmps   +
jz loc_45B160  +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_C] offset aXxxxxx +
call sub_452BE0  +
mov ebx eax +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ebx +
call sub_467690  +
test eax eax +
js loc_45B183  +
mov [esp+10h+var_10] eax +
call _close_0  +
add esp 10h +
mov ecx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] ecx +
call sub_45BDB0  +
mov ecx eax +
jmp loc_45B0DF  +
mov [esp+10h+var_10] ebx +
call sub_452AC0  +
mov ebx eax +
jmp loc_45B12B  +
mov [esp+10h+var_10] 0 +
call sub_45BDB0  +
mov ecx eax +
jmp loc_45B0DF  +
mov [esp+10h+var_10] ebx +
call free  +
xor ecx ecx +
jmp loc_45B0DF  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4Ch +
call sub_4529F0  +
mov edx [esp+1Ch+arg_0] +
mov [eax] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0FFFFFFFFh +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_C] +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov dword ptr [eax+40h] 0 +
mov [eax+44h] edx +
mov dword ptr [eax+48h] 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_0] +
mov eax [ebx+30h] +
test eax eax +
jz loc_45B26A  +
mov [esp+5Ch+var_5C] eax +
call fclose  +
cmp eax 0FFFFFFFFh +
jz loc_45B470  +
mov dword ptr [ebx+30h] 0 +
mov esi [ebx+10h] +
test esi esi +
jz loc_45B2A0  +
mov eax [esp+5Ch+arg_1C] +
xor edx edx +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebx +
call sub_45AFB0  +
test eax eax +
jnz loc_45B350  +
mov eax [esp+5Ch+var_18] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+0Ch] +
test esi esi +
js loc_45B450  +
test byte ptr [esp+5Ch+arg_4] 1 +
jz loc_45B396  +
mov edx [esp+5Ch+arg_14] +
xor ebp ebp +
test edx edx +
jz loc_45B6D7  +
test byte ptr [esp+5Ch+arg_4] 4 +
mov edi 0FFFFFFFFh +
jnz loc_45B5D0  +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
test edi edi +
js loc_45B830  +
test ebp ebp +
jnz loc_45B516  +
mov eax [esp+5Ch+arg_18] +
test eax eax +
jz loc_45B7BC  +
test byte ptr [esp+5Ch+arg_4] 40h +
jnz loc_45B480  +
cmp dword ptr [ebx+18h] 0FFFFFFFFh +
jz loc_45B5FE  +
mov eax [esp+5Ch+arg_1C] +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
xor ebp ebp +
mov [esp+5Ch+var_18] offset aPex_stderr_to_ +
mov dword ptr [eax] 0 +
mov eax edi +
not eax  +
shr eax 1Fh +
mov [esp+5Ch+var_1D] 0 +
and byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
jmp loc_45B4B7  +
mov eax [ebx+44h] +
mov ecx [ebx+10h] +
mov edx [eax] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] ebx +
shr eax 4 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
call edx  +
test eax eax +
mov esi eax +
js loc_45B6E1  +
mov ecx [ebx+14h] +
test ecx ecx +
jnz loc_45B5B6  +
test byte ptr [esp+5Ch+arg_4] 1 +
mov dword ptr [ebx+10h] 0 +
jnz loc_45B2B6  +
test byte ptr [ebx] 2 +
jnz loc_45B530  +
mov edx [esp+5Ch+arg_4] +
lea eax [ebx+8] +
mov ecx [esp+5Ch+arg_14] +
call sub_45B0B0  +
test eax eax +
mov edx eax +
jz loc_45B6FF  +
xor eax eax +
cmp [esp+5Ch+arg_14] edx +
setnz al  +
test byte ptr [ebx] 4 +
mov edi eax +
jz loc_45B56B  +
mov [ebx+10h] edx +
xor ebp ebp +
mov [ebx+14h] eax +
mov eax [ebx+44h] +
mov [esp+5Ch+var_28] edx +
mov ecx [eax+4] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] ebx +
shr eax 8 +
and eax 1 +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_4] +
shr eax 5 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
call ecx  +
mov edx [esp+5Ch+var_28] +
mov [esp+5Ch+arg_14] edx +
test eax eax +
mov edi eax +
jns loc_45B2E6  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov [esp-10h+arg_3B] 0 +
mov [esp-10h+arg_30] 0 +
mov [esp-10h+arg_34] 0FFFFFFFFh +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenTemporaryO +
mov [edx] eax +
jmp loc_45B4B7  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aPipelineAlread +
mov dword ptr [eax] 0 +
jmp loc_45B290  +
mov [esp+5Ch+var_18] offset aClosingPipelin +
jmp loc_45B290  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aBothErrnameAnd +
mov dword ptr [eax] 0 +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
xor ebp ebp +
and byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_1D] 0 +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
test esi esi +
jz loc_45B4CA  +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
cmp byte ptr [esp+5Ch+var_28] 0 +
jz loc_45B4E0  +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
cmp [esp+5Ch+var_1D] 0 +
jz loc_45B4FA  +
mov eax [ebx+44h] +
mov edi [esp+5Ch+var_24] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
test ebp ebp +
jz loc_45B290  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_45B290  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_45B2EE  +
mov eax [ebx+44h] +
mov edx [eax+14h] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 5 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
lea eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
js loc_45B73D  +
mov eax [esp+5Ch+var_14] +
xor ebp ebp +
mov edi [esp+5Ch+var_10] +
mov [ebx+0Ch] eax +
jmp loc_45B2DE  +
mov eax [ebx+3Ch] +
mov ecx [ebx+40h] +
mov [esp+5Ch+var_28] edx +
add eax 1 +
mov [ebx+3Ch] eax +
shl eax 2 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_452A70  +
mov edx [esp+5Ch+var_28] +
test edi edi +
mov ecx edx +
mov [ebx+40h] eax +
jnz loc_45B5A8  +
mov [esp+5Ch+var_5C] edx +
call sub_452AC0  +
mov edx [esp+5Ch+var_28] +
mov ecx eax +
mov eax [ebx+40h] +
mov edi [ebx+3Ch] +
mov [eax+edi*4-4] ecx +
xor eax eax +
jmp loc_45B3D3  +
mov eax [ebx+10h] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov dword ptr [ebx+14h] 0 +
jmp loc_45B384  +
mov eax [ebx+8] +
mov bp 1 +
mov edx [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_58] edx +
call sub_452BE0  +
mov [esp+5Ch+arg_14] eax +
jmp loc_45B2D7  +
mov eax [ebx+44h] +
mov edx [eax+4] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 9 +
and eax 1 +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_4] +
shr eax 7 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
mov [esp+5Ch+var_24] eax +
js loc_45B784  +
test byte ptr [ebx] 2 +
mov eax 0FFFFFFFFh +
jz loc_45B649  +
mov eax [ebx+0Ch] +
mov edx [ebx+44h] +
mov ecx [esp+5Ch+arg_1C] +
mov edx [edx+8] +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_38] ecx +
mov [esp+5Ch+var_44] edi +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_10] +
mov [esp+5Ch+var_48] esi +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
mov ebp eax +
jns loc_45B758  +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
and byte ptr [esp+5Ch+var_28] al +
mov eax [esp+5Ch+var_24] +
cmp eax 2 +
not eax  +
setnz [esp+5Ch+var_1D]  +
xor ebp ebp +
shr eax 1Fh +
and [esp+5Ch+var_1D] al +
jmp loc_45B4B7  +
mov edi 1 +
jmp loc_45B2D7  +
call ds:__imp__errno  +
mov esi [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenTemporaryF +
mov [esi] eax +
jmp loc_45B290  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aCouldNotCreate +
mov [esp+5Ch+arg_14] 0 +
mov dword ptr [eax] 0 +
mov [esp+5Ch+var_1D] 0 +
xor ebp ebp +
mov edi 0FFFFFFFFh +
mov byte ptr [esp+5Ch+var_28] 0 +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
jmp loc_45B4B7  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aPipe +
mov [edx] eax +
jmp loc_45B71F  +
mov eax [ebx+1Ch] +
mov edx [ebx+20h] +
add eax 1 +
mov [ebx+1Ch] eax +
shl eax 2 +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_452A70  +
mov edx [ebx+1Ch] +
mov [ebx+20h] eax +
mov [eax+edx*4-4] ebp +
xor eax eax +
jmp loc_45B294  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov [esp-10h+arg_3B] 0 +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenErrorFile +
mov [edx] eax +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz [esp-10h+arg_30]  +
xor ebp ebp +
and [esp-10h+arg_30] al +
jmp loc_45B4B7  +
cmp dword ptr [ebx+18h] 0FFFFFFFFh +
jnz loc_45B312  +
test byte ptr [esp+5Ch+arg_4] 40h +
mov [esp+5Ch+var_24] 2 +
jz loc_45B63C  +
mov eax [ebx+44h] +
mov edx [eax+14h] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 7 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
lea eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
js loc_45B812  +
mov eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_24] eax +
mov eax [esp+5Ch+var_14] +
mov [ebx+18h] eax +
jmp loc_45B63C  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aPipe +
mov [edx] eax +
jmp loc_45B495  +
mov edx [esp+5Ch+arg_14] +
jmp loc_45B3DB  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_14] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45B240  +
add esp 2Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov ecx [ebx+1Ch] +
test ecx ecx +
jnz loc_45B8AE  +
mov edx [ebx+0Ch] +
test edx edx +
jg loc_45B8AE  +
mov eax [ebx+10h] +
test eax eax +
jz loc_45B8C2  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+28h] +
lea eax [ebx+8] +
mov edx [esp+24h] +
call sub_45B0B0  +
test eax eax +
mov esi eax +
jz loc_45B912  +
test byte ptr [esp+24h] 20h +
mov edx offset aW_1 +
mov eax offset aWb_0 +
mov [esp] esi +
cmovz eax edx +
mov [esp+4] eax +
call fopen  +
test eax eax +
jz loc_45B916  +
xor edx edx +
cmp esi [esp+28h] +
mov [ebx+30h] eax +
mov [ebx+10h] esi +
setnz dl  +
mov [ebx+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_45B8BC  +
***
mov [esp] esi +
call free  +
xor eax eax +
jmp loc_45B8BC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edi [ebx+1Ch] +
test edi edi +
jg loc_45B954  +
test byte ptr [ebx] 2 +
jz loc_45B954  +
mov esi [ebx+0Ch] +
test esi esi +
jg loc_45B954  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_45B970  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+34h] +
xor ecx ecx +
mov eax [ebx+44h] +
test edx edx +
setnz cl  +
mov eax [eax+14h] +
mov esi ecx +
lea edx [esp+18h] +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_45B9C1  +
mov eax [ebx+44h] +
mov edx [esp+1Ch] +
mov eax [eax+1Ch] +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_45B9C5  +
mov edx [esp+18h] +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_45B962  +
***
mov esi ds:__imp__errno +
call esi  +
mov edx [esp+18h] +
mov edi [eax] +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
mov eax [ebx+44h] +
mov edx [esp+1Ch] +
mov eax [eax+0Ch] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
call esi  +
mov [eax] edi +
xor eax eax +
jmp loc_45B962  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov eax [ebx+10h] +
test eax eax +
jz loc_45BA63  +
lea eax [esp+1Ch] +
xor edx edx +
mov [esp] eax +
lea ecx [esp+18h] +
mov eax ebx +
call sub_45AFB0  +
test eax eax +
jz loc_45BAA7  +
mov edx [esp+34h] +
mov eax offset aRb_1 +
test edx edx +
mov edx offset aR_4 +
cmovz eax edx +
mov edx [ebx+10h] +
mov [esp+4] eax +
mov [esp] edx +
call fopen  +
mov ecx [ebx+14h] +
test ecx ecx +
mov [ebx+34h] eax +
jnz loc_45BA90  +
mov dword ptr [ebx+10h] 0 +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [ebx+0Ch] +
test eax eax +
jle loc_45BAB7  +
mov edx [ebx+44h] +
mov ecx [esp+34h] +
mov edx [edx+18h] +
mov [esp] ebx +
mov [esp+8] ecx +
mov [esp+4] eax +
call edx  +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov [ebx+34h] eax +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [ebx+10h] +
mov [esp] eax +
call free  +
mov eax [ebx+34h] +
mov dword ptr [ebx+14h] 0 +
jmp loc_45BA57  +
***
call ds:__imp__errno  +
mov edx [esp+1Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_45BA5E  +
***
xor eax eax +
jmp loc_45BA5E  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+18h] +
test eax eax +
jle loc_45BAF5  +
mov edx [ebx+44h] +
mov ecx [esp+24h] +
mov edx [edx+18h] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] ebx +
call edx  +
mov dword ptr [ebx+18h] 0FFFFFFFFh +
mov [ebx+38h] eax +
add esp 18h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_45BAF0  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [ebx+24h] +
test eax eax +
jz loc_45BB63  +
mov eax [ebx+1Ch] +
cmp eax esi +
jl loc_45BB42  +
mov eax [ebx+24h] +
shl esi 2 +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_1C] eax +
call memcpy  +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
sub esi eax +
shl esi 2 +
lea eax [edi+eax*4] +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] 0 +
mov [esp+20h+var_20] eax +
call memset  +
mov esi [ebx+1Ch] +
jmp loc_45BB20  +
lea eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] eax +
lea ecx [esp+20h+var_8] +
mov eax ebx +
call sub_45AFB0  +
test eax eax +
jnz loc_45BB19  +
jmp loc_45BB3B  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [ebx+24h] +
test eax eax +
jz loc_45BBF4  +
mov eax [ebx+28h] +
test eax eax +
jz loc_45BBF0  +
mov edx [ebx+1Ch] +
cmp edx esi +
jl loc_45BBC6  +
shl esi 4 +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edi +
call memcpy  +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
sub esi edx +
shl edx 4 +
shl esi 4 +
add edx edi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] 0 +
mov [esp+20h+var_20] edx +
call memset  +
mov esi [ebx+1Ch] +
mov eax [ebx+28h] +
jmp loc_45BBA7  +
xor eax eax +
jmp loc_45BBBF  +
lea eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] eax +
lea ecx [esp+20h+var_8] +
mov eax ebx +
call sub_45AFB0  +
test eax eax +
jnz loc_45BB99  +
jmp loc_45BBBF  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_45BC2F  +
mov edx [ebx+44h] +
mov edx [edx+0Ch] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] ebx +
call edx  +
mov eax [ebx+18h] +
test eax eax +
jle loc_45BC45  +
mov edx [ebx+44h] +
mov edx [edx+0Ch] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] ebx +
call edx  +
mov eax [ebx+34h] +
test eax eax +
jz loc_45BC54  +
mov [esp+24h+var_24] eax +
call fclose  +
mov eax [ebx+38h] +
test eax eax +
jz loc_45BC63  +
mov [esp+24h+var_24] eax +
call fclose  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_45BD00  +
mov edx [ebx+14h] +
test edx edx +
jnz loc_45BCF0  +
mov eax [ebx+20h] +
xor esi esi +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+24h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+28h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+3Ch] +
test eax eax +
jle loc_45BCCF  +
nop   +
mov eax [ebx+40h] +
mov eax [eax+esi*4] +
mov [esp+24h+var_24] eax +
call remove  +
mov eax [ebx+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+24h+var_24] eax +
call free  +
cmp [ebx+3Ch] esi +
jg loc_45BCA0  +
mov eax [ebx+40h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+44h] +
mov eax [eax+20h] +
test eax eax +
jz loc_45BCDE  +
mov [esp+24h+var_24] ebx +
call eax  +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp free  +
mov eax [ebx+10h] +
mov [esp+24h+var_24] eax +
call free  +
jmp loc_45BC75  +
and dword ptr [ebx] 0FFFFFFFEh +
mov edx 1 +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_24] eax +
lea ecx [esp+24h+var_C] +
mov eax ebx +
call sub_45AFB0  +
jmp loc_45BC6E  +
***
mov eax ds:dword_4D9524 +
test eax eax +
jz loc_45BD30  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_45BD68  +
mov eax ds:dword_4D9524 +
test eax eax +
jz loc_45BD9C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_4529F0  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_4D9524 eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_45BD58  +
mov eax ds:dword_4D9524 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_4D9524 0 +
mov [esp+1Ch+var_1C] offset a__3 +
call sub_452AC0  +
mov ds:dword_4D9524 eax +
jmp loc_45BD61  +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:dword_4D9588 +
test esi esi +
jnz loc_45BED0  +
xor eax eax +
mov edx offset unk_4D13C0 +
mov ecx [edx] +
cmp eax ecx +
lea ebx [ecx+1] +
cmovle eax ebx +
add edx 0Ch +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_45BEB7  +
mov ds:dword_4D9588 eax +
mov ebx ds:dword_4D958C +
test ebx ebx +
jz loc_45BF44  +
mov edx ds:dword_4D9580 +
test edx edx +
jz loc_45BEF0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx ds:dword_4D9588 +
lea edi ds:0[ebx*4] +
mov [esp+10h+var_10] edi +
call malloc  +
test eax eax +
mov esi eax +
mov ds:dword_4D9580 eax +
jz loc_45BEE4  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] eax +
call memset  +
mov edx offset unk_4D13C0 +
mov ds:dword_4D9584 ebx +
nop   +
mov ecx [edx] +
add edx 0Ch +
mov ebx [edx-4] +
mov eax [edx+4] +
mov [esi+ecx*4] ebx +
test eax eax +
jnz loc_45BF30  +
jmp loc_45BEE4  +
mov eax ds:dword_4D9588 +
lea ebx ds:0[eax*4] +
mov [esp+10h+var_10] ebx +
call malloc  +
test eax eax +
mov esi eax +
mov ds:dword_4D958C eax +
jz loc_45BEDA  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] eax +
call memset  +
mov ecx offset aSigint +
mov edx offset unk_4D13C0 +
mov ebx [edx] +
add edx 0Ch +
mov [esi+ebx*4] ecx +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_45BF85  +
jmp loc_45BEDA  +
***
sub esp 0Ch +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45BFC5  +
mov eax ds:dword_4D9588 +
cmp ds:dword_4D9584 eax +
cmovge eax ds:dword_4D9584 +
add esp 0Ch +
sub eax 1 +
retn   +
***
call sub_45BEA0  +
jmp loc_45BFAC  +
***
mov eax ds:dword_4D958C +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_45C030  +
test ebx ebx +
js loc_45C024  +
cmp ebx ds:dword_4D9584 +
jge loc_45C024  +
mov eax ds:dword_4D9580 +
test eax eax +
jz loc_45C002  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_45C002  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSignalD +
mov [esp+18h+var_18] offset unk_4D9560 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D9560 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
call sub_45BEA0  +
jmp loc_45BFE1  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4D958C +
mov ebx [esp+20h] +
test eax eax +
jz loc_45C0A0  +
test ebx ebx +
js loc_45C094  +
cmp ebx ds:dword_4D9588 +
jge loc_45C094  +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45C072  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_45C072  +
add esp 18h +
pop ebx  +
retn   +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aSignalD +
mov dword ptr [esp] offset unk_4D9540 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D9540 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_45BEA0  +
jmp loc_45C051  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
test ebp ebp +
jz loc_45C0FE  +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45C10A  +
mov esi ds:dword_4D9588 +
cmp esi 0 +
jle loc_45C0FE  +
mov edi ds:dword_4D958C +
xor ebx ebx +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*4] +
test eax eax +
jz loc_45C0F7  +
mov [esp+4] eax +
mov [esp] ebp +
call strcmp  +
test eax eax +
jz loc_45C100  +
add ebx 1 +
cmp ebx esi +
jnz loc_45C0E0  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_45BEA0  +
jmp loc_45C0C8  +
***
jmp loc_45C120  +
push ebx  +
sub esp 18h +
mov eax ds:dword_4D958C +
mov ebx [esp+20h] +
test eax eax +
jz loc_45C193  +
test ebx ebx +
jle loc_45C13D  +
cmp ebx ds:dword_4D9584 +
jl loc_45C162  +
mov eax [esp+24h] +
mov dword ptr [esp+4] offset aSUnknownSignal +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D9580 +
mov eax [eax+ebx*4] +
mov dword ptr [esp+4] offset aSS_4 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 18h +
pop ebx  +
retn   +
***
call sub_45BEA0  +
jmp loc_45C131  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_45C200  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call sub_4529F0  +
cmp esi ebx +
mov edi eax +
jbe loc_45C28A  +
sub esi ebx +
lea eax [eax+ebx] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov [esp+1Ch+arg_8] ebx +
mov [esp+1Ch+arg_4] ebp +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_45C56C  +
shl edx 3 +
cmp ebx edx +
ja loc_45C563  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_45C58B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_45C5A7  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_45C465  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_45C542  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_45C458  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_4D1480[eax] +
mov edx ds:dword_4D148C[eax] +
mov eax ds:dword_4D1480[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_45C52F  +
cmp eax 1 +
jz loc_45C5E1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_45C51A  +
cmp edx 1 +
jz loc_45C5E1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_45C511  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_45C465  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_45C5B1  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_45C40D  +
call sub_45C340  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_4D1480[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_45C41C  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_45C438  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_45C55B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_0] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_45C340  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_4D1480[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_45C6B3  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_45C6A0  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_45C6B3  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_45C340  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4D1480[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_45C74F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_45C740  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_45C74F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45C6C0  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset sub_452A20 +
mov [esp+2Ch+var_1C] offset sub_452A20 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45C6C0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset calloc +
mov dword ptr [esp+10h] offset calloc +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_45C6C0  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_45C8A1  +
sub ebx 1 +
js loc_45C8A1  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_45C887  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_45C88C  +
mov eax [edi+28h] +
test eax eax +
jz loc_45C8C0  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_45C8E2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_45C92B  +
lea esi [esi+0] +
sub ebx 1 +
js loc_45C92B  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_45C910  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_45C915  +
cmp edi 40000h +
jbe loc_45C980  +
mov eax 100h +
call sub_45C340  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4D1480[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_45C9B0  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_45C9C8  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_45C997  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_45C957  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_45C957  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_45C975  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_4D1480[eax] +
mov eax ds:dword_4D1480[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_45CB00  +
cmp edx 1 +
jz loc_45CB10  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_45CAF4  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_4D1480[eax] +
mov eax ds:dword_4D1480[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_45CB00  +
cmp ebp 1 +
jz loc_45CAB3  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45CAF2  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45CAB3  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_45CA84  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_45C9E0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_45CCD1  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_4D1480[eax] +
mov ecx ds:dword_4D148C[eax] +
mov eax ds:dword_4D1480[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_45CCFD  +
cmp eax 1 +
jz loc_45CC12  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_45CCC4  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_4D1480[edx] +
mov ecx ds:dword_4D148C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_4D1480[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_45CCA0  +
cmp ecx 1 +
jz loc_45CC90  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45CCC4  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45CC45  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_45CC45  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_45CCF9  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_45CD08  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_45CB6D  +
mov eax ebx +
call sub_45C3D0  +
test eax eax +
jz loc_45CCF9  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_45CB6D  +
xor eax eax +
jmp loc_45CCBC  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_45CCF9  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_45CB50  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_45CB50  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_45CDA7  +
mov edx [ebx+8] +
test edx edx +
jz loc_45CD9D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_45CD60  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_45CE57  +
add ebx 4 +
cmp esi ebx +
jbe loc_45CE69  +
cmp dword ptr [ebx] 1 +
jbe loc_45CE50  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_45CE50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_45CE80  +
***
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_45CEA4  +
cmp edx 20h +
ja loc_45CEB8  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_45CE30  +
mov eax ebx +
call sub_45C3D0  +
jmp loc_45CEA4  +
***
jmp loc_45CED0  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_45CF01  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz locret_45CF34  +
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_45CF20  +
retn   +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_45D126  +
cmp esi 0Bh +
jbe loc_45D04E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_45CF70  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_45D0BC  +
jmp ds:off_4D1444[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_45D04E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_45D135  +
mov ebx ecx +
mov ecx edi +
jmp loc_45D04E  +
***
cmp edx 4Fh +
ja loc_45D215  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4D1660[edx*4]  +
test ecx ecx +
jz loc_45D211  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jl loc_45D1E1  +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
add esi 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] esi +
mov [eax+8] ecx +
mov ecx [esp+8+arg_0] +
mov [eax] edx +
mov [eax+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_45D211  +
mov eax [esp+8+arg_0] +
test eax eax +
jnz loc_45D1D4  +
xor eax eax +
jmp loc_45D1DE  +
xor eax eax +
retn   +
***
mov esi [eax+14h] +
cmp esi [eax+18h] +
jge loc_45D247  +
mov ebx esi +
add esi 1 +
shl ebx 4 +
add ebx [eax+10h] +
test edx edx +
mov dword ptr [ebx+4] 0 +
mov [eax+14h] esi +
jz loc_45D247  +
test ecx ecx +
jnz loc_45D250  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx] 0 +
mov eax ebx +
mov [ebx+8] edx +
mov [ebx+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_45D270  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_45D2B0  +
test dl dl +
jnz loc_45D2B4  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_45D1C0  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_45D2A9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_45D293  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_45D2E7  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Fh +
ja loc_45D2E7  +
mov ecx [ebx] +
jmp ds:off_4D17A0[ecx*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_45D2D0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+8] +
jmp loc_45D2E3  +
mov ecx [ebx+8] +
cmp dword ptr [ecx] 5 +
jnz loc_45D303  +
add dword ptr [edi] 1 +
mov ecx [ebx+8] +
mov edx edi +
mov eax esi +
call sub_45D2C0  +
mov ebx [ebx+0Ch] +
jmp loc_45D2E3  +
add dword ptr [esi] 1 +
mov ecx [ebx+8] +
jmp loc_45D303  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_45D350  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+124h] 1 +
jmp loc_45D335  +
***
test edx edx +
js locret_45D3C9  +
test eax eax +
jnz loc_45D3BE  +
jmp loc_45D3C3  +
test edx edx +
jz loc_45D3C6  +
mov eax [eax+0Ch] +
sub edx 1 +
test eax eax +
jz locret_45D3D0  +
cmp dword ptr [eax] 2Fh +
jz loc_45D3B0  +
xor eax eax +
retn   +
mov eax [eax+8] +
retn   +
retn   +
***
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_45D3F8  +
cmp eax 4Ch +
jz loc_45D3F8  +
sub eax 4Eh +
cmp eax 1 +
jbe loc_45D3F8  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_45D444  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_45D453  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_45D420  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_45D411  +
xor eax eax +
jmp loc_45D437  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_45D493  +
push ebx  +
mov ebx edx +
shl ebx 4 +
add edx 1 +
add ebx [eax+10h] +
add eax 0Ch +
mov dword ptr [ebx+4] 0 +
mov [eax+8] edx +
mov dword ptr [ebx] 41h +
call sub_45D400  +
mov [ebx+8] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_45D4D0  +
cmp al 6Eh +
jz loc_45D4D4  +
lea eax [ebx+0Ch] +
call sub_45D400  +
add eax 1 +
js loc_45D4D4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_45D4D4  +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
xor eax eax +
jmp loc_45D4C6  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_45D4F0  +
xor eax eax +
pop ebx  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_45D4A0  +
test eax eax +
js loc_45D4EB  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_45D4EB  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [ebx+10h] +
mov dword ptr [edx+4] 0 +
mov [ebx+14h] ecx +
mov [edx+8] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_45D400  +
test eax eax +
mov esi eax +
jle loc_45D5E4  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_45D5E8  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_45D5A0  +
cmp esi 9 +
jle loc_45D587  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_45D5B0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_45D220  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_45D566  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_45D566  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_45D5C0  +
cmp al 5Fh +
jz loc_45D5C0  +
cmp al 24h +
jnz loc_45D587  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_45D587  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_45D220  +
jmp loc_45D592  +
xor eax eax +
jmp loc_45D595  +
xor eax eax +
lea esi [esi+0] +
jmp loc_45D592  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_45D63E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45D530  +
mov ecx edi +
mov edx 4Bh +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_45D616  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_45D670  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_45D6C0  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_45D69F  +
test cl cl +
jnz loc_45D69F  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_2 +
cmp dl [eax] +
jz loc_45D754  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_45D6A7  +
jmp loc_45D661  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_45D818  +
cmp dl 5Fh +
jz loc_45D750  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_45D713  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_45D661  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_45D728  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_45D730  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_45D6E4  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_45D661  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_45D6EB  +
xor edx edx +
mov eax ecx +
jmp loc_45D70B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_45D661  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_45D733  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_45D808  +
mov edi [eax+18h] +
xor esi esi +
mov edx [ebx+14h] +
mov [esp+1Ch+var_10] edi +
mov edi [ebx+18h] +
cmp edx edi +
jge loc_45D797  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov [esi+8] ebp +
mov ebp [esp+1Ch+var_10] +
mov dword ptr [esi] 18h +
mov [esi+0Ch] ebp +
mov [ebx+2Ch] esi +
test ecx ecx +
jz loc_45D810  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edi edx +
jle loc_45D7CE  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [eax] 18h +
mov [eax+8] esi +
mov [eax+0Ch] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_45D663  +
mov edx eax +
mov eax ebx +
call sub_45D600  +
test eax eax +
jz loc_45D661  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_45D663  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_45D663  +
mov edi [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_45D79A  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_45D7A4  +
cmp dl 5Fh +
jz loc_45D6D5  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_45D6DA  +
jmp loc_45D680  +
***
jmp sub_45D840  +
***
push ebx  +
mov ebx eax +
jnz loc_45D85E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_45D855  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_45D890  +
cmp edx 76h +
jnz loc_45D850  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_45D400  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_45D850  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_45D400  +
jmp loc_45D898  +
lea eax [ebx+0Ch] +
call sub_45D400  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_45D852  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_45D852  +
***
movzx edx byte ptr [eax] +
cmp dl 72h +
jz loc_45D8E3  +
cmp dl 56h +
jz loc_45D8E3  +
cmp dl 4Bh +
jz loc_45D8E3  +
cmp dl 44h +
jz loc_45D8D0  +
xor eax eax +
retn   +
movzx eax byte ptr [eax+1] +
lea edx [eax-77h] +
cmp dl 1 +
jbe loc_45D8E3  +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_45D8C7  +
mov eax 1 +
retn   +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_45D904  +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov esi 1 +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 5Fh +
jz loc_45D940  +
lea eax [ebx+0Ch] +
call sub_45D400  +
test eax eax +
js loc_45D950  +
cmp eax 9 +
jle loc_45D8FC  +
cmp esi 1 +
jle loc_45D8FC  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_45D901  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_45D901  +
add eax 2 +
mov si 2 +
mov [ebx+0Ch] eax +
jmp loc_45D915  +
xor eax eax +
jmp loc_45D901  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_45D977  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+0Ch] +
jmp sub_45D3A0  +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_45D9C5  +
cmp dword ptr [ebx] 4Bh +
ja loc_45D9B0  +
mov edx [ebx] +
jmp ds:off_4D1900[edx*4]  +
mov edx [ebx+8] +
mov eax esi +
call sub_45D990  +
test eax eax +
jnz loc_45D9C7  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_45D99D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+8] +
mov eax esi +
call sub_45D960  +
test eax eax +
jz loc_45D9C5  +
cmp dword ptr [eax] 2Fh +
jnz loc_45D9C5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_45DA73  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_45DA2C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_45DA73  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DA11  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+124h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_45DA14  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_4D1A30 +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_45DB20  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_45DAD2  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_45DB20  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45DAB7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_45DABA  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_45DB90  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_45DB60  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_45DB53  +
test ebx ebx +
jnz loc_45DBA2  +
cmp eax 2 +
mov bl 2 +
jbe loc_45DBA8  +
add ebx ebx +
cmp eax ebx +
ja loc_45DBA2  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_45DBC1  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_45DB4C  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_45DB53  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_88] edx +
jz loc_45DC0E  +
mov eax [ecx+4] +
cmp eax 1 +
jle loc_45DC23  +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 1 +
mov esi [ebx+128h] +
mov [ecx+4] eax +
lea edx [esp+98h+var_68] +
mov [esp+98h+var_68] ecx +
mov ecx [ebx+118h] +
mov [ebx+128h] edx +
mov [esp+98h+var_64] esi +
test ecx ecx +
jnz loc_45DCF4  +
mov edi [ebp+0] +
cmp edi 4Fh +
ja loc_45F736  +
jmp ds:off_4D1CA8[edi*4]  +
mov eax [ebx+11Ch] +
xor edi edi +
mov esi [ebp+8] +
test eax eax +
jnz loc_45DC7A  +
cmp dword ptr [esi] 5 +
jz loc_460D7C  +
mov eax [esi] +
cmp eax 23h +
jz loc_45DC91  +
cmp eax [ebp+0] +
jz loc_45DC91  +
cmp eax 24h +
jz loc_460D0F  +
mov esi ebp +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] ecx +
mov [esp+98h+var_54] esi +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [esi+8] +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
mov ecx [esp+98h+var_50] +
test ecx ecx +
jz loc_45FF7B  +
mov eax [esp+98h+var_58] +
test edi edi +
mov [ebx+114h] eax +
jz loc_45DCED  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
sub eax 1 +
mov [ebx+128h] esi +
mov [ebp+4] eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aClone +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
jmp loc_45DD49  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1CA3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FE45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DD26  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45DD29  +
mov edx [ebp+8] +
mov eax ebx +
call sub_45D990  +
test eax eax +
jz loc_46148E  +
xor edx edx +
jmp loc_45DDBA  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_45DDBF  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_46058D  +
cmp dword ptr [eax] 2Fh +
jz loc_45DDA5  +
mov eax [ebp+8] +
test edx edx +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jz loc_461482  +
mov eax [esp+98h+var_84] +
xor edi edi +
mov [esp+98h+var_78] ebp +
mov ebp [esp+98h+var_88] +
sub eax 1 +
mov [esp+98h+var_7C] eax +
mov ecx [esp+98h+var_80] +
mov edx ebp +
mov eax ebx +
mov [ebx+120h] edi +
call sub_45DBF0  +
cmp edi [esp+98h+var_7C] +
jge loc_45F748  +
mov eax [ebx+100h] +
mov esi offset asc_4D1BCF +
jmp loc_45DE34  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_4D1BCF+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F748  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DE11  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45DE14  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_45DEAA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BBAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F7B4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DE87  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45DE8A  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aAbi +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
jmp loc_45DF33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A38h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FE84  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DF10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45DF13  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_45DFA9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B9Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FC67  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DF86  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45DF89  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType +
jmp loc_45E023  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C9Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FC81  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E000  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45E003  +
mov eax [ebx+100h] +
mov esi offset aLambda +
jmp loc_45E099  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FACB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E076  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E079  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestruct +
jmp loc_45E113  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C7Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD55  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E0F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E0F3  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstruc +
jmp loc_45E189  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C62h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA72  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E166  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E169  +
mov eax [ebx+100h] +
mov esi offset aDecltype +
jmp loc_45E203  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C34h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA8C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E1E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E1E3  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1A30 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_45E26A  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_45FF27  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45E2CF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF27  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E2B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45E2B3  +
cmp dword ptr [ebx+100h] 0FFh +
mov edi [ebp+8] +
jz loc_460B9D  +
mov eax [ebx+100h] +
mov ecx edi +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_45DBF0  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx edi +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462970  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_45E3C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BE4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FB5D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E3A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E3A3  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_45E439  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BE4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FBB6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E416  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E419  +
mov edi [ebp+8] +
mov esi offset aOperator_0 +
mov eax [edi+8] +
mov [esp+98h+var_84] eax +
mov eax [ebx+100h] +
jmp loc_45E4B9  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1BDAh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45FBD0  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45E496  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45E499  +
mov ecx [ebp+8] +
mov esi [ebp+0Ch] +
test ecx ecx +
jz loc_45E514  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460B3E  +
lea edx [eax+1] +
mov ecx esi +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4609EE  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_45E589  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_460E3C  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_460870  +
mov edi offset asc_4D1BCF +
jmp loc_45E5D3  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_4D1BCF+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF43  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_45E5B0  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov edx [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_45E5B3  +
cmp word ptr [ebp+0Eh] 0 +
jnz loc_460493  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+8] offset off_4D27E0 +
jz loc_46059D  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_460E48  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+0Ch] 0 +
jz loc_460269  +
mov esi offset a_accum +
jmp loc_45E69A  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1BC7h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_46025D  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45E677  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45E67A  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ebp+0Ch] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_45DBF0  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_45E72D  +
mov edx [esp+98h+var_88] +
mov ecx ebp +
mov eax ebx +
call sub_461750  +
mov eax [esp+98h+var_58] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 3Ah +
jz loc_460301  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 38h +
jz loc_4603C5  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov [esp+98h+var_7C] eax +
mov eax [eax] +
mov [esp+98h+var_84] edi +
cmp eax 31h +
jz loc_4605F7  +
cmp eax 33h +
jnz loc_46171F  +
mov edx 28h +
mov eax ebx +
call sub_45D320  +
mov eax [esp+98h+var_7C] +
mov edx [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
call sub_45DBF0  +
mov edx 29h +
mov eax ebx +
call sub_45D320  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462A20  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov [ebx+114h] eax +
mov edi ecx +
mov [esp+98h+var_7C] ecx +
test edi edi +
mov [esp+98h+var_58] ecx +
mov ecx eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_4616F7  +
mov eax [edi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_4616F7  +
mov eax edi +
mov esi 1 +
mov [esp+98h+var_78] ebp +
mov [esp+98h+var_80] edx +
jmp loc_45E86D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_45E8BF  +
mov edx [eax+8] +
test edx edx +
jnz loc_45E8B9  +
cmp esi 3 +
ja loc_460947  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea edi [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [edi+4] ebp +
mov ebp [eax+8] +
mov [edi+8] ebp +
mov ebp [eax+0Ch] +
mov [edi+0Ch] ebp +
mov edi [esp+98h+var_80] +
mov [esp+edx+98h+var_58] ecx +
lea ecx [edi+edx] +
mov [ebx+114h] ecx +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_45E860  +
mov ebp [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov ecx [ebp+0Ch] +
call sub_45DBF0  +
mov eax [esp+98h+var_7C] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_45E929  +
cmp esi 1 +
jz loc_45E912  +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
jmp loc_45E8FD  +
sub esi 1 +
mov ecx [edi] +
mov eax ebx +
sub edi 10h +
mov edx [esp+98h+var_88] +
call sub_461750  +
cmp esi 1 +
jnz loc_45E8FA  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_462400  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
test byte ptr [esp+98h+var_88] 20h +
jnz loc_460551  +
cmp dword ptr [ebp+8] 0 +
jz loc_45E951  +
test byte ptr [esp+98h+var_88] 40h +
jz loc_46095A  +
mov eax [ebx+114h] +
lea ecx [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_462680  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+8] +
xor esi esi +
cmp dword ptr [eax] 27h +
jnz loc_45E9AC  +
mov eax [eax+8] +
mov esi [eax+10h] +
cmp esi 1 +
jb loc_45E9AC  +
cmp esi 6 +
jbe loc_4609BB  +
cmp esi 7 +
jnz loc_45E9AC  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 0 +
jnz loc_45E9AC  +
cmp dword ptr [eax+0Ch] 1 +
jz loc_46169C  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_460C0D  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+8] +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460BDB  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Dh +
jz loc_460FBF  +
cmp esi 8 +
jz loc_460F8D  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebx+100h] +
mov esi offset aJavaResource +
jmp loc_45EA78  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA58  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EA55  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EA58  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_45EAF3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1AD8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA3E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EAD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EAD3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_45EB69  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1AC2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA24  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EB46  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EB49  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_45EBE3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1AB1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FA0A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EBC0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EBC3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_45EC59  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A9Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F9F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EC36  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EC39  +
mov eax [ebx+100h] +
mov esi offset aConstructionVt +
jmp loc_45ECD3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A8Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F956  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45ECB0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45ECB3  +
mov eax [ebx+100h] +
mov esi offset aVttFor +
jmp loc_45ED49  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A72h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F93C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45ED26  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45ED29  +
mov eax [ebx+100h] +
mov esi offset aVtableFor +
jmp loc_45EDC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A69h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F922  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EDA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EDA3  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_460B04  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+0Ch] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_45EE97  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F7CE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EE74  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EE77  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_45EF13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F86C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EEF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EEF3  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_45EF89  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B5Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F8D4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EF66  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EF69  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_45F003  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F8A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EFE0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EFE3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_45F079  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B70h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F7E8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F056  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F059  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_45F0F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B15h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F886  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F0D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F0D3  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_45F169  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B40h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F8EE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F146  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F149  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_45F1E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1AEAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F8BA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F1C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F1C3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
test byte ptr [esp+98h+var_88] 4 +
mov edx [ebp+8] +
jnz loc_4601D7  +
mov edi [edx+4] +
mov ecx edi +
mov edi [edx] +
test ecx ecx +
jz loc_45DCF4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F28F  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4602F1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_45F270  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_45F273  +
mov ecx [ebx+114h] +
test ecx ecx +
mov eax ecx +
jz loc_45F304  +
mov edx [eax+8] +
test edx edx +
jnz loc_45F2FE  +
mov edx [eax+4] +
mov edx [edx] +
lea esi [edx-19h] +
cmp esi 2 +
ja loc_45F304  +
cmp edi edx +
jz loc_4607B1  +
mov eax [eax] +
test eax eax +
jnz loc_45F2E2  +
mov esi ebp +
xor edi edi +
jmp loc_45DC97  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_45DCF4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F34F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF33  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_45F330  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45F333  +
mov esi ebp +
xor edi edi +
mov ecx [ebx+114h] +
jmp loc_45DC97  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov [esp+98h+var_6C] eax +
mov eax [ebp+8] +
test eax eax +
mov [esp+98h+var_7C] eax +
jz loc_460D57  +
mov eax [ebx+110h] +
xor ecx ecx +
mov edi [esp+98h+var_7C] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_70] ebp +
mov ebp ecx +
mov [esp+98h+var_78] eax +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov esi edx +
xor eax eax +
mov [esp+98h+var_80] ebx +
mov [esi] eax +
mov eax [esp+98h+var_80] +
add ebp 1 +
mov ebx [edi] +
mov [esi+4] edi +
mov dword ptr [esi+8] 0 +
mov [eax+114h] esi +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_7C] esi +
mov [esi+0Ch] eax +
mov eax ebx +
call sub_45D3E0  +
test eax eax +
jz loc_46124A  +
mov edi [edi+8] +
test edi edi +
jz loc_460D4B  +
add esi 10h +
cmp ebp 4 +
jz loc_45FF8D  +
mov eax [esp+98h+var_7C] +
jmp loc_45F3F4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_45DBF0  +
and edi 4 +
jnz loc_45F765  +
mov eax [ebx+100h] +
mov esi offset asc_4D1A39 +
jmp loc_45F48F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1A3Bh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45F78F  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45F46C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_45F46F  +
test byte ptr [esp+98h+var_88] 4 +
jnz loc_460A20  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_45DCF4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F51F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FFAB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_45F500  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45F503  +
mov ecx [ebx+11Ch] +
test ecx ecx +
jz loc_460509  +
mov eax [ebx+100h] +
mov esi offset aAuto_0 +
jmp loc_45F5A4  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A5Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FFBB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F581  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45F584  +
test byte ptr [esp+98h+var_88] 4 +
mov esi [ebx+144h] +
mov edi [ebx+114h] +
mov [ebx+144h] ebp +
mov dword ptr [ebx+114h] 0 +
mov ecx [ebp+8] +
jz loc_45F620  +
mov eax [ecx] +
test eax eax +
jnz loc_45F620  +
cmp dword ptr [ecx+0Ch] 6 +
jz loc_460FD0  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_460E8B  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460C79  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+0Ch] +
call sub_45DBF0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_460E7A  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460C47  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov [ebx+144h] esi +
mov eax [ebp+4] +
mov [ebx+114h] edi +
mov esi [esp+98h+var_64] +
jmp loc_45DCF4  +
mov edi [ebp+8] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_460091  +
mov esi offset aThis +
jmp loc_45F6F0  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1C3Dh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4600FD  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45F6CD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45F6D0  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
add edi 1 +
cmp edi [esp+98h+var_84] +
jnz loc_45DDE7  +
mov ebp [esp+98h+var_78] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_460F19  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov esi [ebp+0Ch] +
cmp dword ptr [esi] 46h +
jz loc_460B70  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
jmp loc_45F826  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B76h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F908  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F803  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F806  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aIn +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
jmp loc_45F990  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1A90h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45F9D6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F971  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F974  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460909  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [ebp+4] +
jmp loc_45DCF4  +
add dword ptr [ebx+11Ch] 1 +
mov eax ebx +
mov ecx [ebp+8] +
mov esi offset asc_4D1C89 +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
sub dword ptr [ebx+11Ch] 1 +
jmp loc_45FB17  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C8Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD6F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FAF4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45FAF7  +
mov eax [ebx+144h] +
test eax eax +
jz loc_45FB7F  +
mov edx [ebx+110h] +
mov [esp+98h+var_54] eax +
mov [esp+98h+var_58] edx +
lea edx [esp+98h+var_58] +
mov [ebx+110h] edx +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 4 +
jz loc_4607CB  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45DBF0  +
mov edi [ebx+144h] +
test edi edi +
jz loc_45FBAA  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [edi+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_4605A8  +
mov edi [esp+98h+var_84] +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
movzx eax al +
sub edi eax +
jz loc_4610AC  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45FC21  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF6F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FC02  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45FC05  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1A30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_45FCA5  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_45FEF5  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45FD0F  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45FEFB  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45FCF0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45FCF3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+0Ch] +
mov [esp+98h+var_94] offset unk_4D1A30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_45FD93  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_45FEC3  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45FDFF  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45FEC9  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45FDE0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45FDE3  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460CAB  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4608D7  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_460CDD  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4608A5  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov edi [ebx+124h] +
call sub_45DBF0  +
cmp edi [ebx+124h] +
jz loc_4605D6  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_461750  +
jmp loc_45DCD5  +
mov ebx [esp+98h+var_80] +
mov esi [esp+98h+var_74] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1A30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov edi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_45FFE1  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+98h+var_84] +
jz loc_460085  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
lea edi [esi+edx] +
jmp loc_46003F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460085  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_460024  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_460027  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi offset aParm +
jmp loc_4600B7  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1C44h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_460109  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460098  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_46009B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edi +
mov edi esi +
mov [esp+98h+var_94] offset unk_4D1A30 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_4601A1  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_46015B  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4601A1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460140  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_460143  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_460F53  +
mov eax [ebx+100h] +
mov esi [esp+98h+var_64] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edi [edx+0Ch] +
mov ecx edi +
mov edi [edx+8] +
test ecx ecx +
jz loc_45DCF4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_460216  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4602E1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_4601F7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_4601FA  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi offset a_fract +
jmp loc_46028F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1BCEh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4602D5  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460270  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_460273  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [eax+0Ch] +
cmp dword ptr [eax] 3Bh +
jnz loc_45E74F  +
mov ecx [ebp+8] +
lea eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_462B10  +
test eax eax +
jnz loc_460F0D  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov [esp+98h+var_80] ecx +
mov esi [eax+8] +
mov [esp+98h+var_84] esi +
mov esi [eax+0Ch] +
mov [esp+98h+var_94] offset aQu +
mov eax [edi+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [esp+98h+var_80] +
test eax eax +
jz loc_4614D6  +
mov edx offset aNew +
mov eax ebx +
mov [esp+98h+var_80] ecx +
call sub_45D9F0  +
mov ecx [esp+98h+var_80] +
cmp dword ptr [ecx+8] 0 +
jz loc_460395  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_462A20  +
mov edx 20h +
mov eax ebx +
call sub_45D320  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
test esi esi +
jz loc_46172C  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_462A20  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_460E9C  +
mov edx [esp+98h+var_88] +
lea eax [ebp+0Ch] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_462B10  +
test eax eax +
jnz loc_460F0D  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_46137B  +
mov [esp+98h+var_94] offset aCl +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [ebp+0Ch] +
test eax eax +
jnz loc_460424  +
mov eax [ecx+8] +
cmp dword ptr [eax] 3 +
jz loc_461573  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462A20  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov edi [eax] +
mov [esp+98h+var_94] offset aIx +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jz loc_461448  +
mov [esp+98h+var_94] offset aCl +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jnz loc_461520  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_462A20  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_461417  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_4604C3  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1BC0h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45E624  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4604A0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_4604A3  +
lea edx [ebp+8] +
mov eax ebx +
call sub_45D960  +
test eax eax +
jz loc_4613BB  +
cmp dword ptr [eax] 2Fh +
jz loc_4613A8  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [ebp+4] +
mov [ebx+110h] esi +
mov esi [esp+98h+var_64] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_88] +
lea ecx [ebp+0Ch] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_462680  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_461476  +
mov edx esi +
mov eax ebx +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebp+8] +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jmp loc_45DDD2  +
mov eax [ebx+100h] +
jmp loc_45E665  +
cmp edx 0FFh +
jz loc_4613DD  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [edi+4] +
jmp loc_45FBE1  +
cmp [ebx+100h] esi +
jnz loc_45FF63  +
sub esi 2 +
mov eax [ebp+4] +
mov [ebx+100h] esi +
mov esi [esp+98h+var_64] +
jmp loc_45DCF4  +
mov eax [esp+98h+var_7C] +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_94] offset aAd +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_80] eax +
call strcmp  +
test eax eax +
jnz loc_460625  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 3 +
jz loc_4614B4  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 38h +
jz loc_46154A  +
mov esi [esp+98h+var_80] +
test esi esi +
jz loc_460662  +
mov edi offset aSz +
mov ecx 3 +
cmps   +
jz loc_4606E7  +
mov esi [esp+98h+var_80] +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_46101A  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462970  +
cmp [esp+98h+var_80] 0 +
jz loc_45E7DD  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aGs +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jz loc_461091  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aSt +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jnz loc_45E7DD  +
mov edx 28h +
mov eax ebx +
call sub_45D320  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax ebx +
mov edx 29h +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [esp+98h+var_84] +
mov eax ebx +
call sub_45D990  +
xor edx edx +
test eax eax +
jnz loc_460711  +
jmp loc_460716  +
mov esi [eax+8] +
test esi esi +
jz loc_460716  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_460716  +
cmp dword ptr [eax] 2Fh +
jz loc_460700  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edx +
mov edi esi +
mov [esp+98h+var_94] offset unk_4D1A30 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_46093B  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_460770  +
add esi 1 +
lea edx [eax+1] +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_46093B  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460751  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov ecx [esp+98h+var_88] +
add dword ptr [ebx+124h] 1 +
jmp loc_460751  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
cmp dword ptr [ebx+144h] 0 +
jz loc_4607EC  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46121B  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4611E1  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [ebp+8] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45DBF0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_4611B2  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461178  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
jmp loc_45FBAA  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45E5A5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_45FF07  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FEA3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FAAB  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ebp [esp+98h+var_78] +
mov dword ptr [ebx+118h] 1 +
jmp loc_45E929  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_45DBF0  +
mov eax [esp+98h+var_58] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jnz loc_4613D1  +
mov edx 20h +
mov eax ebx +
call sub_45D320  +
jmp loc_45E951  +
mov ecx [ebp+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_45E9AC  +
cmp edi 3Dh +
jz loc_461678  +
mov edx [esp+98h+var_88] +
mov eax ebx +
sub esi 2 +
call sub_45DBF0  +
cmp esi 4 +
ja loc_46166C  +
jmp ds:off_4D1DE8[esi*4]  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45E557  +
mov edi [ebp+8] +
mov ecx [ebp+0Ch] +
add ecx edi +
cmp edi ecx +
jnb loc_45DCF4  +
mov [esp+98h+var_88] ebp +
mov ebp ecx +
jmp loc_460A55  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add edi 1 +
cmp ebp edi +
jbe loc_460AF4  +
mov eax ebp +
sub eax edi +
cmp eax 3 +
movzx eax byte ptr [edi] +
jle loc_460A65  +
cmp al 5Fh +
jz loc_460AAA  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jnz loc_460A38  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
xor edx edx +
mov eax [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_460A38  +
cmp byte ptr [edi+1] 5Fh +
jnz loc_460A65  +
cmp byte ptr [edi+2] 55h +
jnz loc_460A65  +
lea esi [edi+3] +
cmp ebp esi +
jbe loc_460A65  +
xor ecx ecx +
jmp loc_460AD7  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add esi 1 +
add ecx eax +
cmp esi ebp +
jz loc_461738  +
movzx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_460AC1  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_460D66  +
movsx eax dl +
sub eax 37h +
jmp loc_460AC7  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45EE19  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45E525  +
mov edx offset aDefaultArg +
mov eax ebx +
call sub_45D9F0  +
mov eax [esi+0Ch] +
lea edx [eax+1] +
mov eax ebx +
call sub_45DA80  +
mov edx offset asc_4D1A4A +
mov eax ebx +
call sub_45D9F0  +
mov esi [esi+8] +
jmp loc_45F79B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov esi [esp+98h+var_64] +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45E328  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45E9F5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45E9BC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45F689  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45F649  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FE64  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_45FED5  +
mov eax [ebx+114h] +
mov ecx [esi+8] +
mov esi ebp +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
test ecx ecx +
mov [esp+98h+var_4C] eax +
jnz loc_45DCBE  +
jmp loc_45DCBB  +
mov esi [esp+98h+var_74] +
mov ebx [esp+98h+var_80] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
jmp loc_45FFA3  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_461143  +
movsx eax dl +
sub eax 57h +
jmp loc_460AC7  +
mov eax [ebx+130h] +
mov ecx [ebx+12Ch] +
test eax eax +
mov [esp+98h+var_80] eax +
jle loc_460DB7  +
cmp esi [ecx] +
jz loc_4610B8  +
lea eax [ecx+8] +
jmp loc_460DAE  +
mov ecx eax +
add eax 8 +
cmp esi [eax-8] +
jz loc_4610B8  +
add edi 1 +
cmp edi [esp+98h+var_80] +
jnz loc_460DA0  +
mov eax [ebx+130h] +
cmp eax [ebx+134h] +
jge loc_4616D0  +
mov edx [ebx+12Ch] +
lea edi [edx+eax*8] +
add eax 1 +
mov [ebx+130h] eax +
add edi 4 +
mov eax [ebx+110h] +
mov [edi-4] esi +
jmp loc_460E19  +
mov ecx [ebx+13Ch] +
cmp ecx [ebx+140h] +
jge loc_4616D0  +
mov edx [ebx+138h] +
lea edx [edx+ecx*8] +
add ecx 1 +
mov [ebx+13Ch] ecx +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov [edi] edx +
mov eax [eax] +
mov edi edx +
test eax eax +
jnz loc_460DE9  +
mov dword ptr [edi] 0 +
cmp dword ptr [ebx+118h] 0 +
jz loc_4610D5  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_45E651  +
mov edx 20h +
mov eax ebx +
call sub_45D320  +
jmp loc_45F678  +
mov edx 20h +
mov eax ebx +
call sub_45D320  +
jmp loc_45F638  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_460EB2  +
sub eax 72h +
cmp al 1 +
ja loc_4603D7  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_462970  +
mov edx 3Ch +
mov eax ebx +
call sub_45D320  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_45DBF0  +
mov edx offset asc_4D1CA4 +
mov eax ebx +
call sub_45D9F0  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45DBF0  +
mov eax ebx +
mov edx 29h +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45F775  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4601B1  +
mov edx 5Bh +
mov eax ebx +
call sub_45D320  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax ebx +
mov edx 5Dh +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx 2Dh +
mov eax ebx +
call sub_45D320  +
jmp loc_45EA13  +
mov [esp+98h+var_90] 6 +
mov [esp+98h+var_94] offset aJarray +
mov eax [ecx+8] +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_98] eax +
call strncmp  +
mov ecx [esp+98h+var_84] +
test eax eax +
jnz loc_45F620  +
mov edx [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+0Ch] +
call sub_45DBF0  +
mov edx offset asc_4D1A55 +
mov eax ebx +
call sub_45D9F0  +
jmp loc_45F69D  +
mov edi [esp+98h+var_84] +
cmp dword ptr [edi] 2Fh +
jnz loc_46107A  +
mov eax [edi+8] +
xor esi esi +
test eax eax +
jnz loc_461046  +
jmp loc_46107C  +
add esi 1 +
mov edi [edi+0Ch] +
test edi edi +
jz loc_46107C  +
cmp dword ptr [edi] 2Fh +
jnz loc_46107C  +
mov eax [edi+8] +
test eax eax +
jz loc_46107C  +
cmp dword ptr [eax] 4Ah +
jnz loc_461030  +
mov edx [eax+8] +
mov eax ebx +
call sub_45D990  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_461071  +
jmp loc_461076  +
mov ecx [edx+8] +
test ecx ecx +
jz loc_461076  +
mov edx [edx+0Ch] +
add eax 1 +
test edx edx +
jz loc_461076  +
cmp dword ptr [edx] 2Fh +
jz loc_461060  +
add esi eax +
jmp loc_461033  +
xor esi esi +
mov edx esi +
mov eax ebx +
call sub_45DA80  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax edx +
jmp loc_4610C7  +
mov eax [eax+4] +
test eax eax +
jz loc_461129  +
mov edi [eax] +
cmp esi edi +
jz loc_4610D5  +
cmp ebp edi +
jnz loc_4610C0  +
cmp eax edx +
jz loc_4610C0  +
xor edi edi +
lea edx [esi+8] +
mov eax ebx +
call sub_45D960  +
test eax eax +
mov esi eax +
jz loc_461105  +
cmp dword ptr [eax] 2Fh +
jnz loc_45DC7A  +
mov edx [ebx+120h] +
call sub_45D3A0  +
test eax eax +
mov esi eax +
jnz loc_45DC7A  +
test edi edi +
jz loc_461113  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [ebx+110h] +
mov edi 1 +
mov [esp+98h+var_84] eax +
mov eax [ecx+4] +
mov [ebx+110h] eax +
jmp loc_4610D7  +
cmp ebp esi +
mov eax 5Fh +
jbe loc_460A65  +
cmp dl 5Fh +
jnz loc_460A65  +
cmp ecx 0FFh +
mov eax edx +
ja loc_460A65  +
movsx edx cl +
mov eax ebx +
call sub_45D320  +
mov edi esi +
jmp loc_460A4A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460851  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4615D2  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_460841  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460809  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461598  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4607F9  +
mov [esp+98h+var_7C] edi +
mov edi ebx +
mov esi [esp+98h+var_74] +
cmp edi 4 +
mov ebx [esp+98h+var_80] +
mov [esp+98h+var_74] ebp +
mov ebp [esp+98h+var_70] +
jz loc_46135C  +
cmp edi 2 +
jnz loc_4612E7  +
mov eax [esp+98h+var_7C] +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 46h +
jz loc_46168C  +
mov eax [esp+98h+var_74] +
lea edi [eax-1] +
shl edi 4 +
add edi [esp+98h+var_84] +
jmp loc_4612D4  +
cmp [esp+98h+var_74] 4 +
jz loc_460D57  +
mov eax [edi+4] +
mov ecx [esp+98h+var_78] +
mov [edi+10h] edi +
mov [edi+4] edx +
mov [edi+14h] eax +
mov eax [edi+8] +
add [esp+98h+var_74] 1 +
mov dword ptr [edi+8] 0 +
mov [edi+18h] eax +
mov eax [edi+0Ch] +
mov [edi+0Ch] ecx +
mov [edi+1Ch] eax +
lea eax [edi+10h] +
mov [ebx+114h] eax +
mov edx [edx+8] +
mov edi eax +
mov eax [edx] +
mov [esp+98h+var_80] edx +
call sub_45D3E0  +
mov edx [esp+98h+var_80] +
test eax eax +
jnz loc_461290  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax] 4 +
jnz loc_461308  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_74] +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
cmp dword ptr [edi] 0 +
jz loc_46132D  +
sub edi 10h +
test esi esi +
jz loc_461349  +
sub esi 1 +
jmp loc_46131C  +
mov eax ebx +
mov edx 20h +
call sub_45D320  +
mov ecx [edi-4] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_461750  +
jmp loc_461321  +
mov eax [esp+98h+var_6C] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
jmp loc_45FFA3  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] eax +
jmp loc_4612E7  +
mov edx [eax+8] +
cmp dword ptr [edx+8] 1 +
jnz loc_4603FC  +
mov edx [edx+4] +
cmp byte ptr [edx] 3Eh +
jnz loc_4603FC  +
mov eax ebx +
mov edx 28h +
call sub_45D320  +
mov eax [ebp+8] +
jmp loc_4603FC  +
mov edx [ebx+120h] +
call sub_45D3A0  +
test eax eax +
jnz loc_460524  +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4605B4  +
mov eax [eax+8] +
cmp dword ptr [eax+8] 1 +
jnz loc_460487  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_460487  +
mov eax ebx +
mov edx 29h +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax ebx +
mov edx 5Bh +
call sub_45D320  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45DBF0  +
mov edx 5Dh +
mov eax ebx +
call sub_45D320  +
jmp loc_46047B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462A20  +
mov eax ebx +
mov edx offset a___ +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax [eax+8] +
cmp dword ptr [eax] 1 +
jnz loc_460632  +
mov edi [esp+98h+var_84] +
mov edx [edi+0Ch] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_84] eax +
jmp loc_460632  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_462A20  +
mov ecx edi +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_462970  +
mov ecx [esp+98h+var_84] +
mov edx edi +
mov eax ebx +
call sub_462A20  +
mov edx offset asc_4D1BFD +
mov eax ebx +
call sub_45D9F0  +
mov ecx esi +
mov eax ebx +
mov edx edi +
call sub_462A20  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_462970  +
jmp loc_46046A  +
mov eax ebx +
mov edx offset aLl +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edi [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
mov edx edi +
call sub_462A20  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_462970  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 29h +
jz loc_461585  +
mov dword ptr [ebx+118h] 1 +
mov ecx [eax+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462A20  +
jmp loc_460432  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_46122B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4611C2  +
mov eax ebx +
mov edx offset aUl +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax ebx +
mov edx 6Ch +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax ebx +
mov edx 75h +
call sub_45D320  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax ebx +
mov edx offset aUll +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov edx 2Dh +
mov eax ebx +
call sub_45D320  +
mov ecx [ebp+0Ch] +
jmp loc_4609D0  +
mov edx [edx+8] +
test edx edx +
jz loc_460D57  +
jmp loc_46127E  +
cmp edi 3Ch +
nop   +
jnz loc_45E9AC  +
mov eax [eax+8] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_4616DF  +
cmp al 31h +
jnz loc_45E9AC  +
mov eax ebx +
mov edx offset aTrue +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov dword ptr [ebx+118h] 1 +
jmp loc_460E23  +
mov eax ebx +
mov edx offset aFalse +
call sub_45D9F0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45DBF0  +
mov eax [esp+98h+var_7C] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_45E912  +
jmp loc_45E929  +
mov [esp+98h+var_80] 0 +
jmp loc_460662  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45DCF4  +
mov eax 5Fh +
jmp loc_460A65  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 4Ch +
ja loc_4617F3  +
jmp ds:off_4D1E60[eax*4]  +
mov eax [ebx+100h] +
mov esi offset aThrow +
jmp loc_4617A5  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 4D1E39h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461E17  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_461780  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461783  +
mov ecx [ecx+8] +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45DBF0  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_461835  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461812  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461815  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_4618B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E0Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461890  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461893  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_461933  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E16h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461910  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461913  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_461EC4  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_461A46  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_461EFB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_461A76  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461E85  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+0Ch] +
jmp loc_4617F3  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_461A65  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462025  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_461A65  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461F70  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset asc_4D1E3A +
jmp loc_461A9F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E3Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461A80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461A83  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_461B15  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E45h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461AF2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461AF5  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_461B93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E50h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461B70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461B73  +
cmp byte ptr [ebx+104h] 28h +
jz loc_461C0E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461FE6  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax ebx +
mov esi offset asc_4D1E51 +
mov edx [esp+2Ch+var_14] +
call sub_45DBF0  +
mov eax [ebx+100h] +
jmp loc_461C53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E54h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461C30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461C33  +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_461CD5  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4D1E5Fh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461E80  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_461CB0  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461CB3  +
mov eax [ebx+100h] +
mov esi offset aTransaction_sa +
jmp loc_461D53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1E28h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461A65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461D30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461D33  +
mov eax [ebx+100h] +
mov esi offset aNoexcept +
jmp loc_461DD1  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 4D1E32h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461E17  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_461DB0  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461DB3  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_461A65  +
cmp edi 0FFh +
jz loc_461FA7  +
lea eax [edi+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edi] 28h +
mov byte ptr [ebx+104h] 28h +
mov ecx [ecx+0Ch] +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461F32  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ecx+8] +
jmp loc_461E45  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_4619F4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_461995  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_4619C5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_461E64  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_461A54  +
mov esi [ebx+10Ch] +
xor edi edi +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461E31  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461BFD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_461A2B  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_34] edx +
jz loc_4620ED  +
mov edi [eax+118h] +
mov esi eax +
test edi edi +
jz loc_46208A  +
jmp loc_4620ED  +
mov ecx [esi+118h] +
test ecx ecx +
jnz loc_4620ED  +
mov edx [ebx+8] +
test edx edx +
jnz loc_4620E7  +
mov eax [esp+4Ch+arg_0] +
mov ecx [ebx+4] +
test eax eax +
mov ebp [ecx] +
jnz loc_4620B1  +
mov eax ebp +
mov [esp+4Ch+var_38] ecx +
call sub_45D3E0  +
mov ecx [esp+4Ch+var_38] +
test eax eax +
jnz loc_4620E7  +
mov eax [ebx+0Ch] +
cmp ebp 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] eax +
jz loc_4620F5  +
cmp ebp 2Ah +
jz loc_462116  +
cmp ebp 2 +
jz loc_462137  +
mov edx [esp+4Ch+var_34] +
mov eax esi +
call sub_461750  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_462080  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 0Ch +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_462680  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_462400  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_34] +
mov ecx [ecx+8] +
call sub_45DBF0  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_34] 4 +
mov [esi+114h] ebp +
jnz loc_4621D1  +
mov ebp offset asc_4D1A39 +
mov [esp+4Ch+var_38] ebx +
jmp loc_462192  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D1A3Bh +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_4621EE  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_462173  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_462176  +
cmp eax 0FFh +
jz loc_46222C  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_4621F2  +
mov ebx [esp+4Ch+var_38] +
mov eax [ebx+4] +
mov ebp [eax+0Ch] +
mov eax [ebp+0] +
cmp eax 46h +
jnz loc_462208  +
jmp loc_462263  +
mov ebp [ebp+8] +
mov eax [ebp+0] +
call sub_45D3E0  +
test eax eax +
jnz loc_462202  +
mov edx [esp+4Ch+var_34] +
mov ecx ebp +
mov eax esi +
call sub_45DBF0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_4621DB  +
mov ecx offset aDefaultArg +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_462291  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D1A49h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_4622D7  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_462272  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_462275  +
mov eax [ebp+0Ch] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset unk_4D1A30 +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_4623ED  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_38] edi +
mov edi eax +
jmp loc_462330  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_462377  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_462315  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+124h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_462318  +
mov edi [esp+4Ch+var_38] +
mov ecx offset asc_4D1A4A +
mov ebx ecx +
jmp loc_4623A7  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D1A4Dh +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_462202  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_462384  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_462387  +
mov eax [esi+100h] +
jmp loc_46237B  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46243A  +
mov edx [eax+8] +
test edx edx +
jz loc_4624C0  +
mov eax [eax] +
test eax eax +
jnz loc_462415  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462060  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462580  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_462627  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_462495  +
mov eax ebx +
mov edx edi +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4625F0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_462660  +
mov eax [ebx+100h] +
mov esi offset unk_4D1F94 +
jmp loc_4624FF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4D1F96 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4624E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_4624E3  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462060  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4625B7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_462440  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_46244E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_46256A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4624A3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_46246E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462060  +
mov edx [ebx+100h] +
jmp loc_46245F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_462760  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_462760  +
mov eax esi +
mov edx 1 +
jmp loc_4626CE  +
and ch 0Eh +
jnz loc_462800  +
mov eax [eax] +
test eax eax +
jz loc_462760  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_462760  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_4626B9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_4626B0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_462815  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_462932  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_462826  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462829  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_462060  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46288D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_4627C1  +
mov eax ebx +
mov edx edi +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4628C4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_462060  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_4626F0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462729  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_462060  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4628FB  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_462794  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_462797  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4627CF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462870  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_46270D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_462990  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45DBF0  +
mov eax [ecx+8] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_462A10  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4629C2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462A10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4629A7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_4629AA  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_462A33  +
cmp eax 30h +
jnz loc_462A40  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
jmp sub_45DBF0  +
cmp eax 6 +
jz loc_462A33  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462AC8  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_45DBF0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462A94  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462A7D  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+24h+var_8] ecx +
mov [esp+24h+var_C] edx +
mov [esp+24h+var_1C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_24] ebx +
call eax  +
xor eax eax +
mov ecx [esp+24h+var_8] +
add dword ptr [ebx+124h] 1 +
mov edx [esp+24h+var_C] +
jmp loc_462A55  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax] 66h +
jz loc_462B30  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [esp+2Ch+arg_0] +
xor ebp ebp +
mov edx [edx] +
mov esi [edx+8] +
mov [esp+2Ch+var_18] esi +
mov esi [edx+0Ch] +
cmp dword ptr [esi] 3Bh +
jz loc_462D14  +
mov ecx [ebx+120h] +
mov dword ptr [ebx+120h] 0FFFFFFFFh +
movzx eax byte ptr [eax+1] +
mov [esp+2Ch+var_14] ecx +
cmp al 52h +
jz loc_462D24  +
jle loc_462D20  +
cmp al 6Ch +
jz loc_462C40  +
cmp al 72h +
lea esi [esi+0] +
jnz loc_462CFD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462E67  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a____0 +
mov byte ptr [ebx+104h] 28h +
call sub_462A20  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_462970  +
mov eax [ebx+100h] +
jmp loc_462BF3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1FA0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462CFD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462BD0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_18] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_18] +
jmp loc_462BD3  +
mov eax [ebx+100h] +
mov ebp offset a____1 +
jmp loc_462C73  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D1F9Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462DE0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_462C50  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_462C53  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_462970  +
mov ecx ebp +
mov eax ebx +
mov edx edi +
call sub_462A20  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462DF4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [esp+2Ch+var_14] +
mov [ebx+120h] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+0Ch] +
mov esi [esi+8] +
jmp loc_462B4D  +
cmp al 4Ch +
jnz loc_462CFD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462E30  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a___ +
mov byte ptr [ebx+104h] 28h +
call sub_462A20  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_462970  +
mov eax [ebx+100h] +
jmp loc_462D93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C38h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462CC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462D70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_462D73  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_462970  +
mov ecx esi +
jmp loc_462CCF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462CEC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462D38  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462B9A  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_462EE0  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_462EE0  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_462EE0  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 0 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_462F28  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_462F28  +
test edx edx +
jz loc_462F28  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 32h +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_462F70  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_462F70  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_462F72  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 7 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_462FC0  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_462FC0  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_462FC2  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 8 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [ebx+0Ch] +
mov eax esi +
call sub_45D8B0  +
test eax eax +
jnz loc_463050  +
movsx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 4Ah +
ja loc_463045  +
movzx eax al +
jmp ds:off_4D1FB8[eax*4]  +
mov esi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464670  +
mov edx 42h +
mov [ebx+34h] esi +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_463045  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_463045  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_4630E8  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_464CE0  +
test eax eax +
mov esi eax +
jz loc_463045  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4630B0  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_463045  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_4630C0  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_463045  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_463045  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_463F00  +
mov edx eax +
mov [esi] eax +
jmp loc_463077  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+8] +
mov [edx+8] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_463085  +
mov eax ebx +
call sub_464FE0  +
mov [esp+2Ch+var_10] eax +
nop   +
test eax eax +
jz loc_463045  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463045  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45D530  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
mov ecx [ebx+14h] +
cmp ecx [ebx+18h] +
jl loc_4636C6  +
mov edx large ds:8 +
xor eax eax +
mov edx [edx+4] +
add esi 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] esi +
jmp loc_463047  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45D530  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_463770  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
movzx eax byte ptr [esi+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_4631BC  +
cmp al 5Fh +
jz loc_4631BC  +
sub eax 41h +
cmp al 19h +
ja loc_46372A  +
xor edx edx +
mov eax ebx +
call sub_45D650  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_463047  +
mov eax ebx +
call sub_464FB0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D1C0  +
nop   +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
mov eax ebx +
call sub_45D4E0  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_4630E0  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_463795  +
test eax eax +
jz loc_463045  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463045  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_464FB0  +
jmp loc_4631DC  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
test eax eax +
mov esi eax +
jz loc_46340D  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
test eax eax +
jz loc_46340D  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_45D1C0  +
jmp loc_4631F0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
mov eax ebx +
call sub_463F00  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
lea eax [esi+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [esi+1] 0 +
jz loc_463045  +
lea eax [esi+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [esi+1] +
sub eax 46h +
cmp al 30h +
ja loc_463045  +
movzx eax al +
jmp ds:off_4D20E4[eax*4]  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
lea edx [esi+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [esi+1] +
cmp al 5Fh +
jz loc_4636F7  +
sub eax 30h +
cmp al 9 +
ja loc_46374B  +
add esi 2 +
mov ecx esi +
mov [ebx+0Ch] esi +
movzx eax byte ptr [ecx] +
add esi 1 +
sub eax 30h +
cmp al 9 +
jbe loc_4633E0  +
sub ecx edx +
mov eax ebx +
call sub_45D220  +
test eax eax +
mov esi eax +
jz loc_46340D  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4636F9  +
xor eax eax +
jmp loc_4631F0  +
cmp byte ptr [esi+2] 5Fh +
jz loc_463801  +
mov eax ebx +
call sub_45D460  +
mov esi eax +
test esi esi +
jz loc_46340D  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_4631F0  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_4631F0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2998 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2998 +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_463047  +
mov ecx 0Eh +
mov edx offset aDecltypeAuto +
mov eax ebx +
call sub_45D220  +
jmp loc_463047  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2984 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2984 +
jmp loc_463490  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2948 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2948 +
jmp loc_463490  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2970 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2970 +
jmp loc_463490  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D295C +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D295C +
jmp loc_463490  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D29C0 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D29C0 +
jmp loc_463490  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46371D  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D29AC +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D29AC +
jmp loc_463490  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov edx 4Ah +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4630E0  +
mov eax [ebx+14h] +
xor edi edi +
cmp eax [ebx+18h] +
jge loc_463643  +
mov edi eax +
add eax 1 +
shl edi 4 +
add edi [ebx+10h] +
mov dword ptr [edi+4] 0 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_10] edi +
mov dword ptr [edi] 2Ch +
movzx eax byte ptr [esi+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [edi+0Ch] ax +
jnz loc_463822  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov [edi+8] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+8] +
test eax eax +
jz loc_463045  +
lea eax [ebx+0Ch] +
call sub_45D400  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_4636A3  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Eh] dx +
jmp loc_463047  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_45D220  +
jmp loc_463047  +
lea eax [edx+edx*4-1E5h] +
lea edx ds:4D2740h[eax*4] +
mov eax ecx +
shl eax 4 +
add ecx 1 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] ecx +
mov dword ptr [eax] 27h +
mov [eax+8] edx +
jmp loc_46314C  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_4631F0  +
mov edx large ds:8 +
xor eax eax +
jmp loc_463490  +
mov eax ebx +
call sub_464FE0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_463045  +
cmp dword ptr [eax] 18h +
jnz loc_4630E8  +
jmp loc_463047  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464670  +
mov [ebx+34h] edi +
test eax eax +
mov esi eax +
jnz loc_463401  +
xor eax eax +
jmp loc_4631F0  +
mov eax ebx +
call sub_464FB0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_46317F  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_464FB0  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_4637D8  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_4630E0  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_463045  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463045  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4631DC  +
add esi 3 +
mov edi [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
call sub_464670  +
mov [ebx+34h] edi +
mov esi eax +
jmp loc_463427  +
lea eax [ebx+0Ch] +
call sub_45D400  +
mov edi [esp+2Ch+var_10] +
jmp loc_463669  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_4638B0  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_4639D9  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+20h+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_463910  +
movzx eax [esp+20h+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_4638B7  +
mov eax esi +
call sub_45D530  +
mov ecx [esi+14h] +
cmp ecx [esi+18h] +
jl loc_4639A1  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov [esp+20h+var_11] 0 +
mov eax 43h +
xor edx edx +
mov [esp+20h+var_18] eax +
jmp loc_4638D0  +
jge loc_463908  +
mov [esp+20h+var_18] ebx +
cmp edx [esp+20h+var_18] +
jz loc_4638A0  +
mov ecx [esp+20h+var_18] +
mov eax edi +
sub ecx edx +
mov ebx ecx +
shr ebx 1Fh +
add ebx ecx +
sar ebx 1 +
add ebx edx +
mov ecx ebx +
shl ecx 4 +
lea ebp off_4D2B80[ecx] +
mov ecx ds:off_4D2B80[ecx] +
cmp al [ecx] +
jnz loc_4638C4  +
movzx ecx byte ptr [ecx+1] +
cmp [esp+20h+var_11] cl +
jz loc_463970  +
cmp cl [esp+20h+var_11] +
jg loc_4638C6  +
lea edx [ebx+1] +
jmp loc_4638CA  +
cmp [esp+20h+var_11] 76h +
jnz loc_4638B7  +
mov eax edi +
cmp al 63h +
jnz loc_4638B7  +
mov edx [esi+34h] +
xor eax eax +
mov ebx [esi+38h] +
mov [esp+20h+var_20] esi +
test edx edx +
setz al  +
mov [esi+38h] eax +
call sub_462FD0  +
mov ecx [esi+38h] +
mov [esp+20h+var_20] 0 +
test ecx ecx +
mov ecx eax +
jnz loc_463960  +
mov edx 33h +
mov eax esi +
call sub_45D1C0  +
mov [esi+38h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 34h +
mov eax esi +
call sub_45D1C0  +
jmp loc_463951  +
mov edx [esi+14h] +
xor eax eax +
cmp edx [esi+18h] +
jge loc_4638A2  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov dword ptr [eax] 31h +
mov [eax+8] ebp +
jmp loc_4638A2  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [esi+10h] +
test eax eax +
mov dword ptr [edx+4] 0 +
mov [esi+14h] ecx +
jz loc_4638A0  +
movsx ecx [esp+20h+var_11] +
mov [edx+0Ch] eax +
mov eax edx +
mov dword ptr [edx] 32h +
sub ecx 30h +
mov [edx+8] ecx +
jmp loc_4638A2  +
mov [esp+20h+var_11] 0 +
jmp loc_463872  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_463A90  +
cmp dl 45h +
jz loc_463A90  +
cmp dl 2Eh +
jz loc_463A90  +
lea esi [esp+24h+var_8] +
jmp loc_463A64  +
cmp byte ptr [eax+1] 45h +
jz loc_463A74  +
mov [esp+24h+var_24] ebx +
call sub_462FD0  +
test eax eax +
jz loc_463A90  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_45D1C0  +
test eax eax +
mov [esi] eax +
jz loc_463A90  +
lea esi [eax+0Ch] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_463A74  +
cmp dl 45h +
jz loc_463A74  +
cmp dl 2Eh +
jz loc_463A74  +
cmp dl 4Fh +
jz loc_463A20  +
cmp dl 52h +
jnz loc_463A26  +
cmp byte ptr [eax+1] 45h +
jnz loc_463A26  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_463A90  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_463A98  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
cmp dword ptr [edx] 27h +
jnz loc_463A83  +
mov edx [edx+8] +
cmp dword ptr [edx+10h] 9 +
jnz loc_463A83  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+8] 0 +
jmp loc_463A83  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_463BB2  +
lea ecx [eax-61h] +
cmp cl 19h +
ja loc_463B20  +
cmp al 6Fh +
jz loc_463CB0  +
mov eax ebx +
call sub_463840  +
test eax eax +
mov ebp eax +
jz loc_463B01  +
cmp dword ptr [eax] 31h +
jz loc_463CC5  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jz loc_463BCA  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax-43h] +
cmp cl 1 +
jbe loc_463D10  +
cmp al 4Ch +
jz loc_463C80  +
cmp al 55h +
jnz loc_463CA2  +
movzx eax byte ptr [edx+1] +
cmp al 6Ch +
jz loc_463BE0  +
cmp al 74h +
jnz loc_463CA2  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 74h +
jnz loc_463B07  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45D4A0  +
test eax eax +
js loc_463B01  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BA5  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 47h +
jl loc_463C6A  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
xor ebp ebp +
jmp loc_463B07  +
mov eax ebx +
call sub_45D530  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jnz loc_463B10  +
add esp 1Ch +
mov edx ebp +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45D600  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 6Ch +
jnz loc_463B07  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_4639F0  +
test eax eax +
mov esi eax +
jz loc_463B01  +
mov edx [ebx+0Ch] +
movzx ecx byte ptr [edx] +
cmp cl 45h +
jnz loc_463B07  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45D4A0  +
test eax eax +
js loc_463BA5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BA5  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] esi +
mov [ebp+0Ch] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 45h +
jge loc_463BA5  +
mov edx [ebx+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [ebx+20h] eax +
jmp loc_463B01  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45D530  +
test eax eax +
mov ebp eax +
jz loc_463CA2  +
mov eax ebx +
call sub_45D8F0  +
test eax eax +
jnz loc_463B01  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_463AEB  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_463AEB  +
mov edx [eax+8] +
mov edi offset unk_4D21A8 +
mov ecx 3 +
mov eax [ebx+30h] +
add eax [edx+8] +
mov esi [edx] +
add eax 7 +
mov [ebx+30h] eax +
cmps   +
jnz loc_463B01  +
mov eax ebx +
call sub_45D530  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
jmp loc_463B07  +
mov edi [ebx+2Ch] +
test edi edi +
jz loc_463E5E  +
mov esi [edi] +
test esi esi +
jz loc_463DC4  +
cmp esi 18h +
mov ecx eax +
jz loc_463DC4  +
cmp cl 43h +
jz loc_463DD2  +
cmp cl 44h +
jnz loc_463BAB  +
movzx eax byte ptr [edx+1] +
sub eax 30h +
cmp al 5 +
ja loc_463DBD  +
movzx eax al +
jmp ds:off_4D21AC[eax*4]  +
mov ecx 2 +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_463E6C  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_463E6C  +
mov dword ptr [ebp+0] 8 +
mov [ebp+8] ecx +
mov [ebp+0Ch] edi +
movzx ecx byte ptr [edx+2] +
jmp loc_463B07  +
mov ecx 1 +
jmp loc_463D5C  +
mov ecx 5 +
jmp loc_463D5C  +
mov ecx 4 +
jmp loc_463D5C  +
mov ecx 3 +
jmp loc_463D5C  +
xor ebp ebp +
jmp loc_463B10  +
mov eax [edi+0Ch] +
add [ebx+30h] eax +
movzx ecx byte ptr [edx] +
jmp loc_463D30  +
movzx eax byte ptr [edx+1] +
xor ecx ecx +
cmp al 49h +
jz loc_463E75  +
sub eax 31h +
cmp al 4 +
ja loc_463E8B  +
movzx eax al +
jmp ds:off_4D21C4[eax*4]  +
mov esi 2 +
add edx 2 +
test ecx ecx +
mov [ebx+0Ch] edx +
jz loc_463E0F  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edi [ebx+2Ch] +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_463E65  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_463E65  +
mov dword ptr [ebp+0] 7 +
mov [ebp+8] esi +
mov [ebp+0Ch] edi +
jmp loc_463B01  +
mov esi 1 +
jmp loc_463DFA  +
mov esi 4 +
jmp loc_463DFA  +
mov esi 3 +
jmp loc_463DFA  +
mov esi 5 +
jmp loc_463DFA  +
mov ecx eax +
jmp loc_463D30  +
xor ebp ebp +
jmp loc_463B01  +
xor ebp ebp +
nop   +
jmp loc_463D98  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [edx+2] +
mov edx ecx +
mov ecx 1 +
jmp loc_463DE0  +
movzx ecx byte ptr [edx] +
xor ebp ebp +
jmp loc_463B07  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_463ED7  +
xor esi esi +
test edx edx +
jnz loc_463EDD  +
mov eax ebx +
call sub_4639F0  +
test eax eax +
jz loc_463EF0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_45D1C0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_462FD0  +
test eax eax +
mov esi eax +
jnz loc_463EB5  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_463ED1  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_463F15  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_463F27  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_463EA0  +
mov edx eax +
mov eax ebx +
call sub_45D270  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_463F0E  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov [esp+48h+var_1C] 0 +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_35] dl +
mov [esp+48h+var_3C] eax +
cmp [ebx] dl +
jz loc_464566  +
mov edx ebx +
lea esi [esi+0] +
mov ebx [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4641B3  +
cmp al 54h +
jz loc_4641D0  +
cmp al 73h +
jz loc_4640F2  +
cmp al 66h +
jz loc_464130  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_464086  +
cmp al 6Fh +
jz loc_464076  +
cmp al 74h +
setz cl  +
jnz loc_464661  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4642D0  +
mov eax ebp +
call sub_463840  +
test eax eax +
mov [esp+48h+var_34] eax +
jz loc_4641A6  +
mov edx [eax] +
cmp edx 31h +
jz loc_4641E0  +
cmp edx 32h +
jz loc_464304  +
cmp edx 33h +
jnz loc_4641A6  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_2C] 0 +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_464596  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_46403C  +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_46453A  +
mov eax ebp +
call sub_464670  +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
test edx edx +
jz loc_46405F  +
mov ecx eax +
mov edx 38h +
mov eax ebp +
call sub_45D1C0  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_34] +
mov edx 36h +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_463FD6  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_463AC0  +
test eax eax +
jz loc_4641A6  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_464318  +
mov [ebp+34h] ebx +
mov [esp+48h+var_48] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_45D1C0  +
mov edi [esp+48h+var_3C] +
test eax eax +
mov [edi] eax +
jz loc_4641A9  +
mov edx [ebp+0Ch] +
add eax 0Ch +
mov [esp+48h+var_3C] eax +
movzx eax [esp+48h+var_35] +
cmp [edx] al +
jnz loc_463F80  +
mov ebx edx +
mov eax [esp+48h+var_1C] +
add ebx 1 +
mov [ebp+0Ch] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_464456  +
cmp al 70h +
jnz loc_463FD6  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_464670  +
mov edx 4Ah +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
cmp byte ptr [edx+1] 70h +
jnz loc_463FD6  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_4643F0  +
mov eax ebp +
call sub_45D4A0  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_4641A6  +
add eax 1 +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_4641A6  +
mov ecx edx +
add edx 1 +
shl ecx 4 +
add ecx [ebp+10h] +
mov dword ptr [ecx+4] 0 +
mov [ebp+14h] edx +
mov dword ptr [ecx] 6 +
mov [ecx+8] eax +
jmp loc_4640A3  +
mov [esp+48h+var_48] ebp +
call sub_462FD0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_4642DA  +
mov [ebp+34h] ebx +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_465B00  +
mov ecx eax +
lea esi [esi+0] +
test ecx ecx +
mov [ebp+34h] ebx +
jnz loc_4640A6  +
jmp loc_4641A9  +
mov eax ebp +
call sub_45D4E0  +
mov ecx eax +
jmp loc_4641C0  +
mov eax [eax+8] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_464493  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4645FD  +
jle loc_464430  +
cmp eax 2 +
jz loc_464340  +
cmp eax 3 +
jnz loc_4641A6  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_4641A6  +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_4644B6  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_4645C7  +
cmp al 6Eh +
jnz loc_4641A6  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_4645BA  +
mov edx 5Fh +
mov eax ebp +
call sub_463F50  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_462FD0  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_4645AD  +
cmp al 70h +
jz loc_4645DA  +
cmp al 69h +
jnz loc_4641A6  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_4641A6  +
mov eax ebp +
call sub_464670  +
jmp loc_4644D7  +
xor esi esi +
test cl cl +
jnz loc_46418F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_463F50  +
mov ecx esi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_30] 0 +
mov eax [eax+8] +
jmp loc_46421B  +
mov [esp+48h+var_34] eax +
mov eax ebp +
call sub_464FB0  +
mov ecx [esp+48h+var_34] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_4641A6  +
mov eax [esp+48h+var_34] +
mov eax [eax+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_464513  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 66h +
jz loc_464586  +
mov eax ebp +
call sub_464670  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_4644A3  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4D21D8 +
mov ecx 3 +
cmps   +
jz loc_464400  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4D21DB +
mov ecx 3 +
cmps   +
jz loc_464400  +
mov eax ebp +
call sub_464670  +
mov esi eax +
lea esi [esi+0] +
mov ecx [esp+48h+var_2C] +
mov edx 38h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_45D1C0  +
mov ecx [esp+48h+var_34] +
mov edx 37h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
add edx 3 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_464164  +
mov eax ebp +
call sub_463AC0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4643C0  +
mov eax ebp +
call sub_464FB0  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov esi eax +
jmp loc_4643C0  +
test eax eax +
jnz loc_4641A6  +
mov ecx [esp+48h+var_34] +
mov edx 35h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+48h+var_48] ebp +
call sub_462FD0  +
mov esi eax +
mov eax ebp +
call sub_463AC0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_464546  +
mov [esp+48h+var_48] eax +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
mov [esp+48h+var_48] ebp +
call sub_462FD0  +
mov [esp+48h+var_48] eax +
jmp loc_46405F  +
mov edx 45h +
mov eax ebp +
call sub_463F50  +
mov esi eax +
jmp loc_4643C0  +
mov eax ebp +
call sub_464670  +
mov esi eax +
mov eax ebp +
call sub_464670  +
mov edi eax +
mov eax ebp +
call sub_464670  +
test eax eax +
jz loc_4641A6  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebp +
call sub_45D1C0  +
mov ecx esi +
mov edx 3Ah +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx [esp+48h+var_34] +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov ecx eax +
jmp loc_4641C0  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_464529  +
sub eax 72h +
cmp al 1 +
ja loc_46435F  +
mov [esp+48h+var_48] ebp +
call sub_462FD0  +
mov [esp+48h+var_2C] eax +
jmp loc_464377  +
mov eax ebp +
call sub_464EA0  +
jmp loc_464043  +
mov eax ebp +
call sub_464FB0  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D1C0  +
mov [esp+48h+var_48] eax +
jmp loc_46447E  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_45D1C0  +
jmp loc_4641AB  +
mov eax ebp +
call sub_463840  +
mov [esp+48h+var_2C] eax +
jmp loc_464377  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_463F50  +
jmp loc_464043  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_4644D7  +
cmp al 77h +
jz loc_464281  +
jmp loc_4641A6  +
mov eax ebp +
lea esi [esi+0] +
call sub_463840  +
jmp loc_4644BD  +
cmp byte ptr [edx+1] 69h +
nop   +
jnz loc_4641A6  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_463F50  +
jmp loc_4644D7  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_464657  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_464626  +
cmp al 70h +
mov [esp+48h+var_2C] 0 +
jz loc_464626  +
cmp edx 33h +
jnz loc_464022  +
jmp loc_464016  +
mov esi [esp+48h+var_30] +
mov [esp+48h+var_2C] 0 +
cmp al [esi+1] +
jnz loc_464618  +
mov eax [ebp+0Ch] +
mov [esp+48h+var_2C] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_464618  +
add eax 1 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_2C] 0 +
jmp loc_464618  +
mov [esp+48h+var_2C] 0 +
jmp loc_464618  +
cmp al 69h +
jz loc_463FCC  +
jmp loc_463FD6  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4649C5  +
cmp al 54h +
jz loc_4649D3  +
cmp al 73h +
jz loc_4647F7  +
cmp al 66h +
jz loc_464790  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_4646D0  +
mov eax ebx +
call sub_463AC0  +
test eax eax +
jz loc_4649A3  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_4649F1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_4649B0  +
cmp al 74h +
setz cl  +
jnz loc_464CD1  +
cmp byte ptr [edx+1] 6Ch +
jz loc_464960  +
mov eax ebx +
call sub_463840  +
test eax eax +
mov ebp eax +
jz loc_4649A3  +
mov eax [eax] +
cmp eax 31h +
jz loc_464834  +
cmp eax 32h +
jz loc_4649E1  +
cmp eax 33h +
jnz loc_4649A3  +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_14] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_464B0E  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_464753  +
mov edi offset aSp +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_464BBF  +
mov eax ebx +
call sub_464670  +
mov edx [esp+1Ch+var_14] +
mov [esp+1Ch+var_1C] eax +
test edx edx +
jz loc_464776  +
mov ecx eax +
mov edx 38h +
mov eax ebx +
call sub_45D1C0  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 36h +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
cmp byte ptr [edx+1] 70h +
jnz loc_4646ED  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_464B01  +
mov eax ebx +
call sub_45D4A0  +
mov edx eax +
add eax 1 +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_4649A3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4649A3  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [esi] 6 +
mov [esi+8] eax +
jmp loc_4646C4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_464A10  +
cmp al 70h +
jnz loc_4646ED  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_464670  +
mov edx 4Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
mov edi [ebp+8] +
mov ecx [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov esi ecx +
mov [esp+1Ch+var_18] ecx +
lea ecx [edi-2] +
add [ebx+30h] ecx +
mov ecx 3 +
mov [esp+1Ch+var_14] edi +
mov edi offset aSt +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_464B50  +
mov edi [esp+1Ch+var_10] +
mov ecx [edi+0Ch] +
cmp ecx 1 +
jz loc_464C71  +
jle loc_464B25  +
cmp ecx 2 +
jz loc_464A50  +
cmp ecx 3 +
jnz loc_4649A3  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_4649A3  +
mov edi offset aQu +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_464B70  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_464C44  +
cmp al 6Eh +
jnz loc_4649A3  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_464C35  +
mov edx 5Fh +
mov eax ebx +
call sub_463F50  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_462FD0  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_464C28  +
cmp al 70h +
jz loc_464C50  +
cmp al 69h +
jnz loc_4649A3  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_4649A3  +
mov eax ebx +
call sub_464670  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebx +
call sub_45D1C0  +
mov ecx esi +
mov edx 3Ah +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov ecx ebp +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
xor esi esi +
test cl cl +
jnz loc_464990  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_463F50  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_464966  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_4646ED  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_4646A7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_465B00  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45D4E0  +
mov ecx [ebp+8] +
mov [esp+1Ch+var_18] 0 +
jmp loc_464875  +
mov eax ebx +
call sub_464FB0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov esi eax +
mov eax ebx +
call sub_463AC0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_464BCB  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_4649A3  +
mov eax [ebp+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_464B98  +
mov eax [esp+1Ch+var_18] +
cmp byte ptr [eax] 66h +
jz loc_464BEB  +
mov eax ebx +
call sub_464670  +
mov [esp+1Ch+var_14] eax +
mov esi [esp+1Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_464B5D  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_4D21D8 +
mov ecx 3 +
cmps   +
jz loc_464AC1  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_4D21DB +
mov ecx 3 +
cmps   +
jnz loc_464BFB  +
mov eax ebx +
call sub_463AC0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_464C09  +
mov ecx [esp+1Ch+var_14] +
mov edx 38h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_45D1C0  +
mov ecx ebp +
mov edx 37h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_4647C8  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_463F50  +
jmp loc_46475A  +
test ecx ecx +
jnz loc_4649A3  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_4646C4  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
jmp loc_464773  +
mov edx 45h +
mov eax ebx +
call sub_463F50  +
mov esi eax +
jmp loc_464AD6  +
mov eax ebx +
call sub_464670  +
mov esi eax +
mov eax ebx +
call sub_464670  +
mov edi eax +
mov eax ebx +
call sub_464670  +
test eax eax +
jnz loc_464924  +
xor esi esi +
jmp loc_4649A5  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_464BAE  +
sub eax 72h +
cmp al 1 +
ja loc_464A6B  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov [esp+1Ch+var_14] eax +
jmp loc_464A83  +
mov eax ebx +
call sub_464EA0  +
jmp loc_46475A  +
mov eax ebx +
call sub_464FB0  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov [esp+1Ch+var_1C] eax +
jmp loc_464A38  +
mov eax ebx +
call sub_463840  +
mov [esp+1Ch+var_14] eax +
jmp loc_464A83  +
mov eax ebx +
call sub_464670  +
mov esi eax +
jmp loc_464AD6  +
mov eax ebx +
call sub_464FB0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
mov esi eax +
jmp loc_464AD6  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_464924  +
cmp al 77h +
jz loc_4648DD  +
xor esi esi +
jmp loc_4649A5  +
mov eax ebx +
call sub_463840  +
jmp loc_464B77  +
cmp byte ptr [edx+1] 69h +
jnz loc_4649A3  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_463F50  +
jmp loc_464924  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
test edi edi +
jz loc_464C8E  +
movzx ecx byte ptr [edi] +
cmp cl 6Dh +
jz loc_464CA0  +
cmp cl 70h +
jz loc_464CA0  +
cmp eax 33h +
jnz loc_464737  +
jmp loc_46472B  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
cmp cl [edi+1] +
jnz loc_464C8E  +
mov ecx [ebx+0Ch] +
mov [esp+1Ch+var_14] 1 +
cmp byte ptr [ecx] 5Fh +
jnz loc_464C8E  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+1Ch+var_14] 0 +
jmp loc_464C8E  +
cmp al 69h +
jz loc_4646E3  +
jmp loc_4646ED  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edi [eax+0Ch] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_18] ecx +
movzx ebp byte ptr [edi] +
jmp loc_464D57  +
mov eax ebp +
cmp al 56h +
jz loc_464DE0  +
mov eax ebp +
cmp al 4Bh +
jz loc_464DF8  +
cmp byte ptr [edi+1] 0 +
jz loc_464DD4  +
lea eax [edi+2] +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edi+1] +
cmp cl 78h +
jnz loc_464D87  +
add dword ptr [ebx+30h] 11h +
xor eax eax +
mov edx 4Ch +
mov [esp+20h+var_20] eax +
xor ecx ecx +
mov eax ebx +
call sub_45D1C0  +
test eax eax +
mov [esi] eax +
jz loc_464DD4  +
mov edi [ebx+0Ch] +
lea esi [eax+8] +
movzx ebp byte ptr [edi] +
mov eax edi +
call sub_45D8B0  +
test eax eax +
jz loc_464E40  +
lea eax [edi+1] +
mov [ebx+0Ch] eax +
mov eax ebp +
cmp al 72h +
jnz loc_464D00  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_464D38  +
mov eax ecx +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_464E10  +
add dword ptr [ebx+30h] 9 +
xor eax eax +
cmp cl 4Fh +
mov edx 4Eh +
jnz loc_464D38  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464670  +
mov [ebx+34h] edi +
test eax eax +
jz loc_464DD4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_464DD4  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Eh +
jmp loc_464D38  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_464D38  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Eh +
add dword ptr [ebx+30h] 6 +
jmp loc_464D38  +
cmp cl 77h +
jnz loc_464DD4  +
add dword ptr [ebx+30h] 6 +
mov eax ebx +
call sub_4639F0  +
test eax eax +
jz loc_464DD4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_464DD4  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Fh +
jmp loc_464D38  +
mov eax [esp+20h+var_18] +
test eax eax +
jnz loc_464E54  +
mov eax ebp +
cmp al 46h +
jnz loc_464E54  +
cmp esi [esp+20h+var_14] +
jnz loc_464E7C  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1Bh +
jz loc_464E93  +
cmp eax 19h +
jnz loc_464E71  +
mov dword ptr [ebp+0] 1Ch +
lea eax [ebp+8] +
cmp esi eax +
mov [esp-0Ch+arg_8] eax +
jz loc_464E54  +
mov eax [esp-0Ch+arg_8] +
mov ebp [eax] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_464E60  +
mov dword ptr [ebp+0] 1Dh +
jmp loc_464E71  +
mov dword ptr [ebp+0] 1Eh +
jmp loc_464E71  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov edx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_464F85  +
mov [esp+2Ch+var_10] 0 +
lea esi [esp+2Ch+var_10] +
jmp loc_464F06  +
sub eax 49h +
cmp al 1 +
ja loc_464F50  +
mov eax ebx +
call sub_464FB0  +
mov ecx eax +
test ecx ecx +
jz loc_464F34  +
mov [esp+2Ch+var_2C] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_45D1C0  +
test eax eax +
mov [esi] eax +
jz loc_464F34  +
mov edx [ebx+0Ch] +
lea esi [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_464F70  +
cmp al 4Ch +
jz loc_464F60  +
jle loc_464EC8  +
cmp al 58h +
nop   +
jnz loc_464F50  +
add edx 1 +
mov ebp [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] edx +
mov dword ptr [ebx+34h] 1 +
call sub_464670  +
mov edx [ebx+0Ch] +
mov [ebx+34h] ebp +
cmp byte ptr [edx] 45h +
jz loc_464F40  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_464EDC  +
mov [esp+2Ch+var_2C] ebx +
call sub_462FD0  +
mov ecx eax +
jmp loc_464EDC  +
mov eax ebx +
call sub_465B00  +
mov ecx eax +
jmp loc_464EDC  +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
xor ecx ecx +
mov [ebx+0Ch] edx +
mov eax ebx +
mov edx 2Fh +
mov [esp+2Ch+var_2C] 0 +
call sub_45D1C0  +
jmp loc_464F36  +
***
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
sub ecx 49h +
cmp cl 1 +
ja loc_464FD0  +
add edx 1 +
mov [eax+0Ch] edx +
jmp sub_464EA0  +
xor eax eax +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_465164  +
jle loc_465043  +
cmp al 55h +
jz loc_465030  +
cmp al 5Ah +
nop   +
jnz loc_465110  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_4653F0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov edi eax +
jz loc_4652D0  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_463AC0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_465110  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_464CE0  +
test eax eax +
mov edi eax +
jz loc_465023  +
xor edx edx +
mov eax esi +
call sub_45D270  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_465102  +
cmp bl 44h +
jz loc_465266  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_465210  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_465210  +
cmp bl 43h +
jz loc_465210  +
cmp bl 55h +
jz loc_465210  +
cmp bl 4Ch +
jz loc_465210  +
cmp bl 53h +
jz loc_4652B0  +
cmp bl 49h +
jz loc_465290  +
cmp bl 54h +
jz loc_4652C1  +
cmp bl 45h +
nop   +
jz loc_4653AD  +
cmp bl 4Dh +
jnz loc_465102  +
test ebp ebp +
lea esi [esi+0] +
jz loc_465102  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_465084  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_465025  +
mov eax esi +
call sub_463AC0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_465039  +
test eax eax +
jz loc_465023  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_465023  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_464FB0  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_45D1C0  +
mov ebx eax +
jmp loc_465039  +
cmp byte ptr [edx+1] 74h +
jz loc_4651A2  +
xor edx edx +
mov eax esi +
call sub_45D650  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_465039  +
mov eax esi +
call sub_464FB0  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_45D1C0  +
mov ebx eax +
jmp loc_465039  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_463AC0  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_45D220  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_45D1C0  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_465039  +
test edi edi +
jz loc_465023  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_465023  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_465183  +
mov eax esi +
call sub_463AC0  +
test ebp ebp +
jz loc_465280  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_45D1C0  +
mov ebp eax +
cmp bl 53h +
jz loc_46525B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_465284  +
test ebp ebp +
jz loc_465102  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_465102  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_465080  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_465210  +
mov [esp+30h+var_30] esi +
call sub_462FD0  +
test ebp ebp +
jnz loc_46521B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46522E  +
mov ebx 45h +
jmp loc_46508D  +
test ebp ebp +
jz loc_465102  +
mov eax esi +
call sub_464FB0  +
mov edx 4 +
jmp loc_465220  +
mov edx 1 +
mov eax esi +
call sub_45D650  +
jmp loc_465217  +
mov eax esi +
call sub_45D4E0  +
jmp loc_465217  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_465382  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_465355  +
mov eax esi +
call sub_464FE0  +
test eax eax +
mov ebx eax +
jz loc_465304  +
mov eax [eax] +
cmp eax 45h +
jz loc_465304  +
cmp eax 47h +
jnz loc_465370  +
cmp ebp 0FFFFFFFFh +
jz loc_465334  +
mov edx [esi+14h] +
cmp edx [esi+18h] +
jge loc_465351  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov [eax+8] ebx +
mov ebx eax +
mov dword ptr [eax] 46h +
mov [eax+0Ch] ebp +
mov [esp+30h+var_30] ebx +
mov ecx edi +
mov eax esi +
mov edx 2 +
call sub_45D1C0  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_465334  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_45D4A0  +
test eax eax +
mov ebp eax +
jns loc_4652EB  +
xor ebx ebx +
jmp loc_465025  +
mov eax esi +
call sub_45D8F0  +
test eax eax +
jnz loc_465304  +
xor ebx ebx +
jmp loc_465025  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_45D8F0  +
test eax eax +
jz loc_465023  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_45D220  +
mov [esp+30h+var_30] eax +
jmp loc_465337  +
test ebp ebp +
mov [edi] ebp +
jz loc_465023  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_4653CA  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+8] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_465023  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_465039  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_4654F5  +
cmp cl 47h +
jz loc_4654F5  +
mov eax ebx +
mov edi edx +
call sub_464FE0  +
test eax eax +
mov esi eax +
jnz loc_4654A0  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_46550D  +
test dl dl +
jz loc_46550D  +
cmp dl 45h +
jz loc_46550D  +
mov edx esi +
mov eax [edx] +
cmp eax 20h +
ja loc_4655A0  +
cmp eax 1Ch +
jnb loc_4655AF  +
cmp eax 4 +
jnz loc_465550  +
mov edx [edx+8] +
test edx edx +
jz loc_465490  +
mov eax [edx] +
cmp eax 8 +
ja loc_465540  +
cmp eax 7 +
jnb loc_465550  +
sub eax 1 +
cmp eax 1 +
ja loc_465490  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_46546B  +
nop   +
mov edx 1 +
jmp loc_465552  +
test edi edi +
jz loc_465424  +
test byte ptr [ebx+8] 1 +
jnz loc_465424  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_4654CD  +
lea esi [esi+0] +
mov esi [esi+8] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_4654C0  +
cmp edx 2 +
mov eax esi +
jnz loc_46550D  +
mov ebx [esi+0Ch] +
jmp loc_4654E3  +
mov ebx [ebx+8] +
mov eax [ebx] +
call sub_45D3E0  +
test eax eax +
jnz loc_4654E0  +
mov [esi+0Ch] ebx +
mov eax esi +
jmp loc_46550D  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_465572  +
cmp dl 47h +
jz loc_465515  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_46550B  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_46550B  +
movzx edx dl +
jmp ds:off_4D21F4[edx*4]  +
cmp eax 34h +
jnz loc_465490  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_463EA0  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_46550B  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_46550B  +
movzx eax al +
jmp ds:off_4D22BC[eax*4]  +
cmp eax 4Ch +
jz loc_4655AF  +
jb loc_465550  +
sub eax 4Eh +
cmp eax 1 +
ja loc_465550  +
mov edx [edx+8] +
test edx edx +
jnz loc_465447  +
jmp loc_465550  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
lea eax [ebx+0Ch] +
call sub_45D400  +
cmp eax 1 +
jle loc_46550B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_46550B  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_46550B  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_46550B  +
xor esi esi +
cmp al 24h +
jz loc_465946  +
nop   +
lea esi [esi+0] +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_465643  +
cmp al 24h +
jz loc_465643  +
add esi 1 +
cmp esi ebp +
jl loc_465630  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_45D220  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_46550B  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_465996  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Fh +
mov eax ebx +
call sub_45D1C0  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_46550B  +
test ebp ebp +
jg loc_465616  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Eh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_45D1C0  +
jmp loc_46550D  +
mov eax ebx +
call sub_464FE0  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
cmp byte ptr [eax+2] 0 +
jz loc_46599F  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46599F  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov eax ebx +
call sub_464FE0  +
mov esi eax +
mov eax ebx +
call sub_45D460  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov eax ebx +
call sub_464FE0  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_45D400  +
test eax eax +
js loc_46550B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_46550B  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_462FD0  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov edx 76h +
mov eax ebx +
call sub_45D840  +
test eax eax +
jz loc_46550B  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov edx 68h +
mov eax ebx +
call sub_45D840  +
test eax eax +
jz loc_46550B  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
xor edx edx +
mov eax ebx +
call sub_45D840  +
test eax eax +
jz loc_46550B  +
xor edx edx +
mov eax ebx +
call sub_45D840  +
test eax eax +
jz loc_46550B  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov eax ebx +
call sub_464FE0  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_4659C9  +
cmp al 5Fh +
jz loc_4659C2  +
cmp al 24h +
jnz loc_46550B  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4659D0  +
mov eax edx +
add edx 1 +
shl eax 4 +
sub ebp 2 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov [eax+8] ecx +
mov edi [ebx+0Ch] +
mov dword ptr [eax] 40h +
add edi 2 +
mov [ebx+0Ch] edi +
jmp loc_465660  +
mov [esp+1Ch+var_10] eax +
jmp loc_465687  +
xor edx edx +
mov eax ebx +
call sub_4653F0  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D1C0  +
jmp loc_46550D  +
mov ecx 2Eh +
jmp loc_46595F  +
mov ecx 2Fh +
jmp loc_46595F  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_46550B  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_465AE0  +
test ebx ebx +
jnz loc_465A06  +
cmp dl 5Ah +
jz loc_465A0F  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_4653F0  +
test ebx ebx +
mov edi eax +
jz loc_465A08  +
test byte ptr [esi+8] 1 +
jz loc_465A08  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_465A08  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_465AB4  +
cmp al 5Fh +
jz loc_465AB4  +
sub eax 30h +
cmp al 9 +
ja loc_465AAB  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_465A82  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_465A82  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_465A4E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_465A70  +
cmp cl 2Eh +
jz loc_465A53  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_45D220  +
mov ecx edi +
mov edx 4Dh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_45D1C0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_465A32  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_465ACF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_465AC2  +
cmp cl 5Fh +
jz loc_465AC2  +
jmp loc_465A4E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_465A01  +
***
jmp sub_465B00  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_470810  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_4659E0  +
mov ebx eax +
xor eax eax +
***
test ebx ebx +
jz sub_465CEA  +
cmp dword ptr [ebx] 8 +
ja sub_465CEA  +
mov ecx [ebx] +
jmp ds:off_4D238C[ecx*4]  +
***
mov eax [ebx+8] +
lea esp [ebp-0Ch] +
mov eax [ebx+8] +
jmp loc_465CC7  +
***
jmp loc_465CC7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [ebp+var_54] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_45D2C0  +
mov ecx [ebp+var_2C] +
mov eax 1 +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx ecx +
test ecx ecx +
cmovg eax ecx +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_470810  +
sub esp eax +
test edx edx +
mov eax 1 +
cmovg eax edx +
lea eax ds:12h[eax*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_470810  +
mov edx [ebp+arg_0] +
sub esp eax +
lea edi [ebp+var_160] +
lea eax [esp+178h+var_16C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_28] eax +
mov eax edi +
call sub_45DBF0  +
mov eax [ebp+var_60] +
mov esp esi +
mov ecx [ebp+var_54] +
mov edx [ebp+var_58] +
mov byte ptr [ebp+eax+var_160] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_48] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_466030  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_465FE0  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_465FD1  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_470810  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_465F85  +
jb loc_466045  +
cmp esi 3 +
ja loc_466045  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_465F3C  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_466060  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_45D220  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 43h +
mov [esp+78h+var_78] 0 +
call sub_45D1C0  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_465F9A  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_4659E0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_465FAA  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_465FCF  +
test ebx ebx +
jz loc_466057  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_465D20  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_465FEC  +
cmp al 5Fh +
jnz loc_466020  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_465FFF  +
cmp al 44h +
jnz loc_465E7E  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_465E7E  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_465E8C  +
cmp al 24h +
jnz loc_465E7E  +
jmp loc_465FEC  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_465E6A  +
mov esi 1 +
nop   +
jmp loc_465E8C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_462FD0  +
mov ebx eax +
jmp loc_465F9A  +
xor eax eax +
mov esp edi +
jmp loc_465FD1  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_4653F0  +
mov ecx eax +
jmp loc_465F58  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_45DB30 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_465E50  +
test eax eax +
jz loc_4660D6  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_4660D1  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_466163  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_45DB30 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_465D20  +
test eax eax +
jz loc_466194  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_466176  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_466170  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_4661AE  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_46611C  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_46615E  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_46611C  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_466080  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_465E50  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+20h] +
lea ecx [esp+0Ch] +
call sub_466080  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_465E50  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_465C10  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_465C10  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_466340  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_4D95A0 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D95A0 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] esi +
call sub_467950  +
mov [esp+10h+var_10] eax +
call sub_4529F0  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
mov edi eax +
call vsprintf  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax] +
mov [esp+38h+var_2C] edx +
test esi esi +
jz loc_4664E8  +
mov edx [esi] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
mov edi eax +
jz loc_4664E8  +
mov ebx [esi+0Ch] +
cmovs ebx [esi+8] +
test ebx ebx +
jz loc_4664E8  +
mov edx [ebx] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
jz loc_4664D8  +
js loc_466456  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_4664D8  +
mov ecx edi +
xor edx edx +
shr ecx 1Fh +
mov [esp+38h+var_28] ecx +
test edi edi +
setnle cl  +
test eax eax +
setnle al  +
jle loc_466490  +
test cl cl +
jz loc_466490  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
mov [esi+0Ch] edx +
mov eax [edx+8] +
mov [edx+8] esi +
mov [esi+0Ch] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_4663C7  +
mov edx [ebx+8] +
test edx edx +
jz loc_4664D8  +
mov ecx edi +
shr ecx 1Fh +
test cl cl +
mov byte ptr [esp+38h+var_28] cl +
jz loc_466504  +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
mov [esi+8] edx +
mov eax [edx+0Ch] +
mov [edx+0Ch] esi +
mov [esi+8] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_4663C7  +
cmp byte ptr [esp+38h+var_28] 0 +
jz loc_4664B0  +
test al al +
jz loc_4664B0  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
jmp loc_466477  +
test dl dl +
jz loc_4664D0  +
test cl cl +
jz loc_4664D0  +
mov edx [ebx+8] +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
jmp loc_466440  +
mov esi [ebp+0] +
jmp loc_4663C7  +
test edi edi +
js loc_4664F0  +
mov eax [ebx+8] +
mov [ebx+8] esi +
mov [esi+0Ch] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
mov [ebx+0Ch] esi +
mov [esi+8] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 1 +
jmp loc_466424  +
***
jmp free  +
***
jmp sub_4529F0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1Ch +
call sub_4529F0  +
mov edx [esp+1Ch+arg_0] +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+10h] offset loc_466520 +
mov dword ptr [eax+14h] offset loc_466510 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0 +
mov [eax+0Ch] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+34h] +
mov esi [esp+2Ch] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call esi  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+10h] esi +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+38h] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call dword ptr [esp+2Ch]  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+10h] edx +
mov edx [esp+34h] +
mov [eax+14h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esi] +
test ebx ebx +
jz loc_4666F5  +
mov eax [esi+8] +
test eax eax +
jz loc_466643  +
mov edx [ebx] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_466652  +
mov edx [ebx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov dword ptr [ebx] 0 +
mov eax [ebx+8] +
xor edi edi +
test eax eax +
jz loc_4666D9  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_466674  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+8] +
mov eax [esi+0Ch] +
mov ebp edx +
test eax eax +
jz loc_466688  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov ebp [ebx+8] +
mov eax [ebx+0Ch] +
mov [ebp+0] edi +
test eax eax +
jz loc_4666E2  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_4666A5  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+0Ch] +
mov eax [esi+0Ch] +
mov edi edx +
test eax eax +
jz loc_4666B9  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edi [ebx+0Ch] +
mov [edi] ebp +
mov ebp [ebx] +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] edx +
call eax  +
test ebp ebp +
jz loc_4666E6  +
mov ebx ebp +
mov eax [ebx+8] +
test eax eax +
jnz loc_466661  +
mov eax [ebx+0Ch] +
mov ebp edi +
test eax eax +
jnz loc_466692  +
mov edi ebp +
jmp loc_4666BB  +
test edi edi +
jz loc_4666F5  +
mov ebx edi +
lea esi [esi+0] +
jmp loc_466658  +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] edx +
call eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_4663B0  +
mov eax [ebx] +
test eax eax +
jz loc_4667A5  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call edx  +
mov edi eax +
mov eax [ebx] +
test eax eax +
jz loc_466766  +
test edi edi +
jnz loc_466766  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_466758  +
mov eax [eax+4] +
mov [esp+10h+var_10] eax +
call edx  +
mov eax [ebx] +
mov ecx [esp+10h+arg_8] +
mov [eax+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov ecx [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] ecx +
jz loc_4667C7  +
test edi edi +
js loc_4667E0  +
mov ecx [edx+8] +
mov [eax+0Ch] edx +
mov [eax+8] ecx +
mov dword ptr [edx+8] 0 +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov edi [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] edi +
jnz loc_46678C  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+8] 0 +
mov [ebx] eax +
jmp loc_46679E  +
mov ecx [edx+0Ch] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov dword ptr [edx+0Ch] 0 +
mov [ebx] eax +
jmp loc_46679E  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax esi +
mov edx ebx +
call sub_4663B0  +
mov eax [esi] +
test eax eax +
jz loc_46686F  +
mov eax [eax] +
mov edx [esi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_46686F  +
mov edx [esi+0Ch] +
mov eax [esi] +
test edx edx +
mov ebx [eax+8] +
mov edi [eax+0Ch] +
jz loc_466848  +
mov eax [eax+4] +
mov [esp] eax +
call edx  +
mov eax [esi] +
mov ecx [esi+18h] +
mov edx [esi+14h] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test ebx ebx +
jz loc_466876  +
test edi edi +
mov [esi] ebx +
jnz loc_466865  +
jmp loc_46686F  +
mov ebx eax +
mov eax [ebx+0Ch] +
test eax eax +
jnz loc_466863  +
mov [ebx+0Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esi] edi +
jmp loc_46686F  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_4663B0  +
mov eax [ebx] +
test eax eax +
jz loc_4668B6  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call edx  +
test eax eax +
jnz loc_4668B6  +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jnz loc_4668D2  +
jmp loc_4668DB  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_4668D0  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_4668F2  +
jmp loc_4668FB  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_4668F0  +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jz loc_466950  +
mov edx esi +
mov eax ebx +
call sub_4663B0  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
test eax eax +
mov eax [ebx] +
js loc_466949  +
mov eax [eax+8] +
test eax eax +
jnz loc_466942  +
jmp loc_466950  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_466940  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax [ebx] +
test eax eax +
jz loc_4669B1  +
mov edx esi +
mov eax ebx +
call sub_4663B0  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] edx +
call eax  +
test eax eax +
mov eax [ebx] +
jle loc_466998  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4669A4  +
nop   +
jmp loc_4669B1  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_4669A2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_466992  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
mov esi [eax] +
mov [esp+28h+var_28] 190h +
call sub_4529F0  +
mov edi eax +
jmp loc_4669F1  +
cmp ebx ebp +
jz loc_466A17  +
mov [edi+ebx*4] esi +
mov esi [esi+8] +
add ebx 1 +
test esi esi +
jnz loc_4669E4  +
test ebx ebx +
jz loc_466A31  +
sub ebx 1 +
mov eax [esp+28h+arg_8] +
mov esi [edi+ebx*4] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call [esp+28h+arg_4]  +
test eax eax +
jnz loc_466A33  +
mov esi [esi+0Ch] +
jmp loc_4669F1  +
lea eax ds:0[ebx*8] +
mov [esp+28h+var_28] edi +
lea ebp [ebx+ebx] +
mov [esp+28h+var_24] eax +
call sub_452A70  +
mov edi eax +
jmp loc_4669E8  +
xor eax eax +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_1C] eax +
call free  +
mov eax [esp+28h+var_1C] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnle dl  +
cmovge eax edx +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov esi [edx] +
mov ebx [edx+4] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
mov [eax] esi +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov esi [ebx+18h] +
mov eax [ebx+10h] +
add eax esi +
cmp esi eax +
mov [ebx+10h] eax +
jbe loc_467282  +
add dword ptr [ebx+14h] 1 +
mov edi 38h +
sub edi esi +
cmp esi 37h +
jbe loc_467295  +
mov edi 78h +
sub edi esi +
lea eax [ebx+esi+1Ch] +
add esi edi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] offset unk_4D30E0 +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax [ebx+10h] +
shl eax 3 +
mov [ebx+esi+1Ch] eax +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
lea edx ds:0[ecx*8] +
shr eax 1Dh +
or eax edx +
mov [ebx+esi+20h] eax +
lea eax [ebx+1Ch] +
add esi 8 +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call sub_466B10  +
mov esi [ebx] +
mov eax [ebx+0Ch] +
mov ecx [ebx+4] +
mov edx [ebx+8] +
mov [ebp+0] esi +
mov [ebp+0Ch] eax +
mov eax ebp +
mov [ebp+4] ecx +
mov [ebp+8] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esi+18h] +
test ebx ebx +
jnz loc_467448  +
cmp [esp+1Ch+arg_4] 40h +
jbe loc_467434  +
test byte ptr [esp+1Ch+arg_0] 3 +
jz loc_467410  +
mov edi [esp+1Ch+arg_4] +
lea ebp [esi+1Ch] +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx] +
sub edi 40h +
add ebx 40h +
mov [ebp+0] ecx +
mov ecx [ebx-3Ch] +
mov [ebp+4] ecx +
mov ecx [ebx-38h] +
mov [ebp+8] ecx +
mov ecx [ebx-34h] +
mov [ebp+0Ch] ecx +
mov ecx [ebx-30h] +
mov [ebp+10h] ecx +
mov ecx [ebx-2Ch] +
mov [ebp+14h] ecx +
mov ecx [ebx-28h] +
mov [ebp+18h] ecx +
mov ecx [ebx-24h] +
mov [ebp+1Ch] ecx +
mov ecx [ebx-20h] +
mov [ebp+20h] ecx +
mov ecx [ebx-1Ch] +
mov [ebp+24h] ecx +
mov ecx [ebx-18h] +
mov [ebp+28h] ecx +
mov ecx [ebx-14h] +
mov [ebp+2Ch] ecx +
mov ecx [ebx-10h] +
mov [ebp+30h] ecx +
mov ecx [ebx-0Ch] +
mov [ebp+34h] ecx +
mov ecx [ebx-8] +
mov [ebp+38h] ecx +
mov ecx [ebx-4] +
mov [ebp+3Ch] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call sub_466B10  +
cmp edi 40h +
ja loc_467347  +
mov eax [esp+1Ch+arg_4] +
lea edx [eax-41h] +
shr edx 6 +
lea ecx [edx+1] +
shl ecx 6 +
shl edx 6 +
add [esp+1Ch+arg_0] ecx +
neg edx  +
lea eax [eax+edx-40h] +
mov [esp+1Ch+arg_4] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [esp+1Ch+arg_4] +
mov [esi+18h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] esi +
and ebx 0FFFFFFC0h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call sub_466B10  +
add [esp+1Ch+arg_0] ebx +
and [esp+1Ch+arg_4] 3Fh +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jnz loc_4674CC  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 80h +
sub edx ebx +
cmp [esp+1Ch+arg_4] edx +
cmovbe edx [esp+1Ch+arg_4] +
lea eax [esi+ebx+1Ch] +
mov [esp+1Ch+var_1C] eax +
mov edi edx +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_0] +
add ebx edi +
mov [esp+1Ch+var_18] edx +
call memcpy  +
add [esi+18h] edi +
cmp ebx 40h +
ja loc_467490  +
add [esp+1Ch+arg_0] edi +
sub [esp+1Ch+arg_4] edi +
jmp loc_467326  +
mov ecx ebx +
and ebx 3Fh +
and ecx 0FFFFFFC0h +
lea ebp [esi+1Ch] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] ecx +
call sub_466B10  +
mov ecx [esp+1Ch+var_10] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] ebp +
lea ecx [esi+ecx+1Ch] +
mov [esp+1Ch+var_18] ecx +
call memcpy  +
mov [esi+18h] ebx +
jmp loc_46747C  +
lea ebp [esi+1Ch] +
jmp loc_4673E6  +
***
mov eax [esp+0B8h+arg_4] +
lea ebx [esp+0B8h+var_A4] +
mov [esp+0B8h+var_B0] ebx +
mov [esp+0B8h+var_A4] 67452301h +
mov [esp+0B8h+var_A0] 0EFCDAB89h +
mov [esp+0B8h+var_B4] eax +
mov eax [esp+0B8h+arg_0] +
mov [esp+0B8h+var_9C] 98BADCFEh +
mov [esp+0B8h+var_98] 10325476h +
mov [esp+0B8h+var_90] 0 +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_94] 0 +
mov [esp+0B8h+var_8C] 0 +
call sub_467310  +
mov eax [esp+0B8h+arg_8] +
mov [esp+0B8h+var_B8] ebx +
mov [esp+0B8h+var_B4] eax +
call sub_467260  +
add esp 0B8h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_470810  +
mov edi 1000h +
sub esp eax +
mov esi [esp+10h+arg_110C] +
lea ebx [esp+10h+arg_A4] +
mov [esp+10h+arg_8] 67452301h +
mov [esp+10h+arg_C] 0EFCDAB89h +
mov [esp+10h+arg_10] 98BADCFEh +
mov [esp+10h+arg_14] 10325476h +
mov [esp+10h+arg_1C] 0 +
mov [esp+10h+arg_18] 0 +
mov [esp+10h+arg_20] 0 +
nop   +
lea esi [esi+0] +
xor ebp ebp +
jmp loc_4675C8  +
test eax eax +
jz loc_4675F1  +
mov eax edi +
sub eax ebp +
mov [esp+10h+var_8] eax +
lea eax [ebx+ebp] +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] eax +
call fread  +
add ebp eax +
cmp ebp 0FFFh +
jbe loc_4675C4  +
test eax eax +
jz loc_467610  +
lea eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] 1000h +
mov [esp+10h+var_10] ebx +
call sub_466B10  +
jmp loc_4675C0  +
mov [esp+10h+var_10] esi +
call ferror  +
test eax eax +
mov esi eax +
jnz loc_467646  +
test ebp ebp +
lea edi [esp+10h+arg_8] +
jnz loc_467658  +
mov eax [esp+10h+arg_1110] +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] eax +
call sub_467260  +
add esp 110Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 110Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] ebp +
mov [esp+10h+var_10] ebx +
call sub_467310  +
jmp loc_467626  +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_46793B  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx_0 +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_46793B  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_4742B0  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_4D95E0 +
adc edi ds:dword_4D95E4 +
mov ds:dword_4D95E0 esi +
mov ds:dword_4D95E4 edi +
jmp loc_46777C  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_467752  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_467927  +
mov esi ds:dword_4D95E0 +
mov edi ds:dword_4D95E4 +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_4D95E0 esi +
mov ds:dword_4D95E4 edi +
jz loc_467927  +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470840  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx+1] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470840  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx+2] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470840  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx+3] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470840  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx+4] al +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
call sub_470840  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov [esp-9Ch+arg_8C] edx +
call sub_470950  +
movzx eax ds:byte_4D3140[eax] +
mov [ebx+5] al +
mov eax [esp-9Ch+arg_D8] +
mov [esp-9Ch+arg_90] 180h +
mov [esp-9Ch+arg_8C] 8502h +
mov [esp-9Ch+arg_88] eax +
call _open_0  +
test eax eax +
js loc_467738  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-9Ch+arg_D8] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] edi +
call strlen  +
mov edx edi +
lea esi [eax+1] +
jmp loc_46797F  +
add edx 1 +
mov [esp+2Ch+var_10] edx +
mov edi edx +
cmp byte ptr [edx-1] 25h +
jz loc_467994  +
cmp byte ptr [edx] 0 +
jnz loc_467970  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp-10h+arg_18] edi +
movzx ebx byte ptr [edi] +
mov ebp edi +
add edi 1 +
mov dword ptr [esp+0] offset a0_0 +
movsx eax bl +
mov [esp-10h+arg_0] eax +
call strchr  +
test eax eax +
jnz loc_467990  +
cmp bl 2Ah +
jz loc_467A20  +
lea eax [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] eax +
mov [esp+0] ebp +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
lea edi [eax+esi] +
cmp bl 2Eh +
jnz loc_4679E9  +
jmp loc_467A53  +
mov [esp-10h+arg_18] ecx +
movzx ebx byte ptr [ebp+1] +
movsx eax bl +
mov ebp ecx +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset off_4D3186 +
call strchr  +
lea ecx [ebp+1] +
test eax eax +
jnz loc_4679E1  +
lea eax [ebx-45h] +
cmp al 33h +
lea esi [edi+1Eh] +
ja loc_467A8B  +
movzx eax al +
jmp ds:off_4D318C[eax*4]  +
mov eax [esp-10h+arg_40] +
mov ecx edi +
mov ebx [esp-10h+arg_40] +
mov [esp-10h+arg_18] edi +
mov eax [eax] +
mov edx eax +
mov [esp-10h+arg_8] eax +
mov eax [ebx] +
sar edx 1Fh +
xor eax edx +
sub eax edx +
lea edi [eax+esi] +
mov eax ebx +
movzx ebx byte ptr [ecx] +
add eax 4 +
mov [esp-10h+arg_40] eax +
cmp bl 2Eh +
jnz loc_4679E9  +
lea eax [ecx+1] +
mov [esp-10h+arg_18] eax +
cmp byte ptr [ecx+1] 2Ah +
jz loc_467ABD  +
lea esi [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] esi +
mov [esp+0] eax +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
add edi eax +
jmp loc_4679E9  +
add [esp-10h+arg_40] 4 +
lea edx [ebp+1] +
mov [esp-10h+arg_18] edx +
jmp loc_46797F  +
mov eax [esp-10h+arg_40] +
lea edi [eax+4] +
mov eax [eax] +
mov [esp+0] eax +
call strlen  +
mov [esp-10h+arg_40] edi +
add esi eax +
jmp loc_467A8B  +
add [esp-10h+arg_40] 8 +
lea esi [edi+151h] +
jmp loc_467A8B  +
mov eax [esp-10h+arg_40] +
lea edx [ecx+2] +
mov [esp-10h+arg_18] edx +
add [esp-10h+arg_40] 4 +
mov esi [eax] +
mov ebx [eax] +
sar esi 1Fh +
xor ebx esi +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
mov ecx edx +
sub eax esi +
add edi eax +
jmp loc_4679E9  +
***
cmp edx 4Bh +
ja loc_467B47  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4D33E0[edx*4]  +
test ecx ecx +
jz loc_467B43  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_467B32  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_467B32  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_467B43  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_467B06  +
xor eax eax +
jmp loc_467B32  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_467B76  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_467B76  +
test edx edx +
jz loc_467B76  +
test ecx ecx +
jnz loc_467B80  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_467BF5  +
test dl dl +
jnz loc_467C01  +
cmp al 4Bh +
jnz loc_467C40  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_467AF0  +
test eax eax +
mov [esi] eax +
jz loc_467C35  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_467BB7  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_467C20  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_467BD6  +
test cl cl +
jz loc_467BC7  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_467BD6  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_467C83  +
cmp al 46h +
jnz loc_467C83  +
cmp esi ebp +
jnz loc_467C6A  +
lea esi [esi+0] +
jmp loc_467C83  +
cmp eax 1Bh +
jz loc_467C90  +
cmp eax 19h +
jnz loc_467C63  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_467C83  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_467C52  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_467C6A  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_467C63  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_467CE0  +
test dl dl +
jnz loc_467CE4  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_467AF0  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_467CD9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_467CC3  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jz loc_467D68  +
cmp cl 2Eh +
jnz loc_467D42  +
lea esi [esi+0] +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_467D42  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_467D07  +
lea esi [esi+0] +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_467D30  +
cmp cl 2Eh +
jz loc_467D10  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_467B50  +
mov ecx edi +
mov edx 4Bh +
mov [esp+0Ch+var_C] eax +
mov eax esi +
call sub_467AF0  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [edx+1] +
lea ebx [eax-61h] +
cmp bl 19h +
jbe loc_467D7A  +
cmp al 5Fh +
mov ebx edx +
jnz loc_467D07  +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_467D95  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_467D88  +
cmp cl 5Fh +
jz loc_467D88  +
jmp loc_467D07  +
***
mov ecx [eax+0Ch] +
cmp byte ptr [ecx] 53h +
jz loc_467DB0  +
xor eax eax +
retn   +
push ebp  +
push edi  +
push esi  +
push ebx  +
lea ebx [ecx+1] +
sub esp 0Ch +
mov [eax+0Ch] ebx +
cmp byte ptr [ecx+1] 0 +
jnz loc_467E10  +
xor ecx ecx +
mov ebx [eax+8] +
shr ebx 3 +
and ebx 1 +
test edx edx +
jz loc_467DE5  +
test bl bl +
jnz loc_467DE5  +
mov edx [eax+0Ch] +
movzx edx byte ptr [edx] +
sub edx 43h +
cmp dl 1 +
setbe bl  +
movzx ebx bl +
mov edx offset unk_4D4140 +
lea esi [esi+0] +
cmp cl [edx] +
jz loc_467E95  +
add edx 1Ch +
cmp edx offset unk_4D4204 +
jnz loc_467DF0  +
xor eax eax +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx+2] +
mov [eax+0Ch] ebx +
movsx ecx byte ptr [ecx+1] +
lea ebx [ecx-30h] +
cmp bl 9 +
ja loc_467F3B  +
cmp cl 5Fh +
jz loc_467E91  +
lea ebx [ecx-30h] +
xor edx edx +
cmp bl 9 +
ja loc_467E60  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-30h] +
cmp edx ebx +
ja loc_467E03  +
mov edx [eax+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_467E71  +
lea ecx [edx+1] +
mov [eax+0Ch] ecx +
movsx ecx byte ptr [edx] +
cmp cl 5Fh +
jz loc_467E77  +
mov edx ebx +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_467E35  +
lea ebx [ecx-41h] +
cmp bl 19h +
ja loc_467E03  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-37h] +
jmp loc_467E3C  +
xor ecx ecx +
mov edx ebx +
jmp loc_467E58  +
add ebx 1 +
cmp ebx [eax+20h] +
jnb loc_467E03  +
add dword ptr [eax+28h] 1 +
mov eax [eax+1Ch] +
mov eax [eax+ebx*4] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_467E7A  +
mov esi [edx+14h] +
test esi esi +
mov [esp+1Ch+var_18] esi +
jz loc_467F2B  +
mov ecx [eax+14h] +
mov ebp [eax+18h] +
mov edi [edx+18h] +
mov [esp+1Ch+var_1C] 0 +
cmp ecx ebp +
mov [esp+1Ch+var_14] edi +
jge loc_467EE6  +
mov esi [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_467EE6  +
mov esi [esp+1Ch+var_18] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_1C] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_14] +
mov [edi+8] esi +
mov esi [esp+1Ch+var_1C] +
mov [eax+2Ch] esi +
test ebx ebx +
jz loc_467F33  +
mov esi [edx+0Ch] +
mov ebx [edx+10h] +
add [eax+30h] ebx +
cmp ecx ebp +
jge loc_467E03  +
mov edx [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edx [edx+edi*4] +
test edx edx +
jz loc_467E03  +
mov dword ptr [edx] 18h +
mov eax edx +
mov [edx+4] esi +
mov [edx+8] ebx +
jmp loc_467E05  +
mov ebp [eax+18h] +
mov ecx [eax+14h] +
jmp loc_467EEC  +
mov esi [edx+4] +
mov ebx [edx+8] +
jmp loc_467EF6  +
cmp cl 5Fh +
jz loc_467E26  +
lea ebx [ecx-41h] +
cmp bl 19h +
jbe loc_467E2B  +
jmp loc_467DC5  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_467F90  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_467F75  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_468024  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_468033  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_468000  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_467FF1  +
xor eax eax +
jmp loc_468017  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_468075  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_468071  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_467FE0  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_4680A8  +
cmp al 6Eh +
jz loc_4680A1  +
lea eax [ebx+0Ch] +
call sub_467FE0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4680B2  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_4680AA  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_4680D1  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468080  +
test eax eax +
js loc_4680CC  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_4680CC  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_4680CC  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_468120  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_467FE0  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_467FE0  +
test eax eax +
mov esi eax +
jle loc_4681F4  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_4681F8  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_4681B0  +
cmp esi 9 +
jle loc_468197  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global__0 +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_4681C0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_467B50  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_468176  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_468176  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_4681D0  +
cmp al 5Fh +
jz loc_4681D0  +
cmp al 24h +
jnz loc_468197  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_468197  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNam_0 +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_467B50  +
jmp loc_4681A2  +
xor eax eax +
jmp loc_4681A5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_4681A2  +
***
push ebx  +
mov ebx eax +
jnz loc_46822E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_468225  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_468260  +
cmp edx 76h +
jnz loc_468220  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_467FE0  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_468220  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_467FE0  +
jmp loc_468268  +
lea eax [ebx+0Ch] +
call sub_467FE0  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_468222  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_468222  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_4682C7  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_4682C0  +
cmp dword ptr [eax] 2Fh +
jnz loc_4682C0  +
cmp edx 0 +
jg loc_4682AB  +
jmp loc_4682B7  +
cmp dword ptr [eax] 2Fh +
jnz loc_4682C0  +
test edx edx +
jz loc_4682C3  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_4682A2  +
retn   +
jz loc_4682C3  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_468315  +
cmp dword ptr [ebx] 4Ah +
ja loc_468300  +
mov edx [ebx] +
jmp ds:off_4D3530[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_4682E0  +
test eax eax +
jnz loc_468317  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_4682ED  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_468280  +
test eax eax +
jz loc_468315  +
cmp dword ptr [eax] 2Fh +
jnz loc_468315  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+28h] +
mov edi [esp+24h] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_4683A0  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_468370  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
mov edx [esp+20h] +
add eax [esi+4] +
mov [esp+8] edi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi+0Ch] +
test edx edx +
jnz loc_468363  +
test ebx ebx +
jnz loc_4683B2  +
cmp eax 2 +
mov bl 2 +
jbe loc_4683B8  +
add ebx ebx +
cmp eax ebx +
ja loc_4683B2  +
mov eax [esi] +
mov [esp+4] ebx +
mov [esp] eax +
call realloc  +
test eax eax +
jz loc_4683D1  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_46835C  +
***
mov eax [esi] +
mov [esp] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_468363  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ch +
jz loc_468420  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
cmp dl 5Fh +
setz bl  +
cmp dl 5Ah +
jnz loc_468453  +
test bl bl +
jnz loc_468457  +
xor eax eax +
cmp dl 5Ah +
jz loc_468468  +
cmp dl 45h +
jnz loc_468411  +
add ecx 1 +
mov [esi+0Ch] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_468480  +
lea ecx [eax+2] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+2] +
xor eax eax +
cmp dl 5Ah +
jnz loc_468440  +
add ecx 1 +
xor edx edx +
mov [esi+0Ch] ecx +
mov eax esi +
call sub_469370  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_468440  +
mov eax esi +
call sub_468A30  +
test eax eax +
mov edi eax +
jz loc_468411  +
cmp dword ptr [eax] 27h +
jz loc_468502  +
mov edx [esi+0Ch] +
mov ebp 3Bh +
movzx eax byte ptr [edx] +
cmp al 6Eh +
jz loc_4684F0  +
cmp al 45h +
jz loc_468517  +
test al al +
jz loc_468411  +
lea ebx [edx+1] +
jmp loc_4684BD  +
add ebx 1 +
test al al +
jz loc_468411  +
mov [esi+0Ch] ebx +
movzx eax byte ptr [ebx] +
cmp al 45h +
jnz loc_4684B2  +
mov ecx ebx +
sub ecx edx +
mov eax esi +
call sub_467B50  +
mov ecx edi +
mov edx ebp +
mov [esp+20h+var_20] eax +
mov eax esi +
call sub_467AF0  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_468440  +
lea ecx [edx+1] +
mov bp 3Ch +
mov [esi+0Ch] ecx +
movzx eax byte ptr [edx+1] +
mov edx ecx +
jmp loc_4684A1  +
mov eax [eax+4] +
mov edx [eax+10h] +
test edx edx +
jz loc_468492  +
mov eax [eax+4] +
sub [esi+30h] eax +
jmp loc_468492  +
xor ecx ecx +
jmp loc_4684CB  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov ecx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [ecx] +
sub eax 49h +
cmp al 1 +
ja loc_4685B7  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 45h +
jz loc_468604  +
mov [esp+20h+var_4] 0 +
lea esi [esp+20h+var_4] +
jmp loc_468592  +
sub eax 49h +
cmp al 1 +
ja loc_4685D0  +
mov eax ebx +
call sub_468520  +
mov ecx eax +
test ecx ecx +
jz loc_4685B7  +
mov [esp+20h+var_20] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_467AF0  +
test eax eax +
mov [esi] eax +
jz loc_4685B7  +
mov edx [ebx+0Ch] +
lea esi [eax+8] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_4685F0  +
cmp al 4Ch +
jz loc_4685E0  +
jle loc_468558  +
cmp al 58h +
lea esi [esi+0] +
jnz loc_4685D0  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469E80  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jz loc_4685C0  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_468568  +
mov eax ebx +
call sub_468A30  +
mov ecx eax +
jmp loc_468568  +
mov eax ebx +
call sub_468400  +
mov ecx eax +
jmp loc_468568  +
add edx 1 +
mov eax [esp+20h+var_4] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add ecx 2 +
mov edx 2Fh +
mov [ebx+0Ch] ecx +
mov eax ebx +
xor ecx ecx +
mov [esp+20h+var_20] 0 +
call sub_467AF0  +
jmp loc_4685B9  +
***
jmp sub_468630  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
sub eax 4Ch +
cmp al 0Eh +
ja loc_468790  +
movzx eax al +
jmp ds:off_4D3670[eax*4]  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_469370  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_468910  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 74h +
jz loc_4687E4  +
xor edx edx +
mov eax esi +
call sub_467DA0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_4686C9  +
mov eax esi +
call sub_468520  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_467AF0  +
mov ebx eax +
jmp loc_4686C9  +
mov eax esi +
call sub_469AA0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_467BA0  +
test eax eax +
mov edi eax +
jz loc_468671  +
xor edx edx +
mov eax esi +
call sub_467CA0  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
test bl bl +
jz loc_468783  +
cmp bl 44h +
jz loc_4688A6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_468850  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_468850  +
cmp bl 43h +
jz loc_468850  +
cmp bl 55h +
jz loc_468850  +
cmp bl 4Ch +
nop   +
jz loc_468850  +
cmp bl 53h +
jz loc_4688F0  +
cmp bl 49h +
jz loc_4688D0  +
cmp bl 54h +
jz loc_468901  +
cmp bl 45h +
jz loc_4689ED  +
cmp bl 4Dh +
jnz loc_468783  +
test ebp ebp +
jz loc_468783  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_468708  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_468673  +
mov eax esi +
call sub_469AA0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_4686C9  +
test eax eax +
jz loc_468671  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468671  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_468520  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_467AF0  +
mov ebx eax +
jmp loc_4686C9  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_469AA0  +
mov ecx 3 +
mov edx offset aStd_0 +
mov ebx eax +
mov eax esi +
call sub_467B50  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_467AF0  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_4686C9  +
test edi edi +
jz loc_468671  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468671  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_46869F  +
mov eax esi +
call sub_469AA0  +
test ebp ebp +
jz loc_4688C0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_467AF0  +
mov ebp eax +
cmp bl 53h +
jz loc_46889B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_4688C4  +
test ebp ebp +
jz loc_468783  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468783  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_468704  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_468850  +
mov eax esi +
call sub_468A30  +
test ebp ebp +
jnz loc_46885B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46886E  +
mov ebx 45h +
jmp loc_468711  +
test ebp ebp +
jz loc_468783  +
mov eax esi +
call sub_468520  +
mov edx 4 +
jmp loc_468860  +
mov edx 1 +
mov eax esi +
call sub_467DA0  +
jmp loc_468857  +
mov eax esi +
call sub_4680C0  +
jmp loc_468857  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_4689C2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_468991  +
mov eax esi +
call sub_468630  +
test eax eax +
mov edi eax +
jz loc_468944  +
mov eax [eax] +
cmp eax 44h +
jz loc_468944  +
cmp eax 46h +
jnz loc_4689B0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_468974  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_468974  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_468974  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_467AF0  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_468080  +
test eax eax +
mov ebp eax +
jns loc_46892B  +
xor ebx ebx +
jmp loc_468673  +
mov eax esi +
call sub_468110  +
test eax eax +
jnz loc_468944  +
xor ebx ebx +
jmp loc_468673  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_468110  +
test eax eax +
jz loc_468671  +
mov ecx 0Eh +
mov edx offset aStringLitera_0 +
mov eax esi +
call sub_467B50  +
mov [esp+30h+var_30] eax +
jmp loc_468977  +
test ebp ebp +
mov [edi] ebp +
jz loc_468671  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_468A0A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_468671  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_4686C9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [eax+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_468AA2  +
cmp al 56h +
jz loc_468AA2  +
cmp al 4Bh +
jz loc_468AA2  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_468A98  +
movzx edx dl +
jmp ds:off_4D36B4[edx*4]  +
mov eax ebx +
call sub_469E80  +
mov edx 41h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468A98  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_468A98  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_468B3E  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_467BA0  +
test eax eax +
mov esi eax +
jz loc_468A98  +
mov eax ebx +
call sub_468A30  +
test eax eax +
mov edx eax +
mov [esi] eax +
jz loc_468A98  +
mov eax [eax] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_468AF6  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_468A98  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_468A98  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_468ACE  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468140  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
test eax eax +
jz loc_468A98  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468A98  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_468630  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_46917B  +
sub eax 30h +
cmp al 9 +
ja loc_4691D9  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_468B90  +
sub ecx edx +
mov eax ebx +
call sub_467B50  +
test eax eax +
mov esi eax +
jz loc_468BBB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_46917D  +
xor eax eax +
jmp loc_468C25  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468A30  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 59h +
jz loc_4691AD  +
mov edx 1 +
mov eax ebx +
call sub_469310  +
mov edx eax +
mov eax ebx +
call sub_467CA0  +
mov edx [ebx+0Ch] +
mov ecx eax +
xor eax eax +
cmp byte ptr [edx] 45h +
jz loc_4691A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468A30  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_468A98  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_468A98  +
movzx eax al +
jmp ds:off_4D37E0[eax*4]  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
lea edi [esp+2Ch+var_10] +
call sub_468A30  +
mov ecx 1 +
mov edx edi +
mov ebp eax +
mov eax ebx +
call sub_467BA0  +
test eax eax +
mov esi eax +
jz loc_468BBB  +
mov eax ebx +
call sub_468A30  +
test eax eax +
mov [esi] eax +
jz loc_468BBB  +
cmp esi edi +
jz loc_468D07  +
mov edx [eax] +
lea ecx [edx-1Fh] +
cmp ecx 1 +
jbe loc_4691F6  +
cmp edx 29h +
jz loc_468D07  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_468BBB  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_468BBB  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx 2Bh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_468C25  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468A30  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468A30  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468A30  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_468DCB  +
cmp al 5Fh +
jz loc_468DCB  +
sub eax 41h +
cmp al 19h +
ja loc_4691B8  +
xor edx edx +
mov eax ebx +
call sub_467DA0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_468A9A  +
mov eax ebx +
call sub_468520  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
mov eax ebx +
call sub_4680C0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_468B36  +
test eax eax +
jz loc_468A98  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468A98  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_468DE4  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468140  +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_468A30  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+2Ch+var_10] eax +
jmp loc_468B36  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4D48C0h[eax*4] +
jl loc_469149  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_468A9A  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4B2C +
mov dword ptr [eax+4] offset off_4D4B2C +
lea esi [esi+0] +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_468A9A  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4B04 +
mov dword ptr [eax+4] offset off_4D4B04 +
jmp loc_468EE0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4AC8 +
mov dword ptr [eax+4] offset off_4D4AC8 +
jmp loc_468EE0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4AF0 +
mov dword ptr [eax+4] offset off_4D4AF0 +
jmp loc_468EE0  +
cmp byte ptr [ecx+2] 5Fh +
jz loc_469220  +
mov eax ebx +
call sub_468040  +
mov esi eax +
test esi esi +
jz loc_468BBB  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_468C25  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468A30  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_468C25  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4B18 +
mov dword ptr [eax+4] offset off_4D4B18 +
jmp loc_468EE0  +
mov eax ebx +
call sub_468A30  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_468C25  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4B40 +
mov dword ptr [eax+4] offset off_4D4B40 +
jmp loc_468EE0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46916E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469234  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4ADC +
mov dword ptr [eax+4] offset off_4D4ADC +
jmp loc_468EE0  +
mov ecx 4 +
mov edx offset aAuto_1 +
mov eax ebx +
call sub_467B50  +
jmp loc_468A9A  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_4690DD  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_46920F  +
mov eax ebx +
call sub_468A30  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_468A98  +
lea eax [ebx+0Ch] +
call sub_467FE0  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_46913C  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_468A9A  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_46923F  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_468E96  +
mov edx large ds:4 +
xor eax eax +
jmp loc_468EE0  +
xor esi esi +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468A30  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_468C25  +
add edx 1 +
mov eax ecx +
mov [ebx+0Ch] edx +
jmp loc_468C25  +
add ecx 2 +
mov [ebx+0Ch] ecx +
jmp loc_468C00  +
mov eax ebx +
call sub_468630  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468A98  +
cmp dword ptr [eax] 18h +
jnz loc_468B3E  +
jmp loc_468A9A  +
mov eax ebx +
nop   +
lea esi [esi+0] +
call sub_469E80  +
test eax eax +
mov esi eax +
jnz loc_468BAF  +
xor eax eax +
jmp loc_468C25  +
mov ecx [esp+2Ch+var_10] +
mov edx [eax+4] +
mov [eax+4] ecx +
mov eax [esi] +
mov [esp+2Ch+var_10] eax +
mov [esi] edx +
mov edx [edx] +
jmp loc_468CDE  +
lea eax [ebx+0Ch] +
call sub_467FE0  +
mov esi [esp+2Ch+var_10] +
jmp loc_469103  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_469E80  +
mov esi eax +
jmp loc_468FA6  +
mov edx large ds:4 +
jmp loc_468EE0  +
mov esi large ds:4 +
jmp loc_468E96  +
***
mov ebx eax +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_469347  +
xor esi esi +
test edx edx +
jnz loc_46934D  +
mov eax ebx +
call sub_469250  +
test eax eax +
jz loc_469360  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_467AF0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468A30  +
test eax eax +
mov esi eax +
jnz loc_469325  +
lea esi [esi+0] +
xor eax eax +
jmp loc_469341  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_469450  +
cmp cl 47h +
jz loc_469450  +
mov eax ebx +
mov edi edx +
call sub_468630  +
test eax eax +
mov esi eax +
jnz loc_469402  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_469468  +
test dl dl +
jz loc_469468  +
cmp dl 45h +
jz loc_469468  +
mov edx [eax] +
cmp edx 4 +
jz loc_469470  +
jb loc_4693E0  +
sub edx 1Ch +
cmp edx 4 +
ja loc_4693E0  +
mov eax [eax+4] +
test eax eax +
jnz loc_4693C1  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_469310  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_4693A0  +
test byte ptr [ebx+8] 1 +
jnz loc_4693A0  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_469423  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_469416  +
cmp edx 2 +
mov eax esi +
jnz loc_469468  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_469444  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_469437  +
mov [esi+8] eax +
mov eax esi +
jmp loc_469468  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_4694B0  +
cmp dl 47h +
jz loc_469485  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_4694E0  +
cmp dword ptr [eax] 33h +
ja loc_4694E0  +
mov edx [eax] +
jmp ds:off_4D38A4[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_469466  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_469466  +
movzx edx dl +
jmp ds:off_4D3974[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_469466  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_469466  +
movzx eax al +
jmp ds:off_4D3A3C[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_469477  +
nop   +
mov edx 1 +
jmp loc_4693E2  +
lea eax [ebx+0Ch] +
call sub_467FE0  +
cmp eax 1 +
jle loc_469466  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_469466  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_469466  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_469466  +
xor esi esi +
cmp al 24h +
jz loc_469870  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_469549  +
cmp al 24h +
jz loc_469549  +
add esi 1 +
cmp esi ebp +
jl loc_469536  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_467B50  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_469466  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_4698C0  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_467AF0  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_469466  +
test ebp ebp +
jg loc_469521  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468630  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468630  +
mov esi eax +
mov eax ebx +
call sub_468040  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
cmp byte ptr [eax+2] 0 +
jz loc_4698C9  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_4698C9  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov edx 76h +
mov eax ebx +
call sub_468210  +
test eax eax +
jz loc_469466  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468630  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468A30  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468A30  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_467FE0  +
test eax eax +
js loc_469466  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_469466  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468A30  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov edx 68h +
mov eax ebx +
call sub_468210  +
test eax eax +
jz loc_469466  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
xor edx edx +
mov eax ebx +
call sub_468210  +
test eax eax +
nop   +
jz loc_469466  +
xor edx edx +
mov eax ebx +
call sub_468210  +
test eax eax +
jz loc_469466  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468630  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
add ecx 0Fh +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_468A30  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
add ecx 0Ah +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_468A30  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468A30  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468A30  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov eax ebx +
call sub_468A30  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_4698F3  +
cmp al 5Fh +
jz loc_4698EC  +
cmp al 24h +
jnz loc_469466  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4698FA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_4698FA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_469566  +
mov [esp+1Ch+var_10] eax +
jmp loc_46958D  +
xor edx edx +
mov eax ebx +
call sub_469370  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
jmp loc_469468  +
mov ecx 2Eh +
jmp loc_469889  +
mov ecx 2Fh +
jmp loc_469889  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_469466  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_4699B4  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_469A94  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_469A26  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_4699BB  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_468140  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_469A1C  +
mov edi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [edi+10h] +
mov [edi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_469A1C  +
test eax eax +
jz loc_469A1C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_469A1E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_4699D8  +
mov ebx edi +
cmp cl bl +
jle loc_469A13  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_469A1C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_4D43A0[ecx] +
lea ebp off_4D43A0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_4699C8  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_469A60  +
cmp cl [esp+1Ch+var_11] +
jg loc_4699CE  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_4699D8  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_4699BB  +
mov eax edi +
cmp al 63h +
jnz loc_4699BB  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_468A30  +
mov edx 33h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_467AF0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_469A1E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_469A1E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_46994C  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46A175  +
cmp al 54h +
jz loc_46A183  +
cmp al 73h +
jz loc_469FC7  +
cmp al 66h +
jz loc_469F70  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_469EE0  +
mov eax ebx +
call sub_469AA0  +
test eax eax +
jz loc_46A150  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_46A1A1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_46A160  +
cmp al 74h +
setz cl  +
jnz loc_46A41A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46A112  +
mov eax ebx +
call sub_469910  +
test eax eax +
mov ebp eax +
jz loc_46A150  +
mov eax [eax] +
cmp eax 31h +
jz loc_46A004  +
cmp eax 32h +
jz loc_46A191  +
cmp eax 33h +
jnz loc_46A150  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A2A5  +
mov eax ebx +
call sub_469E80  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_469F58  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_467AF0  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
cmp byte ptr [edx+1] 70h +
jnz loc_469EFD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_46A298  +
mov eax ebx +
call sub_468080  +
add eax 1 +
jz loc_46A150  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46A150  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46A150  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_469ED4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46A1C0  +
cmp al 70h +
jnz loc_469EFD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_469E80  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset unk_4D3B0F +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46A2E4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_46A3D3  +
jle loc_46A2C0  +
cmp edx 2 +
jz loc_46A200  +
cmp edx 3 +
jnz loc_46A150  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3B1B +
mov ecx 3 +
cmps   +
jz loc_46A301  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46A150  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46A146  +
mov edx 5Fh +
mov eax ebx +
call sub_46A430  +
mov esi eax +
mov eax ebx +
call sub_468A30  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46A386  +
cmp dl 70h +
jz loc_46A3B2  +
cmp dl 69h +
jnz loc_46A150  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46A150  +
mov eax ebx +
call sub_469E80  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_467AF0  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
xor esi esi +
test cl cl +
jnz loc_46A2F0  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46A430  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
cmp al 77h +
jz loc_46A08F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_469EFD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_469EB7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_468400  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4680C0  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_46A03F  +
mov eax ebx +
call sub_468520  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468A30  +
mov esi eax +
mov eax ebx +
call sub_469AA0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_46A358  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46A332  +
mov eax ebx +
call sub_469E80  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3B12 +
mov ecx 3 +
cmps   +
jz loc_46A31F  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3B15 +
mov ecx 3 +
cmps   +
jz loc_46A258  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3B18 +
mov ecx 3 +
cmps   +
jnz loc_46A378  +
mov eax ebx +
call sub_469AA0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A393  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_467AF0  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_469F96  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A430  +
jmp loc_469F40  +
test edx edx +
jnz loc_46A150  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_469ED4  +
mov eax ebx +
call sub_468A30  +
jmp loc_469F55  +
mov eax ebx +
call sub_468A30  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A11C  +
mov eax ebx +
call sub_469E80  +
mov esi eax +
mov eax ebx +
call sub_469E80  +
mov edi eax +
mov eax ebx +
call sub_469E80  +
jmp loc_46A0D8  +
mov edx 45h +
mov eax ebx +
call sub_46A430  +
mov esi eax +
jmp loc_46A26D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46A348  +
sub eax 72h +
cmp al 1 +
ja loc_46A20F  +
mov eax ebx +
call sub_468A30  +
mov [esp+1Ch+var_10] eax +
jmp loc_46A21A  +
mov eax ebx +
call sub_468520  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov [esp+1Ch+var_1C] eax +
jmp loc_46A1E7  +
mov eax ebx +
call sub_469E80  +
mov esi eax +
jmp loc_46A26D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46A0D8  +
mov eax ebx +
call sub_468520  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467AF0  +
mov esi eax +
jmp loc_46A26D  +
cmp byte ptr [eax+1] 69h +
jnz loc_46A150  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A430  +
jmp loc_46A0D8  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_46A3EA  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46A3F8  +
cmp dl 70h +
jz loc_46A3F8  +
cmp eax 33h +
jnz loc_469F39  +
jmp loc_469F2D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46A3EA  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46A3EA  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46A3EA  +
cmp al 69h +
jz loc_469EF3  +
jmp loc_469EFD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [eax+0Ch] +
mov [esp+28h+var_C] 0 +
lea esi [esp+28h+var_C] +
cmp [eax] dl +
jnz loc_46A477  +
jmp loc_46A4A1  +
mov ecx eax +
mov edx 2Eh +
mov [esp+28h+var_28] 0 +
mov eax ebx +
call sub_467AF0  +
test eax eax +
mov [esi] eax +
jz loc_46A482  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
mov ecx edi +
cmp [eax] cl +
jz loc_46A490  +
mov eax ebx +
call sub_469E80  +
test eax eax +
jnz loc_46A450  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+28h+var_C] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
xor ecx ecx +
mov [ebx+0Ch] eax +
mov edx 2Eh +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_467AF0  +
jmp loc_46A484  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_46A543  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_46A4FC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_46A543  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A4E1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_46A4E4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 7Ch +
mov eax [ecx] +
mov [esp+88h+var_7C] edx +
cmp eax 4Bh +
ja loc_46C1C6  +
jmp ds:off_4D3D84[eax*4]  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_58] edi +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
mov esi [esp+88h+var_50] +
test esi esi +
jnz loc_46A5BE  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_46DD50  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+114h] +
test edi edi +
jz loc_46DABE  +
mov edx edi +
jmp loc_46A5E8  +
mov edx [edx] +
test edx edx +
jz loc_46A577  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_46A5E2  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_46A577  +
cmp eax ecx +
jnz loc_46A5E2  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46A5C8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46A643  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46A628  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46A62B  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasF_0 +
jmp loc_46A6C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C71h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C493  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A6A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A6A3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTem_0 +
jmp loc_46A743  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C59h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C266  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A720  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A723  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFu_0 +
jmp loc_46A7C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C43h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C253  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A7A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A7A3  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunct_0 +
jmp loc_46A843  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C326  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A820  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A823  +
mov eax [ebx+100h] +
mov esi offset aGuardVariabl_0 +
jmp loc_46A8C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C12h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C313  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A8A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A8A3  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor_0 +
jmp loc_46A943  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3BFEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C340  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A920  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A923  +
mov eax [ebx+100h] +
mov esi offset aCovariantRet_0 +
jmp loc_46A9C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3BEEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C240  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A9A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46A9A3  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunk_0 +
jmp loc_46AA43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3BD3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C480  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AA20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AA23  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualTh_0 +
jmp loc_46AAC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3BC1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C466  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AAA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AAA3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFo_0 +
jmp loc_46AB43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3BABh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C453  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AB20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AB23  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoName_0 +
jmp loc_46ABC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B9Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C440  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46ABA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46ABA3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor_0 +
jmp loc_46AC43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B87h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C428  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AC20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AC23  +
mov eax [ebx+100h] +
mov esi offset aConstruction_0 +
jmp loc_46ACC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B74h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C393  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46ACA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46ACA3  +
mov eax [ebx+100h] +
mov esi offset aVttFor_0 +
jmp loc_46AD43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B5Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C380  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AD20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AD23  +
mov eax [ebx+100h] +
mov esi offset aVtableFor_0 +
jmp loc_46ADC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B52h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C366  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46ADA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46ADA3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D2C8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+8] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edi [ecx+4] +
mov [esp+88h+var_70] eax +
test edi edi +
jz loc_46D6E8  +
mov eax [ebx+110h] +
xor edx edx +
xor esi esi +
mov [esp+88h+var_6C] ecx +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_78] eax +
mov ecx [esp+88h+var_74] +
add esi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [edi] +
mov [ebx+114h] eax +
mov [eax+4] edi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_46C1E5  +
cmp edx 4 +
mov ebp [esp+88h+var_6C] +
jz loc_46DA5E  +
cmp edx 2 +
jnz loc_46AF53  +
mov ecx [edi+8] +
mov eax [ecx] +
cmp eax 45h +
jz loc_46DB15  +
sub eax 1Ch +
cmp eax 4 +
ja loc_46AF53  +
mov eax esi +
shl eax 4 +
add eax [esp+88h+var_78] +
cmp esi 4 +
jz loc_46DAD4  +
mov [esp+88h+var_6C] edi +
mov edi [esp+88h+var_74] +
jmp loc_46AF15  +
add eax 10h +
cmp esi 4 +
jz loc_46DAD4  +
mov edx [eax-0Ch] +
add esi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] edi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_46AF09  +
mov edi [esp+88h+var_6C] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
cmp dword ptr [edi] 4 +
jz loc_46DAC5  +
test esi esi +
jz loc_46D735  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
mov ebp [edi] +
test ebp ebp +
jz loc_46AF9C  +
sub edi 10h +
test esi esi +
jz loc_46D735  +
mov ebp [edi] +
sub esi 1 +
test ebp ebp +
jnz loc_46AF88  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DB59  +
lea edx [eax+1] +
mov ecx [edi-4] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 20h +
mov eax ebx +
mov byte ptr [ebx+104h] 20h +
call sub_46DD50  +
jmp loc_46AF88  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46DD30  +
and edi 4 +
mov eax [ebx+100h] +
jnz loc_46C203  +
mov esi offset asc_4D3B24 +
jmp loc_46B01A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_4D3B24+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C222  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AFF7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AFFA  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aAbi_0 +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
jmp loc_46B0A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B23h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C4A6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B083  +
mov edx [ecx+4] +
mov eax ebx +
call sub_4682E0  +
test eax eax +
jz loc_46DA79  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_46C916  +
mov edx [eax+4] +
test edx edx +
jz loc_46C916  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_46B104  +
mov eax [ebp+4] +
mov [esp+88h+var_74] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+88h+var_70] eax +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov [ebx+11Ch] edi +
call sub_46DD30  +
cmp edi [esp+88h+var_70] +
jge loc_46C1D5  +
mov eax [ebx+100h] +
mov ebp offset asc_4D3CB8 +
jmp loc_46B183  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_4D3CB8+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1D5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46B160  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B163  +
mov eax [ebx+100h] +
mov esi offset aNonTransacti_0 +
jmp loc_46B203  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CA3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C353  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B1E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B1E3  +
test byte ptr [esp+88h+var_7C] 4 +
jnz loc_46D1F2  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46A5C8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46B292  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46B273  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B276  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aClone_0 +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
jmp loc_46B323  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D7Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C4E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B300  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B303  +
lea edx [ecx+4] +
mov eax ebx +
call sub_468280  +
test eax eax +
jz loc_46CC90  +
cmp dword ptr [eax] 2Fh +
jz loc_46CC70  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov [ebx+110h] esi +
jmp loc_46A5C8  +
mov eax [ebx+114h] +
test byte ptr [esp+88h+var_7C] 4 +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+88h+var_78] eax +
jz loc_46B3DF  +
mov esi [edx] +
test esi esi +
jnz loc_46B3DF  +
cmp dword ptr [edx+8] 6 +
jz loc_46D828  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46D635  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D3A4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+8] +
call sub_46DD30  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_46D6BD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D36D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov eax [esp+88h+var_78] +
mov [ebx+114h] eax +
jmp loc_46A5C8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov edx [ecx+8] +
cmp dword ptr [edx] 37h +
jz loc_46CB9F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+88h+var_74] eax +
mov eax [eax] +
mov [esp+88h+var_78] edi +
cmp eax 31h +
jz loc_46CD7D  +
cmp eax 33h +
jz loc_46CE4B  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F080  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F130  +
jmp loc_46A5C8  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F080  +
jmp loc_46A5C8  +
mov edi [ecx+4] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_46CA19  +
mov esi offset aThis_0 +
jmp loc_46B533  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D17h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B510  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B513  +
mov eax [ebx+100h] +
mov esi offset aDecltype_0 +
jmp loc_46B5B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D0Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C603  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B590  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B593  +
mov eax [ecx+4] +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46B621  +
mov edx eax +
mov ebp [esp+88h+var_78] +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi ebp +
jz loc_46A5C8  +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46B684  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46B665  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B668  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_46D145  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_46A5C8  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46DD30  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46DD30  +
jmp loc_46A5C8  +
mov eax [ebx+100h] +
mov esi offset aJavaResource_0 +
jmp loc_46B753  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D03h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C518  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B730  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B733  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_46B7D6  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_46B7D6  +
cmp esi 6 +
jbe loc_46D4FE  +
cmp esi 7 +
jnz loc_46B7D6  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_46B7D6  +
cmp dword ptr [edx+8] 1 +
jz loc_46DB1F  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D4B3  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D44C  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_46D6F7  +
cmp esi 8 +
jz loc_46D660  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_46B48C  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_46B48C  +
mov eax [eax+4] +
mov edi offset unk_4D3B1B +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+88h+var_78] eax +
mov eax [edx+4] +
mov [esp+88h+var_74] eax +
mov eax [edx+8] +
mov [esp+88h+var_70] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_46D945  +
mov eax ebx +
mov edx offset aNew_0 +
call sub_46A4C0  +
mov eax [esp+88h+var_78] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_46B8DA  +
mov edx [esp+88h+var_7C] +
mov ecx eax +
mov eax ebx +
call sub_46F130  +
mov edx 20h +
mov eax ebx +
call sub_467F60  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_74] +
mov edx edi +
call sub_46DD30  +
mov ecx [esp+88h+var_70] +
test ecx ecx +
jz loc_46A5C8  +
mov edx edi +
mov eax ebx +
call sub_46F130  +
jmp loc_46A5C8  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46B917  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
mov eax [ebp+8] +
test eax eax +
jz loc_46A5C8  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_46CEAC  +
mov edi offset asc_4D3CB8 +
jmp loc_46B963  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_4D3CB8+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C8CD  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_46B940  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
mov edx [esp+88h+var_78] +
add dword ptr [ebx+120h] 1 +
jmp loc_46B943  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_46CCAA  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_4D4960 +
jz loc_46CC9F  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46D5FE  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+8] 0 +
jz loc_46C9A9  +
mov esi offset a_accum_0 +
jmp loc_46BA33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CB0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BA10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BA13  +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ecx +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_46DD30  +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_46BACD  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_46DD50  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
jmp loc_46A5C8  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov ecx eax +
mov [esp+88h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+88h+var_70] edi +
test esi esi +
mov [esp+88h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
jz loc_46DCF2  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_46DCF2  +
mov eax esi +
mov esi 1 +
mov [esp+88h+var_6C] ebp +
mov [esp+88h+var_74] ecx +
jmp loc_46BB4F  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46BBA0  +
mov edx [eax+8] +
test edx edx +
jnz loc_46BB9A  +
cmp esi 3 +
ja loc_46D3DB  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+88h+var_58] +
mov [esp+edx+88h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+88h+var_58] edi +
mov edi [esp+88h+var_74] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_46BB42  +
mov ebp [esp+88h+var_6C] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov ecx [ebp+8] +
call sub_46DD30  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_46A5C8  +
cmp esi 1 +
jz loc_46D81F  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov [esp+88h+var_78] ebp +
mov ebp [esp+88h+var_7C] +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
lea esi [esi+0] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_46DD50  +
cmp esi 1 +
jz loc_46CB7F  +
sub esi 1 +
jmp loc_46BBF0  +
test byte ptr [esp+88h+var_7C] 20h +
jnz loc_46CD20  +
cmp dword ptr [ecx+4] 0 +
jz loc_46BC2C  +
test byte ptr [esp+88h+var_7C] 40h +
jz loc_46D3EA  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_88] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_46EB10  +
jmp loc_46A5C8  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType_0 +
jmp loc_46BC83  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D74h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C653  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BC60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BC63  +
mov eax [ebx+100h] +
mov esi offset aLambda_0 +
jmp loc_46BD03  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D62h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C750  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BCE0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BCE3  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestru_0 +
jmp loc_46BD83  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D59h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C640  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BD60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BD63  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstr_0 +
jmp loc_46BE03  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D3Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C300  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BDE0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BDE3  +
mov eax [ebx+100h] +
mov esi offset aTransactionC_0 +
jmp loc_46BE83  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C5F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BE60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BE63  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_46BF03  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CCDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C5D8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BEE0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BEE3  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_46BF83  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CCDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C5C5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BF60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BF63  +
mov ebp [ecx+4] +
mov esi offset aOperator_2 +
mov eax [ebx+100h] +
mov edi [ebp+8] +
jmp loc_46C006  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CC3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C530  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BFE3  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BFE6  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_46C065  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46CF18  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov ecx esi +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46CEE1  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46A5C8  +
test byte ptr [esp+88h+var_7C] 4 +
mov eax [ecx+4] +
jnz loc_46C92A  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_46A5C8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46C105  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46C0E6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C0E9  +
mov eax [ecx+4] +
mov edx [eax] +
cmp edx 5 +
jz loc_46D586  +
cmp edx 23h +
jz loc_46CB72  +
cmp [ebp+0] edx +
jz loc_46CB72  +
cmp edx 24h +
jnz loc_46A571  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
test ecx ecx +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_4C] eax +
jnz loc_46A59E  +
jmp loc_46A59B  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
add edi 1 +
cmp edi esi +
jnz loc_46B132  +
jmp loc_46A5C8  +
mov edi [edi+4] +
test edi edi +
jz loc_46D6E8  +
add eax 10h +
cmp esi 4 +
jz loc_46C907  +
mov edx ebp +
jmp loc_46AE99  +
cmp eax 0FFh +
jz loc_46D7B1  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov edi [ebp+8] +
cmp dword ptr [edi] 45h +
jz loc_46CF4F  +
mov edx [esp+88h+var_7C] +
mov ecx edi +
mov eax ebx +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor_0 +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
jmp loc_46C2A0  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C5Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C2E6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C281  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C284  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset aIn_0 +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
jmp loc_46C3CF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B79h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C415  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C3B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C3B3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D10E  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46A5C8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D184  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_46CD55  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_46A5C8  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_46C57F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C560  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C563  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_46EE00  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D2FF  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov eax [ebp+4] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46C677  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46C722  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46C6DB  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C728  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46C6C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C6C3  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46D336  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46A5C8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset asc_4D3D63 +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [ebx+100h] +
jmp loc_46C78F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D65h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C7D5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C770  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C773  +
mov eax [ebp+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46C7F9  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46C8A2  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46C85B  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C8A8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46C840  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C843  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46D1BB  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46A5C8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov edi [ebx+120h] +
call sub_46DD30  +
cmp edi [ebx+120h] +
jnz loc_46A5C8  +
cmp [ebx+100h] esi +
jnz loc_46A5C8  +
sub esi 2 +
mov [ebx+100h] esi +
jmp loc_46A5C8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov eax [ebp+4] +
test esi esi +
mov [esp+88h+var_74] eax +
jnz loc_46B129  +
jmp loc_46A5C8  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_46A5C8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46C961  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46C942  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C945  +
mov esi offset a_fract_0 +
jmp loc_46C9D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CB7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46A5C8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C9B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C9B3  +
mov esi offset aParm_0 +
jmp loc_46CA3F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D1Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CA85  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CA20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CA23  +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_80] edi +
mov esi eax +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46CAA3  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46CB47  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46CB00  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CB4D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46CAE5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CAE8  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46D7E8  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46A5C8  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_46A577  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov [esp+88h+var_88] eax +
mov eax ebx +
call sub_46E890  +
jmp loc_46A5C8  +
mov ecx [ecx+4] +
mov eax [ecx+4] +
mov esi [eax] +
mov [esp+88h+var_78] eax +
cmp byte ptr [esi+1] 63h +
jz loc_46D744  +
cmp dword ptr [ecx] 31h +
jz loc_46D85C  +
mov eax [ecx+4] +
mov edi offset unk_4D3B12 +
mov ecx 3 +
mov esi [eax] +
cmps   +
mov ecx [edx+4] +
jnz loc_46CBDD  +
cmp dword ptr [ecx] 3 +
jz loc_46D8D5  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46F130  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx_0 +
mov edx [eax+4] +
mov [esp+88h+var_78] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46D890  +
mov ecx 3 +
mov esi edx +
mov edi offset unk_4D3B12 +
cmps   +
jnz loc_46D8FA  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46F130  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_46A5C8  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_46A5C8  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_46A5C8  +
mov edx 29h +
mov eax ebx +
call sub_467F60  +
jmp loc_46A5C8  +
mov edx [ebx+11Ch] +
jmp loc_46CC7D  +
cmp dword ptr [eax] 2Fh +
jnz loc_46CC90  +
cmp edx 0 +
jle loc_46D8BE  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_46CC78  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov eax [ebx+100h] +
jmp loc_46B9FC  +
mov eax [ebx+100h] +
mov esi offset a_sat_0 +
jmp loc_46CCDA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CA9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46B9BB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CCB7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46CCBA  +
mov esi [esp+88h+var_7C] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+88h+var_88] eax +
mov edx esi +
mov eax ebx +
call sub_46EB10  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_46A5C8  +
mov edx esi +
mov eax ebx +
call sub_46DD30  +
jmp loc_46A5C8  +
cmp ecx 0FFh +
jz loc_46D90E  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [ebp+4] +
jmp loc_46C541  +
mov eax [esp+88h+var_74] +
mov edi offset aAd_0 +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+88h+var_78] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_46CDA5  +
cmp eax 3 +
jz loc_46DA98  +
cmp eax 37h +
jz loc_46DBBD  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F080  +
test ebp ebp +
jz loc_46B4D1  +
mov edi offset aGs_0 +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_46D4EA  +
mov edi offset unk_4D3B0F +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_46B4D1  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DA2C  +
lea edx [eax+1] +
mov ecx [esp+88h+var_78] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D9FA  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46A5C8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D9C3  +
lea edx [eax+1] +
mov ecx [esp+88h+var_74] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
add ecx 4 +
call sub_46EE00  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D98C  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46B4D1  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_88] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_46B933  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C0AB  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C079  +
mov eax [ebx+100h] +
mov esi offset aDefaultArg_0 +
jmp loc_46CF7F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3B34h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CFC5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CF60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46CF63  +
mov eax [edi+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov esi eax +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_46CFEB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+88h+var_78] +
jz loc_46D091  +
mov esi [esp+88h+var_78] +
mov eax [ebx+100h] +
lea ebp [edx+esi] +
jmp loc_46D04B  +
lea edx [eax+1] +
add esi 1 +
cmp esi ebp +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_46D097  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_46D030  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+88h+var_78] +
jmp loc_46D033  +
mov edx [ebx+100h] +
mov esi offset asc_4D3B39 +
jmp loc_46D0BF  +
lea ecx [edx+1] +
add esi 1 +
cmp esi 4D3B3Ch +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
jz loc_46D106  +
mov edx ecx +
cmp edx 0FFh +
movzx eax byte ptr [esi] +
jnz loc_46D0A0  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_78] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_78] +
jmp loc_46D0A3  +
mov edi [edi+4] +
jmp loc_46C22E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C4C8  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B6E7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C502  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46C8B7  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_46D22E  +
jmp loc_46A5C8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46D289  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_46A5C8  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_46D203  +
cmp al 5Fh +
jnz loc_46D203  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_46D203  +
cmp byte ptr [esi+2] 55h +
jnz loc_46D203  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_46D203  +
xor ecx ecx +
jmp loc_46D26B  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_46DB4F  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_46D255  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_46D5E8  +
movsx eax dl +
sub eax 37h +
jmp loc_46D25B  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_7C] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_7C] +
jmp loc_46D214  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46AE24  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C625  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46C737  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B44D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B40D  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_46DD30  +
mov ecx [esp+88h+var_50] +
mov eax [esp+88h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_46A5C8  +
mov edx 20h +
mov eax ebx +
call sub_467F60  +
jmp loc_46BC2C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov byte ptr [ebx] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
mov dword ptr [ebx+100h] 1 +
jnz loc_46B838  +
mov edx 1 +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 2Dh +
mov byte ptr [ebx+104h] 2Dh +
jmp loc_46B838  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B7EA  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
jmp loc_46A5C8  +
mov edx [ecx+8] +
mov edi [edx] +
test edi edi +
jnz loc_46B7D6  +
cmp eax 3Ch +
jz loc_46DCCF  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46DD30  +
cmp esi 6 +
ja loc_46A5C8  +
jmp ds:off_4D3EB4[esi*4]  +
mov edx offset aUll_0 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
mov edx offset aLl_0 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
mov edx offset aUl_0 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
mov edx 6Ch +
mov eax ebx +
call sub_467F60  +
jmp loc_46A5C8  +
mov edx 75h +
mov eax ebx +
call sub_467F60  +
jmp loc_46A5C8  +
lea edx [eax+4] +
mov eax ebx +
call sub_468280  +
test eax eax +
jz loc_46DCE3  +
mov edx [eax] +
cmp edx 2Fh +
jnz loc_46C15E  +
mov edx [ebx+11Ch] +
jmp loc_46D5C7  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_46DCE3  +
cmp dword ptr [eax] 2Fh +
jnz loc_46DCE3  +
cmp edx 0 +
jg loc_46D5B0  +
lea esi [esi+0] +
jnz loc_46DCE3  +
mov eax [eax+4] +
test eax eax +
jz loc_46DCE3  +
mov edx [eax] +
jmp loc_46C15E  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_46DC47  +
movsx eax dl +
sub eax 57h +
jmp loc_46D25B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46B9EB  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46DAE3  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46B3FF  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DC15  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 5Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+8] +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DBE3  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46A5C8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46DB8B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46B43F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
cmp edx 0FFh +
jnz loc_46D49A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D49A  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
jmp loc_46A5C8  +
movzx edi byte ptr [esi] +
lea esi [edi-63h] +
mov eax esi +
cmp al 1 +
jbe loc_46D75D  +
lea esi [edi-72h] +
mov eax esi +
cmp al 1 +
ja loc_46CBB5  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_46F080  +
mov eax ebx +
mov edx 3Ch +
call sub_467F60  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_46DD30  +
mov eax ebx +
mov edx offset asc_4D3D7E +
call sub_46A4C0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_46DD30  +
mov edx 29h +
mov eax ebx +
call sub_467F60  +
jmp loc_46A5C8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C211  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46CB5C  +
mov eax [esp+88h+var_70] +
jmp loc_46CB89  +
mov esi [edx+4] +
mov edi offset aJarray_0 +
mov ecx 6 +
cmps   +
jnz loc_46B3DF  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_46DD30  +
mov edx offset asc_4D3B44 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46B45E  +
mov eax [esp+88h+var_78] +
cmp dword ptr [eax+8] 1 +
jnz loc_46CBBE  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_46CBBE  +
mov edx 28h +
mov eax ebx +
call sub_467F60  +
mov ecx [ebp+4] +
mov edx [ebp+8] +
jmp loc_46CBBE  +
mov eax ebx +
mov edx 5Bh +
call sub_467F60  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46DD30  +
mov edx 5Dh +
mov eax ebx +
call sub_467F60  +
jmp loc_46CC39  +
jnz loc_46CC90  +
mov eax [eax+4] +
test eax eax +
jnz loc_46B38B  +
nop   +
jmp loc_46CC90  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_46D8E7  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F130  +
jmp loc_46CBE8  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F080  +
jmp loc_46CC28  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46CD64  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_78] +
mov edx edi +
call sub_46F130  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_46F080  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_46F130  +
mov eax ebx +
mov edx offset asc_4D3CD7 +
call sub_46A4C0  +
mov ecx [esp+88h+var_70] +
mov edx edi +
mov eax ebx +
call sub_46F130  +
jmp loc_46A5C8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46CE96  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46CE5F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46CE32  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46CDFE  +
mov eax [esp+88h+var_74] +
mov [esp+88h+var_5C] edi +
mov [esp+88h+var_60] eax +
lea eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_46AF53  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_46F130  +
mov edx offset a____2 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
mov eax [esp+88h+var_78] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_46CDAE  +
mov edi [esp+88h+var_78] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+88h+var_78] eax +
jmp loc_46CDAE  +
xor edi edi +
jmp loc_46A577  +
mov eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_46AF6A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D647  +
mov ecx [ecx+4] +
mov eax [ecx] +
jmp loc_46AEE5  +
cmp eax 3Bh +
jnz loc_46B7D6  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_46DD1A  +
cmp al 31h +
jnz loc_46B7D6  +
mov edx offset aTrue_0 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
mov eax 5Fh +
jmp loc_46D203  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46AFAD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D6CF  +
mov eax [esp+88h+var_78] +
mov edi [esp+88h+var_7C] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_46F130  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_46F080  +
jmp loc_46A5C8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D6A4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D671  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_46D203  +
cmp dl 5Fh +
jnz loc_46D203  +
cmp ecx 0FFh +
mov eax edx +
ja loc_46D203  +
cmp dword ptr [ebx+100h] 0FFh +
mov esi ecx +
jnz loc_46DCAE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov dword ptr [ebx+100h] 0 +
mov eax [ebx+100h] +
mov ecx esi +
mov esi ebp +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jmp loc_46D223  +
mov edx 2Dh +
mov eax ebx +
call sub_467F60  +
mov edx [ebp+8] +
jmp loc_46D514  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46A5C8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46DD30  +
mov eax [esp+88h+var_70] +
cmp [esp+88h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_46CB89  +
jmp loc_46A5C8  +
mov edx offset aFalse_0 +
mov eax ebx +
call sub_46A4C0  +
jmp loc_46A5C8  +
***
test ecx ecx +
jz loc_46DD44  +
cmp dword ptr [eax+118h] 0 +
jnz locret_46DD42  +
jmp sub_46A550  +
retn   +
mov dword ptr [eax+118h] 1 +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_46DDFB  +
jmp ds:off_4D3F14[eax*4]  +
mov eax [ebx+100h] +
mov esi offset a__vector_0 +
jmp loc_46DDA5  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4D3F10h +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2D0  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_46DD80  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46DD83  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E0B0  +
mov eax [ebx+118h] +
test eax eax +
jz loc_46E310  +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aRestrict_0 +
jmp loc_46DE44  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3ED9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46DE25  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46DE28  +
mov eax [ebx+100h] +
mov esi offset aConst_0 +
jmp loc_46DEC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3EEAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46DEA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46DEA3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46E37C  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_46E345  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aVolatile_0 +
jmp loc_46DF93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3EE3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46DF70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46DF73  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46E429  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_4D3EEB +
jmp loc_46E033  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3EEDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E010  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E013  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E3EA  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
test ecx ecx +
jnz loc_46DDFB  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46DE10  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_46DE10  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E4BD  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_46DE10  +
mov eax [ebx+100h] +
jmp loc_46DF36  +
mov eax [ebx+100h] +
jmp loc_46E006  +
mov eax [ebx+100h] +
mov esi offset aComplex_0 +
jmp loc_46E143  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3EF6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E120  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E123  +
mov eax [ebx+100h] +
mov esi offset aImaginary_0 +
jmp loc_46E1C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3F01h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E1A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E1A3  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46E23E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E47E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E460  +
mov esi [ebx+118h] +
test esi esi +
jz loc_46E335  +
mov eax [ebx+100h] +
mov esi offset asc_4D3F02 +
jmp loc_46E287  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3F05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46DE10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E264  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E267  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E46F  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46E322  +
cmp ebp 0FFh +
jz loc_46E3B3  +
lea eax [ebp+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ebp] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46DE10  +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46A550  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_46A550  +
mov ebp [ebx+100h] +
jmp loc_46E2E5  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_46A550  +
jmp loc_46E257  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46DF44  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46DF25  +
mov edx [ebx+10Ch] +
xor ebp ebp +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
add dword ptr [ebx+120h] 1 +
jmp loc_46E2F4  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E094  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46DFF5  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46E257  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46E2E5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E22D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E0DF  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_38] edx +
mov ebp [esp+4Ch+arg_0] +
jz loc_46E581  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_46E52D  +
jmp loc_46E581  +
mov edx [esi+118h] +
test edx edx +
jnz loc_46E581  +
mov eax [ebx+8] +
test eax eax +
jnz loc_46E57B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_46E545  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_46E57B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_46E589  +
cmp eax 2Ah +
jz loc_46E5AA  +
cmp eax 2 +
jz loc_46E5CB  +
mov edx [esp+4Ch+var_38] +
mov eax esi +
call sub_46DD50  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_46E523  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_46EB10  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_46E890  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_38] +
mov ecx [ecx+4] +
call sub_46DD30  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_38] 4 +
mov [esi+114h] ebp +
jnz loc_46E665  +
mov ebp offset asc_4D3B24 +
mov [esp+4Ch+var_34] ebx +
jmp loc_46E626  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D3B26h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_46E682  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_46E607  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46E60A  +
cmp eax 0FFh +
jz loc_46E6BF  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_46E686  +
mov ebx [esp+4Ch+var_34] +
mov eax [ebx+4] +
mov ebp [eax+8] +
mov eax [ebp+0] +
cmp eax 45h +
jnz loc_46E69C  +
jmp loc_46E6F6  +
mov ebp [ebp+4] +
mov eax [ebp+0] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_46E696  +
mov edx [esp+4Ch+var_38] +
mov ecx ebp +
mov eax esi +
call sub_46DD30  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46E66F  +
mov ecx offset aDefaultArg_0 +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_46E724  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D3B34h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_46E76A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_46E705  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_46E708  +
mov eax [ebp+8] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset aLd +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_46E880  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_34] edi +
mov edi eax +
jmp loc_46E7C3  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_46E80A  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_46E7A8  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+120h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_46E7AB  +
mov edi [esp+4Ch+var_34] +
mov ecx offset asc_4D3B39 +
mov ebx ecx +
jmp loc_46E83A  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D3B3Ch +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_46E696  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_46E817  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_46E81A  +
mov eax [esi+100h] +
jmp loc_46E80E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46E8CA  +
mov edx [eax+8] +
test edx edx +
jz loc_46E950  +
mov eax [eax] +
test eax eax +
jnz loc_46E8A5  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E500  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EA10  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_46EAB7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_46E925  +
mov eax ebx +
mov edx edi +
call sub_46DD30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EA80  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_46EAF0  +
mov eax [ebx+100h] +
mov esi offset unk_4D3FC0 +
jmp loc_46E98F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4D3FC2 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E9D5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E970  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_46E973  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E500  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EA47  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46E8D0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E8DE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E9FA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E933  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E8FE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E500  +
mov edx [ebx+100h] +
jmp loc_46E8EF  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_46EBF0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_46EBF0  +
mov eax esi +
mov edx 1 +
jmp loc_46EB5E  +
and ch 0Eh +
jnz loc_46ECD1  +
mov eax [eax] +
test eax eax +
jz loc_46EBF0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_46EBF0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_46EB49  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_46EB40  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_46ECE6  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EDC8  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_46ECF7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46ECFA  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_46E500  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46ED5A  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_46EC4C  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46EC87  +
cmp eax 0FFh +
jz loc_46EC9D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_46E500  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_46A550  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jnz loc_46EC53  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EC56  +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_46EB80  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EBB9  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_46E500  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46ED91  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_46EC24  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EC27  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46ED3D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EB9D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [ecx] +
cmp dword ptr [ecx] 4 +
jz loc_46EE30  +
mov esi [eax+118h] +
test esi esi +
jz loc_46EEF0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+34h+var_1C] +
mov ebp [eax+114h] +
mov dword ptr [eax+114h] 0 +
mov eax [eax+110h] +
mov [ebx+110h] edx +
mov edx [esi] +
mov [esp+34h+var_1C] eax +
mov [esp+34h+var_18] edx +
mov ecx [edx+4] +
test ecx ecx +
jz loc_46EFD6  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46EF40  +
cmp byte ptr [ebx+104h] 3Ch +
mov [ebx+110h] eax +
jz loc_46EFE5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EF90  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov edx [esi] +
mov ecx [edx+8] +
test ecx ecx +
jz loc_46EFC7  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46EF00  +
cmp eax 0FFh +
jz loc_46EF52  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov [ebx+114h] ebp +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_46A550  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_46A550  +
mov eax [ebx+100h] +
cmp byte ptr [ebx+104h] 3Eh +
jnz loc_46EEC3  +
cmp eax 0FFh +
jz loc_46F00B  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov eax edx +
mov byte ptr [ebx+104h] 20h +
jmp loc_46EEC3  +
mov eax ebx +
mov edx edi +
call sub_46A550  +
mov eax [esp+34h+var_1C] +
jmp loc_46EE73  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EED1  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EE9B  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46EEC3  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46EE73  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F042  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46EE8C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EF26  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EFF5  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_46F0B0  +
mov eax [eax+118h] +
test eax eax +
jz loc_46F0A0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46A550  +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_46F098  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46F0E2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46F098  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46F0C7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_46F0CA  +
***
push ebx  +
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_46F148  +
cmp eax 30h +
jnz loc_46F160  +
mov eax [ebx+118h] +
test eax eax +
jz loc_46F196  +
test esi esi +
jz loc_46F1A1  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_46F148  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F200  +
lea esi [eax+1] +
mov [ebx+100h] esi +
xor esi esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+118h] +
mov byte ptr [ebx+104h] 28h +
test eax eax +
jnz loc_46F152  +
mov eax ebx +
call sub_46A550  +
test esi esi +
jnz loc_46F156  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F1C8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F1B1  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_C] ecx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_20] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
xor eax eax +
mov ecx [esp+28h+var_C] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_10] +
jmp loc_46F179  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 18Ch +
mov [ebp+var_17C] edx +
movzx edx byte ptr [eax] +
mov [ebp+var_180] ecx +
cmp dl 5Fh +
jz loc_46F410  +
mov ecx 8 +
mov esi ebx +
mov edi offset a_global__0 +
cmps   +
setnbe cl  +
setb al  +
xor esi esi +
cmp cl al +
jnz loc_46F2C0  +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_46F2A0  +
cmp al 5Fh +
jnz loc_46F400  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz cl  +
jz loc_46F2B1  +
xor esi esi +
cmp al 44h +
jnz loc_46F2C0  +
xor esi esi +
cmp byte ptr [ebx+0Ah] 5Fh +
jz loc_46F4E0  +
lea esi [esi+0] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] edx +
call strlen  +
mov [ebp+var_170] ebx +
mov [ebp+var_168] 11h +
mov [ebp+var_164] ebx +
mov [ebp+var_15C] 0 +
mov [ebp+var_150] 0 +
mov ecx eax +
lea eax [ebx+eax] +
mov [ebp+var_16C] eax +
lea eax [ecx+ecx] +
mov [ebp+var_158] eax +
lea eax [eax+ecx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_14C] ecx +
mov [ebp+var_148] 0 +
mov [ebp+var_144] 0 +
mov [ebp+var_140] 0 +
call sub_470810  +
sub esp eax +
lea eax ds:12h[ecx*4] +
lea edi [esp+198h+var_18C] +
and eax 0FFFFFFF0h +
call sub_470810  +
mov edx [ebp+var_184] +
sub esp eax +
cmp esi 1 +
lea eax [esp+198h+var_18C] +
mov [ebp+var_160] edi +
mov [ebp+var_154] eax +
jz loc_46F425  +
jb loc_46F4C0  +
cmp esi 3 +
ja loc_46F4C0  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edi [ebx+0Bh] +
mov [ebp+var_164] edi +
jnz loc_46F3A0  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_46F580  +
mov [esp+198h+var_198] edi +
lea ebx [ebp+var_170] +
call strlen  +
mov edx edi +
mov ecx eax +
mov eax ebx +
call sub_467B50  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+198h+var_198] 0 +
call sub_467AF0  +
mov ebx [ebp+var_164] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] eax +
call strlen  +
mov ecx [ebp+var_184] +
add ebx eax +
mov [ebp+var_164] ebx +
movzx edx byte ptr [ebx] +
jmp loc_46F430  +
cmp al 24h +
jnz loc_46F2C0  +
jmp loc_46F2A0  +
cmp byte ptr [eax+1] 5Ah +
mov esi 1 +
jnz loc_46F276  +
nop   +
jmp loc_46F2C0  +
xor ecx ecx +
cmp dl 5Fh +
jz loc_46F4F0  +
xor eax eax +
test dl dl +
jnz loc_46F4B2  +
test ecx ecx +
jz loc_46F4B2  +
mov eax [ebp+var_17C] +
lea ebx [ebp+var_13C] +
mov edx 11h +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_34] eax +
mov eax [ebp+var_180] +
mov [ebp+var_28] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_30] eax +
mov eax ebx +
mov [ebp+var_24] 0 +
call sub_46A550  +
mov eax [ebp+var_3C] +
mov edx [ebp+var_30] +
mov [esp+198h+var_198] ebx +
mov byte ptr [ebp+eax+var_13C] 0 +
mov [esp+198h+var_190] edx +
mov [esp+198h+var_194] eax +
call [ebp+var_34]  +
mov edx [ebp+var_24] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_170] +
call sub_468A30  +
mov ecx eax +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_46F430  +
mov esi ecx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46F2C0  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
mov [ebp+var_164] eax +
cmp dl 5Ah +
jnz loc_46F430  +
add ebx 2 +
mov edx 1 +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_469370  +
test byte ptr [ebp+var_168] 1 +
mov ecx eax +
jnz loc_46F54B  +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_46F430  +
mov edx ecx +
mov eax ebx +
call sub_467CF0  +
mov ecx eax +
mov esi [ebp+var_164] +
movzx edx byte ptr [esi] +
cmp dl 2Eh +
jnz loc_46F430  +
movzx eax byte ptr [esi+1] +
lea edx [eax-61h] +
cmp dl 19h +
jbe loc_46F540  +
cmp al 5Fh +
jz loc_46F540  +
sub eax 30h +
cmp al 9 +
jbe loc_46F540  +
movzx edx byte ptr [esi] +
jmp loc_46F430  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_469370  +
mov ecx eax +
jmp loc_46F3BB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_46F5C3  +
test esi esi +
jz loc_46F5E0  +
mov ecx [esp+2Ch+arg_8] +
test ecx ecx +
jnz loc_46F5E0  +
test ebx ebx +
jz loc_46F682  +
mov dword ptr [ebx] 0FFFFFFFDh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+2Ch+var_1C] +
mov edx offset loc_468340 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
call sub_46F250  +
test eax eax +
jz loc_46F6B7  +
mov edx [esp+2Ch+var_10] +
mov ebp 1 +
mov edi [esp+2Ch+var_1C] +
test edx edx +
cmovz ebp [esp+2Ch+var_14] +
test edi edi +
jz loc_46F673  +
test esi esi +
jz loc_46F6A0  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov edx [esp+2Ch+arg_8] +
cmp eax [edx] +
jnb loc_46F690  +
add eax 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
mov edi esi +
call free  +
test ebx ebx +
jz loc_46F6B0  +
mov dword ptr [ebx] 0 +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_46F682  +
cmp ebp 1 +
jz loc_46F6D0  +
mov dword ptr [ebx] 0FFFFFFFEh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] esi +
call free  +
mov eax [esp+2Ch+arg_8] +
mov [eax] ebp +
jmp loc_46F65F  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_46F698  +
jmp loc_46F65F  +
mov eax edi +
jmp loc_46F5D3  +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call free  +
test ebx ebx +
jnz loc_46F67C  +
xor eax eax +
jmp loc_46F684  +
mov dword ptr [ebx] 0FFFFFFFFh +
xor eax eax +
jmp loc_46F5D3  +
***
sub esp 0Ch +
mov eax [esp+10h] +
mov edx [esp+14h] +
test eax eax +
jz loc_46F708  +
test edx edx +
jz loc_46F708  +
mov ecx [esp+18h] +
call sub_46F250  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFEh +
add esp 0Ch +
retn   +
***
mov eax 0FFFFFFFDh +
jmp loc_46F704  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_46F730  +
cmp eax 3 +
jz loc_46F730  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_470430  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_48370C 2 +
mov eax [esp+18h+arg_4] +
jz loc_46F77B  +
mov dword_48370C 2 +
cmp eax 2 +
jz loc_46F791  +
cmp eax 1 +
jz loc_46F7C0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_4DD030 +
cmp ebx offset unk_4DD030 +
jz loc_46F785  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_46F7A8  +
call eax  +
add ebx 4 +
cmp ebx offset unk_4DD030 +
jnz loc_46F7A0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_470430  +
jmp loc_46F785  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_4DA384 +
mov [esp+28h+var_28] eax +
call sub_46F800  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_46F8C0  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_4DA384 +
mov [esp+28h+var_28] eax +
call sub_46F800  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_4DA380 +
mov [esp+28h+var_28] eax +
call sub_46F800  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_46F810  +
mov ds:dword_4DA384 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_46F810  +
mov [esp+28h+var_28] 8 +
mov ds:dword_4DA380 eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_46F820  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_46F958  +
cmp eax 0C000008Dh +
jnb loc_46F9C0  +
cmp eax 0C0000005h +
jnz loc_46F9C7  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_46F9F6  +
test eax eax +
jz loc_46F96D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_46F9AD  +
cmp eax 0C0000094h +
jz loc_46F981  +
cmp eax 0C0000096h +
jz loc_46F9CE  +
cmp eax 0C0000093h +
jz loc_46F9C0  +
mov eax ds:dword_4D960C +
test eax eax +
jz loc_46F9B2  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_46FA26  +
test eax eax +
jz loc_46F96D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_46F983  +
cmp eax 0C000001Dh +
jnz loc_46F96D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_46FA10  +
test eax eax +
jz loc_46F96D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_46F9AD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_46F9AD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_46F9AD  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_46F9AD  +
call sub_470090  +
jmp loc_46F9AD  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_4D9610 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_46FAA1  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_46FAA7  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_4D9610 eax +
jmp loc_47CD50  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_46FADD  +
mov edx ds:off_4D4C80[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_46FB80  +
***
push edi  +
mov eax ds:dword_4D9614 +
retn   +
***
call eax  +
mov eax off_483708 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_483708 edx +
test eax eax +
jnz loc_4700B0  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_4822B0 +
cmp ebx 0FFFFFFFFh +
jz loc_470103  +
test ebx ebx +
jz loc_4700F2  +
call ds:dword_4822B0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_4700E3  +
mov [esp+18h+var_18] offset dword_4700A0 +
call sub_46F8E0  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_470109  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_4822B0[eax*4] +
test edx edx +
jnz loc_470107  +
jmp loc_4700DF  +
***
mov eax ds:dword_4D9620 +
test eax eax +
jz loc_470130  +
retn   +
mov ds:dword_4D9620 1 +
jmp sub_4700D0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_4881BC +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_470172  +
not eax  +
mov dword_4881C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_4701E0  +
mov eax esi +
not eax  +
mov dword_4881BC esi +
mov dword_4881C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_4701CC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_4D9988 +
call ds:EnterCriticalSection  +
mov edi ds:dword_4D9980 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_4702D9  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_4702D2  +
test ebx ebx +
jz loc_4702D2  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_4702B0  +
mov [esp+28h+var_28] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_470300  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_470320  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_47037C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_4D9988 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_4D9980 +
mov ds:dword_4D9980 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_470313  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_4D9984 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_4703B0  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_4D9988 +
call ds:EnterCriticalSection  +
mov edx ds:dword_4D9980 +
sub esp 4 +
test edx edx +
jz loc_4703E1  +
mov eax [edx] +
cmp eax ebx +
jnz loc_4703DA  +
jmp loc_470418  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_4703F8  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_4703D2  +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_4703F1  +
***
mov eax [edx+8] +
mov ds:dword_4D9980 eax +
mov eax edx +
jmp loc_4703FE  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_470484  +
jb loc_470455  +
cmp eax 3 +
jnz loc_47044E  +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_4704B2  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_4704C0  +
mov eax ds:dword_4D9984 +
cmp eax 1 +
jnz loc_47044E  +
mov ds:dword_4D9984 0 +
mov [esp+18h+var_18] offset unk_4D9988 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_47044E  +
mov eax ds:dword_4D9984 +
test eax eax +
jz loc_4704A0  +
mov ds:dword_4D9984 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_4D9988 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_47048D  +
call sub_470280  +
jmp loc_47044E  +
call sub_470280  +
jmp loc_47045E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_4704E0  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_470500  +
xor eax eax +
retn   +
***
jmp sub_4704D0  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_470548  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_47053E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_47054A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_470530  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_470575  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470580  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_470575  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_4705BA  +
jmp loc_470575  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_4705E0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_4705B0  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470608  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_470601  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_470510  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_470652  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_47064E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_470688  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_470683  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_470683  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_4706C3  +
test ebx ebx +
jz loc_4706D4  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_4706B6  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_4706F0  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_4706EB  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470720  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_470756  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_470510  +
test eax eax +
jz loc_470760  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_470756  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_470790  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_4704D0  +
test eax eax +
jz loc_470787  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_470787  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_470510  +
test eax eax +
jz loc_470787  +
add esi 400000h +
mov edx esi +
jnz loc_4707D6  +
jmp loc_470787  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_4707E4  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_470800  +
test ebx ebx +
jg loc_4707D0  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_470832  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_47081D  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_470890  +
cmp ecx ebp +
ja loc_4708C2  +
test ecx ecx +
mov ebx ecx +
jnz loc_470877  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_4708B6  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_4708D2  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_470930  +
cmp esi ebp +
jb loc_470930  +
xor eax eax +
jmp loc_470885  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_470940  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_470923  +
cmp esi edx +
jz loc_470940  +
mov eax edi +
xor edx edx +
jmp loc_470885  +
mov eax 1 +
jmp loc_470885  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] offset dword_4D99A8 +
call pthread_key_create  +
test eax eax +
setz al  +
movzx eax al +
mov dword_483710 eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_470AA0 +
mov [esp+1Ch+var_1C] offset unk_4D99A4 +
call pthread_once  +
test eax eax +
jnz loc_470AF8  +
mov eax dword_483710 +
test eax eax +
js loc_470AF8  +
add esp 1Ch +
retn   +
mov dword_483710 0 +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 20h +
mov ecx [edx] +
jmp loc_470B73  +
xor edx edx +
xor ebx ebx +
mov eax [ecx+18h] +
cmp ecx [esi+10h] +
setz bl  +
shl ebx 2 +
test edx edx +
jnz loc_470B90  +
test eax eax +
jz loc_470B69  +
mov edx [esi] +
mov ecx [esi+4] +
mov [esp+28h+var_14] edi +
mov [esp+28h+var_18] esi +
mov [esp+28h+var_20] edx +
mov edx ebx +
or edx 2 +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] 1 +
call eax  +
cmp eax 7 +
jz loc_470BA0  +
cmp eax 8 +
jnz loc_470B90  +
test ebx ebx +
jnz loc_470BAC  +
mov eax [edi] +
mov ecx [eax] +
mov [edi] ecx +
test ecx ecx +
jnz loc_470B20  +
xor ebx ebx +
xor eax eax +
cmp ecx [esi+10h] +
mov edx 5 +
setz bl  +
shl ebx 2 +
test edx edx +
jz loc_470B34  +
lea esi [esi+0] +
add esp 20h +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
jmp sub_470BC0  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx dword_483710 +
mov esi [eax] +
test edx edx +
js loc_470C0B  +
test edx edx +
jnz loc_470BED  +
mov ds:dword_4D99AC esi +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
call sub_470AD0  +
mov edx dword_483710 +
jmp loc_470BD6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov eax [eax+0Ch] +
mov [esp+40h+var_1C] eax +
mov eax [esi+10h] +
mov [esp+40h+var_18] eax +
mov eax [edx] +
jmp loc_470C4C  +
mov ds:dword_4D99AC edx +
mov eax [ebx] +
mov eax [eax] +
mov [ebx] eax +
test eax eax +
jz loc_470D00  +
mov edx [eax+18h] +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_14] edx +
mov edx [esi+4] +
mov [esp+40h+var_28] eax +
mov eax [esi] +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
call eax  +
mov edx [esp+40h+var_14] +
test eax eax +
jnz loc_470D54  +
test edx edx +
jz loc_470CD5  +
mov edi [esi] +
mov ebp [esi+4] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_38] edi +
mov [esp+40h+var_34] ebp +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
call edx  +
cmp eax 7 +
jz loc_470D61  +
cmp eax 8 +
jnz loc_470D54  +
mov eax [ebx] +
mov edx [eax] +
mov eax dword_483710 +
test eax eax +
js loc_470D40  +
test eax eax +
jz loc_470C40  +
mov eax ds:dword_4D99A8 +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call pthread_setspecific  +
jmp loc_470C46  +
mov eax [esi] +
mov edx [esi+4] +
mov ecx [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_28] ecx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_3C] 1Ah +
mov [esp+40h+var_40] 1 +
call eax  +
test eax eax +
jnz loc_470D54  +
add esp 3Ch +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_14] edx +
call sub_470AD0  +
mov eax dword_483710 +
mov edx [esp+40h+var_14] +
jmp loc_470CE2  +
add esp 3Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax dword_483710 +
mov ebx [esp+18h+arg_0] +
test eax eax +
js loc_470DC0  +
test eax eax +
jnz loc_470D97  +
mov eax ds:dword_4D99AC +
mov ds:dword_4D99AC ebx +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_18] eax +
call pthread_getspecific  +
mov [ebx] eax +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_470AD0  +
mov eax dword_483710 +
jmp loc_470D81  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax] +
mov eax dword_483710 +
test eax eax +
js loc_470E08  +
test eax eax +
jnz loc_470DF2  +
mov ds:dword_4D99AC ebx +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_470AD0  +
mov eax dword_483710 +
jmp loc_470DE3  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov eax [eax+edx*4+8] +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jz loc_470E40  +
mov eax [eax+28h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov [eax+edx*4+8] ecx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
mov eax [eax+4] +
add eax 1 +
retn   +
***
mov eax [esp+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_470EA0  +
mov eax [eax+4] +
add eax 1 +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov eax [eax] +
lea edx [ecx-1] +
mov [eax+4] edx +
retn   +
***
jmp sub_470ED0  +
***
mov eax [esp+arg_0] +
mov eax [eax] +
mov eax [eax+1Ch] +
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
retn   +
***
push ebx  +
sub esp 30h +
mov eax dword_483710 +
mov edi [esp+30h+arg_0] +
test eax eax +
js loc_470FF0  +
test eax eax +
mov esi ds:dword_4D99AC +
jnz loc_470FA1  +
test esi esi +
mov [esp+30h+var_4] esi +
jz loc_470F95  +
mov eax esi +
lea ebx [esp+30h+var_4] +
nop   +
mov eax [eax+18h] +
test eax eax +
jz loc_470F87  +
mov [esp+30h+var_1C] ebx +
mov [esp+30h+var_20] edi +
mov edx [edi] +
mov ecx [edi+4] +
mov [esp+30h+var_2C] 1 +
mov [esp+30h+var_30] 1 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_24] ecx +
call eax  +
cmp eax 6 +
jz loc_470FB2  +
cmp eax 8 +
jnz loc_470FE0  +
mov eax [esp+30h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+30h+var_4] eax +
jnz loc_470F50  +
mov eax 5 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+30h+var_30] eax +
call pthread_getspecific  +
mov esi eax +
jmp loc_470F41  +
mov eax [esp+30h+var_4] +
mov edx ebx +
mov dword ptr [edi+0Ch] 0 +
mov [esp+30h+var_4] esi +
mov [edi+10h] eax +
mov eax edi +
call sub_470B10  +
cmp eax 7 +
jnz loc_470F9A  +
mov eax ebx +
call sub_470BC0  +
lea esi [esi+0] +
add esp 30h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_470AD0  +
mov eax dword_483710 +
jmp loc_470F37  +
***
add esp 28h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D99A8 +
mov [esp] eax +
call pthread_getspecific  +
jmp loc_47101B  +
***
call sub_470AD0  +
mov edx dword_483710 +
jmp loc_471012  +
***
sub esp 24h +
mov edx dword_483710 +
mov ebx [esp+24h+arg_0] +
test edx edx +
js loc_4710CD  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_4710BE  +
mov ecx [ebx+0Ch] +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] eax +
mov edx esi +
mov eax ebx +
test ecx ecx +
jnz loc_4710AE  +
call sub_470B10  +
cmp eax 7 +
jz loc_4710B7  +
call abort  +
nop   +
call sub_470C20  +
jmp loc_4710A4  +
mov eax esi +
call sub_470BC0  +
mov eax ds:dword_4D99A8 +
mov [esp+24h+var_24] eax +
call pthread_getspecific  +
jmp loc_47108C  +
call sub_470AD0  +
mov edx dword_483710 +
jmp loc_471083  +
***
mov ebx [esp+28h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_471120  +
mov edx dword_483710 +
test edx edx +
js loc_471150  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_471140  +
mov [esp+28h+var_C] eax +
lea edx [esp+28h+var_C] +
mov eax ebx +
call sub_470C20  +
cmp eax 7 +
jz loc_471130  +
call abort  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
call sub_470F20  +
add esp 28h +
pop ebx  +
retn   +
lea eax [esp+28h+var_C] +
call sub_470BC0  +
lea esi [esi+0] +
mov eax ds:dword_4D99A8 +
mov [esp+28h+var_28] eax +
call pthread_getspecific  +
jmp loc_471102  +
call sub_470AD0  +
mov edx dword_483710 +
jmp loc_4710F9  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
test eax eax +
jz loc_47117B  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] 1 +
call eax  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov edx dword_483710 +
mov ebx [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
test edx edx +
js loc_471200  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_4711F0  +
test eax eax +
mov [esp+20h+var_4] eax +
lea esi [esp+20h+var_4] +
jz loc_4711CB  +
lea esi [esi+0] +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_4711E1  +
mov eax [esp+20h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+20h+var_4] eax +
jnz loc_4711B0  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_4711E1  +
add esp 20h +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+20h+var_20] eax +
call pthread_getspecific  +
jmp loc_4711A1  +
call sub_470AD0  +
mov edx dword_483710 +
jmp loc_471198  +
***
sub esp 18h +
test eax eax +
jz loc_471238  +
mov eax [eax] +
test eax eax +
jz loc_471238  +
sub edx eax +
cmp edx ecx +
jz loc_471238  +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_471238  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [edx] +
cmp ebx eax +
jz loc_471255  +
mov eax ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add ebx ebx +
mov eax 100h +
cmp ebx 100h +
cmovb ebx eax +
test ecx ecx +
jz loc_471290  +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_C] ecx +
call realloc  +
mov ecx [esp+18h+var_C] +
test eax eax +
jz loc_4712A0  +
mov [esi] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jnz loc_471281  +
xor eax eax +
jmp loc_47124F  +
mov [esp+18h+var_18] ecx +
call free  +
xor eax eax +
jmp loc_47124F  +
***
test edx edx +
sub esp 18h +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_47135E  +
mov esi [eax] +
mov ebp edx +
test esi esi +
jz loc_47135E  +
mov eax [esi] +
test eax eax +
jz loc_47132F  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [esi+ebx*4+8] +
mov eax [eax] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esi+ebx*4+8] +
add ebx 1 +
cmp [esi] ebx +
mov dword ptr [eax] 0 +
ja loc_471310  +
mov ebx [esi+4] +
mov [esp+24h+var_24] esi +
call free  +
test ebx ebx +
jz loc_471342  +
mov esi ebx +
jmp loc_471305  +
test ebp ebp +
mov dword ptr [edi] 0 +
jz loc_47135E  +
mov eax [ebp+0] +
mov [esp+24h+var_24] eax +
call free  +
mov dword ptr [ebp+0] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_4713E5  +
test edx edx +
mov edi ecx +
jz loc_4713A7  +
mov eax [edx] +
test eax eax +
jnz loc_471392  +
jmp loc_4713A1  +
mov eax esi +
mov esi [eax+4] +
mov [esp+28h+var_28] eax +
call free  +
test esi esi +
jnz loc_471390  +
mov dword ptr [ebx] 0 +
test edi edi +
jz loc_4713BB  +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call free  +
mov dword ptr [edi] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_4713DB  +
mov eax [esp+28h+arg_0] +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [esp+28h+arg_0] +
mov dword ptr [eax] 0 +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+28h+arg_0] +
mov eax ebx +
call sub_4712F0  +
jmp loc_4713DB  +
***
mov ebx eax +
sub esp 1Ch +
cmp [esp+1Ch+arg_0] 0 +
jz loc_4714D0  +
test byte ptr [edx+1004h] 1 +
jz loc_4714DE  +
sub dword ptr [ecx] 1 +
mov ecx [edx+1008h] +
mov [edx+ecx*4+4] eax +
add ecx 1 +
mov [edx+1008h] ecx +
add esp 1Ch +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_4714C9  +
test byte ptr [edx+1004h] 1 +
jnz loc_4714B3  +
mov edx [edx] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] edx +
call ungetc  +
mov ecx [esp+1Ch+var_10] +
sub dword ptr [ecx] 1 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 0BCh +
test eax eax +
mov [esp+0BCh+var_98] eax +
mov [esp+0BCh+var_74] ecx +
mov [esp+0BCh+var_30] 0 +
mov [esp+0BCh+var_2C] 0 +
mov [esp+0BCh+var_28] 0 +
mov [esp+0BCh+var_24] 0 +
jz loc_473377  +
mov eax [eax] +
test eax eax +
jz loc_473377  +
test edx edx +
mov esi edx +
jz loc_473377  +
mov [esp+0BCh+var_1C] 0 +
call localeconv  +
mov eax [eax] +
mov [esp+0BCh+var_64] eax +
call localeconv  +
mov eax [eax+4] +
test eax eax +
mov edi eax +
mov [esp+0BCh+var_8C] eax +
jz loc_471591  +
cmp byte ptr [eax] 0 +
mov eax 0 +
cmovnz eax edi +
mov [esp+0BCh+var_8C] eax +
mov eax [esp+0BCh+var_74] +
xor edi edi +
mov [esp+0BCh+var_84] 0 +
mov ebx edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [esp+0BCh+var_7C] 0 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] 0 +
mov [esp+0BCh+var_94] 0 +
mov [esp+0BCh+var_60] 0 +
mov [esp+0BCh+var_78] 0 +
movzx eax byte ptr [esi] +
test al al +
jz loc_4724E9  +
test al al +
js loc_4718F0  +
lea ecx [esi+1] +
cmp al 25h +
mov ebp ecx +
jz loc_471610  +
movzx esi al +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jz loc_471670  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov esi ebp +
jmp loc_4715D5  +
movzx edi byte ptr [esi+1] +
mov eax edi +
movzx eax al +
sub eax 30h +
cmp eax 9 +
jbe loc_471707  +
mov eax edi +
mov [esp+0BCh+var_80] 0 +
xor edx edx +
mov ecx [esp+0BCh+var_8C] +
jmp loc_471661  +
cmp al 27h +
jz loc_471810  +
cmp al 49h +
jnz loc_471860  +
movzx eax byte ptr [ebp+1] +
cmp al 36h +
jz loc_471820  +
cmp al 33h +
jz loc_471840  +
or edx 4 +
add ebp 1 +
cmp al 2Ah +
jnz loc_471637  +
or dl 80h +
movzx eax byte ptr [ebp+1] +
jmp loc_47165E  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_4716F0  +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jz loc_4716F0  +
mov edi [esp+0BCh+var_98] +
jmp loc_4716AD  +
mov [esp+0BCh+var_BC] eax +
call isspace  +
test eax eax +
jz loc_4716F0  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_4716A1  +
mov eax [esp+0BCh+var_7C] +
test eax eax +
cmovz eax ebx +
mov ecx [esp+0BCh+var_94] +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471370  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebx +
jnz loc_4717C0  +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov esi ebp +
jmp loc_4715D5  +
lea edx [esi+2] +
movzx esi byte ptr [esi+2] +
mov [esp+0BCh+var_80] eax +
mov eax esi +
movzx eax al +
lea ebp [eax-30h] +
cmp ebp 9 +
ja loc_471754  +
mov [esp+0BCh+var_90] ebx +
mov ebx [esp+0BCh+var_80] +
mov ebp ecx +
lea esi [esi+0] +
add edx 1 +
lea ecx [ebx+ebx*4] +
lea ebx [eax+ecx*2-30h] +
movzx ecx byte ptr [edx] +
movzx eax cl +
lea esi [eax-30h] +
cmp esi 9 +
jbe loc_471730  +
mov [esp+0BCh+var_80] ebx +
mov ebx [esp+0BCh+var_90] +
mov esi ecx +
mov ecx ebp +
mov eax esi +
cmp al 24h +
jz loc_472481  +
mov ebp ecx +
mov eax edi +
mov [esp+0BCh+var_80] 0 +
jmp loc_47162F  +
test byte ptr [esp+0BCh+var_90] 20h +
jz loc_4717C0  +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp al 28h +
jnz loc_4717C0  +
mov esi offset aNil +
mov edi [esp+0BCh+var_98] +
jmp loc_4717A5  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
cmp [esi] al +
jnz loc_4717C0  +
add esi 1 +
cmp byte ptr [esi] 0 +
jz loc_473B92  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_47178D  +
lea esi [esi+0] +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_4714A0  +
jmp loc_4717E5  +
fstp  st +
jmp loc_4717E5  +
fstp  st +
jmp loc_4717E5  +
fstp  st +
lea eax [esp+0BCh+var_24] +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_BC] eax +
mov eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_30] +
call sub_471370  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_471817  +
or dh 1 +
movzx eax byte ptr [ebp+1] +
jmp loc_47165E  +
cmp byte ptr [ebp+2] 34h +
jnz loc_47165B  +
movzx eax byte ptr [ebp+3] +
or edx 0Ch +
add ebp 2 +
jmp loc_47165E  +
cmp byte ptr [ebp+2] 32h +
jnz loc_47165B  +
movzx eax byte ptr [ebp+3] +
or edx 4 +
add ebp 2 +
jmp loc_47165E  +
mov [esp+0BCh+var_90] edx +
movzx edx al +
xor esi esi +
lea ecx [edx-30h] +
cmp ecx 9 +
ja loc_4724DF  +
lea eax [esi+esi*4] +
add ebp 1 +
lea esi [edx+eax*2-30h] +
movzx eax byte ptr [ebp+0] +
movzx edx al +
lea ecx [edx-30h] +
cmp ecx 9 +
jbe loc_471875  +
test esi esi +
mov edx 0FFFFFFFFh +
cmovz esi edx +
cmp al 6Ah +
jz loc_4724AD  +
jle loc_471953  +
cmp al 71h +
jz loc_4724C6  +
nop   +
jg loc_471994  +
cmp al 6Ch +
jz loc_471A1B  +
cmp al 6Dh +
jnz loc_471A0D  +
movzx eax byte ptr [ebp+1] +
cmp al 6Ch +
jz loc_4733BE  +
lea edi [ebp+1] +
or [esp+0BCh+var_90] 400h +
mov [esp+0BCh+var_68] edi +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
mov [esp+0BCh+var_BC] esi +
mov ebp esi +
call strlen  +
lea edx [esp+0BCh+var_1C] +
mov [esp+0BCh+var_B4] edx +
mov [esp+0BCh+var_BC] esi +
mov [esp+0BCh+var_B8] eax +
call sub_474B30  +
test eax eax +
lea edi [esi+eax] +
jle loc_472479  +
mov esi [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_472722  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
cmp ebx eax +
jnz loc_472722  +
cmp ebp edi +
jnz loc_471920  +
mov esi ebp +
jmp loc_4715D5  +
cmp al 4Ch +
jz loc_4724C6  +
nop   +
lea esi [esi+0] +
jle loc_4724A0  +
cmp al 61h +
jz loc_4719F3  +
cmp al 68h +
jnz loc_471A0D  +
movzx eax byte ptr [ebp+1] +
cmp al 68h +
jz loc_47338C  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 2 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
cmp al 74h +
jz loc_47199C  +
cmp al 7Ah +
jnz loc_471A0D  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 4 +
mov byte ptr [esp+0BCh+var_88] al +
cmp byte ptr [esp+0BCh+var_88] 0 +
jz loc_4717E5  +
mov eax [esp+0BCh+var_68] +
lea ebp [eax+1] +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jnz loc_472090  +
cmp byte ptr [esp+0BCh+var_88] 5Bh +
jnz loc_472303  +
movzx eax byte ptr [esp+0BCh+var_88] +
sub eax 25h +
cmp al 53h +
ja loc_4717E5  +
movzx eax al +
jmp ds:off_4D4DAC[eax*4]  +
movzx eax byte ptr [ebp+1] +
mov edx eax +
and edx 0FFFFFFF7h +
cmp dl 53h +
jz loc_471E52  +
cmp al 73h +
jz loc_471E52  +
movzx eax byte ptr [ebp+0] +
mov [esp+0BCh+var_68] ebp +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
movzx eax byte ptr [ebp+1] +
cmp al 6Ch +
jz loc_4733A5  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 4 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
test byte ptr [esp+0BCh+var_90] 8 +
jz loc_47355B  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473AD5  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edi [esp+0BCh+var_2C] +
mov esi ebp +
mov dword ptr [eax+4] 0 +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] edi +
jmp loc_4715D5  +
mov ebx [esp+0BCh+var_90] +
and ebx 4 +
jnz loc_47274E  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_471B34  +
test [esp+0BCh+var_90] 600h +
jz loc_473A4C  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473D00  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_473E54  +
mov [esp+0BCh+var_BC] 64h +
call malloc  +
mov edi [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_60] eax +
mov [edi] eax +
jz loc_4727AE  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_471B11  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_471B18  +
call sub_4712D0  +
mov edx [eax] +
mov edi [esp+0BCh+var_94] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov [eax+edx*4+8] edi +
mov [esp+0BCh+var_78] 64h +
mov eax [esp+0BCh+var_68] +
cmp byte ptr [eax+1] 5Eh +
setz cl  +
add eax 2 +
test cl cl +
cmovnz ebp eax +
test esi esi +
mov eax 7FFFFFFFh +
cmovs esi eax +
cmp [esp+0BCh+var_28] 0FFh +
mov byte ptr [esp+0BCh+var_AC] cl +
jbe loc_473203  +
mov eax [esp+0BCh+var_24] +
test al 1 +
mov edi eax +
mov edx 100h +
jnz loc_473AE7  +
test edi 2 +
jnz loc_473AC4  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_471B9F  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_471BA7  +
mov byte ptr [edi] 0 +
movzx edx byte ptr [ebp+0] +
cmp dl 2Dh +
jz loc_471BB8  +
cmp dl 5Dh +
movzx eax dl +
jnz loc_471BE2  +
mov eax [esp+0BCh+var_24] +
add ebp 1 +
mov byte ptr [eax+edx] 1 +
movzx eax byte ptr [ebp+0] +
jmp loc_471BE2  +
mov edx [esp+0BCh+var_24] +
mov byte ptr [edx+eax] 1 +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
add ebp 1 +
test al al +
jz loc_4717E5  +
cmp al 5Dh +
jz loc_472FD0  +
cmp al 2Dh +
jnz loc_471BD0  +
movzx edx byte ptr [ebp+0] +
test dl dl +
jz loc_471BD0  +
cmp dl 5Dh +
jz loc_471BD0  +
movzx ecx byte ptr [ebp-2] +
cmp cl dl +
ja loc_471BD0  +
nop   +
jnb loc_471BDF  +
mov edx [esp+0BCh+var_24] +
movzx eax cl +
add ecx 1 +
mov byte ptr [edx+eax] 1 +
cmp [ebp+0] cl +
ja loc_471C12  +
jmp loc_471BDB  +
movzx eax byte ptr [esp+0BCh+var_88] +
sub eax 58h +
cmp al 20h +
ja loc_471E77  +
movzx eax al +
jmp ds:off_4D4EFC[eax*4]  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
cmp eax 2Dh +
setz [esp+0BCh+var_4D]  +
cmp eax 2Bh +
jz loc_471C7C  +
cmp [esp+0BCh+var_4D] 0 +
jz loc_471CA8  +
test esi esi +
jz loc_4717E5  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4717E5  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp eax 6Eh +
jz loc_4737C9  +
cmp eax 69h +
jz loc_4738AF  +
test esi esi +
mov byte ptr [esp+0BCh+var_5C] 65h +
mov [esp+0BCh+var_58] 0 +
jz loc_471CDC  +
cmp ebx 30h +
jz loc_473C1C  +
mov eax [esp+0BCh+var_90] +
xor ecx ecx +
mov edi ebx +
mov dword ptr [esp+0BCh+var_AC] esi +
mov ebx [esp+0BCh+var_58] +
mov esi ecx +
mov byte ptr [esp+0BCh+var_68] 0 +
mov [esp+0BCh+var_4C] ebp +
and eax 100h +
mov [esp+0BCh+var_54] eax +
jmp loc_471DBB  +
mov ecx [esp+0BCh+var_24] +
movzx eax byte ptr [esp+0BCh+var_5C] +
cmp [ecx+ebx-1] al +
jz loc_472D00  +
cmp byte ptr [esp+0BCh+var_68] 0 +
jnz loc_471D38  +
test ebx ebx +
jz loc_471D38  +
mov [esp+0BCh+var_BC] edi +
call tolower  +
cmp byte ptr [esp+0BCh+var_5C] al +
jz loc_472F1E  +
mov ecx dword ptr [esp+0BCh+var_AC] +
mov eax 7FFFFFFFh +
test ecx ecx +
cmovg eax ecx +
mov [esp+0BCh+var_88] eax +
mov eax esi +
test al al +
jz loc_472B20  +
mov eax [esp+0BCh+var_64] +
cmp byte ptr [eax] 0 +
jz loc_472B05  +
mov eax [esp+0BCh+var_8C] +
test eax eax +
jz loc_4737A1  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4737A1  +
mov ecx dword ptr [esp+0BCh+var_AC] +
mov eax [esp+0BCh+var_88] +
test ecx ecx +
cmovle eax ecx +
mov dword ptr [esp+0BCh+var_AC] eax +
mov ebp dword ptr [esp+0BCh+var_AC] +
test ebp ebp +
jz loc_472DDD  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_472DDD  +
xor eax eax +
test ebp ebp +
setnle al  +
sub dword ptr [esp+0BCh+var_AC] eax +
lea eax [edi-30h] +
cmp eax 9 +
jbe loc_471DE9  +
cmp byte ptr [esp+0BCh+var_68] 0 +
jnz loc_471D05  +
test byte ptr [esp+0BCh+var_90] 40h +
jz loc_471D1B  +
mov [esp+0BCh+var_BC] edi +
call isxdigit  +
test eax eax +
jz loc_471D1B  +
mov ecx [esp+0BCh+var_24] +
mov eax ebx +
lea edx [esp+0BCh+var_28] +
call sub_471240  +
mov ecx edi +
mov [esp+0BCh+var_24] eax +
mov [eax+ebx] cl +
add ebx 1 +
jmp loc_471D89  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
cmp eax 25h +
jz loc_4716F8  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_BC] 1 +
call sub_4714A0  +
jmp loc_4717E5  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 200h +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
or [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_84] 0Ah +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
cmp eax 2Dh +
jz loc_472906  +
cmp eax 2Bh +
mov dword ptr [esp+0BCh+var_AC] 0 +
jz loc_472906  +
test esi esi +
setnz dl  +
cmp ebx 30h +
mov eax edx +
jnz loc_4727E0  +
test dl dl +
jz loc_4727E0  +
test esi esi +
jle loc_4735F0  +
mov edi dword ptr [esp+0BCh+var_AC] +
lea eax [esp+0BCh+var_28] +
sub esi 1 +
mov ecx [esp+0BCh+var_24] +
mov edx eax +
mov eax edi +
call sub_471240  +
mov ecx edi +
add edi 1 +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+ecx] 30h +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
test esi esi +
mov dword ptr [esp+0BCh+var_AC] edi +
mov ebx eax +
jnz loc_473631  +
mov edi [esp+0BCh+var_84] +
mov eax 8 +
test edi edi +
cmovnz eax edi +
mov [esp+0BCh+var_84] eax +
test esi esi +
setnz al  +
cmp ebx 0FFFFFFFFh +
jz loc_471F78  +
test al al +
jz loc_471F78  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_5C] ebp +
and eax 100h +
mov [esp+0BCh+var_68] eax +
lea esi [esi+0] +
cmp [esp+0BCh+var_84] 10h +
jz loc_4729A0  +
lea eax [ebx-30h] +
cmp eax 9 +
ja loc_472A10  +
lea eax [ebx-2Fh] +
cmp eax [esp+0BCh+var_84] +
jle loc_4729B0  +
mov ebp [esp+0BCh+var_5C] +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_47176F  +
cmp dword ptr [esp+0BCh+var_AC] 1 +
jnz loc_471FA5  +
mov eax [esp+0BCh+var_24] +
movzx eax byte ptr [eax] +
cmp al 2Dh +
jz loc_4717C0  +
cmp al 2Bh +
jz loc_4717C0  +
mov edx [esp+0BCh+var_98] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
lea ecx [esp+0BCh+var_2C] +
call sub_4714A0  +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edi dword ptr [esp+0BCh+var_AC] +
mov ecx [esp+0BCh+var_24] +
mov edx [esp+0BCh+var_88] +
mov eax edi +
call sub_471240  +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+edi] 0 +
mov edi [esp+0BCh+var_90] +
mov eax [esp+0BCh+var_84] +
and edi 8 +
jz loc_473322  +
mov [esp+0BCh+var_B4] eax +
lea eax [esp+0BCh+var_20] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_BC] eax +
jz loc_473720  +
call sub_474B90  +
mov esi eax +
mov [esp+0BCh+var_48] edx +
mov eax [esp+0BCh+var_20] +
cmp [esp+0BCh+var_24] eax +
jz loc_4717E5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
test edi edi +
jz loc_473678  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473B6C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edi [esp+0BCh+var_48] +
mov [eax] esi +
mov [eax+4] edi +
add [esp+0BCh+var_7C] 1 +
mov esi ebp +
mov dword ptr [esp+0BCh+var_AC] 0 +
jmp loc_4715D5  +
call _errno  +
mov edi [eax] +
call _errno  +
mov dword ptr [esp+0BCh+var_AC] esi +
mov esi ebx +
mov ebx [esp+0BCh+var_98] +
mov dword ptr [eax] 0 +
jmp loc_4720D1  +
lea edx [esp+0BCh+var_2C] +
mov eax ebx +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4720D6  +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jz loc_4720F7  +
cmp esi 0FFFFFFFFh +
jnz loc_4720B0  +
call _errno  +
cmp dword ptr [eax] 4 +
nop   +
jz loc_47248D  +
mov esi 0FFFFFFFFh +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jnz loc_4720D1  +
mov ebx esi +
mov esi dword ptr [esp+0BCh+var_AC] +
call _errno  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [eax] edi +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_4714A0  +
cmp byte ptr [esp+0BCh+var_88] 63h +
jnz loc_472325  +
test byte ptr [esp+0BCh+var_90] 4 +
jz loc_472667  +
cmp esi 0FFFFFFFFh +
mov eax 1 +
cmovz esi eax +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_4721DD  +
test ah 6 +
jz loc_4727F7  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4739CA  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_473E54  +
cmp esi 400h +
mov eax 400h +
cmovle eax esi +
mov [esp+0BCh+var_78] eax +
add eax eax +
mov [esp+0BCh+var_BC] eax +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [ecx] eax +
jz loc_473EA4  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_4721C2  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_4721C9  +
call sub_4712D0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [eax+edx*4+8] ecx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov eax [esp+0BCh+var_90] +
mov dword ptr [esp+0BCh+var_AC] esi +
mov esi ebx +
mov [esp+0BCh+var_18] 0 +
mov [esp+0BCh+var_88] ebp +
and eax 600h +
mov [esp+0BCh+var_90] eax +
mov eax esi +
test edi edi +
mov byte ptr [esp+0BCh+var_11] al +
jnz loc_472293  +
mov ebp [esp+0BCh+var_90] +
test ebp ebp +
jz loc_472293  +
mov eax [esp+0BCh+var_94] +
mov ecx [eax] +
mov eax [esp+0BCh+var_78] +
add eax eax +
mov [esp+0BCh+var_80] eax +
add eax ecx +
cmp [esp+0BCh+var_70] eax +
jnz loc_472293  +
mov ebp [esp+0BCh+var_78] +
mov eax dword ptr [esp+0BCh+var_AC] +
cmp ebp eax +
lea ebx [eax-1] +
cmovle ebx ebp +
add ebx ebp +
add ebp 1 +
jmp loc_47226E  +
cmp ebx ebp +
jbe loc_47343F  +
mov eax [esp+0BCh+var_94] +
mov ebx ebp +
mov ecx [eax] +
lea eax [ebx+ebx] +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] ecx +
call realloc  +
test eax eax +
jz loc_47225E  +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_78] ebx +
mov [ecx] eax +
add eax [esp+0BCh+var_80] +
mov [esp+0BCh+var_70] eax +
lea ebx [esp+0BCh+var_11] +
xor ebp ebp +
mov eax ebx +
mov ebx esi +
mov esi eax +
jmp loc_4722AB  +
mov byte ptr [esp+0BCh+var_11] al +
mov eax [esp+0BCh+var_70] +
test edi edi +
lea ecx [esp+0BCh+var_18] +
mov [esp+0BCh+var_B0] ecx +
mov [esp+0BCh+var_B4] 1 +
cmovnz eax ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call sub_4749A0  +
cmp eax 0FFFFFFFEh +
jnz loc_472F54  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_4722A4  +
call _errno  +
mov dword ptr [eax] 2Ah +
jmp loc_4717E5  +
movzx eax byte ptr [esp+0BCh+var_88] +
and eax 0FFFFFFDFh +
cmp al 43h +
jz loc_47231A  +
cmp byte ptr [esp+0BCh+var_88] 6Eh +
jnz loc_472090  +
cmp byte ptr [esp+0BCh+var_88] 63h +
jz loc_472128  +
cmp byte ptr [esp+0BCh+var_88] 73h +
jnz loc_4719D9  +
test byte ptr [esp+0BCh+var_90] 4 +
jz loc_47253A  +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_4723D2  +
test ah 6 +
jz loc_4728D8  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473A80  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_473E54  +
mov [esp+0BCh+var_BC] 0C8h +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [ecx] eax +
jz loc_473EA4  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_4723AF  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_4723B6  +
call sub_4712D0  +
mov edx [eax] +
mov ebx [esp+0BCh+var_94] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [esp+0BCh+var_78] 64h +
mov [eax] ecx +
mov [eax+edx*4+8] ebx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov [esp+0BCh+var_88] esi +
mov esi [esp+0BCh+var_70] +
mov [esp+0BCh+var_18] 0 +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jnz loc_473D76  +
mov byte ptr [esp+0BCh+var_11] bl +
xor ebp ebp +
jmp loc_472427  +
mov byte ptr [esp+0BCh+var_11] al +
test edi edi +
mov eax ebp +
lea ecx [esp+0BCh+var_18] +
cmovz eax esi +
mov [esp+0BCh+var_B0] ecx +
lea ecx [esp+0BCh+var_11] +
mov [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] eax +
call sub_4749A0  +
cmp eax 0FFFFFFFEh +
jnz loc_473278  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472420  +
jmp loc_4722F3  +
movzx eax byte ptr [esi] +
jmp loc_4715E8  +
lea ebp [edx+1] +
movzx eax byte ptr [edx+1] +
jmp loc_47162F  +
mov edi [esp+0BCh+var_7C] +
mov eax 0FFFFFFFFh +
test edi edi +
cmovnz eax edi +
jmp loc_4716CB  +
test al al +
jz loc_4717E5  +
jmp loc_471A0D  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 8 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 0Ch +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
mov esi 0FFFFFFFFh +
jmp loc_471898  +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_4717E5  +
mov esi [esp+0BCh+var_98] +
lea esi [esi+0] +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_471400  +
mov [esp+0BCh+var_BC] eax +
mov ebx eax +
call isspace  +
test eax eax +
jnz loc_472500  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_4714A0  +
jmp loc_4717E5  +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_4725D1  +
test ah 6 +
jz loc_4728AA  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_473A20  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov edx [esp+0BCh+var_94] +
test edx edx +
jz loc_473E54  +
mov [esp+0BCh+var_BC] 64h +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_60] eax +
mov [ecx] eax +
jz loc_473EA4  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_4725AE  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_4725B5  +
call sub_4712D0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_78] 64h +
mov [eax+edx*4+8] ecx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_88] ebp +
mov ebp [esp+0BCh+var_60] +
and eax 600h +
mov dword ptr [esp+0BCh+var_AC] eax +
jmp loc_472641  +
mov eax [esp+0BCh+var_94] +
mov ebp edx +
mov ecx [esp+0BCh+var_78] +
mov eax [eax] +
add ecx eax +
cmp edx ecx +
jz loc_472EC9  +
test esi esi +
jle loc_472626  +
sub esi 1 +
jz loc_472D35  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_472D35  +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jnz loc_473419  +
test edi edi +
jnz loc_472619  +
mov eax dword ptr [esp+0BCh+var_AC] +
lea edx [ebp+1] +
mov [ebp+0] bl +
test eax eax +
jnz loc_472603  +
mov ebp edx +
jmp loc_472619  +
cmp esi 0FFFFFFFFh +
mov eax 1 +
cmovz esi eax +
mov eax [esp+0BCh+var_90] +
test al 80h +
jnz loc_473ED1  +
and eax 600h +
mov dword ptr [esp+0BCh+var_AC] eax +
jnz loc_472825  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4739F6  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
test edi edi +
jz loc_4717E5  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47248D  +
mov [esp+0BCh+var_90] ebp +
mov edx ebx +
jmp loc_472714  +
mov eax [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_78] +
mov eax [eax] +
mov ecx ebx +
add ecx eax +
cmp edi ecx +
jz loc_472D7E  +
sub esi 1 +
test esi esi +
lea ebp [edi+1] +
mov [edi] dl +
jle loc_473241  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_473241  +
mov edi ebp +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jnz loc_4726D1  +
mov ebx [esp+0BCh+var_78] +
jmp loc_4726E7  +
mov edx [esp+0BCh+var_98] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
lea ecx [esp+0BCh+var_2C] +
call sub_4714A0  +
mov edi [esp+0BCh+var_7C] +
mov eax 0FFFFFFFFh +
test edi edi +
cmovnz eax edi +
jmp loc_4716CB  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_471B34  +
test [esp+0BCh+var_90] 600h +
jz loc_473A96  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_473D46  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov ecx [esp+0BCh+var_94] +
test ecx ecx +
jz loc_473E54  +
mov [esp+0BCh+var_BC] 0C8h +
call malloc  +
mov edi [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [edi] eax +
jnz loc_471AFF  +
test [esp+0BCh+var_90] 400h +
mov eax 0FFFFFFFFh +
cmovz eax [esp+0BCh+var_7C] +
mov ecx edi +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471370  +
jmp loc_471803  +
mov edi [esp+0BCh+var_84] +
mov edx 0Ah +
test edi edi +
cmovnz edx edi +
mov [esp+0BCh+var_84] edx +
jmp loc_471F2F  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473A0A  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] ecx +
mov eax [esp+0BCh+var_70] +
test eax eax +
jnz loc_4721DD  +
jmp loc_4717E5  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_4739B4  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov edx [esp+0BCh+var_94] +
test edx edx +
jz loc_473E54  +
cmp esi 400h +
mov eax 400h +
cmovle eax esi +
mov [esp+0BCh+var_BC] eax +
mov [esp+0BCh+var_78] eax +
call malloc  +
mov edi eax +
mov eax [esp+0BCh+var_94] +
test edi edi +
mov [eax] edi +
jz loc_473F27  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_47288A  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_472891  +
call sub_4712D0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [eax+edx*4+8] ecx +
jmp loc_4726AE  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473A36  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_60] ecx +
mov eax [esp+0BCh+var_60] +
test eax eax +
jnz loc_4725D1  +
jmp loc_4717E5  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4739E0  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] ecx +
mov ebx [esp+0BCh+var_70] +
test ebx ebx +
jnz loc_4723D2  +
jmp loc_4717E5  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov edx eax +
xor eax eax +
call sub_471240  +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov ebx eax +
jmp loc_471EAC  +
mov [esp+0BCh+var_84] 0Ah +
jmp loc_471E77  +
mov [esp+0BCh+var_84] 10h +
jmp loc_471E77  +
and [esp+0BCh+var_90] 0FFFFFFF1h +
or [esp+0BCh+var_90] 24h +
mov [esp+0BCh+var_84] 10h +
jmp loc_471E77  +
mov [esp+0BCh+var_84] 8 +
jmp loc_471E77  +
or [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_84] 0 +
jmp loc_471E77  +
mov [esp+0BCh+var_BC] ebx +
call isxdigit  +
test eax eax +
jz loc_471F74  +
mov edi dword ptr [esp+0BCh+var_AC] +
mov ecx [esp+0BCh+var_24] +
lea edx [esp+0BCh+var_28] +
mov eax edi +
call sub_471240  +
lea ecx [edi+1] +
lea edx [esp+0BCh+var_2C] +
mov dword ptr [esp+0BCh+var_AC] ecx +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
test esi esi +
mov ebx eax +
jz loc_471F74  +
cmp eax 0FFFFFFFFh +
jnz loc_471F50  +
jmp loc_471F74  +
cmp [esp+0BCh+var_84] 0Ah +
jnz loc_471F74  +
mov eax [esp+0BCh+var_68] +
test eax eax +
jz loc_471F74  +
mov ecx [esp+0BCh+var_8C] +
test esi esi +
mov ebp 7FFFFFFFh +
cmovg ebp esi +
movzx edx byte ptr [ecx] +
movzx eax dl +
cmp eax ebx +
jnz loc_473798  +
mov edi ecx +
add edi 1 +
cmp byte ptr [ecx+1] 0 +
jz loc_472C85  +
mov [esp+0BCh+var_88] esi +
mov esi [esp+0BCh+var_98] +
jmp loc_472A85  +
movzx edx byte ptr [edi] +
sub ebp 1 +
movzx eax dl +
cmp eax ebx +
jnz loc_472C8C  +
add edi 1 +
cmp byte ptr [edi] 0 +
jz loc_472C81  +
test ebp ebp +
jz loc_472C95  +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472A60  +
mov esi [esp+0BCh+var_88] +
movzx edx byte ptr [edi] +
test dl dl +
jnz loc_473E75  +
mov edi dword ptr [esp+0BCh+var_AC] +
test esi esi +
cmovle ebp esi +
mov esi ebp +
sub edi 1 +
jmp loc_4729B4  +
mov ebx [esp+0BCh+var_58] +
mov [esp+0BCh+var_88] edi +
mov edi eax +
mov eax [esp+0BCh+var_64] +
movzx eax byte ptr [eax] +
test al al +
jz loc_472B05  +
mov esi [esp+0BCh+var_64] +
mov ecx [esp+0BCh+var_24] +
lea edx [esp+0BCh+var_28] +
mov eax ebx +
mov ebp ebx +
add esi 1 +
add ebx 1 +
call sub_471240  +
mov [esp+0BCh+var_24] eax +
movzx edx byte ptr [esi-1] +
mov [eax+ebp] dl +
cmp byte ptr [esi] 0 +
jnz loc_472AD5  +
mov edx dword ptr [esp+0BCh+var_AC] +
test edx edx +
jle loc_472B15  +
mov eax [esp+0BCh+var_88] +
mov dword ptr [esp+0BCh+var_AC] eax +
mov esi 1 +
jmp loc_471D89  +
mov ecx [esp+0BCh+var_64] +
movzx eax byte ptr [ecx] +
movzx edx al +
cmp edi edx +
jnz loc_473BF1  +
cmp byte ptr [ecx+1] 0 +
lea ebp [ecx+1] +
jz loc_472ACD  +
mov [esp+0BCh+var_58] ebx +
mov edi [esp+0BCh+var_88] +
mov ebx [esp+0BCh+var_98] +
jmp loc_472B77  +
movzx edx byte ptr [ebp+0] +
sub edi 1 +
movzx eax dl +
cmp eax ecx +
jnz loc_472D17  +
add ebp 1 +
cmp byte ptr [ebp+0] 0 +
jz loc_472ABC  +
test edi edi +
jz loc_472D26  +
lea edx [esp+0BCh+var_2C] +
mov eax ebx +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_472B50  +
mov ebx [esp+0BCh+var_58] +
movzx edx byte ptr [ebp+0] +
mov [esp+0BCh+var_88] edi +
test dl dl +
mov edi eax +
jz loc_472AC6  +
mov eax [esp+0BCh+var_54] +
test eax eax +
jz loc_471D61  +
mov edx [esp+0BCh+var_64] +
sub ebp edx +
test ebp ebp +
jle loc_473C69  +
mov ecx [esp+0BCh+var_8C] +
movzx eax byte ptr [edx] +
cmp [ecx] al +
jnz loc_471D61  +
mov [esp+0BCh+var_58] edi +
mov eax ecx +
mov edi edx +
jmp loc_472BE1  +
movzx edx byte ptr [edi+edx] +
cmp [eax] dl +
jnz loc_473410  +
add eax 1 +
mov edx eax +
sub edx ecx +
cmp ebp edx +
jg loc_472BD5  +
mov edi [esp+0BCh+var_58] +
cmp ebp edx +
jnz loc_471D65  +
movzx edx byte ptr [eax] +
movzx ecx dl +
cmp ecx edi +
jnz loc_471D70  +
movzx edx byte ptr [eax+1] +
lea ebp [eax+1] +
test dl dl +
jz loc_471D78  +
mov eax [esp+0BCh+var_88] +
test eax eax +
jz loc_471D70  +
mov [esp+0BCh+var_58] ebx +
mov edi [esp+0BCh+var_98] +
mov ebx [esp+0BCh+var_88] +
jmp loc_472C58  +
movzx edx byte ptr [ebp+0] +
sub ebx 1 +
movzx ecx dl +
cmp ecx eax +
jnz loc_473C0D  +
add ebp 1 +
movzx edx byte ptr [ebp+0] +
test dl dl +
jz loc_473BFE  +
test ebx ebx +
jz loc_473C74  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
jnz loc_472C2F  +
mov [esp+0BCh+var_88] ebx +
movzx edx byte ptr [ebp+0] +
mov edi 0FFFFFFFFh +
mov ebx [esp+0BCh+var_58] +
jmp loc_471D70  +
mov esi [esp+0BCh+var_88] +
mov ebx eax +
jmp loc_472AA9  +
mov esi [esp+0BCh+var_88] +
jmp loc_472AA1  +
mov ebp [esp+0BCh+var_5C] +
cmp [esp+0BCh+var_8C] edi +
mov ebx eax +
jnb loc_471F78  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_BC] 0 +
lea ebx [edi-1] +
call sub_4714A0  +
cmp ebx [esp+0BCh+var_8C] +
jbe loc_472CF4  +
mov esi ebx +
movzx eax byte ptr [esi] +
lea ecx [esp+0BCh+var_2C] +
sub esi 1 +
mov edx [esp+0BCh+var_98] +
mov [esp+0BCh+var_BC] 1 +
call sub_4714A0  +
cmp esi [esp+0BCh+var_8C] +
jnz loc_472CC7  +
mov eax [esp+0BCh+var_8C] +
sub eax edi +
lea ebx [ebx+eax+1] +
movzx ebx byte ptr [ebx] +
jmp loc_471F78  +
cmp edi 2Bh +
jz loc_471DF0  +
cmp edi 2Dh +
jnz loc_471D1B  +
jmp loc_471DF0  +
mov eax ecx +
mov ebx [esp+0BCh+var_58] +
mov [esp+0BCh+var_88] edi +
jmp loc_472B98  +
mov [esp+0BCh+var_88] edi +
mov ebx [esp+0BCh+var_58] +
mov edi eax +
jmp loc_472BA2  +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_88] +
test edi edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
mov eax [esp+0BCh+var_60] +
lea esi [eax+1] +
mov byte ptr [eax] 0 +
mov ecx [esp+0BCh+var_78] +
mov edx esi +
mov eax [esp+0BCh+var_94] +
call sub_471210  +
mov [esp+0BCh+var_60] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_4715D5  +
cmp ebx esi +
mov ecx esi +
mov edi [esp+0BCh+var_94] +
lea ebp [esi-1] +
cmovl ebp ebx +
add ebp ebx +
mov esi ebp +
mov ebp ecx +
lea ebx [ebx+1] +
mov [esp+0BCh+var_88] edx +
jmp loc_472DAC  +
cmp esi ebx +
jbe loc_47343F  +
mov eax [edi] +
mov esi ebx +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_472DA0  +
mov edi ebp +
mov ebp esi +
mov edx [esp+0BCh+var_88] +
mov esi edi +
mov edi [esp+0BCh+var_94] +
mov ebx ebp +
mov [edi] eax +
mov edi [esp+0BCh+var_78] +
mov [esp+0BCh+var_78] ebp +
add edi eax +
jmp loc_4726E7  +
mov ebp [esp+0BCh+var_4C] +
mov [esp+0BCh+var_58] ebx +
mov ebx edi +
mov eax [esp+0BCh+var_58] +
test eax eax +
jz loc_4717E5  +
test byte ptr [esp+0BCh+var_90] 40h +
jz loc_472E05  +
cmp [esp+0BCh+var_58] 2 +
jz loc_4717E5  +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edi [esp+0BCh+var_58] +
mov ecx [esp+0BCh+var_24] +
mov edx [esp+0BCh+var_88] +
mov eax edi +
call sub_471240  +
test byte ptr [esp+0BCh+var_90] 8 +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+edi] 0 +
lea eax [esp+0BCh+var_20] +
jnz loc_4736AF  +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 4 +
mov [esp+0BCh+var_BC] eax +
jz loc_4735A3  +
call sub_474E90  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_473352  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_4717DB  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473D5C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
fstp  [esp+0BCh+var_44] +
fld  [esp+0BCh+var_44] +
jz loc_472EAA  +
fchs   +
fstp  qword ptr [eax] +
xor eax eax +
mov esi ebp +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
setz al  +
add [esp+0BCh+var_7C] eax +
jmp loc_4715D5  +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_80] ebx +
mov ebx [esp+0BCh+var_94] +
mov [esp+0BCh+var_68] esi +
lea edx [ecx+ecx] +
lea ebp [ecx+1] +
mov esi edx +
jmp loc_472EEF  +
cmp esi ebp +
jbe loc_4733DA  +
mov eax [ebx] +
mov esi ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_472EE3  +
mov ebp [esp+0BCh+var_78] +
mov edx esi +
mov ecx [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_80] +
mov esi [esp+0BCh+var_68] +
add ebp eax +
mov [ecx] eax +
mov [esp+0BCh+var_78] edx +
jmp loc_472619  +
mov ecx [esp+0BCh+var_24] +
mov eax ebx +
mov esi 1 +
lea edx [esp+0BCh+var_28] +
call sub_471240  +
movzx ecx byte ptr [esp+0BCh+var_5C] +
mov byte ptr [esp+0BCh+var_68] 1 +
mov [esp+0BCh+var_24] eax +
mov [eax+ebx] cl +
add ebx 1 +
jmp loc_471D89  +
cmp eax 1 +
mov esi ebx +
jnz loc_4722F3  +
sub dword ptr [esp+0BCh+var_AC] 1 +
mov ebx dword ptr [esp+0BCh+var_AC] +
add [esp+0BCh+var_70] 2 +
test ebx ebx +
jle loc_472F8C  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jnz loc_47221A  +
test edi edi +
mov ebp [esp+0BCh+var_88] +
mov ebx esi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
mov eax [esp+0BCh+var_78] +
mov esi ebp +
mov edx [esp+0BCh+var_70] +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_471210  +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_4715D5  +
test ebx ebx +
jz loc_473157  +
mov eax [esp+0BCh+var_2C] +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_5C] eax +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov edi [esp+0BCh+var_90] +
mov [esp+0BCh+var_68] ebp +
mov ebp [esp+0BCh+var_98] +
mov [esp+0BCh+var_18] 0 +
mov [esp+0BCh+var_88] 0 +
and edi 80h +
jmp loc_473047  +
sub esi 1 +
jz loc_47345C  +
lea edx [esp+0BCh+var_2C] +
mov eax ebp +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47345C  +
mov eax [esp+0BCh+var_24] +
movzx ecx byte ptr [esp+0BCh+var_AC] +
cmp [eax+ebx] cl +
jz loc_473730  +
test edi edi +
jnz loc_473025  +
lea eax [esp+0BCh+var_18] +
mov [esp+0BCh+var_B0] eax +
lea eax [esp+0BCh+var_11] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_70] +
mov [esp+0BCh+var_B4] 1 +
mov byte ptr [esp+0BCh+var_11] bl +
mov [esp+0BCh+var_BC] eax +
call sub_4749A0  +
cmp eax 0FFFFFFFEh +
jz loc_47314D  +
add [esp+0BCh+var_70] 2 +
test [esp+0BCh+var_90] 600h +
jz loc_473140  +
mov eax [esp+0BCh+var_94] +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_88] 0 +
mov eax [eax] +
add ecx ecx +
mov [esp+0BCh+var_80] ecx +
lea edx [eax+ecx] +
cmp [esp+0BCh+var_70] edx +
jnz loc_473025  +
mov edx ecx +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_88] ebx +
mov ebx edx +
mov [esp+0BCh+var_70] esi +
add ecx 1 +
mov esi ecx +
jmp loc_473100  +
cmp ebx esi +
jbe loc_473AF6  +
mov eax [esp+0BCh+var_94] +
mov ebx esi +
mov eax [eax] +
lea ecx [ebx+ebx] +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_4730F0  +
mov ecx [esp+0BCh+var_94] +
mov edx ebx +
mov esi [esp+0BCh+var_70] +
mov ebx [esp+0BCh+var_88] +
mov [esp+0BCh+var_78] edx +
mov [ecx] eax +
add eax [esp+0BCh+var_80] +
mov [esp+0BCh+var_88] 0 +
mov [esp+0BCh+var_70] eax +
jmp loc_473025  +
mov [esp+0BCh+var_88] 0 +
jmp loc_473025  +
add [esp+0BCh+var_88] 1 +
jmp loc_47302E  +
mov eax [esp+0BCh+var_2C] +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_68] eax +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4716C2  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_80] ebp +
mov ebp [esp+0BCh+var_60] +
mov edi eax +
and eax 600h +
and edi 80h +
mov [esp+0BCh+var_88] eax +
jmp loc_4731D8  +
mov eax [esp+0BCh+var_94] +
mov ebp edx +
mov ecx [esp+0BCh+var_78] +
mov eax [eax] +
add ecx eax +
cmp edx ecx +
jz loc_473501  +
sub esi 1 +
test esi esi +
jle loc_4734CE  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4734CE  +
mov eax [esp+0BCh+var_24] +
movzx ecx byte ptr [esp+0BCh+var_AC] +
cmp [eax+ebx] cl +
jz loc_473752  +
test edi edi +
jnz loc_4731B2  +
mov ecx [esp+0BCh+var_88] +
lea edx [ebp+1] +
mov [ebp+0] bl +
test ecx ecx +
jnz loc_47319C  +
mov ebp edx +
jmp loc_4731B2  +
mov edx [esp+0BCh+var_24] +
mov eax 100h +
mov [esp+0BCh+var_28] 100h +
test edx edx +
jz loc_47322D  +
mov [esp+0BCh+var_BC] edx +
call free  +
mov eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_BC] eax +
call malloc  +
mov [esp+0BCh+var_24] eax +
jmp loc_471B6D  +
mov eax ebx +
mov ebx edx +
mov [esp+0BCh+var_60] ebp +
mov ecx eax +
mov ebp [esp+0BCh+var_90] +
mov edx [esp+0BCh+var_60] +
mov eax [esp+0BCh+var_94] +
mov esi ebp +
call sub_471210  +
add [esp+0BCh+var_7C] 1 +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [esp+0BCh+var_94] 0 +
jmp loc_4715D5  +
cmp eax 1 +
jnz loc_4722F3  +
add esi 2 +
test edi edi +
jnz loc_4732AA  +
test [esp+0BCh+var_90] 600h +
jz loc_4732AA  +
mov eax [esp+0BCh+var_94] +
mov ecx [eax] +
mov eax [esp+0BCh+var_78] +
lea edx [eax+eax] +
lea eax [ecx+edx] +
cmp esi eax +
jz loc_473DB2  +
mov ecx [esp+0BCh+var_88] +
test ecx ecx +
jle loc_4732B9  +
sub [esp+0BCh+var_88] 1 +
jz loc_4732D4  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472404  +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_70] esi +
test edi edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
mov eax [esp+0BCh+var_70] +
xor edx edx +
lea esi [eax+2] +
mov [eax] dx +
mov eax [esp+0BCh+var_78] +
mov edx esi +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_471210  +
mov [esp+0BCh+var_70] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_4715D5  +
mov [esp+0BCh+var_B4] eax +
lea eax [esp+0BCh+var_20] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_BC] eax +
jz loc_47370A  +
call strtol  +
mov esi eax +
jmp loc_47202A  +
fstp  st +
jmp loc_47335C  +
fstp  st +
jmp loc_47335C  +
fstp  st +
mov edx [esp+0BCh+var_24] +
mov eax [esp+0BCh+var_20] +
cmp edx eax +
jnz loc_472EAC  +
jmp loc_4717E5  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_471803  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 1 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 0Ch +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 404h +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_4719B0  +
test [esp+0BCh+var_90] 400h +
jnz loc_473716  +
mov eax [esp+0BCh+var_94] +
mov edi [esp+0BCh+var_78] +
mov eax [eax] +
mov byte ptr [eax+edi-1] 0 +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_94] 0 +
add eax 1 +
jmp loc_4716CB  +
mov edi [esp+0BCh+var_58] +
jmp loc_471D65  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_88] +
call sub_4714A0  +
jmp loc_472D3D  +
lea eax [esp+0BCh+var_30] +
lea edx [esp+0BCh+var_24] +
call sub_4712F0  +
mov eax 0FFFFFFFFh +
jmp loc_471803  +
mov ebp [esp+0BCh+var_68] +
mov eax [esp+0BCh+var_88] +
test eax eax +
jnz loc_4722F3  +
mov eax [esp+0BCh+var_5C] +
cmp eax [esp+0BCh+var_2C] +
jz loc_4717E5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471608  +
mov eax [esp+0BCh+var_70] +
xor edi edi +
lea esi [eax+2] +
mov [eax] di +
mov eax [esp+0BCh+var_78] +
mov edx esi +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_471210  +
mov eax [esp+0BCh+var_88] +
mov [esp+0BCh+var_70] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov dword ptr [esp+0BCh+var_AC] eax +
mov [esp+0BCh+var_94] 0 +
jmp loc_4715D5  +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_68] +
cmp eax [esp+0BCh+var_2C] +
jz loc_4717E5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jz loc_472D4D  +
mov esi ebp +
jmp loc_4715D5  +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_60] ebx +
mov ebx [esp+0BCh+var_94] +
mov [esp+0BCh+var_5C] esi +
lea edx [ecx+ecx] +
lea ebp [ecx+1] +
mov esi edx +
jmp loc_47352C  +
cmp esi ebp +
jbe loc_4733DA  +
mov eax [ebx] +
mov esi ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_473520  +
mov ebp [esp+0BCh+var_78] +
mov edx esi +
mov ecx [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_60] +
mov esi [esp+0BCh+var_5C] +
add ebp eax +
mov [ecx] eax +
mov [esp+0BCh+var_78] edx +
jmp loc_4731B2  +
test byte ptr [esp+0BCh+var_90] 4 +
jnz loc_47387E  +
test byte ptr [esp+0BCh+var_90] 2 +
jz loc_473B30  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473D16  +
mov eax [esp+0BCh+var_6C] +
lea edx [eax+4] +
mov eax [eax] +
mov ecx [esp+0BCh+var_2C] +
mov esi ebp +
mov [esp+0BCh+var_6C] edx +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] cx +
jmp loc_4715D5  +
call sub_474FC0  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_473356  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_4717DF  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473D2C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
jz loc_4735E9  +
fchs   +
fstp  dword ptr [eax] +
jmp loc_472EAC  +
mov edi dword ptr [esp+0BCh+var_AC] +
lea eax [esp+0BCh+var_28] +
mov ecx [esp+0BCh+var_24] +
mov edx eax +
mov eax edi +
call sub_471240  +
mov ecx edi +
add edi 1 +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+ecx] 30h +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
mov dword ptr [esp+0BCh+var_AC] edi +
mov ebx eax +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp eax 78h +
jnz loc_471F18  +
test [esp+0BCh+var_84] 0FFFFFFEFh +
jnz loc_471F2A  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
mov [esp+0BCh+var_84] 10h +
mov ebx eax +
jmp loc_471F2A  +
test byte ptr [esp+0BCh+var_90] 4 +
jnz loc_473778  +
test byte ptr [esp+0BCh+var_90] 2 +
jz loc_473BC4  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473F15  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov [eax] si +
jmp loc_47207B  +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] eax +
call sub_474E90  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_47335A  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_4717E3  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473E28  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
jz loc_473703  +
fchs   +
fstp  tbyte ptr [eax] +
jmp loc_472EAC  +
call strtoul  +
mov esi eax +
jmp loc_47202A  +
mov eax 0FFFFFFFFh +
jmp loc_4716CB  +
call sub_475050  +
mov esi eax +
mov [esp+0BCh+var_48] edx +
jmp loc_47202A  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov ebp [esp+0BCh+var_68] +
call sub_4714A0  +
jmp loc_473460  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_80] +
call sub_4714A0  +
jmp loc_4734D6  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_473B7E  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov [eax] esi +
jmp loc_47207B  +
mov edi [esp+0BCh+var_8C] +
jmp loc_472AA1  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax edi +
mov [esp+0BCh+var_BC] 0 +
mov ebp [esp+0BCh+var_4C] +
mov [esp+0BCh+var_58] ebx +
mov ebx edi +
call sub_4714A0  +
jmp loc_472DE7  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471240  +
test esi esi +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
jz loc_4717E5  +
mov eax (offset aNan_0+1) +
mov edi 1 +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov ebp eax +
jmp loc_473811  +
test esi esi +
jz loc_4717E5  +
mov edi edx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4717E5  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [ebp+0] +
cmp eax edx +
jnz loc_4717E5  +
mov edx [esp+0BCh+var_88] +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
add ebp 1 +
sub esi eax +
mov eax edi +
call sub_471240  +
lea edx [edi+1] +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
cmp byte ptr [ebp+0] 0 +
jnz loc_473807  +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_58] edx +
jmp loc_472E10  +
mov esi [esp+0BCh+var_80] +
test esi esi +
jnz loc_473E16  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edx [esp+0BCh+var_2C] +
mov esi ebp +
mov [eax] edx +
mov dword ptr [esp+0BCh+var_AC] 0 +
jmp loc_4715D5  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471240  +
test esi esi +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
jz loc_4717E5  +
mov eax 1 +
mov edi (offset aInf+1) +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov ebp eax +
jmp loc_4738FA  +
test esi esi +
jz loc_4717E5  +
mov ebp edx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4717E5  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [edi] +
cmp eax edx +
jnz loc_4717E5  +
mov edx [esp+0BCh+var_88] +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
add edi 1 +
sub esi eax +
mov eax ebp +
call sub_471240  +
lea edx [ebp+1] +
mov [esp+0BCh+var_24] eax +
mov [eax+ebp] bl +
cmp byte ptr [edi] 0 +
jnz loc_4738F0  +
test esi esi +
mov edi ebp +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_58] edx +
jz loc_472E10  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_472E10  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
cmp eax 69h +
jz loc_473F3E  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_4714A0  +
jmp loc_472E10  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_472842  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_472176  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_70] eax +
jmp loc_4728F5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov edi eax +
jmp loc_4726A6  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_70] eax +
jmp loc_472814  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_472572  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_60] eax +
jmp loc_4728C7  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473E00  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_60] edi +
mov eax [esp+0BCh+var_60] +
test eax eax +
jnz loc_471B34  +
jmp loc_4717E5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_472373  +
mov edx [esp+0BCh+var_80] +
test edx edx +
jnz loc_473D9C  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] edi +
mov eax [esp+0BCh+var_70] +
test eax eax +
jnz loc_471B34  +
jmp loc_4717E5  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
sub edx 2 +
jmp loc_471B88  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_471A73  +
mov byte ptr [eax] 0 +
add edi 1 +
mov dx 0FFh +
jmp loc_471B7C  +
test [esp+0BCh+var_90] 400h +
jnz loc_473716  +
mov eax [esp+0BCh+var_94] +
xor edx edx +
mov edi [esp+0BCh+var_78] +
mov eax [eax] +
mov [eax+edi*2-2] dx +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_94] 0 +
add eax 1 +
jmp loc_4716CB  +
test byte ptr [esp+0BCh+var_90] 1 +
jz loc_47387E  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_473E42  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edx [esp+0BCh+var_2C] +
mov esi ebp +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] dl +
jmp loc_4715D5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_472072  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [eax] esi +
jmp loc_47207B  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471240  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax] 30h +
jmp loc_471FC9  +
test byte ptr [esp+0BCh+var_90] 1 +
jz loc_473778  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_473E92  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov ecx esi +
mov [eax] cl +
jmp loc_47207B  +
mov edx eax +
mov ebp [esp+0BCh+var_64] +
mov eax edi +
jmp loc_472B98  +
mov [esp+0BCh+var_88] ebx +
mov edi ecx +
mov ebx [esp+0BCh+var_58] +
jmp loc_471D78  +
mov [esp+0BCh+var_88] ebx +
mov edi eax +
mov ebx [esp+0BCh+var_58] +
jmp loc_471D70  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov edx eax +
mov [esp+0BCh+var_88] eax +
xor eax eax +
call sub_471240  +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax] 30h +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
test esi esi +
mov ebx eax +
jle loc_473C83  +
sub esi 1 +
jnz loc_473C83  +
mov [esp+0BCh+var_58] 1 +
jmp loc_471CDC  +
mov eax [esp+0BCh+var_8C] +
xor edx edx +
jmp loc_472BF0  +
mov [esp+0BCh+var_88] ebx +
mov edi ecx +
mov ebx [esp+0BCh+var_58] +
jmp loc_471D70  +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
mov byte ptr [esp+0BCh+var_5C] 65h +
mov [esp+0BCh+var_58] 1 +
cmp eax 78h +
jnz loc_471CDC  +
mov ecx [esp+0BCh+var_24] +
mov al 1 +
mov edx [esp+0BCh+var_88] +
call sub_471240  +
lea edx [esp+0BCh+var_2C] +
and [esp+0BCh+var_90] 0FFFFFEFFh +
or [esp+0BCh+var_90] 40h +
mov [esp+0BCh+var_24] eax +
mov [eax+1] bl +
mov eax [esp+0BCh+var_98] +
call sub_471400  +
test esi esi +
mov ebx eax +
jle loc_473E80  +
sub esi 1 +
mov byte ptr [esp+0BCh+var_5C] 70h +
mov [esp+0BCh+var_58] 2 +
jmp loc_471CDC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_471AD5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov edx [esp+0BCh+var_6C] +
jmp loc_473586  +
mov edx [esp+0BCh+var_80] +
fstp  dword ptr [esp+0BCh+var_AC] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
fld  dword ptr [esp+0BCh+var_AC] +
jmp loc_4735E0  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_94] eax +
jmp loc_472784  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
fstp  [esp+0BCh+var_AC] +
call sub_4712B0  +
fld  [esp+0BCh+var_AC] +
jmp loc_472E99  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_70] esi +
call sub_4714A0  +
jmp loc_4732DC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_70] eax +
jmp loc_473AB3  +
mov eax [esp+0BCh+var_78] +
mov ebp edx +
lea esi [eax+1] +
jmp loc_473DCD  +
cmp ebp esi +
jbe loc_473AF6  +
mov eax [esp+0BCh+var_94] +
mov ebp esi +
mov ecx [eax] +
lea eax [ebp+ebp+0] +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] ecx +
mov [esp+0BCh+var_80] edx +
call realloc  +
mov edx [esp+0BCh+var_80] +
test eax eax +
jz loc_473DBD  +
mov ecx [esp+0BCh+var_94] +
lea esi [eax+edx] +
mov [esp+0BCh+var_78] ebp +
mov [ecx] eax +
jmp loc_4732AA  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
mov [esp+0BCh+var_60] eax +
jmp loc_473A69  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_473897  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
fstp  [esp+0BCh+var_AC] +
call sub_4712B0  +
fld  [esp+0BCh+var_AC] +
jmp loc_4736FA  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_473B54  +
lea eax [esp+0BCh+var_24] +
xor ecx ecx +
mov [esp+0BCh+var_BC] eax +
mov eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_30] +
call sub_471370  +
jmp loc_471803  +
mov ebp [esp+0BCh+var_5C] +
mov eax ebx +
jmp loc_472C99  +
mov byte ptr [esp+0BCh+var_5C] 70h +
mov [esp+0BCh+var_58] 2 +
jmp loc_471CDC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_473BE8  +
test [esp+0BCh+var_90] 400h +
mov eax 0FFFFFFFFh +
cmovz eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471370  +
jmp loc_471803  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47248D  +
mov eax ebx +
mov edi [esp+0BCh+var_98] +
jmp loc_473F07  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_471400  +
cmp eax 0FFFFFFFFh +
jz loc_473F0E  +
sub esi 1 +
test esi esi +
jg loc_473EF4  +
mov ebx eax +
jmp loc_4716F8  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_4712B0  +
jmp loc_4736A7  +
mov eax 0FFFFFFFFh +
test [esp+0BCh+var_90] 400h +
cmovz eax [esp+0BCh+var_7C] +
jmp loc_4716CB  +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
mov edx [esp+0BCh+var_88] +
add edi 2 +
sub esi eax +
mov eax [esp+0BCh+var_58] +
call sub_471240  +
test esi esi +
mov dword ptr [esp+0BCh+var_AC] edi +
mov edi [esp+0BCh+var_58] +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
jz loc_4717E5  +
mov edi offset aNity +
jmp loc_473FE1  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [edi] +
cmp eax edx +
jnz loc_4717E5  +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
mov edx [esp+0BCh+var_88] +
add edi 1 +
sub esi eax +
mov eax dword ptr [esp+0BCh+var_AC] +
call sub_471240  +
mov ecx dword ptr [esp+0BCh+var_AC] +
lea edx [ecx+1] +
mov [esp+0BCh+var_58] edx +
mov [esp+0BCh+var_24] eax +
mov [eax+ecx] bl +
cmp byte ptr [edi] 0 +
jz loc_472E10  +
test esi esi +
jz loc_4717E5  +
mov eax [esp+0BCh+var_58] +
mov dword ptr [esp+0BCh+var_AC] eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_471400  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_473F80  +
jmp loc_4717E5  +
***
push edi  +
mov eax 1014h +
push ebx  +
call sub_470810  +
mov ecx 404h +
sub esp eax +
xor eax eax +
mov edi esp +
mov edx [esp+1024h] +
stos   +
mov eax [esp+1020h] +
mov ecx [esp+1028h] +
mov [esp] eax +
mov eax esp +
call sub_471500  +
add esp 1014h +
pop ebx  +
pop edi  +
retn   +
***
jmp sub_474050  +
***
push ebx  +
call sub_470810  +
mov ecx 404h +
sub esp eax +
xor eax eax +
mov edi esp +
mov edx [esp+4+arg_1018] +
stos   +
mov eax [esp+4+arg_1014] +
mov ecx [esp+4+arg_101C] +
mov [esp+4+arg_FF8] 1 +
mov [esp+4+var_4] eax +
mov eax esp +
call sub_471500  +
add esp 1014h +
pop ebx  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] eax +
call sub_476930  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+2Ch+var_28] eax +
call sub_476930  +
add esp 2Ch +
retn   +
***
mov eax [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_28] 4000h +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_1C] eax +
call sub_476930  +
mov byte ptr [ebx+eax] 0 +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov edx [esp+24h+arg_8] +
mov ecx [esp+24h+arg_C] +
test eax eax +
jz loc_4741A7  +
lea esi [eax-1] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] ecx +
mov [esp+24h+var_18] edx +
mov [esp+24h+var_24] 0 +
call sub_476930  +
cmp eax esi +
cmovle esi eax +
mov byte ptr [ebx+esi] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] ecx +
mov [esp+24h+var_18] edx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_24] 0 +
call sub_476930  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_474215  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_474290  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_474283  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_470840  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_470950  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_474215  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_4741D0  +
test eax eax +
mov ecx eax +
jnz loc_474300  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_4742F1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_4741D0  +
test eax eax +
mov ecx eax +
jnz loc_474360  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_474351  +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47451E  +
cmp byte ptr [ebx] 0 +
jz loc_4744E8  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_474500  +
test al 10h +
jz loc_4744E8  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4743D4  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_47450F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_474463  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_474463  +
cmp al 5Ch +
jz loc_474463  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_474465  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_4744E0  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_4744E0  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_4744E0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474632  +
mov eax [ebx+228h] +
test eax eax +
js loc_47461D  +
jz loc_4745C0  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_4745F0  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_47461D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_474613  +
mov dword ptr [ebx+228h] 1 +
jmp loc_474589  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_474625  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_4745FB  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_4745B3  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47468F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_47467F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_474689  +
***
jmp sub_4746B0  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4746F3  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_4746DA  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_4746EE  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474722  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_47471D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4747CD  +
cmp esi 0FFFFFFFFh +
jl loc_4747C0  +
jz loc_474790  +
mov [esp] ebx +
call sub_4746B0  +
nop   +
lea esi [esi+0] +
jmp loc_47477E  +
mov [esp] ebx +
call sub_474530  +
test eax eax +
jz loc_4747B7  +
cmp esi [ebx+228h] +
jg loc_474772  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_4747A3  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_4747B7  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_4747B7  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_474818  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_47480B  +
jmp loc_474818  +
cmp byte ptr [edx] 0 +
jz loc_474816  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_474806  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
test ebx ebx +
jz loc_474964  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_474970  +
mov eax [esi] +
mov dword ptr [esi] 0 +
mov [ebp+var_C] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4748F0  +
cmp [ebp+arg_14] 1 +
jbe loc_4748D0  +
cmp byte ptr [ebp+var_C] 0 +
jnz loc_474901  +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] eax +
call ds:IsDBCSLeadByteEx  +
sub esp 8 +
test eax eax +
jz loc_4748D0  +
cmp [ebp+arg_8] 1 +
jbe loc_47498C  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_474977  +
lea esp [ebp-8] +
mov eax 2 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_474927  +
movzx eax byte ptr [ebx] +
mov edx [ebp+arg_0] +
mov [edx] ax +
lea esp [ebp-8] +
mov eax 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
xor eax eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [ebp+var_C+1] al +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_28] eax +
lea eax [ebp+var_C] +
mov [esp+38h+var_30] eax +
jmp loc_4748A3  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_474977  +
mov eax 1 +
jmp loc_4748FA  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_4748FA  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
jmp loc_4748FA  +
movzx eax byte ptr [ebx] +
mov [esi] al +
mov eax 0FFFFFFFEh +
jmp loc_4748FA  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [esp+38h+arg_0] +
mov word ptr [esp+38h+var_A] ax +
lea eax [esp+38h+var_A] +
mov esi [esp+38h+arg_C] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
mov edi [eax] +
call sub_47CE60  +
test esi esi +
mov edx offset unk_4D99B8 +
cmovnz edx esi +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_24] edi +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_34] eax +
call sub_474820  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov eax offset unk_4D99B4 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+5Ch] +
mov esi [esp+54h] +
mov ebp [esp+50h] +
mov edi [esp+58h] +
test edx edx +
cmovnz eax [esp+5Ch] +
mov [esp+5Ch] eax +
call sub_47CE60  +
test esi esi +
mov [esp+18h] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+1Ch] eax +
jz loc_474B20  +
mov ecx [esi] +
test ecx ecx +
jz loc_474B20  +
test ebp ebp +
jz loc_474AC3  +
test edi edi +
jz loc_474B20  +
mov [esp+54h] esi +
xor ebx ebx +
mov esi ebp +
mov ebp [esp+54h] +
jmp loc_474A78  +
mov ecx [ebp+0] +
add ebx eax +
add esi 2 +
add ecx eax +
cmp edi ebx +
mov [ebp+0] ecx +
jbe loc_474AA8  +
mov eax [esp+1Ch] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+14h] eax +
mov eax [esp+18h] +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp+0Ch] eax +
mov eax edi +
sub eax ebx +
mov [esp+8] eax +
call sub_474820  +
test eax eax +
jg loc_474A67  +
test eax eax +
jnz loc_474B16  +
cmp ebx edi +
nop   +
jnb loc_474B16  +
mov dword ptr [ebp+0] 0 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor ebx ebx +
test edi edi +
mov [esp+2Eh] ax +
jz loc_474B16  +
mov [esp+58h] edi +
lea ebp [esp+2Eh] +
mov edi esi +
mov esi [esp+1Ch] +
jmp loc_474AEE  +
mov ecx [edi] +
add ebx eax +
add ecx eax +
cmp [esp+58h] ebx +
mov [edi] ecx +
jbe loc_474B16  +
mov eax [esp+18h] +
mov [esp+14h] esi +
mov [esp+8] esi +
mov [esp+4] ecx +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_474820  +
test eax eax +
jg loc_474AE0  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 34h +
mov word ptr [esp+38h+var_A] ax +
mov eax ds:__mb_cur_max +
mov ebx [esp+38h+arg_8] +
mov esi [eax] +
call sub_47CE60  +
test ebx ebx +
mov edx offset unk_4D99B0 +
cmovnz edx ebx +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_24] esi +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_34] eax +
lea eax [esp+38h+var_A] +
mov [esp+38h+var_38] eax +
call sub_474820  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_8] +
test esi esi +
jz loc_474BAD  +
mov eax [esp+3Ch+arg_4] +
mov [eax] edi +
cmp ebx 1 +
jz loc_474BB9  +
cmp ebx 24h +
mov esi ebx +
jbe loc_474BD3  +
call _errno  +
xor edx edx +
mov dword ptr [eax] 21h +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
movzx ebx byte ptr [edi] +
movsx eax bl +
mov [esp+0] eax +
call isspace  +
test eax eax +
jnz loc_474BD0  +
mov [esp-10h+arg_54] esi +
mov esi ebx +
mov edx edi +
mov eax esi +
mov ebx [esp-10h+arg_54] +
cmp al 2Dh +
setz al  +
movzx eax al +
mov [esp-10h+arg_28] eax +
jz loc_474D18  +
mov eax esi +
cmp al 2Bh +
jz loc_474D18  +
test ebx ebx +
jnz loc_474D27  +
cmp al 30h +
mov bl 0Ah +
jz loc_474E30  +
movsx ebp al +
lea edx [ebp-30h] +
cmp edx 9 +
ja loc_474DC8  +
movsx ebp al +
sub ebp 30h +
cmp ebx ebp +
jle loc_474E20  +
mov eax ebp +
shr eax 1Fh +
test al al +
jnz loc_474E20  +
mov [esp-10h+arg_14] ebp +
mov eax ebx +
add edi 1 +
sar ebp 1Fh +
mov [esp-10h+arg_18] ebp +
sar eax 1Fh +
xor ebp ebp +
mov [esp-10h+arg_1C] ebx +
mov [esp-10h+arg_20] eax +
mov [esp-10h+arg_24] ebp +
jmp loc_474CF5  +
mov esi eax +
cmp ebx esi +
jle loc_474D6C  +
test esi esi +
js loc_474D6C  +
mov eax [esp-10h+arg_1C] +
mov edx [esp-10h+arg_20] +
mov dword ptr [esp+0] 0FFFFFFFFh +
mov [esp-10h+arg_0] 7FFFFFFFh +
mov [esp-10h+arg_4] eax +
mov [esp-10h+arg_8] edx +
call sub_47CF70  +
add eax 2 +
adc edx 0 +
cmp [esp-10h+arg_18] edx +
ja loc_474D51  +
jb loc_474CC3  +
cmp [esp-10h+arg_14] eax +
ja loc_474D51  +
mov edx [esp-10h+arg_18] +
mov eax [esp-10h+arg_14] +
mov ebp [esp-10h+arg_20] +
imul ebp [esp-10h+arg_14] +
mov ecx edx +
imul ecx ebx +
mul  ebx +
mov [esp-10h+arg_14] esi +
sar esi 1Fh +
mov [esp-10h+arg_18] esi +
add ecx ebp +
add edx ecx +
add [esp-10h+arg_14] eax +
adc [esp-10h+arg_18] edx +
add edi 1 +
movsx esi byte ptr [edi] +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_474C71  +
mov [esp+0] esi +
call isupper  +
test eax eax +
jz loc_474D60  +
sub esi 37h +
jmp loc_474C73  +
add edi 1 +
test ebx ebx +
movzx eax byte ptr [edx+1] +
jz loc_474C17  +
cmp ebx 10h +
jnz loc_474C21  +
cmp al 30h +
jnz loc_474C21  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jz loc_474E42  +
mov eax 30h +
jmp loc_474C30  +
mov [esp-10h+arg_24] 1 +
jmp loc_474CF2  +
mov [esp+0] esi +
call islower  +
test eax eax +
jnz loc_474DC0  +
mov ecx [esp-10h+arg_50] +
mov ebp [esp-10h+arg_24] +
test ecx ecx +
jz loc_474D7E  +
mov eax [esp-10h+arg_50] +
mov [eax] edi +
mov edx [esp-10h+arg_28] +
test edx edx +
jz loc_474DF2  +
cmp [esp-10h+arg_18] 80000000h +
ja loc_474E53  +
jb loc_474DA1  +
cmp [esp-10h+arg_14] 0 +
ja loc_474E53  +
test ebp ebp +
jnz loc_474E53  +
mov eax [esp-10h+arg_14] +
mov edx [esp-10h+arg_18] +
neg eax  +
adc edx 0 +
add esp 3Ch +
pop ebx  +
neg edx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub esi 57h +
jmp loc_474C73  +
mov [esp+0] ebp +
call isupper  +
test eax eax +
jnz loc_474E10  +
mov [esp+0] ebp +
call islower  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_474BC8  +
sub ebp 57h +
jmp loc_474C36  +
mov eax [esp-10h+arg_18] +
test eax eax +
js loc_474E6A  +
test ebp ebp +
jnz loc_474E6A  +
mov eax [esp-10h+arg_14] +
mov edx [esp-10h+arg_18] +
jmp loc_474BC8  +
sub ebp 37h +
cmp ebx ebp +
jg loc_474C3E  +
nop   +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [edi+1] +
mov bl 8 +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_474C21  +
movzx eax byte ptr [edi+2] +
mov ebx 10h +
add edi 2 +
jmp loc_474C21  +
call _errno  +
mov edx 80000000h +
mov dword ptr [eax] 22h +
xor eax eax +
jmp loc_474BC8  +
call _errno  +
mov edx 7FFFFFFFh +
mov dword ptr [eax] 22h +
mov eax 0FFFFFFFFh +
jmp loc_474BC8  +
***
sub esp 4Ch +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] eax +
lea eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_4] +
fldz   +
mov [esp+4Ch+var_44] offset unk_483718 +
fstp  [esp+4Ch+var_18] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_477780  +
mov edx eax +
and edx 7 +
cmp edx 6 +
ja loc_474F08  +
jmp ds:off_4D4F80[edx*4]  +
movzx ecx word ptr [esp+4Ch+var_24] +
lea edx [ecx+403Eh] +
mov word ptr [esp+4Ch+var_18+8] dx +
mov edx [esp+4Ch+var_20] +
mov word ptr [esp+4Ch+var_18] dx +
shr edx 10h +
mov word ptr [esp+4Ch+var_18+2] dx +
mov edx [esp+4Ch+var_1C] +
mov word ptr [esp+4Ch+var_18+4] dx +
shr edx 10h +
mov word ptr [esp+4Ch+var_18+6] dx +
test al 8 +
jz loc_474F13  +
or word ptr [esp+4Ch+var_18+8] 8000h +
fld  [esp+4Ch+var_18] +
add esp 4Ch +
retn   +
mov ecx 7FFFh +
mov edx 0FFFF8000h +
mov word ptr [esp+4Ch+var_18+8] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+6] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+2] dx +
mov word ptr [esp+4Ch+var_18+4] cx +
jmp loc_474F08  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+2] cx +
mov ecx 0FFFFC000h +
mov word ptr [esp+4Ch+var_18+4] dx +
mov edx 7FFFh +
mov word ptr [esp+4Ch+var_18+6] cx +
mov word ptr [esp+4Ch+var_18+8] dx +
jmp loc_474F08  +
xor ecx ecx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+8] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+6] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+4] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+2] dx +
mov word ptr [esp+4Ch+var_18] cx +
jmp loc_474F08  +
xor edx edx +
mov word ptr [esp+4Ch+var_18+8] dx +
jmp loc_474EE6  +
***
sub esp 3Ch +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_2C] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset unk_483730 +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_477780  +
mov edx eax +
and edx 7 +
cmp edx 5 +
ja loc_475048  +
jmp ds:off_4D4F9C[edx*4]  +
mov edx 7F800000h +
mov ecx edx +
or ecx 80000000h +
test al 8 +
cmovnz edx ecx +
mov [esp+3Ch+var_20] edx +
fld  [esp+3Ch+var_20] +
add esp 3Ch +
retn   +
mov edx [esp+3Ch+var_14] +
jmp loc_475005  +
mov ecx [esp+3Ch+var_10] +
lea edx [ecx+96h] +
mov ecx [esp+3Ch+var_14] +
shl edx 17h +
and ecx 7FFFFFh +
or edx ecx +
jmp loc_475005  +
mov edx 7FC00000h +
jmp loc_475005  +
xor edx edx +
jmp loc_475005  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
test eax eax +
jz loc_475069  +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
cmp [esp+2Ch+arg_8] 1 +
jz loc_475077  +
cmp [esp+2Ch+arg_8] 24h +
jbe loc_475093  +
call _errno  +
xor edx edx +
mov dword ptr [eax] 21h +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
movzx ebx byte ptr [esi] +
movsx eax bl +
mov [esp+0] eax +
call isspace  +
test eax eax +
jnz loc_475090  +
xor edx edx +
cmp bl 2Dh +
setz dl  +
mov eax esi +
mov [esp-10h+arg_18] edx +
jz loc_4751F0  +
cmp bl 2Bh +
jz loc_4751F0  +
mov ebp [esp-10h+arg_44] +
test ebp ebp +
jnz loc_475203  +
cmp bl 30h +
mov [esp-10h+arg_44] 0Ah +
jz loc_4752F0  +
movsx ebp bl +
lea eax [ebp-30h] +
cmp eax 9 +
ja loc_475280  +
movsx eax bl +
sub eax 30h +
cmp [esp-10h+arg_44] eax +
jle loc_4752E0  +
mov edx eax +
shr edx 1Fh +
test dl dl +
jnz loc_4752E0  +
add esi 1 +
mov edi [esp-10h+arg_44] +
movsx ebx byte ptr [esi] +
mov [esp-10h+arg_C] eax +
sar eax 1Fh +
mov [esp-10h+arg_10] eax +
mov ebp edi +
lea ecx [ebx-30h] +
sar ebp 1Fh +
cmp ecx 9 +
mov [esp-10h+arg_14] 0 +
ja loc_4751CE  +
lea esi [esi+0] +
mov ebx ecx +
cmp [esp-10h+arg_44] ebx +
jle loc_47523C  +
test ebx ebx +
js loc_47523C  +
mov [esp-10h+arg_4] edi +
mov [esp-10h+arg_8] ebp +
mov dword ptr [esp+0] 0FFFFFFFFh +
mov [esp-10h+arg_0] 0FFFFFFFFh +
call sub_470840  +
add eax 1 +
adc edx 0 +
cmp [esp-10h+arg_10] edx +
ja loc_4751B4  +
jb loc_475184  +
cmp [esp-10h+arg_C] eax +
ja loc_4751B4  +
mov edx [esp-10h+arg_10] +
mov eax [esp-10h+arg_C] +
imul edx edi +
imul eax ebp +
lea ecx [edx+eax] +
mov eax [esp-10h+arg_C] +
mul  edi +
add edx ecx +
mov ecx ebx +
sar ebx 1Fh +
add ecx eax +
adc ebx edx +
cmp [esp-10h+arg_10] ebx +
jb loc_4751E2  +
ja loc_4751B4  +
cmp [esp-10h+arg_C] ecx +
jbe loc_4751E2  +
mov [esp-10h+arg_14] 1 +
add esi 1 +
movsx ebx byte ptr [esi] +
lea ecx [ebx-30h] +
cmp ecx 9 +
jbe loc_475140  +
mov [esp+0] ebx +
call isupper  +
test eax eax +
jz loc_475230  +
sub ebx 37h +
jmp loc_475142  +
mov [esp-10h+arg_C] ecx +
mov [esp-10h+arg_10] ebx +
jmp loc_4751BC  +
mov ebp [esp-10h+arg_44] +
add esi 1 +
movzx ebx byte ptr [eax+1] +
test ebp ebp +
jz loc_4750CE  +
cmp [esp-10h+arg_44] 10h +
jnz loc_4750DF  +
cmp bl 30h +
jnz loc_4750DF  +
movzx eax byte ptr [esi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jz loc_4752FB  +
mov ebx 30h +
jmp loc_4750EE  +
mov [esp+0] ebx +
call islower  +
test eax eax +
jnz loc_475272  +
mov edi [esp-10h+arg_40] +
test edi edi +
jz loc_47524A  +
mov eax [esp-10h+arg_40] +
mov [eax] esi +
mov ebx [esp-10h+arg_14] +
test ebx ebx +
jnz loc_4752B0  +
mov ecx [esp-10h+arg_18] +
mov eax [esp-10h+arg_C] +
mov edx [esp-10h+arg_10] +
test ecx ecx +
jz loc_475086  +
neg eax  +
adc edx 0 +
neg edx  +
jmp loc_475086  +
sub ebx 57h +
jmp loc_475142  +
mov [esp+0] ebp +
call isupper  +
test eax eax +
jnz loc_4752D0  +
mov [esp+0] ebp +
call islower  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_475086  +
lea eax [ebp-57h] +
jmp loc_4750F4  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 22h +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp-37h] +
cmp [esp-10h+arg_44] eax +
jg loc_4750FE  +
lea esi [esi+0] +
add esp 2Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [esi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jnz loc_47530F  +
movzx ebx byte ptr [esi+2] +
add esi 2 +
mov [esp-10h+arg_44] 10h +
jmp loc_4750DF  +
mov [esp-10h+arg_44] 8 +
jmp loc_4750DF  +
***
sub esp 48h +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [esp+24h] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_20] eax +
mov eax [esp+48h+arg_C] +
fld  tbyte ptr [esp+48h+var_28] +
mov [esp+48h+var_1C] eax +
fxam   +
fstsw  ax +
fstp  st +
test ah 1 +
jz loc_475370  +
test ah 4 +
jz loc_4753F0  +
mov [esp+48h+var_10] 3 +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
jmp loc_475384  +
test ah 4 +
jnz loc_4753D1  +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
mov [esp+48h+var_10] 0 +
and edx 8000h +
mov ebx [esp+48h+arg_18] +
mov [ebx] edx +
lea edx [esp+48h+var_C] +
mov [esp+48h+var_2C] edx +
mov edx [esp+48h+arg_14] +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset unk_483748 +
mov [esp+48h+var_30] edx +
mov edx [esp+48h+arg_10] +
mov [esp+48h+var_34] edx +
lea edx [esp+48h+var_10] +
mov [esp+48h+var_3C] edx +
lea edx [esp+48h+var_28] +
mov [esp+48h+var_40] edx +
call sub_479270  +
add esp 48h +
pop ebx  +
retn   +
test ah 40h +
jz loc_475400  +
mov [esp+48h+var_10] 2 +
movzx edx word ptr [esp+48h+var_20] +
mov eax 0FFFFBFC3h +
jmp loc_475384  +
mov [esp+48h+var_10] 4 +
xor eax eax +
xor edx edx +
jmp loc_47538A  +
movzx edx word ptr [esp+48h+var_20] +
mov [esp+48h+var_10] 1 +
mov eax edx +
and eax 7FFFh +
sub eax 403Eh +
jmp loc_475384  +
***
mov ecx [edx+4] +
test ch 40h +
jnz loc_475434  +
mov ebx [edx+20h] +
cmp [edx+24h] ebx +
jle loc_475444  +
and ch 20h +
jnz loc_475450  +
mov ebx [edx] +
mov ecx [edx+20h] +
mov [ebx+ecx] al +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_14] ecx +
call fputc  +
mov edx [esp+18h+var_C] +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
mov [esp+50h+var_38] eax +
lea ebp [esp+50h+var_20] +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov [esp+50h+var_4C] 0 +
mov [esp+50h+var_50] ebp +
call sub_47A7E0  +
mov eax [ebx+0Ch] +
test eax eax +
js loc_4754B7  +
cmp esi eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_475542  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_4754D1  +
test byte ptr [ebx+5] 4 +
jz loc_47554B  +
mov [esp+50h+var_34] esi +
mov eax [esp+50h+var_34] +
test eax eax +
jle loc_47552D  +
add [esp+50h+var_38] 2 +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+var_38] +
movzx eax word ptr [eax-2] +
mov [esp+50h+var_50] ebp +
mov [esp+50h+var_4C] eax +
call sub_47A7E0  +
test eax eax +
jle loc_47552D  +
lea esi [ebp+eax+0] +
mov edi ebp +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475420  +
cmp edi esi +
jnz loc_475508  +
sub [esp+50h+var_34] 1 +
jmp loc_4754D5  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_475521  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_4754D1  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_475551  +
jmp loc_4754D1  +
***
mov eax [ecx+0Ch] +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
test eax eax +
js loc_475585  +
cmp edx eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_475600  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_4755BA  +
test byte ptr [ebx+5] 4 +
jnz loc_4755BA  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_4755A1  +
test esi esi +
jz loc_4755EC  +
nop   +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475420  +
sub esi 1 +
jnz loc_4755C0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_4755F9  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4755E0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_4755BA  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
mov dword ptr [ecx+0Ch] 0FFFFFFFFh +
jz loc_475660  +
mov ebp [ecx+4] +
lea edi [esp+1Ch+var_10+1] +
mov byte ptr [esp+1Ch+var_10] 2Dh +
lea eax [esp+1Ch+var_10] +
and ebp 20h +
xor esi esi +
movzx ebx byte ptr [edx+esi] +
and ebx 0FFFFFFDFh +
or ebx ebp +
mov [edi+esi] bl +
add esi 1 +
cmp esi 3 +
jnz loc_475637  +
lea edx [edi+3] +
sub edx eax +
call sub_475570  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ecx+4] +
test ebp 100h +
jz loc_475680  +
mov byte ptr [esp+1Ch+var_10] 2Bh +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_475632  +
test ebp 40h +
jz loc_475697  +
mov byte ptr [esp+1Ch+var_10] 20h +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_475632  +
lea eax [esp+1Ch+var_10] +
mov edi eax +
jmp loc_475632  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov [ebp+var_30] eax +
mov [ebp+var_28] eax +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov [ebp+var_2C] edx +
mov [ebp+var_24] edx +
test eax eax +
cmovns ebx eax +
add ebx 17h +
test ch 10h +
mov [ebp+var_1C] eax +
jz loc_4756DA  +
cmp word ptr [edi+1Ch] 0 +
jnz loc_4758B0  +
mov eax [edi+8] +
cmp ebx eax +
cmovge eax ebx +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
test cl 80h +
lea eax [esp+48h+var_38] +
mov [ebp+var_20] eax +
jz loc_47570C  +
mov ebx [ebp+var_2C] +
test ebx ebx +
js loc_475920  +
and cl 7Fh +
mov [edi+4] ecx +
mov eax [ebp+var_28] +
mov edx [ebp+var_24] +
mov esi eax +
mov eax edx +
or eax esi +
jz loc_47594E  +
mov eax [ebp+var_20] +
mov [ebp+var_28] edi +
mov edi edx +
mov ebx eax +
lea ecx [ebx+1] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
mov [ebp+var_1C] ecx +
call sub_470950  +
add eax 30h +
mov [ebx] al +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
call sub_470840  +
mov ecx [ebp+var_1C] +
mov esi eax +
mov eax edx +
or eax esi +
mov edi edx +
jz loc_4757B4  +
cmp [ebp+var_20] ecx +
jz loc_4757A2  +
mov eax [ebp+var_28] +
test byte ptr [eax+5] 10h +
jz loc_4757A2  +
cmp word ptr [eax+1Ch] 0 +
jz loc_4757A2  +
mov eax ecx +
sub eax [ebp+var_20] +
cdq   +
shr edx 1Eh +
add eax edx +
and eax 3 +
sub eax edx +
cmp eax 3 +
jz loc_4757A6  +
mov ebx ecx +
jmp loc_475728  +
lea ecx [ebx+2] +
mov byte ptr [ebx+1] 2Ch +
mov ebx ecx +
jmp loc_475728  +
mov edi [ebp+var_28] +
mov ebx ecx +
mov eax [edi+0Ch] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov esi ebx +
test ecx ecx +
jle loc_4757E1  +
mov eax [ebp+var_20] +
sub eax ebx +
add eax ecx +
test eax eax +
jle loc_4757E1  +
lea esi [ebx+eax] +
add ebx 1 +
cmp ebx esi +
mov byte ptr [ebx-1] 30h +
jnz loc_4757D6  +
cmp esi [ebp+var_20] +
jz loc_475938  +
mov eax [edi+8] +
test eax eax +
jle loc_475849  +
mov edx [ebp+var_20] +
sub edx esi +
add edx eax +
mov eax [edi+4] +
test edx edx +
mov [edi+8] edx +
jle loc_47584C  +
test eax 1C0h +
jz loc_47580F  +
sub edx 1 +
mov [edi+8] edx +
mov edx [edi+0Ch] +
test edx edx +
js loc_4758D5  +
test ah 4 +
jnz loc_47584C  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_47584C  +
lea esi [esi+0] +
mov edx edi +
mov eax 20h +
call sub_475420  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475830  +
mov eax [edi+4] +
test al 80h +
jz loc_4758A1  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Dh +
cmp [ebp+var_20] ebx +
mov esi [ebp+var_20] +
jnb loc_47588C  +
nop   +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_475420  +
cmp ebx esi +
jnz loc_475860  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jle loc_475899  +
nop   +
mov edx edi +
mov eax 20h +
call sub_475420  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475880  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ah 1 +
jz loc_4758C7  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Bh +
jmp loc_475856  +
mov eax ebx +
mov edx 55555556h +
imul  edx +
mov eax ebx +
sar eax 1Fh +
sub edx eax +
add ebx edx +
jmp loc_4756DA  +
test al 40h +
mov ebx esi +
jz loc_475856  +
add ebx 1 +
mov byte ptr [esi] 20h +
jmp loc_475856  +
mov edx eax +
and edx 600h +
cmp edx 200h +
jnz loc_47581A  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_47584C  +
lea esi [esi+0] +
add esi 1 +
mov byte ptr [esi-1] 30h +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475900  +
jmp loc_475849  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
neg eax  +
adc edx 0 +
neg edx  +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
jmp loc_47570C  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_4757EA  +
mov byte ptr [esi] 30h +
add esi 1 +
jmp loc_4757EA  +
mov ebx [ebp+var_20] +
jmp loc_4757BF  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
cmp eax 6Fh +
mov [ebp+var_28] eax +
mov eax 18h +
mov [ebp+var_34] ecx +
mov ecx 12h +
cmovz ecx eax +
setnz al  +
movzx ebx al +
movzx eax al +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_0] +
lea ebx ds:7[ebx*8] +
mov [ebp+var_24] edx +
add [ebp+var_1C] 3 +
mov eax [eax+0Ch] +
mov edx eax +
mov [ebp+var_30] eax +
xor eax eax +
test edx edx +
cmovns eax edx +
add ecx eax +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
test ah 10h +
mov [ebp+var_38] eax +
jz loc_4759CD  +
mov eax [ebp+arg_0] +
cmp word ptr [eax+1Ch] 0 +
jnz loc_475BF1  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp ecx eax +
cmovl ecx eax +
mov [ebp+var_2C] eax +
lea eax [ecx+0Fh] +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
mov eax [ebp+var_34] +
or eax [ebp+var_24] +
mov [ebp+var_20] esp +
jz loc_475C50  +
movzx ecx byte ptr [ebp+var_28] +
mov eax esp +
and ecx 20h +
mov byte ptr [ebp+var_24] cl +
jmp loc_475A22  +
mov [eax-1] cl +
movzx ecx byte ptr [ebp+var_1C] +
xor edx edx +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
or ecx esi +
jz loc_475A40  +
mov edx esi +
add eax 1 +
and edx ebx +
lea ecx [edx+30h] +
cmp cl 39h +
jle loc_475A05  +
add edx 37h +
or dl byte ptr [ebp+var_24] +
mov [eax-1] dl +
jmp loc_475A08  +
cmp [ebp+var_20] eax +
jz loc_475C50  +
mov edi [ebp+var_30] +
test edi edi +
jle loc_475C08  +
mov ecx [ebp+var_20] +
sub ecx eax +
add ecx edi +
test ecx ecx +
jle loc_475C08  +
lea edi [eax+ecx] +
add eax 1 +
cmp eax edi +
mov byte ptr [eax-1] 30h +
jnz loc_475A66  +
cmp edi [ebp+var_20] +
jz loc_475C30  +
mov eax edi +
sub eax [ebp+var_20] +
cmp [ebp+var_2C] eax +
jle loc_475B32  +
mov esi [ebp+var_2C] +
sub esi eax +
mov eax [ebp+arg_0] +
test esi esi +
mov [eax+8] esi +
jle loc_475AB8  +
cmp [ebp+var_28] 6Fh +
jz loc_475AAA  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_475BA6  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
js loc_475BBD  +
lea eax [esi-1] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
cmp [ebp+var_28] 6Fh +
mov ebx eax +
jz loc_475AD6  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_475B90  +
test esi esi +
jle loc_475AE3  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 4 +
jz loc_475B50  +
cmp edi [ebp+var_20] +
jbe loc_475B0D  +
mov [ebp+var_1C] esi +
mov esi [ebp+var_20] +
mov [ebp+var_20] ebx +
mov ebx edi +
mov edi [ebp+arg_0] +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_475420  +
cmp ebx esi +
jnz loc_475AF6  +
mov esi [ebp+var_1C] +
mov ebx [ebp+var_20] +
test esi esi +
jle loc_475B2A  +
mov esi [ebp+arg_0] +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_475420  +
lea eax [ebx+1] +
test eax eax +
jg loc_475B14  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov esi 0FFFFFFFFh +
mov [ebp+var_1C] 0FFFFFFFEh +
mov dword ptr [eax+8] 0FFFFFFFFh +
jmp loc_475ABE  +
mov ebx [ebp+var_1C] +
mov esi eax +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_475420  +
lea eax [ebx+1] +
test eax eax +
jg loc_475B55  +
mov ebx [ebp+var_1C] +
xor eax eax +
test ebx ebx +
lea esi [ebx-1] +
cmovns eax ebx +
sub esi eax +
lea ebx [esi-1] +
jmp loc_475AE3  +
sub esi 3 +
mov [ebp+var_1C] esi +
mov esi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+var_28] +
add edi 2 +
mov byte ptr [edi-1] 30h +
mov ebx [ebp+var_1C] +
mov [edi-2] al +
jmp loc_475AD6  +
lea eax [esi-2] +
test eax eax +
jle loc_475B82  +
mov esi eax +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
jns loc_475AB8  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 600h +
cmp eax 200h +
jnz loc_475AB8  +
add esi edi +
add edi 1 +
cmp edi esi +
mov byte ptr [edi-1] 30h +
jnz loc_475BD5  +
mov [ebp+var_1C] 0FFFFFFFEh +
mov esi 0FFFFFFFFh +
jmp loc_475ABE  +
mov eax ecx +
mov edx 55555556h +
imul  edx +
mov eax ecx +
sar eax 1Fh +
sub edx eax +
add ecx edx +
jmp loc_4759CD  +
cmp [ebp+var_28] 6Fh +
mov edi eax +
jnz loc_475A71  +
mov esi [ebp+arg_0] +
test byte ptr [esi+5] 8 +
jz loc_475A71  +
add edi 1 +
mov byte ptr [eax] 30h +
jmp loc_475A71  +
mov eax [ebp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_475A7A  +
mov byte ptr [edi] 30h +
mov eax [eax+8] +
add edi 1 +
mov [ebp+var_2C] eax +
jmp loc_475A7A  +
mov eax [ebp+var_38] +
mov edi [ebp+arg_0] +
and ah 0F7h +
mov [edi+4] eax +
mov eax [ebp+var_20] +
jmp loc_475A49  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [eax+10h] 0FFFFFFFDh +
jz loc_475D05  +
movzx edx word ptr [eax+14h] +
test dx dx +
jz loc_475CE3  +
mov eax [ebx+10h] +
mov [ebp+var_2C] esp +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_470810  +
sub esp eax +
lea edi [esp+48h+var_38] +
lea eax [ebp+var_1C] +
mov [ebp+var_1C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edi +
call sub_47A7E0  +
test eax eax +
jle loc_475CF7  +
lea esi [edi+eax] +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475420  +
cmp edi esi +
jnz loc_475CC6  +
mov esp [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_475420  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_475420  +
jmp loc_475CD8  +
mov [ebp+var_1C] 0 +
call localeconv  +
lea edx [ebp+var_1C] +
mov eax [eax] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] 10h +
mov [esp+48h+var_44] eax +
lea eax [ebp-1Eh] +
mov [esp+48h+var_48] eax +
call sub_4749A0  +
test eax eax +
jle loc_475D45  +
movzx edx [ebp+var_1E] +
mov [ebx+14h] dx +
mov [ebx+10h] eax +
jmp loc_475C89  +
movzx edx word ptr [ebx+14h] +
jmp loc_475D3D  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test esi esi +
mov ebx [esp+28h+arg_0] +
mov ecx [ebx+8] +
jle loc_475FB0  +
cmp esi ecx +
jge loc_475E73  +
sub ecx esi +
mov [ebx+8] ecx +
test ecx ecx +
js loc_475E73  +
mov eax [ebx+0Ch] +
cmp eax ecx +
jge loc_475E73  +
sub ecx eax +
test ecx ecx +
mov [ebx+8] ecx +
jle loc_475E7F  +
test eax eax +
jle loc_476011  +
sub ecx 1 +
test esi esi +
mov [ebx+8] ecx +
jg loc_475E87  +
nop   +
test ecx ecx +
jle loc_475DD2  +
test ebp ebp +
jz loc_475F71  +
sub ecx 1 +
test ecx ecx +
mov [ebx+8] ecx +
jz loc_475DD2  +
mov eax [ebx+4] +
test ah 6 +
jz loc_475EF3  +
test ebp ebp +
jnz loc_475F08  +
mov eax [ebx+4] +
test ah 1 +
jnz loc_475FC5  +
test al 40h +
jnz loc_476000  +
mov edx [ebx+8] +
test edx edx +
jle loc_475E08  +
mov eax [ebx+4] +
and eax 600h +
cmp eax 200h +
jz loc_475FD6  +
lea eax [ebx+1Ch] +
test esi esi +
mov ebp 55555556h +
mov [esp+28h+var_1C] eax +
jle loc_475F20  +
lea esi [esi+0] +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_475E32  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_475420  +
sub esi 1 +
jz loc_475F2C  +
test byte ptr [ebx+5] 10h +
jz loc_475E20  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_475E20  +
mov eax esi +
imul  ebp +
mov eax esi +
sar eax 1Fh +
sub edx eax +
lea eax [edx+edx*2] +
cmp esi eax +
jnz loc_475E20  +
mov eax [esp+28h+var_1C] +
mov ecx ebx +
mov edx 1 +
call sub_475480  +
jmp loc_475E20  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov ecx 0FFFFFFFFh +
test esi esi +
jle loc_475DB0  +
test byte ptr [ebx+5] 10h +
jz loc_475DB0  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_475DB0  +
lea eax [esi+2] +
mov edx 55555556h +
mov [esp+28h+var_1C] eax +
imul  edx +
mov eax [esp+28h+var_1C] +
sar eax 1Fh +
sub edx eax +
cmp edx 1 +
jle loc_475DB0  +
test ecx ecx +
jle loc_475DD2  +
mov eax ecx +
sub eax edx +
add eax 1 +
jmp loc_475ED8  +
test ecx ecx +
jz loc_476025  +
sub ecx 1 +
cmp ecx eax +
jnz loc_475ED0  +
mov [ebx+8] ecx +
jmp loc_475DB0  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_475EE7  +
test ebp ebp +
jz loc_475DDA  +
mov edx ebx +
mov eax 2Dh +
call sub_475420  +
jmp loc_475DEE  +
mov edx ebx +
mov eax 30h +
call sub_475420  +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_475F84  +
mov eax ebx +
call sub_475C70  +
test esi esi +
mov eax [ebx+0Ch] +
jz loc_475F5F  +
jmp loc_475F92  +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_475F55  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_475420  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_475F43  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
test eax 1C0h +
jz loc_475DC9  +
jmp loc_475DBC  +
test byte ptr [ebx+5] 8 +
jnz loc_475F33  +
test esi esi +
lea esi [esi+0] +
jz loc_475F5F  +
add eax esi +
mov [ebx+0Ch] eax +
mov edx ebx +
mov eax 30h +
call sub_475420  +
add esi 1 +
js loc_475F97  +
jmp loc_475F5C  +
test ecx ecx +
jle loc_475D79  +
sub ecx 1 +
mov [ebx+8] ecx +
nop   +
jmp loc_475D81  +
mov edx ebx +
mov eax 2Bh +
call sub_475420  +
jmp loc_475DEE  +
sub edx 1 +
mov [ebx+8] edx +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_475FE0  +
jmp loc_475E08  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
jmp loc_475DEE  +
test byte ptr [ebx+5] 8 +
jz loc_475E7F  +
nop   +
lea esi [esi+0] +
jmp loc_475DA1  +
mov dword ptr [ebx+8] 0 +
jmp loc_475DD2  +
***
jmp sub_476040  +
***
push edi  +
mov ebp edx +
push esi  +
mov esi 1 +
push ebx  +
mov ebx 66666667h +
sub esp 1Ch +
mov [esp+28h+var_24] eax +
mov eax ecx +
mov edi [esp+28h+arg_0] +
sar eax 1Fh +
mov [esp+28h+var_1C] eax +
mov eax ecx +
imul  ebx +
mov [esp+28h+var_20] ecx +
sar ecx 1Fh +
sar edx 2 +
mov ebx edx +
sub ebx ecx +
jz loc_476093  +
mov ecx 66666667h +
mov eax ebx +
add esi 1 +
imul  ecx +
sar ebx 1Fh +
sar edx 2 +
sub edx ebx +
mov ebx edx +
jnz loc_476080  +
mov eax [edi+28h] +
mov edx [edi+8] +
cmp esi eax +
cmovl esi eax +
lea eax [esi+2] +
cmp edx eax +
jg loc_476100  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov eax [esp+28h+var_24] +
mov ecx 1 +
mov edx ebp +
mov [esp+28h+var_28] edi +
add esi 1 +
call sub_475D50  +
mov eax [edi+28h] +
mov [edi+0Ch] eax +
mov eax [edi+4] +
mov edx eax +
and eax 20h +
or edx 1C0h +
or eax 45h +
mov [edi+4] edx +
mov edx edi +
call sub_475420  +
mov eax [esp+28h+var_20] +
mov ecx edi +
add [edi+8] esi +
mov edx [esp+28h+var_1C] +
call sub_4756A0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edx eax +
mov [edi+8] edx +
jmp loc_4760AC  +
***
mov ebx eax +
sub esp 44h +
mov eax [eax+0Ch] +
test eax eax +
js loc_476190  +
add eax 1 +
fld  [esp+44h+arg_0] +
mov [esp+44h+var_34] eax +
lea edx [esp+44h+var_1C] +
fstp  [esp+44h+var_14] +
mov eax dword ptr [esp+44h+var_14] +
mov [esp+44h+var_2C] edx +
lea edx [esp+44h+var_18] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_44] eax +
mov eax dword ptr [esp+44h+var_14+4] +
mov [esp+44h+var_40] eax +
mov eax dword ptr [esp+44h+var_14+8] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_8] +
mov [esp+44h+var_38] eax +
mov eax 2 +
call sub_475320  +
mov ecx [esp+44h+var_18] +
cmp ecx 0FFFF8000h +
mov esi eax +
jz loc_4761A0  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_44] ebx +
call sub_476040  +
mov [esp+44h+var_44] esi +
call sub_47A9D0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 7 +
jmp loc_476121  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov ecx ebx +
call sub_475610  +
mov [esp+44h+var_44] esi +
call sub_47A9D0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_476270  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 3 +
call sub_475320  +
mov ecx [esp+40h+var_14] +
cmp ecx 0FFFF8000h +
mov edi eax +
jz loc_476281  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_40] ebx +
call sub_475D50  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_47625A  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_476241  +
mov [esp+40h+var_40] edi +
call sub_47A9D0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_4761D3  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_475610  +
mov [esp+40h+var_40] edi +
call sub_47A9D0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_4763D0  +
jz loc_4763B3  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 2 +
call sub_475320  +
mov esi [esp+40h+var_14] +
cmp esi 0FFFF8000h +
mov edi eax +
jz loc_4763F0  +
cmp esi 0FFFFFFFDh +
jl loc_476380  +
mov eax [ebx+0Ch] +
cmp esi eax +
jg loc_476380  +
test byte ptr [ebx+5] 8 +
jnz loc_4763E1  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax esi +
test eax eax +
mov [ebx+0Ch] eax +
js loc_476400  +
mov eax [esp+40h+var_18] +
mov edx edi +
mov ecx esi +
mov [esp+40h+var_40] ebx +
call sub_475D50  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_4763A4  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_476358  +
mov [esp+40h+var_40] edi +
call sub_47A9D0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test byte ptr [ebx+5] 8 +
jnz loc_4763C4  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+40h+var_18] +
mov ecx esi +
mov edx edi +
mov [esp+40h+var_40] ebx +
call sub_476040  +
mov [esp+40h+var_40] edi +
call sub_47A9D0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 1 +
mov eax 1 +
jmp loc_4762B9  +
sub dword ptr [ebx+0Ch] 1 +
jmp loc_476394  +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_4762B9  +
sub eax esi +
mov [ebx+0Ch] eax +
jmp loc_47633B  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_475610  +
jmp loc_4763A4  +
mov edx [ebx+8] +
test edx edx +
jle loc_47633B  +
add eax edx +
mov [ebx+8] eax +
jmp loc_47633B  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
fld  [esp+5Ch+arg_0] +
fld  st +
fstp  tbyte ptr [esp+5Ch+var_36+2] +
fxam   +
fstsw  ax +
and ax 4500h +
cmp ax 100h +
jz loc_4768B5  +
movzx edx word ptr [esp+30h] +
mov esi edx +
and esi 8000h +
jnz loc_476601  +
fxam   +
fstsw  ax +
fstp  st +
and ax 4500h +
cmp ax 500h +
jz loc_4768C7  +
and dx 7FFFh +
jz loc_476696  +
mov esi [esp+5Ch+var_36+2] +
lea eax [edx-3FFFh] +
mov edi [esp+2Ch] +
mov edx [ebx+0Ch] +
cmp edx 0Eh +
jbe loc_476616  +
mov ecx edi +
or ecx esi +
jz loc_4768DA  +
lea ecx [esp+5Ch+var_24] +
mov ebp ebx +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_54] ecx +
nop   +
lea esi [esi+0] +
mov ecx esi +
and ecx 0Fh +
cmp ecx esi +
jz loc_4766F0  +
mov edx [ebp+0Ch] +
test edx edx +
jle loc_4764CA  +
sub edx 1 +
mov [ebp+0Ch] edx +
mov edx [esp+5Ch+var_54] +
shrd esi edi +
shr edi 4 +
test ecx ecx +
jz loc_4766D0  +
lea ebx [edx+1] +
cmp ecx 9 +
mov [esp+5Ch+var_54] ebx +
jle loc_4766E4  +
movzx ebx byte ptr [ebp+4] +
add ecx 37h +
and ebx 20h +
or ecx ebx +
mov [edx] cl +
mov ecx edi +
or ecx esi +
jnz loc_4764B0  +
mov ebx ebp +
mov ebp [esp+5Ch+var_54] +
cmp ebp [esp+5Ch+var_48] +
jz loc_47690B  +
mov edi [ebx+4] +
mov [esp+5Ch+var_54] edi +
mov edi [ebx+8] +
test edi edi +
mov [esp+5Ch+var_44] edi +
jle loc_476869  +
cwde   +
mov edx ebp +
mov esi eax +
mov eax [ebx+0Ch] +
sub edx [esp+5Ch+var_48] +
mov [esp+5Ch+var_40] esi +
test eax eax +
lea ecx [edx+eax] +
mov eax [esp+5Ch+var_54] +
cmovg edx ecx +
and eax 1C0h +
cmp eax 1 +
sbb eax eax +
lea edi [edx+eax+6] +
mov eax esi +
mov edx 66666667h +
imul  edx +
mov eax esi +
sar eax 1Fh +
sar edx 2 +
mov ecx edx +
sub ecx eax +
jz loc_476901  +
mov esi 2 +
mov eax 66666667h +
add edi 1 +
imul  ecx +
add esi 1 +
sar ecx 1Fh +
sar edx 2 +
sub edx ecx +
mov ecx edx +
jnz loc_476571  +
movsx esi si +
cmp [esp+5Ch+var_44] edi +
jle loc_476750  +
mov eax [esp+5Ch+var_44] +
sub eax edi +
test [esp+5Ch+var_54] 600h +
jnz loc_476883  +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_476757  +
lea esi [esi+0] +
mov edx ebx +
mov eax 20h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4765C0  +
mov eax [ebx+4] +
mov [esp+5Ch+var_54] eax +
test byte ptr [esp+5Ch+var_54] 80h +
jz loc_476762  +
nop   +
lea esi [esi+0] +
mov edx ebx +
mov eax 2Dh +
call sub_475420  +
jmp loc_47677B  +
or dword ptr [ebx+4] 80h +
jmp loc_476459  +
shld edi esi +
add esi esi +
test edi edi +
jns loc_476610  +
mov ecx 0Eh +
xor ebp ebp +
shrd esi edi +
sub ecx edx +
shr edi 1 +
mov [esp+5Ch+var_50] edi +
shl ecx 2 +
mov edi 4 +
mov [esp+5Ch+var_54] esi +
shld ebp edi +
xor esi esi +
shl edi cl +
test cl 20h +
cmovnz ebp edi +
cmovnz edi esi +
add [esp+5Ch+var_54] edi +
adc [esp+5Ch+var_50] ebp +
mov ebp [esp+5Ch+var_50] +
mov edi [esp+5Ch+var_54] +
test ebp ebp +
js loc_4768AD  +
shld ebp edi +
add edi edi +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_50] ebp +
mov edi [esp+5Ch+var_50] +
mov ecx 0Fh +
xor ebp ebp +
mov esi [esp+5Ch+var_54] +
sub ecx edx +
shl ecx 2 +
shrd esi edi +
shr edi cl +
and ecx 20h +
cmovnz esi edi +
cmovnz edi ebp +
jmp loc_47649D  +
mov edi [esp+2Ch] +
mov esi [esp+5Ch+var_36+2] +
mov eax edi +
or eax esi +
jz loc_476878  +
test edi edi +
js loc_476910  +
mov edx 0FFFFC001h +
shld edi esi +
mov eax edx +
add esi esi +
sub edx 1 +
test edi edi +
jns loc_4766B5  +
jmp loc_476487  +
cmp edx [esp+5Ch+var_48] +
ja loc_4766DD  +
mov ebx [ebp+0Ch] +
test ebx ebx +
js loc_476745  +
lea ebx [edx+1] +
mov [esp+5Ch+var_54] ebx +
add ecx 30h +
jmp loc_4764F9  +
mov edx [esp+5Ch+var_48] +
cmp [esp+5Ch+var_54] edx +
ja loc_476710  +
test byte ptr [ebp+5] 8 +
jnz loc_476710  +
mov ebx [ebp+0Ch] +
mov edx [esp+5Ch+var_54] +
test ebx ebx +
jle loc_47671A  +
nop   +
lea esi [esi+0] +
mov ebx [esp+5Ch+var_54] +
lea edx [ebx+1] +
mov byte ptr [ebx] 2Eh +
cmp edi 0 +
ja loc_476724  +
cmp esi 1 +
jbe loc_47673C  +
lea ebx [eax-1] +
shrd esi edi +
mov eax ebx +
shr edi 1 +
cmp edi 0 +
lea ebx [eax-1] +
ja loc_476727  +
cmp esi 1 +
ja loc_476727  +
xor esi esi +
xor edi edi +
jmp loc_4764D5  +
mov [esp+5Ch+var_54] edx +
jmp loc_4764FB  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
test byte ptr [esp+5Ch+var_54] 80h +
jnz loc_4765F0  +
test [esp+5Ch+var_54] 100h +
jnz loc_47688B  +
test byte ptr [esp+5Ch+var_54] 40h +
jnz loc_47689C  +
mov edx ebx +
mov eax 30h +
call sub_475420  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 58h +
call sub_475420  +
mov eax [ebx+8] +
test eax eax +
jle loc_4767C9  +
test byte ptr [ebx+5] 2 +
jz loc_4767C9  +
sub eax 1 +
mov [ebx+8] eax +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_475420  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4767B0  +
cmp ebp [esp+5Ch+var_48] +
mov edi [esp+5Ch+var_48] +
ja loc_4767F7  +
jmp loc_47681E  +
movzx eax word ptr [ebx+1Ch] +
test ax ax +
mov word ptr [esp+5Ch+var_36] ax +
jz loc_4767F3  +
mov ecx ebx +
mov edx 1 +
lea eax [esp+5Ch+var_36] +
call sub_475480  +
cmp ebp edi +
jz loc_47681E  +
sub ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp eax 2Eh +
jz loc_476860  +
cmp eax 2Ch +
jz loc_4767D5  +
mov edx ebx +
call sub_475420  +
nop   +
jmp loc_4767F3  +
mov edx ebx +
mov eax 30h +
call sub_475420  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_476812  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 50h +
call sub_475420  +
mov eax [esp+5Ch+var_40] +
mov ecx ebx +
add [ebx+8] esi +
or dword ptr [ebx+4] 1C0h +
cdq   +
call sub_4756A0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_475C70  +
jmp loc_4767F3  +
cwde   +
mov esi 2 +
mov [esp+5Ch+var_40] eax +
jmp loc_476757  +
xor eax eax +
xor esi esi +
xor edi edi +
jmp loc_476487  +
mov [ebx+8] eax +
jmp loc_476757  +
mov edx ebx +
mov eax 2Bh +
call sub_475420  +
jmp loc_47677B  +
mov edx ebx +
mov eax 20h +
call sub_475420  +
jmp loc_47677B  +
add eax 1 +
jmp loc_47666F  +
fstp  st +
mov ecx ebx +
mov edx offset unk_4D4FB4 +
xor eax eax +
call sub_475610  +
jmp loc_476851  +
mov ecx ebx +
mov edx offset unk_4D4FB8 +
mov eax esi +
call sub_475610  +
jmp loc_476851  +
lea edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_48] edi +
mov edi [ebx+4] +
test edx edx +
mov [esp+5Ch+var_54] edi +
jle loc_47691A  +
mov byte ptr [esp+5Ch+var_24] 2Eh +
lea edx [esp+5Ch+var_24+1] +
lea ebp [edx+1] +
mov byte ptr [edx] 30h +
jmp loc_476518  +
mov esi 2 +
jmp loc_47658D  +
mov edx [ebx+0Ch] +
jmp loc_4768E2  +
mov eax 0FFFFC002h +
jmp loc_476487  +
and edi 800h +
mov edx [esp+5Ch+var_48] +
jz loc_4768F6  +
jmp loc_4768ED  +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+10h] +
lea edx [esi+14h] +
lea ebx [edx+edi*4] +
jmp loc_477343  +
add edx 4 +
cmp ebx edx +
mov dword ptr [edx-4] 0 +
jbe loc_477358  +
mov ecx [edx] +
cmp ecx 0FFFFFFFFh +
jz loc_477335  +
add ecx 1 +
mov eax esi +
mov [edx] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [esi+8] +
jge loc_477374  +
lea eax [edi+1] +
mov [esi+10h] eax +
mov eax esi +
mov dword ptr [esi+edi*4+14h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+4] +
add eax 1 +
mov [esp+10h+var_10] eax +
call sub_47AD00  +
mov edx [esi+10h] +
lea ecx ds:8[edx*4] +
lea edx [esi+0Ch] +
mov ebx eax +
lea eax [eax+0Ch] +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov [esp+10h+var_10] esi +
mov esi ebx +
call sub_47ADD0  +
mov edi [ebx+10h] +
jmp loc_47735D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
fld  qword ptr [eax] +
lea eax [esp+48h+var_20] +
mov [esp+48h+var_3C] eax +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_40] eax +
fstp  [esp+48h+var_48] +
mov [esp+48h+var_38] ecx +
call sub_47B610  +
mov esi [esp+48h+var_20] +
mov edi [ebp+0] +
sub esi edi +
mov ebx eax +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_20] esi +
add eax esi +
test esi esi +
mov [esp+48h+var_1C] eax +
jle loc_4775A5  +
cmp edi 35h +
jz loc_4775C2  +
cmp [esp+48h+arg_8] 1 +
jz loc_477460  +
cmp [esp+48h+arg_8] 2 +
jz loc_477442  +
mov ecx esi +
sub ecx 1 +
jnz loc_477450  +
mov edx [esp+48h+arg_4] +
xor eax eax +
test edx edx +
jz loc_47755B  +
test byte ptr [ebx+14h] 2 +
mov [esp+48h+var_34] 0 +
jz loc_477468  +
mov [esp+48h+var_34] 1 +
jmp loc_477468  +
mov eax ecx +
sar eax 5 +
mov eax [ebx+eax*4+14h] +
shr eax cl +
test al 1 +
jnz loc_477442  +
nop   +
mov [esp+48h+var_34] 0 +
mov dword ptr [esp+48h+var_48+4] esi +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47B980  +
mov dword ptr [esp+48h+var_48] ebx +
cmp eax 1 +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_20] +
sbb esi esi +
not esi  +
and esi 10h +
mov dword ptr [esp+48h+var_48+4] eax +
call sub_47BA00  +
mov eax [esp+48h+var_34] +
test eax eax +
jnz loc_4775E0  +
mov eax [esp+48h+var_1C] +
mov ecx [ebp+4] +
cmp ecx eax +
jle loc_477573  +
mov edx ecx +
sub edx eax +
cmp edi edx +
mov [esp+48h+var_1C] ecx +
jl loc_477521  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_477521  +
mov eax [esp+48h+var_30] +
lea ecx [edx-1] +
test eax eax +
setz al  +
test ecx ecx +
jg loc_477673  +
test al al +
jz loc_4774E2  +
mov ebp [esp+48h+arg_4] +
xor eax eax +
test ebp ebp +
jz loc_47755B  +
mov ebp 1 +
shl ebp cl +
sar ecx 5 +
and ebp [ebx+ecx*4+14h] +
mov dword ptr [esp+48h+var_48+4] edx +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47BA00  +
mov eax [esp+48h+arg_C] +
test ebp ebp +
mov dword ptr [eax] 2 +
jnz loc_4776A5  +
mov edx [esp+48h+var_30] +
mov eax [esp+48h+var_1C] +
test edx edx +
jz loc_477536  +
mov esi 50h +
jmp loc_477536  +
mov eax [esp+48h+arg_C] +
xor esi esi +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [eax] 50h +
mov eax ecx +
mov edx [esp+48h+var_38] +
mov [edx] eax +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_40] ebx +
mov dword ptr [esp+48h+var_48+4] edi +
mov dword ptr [esp+48h+var_48] eax +
call sub_47B910  +
mov eax [esp+48h+arg_C] +
or [eax] esi +
mov eax 1 +
mov dword ptr [esp+48h+var_48] ebx +
mov [esp+48h+var_38] eax +
call sub_47ADD0  +
mov eax [esp+48h+var_38] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+8] +
cmp edx eax +
jge loc_477536  +
mov eax [esp+48h+arg_C] +
add edx 1 +
xor esi esi +
mov [esp+48h+var_1C] edx +
mov dword ptr [eax] 0A3h +
call _errno  +
mov dword ptr [eax] 22h +
mov eax [esp+48h+var_1C] +
mov dword ptr [ebx+10h] 0 +
jmp loc_477536  +
mov edx [esp+48h+arg_4] +
test edx edx +
jz loc_4775D7  +
test esi esi +
jnz loc_477642  +
mov [esp+48h+var_30] 0 +
jmp loc_4774A2  +
mov ecx [esp+48h+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_47755B  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_47755B  +
jmp loc_477460  +
xor eax eax +
jmp loc_47755B  +
mov dword ptr [esp+48h+var_48] ebx +
call sub_477320  +
mov ecx edi +
and ecx 1Fh +
mov ebx eax +
jz loc_4775FA  +
mov eax 20h +
sub eax ecx +
mov ecx eax +
mov eax [ebx+10h] +
bsr eax [ebx+eax*4+10h] +
xor eax 1Fh +
cmp ecx eax +
jz loc_477665  +
mov eax [esp+48h+var_30] +
test eax eax +
jnz loc_47761D  +
mov eax [ebx+14h] +
mov [esp+48h+var_30] eax +
and [esp+48h+var_30] 1 +
mov dword ptr [esp+48h+var_48+4] 1 +
mov esi 20h +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47BA00  +
mov eax [esp+48h+var_1C] +
add eax 1 +
mov [esp+48h+var_1C] eax +
jmp loc_4774A2  +
neg esi  +
mov dword ptr [esp+48h+var_48+4] esi +
xor esi esi +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47B240  +
mov [esp+48h+var_30] 0 +
mov ebx eax +
mov eax [esp+48h+var_1C] +
jmp loc_4774A2  +
mov eax [esp+48h+var_1C] +
mov esi 20h +
jmp loc_4774A2  +
test al al +
jz loc_4774E2  +
mov dword ptr [esp+48h+var_48+4] ecx +
mov dword ptr [esp+48h+var_48] ebx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_34] ecx +
call sub_47B980  +
mov edx [esp+48h+var_2C] +
mov ecx [esp+48h+var_34] +
test eax eax +
mov [esp+48h+var_30] eax +
setz al  +
jmp loc_4774D4  +
mov dword ptr [esp+48h+var_48] ebx +
mov esi 60h +
call sub_477320  +
mov ebx eax +
mov eax [esp+48h+var_1C] +
jmp loc_477536  +
***
mov edx [esp+4] +
lea eax [edx+14h] +
mov edx [edx+10h] +
lea ecx [eax+edx*4] +
jmp loc_4776DE  +
add eax 4 +
cmp ecx eax +
mov dword ptr [eax-4] 0FFFFFFFFh +
jbe locret_4776F0  +
mov edx [eax] +
test edx edx +
jz loc_4776D0  +
sub edx 1 +
mov [eax] edx +
retn   +
***
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
lea ebx [esi+1Fh] +
sar ebx 5 +
cmp ebx [eax+4] +
jg loc_477763  +
mov edx esi +
and esi 1Fh +
sar edx 5 +
cmp esi 1 +
sbb edx 0FFFFFFFFh +
lea ebx [eax+14h] +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
mov [eax+10h] edx +
jnb loc_47774F  +
mov edx ebx +
add edx 4 +
cmp ecx edx +
mov dword ptr [edx-4] 0FFFFFFFFh +
ja loc_477735  +
sub ecx eax +
lea edx [ecx-15h] +
shr edx 2 +
lea ebx [ebx+edx*4+4] +
test esi esi +
jz loc_47775D  +
mov ecx 20h +
sub ecx esi +
shr dword ptr [ebx-4] cl +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] eax +
call sub_47ADD0  +
mov [esp+14h+var_14] ebx +
call sub_47AD00  +
jmp loc_477718  +
***
push esi  +
push ebx  +
sub esp 0CCh +
call localeconv  +
mov esi [eax] +
mov dword ptr [esp+0CCh+var_CC] esi +
call strlen  +
mov [esp+0CCh+var_28] 0 +
mov [esp+0CCh+var_18] 0 +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+arg_8] +
fldz   +
fstp  [esp+0CCh+var_14] +
mov eax [eax] +
mov [esp+0CCh+var_A0] eax +
mov eax [esp+0CCh+arg_0] +
mov ecx eax +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx] +
cmp dl 2Dh +
ja loc_477940  +
movzx eax dl +
jmp ds:off_4D516C[eax*4]  +
mov eax [esp+0CCh+arg_0] +
xor ecx ecx +
mov [esp+0CCh+var_28] 6 +
mov [esp+0CCh+var_90] 0 +
mov [esp+0CCh+var_1C] eax +
mov edx [esp+0CCh+arg_4] +
test edx edx +
jz loc_47782E  +
mov eax [esp+0CCh+var_1C] +
mov esi [esp+0CCh+arg_4] +
mov [esi] eax +
mov eax [esp+0CCh+var_90] +
test eax eax +
jnz loc_477876  +
test ecx ecx +
jz loc_477864  +
mov eax [esp+0CCh+var_A0] +
mov [esp+0CCh+var_C4] ecx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+arg_10] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B910  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+var_28] +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or [esp+0CCh+var_28] 8 +
jmp loc_477836  +
mov [esp+0CCh+var_90] 0 +
lea eax [ecx+1] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx+1] +
test dl dl +
jz loc_4777F0  +
mov ecx eax +
cmp dl 30h +
mov [esp+0CCh+var_A4] ecx +
mov [esp+0CCh+var_94] 0 +
jz loc_477ED2  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+10h] +
mov [esp+0CCh+var_54] eax +
lea eax [edx-30h] +
cmp al 9 +
ja loc_478D63  +
mov eax [esp+0CCh+var_A4] +
xor edi edi +
xor ebp ebp +
mov [esp+0CCh+var_AC] esi +
xor ebx ebx +
mov esi edi +
add eax 1 +
jmp loc_477905  +
lea ecx [ebp+ebp*4+0] +
lea ebp [edx+ecx*2-30h] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
add ebx 1 +
mov edi eax +
add eax 1 +
lea ecx [edx-30h] +
cmp cl 9 +
ja loc_477950  +
cmp ebx 8 +
jle loc_4778E3  +
cmp ebx 0Fh +
jg loc_4778EB  +
lea ecx [esi+esi*4] +
lea esi [edx+ecx*2-30h] +
jmp loc_4778EB  +
mov [esp+0CCh+var_90] 1 +
jmp loc_477888  +
add ecx 1 +
mov [esp+0CCh+var_1C] ecx +
movsx edx byte ptr [ecx] +
cmp dl 2Dh +
jbe loc_4777E5  +
nop   +
lea esi [esi+0] +
mov [esp+0CCh+var_90] 0 +
jmp loc_4778A0  +
mov dword ptr [esp+0CCh+var_8C] esi +
mov esi [esp+0CCh+var_AC] +
mov ecx edi +
movsx eax byte ptr [esi] +
cmp eax edx +
mov dword ptr [esp+0CCh+var_9C] eax +
jz loc_477F20  +
mov [esp+0CCh+var_AC] ebx +
xor edi edi +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 0 +
mov eax edx +
and eax 0FFFFFFDFh +
cmp eax 45h +
jnz loc_477AA5  +
mov eax [esp+0CCh+var_AC] +
or eax edi +
or eax [esp+0CCh+var_94] +
jz loc_477BA0  +
mov eax [esp+0CCh+var_1C] +
mov [esp+0CCh+arg_0] eax +
add eax 1 +
mov [esp+0CCh+var_1C] eax +
mov eax [esp+0CCh+arg_0] +
movsx edx byte ptr [eax+1] +
cmp dl 2Bh +
jz loc_478D00  +
cmp dl 2Dh +
jz loc_4780C4  +
mov [esp+0CCh+var_80] 0 +
lea eax [edx-30h] +
cmp eax 9 +
ja loc_4781F0  +
cmp edx 30h +
jnz loc_477A07  +
mov eax [esp+0CCh+var_1C] +
add eax 1 +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
add eax 1 +
cmp edx 30h +
jz loc_4779F5  +
lea ecx [edx-31h] +
xor eax eax +
cmp ecx 8 +
ja loc_477AA7  +
mov eax [esp+0CCh+var_1C] +
lea ecx [edx-30h] +
lea esi [eax+1] +
mov [esp+0CCh+var_1C] esi +
mov [esp+0CCh+var_78] eax +
mov [esp+0CCh+var_7C] esi +
mov esi eax +
movzx eax byte ptr [eax+1] +
movsx edx al +
sub eax 30h +
cmp al 9 +
ja loc_477A7B  +
mov eax esi +
mov esi edx +
add eax 2 +
mov [esp+0CCh+var_74] edi +
lea esi [esi+0] +
lea edx [ecx+ecx*4] +
mov edi eax +
lea ecx [esi+edx*2-30h] +
mov [esp+0CCh+var_1C] eax +
movzx edx byte ptr [eax] +
add eax 1 +
movsx esi dl +
sub edx 30h +
cmp dl 9 +
jbe loc_477A50  +
mov [esp+0CCh+var_7C] edi +
mov edi [esp+0CCh+var_74] +
mov edx esi +
mov esi [esp+0CCh+var_7C] +
mov eax 4E1Fh +
sub esi [esp+0CCh+var_78] +
cmp esi 8 +
jg loc_477A96  +
cmp ecx 4E1Fh +
cmovle eax ecx +
mov esi [esp+0CCh+var_80] +
mov ecx eax +
neg ecx  +
test esi esi +
cmovnz eax ecx +
jmp loc_477AA7  +
xor eax eax +
mov ecx [esp+0CCh+var_AC] +
test ecx ecx +
jnz loc_477BE6  +
mov eax [esp+0CCh+var_94] +
or eax edi +
jnz loc_477BDA  +
mov eax [esp+0CCh+var_84] +
test eax eax +
jnz loc_477BA0  +
cmp edx 4Eh +
jz loc_477AE8  +
jle loc_477B94  +
cmp edx 69h +
jz loc_478E38  +
cmp edx 6Eh +
jnz loc_477BA0  +
lea ebx [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC+4] offset aAn +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47B8C0  +
test eax eax +
jz loc_477BA0  +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+arg_C] +
mov edx [esp+0CCh+var_1C] +
mov [esp+0CCh+var_28] 4 +
mov eax [eax+8] +
mov [esp+0CCh+var_94] 0 +
mov [esp+0CCh+var_AC] eax +
add eax 1 +
mov [esi] eax +
cmp byte ptr [edx] 28h +
jz loc_4791D8  +
mov esi [esp+0CCh+arg_C] +
mov [esi] eax +
mov ecx [esp+0CCh+var_18] +
mov edi [esp+0CCh+var_94] +
test edi edi +
jz loc_477813  +
mov esi [esp+0CCh+var_54] +
test esi esi +
jnz loc_4781C0  +
mov edx [esp+0CCh+var_28] +
xor eax eax +
mov ebx [ecx+10h] +
and edx 0FFFFFFF8h +
test ebx ebx +
setnle al  +
add eax eax +
or eax edx +
test al 30h +
jnz loc_477BC5  +
mov [esp+0CCh+var_28] eax +
jmp loc_477813  +
cmp edx 49h +
jz loc_478E38  +
lea esi [esi+0] +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_28] 6 +
mov ecx [esp+0CCh+var_18] +
mov [esp+0CCh+var_1C] eax +
jmp loc_477813  +
or eax 40h +
mov [esp+0CCh+var_28] eax +
call _errno  +
mov dword ptr [eax] 22h +
mov ecx [esp+0CCh+var_18] +
jmp loc_477813  +
sub eax dword ptr [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_90] +
mov [esp+0CCh+var_28] 1 +
mov [esp+0CCh+var_74] eax +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+0Ch] +
and eax 3 +
mov esi eax +
sub esi edi +
cmp eax 2 +
mov [esp+0CCh+var_64] esi +
jz loc_477C31  +
mov esi edi +
add esi 1 +
cmp eax 3 +
mov [esp+0CCh+var_64] esi +
jz loc_477C31  +
test eax eax +
setz al  +
movzx eax al +
mov [esp+0CCh+var_64] eax +
mov eax [esp+0CCh+var_AC] +
test ebx ebx +
mov esi 10h +
mov dword ptr [esp+0CCh+var_4C] ebp +
cmovz ebx eax +
cmp eax 10h +
cmovle esi eax +
xor edx edx +
mov dword ptr [esp+0CCh+var_4C+4] edx +
cmp esi 9 +
fild  [esp+0CCh+var_4C] +
fst  [esp+0CCh+var_14] +
jle loc_477C95  +
fmul  ds:dbl_4D5318[esi*8] +
xor edx edx +
mov eax dword ptr [esp+0CCh+var_8C] +
mov dword ptr [esp+0CCh+var_4C+4] edx +
mov dword ptr [esp+0CCh+var_4C] eax +
fild  [esp+0CCh+var_4C] +
faddp st(1) st +
fstp  [esp+0CCh+var_14] +
jmp loc_477C97  +
fstp  st +
cmp [esp+0CCh+var_AC] 0Fh +
jg loc_477CA9  +
cmp [esp+0CCh+var_A0] 35h +
jle loc_477E23  +
mov eax [esp+0CCh+var_74] +
mov edx [esp+0CCh+var_AC] +
sub edx esi +
add eax edx +
cmp eax 0 +
jle loc_478C19  +
mov edx eax +
and edx 0Fh +
jz loc_477CDA  +
fld  [esp+0CCh+var_14] +
fmul  ds:dbl_4D5360[edx*8] +
fstp  [esp+0CCh+var_14] +
and eax 0FFFFFFF0h +
jnz loc_478006  +
fld  [esp+0CCh+var_14] +
xor esi esi +
lea eax [esp+0CCh+var_24] +
mov [esp+0CCh+var_C0] eax +
lea eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_C4] eax +
fstp  [esp+0CCh+var_CC] +
call sub_47B610  +
mov ecx [esp+0CCh+var_24] +
add esi [esp+0CCh+var_20] +
mov edi [esp+0CCh+var_A0] +
mov edx esi +
mov [esp+0CCh+var_20] esi +
mov esi ecx +
sub esi edi +
test esi esi +
mov [esp+0CCh+var_18] eax +
jle loc_477D59  +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BA00  +
mov ecx edi +
add esi [esp+0CCh+var_20] +
mov [esp+0CCh+var_24] edi +
mov edx esi +
mov [esp+0CCh+var_20] esi +
lea eax [ecx+edx] +
mov [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+var_A0] +
sub [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+var_60] +
mov eax [eax+8] +
mov [esp+0CCh+var_94] eax +
add eax 1 +
cmp esi eax +
jg loc_478B34  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+4] +
cmp esi eax +
mov [esp+0CCh+var_84] eax +
jge loc_478D36  +
mov esi edx +
sub esi eax +
cmp esi 0 +
jle loc_478148  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
add [esp+0CCh+var_24] esi +
mov [esp+0CCh+var_18] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_20] eax +
mov eax [esp+0CCh+var_54] +
test eax eax +
jz loc_478205  +
mov eax [esp+0CCh+var_60] +
add eax 1 +
cmp [esp+0CCh+var_84] eax +
jle loc_478205  +
mov ecx [esp+0CCh+var_18] +
mov eax [esp+0CCh+arg_C] +
mov ebx [esp+0CCh+var_84] +
mov [esp+0CCh+var_28] 50h +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov [eax] ebx +
jmp loc_477B60  +
cmp [esp+0CCh+var_74] 0 +
jz loc_478D43  +
jle loc_478179  +
cmp [esp+0CCh+var_74] 16h +
jg loc_478D78  +
mov eax [esp+0CCh+var_74] +
mov edx ds:dword_4D5240[eax*4] +
mov eax dword ptr [esp+0CCh+var_14] +
test eax eax +
jz loc_478F70  +
bsf ecx eax +
mov eax 35h +
sub eax ecx +
mov edi [esp+0CCh+var_74] +
add eax edx +
fld  [esp+0CCh+var_14] +
cmp eax 35h +
setle al  +
lea ecx [esp+0CCh+var_28] +
movzx eax al +
fmul  ds:dbl_4D5360[edi*8] +
mov edi [esp+0CCh+var_64] +
mov [esp+0CCh+var_C0] ecx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov [esp+0CCh+var_C4] edi +
fstp  [esp+0CCh+var_14] +
mov eax [esp+0CCh+arg_10] +
mov ecx [esp+0CCh+arg_C] +
mov edx [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC] eax +
lea eax [esp+0CCh+var_14] +
call sub_4773C0  +
test eax eax +
jnz loc_477BDA  +
xor eax eax +
jmp loc_477CAD  +
movzx eax byte ptr [ecx+1] +
cmp al 58h +
jz loc_478B72  +
add ecx 1 +
cmp al 78h +
jz loc_478B72  +
lea esi [esi+0] +
mov eax ecx +
mov [esp+0CCh+var_1C] ecx +
add ecx 1 +
movsx edx byte ptr [ecx-1] +
cmp dl 30h +
jz loc_477EF0  +
xor ecx ecx +
test dl dl +
jz loc_477813  +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_94] 1 +
jmp loc_4778B5  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_4790C2  +
cmp al [ecx+1] +
jnz loc_477969  +
mov eax 1 +
jmp loc_477F49  +
cmp dl [ecx+eax] +
jnz loc_477FE7  +
add eax 1 +
movzx edx byte ptr [esi+eax] +
mov edi eax +
test dl dl +
jnz loc_477F40  +
add ecx edi +
test ebx ebx +
mov [esp+0CCh+var_1C] ecx +
movsx edx byte ptr [ecx] +
jz loc_4780ED  +
mov [esp+0CCh+var_AC] ebx +
xor edi edi +
mov dword ptr [esp+0CCh+var_9C] 0 +
lea esi [edx-30h] +
cmp esi 9 +
mov [esp+0CCh+var_84] 1 +
ja loc_47797F  +
mov ecx [esp+0CCh+var_1C] +
add edi 1 +
test esi esi +
jz loc_478E25  +
add dword ptr [esp+0CCh+var_9C] edi +
cmp edi 1 +
mov eax [esp+0CCh+var_AC] +
jz loc_47906B  +
add edi eax +
mov [esp+0CCh+var_AC] edi +
sub edi 1 +
mov [esp+0CCh+var_84] ebx +
mov ebx dword ptr [esp+0CCh+var_8C] +
jmp loc_477FD0  +
lea ebp [ebp+ebp*4+0] +
add ebp ebp +
cmp eax edi +
jz loc_47905C  +
add eax 1 +
lea edx [eax-1] +
cmp edx 8 +
jle loc_477FC2  +
cmp eax 10h +
jg loc_477FC8  +
lea ebx [ebx+ebx*4] +
add ebx ebx +
jmp loc_477FC8  +
mov edx dword ptr [esp+0CCh+var_9C] +
xor edi edi +
mov [esp+0CCh+var_AC] ebx +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 0 +
jmp loc_47797F  +
sar eax 4 +
cmp eax 0Fh +
jle loc_47914C  +
fld  ds:dbl_4D5480 +
mov ecx eax +
xor edi edi +
lea esi [esi+0] +
mov edx dword ptr [esp+0CCh+var_14+4] +
sub ecx 10h +
mov esi edx +
and edx 800FFFFFh +
or edx 3FF00000h +
and esi 7FF00000h +
mov dword ptr [esp+0CCh+var_14+4] edx +
shr esi 14h +
cmp ecx 0Fh +
fld  [esp+0CCh+var_14] +
lea edi [edi+esi-3FFh] +
fmul st st(1) +
fstp  [esp+0CCh+var_14] +
jg loc_478020  +
fstp  st +
and eax 0Fh +
mov ecx dword ptr [esp+0CCh+var_14+4] +
mov edx ecx +
and ecx 800FFFFFh +
and edx 7FF00000h +
or ecx 3FF00000h +
shr edx 14h +
lea esi [edi+edx-3FFh] +
xor edx edx +
mov dword ptr [esp+0CCh+var_14+4] ecx +
test eax eax +
fld  [esp+0CCh+var_14] +
jz loc_477CEC  +
test al 1 +
jz loc_4780B1  +
fmul  ds:dbl_4D5460[edx*8] +
add edx 1 +
sar eax 1 +
jnz loc_4780A6  +
fst  [esp+0CCh+var_14] +
jmp loc_477CEC  +
mov [esp+0CCh+var_80] 1 +
mov eax [esp+0CCh+arg_0] +
add eax 2 +
mov [esp+0CCh+var_1C] eax +
mov eax [esp+0CCh+arg_0] +
movsx edx byte ptr [eax+2] +
jmp loc_4779DA  +
cmp edx 30h +
jnz loc_479191  +
lea eax [ecx+1] +
lea esi [esi+0] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
mov edi eax +
sub edi ecx +
add eax 1 +
cmp edx 30h +
jz loc_478100  +
lea eax [edx-31h] +
cmp eax 8 +
ja loc_478DF1  +
mov eax [esp+0CCh+var_1C] +
lea esi [edx-30h] +
mov dword ptr [esp+0CCh+var_9C] edi +
mov edi 1 +
mov [esp+0CCh+var_AC] 0 +
mov [esp+0CCh+var_A4] eax +
mov ecx eax +
jmp loc_477F96  +
jz loc_477DC9  +
add ecx esi +
test ecx ecx +
mov [esp+0CCh+var_24] ecx +
jle loc_479153  +
mov eax [esp+0CCh+var_18] +
neg esi  +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BA00  +
jmp loc_477DC9  +
mov edi [esp+0CCh+var_74] +
cmp edi 0FFFFFFEAh +
mov eax edi +
jl loc_477CAD  +
neg eax  +
fld  [esp+0CCh+var_14] +
fdiv  ds:dbl_4D5360[eax*8] +
lea eax [esp+0CCh+var_28] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_64] +
fstp  [esp+0CCh+var_14] +
mov dword ptr [esp+0CCh+var_CC+4] 0 +
mov [esp+0CCh+var_C4] eax +
jmp loc_477E9F  +
mov dword ptr [ecx+10h] 0 +
mov [esp+0CCh+var_28] 50h +
call _errno  +
mov ecx [esp+0CCh+var_18] +
mov dword ptr [eax] 22h +
jmp loc_477813  +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_1C] eax +
xor eax eax +
jmp loc_477AA7  +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_94] 1 +
mov [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
xor ebx ebx +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_AC] +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B740  +
mov esi [esp+0CCh+var_74] +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_68] eax +
add eax 0Ch +
mov [esp+0CCh+var_5C] eax +
mov eax [esp+0CCh+var_A0] +
add eax 1 +
mov [esp+0CCh+var_58] eax +
mov eax esi +
neg eax  +
test esi esi +
cmovns eax ebx +
mov [esp+0CCh+var_80] eax +
mov eax [esp+0CCh+var_64] +
and eax 1 +
mov [esp+0CCh+var_50] eax +
jmp loc_478450  +
mov esi [esp+0CCh+var_64] +
test esi esi +
jz loc_47863D  +
mov eax [esp+0CCh+var_50] +
xor eax ebx +
mov [esp+0CCh+var_78] eax +
jz loc_478EA0  +
test ebx ebx +
jz loc_4788B0  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_28] 21h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_70] 20h +
mov [esp+0CCh+var_7C] 0 +
mov eax [esp+0CCh+var_24] +
mov ebx [esp+0CCh+var_20] +
mov edx [esp+0CCh+var_94] +
add ebx eax +
test edx edx +
mov [esp+0CCh+var_6C] ebx +
jnz loc_4782F1  +
cmp [esp+0CCh+var_A0] eax +
jg loc_478A82  +
lea eax [esp+0CCh+var_2C] +
fld  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_C0] eax +
lea eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_C4] eax +
fstp  [esp+0CCh+var_CC] +
call sub_47B610  +
mov ebp eax +
mov eax [esp+0CCh+var_30] +
test eax eax +
js loc_478AB7  +
jz loc_478334  +
mov dword ptr [esp+0CCh+var_CC] ebp +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B240  +
mov ebp eax +
mov eax [esp+0CCh+var_7C] +
mov ebx [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebp +
test eax eax +
mov dword ptr [esp+0CCh+var_CC] ebx +
jz loc_4787C6  +
call sub_47B3A0  +
mov ecx [esp+0CCh+var_94] +
mov edx [ebx+10h] +
test ecx ecx +
mov [esp+0CCh+var_18] eax +
jnz loc_4783A2  +
lea ecx [edx-1] +
cmp ecx [eax+10h] +
jge loc_478384  +
add edx 3 +
bsr ecx [eax+edx*4+4] +
bsr edx [ebx+edx*4+4] +
xor ecx 1Fh +
xor edx 1Fh +
cmp ecx edx +
jle loc_4783A2  +
mov ecx [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] ecx +
jnz loc_478862  +
sub [esp+0CCh+var_24] 1 +
mov [esp+0CCh+var_94] 1 +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47ADD0  +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47ADD0  +
mov eax [esp+0CCh+var_78] +
test eax eax +
jnz loc_4786B0  +
test esi esi +
jz loc_478410  +
mov eax [esp+0CCh+var_20] +
add eax [esp+0CCh+var_24] +
cmp [esp+0CCh+var_6C] eax +
jnz loc_478410  +
fld  [esp+0CCh+var_9C] +
fmul  ds:dbl_4D52B0 +
fld  [esp+0CCh+var_8C] +
fsub  ds:flt_4D52A4 +
fld  st(1) +
fchs   +
fucomip st st(1) +
jbe loc_478A50  +
fstp  st +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
jbe loc_478410  +
jmp loc_478A6E  +
fstp  st +
lea esi [esi+0] +
mov eax [esp+0CCh+var_94] +
mov dword ptr [esp+0CCh+var_9C] 0 +
test eax eax +
jz loc_478896  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov dword ptr [esp+0CCh+var_CC] edi +
call sub_47ADD0  +
mov esi [esp+0CCh+var_68] +
mov eax [esi+4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47AD00  +
mov edx [esi+10h] +
mov esi [esp+0CCh+var_5C] +
lea edx ds:8[edx*4] +
mov [esp+0CCh+var_C4] edx +
mov [esp+0CCh+var_A4] eax +
add eax 0Ch +
mov dword ptr [esp+0CCh+var_CC+4] esi +
xor esi esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call memcpy  +
mov eax [esp+0CCh+var_18] +
mov eax [eax+4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47AD00  +
mov ebx eax +
mov [esp+0CCh+var_AC] eax +
mov eax [esp+0CCh+var_18] +
lea edx [ebx+0Ch] +
mov ecx [eax+10h] +
add eax 0Ch +
mov dword ptr [esp+0CCh+var_CC] edx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
lea ecx ds:8[ecx*4] +
mov [esp+0CCh+var_C4] ecx +
call memcpy  +
mov edi dword ptr [esp+0CCh+var_9C] +
mov ebp [esp+0CCh+var_24] +
mov dword ptr [esp+0CCh+var_CC] 1 +
sub ebp edi +
add edi [esp+0CCh+var_20] +
call sub_47AF20  +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+var_74] +
test eax eax +
cmovg esi eax +
test edi edi +
js loc_478855  +
mov eax [esp+0CCh+var_80] +
mov edx esi +
lea ebx [eax+edi] +
mov eax [esp+0CCh+var_58] +
add edi ebp +
sub edi [esp+0CCh+var_A0] +
sub eax ebp +
cmp [esp+0CCh+var_84] edi +
jle loc_47851B  +
sub edi [esp+0CCh+var_84] +
add eax edi +
lea edi [ebx+eax] +
add edx eax +
cmp edi edx +
mov eax edx +
cmovle eax edi +
cmp eax ebx +
cmovg eax ebx +
test eax eax +
jle loc_478536  +
sub edi eax +
sub edx eax +
sub ebx eax +
mov eax [esp+0CCh+var_80] +
test eax eax +
jz loc_478582  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_A8] +
mov [esp+0CCh+var_7C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B0A0  +
mov ecx [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC+4] ecx +
mov dword ptr [esp+0CCh+var_CC] eax +
mov [esp+0CCh+var_A8] eax +
call sub_47AF50  +
mov ecx [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] ecx +
mov dword ptr [esp+0CCh+var_8C] eax +
call sub_47ADD0  +
mov eax dword ptr [esp+0CCh+var_8C] +
mov edx [esp+0CCh+var_7C] +
mov [esp+0CCh+var_AC] eax +
sub edi dword ptr [esp+0CCh+var_9C] +
cmp edi 0 +
jle loc_478830  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC+4] edi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
mov edx dword ptr [esp+0CCh+var_9C] +
mov [esp+0CCh+var_AC] eax +
test esi esi +
jz loc_4785CB  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B0A0  +
mov edx dword ptr [esp+0CCh+var_9C] +
mov [esp+0CCh+var_A4] eax +
test edx edx +
jle loc_4785E3  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
mov [esp+0CCh+var_A4] eax +
test ebx ebx +
jle loc_4785FB  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B3A0  +
cmp dword ptr [eax+10h] 1 +
mov edi eax +
jle loc_4786A5  +
mov eax [esp+0CCh+var_A8] +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B350  +
test eax eax +
jle loc_478280  +
test eax eax +
js loc_478EBB  +
jz loc_478F9D  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B830  +
fld  ds:flt_4D52A0 +
fucomip st st(1) +
jb loc_478960  +
fstp  st +
test ebx ebx +
jnz loc_478AE3  +
mov [esp+0CCh+var_78] 0 +
cmp ebp 1 +
jle loc_479089  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_70] 10h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_7C] 1 +
jmp loc_4782CB  +
mov eax [eax+14h] +
test eax eax +
jnz loc_47861B  +
mov ebp [esp+0CCh+var_AC] +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_478BEF  +
mov eax [esp+0CCh+var_20] +
mov ebx [esp+0CCh+arg_C] +
mov [ebx] eax +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47ADD0  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+var_68] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov dword ptr [esp+0CCh+var_CC] edi +
call sub_47ADD0  +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+var_20] +
cmp [eax+8] esi +
jge loc_477B4D  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+0Ch] +
and eax 3 +
cmp eax 2 +
jz loc_47904B  +
cmp eax 3 +
jz loc_478F8C  +
cmp eax 1 +
jz loc_478B3C  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47ADD0  +
mov eax [esp+0CCh+arg_8] +
mov ebx [esp+0CCh+arg_C] +
mov [esp+0CCh+var_18] 0 +
mov [esp+0CCh+var_28] 11h +
mov eax [eax+8] +
mov [ebx] eax +
mov eax [esp+0CCh+arg_8] +
mov ebx [esp+0CCh+arg_10] +
mov ecx [eax] +
lea eax [ecx+1Fh] +
sar eax 5 +
lea edx [ebx+eax*4] +
mov eax ebx +
cmp ebx edx +
jnb loc_4787AE  +
lea esi [esi+0] +
add eax 4 +
cmp edx eax +
mov dword ptr [eax-4] 0FFFFFFFFh +
ja loc_4787A0  +
and ecx 1Fh +
jz loc_4787BF  +
mov eax 20h +
sub eax ecx +
mov ecx eax +
shr dword ptr [edx-4] cl +
xor ecx ecx +
jmp loc_477B54  +
call sub_47BB60  +
mov edx [eax+10h] +
mov [esp+0CCh+var_18] eax +
lea ecx [edx-1] +
cmp ecx [ebx+10h] +
jge loc_4787F8  +
add edx 3 +
bsr ecx [eax+edx*4+4] +
bsr edx [ebx+edx*4+4] +
xor ecx 1Fh +
xor edx 1Fh +
cmp ecx edx +
jge loc_4783A2  +
mov ecx [esp+0CCh+var_94] +
test ecx ecx +
jz loc_478B10  +
mov eax [esp+0CCh+var_24] +
add eax 1 +
cmp [esp+0CCh+var_A0] eax +
mov [esp+0CCh+var_24] eax +
mov eax 0 +
cmovnz eax ecx +
mov [esp+0CCh+var_94] eax +
jmp loc_4783A2  +
jz loc_4785AB  +
mov eax [esp+0CCh+var_AC] +
neg edi  +
mov dword ptr [esp+0CCh+var_CC+4] edi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BA00  +
mov edx dword ptr [esp+0CCh+var_9C] +
jmp loc_4785AB  +
mov edx esi +
mov ebx [esp+0CCh+var_80] +
sub edx edi +
jmp loc_478503  +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
mov dword ptr [esp+0CCh+var_CC] ebp +
sub [esp+0CCh+var_20] 1 +
sub [esp+0CCh+var_60] 1 +
mov [esp+0CCh+var_18] eax +
call sub_47ADD0  +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47ADD0  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BB20  +
mov dword ptr [esp+0CCh+var_9C] eax +
jmp loc_478424  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
mov [esp+0CCh+var_28] 11h +
jz loc_47867B  +
xor edx edx +
mov esi [esp+0CCh+var_18] +
cmp [esp+0CCh+var_A0] 1Fh +
mov eax [esp+0CCh+var_A0] +
jle loc_478907  +
mov ebx [esi+14h] +
test ebx ebx +
jnz loc_47867B  +
mov eax [esp+0CCh+var_A0] +
xor edx edx +
jmp loc_4788FC  +
mov ecx [esi+edx*4+14h] +
test ecx ecx +
jnz loc_47867B  +
sub eax 20h +
add edx 1 +
cmp eax 1Fh +
jg loc_4788F0  +
cmp eax 1 +
jle loc_478926  +
lea edx [esi+edx*4] +
sub eax 1 +
mov ebx [edx+14h] +
bsf ecx ebx +
shr ebx cl +
cmp eax ecx +
mov [edx+14h] ebx +
jg loc_47867B  +
mov eax [esp+0CCh+var_60] +
mov dword ptr [esp+0CCh+var_CC] esi +
mov ebp [esp+0CCh+var_AC] +
sub eax 1 +
mov [esp+0CCh+var_20] eax +
mov eax [esp+0CCh+var_A0] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov [esp+0CCh+var_24] eax +
call sub_477700  +
mov [esp+0CCh+var_18] eax +
jmp loc_4786B4  +
fld  ds:flt_4D52A4 +
cmp ebx 1 +
fmul st(1) st +
sbb eax eax +
mov [esp+0CCh+var_70] eax +
xor eax eax +
and [esp+0CCh+var_70] 10h +
add [esp+0CCh+var_70] 10h +
cmp ebx 1 +
setb al  +
fld  st(1) +
fstp  [esp+0CCh+var_8C] +
fld  ds:dbl_4D52A8 +
fucomip st st(2) +
mov [esp+0CCh+var_7C] eax +
jbe loc_478AD0  +
fnstcw  [esp+0CCh+var_42] +
fld  st(1) +
movzx eax [esp+0CCh+var_42] +
mov ah 0Ch +
mov [esp+0CCh+var_44] ax +
mov eax [esp+0CCh+var_64] +
fldcw  [esp+0CCh+var_44] +
fistp  [esp+0CCh+var_40] +
fldcw  [esp+0CCh+var_42] +
mov esi [esp+0CCh+var_40] +
cmp eax 1 +
mov [esp+0CCh+var_40] esi +
fild  [esp+0CCh+var_40] +
fsub st(2) st +
fxch  st(2) +
fst  [esp+0CCh+var_8C] +
jz loc_478D0D  +
cmp eax 2 +
jnz loc_478BDC  +
fstp  st +
fstp  st +
mov ecx [esp+0CCh+var_7C] +
fstp  [esp+0CCh+var_9C] +
test ecx ecx +
jnz loc_478A40  +
fldz   +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
ja loc_478A1E  +
jmp loc_478A40  +
fstp  st +
add esi 1 +
mov eax 30h +
sub eax [esp+0CCh+var_70] +
mov [esp+0CCh+var_40] esi +
fild  [esp+0CCh+var_40] +
mov [esp+0CCh+var_70] eax +
fstp  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_78] 0 +
jmp loc_4782CB  +
fucomip st st(1) +
jbe loc_478407  +
fsubr  ds:flt_4D529C +
fld  [esp+0CCh+var_8C] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_478410  +
mov eax [esp+0CCh+var_70] +
mov ebp [esp+0CCh+var_AC] +
or [esp+0CCh+var_28] eax +
jmp loc_4786B4  +
mov ebp [esp+0CCh+var_A0] +
mov ebx ebp +
sub ebx eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
sub [esp+0CCh+var_20] ebx +
mov [esp+0CCh+var_24] ebp +
mov [esp+0CCh+var_18] eax +
jmp loc_4782F1  +
neg eax  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47BA00  +
jmp loc_478334  +
fstp  st +
fstp  st +
fld  [esp+0CCh+var_8C] +
xor esi esi +
fstp  [esp+0CCh+var_9C] +
jmp loc_478A40  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_70] 20h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_78] 0 +
mov [esp+0CCh+var_7C] 0 +
jmp loc_4782CB  +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
xor esi esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BA00  +
add [esp+0CCh+var_20] 1 +
add [esp+0CCh+var_60] 1 +
jmp loc_4783A2  +
mov [esp+0CCh+var_94] 0 +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_28] 0A3h +
mov dword ptr [eax+10h] 0 +
call _errno  +
mov dword ptr [eax] 22h +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+8] +
add eax 1 +
jmp loc_477B44  +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_BC] eax +
lea eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
lea eax [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BCE0  +
mov ecx [esp+0CCh+var_18] +
cmp eax 6 +
mov [esp+0CCh+var_28] eax +
jnz loc_477813  +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_90] 0 +
mov [esp+0CCh+var_1C] eax +
jmp loc_477813  +
fucomip st st(1) +
fstp  st +
jnb loc_478A1C  +
fstp  [esp+0CCh+var_9C] +
jmp loc_478A40  +
mov eax [esp+0CCh+var_24] +
mov ebx [esp+0CCh+var_A0] +
sub ebx eax +
cmp ebx 0 +
jnz loc_478DB4  +
mov eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_94] 0 +
jmp loc_4786C7  +
jz loc_477CE3  +
neg eax  +
mov edx eax +
and edx 0Fh +
jz loc_478C3D  +
fld  [esp+0CCh+var_14] +
fdiv  ds:dbl_4D5360[edx*8] +
fstp  [esp+0CCh+var_14] +
and eax 0FFFFFFF0h +
jz loc_477CE3  +
sar eax 4 +
cmp eax 0Fh +
mov edi eax +
jle loc_47920F  +
fld  ds:dbl_4D5440 +
mov edx eax +
xor esi esi +
nop   +
mov eax dword ptr [esp+0CCh+var_14+4] +
sub edx 10h +
mov ecx eax +
and eax 800FFFFFh +
or eax 3FF00000h +
and ecx 7FF00000h +
mov dword ptr [esp+0CCh+var_14+4] eax +
shr ecx 14h +
cmp edx 0Fh +
fld  [esp+0CCh+var_14] +
lea esi [esi+ecx-3FFh] +
fmul st st(1) +
fstp  [esp+0CCh+var_14] +
jg loc_478C60  +
fstp  st +
and edi 0Fh +
mov edx dword ptr [esp+0CCh+var_14+4] +
mov eax edx +
and edx 800FFFFFh +
and eax 7FF00000h +
or edx 3FF00000h +
shr eax 14h +
lea esi [esi+eax-3FFh] +
xor eax eax +
mov dword ptr [esp+0CCh+var_14+4] edx +
test edi edi +
fld  [esp+0CCh+var_14] +
jle loc_477CEC  +
test edi 1 +
jz loc_478CF2  +
fmul  ds:dbl_4D5420[eax*8] +
sar edi 1 +
add eax 1 +
test edi edi +
jg loc_478CE3  +
jmp loc_4780B8  +
mov [esp+0CCh+var_80] 0 +
jmp loc_4780CC  +
fstp  st +
fstp  st +
mov ebx [esp+0CCh+var_7C] +
fstp  [esp+0CCh+var_9C] +
test ebx ebx +
jz loc_478A40  +
fldz   +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
ja loc_478A1E  +
jmp loc_478A40  +
mov [esp+0CCh+var_94] 0 +
jmp loc_478215  +
lea eax [esp+0CCh+var_28] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_64] +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
mov [esp+0CCh+var_C4] eax +
jmp loc_477E9F  +
mov ecx [esp+0CCh+var_A4] +
xor ebp ebp +
xor ebx ebx +
mov dword ptr [esp+0CCh+var_8C] 0 +
jmp loc_47795A  +
mov edi [esp+0CCh+var_74] +
mov edx 25h +
sub edx [esp+0CCh+var_AC] +
cmp edi edx +
mov eax edi +
jg loc_477CAD  +
mov eax 0Fh +
fld  [esp+0CCh+var_14] +
sub eax [esp+0CCh+var_AC] +
fmul  ds:dbl_4D5360[eax*8] +
sub edi eax +
fmul  ds:dbl_4D5360[edi*8] +
jmp loc_478198  +
jle loc_479130  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B240  +
mov [esp+0CCh+var_18] eax +
mov eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_94] 0 +
sub eax ebx +
mov [esp+0CCh+var_20] eax +
jmp loc_4786C7  +
mov [esp+0CCh+var_AC] 0 +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 1 +
jmp loc_47797F  +
xor edi edi +
cmp [esp+0CCh+var_AC] 10h +
jg loc_478E25  +
mov eax dword ptr [esp+0CCh+var_8C] +
lea eax [eax+eax*4] +
lea eax [esi+eax*2] +
mov dword ptr [esp+0CCh+var_8C] eax +
lea eax [ecx+1] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx+1] +
jmp loc_477F78  +
lea ebx [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC+4] offset unk_4D5160 +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47B8C0  +
test eax eax +
jz loc_477BA0  +
mov dword ptr [esp+0CCh+var_CC+4] offset aInity +
mov dword ptr [esp+0CCh+var_CC] ebx +
sub [esp+0CCh+var_1C] 1 +
call sub_47B8C0  +
test eax eax +
jnz loc_478E7B  +
add [esp+0CCh+var_1C] 1 +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_28] 3 +
mov [esp+0CCh+var_94] 0 +
mov eax [eax+8] +
add eax 1 +
jmp loc_477B44  +
cmp ebx 1 +
mov ebp [esp+0CCh+var_AC] +
sbb eax eax +
and eax 10h +
add eax 11h +
mov [esp+0CCh+var_28] eax +
jmp loc_4786B4  +
cmp ebx 1 +
sbb eax eax +
and eax 10h +
add eax 11h +
test ebx ebx +
mov dword ptr [esp+0CCh+var_9C] ebp +
mov ebp [esp+0CCh+var_AC] +
mov [esp+0CCh+var_28] eax +
jnz loc_4786B4  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jg loc_4786B4  +
mov eax [esp+0CCh+var_94] +
test eax eax +
jnz loc_4786B4  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
jz loc_4786B4  +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
call sub_47B240  +
mov edi eax +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B350  +
test eax eax +
jle loc_478BEF  +
mov [esp+0CCh+var_28] 11h +
mov [esp+0CCh+var_94] 0 +
mov eax [esp+0CCh+var_A0] +
sub [esp+0CCh+var_20] eax +
mov [esp+0CCh+var_24] eax +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_477700  +
mov [esp+0CCh+var_18] eax +
jmp loc_4786B4  +
mov eax dword ptr [esp+0CCh+var_14+4] +
or eax 100000h +
bsf ecx eax +
mov eax 15h +
sub eax ecx +
jmp loc_477E64  +
mov ebp [esp+0CCh+var_90] +
test ebp ebp +
jnz loc_478B3C  +
jmp loc_478743  +
test ebx ebx +
mov dword ptr [esp+0CCh+var_9C] ebp +
mov ebp [esp+0CCh+var_AC] +
jz loc_4790CC  +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_479181  +
mov ecx [esp+0CCh+var_24] +
mov esi [esp+0CCh+var_18] +
mov edx ecx +
lea eax [esi+14h] +
sar edx 5 +
lea edx [eax+edx*4] +
cmp eax edx +
jnb loc_478FF5  +
cmp dword ptr [esi+14h] 0FFFFFFFFh +
lea eax [esi+18h] +
jz loc_478FF1  +
jmp loc_479181  +
add eax 4 +
cmp dword ptr [eax-4] 0FFFFFFFFh +
jnz loc_479181  +
cmp edx eax +
ja loc_478FE4  +
and ecx 1Fh +
jz loc_47900A  +
or edx 0FFFFFFFFh +
shl edx cl +
or edx [eax] +
add edx 1 +
jnz loc_479181  +
mov eax [esp+0CCh+var_A0] +
mov ebx [esp+0CCh+var_84] +
mov dword ptr [esi+10h] 1 +
mov dword ptr [esi+14h] 1 +
mov [esp+0CCh+var_24] 1 +
lea eax [eax+ebx-1] +
mov [esp+0CCh+var_20] eax +
mov eax 1 +
mov [esp+0CCh+var_28] 21h +
jmp loc_478BF6  +
mov eax [esp+0CCh+var_90] +
test eax eax +
jz loc_478B3C  +
jmp loc_478743  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_8C] ebx +
mov ebx [esp+0CCh+var_84] +
sub eax 1 +
lea edi [eax+1] +
cmp eax 8 +
mov [esp+0CCh+var_AC] edi +
jg loc_478E0E  +
lea eax [ebp+ebp*4+0] +
xor edi edi +
lea ebp [esi+eax*2] +
jmp loc_478E25  +
mov esi [esp+0CCh+var_94] +
test esi esi +
jz loc_478684  +
mov ebp [esp+0CCh+var_AC] +
mov eax [esp+0CCh+var_18] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_28] 50h +
mov [esp+0CCh+var_20] eax +
jmp loc_4786B4  +
mov edi 1 +
jmp loc_477F56  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jz loc_479198  +
mov [esp+0CCh+var_28] 21h +
mov eax [esp+0CCh+var_94] +
test eax eax +
jnz loc_4790F8  +
mov eax dword ptr [esp+0CCh+var_9C] +
cmp [esp+0CCh+var_A0] eax +
jg loc_478BEF  +
mov eax [esp+0CCh+var_18] +
mov edx [eax+14h] +
test dl 1 +
jz loc_4786B4  +
test ebx ebx +
jnz loc_479216  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jz loc_4790A0  +
sub edx 1 +
mov [eax+14h] edx +
mov [esp+0CCh+var_28] 11h +
jmp loc_4786B4  +
mov eax ebx +
neg eax  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BA00  +
jmp loc_478DD4  +
xor edi edi +
jmp loc_478069  +
cmp ecx 0FFFFFFFFh +
jl loc_477DF1  +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_24] 1 +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 1 +
jmp loc_477DC9  +
mov [esp+0CCh+var_28] 11h +
jmp loc_4790E2  +
xor edi edi +
jmp loc_478116  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
jnz loc_47925C  +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_28] 21h +
cmp dword ptr [eax+10h] 1 +
jnz loc_4786B4  +
cmp dword ptr [eax+14h] 1 +
mov eax dword ptr [esp+0CCh+var_9C] +
cmovnz eax [esp+0CCh+var_54] +
mov [esp+0CCh+var_54] eax +
jmp loc_4786B4  +
mov eax [esp+0CCh+arg_10] +
mov dword ptr [esp+0CCh+var_CC] ebx +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47C630  +
mov [esp+0CCh+var_28] eax +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+8] +
add eax 1 +
jmp loc_477B44  +
xor esi esi +
jmp loc_478CA7  +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_477320  +
mov ecx [esp+0CCh+var_24] +
mov edx [eax+10h] +
mov [esp+0CCh+var_18] eax +
bsr eax [eax+edx*4+10h] +
mov edx ecx +
neg edx  +
and edx 1Fh +
xor eax 1Fh +
cmp edx eax +
jz loc_47924C  +
add ecx 1 +
mov [esp+0CCh+var_24] ecx +
mov [esp+0CCh+var_28] 21h +
jmp loc_4786B4  +
mov [esp+0CCh+var_28] 1 +
jmp loc_478F3F  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_C] +
mov edi [esp+7Ch+arg_C] +
mov ebx [eax] +
mov eax ebx +
and eax 0FFFFFFCFh +
mov [edi] eax +
mov eax ebx +
and eax 7 +
cmp eax 4 +
ja loc_47A73C  +
jmp ds:off_4D52D0[eax*4]  +
mov eax [esp+7Ch+arg_0] +
xor edx edx +
mov esi [eax] +
cmp esi 20h +
jle loc_4792C1  +
mov eax 20h +
add eax eax +
add edx 1 +
cmp esi eax +
jg loc_4792B8  +
mov [esp+7Ch+var_7C] edx +
call sub_47AD00  +
mov edi [esp+7Ch+arg_8] +
mov ebp eax +
lea eax [esi-1] +
sar eax 5 +
lea edi [edi+eax*4] +
mov eax [esp+7Ch+arg_8] +
lea ecx [ebp+14h] +
mov edx ecx +
mov dword ptr [esp+7Ch+var_64] ecx +
nop   +
lea esi [esi+0] +
mov ecx [eax] +
add eax 4 +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
jnb loc_4792F0  +
mov ecx dword ptr [esp+7Ch+var_64] +
sub edx ecx +
sar edx 2 +
jmp loc_47931A  +
test eax eax +
jz loc_4797D5  +
mov edx eax +
lea eax [edx-1] +
mov edi [ecx+eax*4] +
test edi edi +
jz loc_479310  +
bsr eax [ebp+edx*4+10h] +
mov [ebp+10h] edx +
shl edx 5 +
mov [esp+7Ch+var_54] edx +
xor eax 1Fh +
sub [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47BB20  +
mov edi [esp+7Ch+arg_4] +
test eax eax +
mov [esp+7Ch+var_10] eax +
jnz loc_4797F0  +
mov ecx [ebp+10h] +
test ecx ecx +
jnz loc_479408  +
mov [esp+7Ch+var_7C] ebp +
call sub_47ADD0  +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 1 +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_7C] offset a0_2 +
mov [esp+7Ch+var_78] eax +
call sub_47A980  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 3 +
mov [esp+7Ch+var_7C] offset aNan +
mov [esp+7Ch+var_78] eax +
call sub_47A980  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 8 +
mov [esp+7Ch+var_7C] offset aInfinity +
mov [esp+7Ch+var_78] eax +
call sub_47A980  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47B520  +
mov eax [esp+7Ch+var_54] +
lea eax [edi+eax-1] +
mov [esp+7Ch+var_24] eax +
fstp  [esp+7Ch+var_64] +
mov edx dword ptr [esp+7Ch+var_64+4] +
and edx 0FFFFFh +
mov [esp+7Ch+var_50] edx +
cdq   +
or [esp+7Ch+var_50] 3FF00000h +
mov ecx [esp+7Ch+var_50] +
mov dword ptr [esp+7Ch+var_64+4] ecx +
mov ecx edx +
fld  [esp+7Ch+var_64] +
xor ecx eax +
fsub  ds:flt_4D52E4 +
sub ecx edx +
sub ecx 435h +
test ecx ecx +
fmul  ds:dbl_4D52E8 +
fadd  ds:dbl_4D52F0 +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D52F8 +
faddp st(1) st +
jle loc_479489  +
mov [esp+7Ch+var_24] ecx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D5300 +
faddp st(1) st +
fnstcw  [esp+7Ch+var_1E] +
movzx ecx [esp+7Ch+var_1E] +
mov ch 0Ch +
mov [esp+7Ch+var_20] cx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_58] +
fldcw  [esp+7Ch+var_1E] +
fldz   +
fucomip st st(1) +
ja loc_479C75  +
fstp  st +
mov ecx eax +
shl ecx 14h +
add ecx [esp+7Ch+var_50] +
cmp [esp+7Ch+var_58] 16h +
mov [esp+7Ch+var_34] 1 +
mov dword ptr [esp+7Ch+var_64+4] ecx +
ja loc_4794F5  +
mov ecx [esp+7Ch+var_58] +
fld  ds:dbl_4D5360[ecx*8] +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_479830  +
sub [esp+7Ch+var_58] 1 +
mov [esp+7Ch+var_34] 0 +
mov edx [esp+7Ch+var_54] +
mov [esp+7Ch+var_44] 0 +
sub edx eax +
sub edx 1 +
mov [esp+7Ch+var_4C] edx +
js loc_479C60  +
mov ecx [esp+7Ch+var_58] +
test ecx ecx +
js loc_479C40  +
add [esp+7Ch+var_4C] ecx +
mov [esp+7Ch+var_30] ecx +
mov [esp+7Ch+var_3C] 0 +
cmp [esp+7Ch+arg_10] 9 +
ja loc_479812  +
cmp [esp+7Ch+arg_10] 5 +
jle loc_47981D  +
sub [esp+7Ch+arg_10] 4 +
xor eax eax +
cmp [esp+7Ch+arg_10] 3 +
jz loc_479EAE  +
jle loc_479BA0  +
cmp [esp+7Ch+arg_10] 4 +
mov [esp+7Ch+var_38] 1 +
jz loc_479840  +
cmp [esp+7Ch+arg_10] 5 +
jnz loc_479BB6  +
mov ecx [esp+7Ch+var_58] +
add ecx [esp+7Ch+arg_14] +
mov [esp+7Ch+var_28] ecx +
add ecx 1 +
test ecx ecx +
mov [esp+7Ch+var_50] ecx +
jle loc_47A109  +
cmp ecx 0Eh +
setbe dl  +
and edx eax +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_2C] edx +
call sub_47A940  +
mov edx [esp+7Ch+var_2C] +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
sub eax 1 +
mov [esp+7Ch+var_48] eax +
jz loc_4795FD  +
mov eax 2 +
cmovns eax [esp+7Ch+var_48] +
and ebx 8 +
mov [esp+7Ch+var_48] eax +
jz loc_4795FD  +
mov eax 3 +
sub eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_48] eax +
test dl dl +
jz loc_4798C6  +
mov eax [esp+7Ch+var_48] +
or eax [esp+7Ch+var_58] +
jnz loc_4798C6  +
mov eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_10] 0 +
fld  [esp+7Ch+var_64] +
test eax eax +
jz loc_479631  +
fld1   +
fucomip st st(1) +
ja loc_47A48F  +
fld  st +
mov eax [esp+7Ch+var_50] +
fadd st st(1) +
fadd  dword ptr ds:dbl_4D5318+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
test eax eax +
jz loc_47988C  +
mov ecx [esp+7Ch+var_50] +
fld  st +
mov [esp+7Ch+var_2C] 0 +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_47A16A  +
fld  ds:flt_4D5324 +
fdiv  ds:dbl_4D5358[ecx*8] +
fnstcw  [esp+7Ch+var_1E] +
mov edx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 0 +
movzx eax [esp+7Ch+var_1E] +
mov ebx edx +
add ebx 1 +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fsub  [esp+7Ch+var_64] +
fxch  st(1) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [edx] al +
fucomi st st(1) +
ja loc_479762  +
fld  st(1) +
fsubr  ds:flt_4D5310 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_47A330  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_4798B2  +
fld  ds:flt_4D5314 +
jmp loc_47972B  +
fld  st(1) +
fsubr  ds:flt_4D5310 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_47A338  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_4798B8  +
fxch  st(1) +
fxch  st(2) +
fmul st(1) st +
add ebx 1 +
fmul st(2) st +
fxch  st(2) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [ebx-1] al +
fucomi st st(1) +
jbe loc_479700  +
fstp  st +
fstp  st(1) +
fstp  st(1) +
jmp loc_479766  +
fstp  st +
fstp  st(1) +
fldz   +
fxch  st(1) +
mov eax [esp+7Ch+var_2C] +
fucomip st st(1) +
fstp  st +
jp loc_47977A  +
jz loc_47A0A4  +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 10h +
lea esi [esi+0] +
mov [esp+7Ch+var_7C] ebp +
call sub_47ADD0  +
mov eax [esp+7Ch+arg_18] +
mov esi [esp+7Ch+var_58] +
mov byte ptr [ebx] 0 +
mov [eax] esi +
mov eax [esp+7Ch+arg_1C] +
test eax eax +
jz loc_4797BC  +
mov eax [esp+7Ch+arg_1C] +
mov [eax] ebx +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_50] +
or [eax] esi +
mov eax [esp+7Ch+var_40] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+10h] 0 +
mov [esp+7Ch+var_54] 0 +
jmp loc_47933A  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47BA00  +
mov eax [esp+7Ch+var_10] +
mov edi [esp+7Ch+arg_4] +
sub [esp+7Ch+var_54] eax +
add edi eax +
jmp loc_479355  +
mov [esp+7Ch+arg_10] 0 +
add eax 3FEh +
cmp eax 7F7h +
setbe al  +
jmp loc_479552  +
mov [esp+7Ch+var_34] 0 +
jmp loc_4794F5  +
mov edx [esp+7Ch+arg_14] +
test edx edx +
jle loc_47A0F4  +
cmp [esp+7Ch+arg_14] 0Eh +
setbe dl  +
mov ecx [esp+7Ch+arg_14] +
and edx eax +
mov [esp+7Ch+var_10] ecx +
mov eax ecx +
mov [esp+7Ch+var_28] ecx +
mov [esp+7Ch+var_50] ecx +
jmp loc_4795B6  +
fld  st +
fadd st st(1) +
fadd  dword ptr ds:dbl_4D5318+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
fld  st +
fsub  ds:flt_4D5320 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomi st st(1) +
ja loc_47A23D  +
fxch  st(1) +
fchs   +
fucomip st st(1) +
fstp  st +
ja loc_479C05  +
jmp loc_4798C2  +
fstp  st +
fstp  st +
jmp loc_4798C2  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_4798C2  +
fstp  st +
fstp  [esp+7Ch+var_64] +
test edi edi +
js loc_479981  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_58] +
cmp ebx [eax+14h] +
jg loc_479981  +
mov eax [esp+7Ch+var_50] +
fld  ds:dbl_4D5360[ebx*8] +
test eax eax +
jg loc_479FDB  +
mov eax [esp+7Ch+arg_14] +
shr eax 1Fh +
test al al +
jz loc_479FDB  +
mov edi [esp+7Ch+var_50] +
test edi edi +
jnz loc_479C09  +
fmul  ds:flt_4D5320 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jnb loc_479C0B  +
mov eax ebx +
xor edi edi +
add eax 2 +
mov [esp+7Ch+var_58] eax +
mov dword ptr [esp+7Ch+var_64] 0 +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 20h +
lea ebx [eax+1] +
mov byte ptr [eax] 31h +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47ADD0  +
test edi edi +
jz loc_479790  +
cmp [esp+7Ch+var_4C] edi +
jnz loc_479E91  +
mov [esp+7Ch+var_7C] edi +
call sub_47ADD0  +
jmp loc_479790  +
mov ecx [esp+7Ch+var_38] +
test ecx ecx +
jz loc_479E10  +
mov ebx [esp+7Ch+arg_0] +
mov ecx edi +
sub esi [esp+7Ch+var_54] +
mov edx [ebx+4] +
sub ecx esi +
lea eax [esi+1] +
mov [esp+7Ch+var_10] eax +
cmp ecx edx +
jge loc_479E30  +
cmp [esp+7Ch+arg_10] 3 +
jz loc_479E30  +
cmp [esp+7Ch+arg_10] 5 +
jz loc_479E30  +
mov eax edi +
sub eax edx +
add eax 1 +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_10] eax +
jle loc_4799F1  +
mov edx [esp+7Ch+var_50] +
test edx edx +
jle loc_4799F1  +
cmp [esp+7Ch+var_50] eax +
jl loc_479E3E  +
mov esi [esp+7Ch+var_3C] +
mov ebx [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] 1 +
add [esp+7Ch+var_44] eax +
add [esp+7Ch+var_4C] eax +
call sub_47AF20  +
mov edi eax +
mov eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_479A32  +
test ebx ebx +
jle loc_479A32  +
mov eax [esp+7Ch+var_4C] +
cmp eax ebx +
cmovg eax ebx +
sub [esp+7Ch+var_44] eax +
sub ebx eax +
sub [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_10] eax +
mov ecx [esp+7Ch+var_3C] +
test ecx ecx +
jle loc_479A82  +
mov edx [esp+7Ch+var_38] +
test edx edx +
jz loc_479E7A  +
test esi esi +
jle loc_479A76  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] esi +
call sub_47B0A0  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
mov edi eax +
call sub_47AF50  +
mov [esp+7Ch+var_7C] ebp +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_47ADD0  +
mov eax dword ptr [esp+7Ch+var_64] +
mov ebp eax +
mov eax [esp+7Ch+var_3C] +
sub eax esi +
jnz loc_479E7E  +
mov [esp+7Ch+var_7C] 1 +
call sub_47AF20  +
mov esi [esp+7Ch+var_30] +
test esi esi +
mov dword ptr [esp+7Ch+var_64] eax +
jle loc_479AAA  +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_47B0A0  +
mov dword ptr [esp+7Ch+var_64] eax +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_3C] 0 +
jle loc_47A0B8  +
mov eax [esp+7Ch+var_30] +
mov esi 1Fh +
test eax eax +
jz loc_479ADC  +
mov esi dword ptr [esp+7Ch+var_64] +
mov eax [esi+10h] +
bsr esi [esi+eax*4+10h] +
xor esi 1Fh +
sub esi [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_44] +
sub esi 4 +
and esi 1Fh +
add edx esi +
mov eax esi +
test edx edx +
mov [esp+7Ch+var_10] esi +
jle loc_479B08  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] edx +
call sub_47B240  +
mov ebp eax +
mov eax [esp+7Ch+var_10] +
add eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_479B24  +
mov [esp+7Ch+var_78] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47B240  +
mov dword ptr [esp+7Ch+var_64] eax +
mov eax [esp+7Ch+var_34] +
test eax eax +
jnz loc_479EBB  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jg loc_479C90  +
cmp [esp+7Ch+arg_10] 2 +
jle loc_479C90  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jnz loc_479C15  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 5 +
mov [esp+7Ch+var_7C] eax +
call sub_47AE40  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_47B350  +
test eax eax +
jle loc_479C15  +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_47993C  +
cmp [esp+7Ch+arg_10] 2 +
mov [esp+7Ch+var_38] 0 +
jz loc_479840  +
mov [esp+7Ch+var_24] esi +
xor edx edx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D5308 +
mov [esp+7Ch+var_38] 1 +
mov [esp+7Ch+var_28] 0FFFFFFFFh +
mov [esp+7Ch+var_50] 0FFFFFFFFh +
mov [esp+7Ch+arg_14] 0 +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
add eax 3 +
mov [esp+7Ch+var_10] eax +
jmp loc_4795B6  +
fstp  st +
jmp loc_479C0B  +
fstp  st +
mov dword ptr [esp+7Ch+var_64] 0 +
xor edi edi +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 10h +
neg eax  +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
mov ecx [esp+7Ch+var_58] +
sub [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_30] 0 +
neg ecx  +
mov [esp+7Ch+var_3C] ecx +
jmp loc_47952C  +
mov ecx edx +
neg ecx  +
mov [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_4C] 0 +
jmp loc_479510  +
fild  [esp+7Ch+var_58] +
fucomip st st(1) +
fstp  st +
jp loc_479C85  +
jz loc_4794B1  +
sub [esp+7Ch+var_58] 1 +
jmp loc_4794B1  +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_479F1B  +
add ebx esi +
test ebx ebx +
jle loc_479CB0  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] ebx +
call sub_47B240  +
mov edi eax +
mov ebx [esp+7Ch+var_3C] +
mov esi edi +
test ebx ebx +
jnz loc_47A41A  +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 1 +
mov [esp+7Ch+var_4C] ebx +
jmp loc_479DA9  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_44] eax +
call sub_47ADD0  +
mov eax [esp+7Ch+var_44] +
mov ecx eax +
or ecx [esp+7Ch+arg_10] +
jnz loc_479D06  +
mov ecx [esp+7Ch+arg_8] +
test byte ptr [ecx] 1 +
jnz loc_479D06  +
mov ecx [esp+7Ch+var_48] +
test ecx ecx +
jz loc_47A5FB  +
test ebx ebx +
js loc_47A25A  +
or ebx [esp+7Ch+arg_10] +
jnz loc_479D27  +
mov ebx [esp+7Ch+arg_8] +
test byte ptr [ebx] 1 +
jz loc_47A25A  +
test eax eax +
jg loc_47A4E5  +
add [esp+7Ch+var_4C] 1 +
movzx eax byte ptr [esp+7Ch+var_54] +
mov ebx [esp+7Ch+var_4C] +
mov [ebx-1] al +
mov eax [esp+7Ch+var_50] +
cmp [esp+7Ch+var_10] eax +
jz loc_47A4D6  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47AE40  +
cmp edi esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov [esp+7Ch+var_7C] edi +
mov ebp eax +
jz loc_479E20  +
call sub_47AE40  +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov edi eax +
call sub_47AE40  +
mov esi eax +
add [esp+7Ch+var_10] 1 +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47A9F0  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] ebp +
mov ebx eax +
add ebx 30h +
mov [esp+7Ch+var_54] ebx +
mov [esp+7Ch+var_3C] eax +
call sub_47B350  +
mov [esp+7Ch+var_78] esi +
mov ebx eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47B3A0  +
mov edx eax +
mov eax 1 +
mov ecx [edx+0Ch] +
test ecx ecx +
jnz loc_479CD3  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_44] edx +
call sub_47B350  +
mov edx [esp+7Ch+var_44] +
jmp loc_479CD3  +
mov esi [esp+7Ch+var_3C] +
xor edi edi +
mov ebx [esp+7Ch+var_44] +
jmp loc_479A0F  +
call sub_47AE40  +
mov edi eax +
mov esi eax +
jmp loc_479DA4  +
cmp [esp+7Ch+arg_10] 1 +
jle loc_4799F1  +
mov edi [esp+7Ch+var_3C] +
mov eax [esp+7Ch+var_50] +
mov esi edi +
sub eax 1 +
sub esi eax +
cmp edi eax +
jge loc_479E61  +
mov edx eax +
xor esi esi +
sub edx [esp+7Ch+var_3C] +
add [esp+7Ch+var_30] edx +
mov [esp+7Ch+var_3C] eax +
mov eax [esp+7Ch+var_50] +
test eax eax +
js loc_47A3ED  +
mov [esp+7Ch+var_10] eax +
mov ebx [esp+7Ch+var_44] +
jmp loc_4799F9  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B0A0  +
mov ebp eax +
jmp loc_479A82  +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_479974  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call sub_47ADD0  +
jmp loc_479974  +
mov [esp+7Ch+var_38] 0 +
jmp loc_47958A  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B350  +
test eax eax +
jns loc_479B30  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
sub [esp+7Ch+var_58] 1 +
call sub_47AE40  +
mov ebp eax +
mov eax [esp+7Ch+var_38] +
test eax eax +
jnz loc_47A68C  +
cmp [esp+7Ch+var_28] 0 +
mov eax [esp+7Ch+var_28] +
jg loc_479F17  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_47A6C4  +
mov [esp+7Ch+var_50] eax +
mov esi [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] edi +
mov edi dword ptr [esp+7Ch+var_64] +
jmp loc_479F54  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47AE40  +
add [esp+7Ch+var_10] 1 +
mov ebp eax +
mov [esp+7Ch+var_78] edi +
add ebx 1 +
mov [esp+7Ch+var_7C] ebp +
call sub_47A9F0  +
add eax 30h +
mov [ebx-1] al +
cmp esi [esp+7Ch+var_10] +
jg loc_479F35  +
mov edi [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_4C] 0 +
mov eax [esp+7Ch+var_48] +
test eax eax +
jz loc_47A386  +
cmp eax 2 +
jz loc_47A3BE  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47A572  +
movzx edx byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
jmp loc_479FB6  +
cmp eax ecx +
jz loc_47A14B  +
movzx edx byte ptr [eax-1] +
mov ebx eax +
cmp dl 39h +
lea eax [ebx-1] +
jz loc_479FA8  +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
fld  [esp+7Ch+var_64] +
fld  st +
mov edi [esp+7Ch+var_40] +
fdiv st st(2) +
fnstcw  [esp+7Ch+var_1E] +
mov [esp+7Ch+var_10] 1 +
lea ebx [edi+1] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(2) +
mov [edi] dl +
fsubp st(1) st +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_47A67D  +
mov edx [esp+7Ch+var_10] +
cmp [esp+7Ch+var_50] edx +
jz loc_47A127  +
fld  ds:flt_4D5314 +
mov ecx [esp+7Ch+var_50] +
jmp loc_47A05C  +
mov edx [esp+7Ch+var_10] +
cmp ecx edx +
jz loc_47A125  +
add edx 1 +
fmul st(1) st +
add ebx 1 +
mov [esp+7Ch+var_10] edx +
fld  st(1) +
fdiv st st(3) +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(3) +
mov [ebx-1] dl +
fsubp st(2) st +
fldz   +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jp loc_47A050  +
jnz loc_47A050  +
fstp  st +
fstp  st +
fstp  st +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 0 +
jmp loc_479790  +
cmp [esp+7Ch+var_54] 1 +
jnz loc_479AC0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
add eax 1 +
cmp [esp+7Ch+arg_4] eax +
jle loc_479AC0  +
add [esp+7Ch+var_44] 1 +
add [esp+7Ch+var_4C] 1 +
mov [esp+7Ch+var_3C] 1 +
jmp loc_479AC0  +
mov edx 1 +
mov [esp+7Ch+arg_14] 1 +
jmp loc_47985A  +
cmp [esp+7Ch+var_50] 0Eh +
mov [esp+7Ch+var_10] 1 +
setbe dl  +
and edx eax +
mov eax 1 +
jmp loc_4795B6  +
fstp  st +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_47A45E  +
fstp  st +
fstp  st +
cmp [esp+7Ch+var_48] 1 +
jz loc_47A55D  +
mov eax [esp+7Ch+var_58] +
jmp loc_47977A  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] 20h +
mov byte ptr [eax] 31h +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
fnstcw  [esp+7Ch+var_1E] +
fld  [esp+7Ch+var_64] +
fmul  ds:dbl_4D5358[ecx*8] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
fld  ds:flt_4D5314 +
fxch  st(2) +
mov [esp+7Ch+var_20] ax +
jmp loc_47A1A9  +
fmul st st(2) +
add edx 1 +
mov [esp+7Ch+var_10] edx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_47A1C7  +
mov [esp+7Ch+var_24] eax +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
add ebx 1 +
add eax 30h +
mov [ebx-1] al +
mov edx [esp+7Ch+var_10] +
cmp edx ecx +
jnz loc_47A1A0  +
fstp  st(2) +
fxch  st(1) +
fld  ds:flt_4D5324 +
fld  st(2) +
fadd st st(1) +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
ja loc_47A342  +
fsubrp st(2) st +
fxch  st(1) +
fucomip st st(1) +
jbe loc_4798C0  +
fstp  st(1) +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_47A210  +
jz loc_47A5EE  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A226  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 30h +
lea edx [ebx-1] +
jz loc_47A220  +
mov eax [esp+7Ch+var_2C] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479790  +
fstp  st +
fstp  st +
fstp  st +
mov [esp+7Ch+var_58] 2 +
xor edi edi +
mov dword ptr [esp+7Ch+var_64] 0 +
jmp loc_47993C  +
mov edx [esp+7Ch+var_48] +
mov ebx [esp+7Ch+var_4C] +
test edx edx +
jz loc_47A536  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47A52C  +
cmp [esp+7Ch+var_48] 2 +
jnz loc_47A2E3  +
jmp loc_47A54C  +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [ebx-1] al +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47AE40  +
cmp edi esi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
cmovz edi eax +
mov [esp+7Ch+var_50] eax +
call sub_47AE40  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47A9F0  +
mov edx [esp+7Ch+var_50] +
mov esi edx +
add eax 30h +
mov [esp+7Ch+var_54] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_47B350  +
test eax eax +
jg loc_47A280  +
cmp [esp+7Ch+var_54] 39h +
jz loc_47A58A  +
add [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_50] 20h +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [ebx-1] al +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_47A34A  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
jmp loc_47A34A  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov ecx [esp+7Ch+var_40] +
jmp loc_47A35E  +
cmp edx ecx +
jz loc_47A404  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 39h +
lea edx [ebx-1] +
jz loc_47A350  +
mov [esp+7Ch+var_40] ecx +
add eax 1 +
mov [edx] al +
mov eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479790  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_47B240  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B350  +
cmp eax 0 +
jg loc_479F9E  +
jnz loc_47A3BE  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_479F9E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47A725  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A3D4  +
mov ebx eax +
cmp byte ptr [ebx-1] 30h +
lea eax [ebx-1] +
jz loc_47A3D2  +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
mov ebx [esp+7Ch+var_44] +
xor eax eax +
sub ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 0 +
jmp loc_4799F9  +
mov [esp+7Ch+var_40] ecx +
mov eax 31h +
add [esp+7Ch+var_2C] 1 +
mov byte ptr [ecx] 30h +
jmp loc_47A36C  +
mov eax [edi+4] +
mov [esp+7Ch+var_7C] eax +
call sub_47AD00  +
lea ecx [eax+0Ch] +
mov ebx eax +
mov eax [edi+10h] +
mov [esp+7Ch+var_7C] ecx +
lea edx ds:8[eax*4] +
lea eax [edi+0Ch] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call memcpy  +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] ebx +
call sub_47B240  +
mov esi eax +
jmp loc_479CBE  +
fadd st st +
fucomi st st(1) +
ja loc_47A559  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_47A476  +
jz loc_47A645  +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A226  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jz loc_479876  +
mov ecx [esp+7Ch+var_28] +
test ecx ecx +
jle loc_4798C2  +
fld  st +
fmul  ds:flt_4D5314 +
mov [esp+7Ch+var_2C] 0FFFFFFFFh +
fld  st +
fmul  dword ptr ds:dbl_4D5318 +
fadd  dword ptr ds:dbl_4D5318+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
jmp loc_479661  +
mov ebx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
jmp loc_479F7F  +
cmp [esp+7Ch+var_48] 2 +
jz loc_479D2F  +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_47A58A  +
movzx edx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [esp+7Ch+var_50] 20h +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_47A274  +
test eax eax +
jg loc_47A5A4  +
mov [esp+7Ch+var_50] 0 +
cmp dword ptr [ebp+10h] 1 +
jle loc_47A666  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A30F  +
fstp  st +
fstp  st +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A35E  +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_479F9E  +
mov [esp+7Ch+var_50] 0 +
jmp loc_47A3D4  +
mov byte ptr [ebx] 39h +
mov edx 39h +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov ecx [esp+7Ch+var_40] +
mov edi esi +
jmp loc_479FB6  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_47B240  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B350  +
cmp eax 0 +
jle loc_47A6CD  +
cmp [esp+7Ch+var_54] 39h +
jz loc_47A58A  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add eax 31h +
mov [esp+7Ch+var_54] eax +
jmp loc_47A542  +
mov [esp+7Ch+var_50] 0 +
jmp loc_47A226  +
mov ecx ebx +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_47A58A  +
test ecx ecx +
jle loc_47A6FB  +
mov ecx [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add ecx 31h +
mov [esp+7Ch+var_54] ecx +
movzx ecx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [eax] cl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479956  +
test al 1 +
movzx eax byte ptr [ebx-1] +
jnz loc_47A6EA  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A226  +
cmp dword ptr [ebp+14h] 0 +
mov eax 10h +
cmovz eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_50] eax +
jmp loc_47A30F  +
jnz loc_47A031  +
fstp  st +
fstp  st +
jmp loc_47A0A0  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47AE40  +
cmp [esp+7Ch+var_28] 0 +
mov edi eax +
mov eax [esp+7Ch+var_28] +
jg loc_47A6BB  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_47A6C4  +
mov [esp+7Ch+var_50] eax +
jmp loc_479C9C  +
mov [esp+7Ch+var_50] eax +
jmp loc_479B4A  +
lea esi [esi+0] +
jnz loc_47A6DD  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_47A5CF  +
mov [esp+7Ch+var_50] 20h +
jmp loc_47A542  +
mov esi [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] esi +
jmp loc_47A35E  +
cmp dword ptr [ebp+10h] 1 +
mov [esp+7Ch+var_50] 10h +
jg loc_47A625  +
cmp dword ptr [ebp+14h] 1 +
sbb ecx ecx +
mov [esp+7Ch+var_50] ecx +
not [esp+7Ch+var_50]  +
and [esp+7Ch+var_50] 10h +
jmp loc_47A625  +
cmp dword ptr [ebp+14h] 0 +
mov [esp+7Ch+var_50] 0 +
jnz loc_47A3C8  +
jmp loc_47A3D4  +
xor eax eax +
jmp loc_479394  +
***
sub esp 48h +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
test edx edx +
mov word ptr [ebp+var_1C] ax +
jnz loc_47A776  +
cmp ax 0FFh +
ja loc_47A7C8  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
mov eax 1 +
leave   +
retn   +
lea eax [ebp+var_C] +
mov [esp+48h+var_2C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_38] eax +
lea eax [ebp+var_1C] +
mov [esp+48h+var_40] eax +
call ds:WideCharToMultiByte  +
sub esp 20h +
test eax eax +
jz loc_47A7C8  +
mov edx [ebp+var_C] +
test edx edx +
jz locret_47A774  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
leave   +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
lea eax [esp+20h+var_5] +
mov esi [esp+20h+arg_4] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
movzx esi si +
mov edi [eax] +
call sub_47CE60  +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] edi +
mov [esp+20h+var_18] eax +
call sub_47A750  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_47A830  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
call sub_47CE60  +
mov [esp+1Ch] eax +
mov eax ds:__mb_cur_max +
mov ebp [eax] +
mov eax [esp+54h] +
mov edi [eax] +
test edi edi +
jz loc_47A923  +
test ebx ebx +
jz loc_47A8D7  +
mov eax [esp+58h] +
xor esi esi +
test eax eax +
jz loc_47A8B2  +
mov eax edi +
mov edi ebp +
mov ebp eax +
jmp loc_47A883  +
add ebx eax +
add esi eax +
cmp byte ptr [ebx-1] 0 +
jz loc_47A8C2  +
add ebp 2 +
cmp [esp+58h] esi +
jbe loc_47A8B0  +
mov eax [esp+1Ch] +
mov [esp+0Ch] edi +
mov [esp+8] eax +
movzx eax word ptr [ebp+0] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_47A750  +
test eax eax +
jg loc_47A870  +
mov eax 0FFFFFFFFh +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi ebp +
mov eax [esp+54h] +
mov [eax] edi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov dword ptr [eax] 0 +
add esp 3Ch +
pop ebx  +
lea eax [esi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+58h] +
lea esi [esp+2Bh] +
test edx edx +
jz loc_47A92F  +
mov eax ebx +
mov ebx edi +
mov edi eax +
jmp loc_47A902  +
add edi eax +
cmp byte ptr [esp+eax+2Ah] 0 +
jz loc_47A936  +
add ebx 2 +
cmp [esp+58h] edi +
jbe loc_47A92D  +
mov eax [esp+1Ch] +
mov [esp+0Ch] ebp +
mov [esp+8] eax +
movzx eax word ptr [ebx] +
mov [esp] esi +
mov [esp+4] eax +
call sub_47A750  +
test eax eax +
jg loc_47A8F0  +
jmp loc_47A8A3  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
mov eax ebx +
jmp loc_47A8A8  +
***
lea eax [edi-1] +
jmp loc_47A8A8  +
***
sub esp 18h +
mov ecx [esp+18h+arg_0] +
cmp ecx 13h +
jle loc_47A960  +
mov eax 4 +
add eax eax +
add ebx 1 +
lea edx [eax+0Fh] +
cmp edx ecx +
jl loc_47A954  +
mov [esp+18h+var_18] ebx +
call sub_47AD00  +
mov [eax] ebx +
add esp 18h +
add eax 4 +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov [esp+14h+var_14] eax +
call sub_47A940  +
movzx edx byte ptr [ebx] +
lea ecx [ebx+1] +
test dl dl +
mov [eax] dl +
mov edx eax +
jz loc_47A9B7  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
add edx 1 +
test bl bl +
mov [edx] bl +
jnz loc_47A9A7  +
test esi esi +
jz loc_47A9BD  +
mov [esi] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
mov edx [eax+10h] +
xor eax eax +
cmp edx [edi+10h] +
jg loc_47ABE3  +
mov eax [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_0] +
add eax 14h +
mov edi eax +
mov [esp+4Ch+var_14] eax +
lea eax [edx-1] +
xor edx edx +
mov [esp+4Ch+var_1C] eax +
shl eax 2 +
add edi eax +
lea ebx [esi+14h] +
add eax ebx +
mov [esp+4Ch+var_24] edi +
mov edi [edi] +
mov [esp+4Ch+var_10] eax +
mov eax [eax] +
mov [esp+4Ch+var_20] ebx +
lea ecx [edi+1] +
div  ecx +
mov [esp+4Ch+var_3C] edi +
test eax eax +
mov ebp eax +
mov [esp+4Ch+var_18] eax +
jz loc_47AB1F  +
mov edi [esp+4Ch+var_14] +
mov esi ebx +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_38] 0 +
nop   +
add edi 4 +
mov eax ebp +
mov ecx [esi] +
mul  dword ptr [edi-4] +
add eax [esp+4Ch+var_2C] +
adc edx [esp+4Ch+var_28] +
xor ebx ebx +
mov [esp+4Ch+var_28] ebx +
xor ebx ebx +
mov [esp+4Ch+var_34] eax +
mov [esp+4Ch+var_30] 0 +
sub ecx [esp+4Ch+var_34] +
sbb ebx [esp+4Ch+var_30] +
sub ecx [esp+4Ch+var_3C] +
sbb ebx [esp+4Ch+var_38] +
add esi 4 +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_38] 0 +
mov eax ebx +
and eax 1 +
cmp [esp+4Ch+var_24] edi +
mov [esp+4Ch+var_3C] eax +
mov [esi-4] ecx +
jnb loc_47AA80  +
mov eax [esp+4Ch+var_10] +
mov edi [eax] +
test edi edi +
jnz loc_47AB1F  +
mov ecx [esp+4Ch+var_20] +
mov esi eax +
sub eax 4 +
cmp ecx eax +
jnb loc_47AB14  +
mov esi [esi-4] +
test esi esi +
jnz loc_47AB14  +
mov edx [esp+4Ch+var_1C] +
jmp loc_47AB06  +
mov ebx [eax] +
test ebx ebx +
jnz loc_47AB10  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_47AB00  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_47B350  +
test eax eax +
js loc_47ABDF  +
xor esi esi +
xor edi edi +
lea eax [ebp+1] +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] esi +
mov esi [esp+4Ch+var_14] +
mov [esp+4Ch+var_38] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_18] eax +
lea esi [esi+0] +
add esi 4 +
mov eax [ebp+0] +
xor ebx ebx +
mov ecx [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+4Ch+var_3C] +
sbb edx [esp+4Ch+var_38] +
add ebp 4 +
mov [esp+4Ch+var_38] 0 +
mov ebx edx +
and ebx 1 +
cmp edi esi +
mov [esp+4Ch+var_3C] ebx +
mov [ebp-4] eax +
jnb loc_47AB60  +
mov eax [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_1C] +
lea edx [eax+ebx*4] +
mov edi [edx] +
test edi edi +
jnz loc_47ABDF  +
mov ecx [esp+4Ch+var_20] +
lea eax [edx-4] +
cmp ecx eax +
jnb loc_47ABD4  +
mov esi [edx-4] +
test esi esi +
jnz loc_47ABD4  +
mov edx ebx +
jmp loc_47ABC6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_47ABD0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_47ABC0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+var_18] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov edx ds:dword_4DA308 +
cmp edx 2 +
jz loc_47AC7A  +
test edx edx +
jz loc_47AC37  +
cmp edx 1 +
jnz loc_47AC2B  +
mov ebx ds:Sleep +
mov [esp+18h+var_18] 1 +
call ebx  +
mov edx ds:dword_4DA308 +
sub esp 4 +
cmp edx 1 +
jz loc_47AC14  +
cmp edx 2 +
jz loc_47AC7A  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 1 +
xchg eax ds:dword_4DA308 +
test eax eax +
jnz loc_47AC97  +
mov ebx ds:InitializeCriticalSection +
mov [esp+18h+var_18] offset unk_4DA320 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset unk_4DA338 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset loc_47ACC0 +
call sub_46F8E0  +
mov ds:dword_4DA308 2 +
lea eax [esi+esi*2] +
lea eax ds:4DA320h[eax*8] +
mov [esp+18h+var_18] eax +
call ds:EnterCriticalSection  +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
cmp eax 2 +
mov edx ds:dword_4DA308 +
jnz loc_47AC09  +
mov ds:dword_4DA308 2 +
jmp loc_47AC7A  +
***
mov eax 3 +
xchg eax ds:dword_4DA308 +
cmp eax 2 +
jz loc_47ACD1  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov ebx ds:DeleteCriticalSection +
mov dword ptr [esp] offset unk_4DA320 +
call ebx  +
sub esp 4 +
mov dword ptr [esp] offset unk_4DA338 +
call ebx  +
mov ebx [ebp-4] +
sub esp 4 +
leave   +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
call sub_47ABF0  +
cmp esi 9 +
jg loc_47AD47  +
mov ebx ds:dword_4DA2E0[esi*4] +
test ebx ebx +
jz loc_47AD92  +
mov eax [ebx] +
cmp ds:dword_4DA308 2 +
mov ds:dword_4DA2E0[esi*4] eax +
jnz loc_47AD7A  +
mov [esp+28h+var_28] offset unk_4DA320 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_47AD7A  +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
shl eax 3 +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_47ADCA  +
cmp ds:dword_4DA308 2 +
mov [ebx+4] esi +
mov [ebx+8] edi +
jz loc_47AD35  +
mov dword ptr [ebx+10h] 0 +
mov eax ebx +
mov dword ptr [ebx+0Ch] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx off_483760 +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
mov edx ebx +
sub edx offset unk_4D99E0 +
sar edx 3 +
add edx eax +
cmp edx 120h +
ja loc_47AD5A  +
lea eax [ebx+eax*8] +
mov off_483760 eax +
jmp loc_47AD6B  +
xor eax eax +
jmp loc_47AD8A  +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_47AE07  +
cmp dword ptr [ebx+4] 9 +
jg loc_47AE10  +
xor eax eax +
call sub_47ABF0  +
mov eax [ebx+4] +
cmp ds:dword_4DA308 2 +
mov edx ds:dword_4DA2E0[eax*4] +
mov ds:dword_4DA2E0[eax*4] ebx +
mov [ebx] edx +
jz loc_47AE20  +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov ebx [ebp+var_4] +
leave   +
jmp free  +
mov [esp+18h+var_18] offset unk_4DA320 +
call ds:LeaveCriticalSection  +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_8] +
mov eax [eax+10h] +
mov ebp edi +
sar ebp 1Fh +
mov [esp+38h+var_1C] eax +
mov eax [esp+38h+arg_0] +
lea ebx [eax+14h] +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_28] eax +
sar eax 1Fh +
mov [esp+38h+var_24] eax +
mov eax [ebx+ecx*4] +
mov esi [esp+38h+var_24] +
imul esi eax +
mul  [esp+38h+var_28] +
add edx esi +
add eax edi +
adc edx ebp +
xor ebp ebp +
mov [ebx+ecx*4] eax +
add ecx 1 +
mov edi edx +
cmp [esp+38h+var_1C] ecx +
jg loc_47AE73  +
mov edx ebp +
mov eax [esp+38h+arg_0] +
or edx edi +
jz loc_47AEBE  +
mov edx [esp+38h+var_1C] +
cmp edx [eax+8] +
jge loc_47AEC6  +
mov edx [esp+38h+arg_0] +
mov eax [esp+38h+var_1C] +
mov [edx+eax*4+14h] edi +
add eax 1 +
mov [edx+10h] eax +
mov eax edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
mov [esp+38h+var_28] eax +
add eax 1 +
mov [esp+38h+var_38] eax +
call sub_47AD00  +
test eax eax +
mov ebx eax +
jz loc_47AF18  +
lea ecx [eax+0Ch] +
mov eax [esp+38h+arg_0] +
mov eax [eax+10h] +
mov [esp+38h+var_38] ecx +
lea edx ds:8[eax*4] +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_30] edx +
add eax 0Ch +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call sub_47ADD0  +
mov [esp+38h+arg_0] ebx +
jmp loc_47AEAA  +
xor eax eax +
jmp loc_47AEBE  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_47AD00  +
test eax eax +
jz loc_47AF41  +
mov edx [esp+1Ch+arg_0] +
mov dword ptr [eax+10h] 1 +
mov [eax+14h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov esi [edi+10h] +
mov ebx [ebp+10h] +
cmp esi ebx +
jge loc_47AF75  +
mov eax esi +
mov esi ebx +
mov ebx eax +
mov eax edi +
mov edi ebp +
mov ebp eax +
lea eax [esi+ebx] +
cmp eax [edi+8] +
mov [esp+3Ch+var_1C] eax +
setnle al  +
movzx eax al +
add eax [edi+4] +
mov [esp+3Ch+var_3C] eax +
call sub_47AD00  +
test eax eax +
mov [esp+3Ch+var_10] eax +
jz loc_47B09B  +
mov ecx [esp+3Ch+var_1C] +
lea eax [eax+14h] +
mov [esp+3Ch+var_24] eax +
lea ecx [eax+ecx*4] +
mov edx ecx +
cmp eax edx +
mov [esp+3Ch+var_14] ecx +
jnb loc_47AFC5  +
mov edx [esp+3Ch+var_14] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp edx eax +
ja loc_47AFB8  +
lea eax [edi+14h] +
mov [esp+3Ch+var_18] eax +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_2C] eax +
lea eax [ebp+14h] +
lea ebx [eax+ebx*4] +
cmp eax ebx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_20] ebx +
jnb loc_47B055  +
add [esp+3Ch+var_28] 4 +
mov eax [esp+3Ch+var_28] +
mov ebp [eax-4] +
test ebp ebp +
jz loc_47B046  +
mov edi [esp+3Ch+var_24] +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] 0 +
jmp loc_47B012  +
mov edi eax +
add esi 4 +
mov ecx [edi] +
mov eax ebp +
mul  dword ptr [esi-4] +
xor ebx ebx +
add ecx eax +
adc ebx edx +
add ecx [esp+3Ch+var_34] +
adc ebx [esp+3Ch+var_30] +
xor edx edx +
cmp [esp+3Ch+var_2C] esi +
mov [esp+3Ch+var_30] edx +
lea eax [edi+4] +
mov [esp+3Ch+var_34] ebx +
mov [edi] ecx +
ja loc_47B010  +
mov eax [esp+3Ch+var_34] +
mov [edi+4] eax +
mov eax [esp+3Ch+var_28] +
add [esp+3Ch+var_24] 4 +
cmp [esp+3Ch+var_20] eax +
ja loc_47AFE5  +
mov esi [esp+3Ch+var_1C] +
test esi esi +
jle loc_47B088  +
mov ebx [esp+3Ch+var_14] +
mov esi [ebx-4] +
test esi esi +
jnz loc_47B088  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
sub ebx eax +
mov eax ebx +
jmp loc_47B07F  +
mov ecx [eax+edx*4-4] +
test ecx ecx +
jnz loc_47B084  +
sub edx 1 +
jnz loc_47B077  +
mov [esp+3Ch+var_1C] edx +
mov eax [esp+3Ch+var_10] +
mov ebx [esp+3Ch+var_1C] +
mov [eax+10h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_47B093  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax ebx +
and eax 3 +
jnz loc_47B160  +
sar ebx 2 +
mov eax edx +
test ebx ebx +
jz loc_47B115  +
mov edi ds:dword_4D99C0 +
test edi edi +
jz loc_47B1AE  +
test bl 1 +
jnz loc_47B0E9  +
sar ebx 1 +
jz loc_47B113  +
mov esi [edi] +
test esi esi +
nop   +
jz loc_47B120  +
mov edi esi +
test bl 1 +
jz loc_47B0D6  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edx +
mov [ebp+var_1C] edx +
call sub_47AF50  +
test eax eax +
mov esi eax +
jz loc_47B185  +
mov edx [ebp+var_1C] +
mov [esp+28h+var_28] edx +
call sub_47ADD0  +
sar ebx 1 +
mov edx esi +
jnz loc_47B0DA  +
mov eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_47ABF0  +
mov esi [edi] +
mov edx [ebp+var_1C] +
test esi esi +
jz loc_47B18F  +
cmp ds:dword_4DA308 2 +
jnz loc_47B0E2  +
mov [ebp+var_1C] edx +
mov edi esi +
mov [esp+28h+var_28] offset unk_4DA338 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_47B0E4  +
mov eax ds:dword_4D533C[eax*4] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] eax +
call sub_47AE40  +
test eax eax +
mov edx eax +
jnz loc_47B0BA  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edi +
call sub_47AF50  +
test eax eax +
mov esi eax +
mov [edi] eax +
jz loc_47B185  +
mov dword ptr [eax] 0 +
mov edx [ebp+var_1C] +
jmp loc_47B136  +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_47ABF0  +
mov edi ds:dword_4D99C0 +
mov edx [ebp+var_1C] +
test edi edi +
jz loc_47B1F0  +
cmp ds:dword_4DA308 2 +
jnz loc_47B0D1  +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] offset unk_4DA338 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_47B0D1  +
mov [esp+28h+var_28] 1 +
call sub_47AD00  +
test eax eax +
mov edi eax +
jz loc_47B220  +
mov dword ptr [eax+14h] 271h +
mov edx [ebp+var_1C] +
mov dword ptr [eax+10h] 1 +
mov ds:dword_4D99C0 eax +
mov dword ptr [eax] 0 +
jmp loc_47B1C8  +
mov ds:dword_4D99C0 0 +
xor eax eax +
jmp loc_47B187  +
***
jmp sub_47B240  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi eax +
mov edx [eax+4] +
mov eax [eax+10h] +
mov ebx esi +
sar ebx 5 +
add eax ebx +
lea ebp [eax+1] +
mov [esp+2Ch+var_14] eax +
mov eax [edi+8] +
cmp ebp eax +
jle loc_47B279  +
lea esi [esi+0] +
add eax eax +
add edx 1 +
cmp ebp eax +
jg loc_47B270  +
mov [esp+2Ch+var_2C] edx +
call sub_47AD00  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_47B34A  +
test ebx ebx +
lea edx [eax+14h] +
jle loc_47B2A7  +
xor eax eax +
mov dword ptr [edx+eax*4] 0 +
add eax 1 +
cmp eax ebx +
jnz loc_47B296  +
lea edx [edx+eax*4] +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_0] +
mov ecx [edi+10h] +
add eax 14h +
and esi 1Fh +
mov [esp+2Ch+var_20] esi +
lea edi [eax+ecx*4] +
mov ecx edi +
jz loc_47B336  +
mov [esp+2Ch+var_1C] 20h +
mov [esp+2Ch+var_10] ebp +
mov ebp ecx +
sub [esp+2Ch+var_1C] esi +
xor esi esi +
jmp loc_47B2E2  +
mov edx edi +
mov ebx [eax] +
add eax 4 +
movzx ecx byte ptr [esp+2Ch+var_20] +
lea edi [edx+4] +
shl ebx cl +
movzx ecx byte ptr [esp+2Ch+var_1C] +
or ebx esi +
mov [edx] ebx +
mov esi [eax-4] +
shr esi cl +
cmp ebp eax +
ja loc_47B2E0  +
mov eax [esp+2Ch+var_14] +
mov ebp [esp+2Ch+var_10] +
mov [edx+4] esi +
add eax 2 +
test esi esi +
cmovnz ebp eax +
mov edi [esp+2Ch+var_18] +
lea eax [ebp-1] +
mov [edi+10h] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_47ADD0  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp ebx eax +
mov [edx-4] ecx +
ja loc_47B338  +
jmp loc_47B316  +
xor eax eax +
jmp loc_47B32E  +
***
mov edx [esp+arg_4] +
mov eax [ecx+10h] +
mov ebx [edx+10h] +
sub eax ebx +
test eax eax +
jnz loc_47B389  +
shl ebx 2 +
add ecx 14h +
lea eax [ecx+ebx] +
lea edx [edx+ebx+14h] +
jmp loc_47B378  +
cmp ecx eax +
jnb loc_47B390  +
sub edx 4 +
sub eax 4 +
mov ebx [edx] +
cmp [eax] ebx +
jz loc_47B374  +
sbb eax eax +
or eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] ebx +
call sub_47B350  +
test eax eax +
jz loc_47B4E2  +
js loc_47B508  +
xor edi edi +
mov eax [esi+4] +
mov [esp+2Ch+var_2C] eax +
call sub_47AD00  +
test eax eax +
mov edx eax +
mov [esp+2Ch+var_10] eax +
jz loc_47B518  +
mov [eax+0Ch] edi +
mov eax [esi+10h] +
add esi 14h +
lea ebp [ebx+14h] +
lea edi [edx+14h] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_14] eax +
lea eax [esi+eax*4] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+10h] +
mov [esp+2Ch+var_20] 0 +
lea eax [ebp+eax*4+0] +
mov [esp+2Ch+var_18] eax +
lea esi [esi+0] +
add ebp 4 +
add esi 4 +
mov ecx [ebp-4] +
mov eax [esi-4] +
xor edx edx +
xor ebx ebx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+2Ch+var_24] +
sbb edx [esp+2Ch+var_20] +
add edi 4 +
mov [esp+2Ch+var_20] 0 +
mov ecx edx +
and ecx 1 +
cmp [esp+2Ch+var_18] ebp +
mov [esp+2Ch+var_24] ecx +
mov [edi-4] eax +
ja loc_47B420  +
cmp [esp+2Ch+var_1C] esi +
jbe loc_47B4AA  +
mov ebx [esp+2Ch+var_20] +
mov ecx [esp+2Ch+var_24] +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_24] esi +
nop   +
add esi 4 +
mov eax [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
add edi 4 +
mov ebp edx +
xor ebx ebx +
and ebp 1 +
cmp [esp+2Ch+var_1C] esi +
mov ecx ebp +
mov [edi-4] eax +
ja loc_47B470  +
mov ebp [esp+2Ch+var_24] +
mov edi [esp+2Ch+var_1C] +
mov ebx [esp+2Ch+var_18] +
not ebp  +
lea edx [ebp+edi+0] +
shr edx 2 +
lea edi [ebx+edx*4+4] +
test eax eax +
jnz loc_47B4CF  +
mov edx [esp+2Ch+var_14] +
mov eax edx +
shl eax 2 +
sub edi eax +
mov eax edx +
nop   +
lea esi [esi+0] +
sub eax 1 +
mov edx [edi+eax*4-4] +
test edx edx +
jz loc_47B4C0  +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov [eax+10h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0 +
call sub_47AD00  +
test eax eax +
jz loc_47B518  +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edi 1 +
mov esi ebx +
mov ebx eax +
jmp loc_47B3CB  +
xor eax eax +
jmp loc_47B4DA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
lea ebx [eax+14h] +
mov eax [eax+10h] +
lea ebp [ebx+eax*4] +
mov edx [ebp-4] +
lea esi [ebp-4] +
bsr eax edx +
xor eax 1Fh +
sub ecx eax +
cmp eax 0Ah +
mov [edi] ecx +
jg loc_47B590  +
mov ecx 0Bh +
mov edi edx +
sub ecx eax +
shr edi cl +
or edi 3FF00000h +
mov dword ptr [esp+20h+var_20+4] edi +
xor edi edi +
cmp ebx esi +
mov dword ptr [esp+20h+var_20] 0 +
jnb loc_47B579  +
mov edi [ebp-8] +
shr edi cl +
lea ecx [eax+15h] +
shl edx cl +
or edi edx +
mov dword ptr [esp+20h+var_20] edi +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
cmp ebx esi +
jnb loc_47B59C  +
mov edi [ebp-8] +
lea esi [ebp-8] +
mov ecx eax +
sub ecx 0Bh +
mov [esp+20h+var_14] ecx +
jz loc_47B5F0  +
movzx ecx byte ptr [esp+20h+var_14] +
mov ebp 2Bh +
sub ebp eax +
mov eax edi +
mov dword ptr [esp+20h+var_20] 0 +
shl edx cl +
mov ecx ebp +
shr eax cl +
or edx 3FF00000h +
or edx eax +
xor eax eax +
cmp esi ebx +
mov dword ptr [esp+20h+var_20+4] edx +
jbe loc_47B5D9  +
mov eax [esi-4] +
shr eax cl +
movzx ecx byte ptr [esp+20h+var_14] +
shl edi cl +
or eax edi +
mov dword ptr [esp+20h+var_20] eax +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or edx 3FF00000h +
mov dword ptr [esp+20h+var_20] edi +
mov dword ptr [esp+20h+var_20+4] edx +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
fld  [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] 1 +
fstp  [esp+1Ch+var_14] +
call sub_47AD00  +
test eax eax +
jz loc_47B705  +
mov ebx dword ptr [esp+1Ch+var_14+4] +
mov edi dword ptr [esp+1Ch+var_14] +
mov edx ebx +
and ebx 7FFFFFFFh +
and edx 0FFFFFh +
mov ecx edx +
shr ebx 14h +
or ecx 100000h +
test ebx ebx +
cmovnz edx ecx +
test edi edi +
jnz loc_47B6A0  +
bsf ecx edx +
shr edx cl +
test ebx ebx +
mov [eax+14h] edx +
lea esi [ecx+20h] +
mov edx 1 +
mov dword ptr [eax+10h] 1 +
jz loc_47B6D4  +
mov edi [esp+1Ch+arg_8] +
lea edx [esi+ebx-433h] +
mov [edi] edx +
mov edx 35h +
sub edx esi +
mov esi [esp+1Ch+arg_C] +
mov [esi] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsf esi edi +
mov ecx esi +
shr edi cl +
test esi esi +
jz loc_47B700  +
mov ecx 20h +
mov ebp edx +
sub ecx esi +
shl ebp cl +
mov ecx ebp +
or ecx edi +
mov [eax+14h] ecx +
mov ecx esi +
shr edx cl +
cmp edx 1 +
mov [eax+18h] edx +
sbb edx edx +
add edx 2 +
test ebx ebx +
mov [eax+10h] edx +
jnz loc_47B679  +
mov edi [esp+1Ch+arg_8] +
sub esi 432h +
bsr ecx [eax+edx*4+10h] +
shl edx 5 +
mov [edi] esi +
mov esi [esp+1Ch+arg_C] +
xor ecx 1Fh +
sub edx ecx +
mov [esi] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+14h] edi +
jmp loc_47B6C2  +
xor eax eax +
jmp loc_47B693  +
***
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
test cl cl +
mov [eax] cl +
jnz loc_47B724  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov esi [esp+28h+arg_4] +
lea ecx [edi+8] +
mov eax ecx +
imul  edx +
sar ecx 1Fh +
sar edx 1 +
sub edx ecx +
cmp edx 1 +
jle loc_47B81F  +
mov eax 1 +
xor ecx ecx +
add eax eax +
add ecx 1 +
cmp edx eax +
jg loc_47B776  +
mov [esp+28h+var_28] ecx +
call sub_47AD00  +
mov edx [esp+28h+arg_C] +
cmp esi 9 +
mov [eax+14h] edx +
mov dword ptr [eax+10h] 1 +
jle loc_47B810  +
lea ecx [ebx+9] +
add ebx esi +
mov [esp+28h+var_1C] ecx +
mov ebp ecx +
add ebp 1 +
movsx ecx byte ptr [ebp-1] +
mov [esp+28h+var_24] 0Ah +
mov [esp+28h+var_28] eax +
sub ecx 30h +
mov [esp+28h+var_20] ecx +
call sub_47AE40  +
cmp ebp ebx +
jnz loc_47B7A5  +
mov ebx [esp+28h+var_1C] +
lea ebx [ebx+esi-9] +
add ebx [esp+28h+arg_10] +
cmp edi esi +
jle loc_47B802  +
sub edi esi +
add edi ebx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movsx edx byte ptr [ebx-1] +
mov [esp+28h+var_24] 0Ah +
mov [esp+28h+var_28] eax +
sub edx 30h +
mov [esp+28h+var_20] edx +
call sub_47AE40  +
cmp ebx edi +
jnz loc_47B7E0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+28h+arg_10] +
lea ebx [ebx+esi+9] +
mov esi 9 +
jmp loc_47B7D3  +
xor ecx ecx +
jmp loc_47B77F  +
***
sub esp 34h +
mov esi [esp+34h+arg_0] +
lea eax [esp+34h+var_C] +
mov [esp+34h+var_30] eax +
mov ebx [esp+34h+arg_4] +
mov [esp+34h+var_34] esi +
call sub_47B520  +
lea eax [esp+34h+var_8] +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] ebx +
fst  [esp+34h+var_2C] +
fstp  [esp+34h+var_24] +
call sub_47B520  +
mov eax [esi+10h] +
sub eax [ebx+10h] +
mov edx [esp+34h+var_C] +
sub edx [esp+34h+var_8] +
shl eax 5 +
add eax edx +
fst  [esp+34h+var_1C] +
test eax eax +
fld  [esp+34h+var_24] +
jle loc_47B8A0  +
fstp  st +
shl eax 14h +
add dword ptr [esp+34h+var_2C+4] eax +
fld  [esp+34h+var_2C] +
add esp 34h +
fdivrp st(1) st +
pop ebx  +
pop esi  +
retn   +
fstp  st(1) +
shl eax 14h +
sub dword ptr [esp+34h+var_1C+4] eax +
fld  [esp+34h+var_1C] +
add esp 34h +
fdivp st(1) st +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [ebp+0] +
jmp loc_47B8E7  +
movzx ebx byte ptr [ecx] +
movsx eax bl +
sub ebx 41h +
cmp bl 19h +
lea edi [eax+20h] +
cmovbe eax edi +
cmp eax esi +
jnz loc_47B902  +
add edx 1 +
movsx esi byte ptr [edx-1] +
add ecx 1 +
test esi esi +
jnz loc_47B8D1  +
mov [ebp+0] ecx +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_0] +
mov ecx [edi+10h] +
lea edx [esi-1] +
sar edx 5 +
lea esi [eax+edx*4+4] +
lea edx [edi+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_47B96A  +
mov ecx eax +
lea esi [esi+0] +
add edx 4 +
mov ebp [edx-4] +
add ecx 4 +
cmp ebx edx +
mov [ecx-4] ebp +
ja loc_47B940  +
sub ebx edi +
lea edx [ebx-15h] +
shr edx 2 +
lea eax [eax+edx*4+4] +
cmp esi eax +
jbe loc_47B96E  +
add eax 4 +
mov dword ptr [eax-4] 0 +
cmp esi eax +
ja loc_47B960  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
lea edx [eax+14h] +
mov eax [eax+10h] +
sar ebx 5 +
cmp eax ebx +
jge loc_47B9C3  +
lea ebx [edx+eax*4] +
cmp edx ebx +
jnb loc_47B9BD  +
lea eax [ebx-4] +
mov ebx [ebx-4] +
test ebx ebx +
jz loc_47B9B9  +
jmp loc_47B9F0  +
sub eax 4 +
mov ecx [eax] +
test ecx ecx +
jnz loc_47B9F0  +
cmp edx eax +
jb loc_47B9B0  +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
jle loc_47B9E4  +
mov ecx [esp+arg_4] +
lea ebx [edx+ebx*4] +
and ecx 1Fh +
jz loc_47B99B  +
mov edi [ebx] +
mov eax 1 +
mov esi edi +
shr esi cl +
shl esi cl +
cmp esi edi +
jnz loc_47B9BF  +
jmp loc_47B99B  +
lea ebx [edx+ebx*4] +
jmp loc_47B99B  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esp+10h+arg_0] +
mov ecx [esp+10h+arg_4] +
mov edx [esi+10h] +
lea ebp [eax+14h] +
mov eax ecx +
sar eax 5 +
cmp eax edx +
jge loc_47BAB0  +
lea eax [ebp+eax*4+0] +
and ecx 1Fh +
lea edi [ebp+edx*4+0] +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ecx +
jz loc_47BAD0  +
mov esi [esp+10h+var_C] +
mov eax [esp+10h+var_10] +
mov [esp+10h+var_8] 20h +
sub [esp+10h+var_8] eax +
mov ebx [esi] +
lea edx [esi+4] +
mov ecx eax +
shr ebx cl +
cmp edi edx +
jbe loc_47BB0E  +
mov esi ebp +
mov [esp+10h+var_4] ebp +
mov ebp [esp+10h+var_8] +
lea esi [esi+0] +
mov eax [edx] +
mov ecx ebp +
add esi 4 +
add edx 4 +
shl eax cl +
movzx ecx byte ptr [esp+10h+var_10] +
or eax ebx +
mov [esi-4] eax +
mov ebx [edx-4] +
shr ebx cl +
cmp edi edx +
ja loc_47BA70  +
sub edi [esp+10h+var_C] +
mov ebp [esp+10h+var_4] +
lea eax [edi-5] +
shr eax 2 +
lea eax [ebp+eax*4+4] +
test ebx ebx +
mov [eax] ebx +
jz loc_47BAA9  +
add eax 4 +
sub eax ebp +
sar eax 2 +
jmp loc_47BAFB  +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+14h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi eax +
mov edx ebp +
jbe loc_47BAB0  +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
ja loc_47BAD6  +
mov eax [esp+10h+var_C] +
not eax  +
add eax edi +
shr eax 2 +
lea eax ds:4[eax*4] +
sar eax 2 +
mov esi [esp+10h+arg_0] +
test eax eax +
mov [esi+10h] eax +
jz loc_47BABB  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
jmp loc_47BAA0  +
***
mov ecx [eax+10h] +
lea edx [eax+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_47BB5A  +
mov ecx [eax+14h] +
xor eax eax +
test ecx ecx +
jz loc_47BB46  +
jmp loc_47BB52  +
mov ecx [edx] +
test ecx ecx +
jnz loc_47BB52  +
add edx 4 +
add eax 20h +
cmp ebx edx +
ja loc_47BB40  +
pop ebx  +
retn   +
bsf ecx ecx +
add eax ecx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebx+10h] +
cmp [eax+10h] ecx +
jge loc_47BB7D  +
mov [esp+2Ch+arg_0] ebx +
mov ebx eax +
mov eax [esp+2Ch+arg_0] +
lea ebp [ebx+14h] +
mov eax [eax+4] +
mov [esp+2Ch+var_2C] eax +
call sub_47AD00  +
mov ecx [esp+2Ch+arg_0] +
xor edx edx +
mov ecx [ecx+10h] +
mov [esp+2Ch+var_18] eax +
add eax 14h +
mov [eax-4] ecx +
mov edi [ebx+10h] +
mov [esp+2Ch+var_14] ecx +
mov ecx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_10] edi +
lea edi [eax+edi*4] +
add ecx 14h +
mov [esp+2Ch+var_1C] edi +
nop   +
lea esi [esi+0] +
mov esi [ebp+0] +
add ecx 4 +
add ebp 4 +
mov ebx [ecx-4] +
add eax 4 +
movzx edi si +
mov [esp+2Ch+var_20] edi +
movzx edi bx +
add edi [esp+2Ch+var_20] +
shr esi 10h +
shr ebx 10h +
add edi edx +
add ebx esi +
mov edx edi +
and edx 10000h +
shr edx 10h +
add ebx edx +
mov edx ebx +
and edx 10000h +
mov [eax-2] bx +
shr edx 10h +
mov [eax-4] di +
cmp [esp+2Ch+var_1C] eax +
ja loc_47BBC0  +
mov edi [esp+2Ch+arg_0] +
mov ebx [edi+10h] +
mov edi [esp+2Ch+var_1C] +
sub ebx [esp+2Ch+var_10] +
lea edi [edi+ebx*4] +
cmp edi eax +
jbe loc_47BC51  +
mov esi [ecx] +
add eax 4 +
add ecx 4 +
movzx ebx si +
add ebx edx +
mov edx ebx +
and edx 10000h +
shr edx 10h +
shr esi 10h +
add esi edx +
mov [eax-2] si +
mov edx esi +
mov [eax-4] bx +
shr edx 10h +
cmp edi eax +
ja loc_47BC23  +
test edx edx +
jz loc_47BC7A  +
mov eax [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ecx [eax+8] +
jz loc_47BC86  +
mov ecx [esp+2Ch+var_14] +
mov edi [esp+2Ch+var_18] +
mov eax ecx +
add eax 1 +
mov [edi+10h] eax +
mov dword ptr [edi+ecx*4+14h] 1 +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [eax+4] +
mov [esp+2Ch+var_20] eax +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_47AD00  +
mov edx [edi+10h] +
lea ecx ds:8[edx*4] +
lea edx [edi+0Ch] +
mov ebx eax +
lea eax [eax+0Ch] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
call sub_47ADD0  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_14] eax +
jmp loc_47BC62  +
***
push esi  +
push ebx  +
sub esp 3Ch +
call localeconv  +
cmp ds:byte_4DA3D0 0 +
mov ebp [eax] +
jz loc_47C173  +
mov eax [esp+3Ch+arg_C] +
mov dword ptr [eax] 0 +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
movzx ecx byte ptr [edx+2] +
lea edi [edx+2] +
cmp cl 30h +
jnz loc_47C2D0  +
add edx 3 +
xor eax eax +
mov edi edx +
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
cmp cl 30h +
jz loc_47BD20  +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47BDC4  +
movzx esi byte ptr [ebp+0] +
mov ebx esi +
test bl bl +
jz loc_47C409  +
movzx edx byte ptr [edi] +
cmp bl dl +
jnz loc_47C182  +
xor edx edx +
jmp loc_47BD69  +
cmp cl [edi+edx] +
jnz loc_47C180  +
add edx 1 +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_47BD60  +
add ebx edi +
movzx edx byte ptr [ebx] +
movzx ecx dl +
movzx ecx ds:byte_4DA3A0[ecx] +
test cl cl +
jz loc_47C274  +
cmp dl 30h +
mov edi ebx +
jnz loc_47BDAA  +
add edi 1 +
movzx edx byte ptr [edi] +
cmp dl 30h +
jz loc_47BD95  +
movzx eax dl +
movzx ecx ds:byte_4DA3A0[eax] +
xor eax eax +
test cl cl +
setz al  +
mov [esp+3Ch+var_28] eax +
mov eax esi +
mov esi ebx +
mov byte ptr [esp+3Ch+var_24] al +
mov eax 1 +
jmp loc_47BDE6  +
movzx edx byte ptr [edi] +
add eax 1 +
xor esi esi +
movzx ebx byte ptr [ebp+0] +
mov [esp+3Ch+var_28] 0 +
movzx ecx dl +
movzx ecx ds:byte_4DA3A0[ecx] +
mov byte ptr [esp+3Ch+var_24] bl +
test cl cl +
mov ebx edi +
jz loc_47BE02  +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx] +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47BDF0  +
cmp dl byte ptr [esp+3Ch+var_24] +
jz loc_47C1A0  +
test esi esi +
movzx edx byte ptr [ebx] +
jz loc_47C2C3  +
sub esi ebx +
lea esi ds:0[esi*4] +
mov [esp+3Ch+var_24] esi +
cmp dl 50h +
jz loc_47BF30  +
cmp dl 70h +
jz loc_47BF30  +
mov ecx ebx +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_1C] 0 +
test eax eax +
jz loc_47BF20  +
mov eax [esp+3Ch+arg_0] +
mov [eax] ecx +
mov esi [esp+3Ch+var_28] +
xor eax eax +
test esi esi +
jnz loc_47BF16  +
mov ecx [esp+3Ch+var_1C] +
test ecx ecx +
jz loc_47C000  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_4] +
test edx edx +
mov eax [eax+0Ch] +
jnz loc_47C1E1  +
cmp eax 2 +
jz loc_47C4AE  +
cmp eax 3 +
jz loc_47C49D  +
cmp eax 1 +
jz loc_47C25C  +
mov eax [esp+3Ch+arg_4] +
mov edi [eax] +
mov ebx edi +
and edi 1Fh +
sar ebx 5 +
cmp edi 1 +
mov esi ebx +
sbb esi 0FFFFFFFFh +
xor edx edx +
mov eax esi +
sar eax 1 +
jz loc_47BEC7  +
lea esi [esi+0] +
add edx 1 +
sar eax 1 +
jnz loc_47BEC0  +
mov [esp+3Ch+var_3C] edx +
call sub_47AD00  +
mov ecx [esp+3Ch+arg_C] +
xor edx edx +
test ebx ebx +
mov [ecx] eax +
mov [eax+10h] esi +
jle loc_47BEF1  +
nop   +
mov dword ptr [eax+edx*4+14h] 0FFFFFFFFh +
add edx 1 +
cmp edx ebx +
jnz loc_47BEE0  +
mov edx ebx +
cmp esi ebx +
jle loc_47BF04  +
mov ebx 20h +
mov ecx ebx +
sub ecx edi +
sar ebx cl +
mov [eax+edx*4+14h] ebx +
mov eax [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov [esi] eax +
mov eax 11h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+3Ch+arg_0] +
lea eax [edi-1] +
mov [esi] eax +
jmp loc_47BE56  +
movzx edx byte ptr [ebx+1] +
cmp dl 2Bh +
jz loc_47C2B3  +
cmp dl 2Dh +
jz loc_47C1B0  +
movzx edx ds:byte_4DA3A0[edx] +
lea esi [ebx+1] +
mov [esp+3Ch+var_20] 0 +
lea ecx [edx-1] +
cmp cl 18h +
ja loc_47C1D2  +
lea ecx [edx-10h] +
mov [esp+3Ch+var_18] ecx +
lea ecx [esi+1] +
movzx esi byte ptr [esi+1] +
movzx esi ds:byte_4DA3A0[esi] +
mov edx esi +
sub esi 1 +
movzx edx dl +
mov [esp+3Ch+var_1C] edx +
mov edx esi +
cmp dl 18h +
ja loc_47C614  +
mov [esp+3Ch+var_10] edi +
mov edx [esp+3Ch+var_18] +
xor esi esi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_14] ebp +
mov ebp eax +
test edx 0F8000000h +
mov eax 1 +
cmovnz esi eax +
add ecx 1 +
lea eax [edx+edx*4] +
lea edx [edi+eax*2-10h] +
movzx eax byte ptr [ecx] +
movzx eax ds:byte_4DA3A0[eax] +
movzx edi al +
sub eax 1 +
cmp al 18h +
jbe loc_47BFA4  +
mov eax ebp +
mov edi [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
mov [esp+3Ch+var_1C] esi +
mov [esp+3Ch+var_18] edx +
mov edx [esp+3Ch+var_18] +
mov esi edx +
neg esi  +
cmp [esp+3Ch+var_20] 0 +
cmovz esi edx +
add [esp+3Ch+var_24] esi +
jmp loc_47BE48  +
mov eax ebx +
xor edx edx +
sub eax edi +
sub eax 1 +
cmp eax 7 +
jle loc_47C01A  +
nop   +
sar eax 1 +
add edx 1 +
cmp eax 7 +
jg loc_47C010  +
mov [esp+3Ch+var_3C] edx +
call sub_47AD00  +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
cmp byte ptr [ebp+1] 0 +
mov [esp+3Ch+var_18] eax +
jz loc_47C4BF  +
xor eax eax +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [ebp+eax+1] 0 +
jnz loc_47C040  +
mov [esp+3Ch+var_20] eax +
cmp edi ebx +
jnb loc_47C4CC  +
mov eax [esp+3Ch+var_18] +
xor edx edx +
add ebp [esp+3Ch+var_20] +
mov [esp+3Ch+var_28] eax +
xor eax eax +
jmp loc_47C08D  +
cmp eax 20h +
jz loc_47C154  +
movzx ebx cl +
mov ecx eax +
add eax 4 +
movzx ebx ds:byte_4DA3A0[ebx] +
and ebx 0Fh +
shl ebx cl +
or edx ebx +
mov ebx esi +
cmp edi ebx +
jnb loc_47C0A3  +
movzx ecx byte ptr [ebx-1] +
lea esi [ebx-1] +
cmp cl [ebp+0] +
jnz loc_47C068  +
sub esi [esp+3Ch+var_20] +
mov ebx esi +
cmp edi ebx +
jb loc_47C08D  +
bsr eax edx +
xor eax 1Fh +
mov esi [esp+3Ch+var_28] +
lea edi [esi+4] +
mov [esi] edx +
mov esi [esp+3Ch+var_1C] +
sub edi [esp+3Ch+var_18] +
sar edi 2 +
mov [esi+10h] edi +
shl edi 5 +
sub edi eax +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax] +
cmp edi ebx +
jg loc_47C2D7  +
mov esi 0 +
jl loc_47C289  +
mov eax [esp+3Ch+arg_4] +
mov edi [esp+3Ch+var_24] +
cmp edi [eax+8] +
jg loc_47C250  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
cmp [esp+3Ch+var_24] eax +
jge loc_47C346  +
mov edi eax +
sub edi [esp+3Ch+var_24] +
cmp ebx edi +
jg loc_47C3A3  +
mov esi [esp+3Ch+arg_4] +
mov edx [esi+0Ch] +
cmp edx 2 +
jz loc_47C5A1  +
cmp edx 3 +
jz loc_47C57B  +
cmp edx 1 +
jz loc_47C5AE  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47ADD0  +
call _errno  +
mov dword ptr [eax] 22h +
add esp 3Ch +
mov eax 50h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_28] +
xor ecx ecx +
mov [eax] edx +
add eax 4 +
movzx ebx byte ptr [ebx-1] +
mov [esp+3Ch+var_28] eax +
xor edx edx +
mov eax 4 +
jmp loc_47C079  +
call sub_47CA20  +
jmp loc_47BCFB  +
mov edx esi +
mov ebx edi +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_28] 1 +
jmp loc_47BE24  +
test esi esi +
jz loc_47C4E0  +
movzx edx byte ptr [ebx] +
jmp loc_47BE17  +
mov [esp+3Ch+var_20] 1 +
movzx edx byte ptr [ebx+2] +
lea esi [ebx+2] +
movzx edx ds:byte_4DA3A0[edx] +
lea ecx [edx-1] +
cmp cl 18h +
jbe loc_47BF64  +
mov ecx ebx +
mov [esp+3Ch+var_1C] 0 +
jmp loc_47BE48  +
cmp eax 2 +
jz loc_47C392  +
cmp eax 3 +
jnz loc_47C13C  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_47C13C  +
mov [esp+3Ch+var_3C] 0 +
call sub_47AD00  +
mov [esp+3Ch+var_1C] eax +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 1 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov esi [esp+3Ch+arg_C] +
mov edi [esp+3Ch+var_1C] +
mov [esi] edi +
mov esi [esp+3Ch+arg_8] +
mov [esi] eax +
call _errno  +
mov dword ptr [eax] 22h +
mov eax 62h +
jmp loc_47BF16  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47ADD0  +
call _errno  +
mov dword ptr [eax] 22h +
add esp 3Ch +
mov eax 0A3h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_28] 1 +
jmp loc_47BE24  +
mov eax ebx +
sub eax edi +
mov edi eax +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47B240  +
sub [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
mov [esp+3Ch+var_18] eax +
jmp loc_47C0DE  +
mov [esp+3Ch+var_20] 0 +
jmp loc_47C1B8  +
movzx edx byte ptr [ebx] +
mov [esp+3Ch+var_24] 0 +
jmp loc_47BE24  +
xor eax eax +
jmp loc_47BD31  +
sub edi ebx +
mov [esp+3Ch+var_3C] esi +
xor esi esi +
mov [esp+3Ch+var_38] edi +
call sub_47B980  +
test eax eax +
jz loc_47C32D  +
mov ebp [esp+3Ch+var_18] +
lea ecx [edi-1] +
mov eax 1 +
mov edx ecx +
mov si 1 +
sar edx 5 +
shl eax cl +
test [ebp+edx*4+0] eax +
jz loc_47C32D  +
test ecx ecx +
jle loc_47C551  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_47B980  +
test eax eax +
jz loc_47C551  +
mov esi 3 +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_47BA00  +
add [esp+3Ch+var_24] edi +
jmp loc_47C0DE  +
mov edi 1 +
test esi esi +
jz loc_47C374  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+0Ch] +
cmp eax 2 +
jz loc_47C410  +
cmp eax 3 +
jz loc_47C41D  +
cmp eax 1 +
jz loc_47C55B  +
or edi 10h +
mov eax [esp+3Ch+arg_C] +
mov esi [esp+3Ch+var_1C] +
mov [eax] esi +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+var_24] +
mov [eax] esi +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+3Ch+arg_10] +
test ebp ebp +
jnz loc_47C13C  +
jmp loc_47C1FF  +
test esi esi +
lea ebp [edi-1] +
jnz loc_47C547  +
test ebp ebp +
jle loc_47C3C4  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call sub_47B980  +
mov esi eax +
mov ecx ebp +
mov edx ebp +
mov ebp [esp+3Ch+var_18] +
mov eax 1 +
shl eax cl +
mov ecx esi +
sar edx 5 +
or ecx 2 +
test [ebp+edx*4+0] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edi +
cmovnz esi ecx +
sub ebx edi +
mov edi 2 +
mov [esp+3Ch+var_3C] eax +
call sub_47BA00  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov [esp+3Ch+var_24] eax +
jmp loc_47C34B  +
xor ebx ebx +
jmp loc_47BD77  +
mov eax 1 +
sub eax [esp+3Ch+arg_10] +
mov [esp+3Ch+arg_10] eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_47C371  +
mov eax [esp+3Ch+var_1C] +
mov esi [eax+10h] +
mov [esp+3Ch+var_3C] eax +
call sub_477320  +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
cmp edi 2 +
jz loc_47C5DF  +
mov edi [esp+3Ch+var_1C] +
cmp esi [edi+10h] +
jl loc_47C469  +
and ebx 1Fh +
jz loc_47C493  +
bsr eax [eax+esi*4-4] +
mov edx 20h +
sub edx ebx +
xor eax 1Fh +
cmp edx eax +
jle loc_47C493  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_47BA00  +
mov eax [esp+3Ch+arg_4] +
add [esp+3Ch+var_24] 1 +
mov esi [esp+3Ch+var_24] +
cmp esi [eax+8] +
jg loc_47C250  +
mov edi 21h +
jmp loc_47C374  +
mov ebx [esp+3Ch+arg_10] +
test ebx ebx +
jnz loc_47C25C  +
jmp loc_47BE9E  +
mov esi [esp+3Ch+arg_10] +
test esi esi +
jz loc_47C25C  +
jmp loc_47BE9E  +
mov [esp+3Ch+var_20] 0 +
jmp loc_47C04E  +
mov eax [esp+3Ch+var_18] +
xor edx edx +
mov [esp+3Ch+var_28] eax +
mov eax 20h +
jmp loc_47C0A9  +
movzx edx byte ptr [ebp+1] +
test dl dl +
jz loc_47C621  +
cmp dl [ebx+1] +
jnz loc_47C2C0  +
mov edx 1 +
jmp loc_47C509  +
cmp cl [ebx+edx] +
jnz loc_47C2C0  +
add edx 1 +
movzx ecx byte ptr [ebp+edx+0] +
mov esi edx +
test cl cl +
jnz loc_47C500  +
add esi ebx +
movzx edx byte ptr [esi] +
mov ebx esi +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jz loc_47BE17  +
nop   +
add ebx 1 +
movzx edx byte ptr [ebx] +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47C530  +
jmp loc_47BE17  +
mov esi 1 +
jmp loc_47C3C4  +
mov esi 2 +
jmp loc_47C32D  +
test esi 2 +
jz loc_47C371  +
mov eax [esp+3Ch+var_18] +
or esi [eax] +
and esi 1 +
jnz loc_47C429  +
jmp loc_47C371  +
mov edx [esp+3Ch+arg_10] +
test edx edx +
jz loc_47C130  +
mov esi [esp+3Ch+var_1C] +
mov dword ptr [esi+10h] 1 +
mov esi [esp+3Ch+var_18] +
mov dword ptr [esi] 1 +
jmp loc_47C224  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_47C587  +
jmp loc_47C130  +
cmp edi ebx +
jnz loc_47C130  +
cmp ebx 1 +
jle loc_47C587  +
mov eax [esp+3Ch+var_1C] +
sub ebx 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_47B980  +
test eax eax +
jz loc_47C130  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
jmp loc_47C587  +
mov esi [esp+3Ch+arg_4] +
mov di 22h +
mov edx [esi] +
sub edx 1 +
cmp edx ebx +
jnz loc_47C374  +
mov esi ebx +
mov edx 1 +
sar esi 5 +
mov ecx ebx +
shl edx cl +
and edx [eax+esi*4] +
cmp edx 1 +
sbb edi edi +
not edi  +
add edi 22h +
jmp loc_47C374  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_47BFE2  +
mov esi 1 +
jmp loc_47C517  +
***
push esi  +
push ebx  +
sub esp 3Ch +
cmp ds:byte_4DA3D0 0 +
jz loc_47C99A  +
mov eax [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax] +
mov edx eax +
sar edx 5 +
and eax 1Fh +
lea edi [esi+edx*4] +
lea edx [edi+4] +
cmovz edx edi +
mov [esp+3Ch+var_10] eax +
lea eax [edx-4] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] edx +
mov dword ptr [edx-4] 0 +
mov eax [eax] +
movzx edx byte ptr [eax+1] +
lea ecx [edx-1] +
cmp cl 1Fh +
ja loc_47C696  +
add eax 1 +
movzx edx byte ptr [eax+1] +
lea ecx [edx-1] +
cmp cl 1Fh +
jbe loc_47C687  +
cmp dl 30h +
jz loc_47C9A4  +
movzx edx byte ptr [eax+1] +
mov edi [esp+3Ch+var_24] +
xor ebx ebx +
test edx edx +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_28] edi +
mov ebp edi +
lea edi [eax+1] +
jz loc_47C784  +
lea esi [esi+0] +
movzx ecx ds:byte_4DA3A0[edx] +
test cl cl +
jnz loc_47C815  +
cmp edx 20h +
ja loc_47C947  +
mov esi [esp+3Ch+var_2C] +
cmp [esp+3Ch+var_30] esi +
jle loc_47C851  +
cmp ebx 7 +
jg loc_47C764  +
cmp ebp [esp+3Ch+var_28] +
jnb loc_47C764  +
mov edx 8 +
mov ecx 20h +
sub edx ebx +
lea esi ds:0[edx*4] +
mov edx ebp +
mov ebx esi +
sub ecx esi +
mov esi [ebp+0] +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_28] +
mov [esp+3Ch+var_18] edi +
mov edi ebx +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_34] ebp +
mov ebp ecx +
jmp loc_47C739  +
mov esi eax +
mov eax [edx+4] +
mov ecx ebp +
add edx 4 +
mov ebx eax +
shl ebx cl +
mov ecx ebx +
or ecx esi +
mov [edx-4] ecx +
mov ecx edi +
shr eax cl +
mov [edx] eax +
cmp [esp+3Ch+var_34] edx +
ja loc_47C737  +
mov ebp [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp ebp [esp+3Ch+arg_8] +
ja loc_47C837  +
mov eax edi +
mov ebx 8 +
movzx edx byte ptr [eax+1] +
lea edi [eax+1] +
test edx edx +
jnz loc_47C6D0  +
mov esi [esp+3Ch+var_30] +
mov edi ebp +
mov eax 4 +
test esi esi +
jz loc_47C80D  +
cmp ebx 7 +
jle loc_47C8E1  +
cmp [esp+3Ch+arg_8] edi +
jnb loc_47C8B6  +
mov eax [esp+3Ch+arg_8] +
mov ecx [esp+3Ch+var_24] +
nop   +
add edi 4 +
mov edx [edi-4] +
add eax 4 +
cmp ecx edi +
mov [eax-4] edx +
jnb loc_47C7B0  +
mov edx ecx +
add eax 4 +
cmp edx eax +
mov dword ptr [eax-4] 0 +
jnb loc_47C7C2  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_24] edx +
mov eax [eax-4] +
test eax eax +
jnz loc_47C808  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+arg_8] eax +
jz loc_47C9CD  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+arg_8] +
jmp loc_47C7FF  +
cmp edx eax +
jz loc_47C9C9  +
sub eax 4 +
mov ecx [eax] +
test ecx ecx +
jz loc_47C7F7  +
mov eax 5 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
add [esp+3Ch+var_30] 1 +
cmp ebx 8 +
jg loc_47C894  +
mov eax [ebp+0] +
shl eax 4 +
and ecx 0Fh +
or ecx eax +
mov eax edi +
mov [ebp+0] ecx +
jmp loc_47C775  +
mov ebx [esp+3Ch+var_30] +
lea esi [ebp-4] +
mov dword ptr [ebp-4] 0 +
mov ebp esi +
mov [esp+3Ch+var_28] esi +
mov [esp+3Ch+var_2C] ebx +
xor ebx ebx +
movzx edx byte ptr [eax+2] +
mov eax edi +
cmp dl 20h +
ja loc_47C86C  +
lea esi [esi+0] +
add eax 1 +
movzx edx byte ptr [eax+1] +
cmp dl 20h +
jbe loc_47C860  +
cmp dl 30h +
jnz loc_47C775  +
movzx edx byte ptr [eax+2] +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_47C775  +
cmp byte ptr [eax+3] 21h +
lea edx [eax+2] +
cmovnb eax edx +
jmp loc_47C775  +
cmp ebp [esp+3Ch+arg_8] +
mov eax edi +
jbe loc_47C775  +
mov dword ptr [ebp-4] 0 +
xor eax eax +
sub ebp 4 +
mov ebx 1 +
jmp loc_47C828  +
mov ebx [esp+3Ch+var_10] +
test ebx ebx +
jz loc_47CA03  +
mov edi [esp+3Ch+var_14] +
mov ecx 20h +
mov eax 0FFFFFFFFh +
sub ecx [esp+3Ch+var_10] +
shr eax cl +
and eax [edi-4] +
mov [edi-4] eax +
jmp loc_47C7DB  +
cmp edi [esp+3Ch+var_28] +
jnb loc_47C79C  +
mov eax 8 +
mov esi 20h +
sub eax ebx +
mov ebx [edi] +
lea ebp ds:0[eax*4] +
mov eax edi +
sub esi ebp +
mov [esp+3Ch+var_30] edi +
mov edi [esp+3Ch+var_28] +
mov [esp+3Ch+var_34] esi +
jmp loc_47C914  +
mov ebx edx +
mov edx [eax+4] +
add eax 4 +
movzx ecx byte ptr [esp+3Ch+var_34] +
mov esi edx +
shl esi cl +
mov ecx esi +
or ecx ebx +
mov [eax-4] ecx +
mov ecx ebp +
shr edx cl +
mov [eax] edx +
cmp edi eax +
ja loc_47C912  +
mov edi [esp+3Ch+var_30] +
cmp [esp+3Ch+arg_8] edi +
jb loc_47C7A6  +
jmp loc_47C8B6  +
mov ecx [esp+3Ch+var_30] +
cmp edx 29h +
mov esi edi +
setz dl  +
mov edi ebp +
mov ebp esi +
test ecx ecx +
jnz loc_47C9E4  +
test dl dl +
jnz loc_47C987  +
lea ebp [eax+2] +
movsx eax byte ptr [eax+2] +
test eax eax +
jnz loc_47C982  +
jmp loc_47CA0F  +
add ebp 1 +
movsx eax byte ptr [ebp+0] +
test eax eax +
jz loc_47CA0F  +
cmp eax 29h +
jnz loc_47C973  +
mov edi [esp+3Ch+arg_0] +
lea eax [ebp+1] +
mov [edi] eax +
mov eax 4 +
jmp loc_47C80D  +
call sub_47CA20  +
jmp loc_47C644  +
movzx edx byte ptr [eax+2] +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_47C69F  +
movzx edx byte ptr [eax+3] +
cmp dl 20h +
jbe loc_47C69F  +
add eax 2 +
jmp loc_47C6A3  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_24] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dl dl +
jz loc_47C963  +
mov esi [esp+3Ch+arg_0] +
add eax 2 +
cmp ebx 7 +
mov [esi] eax +
jg loc_47C79C  +
jmp loc_47C8E1  +
mov eax [esp+3Ch+var_14] +
mov eax [eax-4] +
jmp loc_47C7DB  +
mov eax 4 +
jmp loc_47C80D  +
***
mov ecx offset a123456789 +
mov edx 10h +
mov eax 30h +
nop   +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CA30  +
mov ecx offset aBcdef +
mov edx 1Ah +
mov eax 61h +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CA52  +
mov ecx offset aBcdef_0 +
mov edx 1Ah +
mov eax 41h +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CA74  +
retn   +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4DA360 +
retn   +
***
jmp ds:raise  +
***
jmp ds:freopen  +
***
jmp ds:__setusermatherr  +
***
mov eax ds:dword_4DA364 +
mov eax [eax] +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 2 +
call setlocale  +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] eax +
call strchr  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_47CDDA  +
add edx 1 +
mov [esp+1Ch+var_1C] edx +
call atoi  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
test eax eax +
mov ebx eax +
jz loc_47CE45  +
mov esi ds:GetProcAddress +
mov [esp+18h+var_14] offset a___lc_codepage +
mov [esp+18h+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jz loc_47CE25  +
mov off_48376C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
mov [esp+18h+var_14] offset a__lc_codepage +
mov [esp+18h+var_18] ebx +
call esi  +
mov edx eax +
sub esp 8 +
test edx edx +
mov ds:dword_4DA364 eax +
mov eax offset loc_47CD90 +
jnz loc_47CE18  +
mov eax offset sub_47CDA0 +
mov off_48376C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
***
mov eax off_48376C +
jmp eax  +
***
mov eax ds:dword_4DA368 +
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4DA368 +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_set_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_47CE80 +
mov [ebp+arg_0] ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_483774 eax +
leave   +
jmp eax  +
***
sub esp 18h +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_get_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_47CE70 +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_483770 eax +
leave   +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_47D020  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_47D03A  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_47CFC2  +
cmp ecx esi +
jbe loc_47CFE4  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_47CFCA  +
cmp edx esi +
jbe loc_47D003  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_47CFDC  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_47CFF3  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_47CFCA  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_47D050  +
cmp ecx eax +
jbe loc_47D013  +
cmp edx esi +
jnb loc_47CFC6  +
xor esi esi +
mov ebx 1 +
jmp loc_47CFCA  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_47CFA6  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_47CFA6  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_47D0C0  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_47D0AF  +
cmp esi edx +
jz loc_47D0C0  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_47CFCA  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_47CFCA  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4740E0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474050  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4740A0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474120  +
add esp 1Ch +
retn   +
***
push edi  +
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474160  +
add esp 1Ch +
retn   +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_0] +
test esi esi +
jz loc_47D307  +
mov eax [esi] +
test eax eax +
jnz loc_47D2E7  +
jmp loc_47D2F9  +
mov eax ebx +
mov ebx [eax+10h] +
add eax 30h +
mov [esp+14h+var_14] eax +
call sub_471160  +
test ebx ebx +
jnz loc_47D2E5  +
mov [esp+14h+arg_0] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 24h +
movzx ebx byte ptr [eax+14h] +
cmp bl 0FFh +
jz loc_47D380  +
mov esi ebx +
and esi 7 +
mov ecx esi +
cmp cl 2 +
jz loc_47D376  +
jbe loc_47D362  +
mov ecx esi +
cmp cl 3 +
jz loc_47D366  +
lea ecx ds:0[edx*8] +
mov edx esi +
neg ecx  +
cmp dl 4 +
jnz loc_47D371  +
mov edx [eax+8] +
add ecx [eax+0Ch] +
movzx eax bl +
lea ebx [esp+24h+var_8] +
mov [esp+24h+var_24] ebx +
call sub_47D5F0  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
test cl cl +
jnz loc_47D371  +
lea ecx ds:0[edx*4] +
neg ecx  +
jmp loc_47D343  +
call abort  +
lea ecx [edx+edx] +
neg ecx  +
jmp loc_47D343  +
xor ecx ecx +
jmp loc_47D343  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [ecx] +
mov ecx edx +
mov [ebp+var_1C] eax +
mov eax [edx] +
call dword ptr [eax+8]  +
test al al +
jz loc_47D3B7  +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov ecx esi +
mov eax [eax+10h] +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ebx +
call eax  +
sub esp 0Ch +
test al al +
jz loc_47D3DE  +
mov edx [ebp+var_1C] +
mov [edi] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
xor eax eax +
push ebx  +
sub esp 1Ch +
test edi edi +
mov [esp+28h+var_1C] ecx +
jz loc_47D40D  +
mov [esp+28h+var_28] edi +
call sub_470EE0  +
mov ebx [esp+28h+var_1C] +
lea esi [ebp+1] +
mov [ebx] eax +
movzx edx byte ptr [ebp+0] +
cmp dl 0FFh +
jz loc_47D4B0  +
movzx ebp dl +
mov edx edi +
mov eax ebp +
call sub_47D540  +
lea edx [ebx+4] +
mov ecx esi +
mov [esp+28h+var_28] edx +
mov edx eax +
mov eax ebp +
call sub_47D5F0  +
mov esi eax +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
mov esi [esp+28h+var_1C] +
cmp al 0FFh +
mov [esi+14h] al +
jz loc_47D4C0  +
xor edi edi +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or edi eax +
test bl bl +
js loc_47D457  +
mov eax [esp+28h+var_1C] +
add edi edx +
mov [eax+0Ch] edi +
lea eax [edx+1] +
mov esi [esp+28h+var_1C] +
xor edi edi +
movzx edx byte ptr [edx] +
xor ecx ecx +
mov [esi+15h] dl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_47D488  +
mov esi [esp+28h+var_1C] +
add edi eax +
mov [esi+10h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+28h+var_1C] +
mov [edi+4] eax +
jmp loc_47D442  +
mov eax [esp+28h+var_1C] +
mov dword ptr [eax+0Ch] 0 +
jmp loc_47D477  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_1C] ecx +
not esi  +
add esi [eax+0Ch] +
xor edx edx +
xor ecx ecx +
lea esi [esi+0] +
add esi 1 +
movzx eax byte ptr [esi-1] +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or edx ebx +
test al al +
js loc_47D4F0  +
test edx edx +
jz loc_47D529  +
mov eax edi +
call sub_47D310  +
lea ecx [esp+28h+var_1C] +
mov edx ebp +
call sub_47D390  +
test al al +
jz loc_47D4E8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp al 0FFh +
jz loc_47D568  +
and eax 70h +
cmp al 20h +
jz loc_47D590  +
jbe loc_47D570  +
cmp al 40h +
jz loc_47D580  +
cmp al 50h +
jz loc_47D568  +
cmp al 30h +
jnz loc_47D578  +
mov [esp+1Ch+var_1C] edx +
call sub_470F00  +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
test al al +
jz loc_47D568  +
cmp al 10h +
jz loc_47D568  +
call abort  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] edx +
call sub_470EE0  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] edx +
call sub_470F10  +
add esp 1Ch +
retn   +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp al 50h +
mov [esp+34h+var_28] edx +
jz loc_47D6B5  +
mov eax esi +
and eax 0Fh +
cmp al 0Ch +
ja loc_47D6B0  +
movzx eax al +
jmp ds:off_4D3298[eax*4]  +
mov edx [ecx] +
lea ebx [ecx+4] +
test edx edx +
jz loc_47D63F  +
mov eax esi +
and eax 70h +
cmp al 10h +
mov eax esi +
cmovnz edi [esp+34h+var_28] +
add edx edi +
test al al +
jns loc_47D63F  +
mov edx [edx] +
mov eax [esp+34h+arg_0] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx] +
lea ebx [ecx+8] +
jmp loc_47D625  +
movsx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_47D625  +
lea edx [esp+34h+var_18] +
mov eax ecx +
call sub_47D290  +
mov edx [esp+34h+var_18] +
mov ebx eax +
jmp loc_47D625  +
xor edx edx +
mov ebx ecx +
mov ebp edx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx-1] +
mov eax edx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or ebp eax +
test dl dl +
js loc_47D680  +
mov edx ebp +
jmp loc_47D625  +
movzx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_47D625  +
call abort  +
lea ebx [ecx+3] +
mov eax [esp+34h+arg_0] +
and ebx 0FFFFFFFCh +
mov edx [ebx] +
add ebx 4 +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_482364 +
mov dword ptr [esp+40h] offset loc_47D715 +
mov [esp+44h] esp +
call sub_470D70  +
mov dword ptr [esp+20h] 1 +
call dword ptr [esp+60h]  +
call abort  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_47D734  +
sub eax 1 +
jz loc_47D74D  +
sub esp 0Ch +
call [esp+0Ch+arg_0]  +
call sub_480AE0  +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+0] ecx +
mov dword ptr [ecx] offset off_4D5890 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5890 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D58A8 +
call sub_480A70  +
mov [esp+18h+var_18] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D58A8 +
jmp sub_480A70  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D58E8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D58E8 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5908 +
call sub_47D7F0  +
mov [esp+18h+var_18] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5908 +
jmp sub_47D7F0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D5768 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5768 +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_4C64E0[eax] +
mov ebp ds:dword_4C64E0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E067  +
cmp edx 1 +
jz loc_47DFF2  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_47E071  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E060  +
cmp edx 1 +
jz loc_47E020  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_47E020  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_47E020  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_47E020  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_47DFF2  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_47DFF2  +
jmp loc_47E067  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_47E210  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_4C64E0[eax] +
mov ebx ds:dword_4C64E0[eax] +
mov ecx ds:dword_4C64EC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_47E265  +
cmp edx 1 +
jz loc_47E134  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_47E247  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_47E183  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_47E1B0  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E1D0  +
cmp edx 1 +
jnz loc_47E170  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_47E17E  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_47E17E  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_47E17E  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_47E203  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47E27A  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_47E270  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_47E0C1  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_47E290  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_47E0C1  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_47E12C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_47E12C  +
jmp loc_47E203  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_47E27A  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_47E203  +
xor eax eax +
jmp loc_47E203  +
***
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_4C64E0[eax] +
mov ebp ds:dword_4C64E0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E6E7  +
cmp edx 1 +
jz loc_47E672  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_47E6F1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E6E0  +
cmp edx 1 +
jz loc_47E6A0  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_47E6A0  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_47E6A0  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_47E6A0  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_47E672  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_47E672  +
jmp loc_47E6E7  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_47E890  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_4C64E0[eax] +
mov ebx ds:dword_4C64E0[eax] +
mov ecx ds:dword_4C64EC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_47E8E5  +
cmp edx 1 +
jz loc_47E7B4  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_47E8C7  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_47E803  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_47E830  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E850  +
cmp edx 1 +
jnz loc_47E7F0  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_47E7FE  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_47E7FE  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_47E7FE  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_47E883  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47E8FA  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_47E8F0  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_47E741  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_47E910  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_47E741  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_47E7AC  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_47E7AC  +
jmp loc_47E883  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_47E8FA  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_47E883  +
xor eax eax +
jmp loc_47E883  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_4C64E0[eax] +
mov eax ds:dword_4C64E0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47ED51  +
cmp edx 1 +
jz loc_47ECE9  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_47ED51  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47ED60  +
cmp edx 1 +
jz loc_47ED20  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_47ED20  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_47EEC5  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_4C64E0[eax] +
lea ebp dword_4C64E0[eax] +
mov ecx ds:dword_4C64EC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_47EEF4  +
cmp eax 1 +
jz loc_47EE28  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_47EF12  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_47EE45  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_47EEB0  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47EE70  +
cmp edx 1 +
jnz loc_47EE38  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_47EE40  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47EF18  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_47EF00  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_47ED9D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_47EF20  +
mov esi [esi+4] +
jmp loc_47ED9D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_47EF18  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_47EE9F  +
xor eax eax +
jmp loc_47EE9F  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_4C64E0[eax] +
mov eax ds:dword_4C64E0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F2D1  +
cmp edx 1 +
jz loc_47F269  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_47F2D1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F2E0  +
cmp edx 1 +
jz loc_47F2A0  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_47F2A0  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_47F445  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_4C64E0[eax] +
lea ebp dword_4C64E0[eax] +
mov ecx ds:dword_4C64EC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_47F474  +
cmp eax 1 +
jz loc_47F3A8  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_47F492  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_47F3C5  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_47F430  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F3F0  +
cmp edx 1 +
jnz loc_47F3B8  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_47F3C0  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47F498  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_47F480  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_47F31D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_47F4A0  +
mov esi [esi+4] +
jmp loc_47F31D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_47F498  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_47F41F  +
xor eax eax +
jmp loc_47F41F  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [ecx] +
mov [ebp+var_48] ecx +
mov ebx [eax+18h] +
mov ecx edi +
mov [ebp+var_50] edi +
mov edi [eax+4] +
lea esi [edi+edi*2] +
shl esi 2 +
add ecx esi +
mov [ebp+var_34] ecx +
mov ecx eax +
mov eax [eax+8] +
sub eax [ecx+0Ch] +
lea edx [eax+eax] +
cmp edi edx +
jb loc_47F65D  +
shl eax 3 +
cmp edi eax +
ja loc_47F654  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_47F67D  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jnz loc_47F6D8  +
mov [esp+68h+var_64] 0Ch +
mov [esp+68h+var_68] edi +
call sub_452A20  +
mov [ebp+var_30] eax +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_47F755  +
test edi edi +
jz loc_47F53D  +
mov ecx [ebp+var_30] +
lea edx [edi+edi*2] +
mov eax ecx +
lea edx [ecx+edx*4] +
nop   +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 0Ch +
cmp eax edx +
jnz loc_47F530  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_47F713  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_30] +
mov [ebp+var_4C] edi +
mov [eax+4] edi +
mov [eax] ecx +
mov ecx eax +
mov [eax+18h] ebx +
mov eax [eax+0Ch] +
shl ebx 4 +
sub [ecx+8] eax +
mov eax [ebp+var_50] +
mov dword ptr [ecx+0Ch] 0 +
mov [ebp+var_44] ebx +
mov edi eax +
mov esi [edi] +
test esi esi +
jz loc_47F628  +
cmp esi 1 +
jz loc_47F628  +
mov ebx [ebp+var_44] +
sar esi 3 +
mov eax ebx +
mov ebx ds:dword_4C64E0[ebx] +
add eax offset dword_4C64E0 +
mov ecx [eax+0Ch] +
mov [ebp+var_38] eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_40] ebx +
mov ebx eax +
mov eax esi +
mul  dword ptr [ebx+4] +
mov eax esi +
mov ebx esi +
mov [ebp+var_3C] ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp+var_30] +
shr eax cl +
imul eax [ebp+var_2C] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edx+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F618  +
mov ecx [ebp+var_38] +
mov eax esi +
mul  dword ptr [ecx+8] +
lea eax [esi+1] +
movzx ecx byte ptr [ebp+var_3C] +
sub esi edx +
shr esi 1 +
add esi edx +
mov edx [ebp+var_40] +
shr esi cl +
mov ecx [ebp+var_4C] +
sub edx 2 +
imul esi edx +
sub eax esi +
mov esi [ebp+var_30] +
lea esi [esi+0] +
add ebx eax +
mov edx ebx +
sub edx ecx +
cmp ecx ebx +
cmovbe ebx edx +
lea edx [ebx+ebx*2] +
lea edx [esi+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_47F600  +
mov eax edx +
mov edx [edi] +
mov [eax] edx +
mov edx [edi+4] +
mov [eax+4] edx +
mov edx [edi+8] +
mov [eax+8] edx +
add edi 0Ch +
cmp [ebp+var_34] edi +
ja loc_47F575  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
mov eax [ebp+var_50] +
mov [esp+68h+var_68] eax +
jz loc_47F706  +
call j_free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 20h +
jbe loc_47F4E4  +
mov [esp+68h+var_68] edx +
call sub_420690  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4C64E0[eax] +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jz loc_47F4F1  +
lea eax [edi+edi*2] +
mov ecx ds:dword_4D917C +
shl eax 2 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_48] +
mov [ebp+var_20] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_20] +
mov [esp+68h+var_68] eax +
call sub_47EC80  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_47F4F1  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
jbe loc_47F4F1  +
mov [eax+8] edx +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jz loc_47F4FE  +
lea eax [edi+edi*2] +
shl eax 2 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] eax +
call sub_40F620  +
mov [ebp+var_30] eax +
jmp loc_47F511  +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_48] +
mov ecx ds:dword_4D917C +
mov [ebp+var_1C] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] eax +
call sub_47EC80  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_47F54A  +
mov eax [eax+4] +
mov edx [eax] +
cmp esi edx +
ja loc_47F750  +
sub edx esi +
mov [eax] edx +
jmp loc_47F54A  +
call sub_482150  +
mov [esp+68h+var_60] offset aAlloc_entrie_3 +
mov [esp+68h+var_64] 28Eh +
mov [esp+68h+var_68] offset a____GccGccHa_1 +
call sub_424080  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+84h+var_84] ecx +
mov dword ptr [ecx] offset off_4D57A8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D57A8 +
retn   +
***
sub esp 18h +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
movzx eax byte ptr [eax+4] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_42A460  +
xor eax eax +
sub esp 8 +
leave   +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D57A8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D57A8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D57A8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D57A8 +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
mov edx [edx+4] +
mov [esp+1Ch+var_14] edx +
mov edx [eax+4] +
mov [esp+1Ch+var_18] edx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [ecx] +
mov esi [esp+10h+arg_0] +
lea eax [ebx+1] +
cmp ebx 2 +
mov [ecx] eax +
jle loc_47F8B0  +
mov eax [ecx+20h] +
sub ebx 3 +
test eax eax +
jz loc_47F8E8  +
mov edx [ecx+1Ch] +
cmp ebx edx +
jge loc_47F8C6  +
mov edx [esi] +
mov ecx [esi+4] +
mov [eax+ebx*8] edx +
mov [eax+ebx*8+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov eax [esi] +
mov edx [esi+4] +
mov [ecx+ebx*8+4] eax +
mov [ecx+ebx*8+8] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [edx+edx] +
shl edx 4 +
mov [ecx+1Ch] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_4] ecx +
call sub_452A70  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_47F897  +
mov dword ptr [ecx+1Ch] 10h +
mov [esp+10h+var_10] 80h +
mov [esp+10h+var_4] ecx +
call sub_4529F0  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_47F897  +
***
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov esi [esp+10h+arg_0] +
lea edx [eax+1] +
cmp eax 1 +
mov [ecx] edx +
jle loc_47F970  +
mov edx [ecx+10h] +
lea ebx [eax-2] +
test edx edx +
jz loc_47F980  +
mov eax [ecx+0Ch] +
cmp ebx eax +
jge loc_47F945  +
mov eax [esi] +
mov [edx+ebx*4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [eax+eax] +
shl eax 3 +
mov [ecx+0Ch] edi +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] ecx +
call sub_452A70  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_47F937  +
mov edx [esi] +
mov [ecx+eax*4+4] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov dword ptr [ecx+0Ch] 10h +
mov [esp+10h+var_10] 40h +
mov [esp+10h+var_4] ecx +
call sub_4529F0  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_47F937  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+14h] +
mov dword ptr [esp] 14h +
mov esi [ebp+10h] +
mov [ebp-3Ch] ecx +
call loc_480BB0  +
mov [eax] edi +
mov ebx eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] ebx +
mov [ebp-24h] edi +
mov [ebx+4] eax +
mov eax [ebp+18h] +
mov [ebx+8] eax +
mov eax [ebp+0Ch] +
mov [ebx+0Ch] eax +
mov eax esi +
mov [ebx+10h] al +
mov eax [ebp+8] +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov esi [eax+18h] +
lea eax [ebp-24h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_45CF40  +
mov ecx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-28h] ecx +
mov [esp+8] eax +
lea eax [ebp-28h] +
mov [esp] eax +
call sub_45CF40  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-2Ch] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_47DF80  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_47FB08  +
mov eax [ebp-2Ch] +
mov [esp] eax +
call sub_480B00  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-3Ch] +
lea ebx [ebp-30h] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47EC80  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_47FC14  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
mov dword ptr [esp] 10h +
call loc_480BB0  +
mov edx [ebp-2Ch] +
mov [ebp-44h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov eax [ebp-3Ch] +
mov eax [eax+18h] +
mov [ebp-40h] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_45CF40  +
mov edx [ebp-44h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-20h] +
mov [esp] eax +
mov [ebp-20h] ecx +
call sub_45CF40  +
mov edx [ebp-44h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-40h] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_47E0A0  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_47FC0C  +
mov edx [ebp-2Ch] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_47FAD4  +
***
mov eax [ebp-3Ch] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47ED80  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_47FC42  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
push esi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 20h +
call loc_480BB0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420690  +
mov [esp+1Ch+var_18] 8 +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C64E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452A20  +
test eax eax +
jz loc_47FFFF  +
test edi edi +
mov edx eax +
lea ecx [eax+edi*8] +
jz loc_47FEE0  +
mov dword ptr [edx] 0 +
add edx 8 +
cmp edx ecx +
jnz loc_47FED3  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+18h] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_480BB0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420690  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C64E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452A20  +
test eax eax +
jz loc_480037  +
test edi edi +
jz loc_47FF65  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_47FF58  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+1Ch] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_480BB0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420690  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C64E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452A20  +
test eax eax +
jz loc_48001B  +
test edi edi +
jz loc_47FFED  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
lea esi [esi+0] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_47FFE0  +
mov [esi] eax +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [ebx] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aAlloc_entrie_1 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424080  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_4 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424080  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_3 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424080  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [ecx] offset off_4D5948 +
call sub_480A40  +
mov [esp+38h+var_38] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5948 +
jmp sub_480A40  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5960 +
call sub_480A40  +
mov [esp+18h+var_18] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5960 +
jmp sub_480A40  +
***
lea eax [esp+68h+var_8] +
mov [esp+68h+var_2C] eax +
lea eax [esp+68h+var_4C] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_34] offset sub_4816D0 +
mov [esp+68h+var_30] offset dword_48239C +
mov [esp+68h+var_28] offset dword_480240 +
mov [esp+68h+var_24] esp +
call sub_470D70  +
cmp byte_4881B4 0 +
jnz loc_4801FD  +
mov byte_4881B4 1 +
call sub_481150  +
test eax eax +
jz loc_48025B  +
mov eax [eax+4] +
xor edx edx +
cmp byte ptr [eax] 2Ah +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
setz dl  +
add eax edx +
mov ecx eax +
mov [esp+68h+var_50] eax +
lea eax [esp+68h+var_C] +
mov [esp+68h+var_68] ecx +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_C] 0FFFFFFFFh +
mov [esp+68h+var_48] 0FFFFFFFFh +
call sub_46F5A0  +
mov [esp+68h+var_60] 30h +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCalle +
mov [esp+68h+var_54] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov eax ds:_iob +
add eax 40h +
cmp [esp+68h+var_C] 0 +
mov [esp+68h+var_64] eax +
jz loc_4801EF  +
mov eax [esp+68h+var_50] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2 +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset asc_4D339D +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
cmp [esp+68h+var_C] 0 +
jz loc_480232  +
mov [esp+68h+var_48] 1 +
call sub_481610  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
jmp loc_4801AB  +
mov eax ds:_iob +
mov [esp+68h+var_60] 1Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_0 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
call abort  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call free  +
jmp loc_4801E2  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_1 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call abort  +
call loc_4811B0  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call sub_471070  +
mov eax [esp+68h+var_54] +
sub edx 1 +
mov [esp+68h+var_68] eax +
jnz loc_480339  +
call sub_480F00  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
mov edx ds:_iob +
mov [esp+68h+var_60] 0Bh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aWhat +
mov [esp+68h+var_48] 2 +
mov [esp+68h+var_54] eax +
lea eax [edx+40h] +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov edx ds:_iob +
lea eax [edx+40h] +
mov [esp+68h+var_64] eax +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_68] 0Ah +
add eax 40h +
mov [esp+68h+var_64] eax +
call fputc  +
call loc_4811B0  +
jmp loc_48028B  +
lea esi [esi+0] +
call sub_480F00  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call loc_4811B0  +
jmp loc_48028B  +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4 +
call loc_480DC0  +
mov dword ptr [eax] offset off_4D5960 +
mov [esp+1Ch+var_14] offset sub_4800B0 +
mov [esp+1Ch+var_18] offset off_4D556C +
mov [esp+1Ch+var_1C] eax +
call sub_481670  +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
mov eax [esp+24h+var_18] +
mov esi [eax+4] +
mov eax [esp+24h+var_14] +
mov ecx [esi] +
mov ebx [eax+4] +
mov edx [ebx] +
cmp ecx edx +
setb al  +
cmp ecx edx +
jz loc_4803E3  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
cmp [esi+8] eax +
jz loc_4803F4  +
setb al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+4] +
cmp [esi+4] eax +
setb al  +
jmp loc_4803DD  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_480970  +
sub esp 4 +
test al al +
jnz loc_480422  +
cmp [ebp+arg_8] 3 +
jbe loc_480430  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx] +
mov ecx ebx +
mov edx [ebp+arg_4] +
mov eax [eax+14h] +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] edx +
call eax  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_8] +
mov [esp+18h+var_18] eax +
call sub_480970  +
sub esp 4 +
test al al +
jz loc_48047F  +
mov edx [ebp+arg_4] +
mov dword ptr [ebx+0Ch] 8 +
mov dword ptr [ebx+4] 6 +
mov [ebx] edx +
mov ebx [ebp+var_4] +
leave   +
retn 0Ch  +
***
push esi  +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
mov eax [ecx] +
lea esi [ebp+var_18] +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov edx [ebx] +
mov eax [eax+18h] +
mov [ebp+var_10] 10h +
mov [ebp+var_C] 0 +
mov [esp+28h+var_24] edx +
mov edx [ebp+arg_0] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] edx +
call eax  +
mov edx [ebp+var_14] +
xor eax eax +
and edx 6 +
sub esp 0Ch +
cmp edx 6 +
jnz loc_4804EB  +
mov eax [ebp+var_18] +
mov [ebx] eax +
mov eax 1 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov eax [esp+arg_4] +
cmp [esp+arg_C] eax +
setz al  +
movzx eax al +
lea eax [eax+eax*4+1] +
retn 10h  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_20] edi +
call sub_480450  +
mov edx [ebp+var_1C] +
sub esp 0Ch +
test al al +
jz loc_4805C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+18h] +
mov [ebp+arg_8] edi +
mov [ebp+arg_4] esi +
mov [ebp+arg_0] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [ebp+var_28] ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_C] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] edx +
mov ebx [ebp+arg_18] +
mov [ebp+var_20] edx +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_1C] eax +
call sub_480970  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_480648  +
mov eax [ebp+var_24] +
test edi edi +
mov [ebx] esi +
mov [ebx+4] eax +
js loc_480680  +
xor eax eax +
add esi edi +
cmp [ebp+var_1C] esi +
setz al  +
lea eax [eax+eax*4+1] +
mov [ebx+0Ch] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 1Ch  +
cmp esi [ebp+var_1C] +
jz loc_480690  +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov eax [ecx] +
mov eax [eax+1Ch] +
mov [ebp+arg_18] ebx +
mov ebx [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov esi [ebp+var_24] +
mov [ebp+arg_0] edi +
mov [ebp+arg_8] edx +
mov [ebp+arg_14] ebx +
mov ebx [ebp+var_2C] +
mov [ebp+arg_4] esi +
mov [ebp+arg_10] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
cmp edi 0FFFFFFFEh +
jnz loc_48063C  +
mov dword ptr [ebx+0Ch] 1 +
jmp loc_48063C  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_28] +
mov [ebp+var_20] edx +
mov [esp+38h+var_38] eax +
call sub_480970  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_48064D  +
mov eax [ebp+var_24] +
mov [ebx+8] eax +
jmp loc_48063C  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_8] +
cmp esi ebx +
mov [ebp+var_1C] eax +
jz loc_480700  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+20h] +
mov [ebp+arg_8] edi +
mov edi [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov [ebp+arg_4] ebx +
mov [ebp+arg_0] edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+28h+var_28] edi +
mov [ebp+var_20] edx +
call sub_480970  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_4806DE  +
lea esp [ebp-0Ch] +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
retn   +
***
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_48076C  +
add eax [ecx+8] +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
mov edx [ecx+8] +
mov [eax] edx +
mov eax 1 +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_4807BC  +
add eax [ecx+0Ch] +
retn 4  +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_470810  +
sub esp eax +
mov ebx ecx +
mov eax [esp+10h+arg_104C] +
mov ebp [eax+4] +
mov edi [eax+8] +
mov esi [eax] +
jmp loc_480806  +
lea esi [eax+4] +
mov [esp+10h+var_C] offset aGcc_0 +
mov [esp+10h+var_10] esi +
call strstr  +
test eax eax +
jnz loc_480803  +
mov [esp+10h+var_8] esi +
lea esi [esp+10h+arg_2C] +
mov [esp+10h] ebp +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] offset aSIS +
call sub_47D150  +
mov eax [ebx+14h] +
xor edx edx +
mov ecx [ebx+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov edi [ebx] +
mov [esp+10h+arg_5C] 0 +
mov [esp+10h+arg_18] eax +
mov eax [ebx+10h] +
mov dword ptr [esp+10h+arg_24] ecx +
fild  [esp+10h+arg_24] +
fld  ds:flt_4BFF40 +
mov [esp+10h+arg_14] eax +
mov eax [esp+10h+arg_1050] +
fmul st(1) st +
mov eax [eax+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov [esp+10h+arg_8] ecx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax [ebx+8] +
fild  [esp+10h+arg_24] +
fdivp st(2) st +
fxch  st(1) +
mov dword ptr [esp+10h+arg_24] edi +
mov [esp+10h+arg_4] eax +
mov eax [esp+10h+arg_1050] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
fstp  [esp+10h+arg_C] +
mov eax [eax] +
fild  [esp+10h+arg_24] +
fmulp st(1) st +
mov dword ptr [esp+10h+arg_24+4] edx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax ds:_iob +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_8] esi +
fild  [esp+10h+arg_24] +
fdivp st(1) st +
add eax 40h +
mov [esp+10h+var_C] offset a48s10li4_1f10l +
fstp  qword ptr [esp+10h] +
mov [esp+10h+var_10] eax +
call sub_47D120  +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
retn   +
***
retn   +
***
retn   +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_480970  +
sub esp 4 +
leave   +
retn 0Ch  +
***
retn 8  +
***
retn   +
***
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ecx +
jz loc_4809A8  +
mov edx [ecx+4] +
cmp byte ptr [edx] 2Ah +
jz loc_4809A0  +
mov eax [eax+4] +
xor ecx ecx +
cmp byte ptr [eax] 2Ah +
mov [esp+1Ch+var_1C] edx +
setz cl  +
add eax ecx +
mov [esp+1Ch+var_18] eax +
call strcmp  +
test eax eax +
jz loc_4809A8  +
xor eax eax +
add esp 1Ch +
retn 4  +
mov eax 1 +
add esp 1Ch +
retn 4  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D59A8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D59A8 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5990 +
call sub_480A40  +
mov [esp+18h+var_18] ebx +
call sub_480B00  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5990 +
jmp sub_480A40  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D59A8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D59A8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D59C8 +
call sub_480B00  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D59C8 +
retn   +
***
sub esp 1Ch +
mov eax off_4881AC +
mov [esp+1Ch+var_1C] eax +
call sub_47D790  +
mov edx [esp+1Ch+var_18] +
mov eax off_4881A8 +
mov off_4881A8 edx +
retn   +
***
mov edx [esp+4] +
mov eax off_4881AC +
mov off_4881AC edx +
retn   +
***
mov edx [esp+4] +
mov eax dword_4881B8 +
mov dword_4881B8 edx +
retn   +
***
sub esp 0Ch +
call sub_481450  +
mov eax [eax+4] +
test eax eax +
setnz al  +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+arg_0] +
test eax eax +
jz locret_480B10  +
jmp free  +
retn   +
***
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_4816D0 +
mov [esp+58h+var_20] offset dword_4822F0 +
mov [esp+58h+var_18] offset loc_480B81 +
mov [esp+58h+var_14] esp +
call sub_470D70  +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_38] 1 +
mov [esp+58h+var_58] eax +
call loc_480BB0  +
mov [esp+58h+var_40] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_470DD0  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
***
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_480B9C  +
call sub_471070  +
call loc_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_4822DC +
mov dword ptr [esp+40h] offset loc_480C6E +
mov [esp+44h] esp +
call sub_470D70  +
mov eax [esp+60h] +
test eax eax +
mov eax 1 +
cmovnz eax [esp+60h] +
mov [esp+60h] eax +
jmp loc_480C17  +
mov eax dword_4881B8 +
test eax eax +
jz loc_480C3C  +
mov dword ptr [esp+20h] 1 +
call eax  +
mov eax [esp+60h] +
mov [esp] eax +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_480C00  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_470DD0  +
mov eax [esp+18h] +
add esp 58h +
pop ebp  +
retn   +
***
mov dword ptr [esp] 4 +
call loc_480DC0  +
mov dword ptr [eax] offset off_4D5990 +
mov dword ptr [esp+8] offset sub_480A10 +
mov dword ptr [esp+4] offset off_4D5584 +
mov [esp] eax +
mov dword ptr [esp+20h] 1 +
call sub_481670  +
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_480C89  +
call sub_471070  +
call loc_480FC0  +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_482344 +
mov dword ptr [esp+40h] offset loc_480D85 +
mov [esp+44h] esp +
call sub_470D70  +
mov dword ptr [esp] 50h +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_480D05  +
call sub_481450  +
mov edi [esp+18h] +
mov ecx 14h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_470DD0  +
mov eax [esp+18h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_480D9C  +
mov edx dword_483784 +
xor ecx ecx +
mov eax edx +
jmp loc_480D3A  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_480D80  +
test al 1 +
jnz loc_480D30  +
mov eax 1 +
shl eax cl +
or eax edx +
mov dword_483784 eax +
lea eax [ecx+ecx*4] +
shl eax 4 +
add eax offset unk_4877A0 +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_480CD9  +
call sub_480390  +
lea esi [esi+0] +
call sub_480AE0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_480DA1  +
sub ecx 1 +
jz loc_480DA1  +
call sub_480360  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_480DB6  +
call sub_471070  +
call loc_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_482324 +
mov dword ptr [esp+40h] offset loc_480EC5 +
mov [esp+44h] esp +
call sub_470D70  +
mov eax [esp+60h] +
add eax 60h +
mov [esp] eax +
mov [esp+18h] eax +
call malloc  +
test eax eax +
mov [esp+14h] eax +
jz loc_480E47  +
call sub_481450  +
mov edi [esp+14h] +
mov ecx 18h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
mov edi [esp+14h] +
lea eax [esp+1Ch] +
mov [esp] eax +
add edi 60h +
mov [esp+14h] edi +
call sub_470DD0  +
mov eax [esp+14h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_480EDC  +
cmp dword ptr [esp+18h] 200h +
mov edx dword_483780 +
ja loc_480EC0  +
mov eax edx +
xor ecx ecx +
jmp loc_480E7F  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_480EC0  +
test al 1 +
jnz loc_480E75  +
mov eax 1 +
shl eax cl +
or eax edx +
shl ecx 9 +
mov dword_483780 eax +
lea eax dword_4837A0[ecx] +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+14h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_480E10  +
call sub_480390  +
nop   +
call sub_480AE0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_480EE1  +
sub ecx 1 +
jz loc_480EE1  +
push ebx  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_480FB0  +
mov [esp+18h+var_18] ebx +
call sub_480F00  +
mov eax [ebx] +
mov edx [ebx+4] +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
ja loc_480FB0  +
cmp eax 1 +
ja loc_480FB0  +
mov eax [ebx-24h] +
mov [esp+18h+var_18] eax +
call loc_47D6D0  +
lea esi [esi+0] +
call sub_480AE0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
***
push ebp  +
sub esp 88h +
lea eax [esp+80h] +
mov [esp+4Ch] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
mov dword ptr [esp+44h] offset sub_4816D0 +
mov dword ptr [esp+48h] offset dword_482314 +
mov dword ptr [esp+50h] offset loc_48105B +
mov [esp+54h] esp +
call sub_470D70  +
mov eax [esp+90h] +
mov [esp] eax +
call sub_480F00  +
mov eax [esp+90h] +
mov eax [eax-10h] +
mov [esp+20h] eax +
mov eax [esp+90h] +
mov eax [eax-18h] +
mov [esp+1Ch] eax +
mov eax [esp+90h] +
mov eax [eax-24h] +
mov [esp+24h] eax +
mov eax [esp+90h] +
mov eax [eax-0Ch] +
mov [esp+70h] eax +
mov eax [esp+90h] +
mov eax [eax-28h] +
mov dword ptr [esp+30h] 1 +
mov [esp] eax +
call sub_47D790  +
mov eax [esp+34h] +
mov [esp+28h] eax +
mov eax [esp+30h] +
test eax eax +
jz loc_481072  +
sub eax 1 +
jz loc_4810D1  +
sub esp 0Ch +
call sub_481450  +
mov eax [eax] +
test eax eax +
jz loc_481177  +
test byte ptr [eax+30h] 1 +
jnz loc_481170  +
mov eax [eax] +
add esp 0Ch +
retn   +
mov eax [eax] +
sub eax 50h +
jmp loc_481164  +
xor eax eax +
jmp loc_481166  +
***
sub esp 1Ch +
mov dword ptr [esp+8] 1Eh +
mov dword ptr [esp+4] offset aDeletedVirtual +
mov dword ptr [esp] 2 +
call _write  +
call sub_480AE0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
sub esp 18h +
call sub_481540  +
mov edx [eax] +
test edx edx +
jz loc_4811E7  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_4811F0  +
add edx 30h +
mov dword ptr [eax] 0 +
mov [esp] edx +
call sub_471160  +
add esp 18h +
pop ebx  +
retn   +
***
cmp ecx 1 +
ja loc_4811D6  +
mov ecx [edx+14h] +
test ecx ecx +
js loc_481210  +
sub ecx 1 +
jz loc_481220  +
cmp ecx 0FFFFFFFFh +
jz loc_481232  +
mov [edx+14h] ecx +
add esp 18h +
pop ebx  +
retn   +
***
add ecx 1 +
jnz loc_481206  +
mov ebx [edx+10h] +
mov [eax] ebx +
jmp loc_481206  +
***
mov ecx [edx+10h] +
add edx 30h +
mov [eax] ecx +
mov [esp] edx +
call sub_471160  +
jmp loc_4811E7  +
***
call sub_480AE0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_482354 +
mov dword ptr [esp+40h] offset loc_481301 +
mov [esp+44h] esp +
call sub_470D70  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset unk_4877A0 +
jb loc_48128C  +
cmp dword ptr [esp+60h] offset dword_4881A0 +
jb loc_4812A5  +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_470DD0  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset unk_4877A0 +
mov edx 0CCCCCCCDh +
mul  edx +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
mov [esp+18h] edx +
shr dword ptr [esp+18h] 6 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_481318  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_483784 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_481294  +
call sub_480390  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_48131D  +
sub ecx 1 +
jz loc_48131D  +
call sub_480360  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_481332  +
call sub_471070  +
call loc_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_4816D0 +
mov dword ptr [esp+38h] offset dword_482334 +
mov dword ptr [esp+40h] offset loc_4813FD +
mov [esp+44h] esp +
call sub_470D70  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset dword_4837A0 +
jb loc_48138C  +
cmp dword ptr [esp+60h] offset unk_4877A0 +
jb loc_4813A8  +
sub eax 60h +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_470DD0  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset dword_4837A0 +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 1 +
shr dword ptr [esp+18h] 9 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_481414  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_483780 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_481397  +
call sub_480390  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_481419  +
sub ecx 1 +
jz loc_481419  +
call sub_480360  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_48142E  +
call sub_471070  +
call loc_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+4] +
mov eax [eax-8] +
retn   +
***
lea eax [esp+58h+var_8] +
lea eax [esp+58h+var_8] +
mov eax [esp+arg_20] +
call sub_481450  +
mov edx [eax] +
add dword ptr [eax+4] 1 +
test edx edx +
jz loc_481653  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_481658  +
mov dword ptr [eax] 0 +
lea ebx [edx+30h] +
mov [esp+18h+var_18] ebx +
call sub_4710E0  +
mov [esp+18h+var_18] ebx +
call sub_480F00  +
call sub_480AE0  +
cmp ecx 1 +
ja loc_48163A  +
neg dword ptr [edx+14h]  +
jmp loc_481640  +
***
mov eax [esp+18h+arg_0] +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0ACh+arg_8] +
mov edx [esp+0ACh+arg_C] +
mov [esp+0ACh+var_58] offset sub_4816D0 +
mov [esp+0ACh+var_54] offset dword_482304 +
mov [esp+0ACh+var_94] eax +
lea eax [esp+0ACh+var_C] +
mov [esp+0ACh+var_50] eax +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_90] edx +
mov [esp+0ACh+var_4C] offset loc_481C27 +
mov [esp+0ACh+var_48] esp +
call sub_470D70  +
cmp [esp+0ACh+arg_0] 1 +
mov [esp+0ACh+var_34] 0 +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_8C] 3 +
jz loc_481760  +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
call sub_470DD0  +
mov eax [esp+0ACh+var_8C] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ACh+var_94] +
mov edx [esp+0ACh+var_90] +
mov byte ptr [esp+0ACh+var_94] 1 +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
jbe loc_481860  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_481873  +
cmp [esp+0ACh+arg_4] 6 +
jnz loc_481873  +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-18h] +
mov [esp+0ACh+var_88] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-10h] +
mov [esp+0ACh+var_7C] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-0Ch] +
cmp eax 1 +
mov [esp+0ACh+var_80] eax +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 3 +
test byte ptr [esp+0ACh+arg_4] 8 +
jz loc_4819E0  +
cmp eax 1 +
jz loc_481C33  +
mov edx [esp+0ACh+var_88] +
test edx edx +
js loc_481C38  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_A8] 0 +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_470E50  +
mov eax [esp+0ACh+var_88] +
mov [esp+0ACh+var_A8] 1 +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_470E50  +
mov eax [esp+0ACh+var_80] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_470EB0  +
mov [esp+0ACh+var_8C] 7 +
jmp loc_481745  +
cmp eax 1 +
setnbe byte ptr [esp+0ACh+var_94]  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_48178C  +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_AC] eax +
call sub_470ED0  +
test eax eax +
mov [esp+0ACh+var_7C] eax +
jz loc_481A60  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D3F0  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_8C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_47D540  +
mov [esp+0ACh+var_1C] eax +
lea eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_470E80  +
cmp [esp+0ACh+var_30] 1 +
mov esi eax +
sbb esi 0 +
test esi esi +
js loc_481A60  +
jz loc_481A6D  +
mov eax [esp+0ACh+var_8C] +
xor ebp ebp +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or ebp edx +
test bl bl +
js loc_481910  +
xor edi edi +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_481930  +
sub esi 1 +
jnz loc_481907  +
lea eax [ebp+1] +
test edi edi +
mov [esp+0ACh+var_80] eax +
jnz loc_481A7F  +
cmp [esp+0ACh+var_80] 0 +
jz loc_481A60  +
mov eax 2 +
mov [esp+0ACh+var_88] 0 +
mov [esp+0ACh+var_84] 0 +
test byte ptr [esp+0ACh+arg_4] 1 +
jz loc_4817CF  +
cmp eax 2 +
jz loc_481A60  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_8C] 6 +
jnz loc_481745  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+var_88] +
mov [eax-18h] esi +
mov esi [esp+0ACh+var_84] +
mov [eax-14h] esi +
mov esi [esp+0ACh+var_7C] +
mov [eax-10h] esi +
mov esi [esp+0ACh+arg_10] +
mov eax [esp+0ACh+var_34] +
mov [esi-8] eax +
mov eax esi +
mov esi [esp+0ACh+var_80] +
mov [eax-0Ch] esi +
jmp loc_481745  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_4817DD  +
cmp eax 1 +
jz loc_481C18  +
mov eax [esp+0ACh+var_88] +
test eax eax +
jns loc_4817F2  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D3F0  +
mov edx [esp+0ACh+arg_14] +
movzx eax [esp+0ACh+var_10] +
call sub_47D540  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_1C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_47D540  +
mov esi [esp+0ACh+arg_10] +
mov [esi-0Ch] eax +
jmp loc_4817F2  +
mov [esp+0ACh+var_8C] 8 +
jmp loc_481745  +
mov [esp+0ACh+var_80] 0 +
mov eax 1 +
jmp loc_48196B  +
mov eax [esp+0ACh+var_14] +
lea eax [eax+edi-1] +
mov edi [esp+0ACh+var_80] +
mov [esp+0ACh+var_84] eax +
test edi edi +
jz loc_481A60  +
test eax eax +
jz loc_481966  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_88] offset off_4D5538 +
and eax 8 +
mov [esp+0ACh+var_74] eax +
jnz loc_481AE9  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_88] offset off_4D554C +
jnz loc_481AE9  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+arg_10] +
add eax 20h +
test byte ptr [esi] 1 +
jz loc_481ADE  +
mov eax [esi-30h] +
mov [esp+0ACh+var_34] eax +
mov eax [eax-50h] +
mov [esp+0ACh+var_88] eax +
mov [esp+0ACh+var_75] 0 +
jmp loc_481B31  +
jle loc_481B64  +
lea eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D310  +
test eax eax +
jz loc_481BAC  +
mov esi [esp+0ACh+var_88] +
test esi esi +
jnz loc_481C02  +
mov eax [esp+0ACh+var_28] +
test eax eax +
jz loc_481BE5  +
add eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_84] +
lea edx [esp+0ACh+var_2C] +
call sub_47D290  +
lea edx [esp+0ACh+var_28] +
mov [esp+0ACh+var_8C] eax +
call sub_47D290  +
mov edx [esp+0ACh+var_2C] +
cmp edx 0 +
jnz loc_481AF0  +
mov [esp+0ACh+var_75] 1 +
jmp loc_481B1A  +
mov ebx [esp+0ACh+var_88] +
test ebx ebx +
jz loc_481B7B  +
mov ecx [esp+0ACh+var_74] +
test ecx ecx +
jnz loc_481B7B  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_481BC1  +
not edx  +
xor esi esi +
add edx [esp+0ACh+var_18] +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or esi eax +
test bl bl +
js loc_481B88  +
test esi esi +
setz al  +
test al al +
jz loc_481B1A  +
mov eax [esp+0ACh+var_2C] +
mov [esp+0ACh+var_88] eax +
mov eax 3 +
jmp loc_48197B  +
mov [esp+0ACh+var_AC] edx +
mov ecx [esp+0ACh+var_34] +
lea eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_88] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D4D0  +
xor eax 1 +
jmp loc_481BA4  +
cmp [esp+0ACh+var_75] 0 +
jz loc_481A60  +
mov [esp+0ACh+var_88] 0 +
mov eax 2 +
jmp loc_48197B  +
mov edx [esp+0ACh+var_88] +
lea ecx [esp+0ACh+var_34] +
call sub_47D390  +
test al al +
jnz loc_481BAC  +
jmp loc_481B1A  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_AC] eax +
call sub_480F70  +
mov eax [esp+0ACh+var_68] +
mov [esp+0ACh+var_AC] eax +
call sub_480F00  +
call sub_480AE0  +
mov [esp+0ACh+var_6C] 1 +
call sub_480A80  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
cmp byte_4881A4 0 +
jnz loc_481C61  +
mov byte_4881A4 0 +
retn   +
sub esp 1Ch +
mov eax dword_4881A0 +
mov [esp+0C8h+var_C8] eax +
call pthread_key_delete  +
mov byte_4881A4 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call sub_406C50  +
lea eax [ebp+arg_4] +
mov esi [ebp+arg_4] +
sub esp 4 +
mov [esp+18h+var_14] eax +
lea eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_459E10  +
mov eax [ebp+arg_4] +
cmp esi eax +
jz loc_481CBD  +
mov ds:byte_4D7264 1 +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov [esp+18h+var_18] eax +
call sub_406CD0  +
mov ecx ebx +
sub esp 8 +
call sub_406D30  +
mov ecx ebx +
call sub_406E60  +
mov ecx ebx +
call sub_40E070  +
mov eax [ebp+arg_4] +
mov ecx ebx +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call sub_4072D0  +
mov ecx ebx +
sub esp 4 +
call sub_407420  +
mov ecx ebx +
call sub_4075C0  +
mov ecx ebx +
call sub_4079C0  +
mov ecx ebx +
call sub_407A60  +
test eax eax +
jnz loc_481D21  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_4089A0  +
test al al +
jz loc_481D41  +
cmp ds:dword_4D70F8 0 +
mov eax 2 +
jnz loc_481D18  +
call sub_403C70  +
jmp loc_481D18  +
mov ecx ebx +
call sub_40D530  +
mov eax [ebp+arg_4] +
mov ecx ebx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call sub_40D9A0  +
mov ecx ebx +
push eax  +
call sub_408B50  +
jmp loc_481D2C  +
***
jmp loc_481D70  +
mov eax off_483588 +
mov dword_483030 3 +
mov dword_48304C 9 +
mov dword_483068 9 +
mov dword_483038 eax +
mov eax off_4835A0 +
mov dword_483084 0Bh +
mov dword_4830A0 9 +
mov dword_4830BC 3 +
mov dword_483054 eax +
mov eax off_483584 +
mov dword_4830D8 0Bh +
mov dword_4830F4 11h +
mov dword_483110 12h +
mov dword_483070 eax +
mov eax off_483524 +
mov dword_48312C 10h +
mov dword_483148 3 +
mov dword_48308C eax +
mov eax off_483520 +
mov dword_4830A8 eax +
mov eax off_48359C +
mov dword_4830C4 eax +
mov eax off_483530 +
mov dword_4830E0 eax +
mov eax off_48352C +
mov dword_4830FC eax +
mov eax off_483534 +
mov dword_483118 eax +
mov eax off_483538 +
mov dword_483134 eax +
mov eax off_483598 +
mov dword_483150 eax +
mov dword_483164 0Bh +
mov eax off_483528 +
mov dword_483180 7 +
mov dword_48319C 13h +
mov dword_4831B8 8 +
mov dword_48316C eax +
mov eax off_483594 +
mov dword_4831D4 7 +
mov dword_4831F0 4 +
mov dword_48320C 3 +
mov dword_483188 eax +
mov eax off_483590 +
mov dword_483228 9 +
mov dword_483244 6 +
mov dword_483260 9 +
mov dword_4831A4 eax +
mov eax off_48358C +
mov dword_48327C 0Dh +
mov dword_483298 7 +
mov dword_4831C0 eax +
mov eax off_483570 +
mov dword_4831DC eax +
mov eax off_483580 +
mov dword_4831F8 eax +
mov eax off_48357C +
mov dword_483214 eax +
mov eax off_483578 +
mov dword_483230 eax +
mov eax off_483574 +
mov dword_48324C eax +
mov eax off_48356C +
mov dword_483268 eax +
mov eax off_4835A8 +
mov dword_483284 eax +
mov eax ds:dword_4D7230 +
mov dword_4832A0 eax +
mov eax ds:dword_4D7168 +
mov dword_4832B4 8 +
mov dword_4832D0 11h +
mov dword_4832EC 0Eh +
mov dword_4832BC eax +
mov eax ds:dword_4D7160 +
mov dword_483308 10h +
mov dword_483324 13h +
mov dword_483340 10h +
mov dword_4832D8 eax +
mov eax off_4835B4 +
mov dword_48335C 0Eh +
mov dword_483378 6 +
mov dword_483394 12h +
mov dword_4832F4 eax +
mov eax ds:dword_4D7164 +
mov dword_4833B0 0Bh +
mov dword_4833CC 7 +
mov dword_483310 eax +
mov eax ds:dword_4D715C +
mov dword_48332C eax +
mov eax off_4835B0 +
mov dword_483348 eax +
mov eax ds:dword_4D7158 +
mov dword_483364 eax +
mov eax off_483568 +
mov dword_483380 eax +
mov eax off_483564 +
mov dword_48339C eax +
mov eax off_483560 +
mov dword_4833B8 eax +
mov eax off_48355C +
mov dword_4833D4 eax +
mov dword_4833E8 9 +
mov eax off_483558 +
mov dword_483404 0Bh +
mov dword_483420 0Eh +
mov dword_48343C 13h +
mov dword_4833F0 eax +
mov eax off_483550 +
mov dword_483458 15h +
mov dword_483474 15h +
mov dword_483490 0Ch +
mov dword_48340C eax +
mov eax off_4834F8 +
mov dword_4834AC 13h +
mov dword_4834C8 18h +
mov dword_4834E4 9 +
mov dword_483428 eax +
mov eax off_4834F4 +
mov dword_483444 eax +
mov eax off_4834F0 +
mov dword_483460 eax +
mov eax off_48354C +
mov dword_48347C eax +
mov eax off_483548 +
mov dword_483498 eax +
mov eax off_483544 +
mov dword_4834B4 eax +
mov eax off_483540 +
mov dword_4834D0 eax +
mov eax off_48353C +
mov dword_4834EC eax +
retn   +
***
lea ecx [esp+arg_0] +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_overhe +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMemS +
call sub_424080  +
nop   +
sub esp 1Ch +
mov ecx offset dword_4D9120 +
call sub_47FE60  +
mov [esp+38h+var_38] offset sub_41FAC0 +
call sub_46F8E0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_0 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_0 +
call sub_424080  +
nop   +
sub esp 1Ch +
mov ecx offset dword_4D9160 +
call sub_47FC60  +
mov [esp+38h+var_38] offset sub_420720 +
call sub_46F8E0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_1 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_1 +
call sub_424080  +
nop   +
mov ds:dword_4D9280 0 +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aMacro_real_tok +
mov [esp+1Ch+var_18] 439h +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_424080  +
nop   +
mov dword_4881B0 0FFFFFFFFh +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_47D2D0 +
mov [esp+1Ch+var_1C] offset dword_4881A0 +
mov byte_4881A4 0 +
call pthread_key_create  +
mov [esp+1Ch+var_1C] offset loc_481C50 +
test eax eax +
setz byte_4881A4  +
call sub_46F8E0  +
add esp 1Ch +
retn   +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_46F8E0  +
leave   +
retn   +
***
